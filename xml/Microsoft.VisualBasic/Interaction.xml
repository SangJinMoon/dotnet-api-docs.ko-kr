<Type Name="Interaction" FullName="Microsoft.VisualBasic.Interaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a258707b4384ccfe3e2a8bf0034b9587d97a5b3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39839876" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Interaction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Interaction extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Interaction" />
  <TypeSignature Language="VB.NET" Value="Public Module Interaction" />
  <TypeSignature Language="C++ CLI" Value="public ref class Interaction sealed" />
  <TypeSignature Language="F#" Value="type Interaction = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6decf-101">
        <see langword="Interaction" /> 모듈에는 개체, 응용 프로그램 및 시스템과 상호 작용하는 데 사용되는 프로시저가 포함되어 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6decf-101">The <see langword="Interaction" /> module contains procedures used to interact with objects, applications, and systems.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-102">이 모듈에는 Visual Basic 언어 키워드 및 다른 프로그램을 실행, 메서드 또는 속성을 호출, 컴퓨터에서 경고음 하 고, 명령줄 문자열을 제공 하 고, COM 개체를 조작 대화 상자를 제어 하는 런타임 라이브러리 멤버를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-102">This module supports the Visual Basic language keywords and run-time library members that run other programs, call a method or property, sound a beep from the computer, provide a command-line string, manipulate COM objects, and control dialog boxes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-103">다음 예제에서는 `Shell` 사용자가 지정한 응용 프로그램을 실행할 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-103">The following example uses the `Shell` function to run an application specified by the user.</span></span> <span data-ttu-id="6decf-104">지정 <xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType> 두 번째 인수가 보통 크기의 응용 프로그램 및 포커스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-104">Specifying <xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType> as the second argument opens the application in normal size and gives it the focus.</span></span>  
  
```vb  
Dim procID As Integer  
' Run calculator.  
procID = Shell("C:\Windows\system32\calc.exe", AppWinStyle.NormalFocus)  
' The preceding path is for Windows XP.  
' The Windows 2000 path is C:\WINNT\system32\calc.exe.  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AppActivate">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6decf-105">이미 실행 중인 응용 프로그램을 활성화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-105">Activates an application that is already running.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppActivate">
      <MemberSignature Language="C#" Value="public static void AppActivate (int ProcessId);" />
      <MemberSignature Language="ILAsm" Value=".method public static void AppActivate(int32 ProcessId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppActivate (ProcessId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AppActivate(int ProcessId);" />
      <MemberSignature Language="F#" Value="static member AppActivate : int -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.AppActivate ProcessId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProcessId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ProcessId">
          <span data-ttu-id="6decf-106">이 프로세스에 할당되는 Win32 프로세스 ID 번호를 지정하는 <see langword="Integer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-106">
              <see langword="Integer" /> specifying the Win32 process ID number assigned to this process.</span>
          </span>
          <span data-ttu-id="6decf-107">
            <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />에서 반환된 ID가 0이 아닐 경우 이 ID를 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-107">You can use the ID returned by the <see cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />, provided it is not zero.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-108">이미 실행 중인 응용 프로그램을 활성화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-108">Activates an application that is already running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-109">사용할 `AppActivate` 응용 프로그램의 활성 창에 포커스를 맞출 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-109">You use `AppActivate` to bring an application's active window into focus.</span></span> <span data-ttu-id="6decf-110">하지 핸들 또는 활성 창에 대 한 참조 하거나 지정 된 시점에 창이 활성 상태일 잘 모를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-110">You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</span></span> <span data-ttu-id="6decf-111">이러한 경우에 사용할 수 없습니다는 <xref:System.Windows.Forms.Control.Focus%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6decf-111">In such a case, you cannot use the <xref:System.Windows.Forms.Control.Focus%2A> method.</span></span>  
  
 <span data-ttu-id="6decf-112">`AppActivate` 함수 명명 된 응용 프로그램 또는 창으로 포커스를 변경 하지만 최대화 또는 최소화는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-112">The `AppActivate` function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</span></span> <span data-ttu-id="6decf-113">사용자가 포커스를 변경 하거나 창을 닫으면 일부 작업을 수행 하는 경우 활성화 된 응용 프로그램 창에서 포커스가 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-113">Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</span></span> <span data-ttu-id="6decf-114">사용할 수는 `Shell` 응용 프로그램을 시작 하 고 창 스타일을 설정 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-114">You can use the `Shell` function to start an application and set the window style.</span></span>  
  
 <span data-ttu-id="6decf-115">사용 하는 경우는 `Title` 매개 변수를 `AppActivate` 대/소문자 구분 비교를 사용 하지만 그렇지 않은 경우 제목 표시줄의 내용과 정확 하 게 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-115">If you use the `Title` parameter, `AppActivate` uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</span></span> <span data-ttu-id="6decf-116">먼저 한 다음 자식 창을 최상위 창을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-116">It first looks through the top-level windows and then through the child windows.</span></span> <span data-ttu-id="6decf-117">일치 하는 항목을 찾을 수 없으면 throw는 <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-117">If it cannot find a match, it throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="6decf-118">사용할 수 있습니다 `AppActivate` windows가 소유한 프로세스에 대해서만 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-118">You can use `AppActivate` only with processes that own windows.</span></span> <span data-ttu-id="6decf-119">대부분의 콘솔 응용 프로그램 목록에 나타나지 않는 의미를 처리 하는 windows를 소유 하지 않은 `AppActivate` 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-119">Most console applications do not own windows, which means that they do not appear in the list of processes that `AppActivate` searches.</span></span> <span data-ttu-id="6decf-120">콘솔 응용 프로그램을 실행 하는 경우 시스템 응용 프로그램을 실행 하는 별도 프로세스를 만들고 콘솔 프로세스 출력을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-120">When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</span></span> <span data-ttu-id="6decf-121">결과적으로 현재 프로세스 ID를 요청 하면 얻게 콘솔 응용 프로그램의 프로세스 id입니다. 대신이 별도 프로세스의 프로세스 ID</span><span class="sxs-lookup"><span data-stu-id="6decf-121">Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</span></span>  
  
 <span data-ttu-id="6decf-122">런타임 시 합니다 `AppActivate` 일치 하는 제목 사용 하 여 실행 중인 응용 프로그램을 활성화 하는 함수 `Title` 또는 일치 하는 프로세스 ID를 사용 하 여 `ProcessId`입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-122">At run time, the `AppActivate` function activates any running application with a title that matches `Title` or with a process ID that matches `ProcessId`.</span></span> <span data-ttu-id="6decf-123">제목 문자열이 끝나는 모든 응용 프로그램을 활성화 정확히 일치 하는 경우 `Title`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-123">If there is no exact match, it activates any application whose title string ends with `Title`.</span></span> <span data-ttu-id="6decf-124">명명 된 둘 이상의 응용 프로그램 인지 `Title`, `AppActivate` 활성화 하려면 하나를 함수 임의로 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-124">If there is more than one application named `Title`, the `AppActivate` function arbitrarily chooses one to activate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6decf-125">`AppActivate` 함수에는 필요 `UIPermission` 에 <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> 수준 부분 신뢰 상황에서 해당 실행에 영향을 줄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-125">The `AppActivate` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6decf-126">자세한 내용은 <xref:System.Security.Permissions.UIPermission>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="6decf-126">For more information, see <xref:System.Security.Permissions.UIPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-127">다양 한 용도 보여 주는이 예제는 `AppActivate` 응용 프로그램 창을 활성화 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-127">This example illustrates various uses of the `AppActivate` function to activate an application window.</span></span> <span data-ttu-id="6decf-128">이 예제에서는 throw Notepad 프로세스를 실행 하지 않는 경우는 <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-128">If a Notepad process is not running, the example throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6decf-129">`Shell` 절차에서는 응용 프로그램을 지정 된 경로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-129">The `Shell` procedure assumes the applications are in the paths specified.</span></span>  
  
 [!code-vb[VbVbalrCatRef#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="AppActivate">
      <MemberSignature Language="C#" Value="public static void AppActivate (string Title);" />
      <MemberSignature Language="ILAsm" Value=".method public static void AppActivate(string Title) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppActivate (Title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AppActivate(System::String ^ Title);" />
      <MemberSignature Language="F#" Value="static member AppActivate : string -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.AppActivate Title" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Title">
          <span data-ttu-id="6decf-130">활성화할 응용 프로그램의 제목 표시줄에 표시되는 제목을 지정하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-130">
              <see langword="String" /> expression specifying the title in the title bar of the application you want to activate.</span>
          </span>
          <span data-ttu-id="6decf-131">응용 프로그램이 시작될 때 응용 프로그램에 할당된 제목을 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-131">You can use the title assigned to the application when it was launched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-132">이미 실행 중인 응용 프로그램을 활성화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-132">Activates an application that is already running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-133">사용할 `AppActivate` 응용 프로그램의 활성 창에 포커스를 맞출 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-133">You use `AppActivate` to bring an application's active window into focus.</span></span> <span data-ttu-id="6decf-134">하지 핸들 또는 활성 창에 대 한 참조 하거나 지정 된 시점에 창이 활성 상태일 잘 모를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-134">You might not have a handle or a reference to the active window, or even know which window is active at a given moment.</span></span> <span data-ttu-id="6decf-135">이러한 경우에 사용할 수 없습니다는 <xref:System.Windows.Forms.Control.Focus%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6decf-135">In such a case, you cannot use the <xref:System.Windows.Forms.Control.Focus%2A> method.</span></span>  
  
 <span data-ttu-id="6decf-136">`AppActivate` 함수 명명 된 응용 프로그램 또는 창으로 포커스를 변경 하지만 최대화 또는 최소화는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-136">The `AppActivate` function changes the focus to the named application or window but does not affect whether it is maximized or minimized.</span></span> <span data-ttu-id="6decf-137">사용자가 포커스를 변경 하거나 창을 닫으면 일부 작업을 수행 하는 경우 활성화 된 응용 프로그램 창에서 포커스가 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-137">Focus moves away from the activated application window when the user takes some action to change the focus or close the window.</span></span> <span data-ttu-id="6decf-138">사용할 수는 `Shell` 응용 프로그램을 시작 하 고 창 스타일을 설정 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-138">You can use the `Shell` function to start an application and set the window style.</span></span>  
  
 <span data-ttu-id="6decf-139">사용 하는 경우는 `Title` 매개 변수를 `AppActivate` 대/소문자 구분 비교를 사용 하지만 그렇지 않은 경우 제목 표시줄의 내용과 정확 하 게 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-139">If you use the `Title` parameter, `AppActivate` uses a case-insensitive comparison but otherwise requires an exact match with the contents of the title bar.</span></span> <span data-ttu-id="6decf-140">먼저 한 다음 자식 창을 최상위 창을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-140">It first looks through the top-level windows and then through the child windows.</span></span> <span data-ttu-id="6decf-141">일치 하는 항목을 찾을 수 없으면 throw는 <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-141">If it cannot find a match, it throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="6decf-142">사용할 수 있습니다 `AppActivate` windows가 소유한 프로세스에 대해서만 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-142">You can use `AppActivate` only with processes that own windows.</span></span> <span data-ttu-id="6decf-143">대부분의 콘솔 응용 프로그램 목록에 나타나지 않는 의미를 처리 하는 windows를 소유 하지 않은 `AppActivate` 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-143">Most console applications do not own windows, which means that they do not appear in the list of processes that `AppActivate` searches.</span></span> <span data-ttu-id="6decf-144">콘솔 응용 프로그램을 실행 하는 경우 시스템 응용 프로그램을 실행 하는 별도 프로세스를 만들고 콘솔 프로세스 출력을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-144">When running from a console application, the system creates a separate process to run the application and returns the output to the console process.</span></span> <span data-ttu-id="6decf-145">결과적으로 현재 프로세스 ID를 요청 하면 얻게 콘솔 응용 프로그램의 프로세스 id입니다. 대신이 별도 프로세스의 프로세스 ID</span><span class="sxs-lookup"><span data-stu-id="6decf-145">Consequently, when you request the current process ID, you get the process ID of this separate process, rather than the console application's process ID.</span></span>  
  
 <span data-ttu-id="6decf-146">런타임 시 합니다 `AppActivate` 일치 하는 제목 사용 하 여 실행 중인 응용 프로그램을 활성화 하는 함수 `Title` 또는 일치 하는 프로세스 ID를 사용 하 여 `ProcessId`입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-146">At run time, the `AppActivate` function activates any running application with a title that matches `Title` or with a process ID that matches `ProcessId`.</span></span> <span data-ttu-id="6decf-147">제목 문자열이 끝나는 모든 응용 프로그램을 활성화 정확히 일치 하는 경우 `Title`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-147">If there is no exact match, it activates any application whose title string ends with `Title`.</span></span> <span data-ttu-id="6decf-148">명명 된 둘 이상의 응용 프로그램 인지 `Title`, `AppActivate` 활성화 하려면 하나를 함수 임의로 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-148">If there is more than one application named `Title`, the `AppActivate` function arbitrarily chooses one to activate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6decf-149">`AppActivate` 함수에는 필요 `UIPermission` 에 <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> 수준 부분 신뢰 상황에서 해당 실행에 영향을 줄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-149">The `AppActivate` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6decf-150">자세한 내용은 <xref:System.Security.Permissions.UIPermission>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="6decf-150">For more information, see <xref:System.Security.Permissions.UIPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-151">다양 한 용도 보여 주는이 예제는 `AppActivate` 응용 프로그램 창을 활성화 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-151">This example illustrates various uses of the `AppActivate` function to activate an application window.</span></span> <span data-ttu-id="6decf-152">이 예제에서는 throw Notepad 프로세스를 실행 하지 않는 경우는 <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-152">If a Notepad process is not running, the example throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6decf-153">`Shell` 절차에서는 응용 프로그램을 지정 된 경로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-153">The `Shell` procedure assumes the applications are in the paths specified.</span></span>  
  
 [!code-vb[VbVbalrCatRef#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Beep() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Beep" />
      <MemberSignature Language="VB.NET" Value="Public Sub Beep ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Beep();" />
      <MemberSignature Language="F#" Value="static member Beep : unit -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.Beep " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6decf-154">컴퓨터 스피커를 통해 소리를 냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-154">Sounds a tone through the computer's speaker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-155">피치 및 경고음의 지속 하드웨어 및 시스템 소프트웨어에 따라 다르며 컴퓨터.</span><span class="sxs-lookup"><span data-stu-id="6decf-155">The pitch and duration of the beep depend on your hardware and system software and therefore vary among computers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6decf-156">`Beep` 함수에는 필요 `UIPermission` 에 <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> 수준 부분 신뢰 상황에서 해당 실행에 영향을 줄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-156">The `Beep` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6decf-157">자세한 내용은 <xref:System.Security.Permissions.UIPermission>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="6decf-157">For more information, see <xref:System.Security.Permissions.UIPermission>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-158">이 예제에서는 `Beep` 함수를 컴퓨터 스피커를 통해 소리를 냅니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-158">This example uses the `Beep` function to sound a tone through the computer's speaker.</span></span>  
  
 [!code-vb[VbVbalrCatRef#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallByName">
      <MemberSignature Language="C#" Value="public static object CallByName (object ObjectRef, string ProcName, Microsoft.VisualBasic.CallType UseCallType, params object[] Args);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CallByName(object ObjectRef, string ProcName, valuetype Microsoft.VisualBasic.CallType UseCallType, object[] Args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CallByName (ObjectRef As Object, ProcName As String, UseCallType As CallType, ParamArray Args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CallByName(System::Object ^ ObjectRef, System::String ^ ProcName, Microsoft::VisualBasic::CallType UseCallType, ... cli::array &lt;System::Object ^&gt; ^ Args);" />
      <MemberSignature Language="F#" Value="static member CallByName : obj * string * Microsoft.VisualBasic.CallType * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.CallByName (ObjectRef, ProcName, UseCallType, Args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ObjectRef" Type="System.Object" />
        <Parameter Name="ProcName" Type="System.String" />
        <Parameter Name="UseCallType" Type="Microsoft.VisualBasic.CallType" />
        <Parameter Name="Args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ObjectRef">
          <span data-ttu-id="6decf-159">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-159">Required.</span>
          </span>
          <span data-ttu-id="6decf-160">
            <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-160">
              <see langword="Object" />.</span>
          </span>
          <span data-ttu-id="6decf-161">형식이며 속성이나 메서드를 노출하는 개체에 대한 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-161">A pointer to the object exposing the property or method.</span>
          </span>
        </param>
        <param name="ProcName">
          <span data-ttu-id="6decf-162">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-162">Required.</span>
          </span>
          <span data-ttu-id="6decf-163">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-163">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="6decf-164">형식이며 개체의 속성이나 메서드 이름이 포함된 문자열 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-164">A string expression containing the name of the property or method on the object.</span>
          </span>
        </param>
        <param name="UseCallType">
          <span data-ttu-id="6decf-165">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-165">Required.</span>
          </span>
          <span data-ttu-id="6decf-166">호출되는 프로시저 형식을 나타내는 <see cref="T:Microsoft.VisualBasic.CallType" /> 형식의 열거형 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-166">An enumeration member of type <see cref="T:Microsoft.VisualBasic.CallType" /> representing the type of procedure being called.</span>
          </span>
          <span data-ttu-id="6decf-167">
            <see langword="CallType" /> 값은 <see langword="Method" />, <see langword="Get" /> 또는 <see langword="Set" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-167">The value of <see langword="CallType" /> can be <see langword="Method" />, <see langword="Get" />, or <see langword="Set" />.</span>
          </span>
        </param>
        <param name="Args">
          <span data-ttu-id="6decf-168">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-168">Optional.</span>
          </span>
          <span data-ttu-id="6decf-169">
            <see langword="ParamArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-169">
              <see langword="ParamArray" />.</span>
          </span>
          <span data-ttu-id="6decf-170">형식이며 호출되는 속성이나 메서드에 전달될 인수가 포함된 매개 변수 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-170">A parameter array containing the arguments to be passed to the property or method being called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-171">개체의 메서드를 실행하거나 개체의 속성을 설정 또는 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-171">Executes a method on an object, or sets or returns a property on an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-172">개체의 메서드를 실행하거나 개체의 속성을 설정 또는 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-172">Executes a method on an object, or sets or returns a property on an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-173">`CallByName` 함수는 런타임 시 하는 데 사용할 속성, 속성을 설정 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-173">The `CallByName` function is used at runtime to get a property, set a property, or invoke a method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-174">다음 예제에서는 첫 번째 줄은 사용 `CallByName` 설정 하는 `Text` 입력란의 속성을 두 번째 줄의 값을 검색 하는 `Text` 속성 및 세 번째 줄은 호출는 `Move` 입력란을 이동 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="6decf-174">In the following example, the first line uses `CallByName` to set the `Text` property of a text box, the second line retrieves the value of the `Text` property, and the third line invokes the `Move` method to move the text box.</span></span>  
  
 [!code-vb[VbVbalrFunctions#99](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#99)]  
  
 [!code-vb[VbVbalrFunctions#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#20)]  
  
 <span data-ttu-id="6decf-175">다음 예제에서는 합니다 `CallByName` 함수를 호출 하는 `Add` 및 `Item` 컬렉션 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="6decf-175">The next example uses the `CallByName` function to invoke the `Add` and `Item` methods of a collection object.</span></span>  
  
 [!code-vb[VbVbalrFunctions#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6decf-176">
            <paramref name="UseCallType" /> 값이 잘못되었습니다. <see langword="Method" />, <see langword="Get" /> 또는 <see langword="Set" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-176">Invalid <paramref name="UseCallType" /> value; must be <see langword="Method" />, <see langword="Get" />, or <see langword="Set" />.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.CallType" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Choose">
      <MemberSignature Language="C#" Value="public static object Choose (double Index, params object[] Choice);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Choose(float64 Index, object[] Choice) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose (Index As Double, ParamArray Choice As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Choose(double Index, ... cli::array &lt;System::Object ^&gt; ^ Choice);" />
      <MemberSignature Language="F#" Value="static member Choose : double * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.Choose (Index, Choice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Double" />
        <Parameter Name="Choice" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="6decf-177">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-177">Required.</span>
          </span>
          <span data-ttu-id="6decf-178">
            <see langword="Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-178">
              <see langword="Double" />.</span>
          </span>
          <span data-ttu-id="6decf-179">1과 <c>Choice</c> 인수에 전달된 요소 수 사이의 값을 반환하는 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-179">Numeric expression that results in a value between 1 and the number of elements passed in the <c>Choice</c> argument.</span>
          </span>
        </param>
        <param name="Choice">
          <span data-ttu-id="6decf-180">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-180">Required.</span>
          </span>
          <span data-ttu-id="6decf-181">
            <see langword="Object" /> 매개 변수 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-181">
              <see langword="Object" /> parameter array.</span>
          </span>
          <span data-ttu-id="6decf-182">
            <see langword="Object" /> 데이터 형식, 쉼표로 구분된 <see langword="Object" /> 변수나 식의 목록 또는 <see langword="Object" /> 요소의 1차원 배열로 계산되는 단일 변수나 식을 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-182">You can supply either a single variable or an expression that evaluates to the <see langword="Object" /> data type, to a list of <see langword="Object" /> variables or expressions separated by commas, or to a single-dimensional array of <see langword="Object" /> elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-183">인수 목록에서 값을 선택하고 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-183">Selects and returns a value from a list of arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-184">인수 목록에서 값을 선택하고 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-184">Selects and returns a value from a list of arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-185">합니다 `Choose` 함수에 전달 된 목록의 멤버를 반환 합니다. `Choice()`의 값에 따라 `Index`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-185">The `Choose` function returns a member of the list passed in `Choice()`, based on the value of `Index`.</span></span> <span data-ttu-id="6decf-186">목록의 첫 번째 멤버를 선택한 경우 `Index` 1입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-186">The first member of the list is selected when `Index` is 1.</span></span> <span data-ttu-id="6decf-187">목록의 마지막 멤버를 선택한 경우 `Index` 됩니다 `UBound`(`Choice()`).</span><span class="sxs-lookup"><span data-stu-id="6decf-187">The last member of the list is selected when `Index` is `UBound`(`Choice()`).</span></span> <span data-ttu-id="6decf-188">하는 경우 `Index` 는이 범위를 벗어나면 `Choose` 반환 `Nothing`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-188">If `Index` is outside these limits, `Choose` returns `Nothing`.</span></span>  
  
 <span data-ttu-id="6decf-189">경우 `Index` 정수 아닙니다 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-189">If `Index` is not a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
 <span data-ttu-id="6decf-190">사용할 수 있습니다 `Choose` 가능성 목록의 값을 조회 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-190">You can use `Choose` to look up a value in a list of possibilities.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6decf-191">인수 목록의 식은 함수 호출을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-191">The expressions in the argument list can include function calls.</span></span> <span data-ttu-id="6decf-192">인수 목록에 대 한 호출에 대 한 준비 과정의 일부로 `Choose`, Visual Basic 컴파일러는 모든 식에서 모든 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-192">As part of preparing the argument list for the call to `Choose`, the Visual Basic compiler calls every function in every expression.</span></span> <span data-ttu-id="6decf-193">즉, 다른 식의 선택 하 여 호출 되지 않는 특정 함수를 사용할 수 없게 `Index`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-193">This means that you cannot rely on a particular function not being called if a different expression is selected by `Index`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-194">이 예제에서는 합니다 `Choose` 함수를 프로시저에 전달 되는 인덱스에 대 한 응답으로 이름을 표시 합니다 `Ind` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-194">This example uses the `Choose` function to display a name in response to an index passed into the procedure in the `Ind` parameter.</span></span>  
  
 [!code-vb[VbVbalrFunctions#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public static string Command ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string Command() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Command" />
      <MemberSignature Language="VB.NET" Value="Public Function Command () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Command();" />
      <MemberSignature Language="F#" Value="static member Command : unit -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Command " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6decf-195">Visual Basic으로 작성한 실행 가능한 프로그램 또는 Visual Basic을 시작하는 데 사용되는 명령줄의 인수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-195">Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</span>
          </span>
          <span data-ttu-id="6decf-196">
            <see langword="My" /> 기능을 사용하면 <see langword="Command" /> 함수보다 생산성 및 성능이 향상됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-196">The <see langword="My" /> feature provides greater productivity and performance than the <see langword="Command" /> function.</span>
          </span>
          <span data-ttu-id="6decf-197">자세한 내용은 <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-197">For more information, see <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-198">Visual Basic으로 작성한 실행 가능한 프로그램 또는 Visual Basic을 시작하는 데 사용되는 명령줄의 인수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-198">Returns the argument portion of the command line used to start Visual Basic or an executable program developed with Visual Basic.</span>
          </span>
          <span data-ttu-id="6decf-199">
            <see langword="My" /> 기능을 사용하면 <see langword="Command" /> 함수보다 생산성 및 성능이 향상됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-199">The <see langword="My" /> feature provides greater productivity and performance than the <see langword="Command" /> function.</span>
          </span>
          <span data-ttu-id="6decf-200">자세한 내용은 <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-200">For more information, see <see cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-201">인수를 반환 된 후에 공백, 앞쪽 이나 뒤쪽 슬래시, 하이픈 또는 분할 하거나 개별 매개 변수에 대 한 문자열을 검색 하려면 따옴표와 같은 일반 구분 기호에 대 한 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-201">After the arguments are returned, you can search for common delimiters, such as spaces, backward or forward slashes, hyphens, or quotation marks, to split or search the string for individual parameters.</span></span>  
  
 <span data-ttu-id="6decf-202">Visual Basic을 사용 하 여 개발 및.exe 파일 컴파일된 응용 프로그램에 대 한 합니다 `Command` 이 폼에 명령줄에서 응용 프로그램의 이름 뒤에 나오는 모든 인수를 반환 하는 함수: `MyApp(cmdlineargs)`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-202">For applications developed with Visual Basic and compiled to an .exe file, the `Command` function returns any arguments that appear after the name of the application on the command line, in this form: `MyApp(cmdlineargs)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-203">이 예제에서는 `Command` 함수 배열을 포함 하는 개체에 명령줄 인수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-203">This example uses the `Command` function to return the command-line arguments in an object that contains an array.</span></span>  
  
 [!code-vb[VbVbalrCatRef#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Environment.GetCommandLineArgs" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public static object CreateObject (string ProgId, string ServerName = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CreateObject(string ProgId, string ServerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (ProgId As String, Optional ServerName As String = &quot;&quot;) As Object" />
      <MemberSignature Language="F#" Value="static member CreateObject : string * string -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.CreateObject (ProgId, ServerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="ServerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ProgId">
          <span data-ttu-id="6decf-204">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-204">Required.</span>
          </span>
          <span data-ttu-id="6decf-205">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-205">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="6decf-206">만들 개체의 프로그램 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-206">The program ID of the object to create.</span>
          </span>
        </param>
        <param name="ServerName">
          <span data-ttu-id="6decf-207">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-207">Optional.</span>
          </span>
          <span data-ttu-id="6decf-208">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-208">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="6decf-209">개체가 만들어질 네트워크 서버의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-209">The name of the network server where the object will be created.</span>
          </span>
          <span data-ttu-id="6decf-210">
            <c>ServerName</c>이 빈 문자열("")이면 로컬 컴퓨터가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-210">If <c>ServerName</c> is an empty string (""), the local computer is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-211">COM 개체를 만들고 만든 개체에 대한 참조를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-211">Creates and returns a reference to a COM object.</span>
          </span>
          <span data-ttu-id="6decf-212">클래스가 명시적으로 COM 구성 요소로 노출되지 않는 경우 Visual Basic에서 <see langword="CreateObject" />를 사용하여 해당 클래스의 인스턴스를 만들 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-212">
              <see langword="CreateObject" /> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-213">COM 개체를 만들고 만든 개체에 대한 참조를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-213">Creates and returns a reference to a COM object.</span>
          </span>
          <span data-ttu-id="6decf-214">클래스가 명시적으로 COM 구성 요소로 노출되지 않는 경우 Visual Basic에서 <see langword="CreateObject" />를 사용하여 해당 클래스의 인스턴스를 만들 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-214">
              <see langword="CreateObject" /> cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-215">COM 구성 요소의 인스턴스를 만들려면 반환 하는 개체를 할당 `CreateObject` 개체 변수에:</span><span class="sxs-lookup"><span data-stu-id="6decf-215">To create an instance of a COM component, assign the object returned by `CreateObject` to an object variable:</span></span>  
  
```vb  
Sub CreateADODB()  
   Dim adoApp As Object  
   adoApp = CreateObject("ADODB.Connection")  
End Sub  
```  
  
 <span data-ttu-id="6decf-216">사용 하 여 반환된 된 개체를 저장 하는 개체 변수의 형식을 응용 프로그램의 성능이 저하 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-216">The type of object variable you use to store the returned object can affect your application's performance.</span></span> <span data-ttu-id="6decf-217">사용 하 여 개체 변수 선언 된 `As Object` 절 모든 형식의 개체에 대 한 참조를 포함할 수 있는 변수를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-217">Declaring an object variable with the `As Object` clause creates a variable that can contain a reference to any type of object.</span></span> <span data-ttu-id="6decf-218">그러나 해당 변수를 통해 개체에 대 한 액세스는 *바인딩된*, 프로그램이 실행 되 면 바인딩이 발생 하는, 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-218">However, access to the object through that variable is *late-bound*, that is, the binding occurs when your program runs.</span></span> <span data-ttu-id="6decf-219">응용 프로그램 성능 저하를 포함 하 여 런타임에 바인딩을 사용 하면 안 되는 많은 이유가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-219">There are many reasons you should avoid late binding, including slower application performance.</span></span>  
  
 <span data-ttu-id="6decf-220">초기 바인딩 초래 하는 개체 변수를 만들 수 있습니다-즉, 프로그램이 컴파일될 때 바인딩.</span><span class="sxs-lookup"><span data-stu-id="6decf-220">You can create an object variable that results in early binding—that is, binding when the program is compiled.</span></span> <span data-ttu-id="6decf-221">이렇게 하려면에서 개체에 대 한 형식 라이브러리에 대 한 참조를 추가 합니다 **COM** 탭을 **참조 추가** 대화 상자에서를 **프로젝트** 메뉴.</span><span class="sxs-lookup"><span data-stu-id="6decf-221">To do so, add a reference to the type library for your object from the **COM** tab of the **Add Reference** dialog box on the **Project** menu.</span></span> <span data-ttu-id="6decf-222">개체의 특정 형식의 개체 변수를 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-222">Then declare the object variable of the specific type of your object.</span></span> <span data-ttu-id="6decf-223">대부분의 경우에서 보다 효율적으로 사용할 것을 `Dim` 문과 주 interop 어셈블리를 사용 하는 것 보다 개체를 만들 수는 `CreateObject` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-223">In most cases, it is more efficient to use the `Dim` statement and a primary interop assembly to create objects than it is to use the `CreateObject` function.</span></span>  
  
## <a name="interacting-with-unmanaged-code"></a><span data-ttu-id="6decf-224">비관리 코드와 상호 작용</span><span class="sxs-lookup"><span data-stu-id="6decf-224">Interacting with Unmanaged Code</span></span>  
 <span data-ttu-id="6decf-225">또 다른 문제는 COM 개체가 비관리 코드를 사용 하는 등 공용 언어 런타임 활용 하지 않고 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-225">Another issue is that COM objects use unmanaged code — code without the benefit of the common language runtime.</span></span> <span data-ttu-id="6decf-226">Com에서 관리 되지 않는 코드를 사용 하 여 Visual Basic의 관리 되는 코드를 섞는 데 수반 되는 상당수의 복잡성은</span><span class="sxs-lookup"><span data-stu-id="6decf-226">There is a fair degree of complexity involved in mixing the managed code of Visual Basic with unmanaged code from COM.</span></span> <span data-ttu-id="6decf-227">COM 개체, 해당 라이브러리에 대 한 주 interop 어셈블리 (PIA)에 대 한 Visual Basic 검색에 대 한 참조를 추가 하는 경우 를 찾은 다음 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-227">When you add a reference to a COM object, Visual Basic searches for a primary interop assembly (PIA) for that library; if it finds one, then it uses it.</span></span> <span data-ttu-id="6decf-228">그런 다음 PIA를 찾지 못하면 각 클래스는 COM 라이브러리에 대 한 로컬 상호 운용성 클래스를 포함 하는 상호 운용성 어셈블리를 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-228">If it does not find a PIA, then it creates an interoperability assembly that contains local interoperability classes for each class in the COM library.</span></span> <span data-ttu-id="6decf-229">자세한 내용은 [.NET Framework 응용 프로그램의 COM 상호 운용성](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-229">For more information, see [COM Interoperability in .NET Framework Applications](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md).</span></span>  
  
 <span data-ttu-id="6decf-230">일반적으로 강력 하 게 바인딩된 개체 및 가능 하면 주 interop 어셈블리를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-230">You should generally use strongly bound objects and primary interop assemblies whenever possible.</span></span> <span data-ttu-id="6decf-231">사용 하 여 아래 예제는 `CreateObject` 으로만 데모에 대 한 Microsoft Office 개체를 사용 하 여 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-231">The examples below use the `CreateObject` function with Microsoft Office objects for demonstration purposes only.</span></span> <span data-ttu-id="6decf-232">그러나 이러한 개체는 사용 하기 쉽고 안정적 적절 한 주 interop 어셈블리를 사용 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="6decf-232">However, these objects are easier to use and more reliable when used with the appropriate primary interop assembly.</span></span>  
  
## <a name="creating-an-object-on-a-remote-computer"></a><span data-ttu-id="6decf-233">원격 컴퓨터 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="6decf-233">Creating an Object on a Remote Computer</span></span>  
 <span data-ttu-id="6decf-234">컴퓨터의 이름을 전달 하 여 원격 네트워크에 연결 된 컴퓨터 개체를 만들 수는 `ServerName` 의 인수는 `CreateObject` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-234">You can create an object on a remote networked computer by passing the name of the computer to the `ServerName` argument of the `CreateObject` function.</span></span> <span data-ttu-id="6decf-235">해당 이름은 컴퓨터 이름 부분 공유 이름와 동일: 공유 이름의 "\\\MyServer\Public," `ServerName` 는 "MyServer"로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-235">That name is the same as the Machine Name portion of a share name: for a share named "\\\MyServer\Public," `ServerName` is "MyServer."</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6decf-236">COM 설명서를 참조 하세요 (Microsoft Developer Network 참조) 원격 네트워크에 연결 된 컴퓨터에서 응용 프로그램을 액세스할 수 있도록 대 한 자세한 내용은 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-236">Refer to COM documentation (see Microsoft Developer Network) for additional information on making an application accessible on a remote networked computer.</span></span> <span data-ttu-id="6decf-237">응용 프로그램에 대 한 레지스트리 키를 추가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-237">You may need to add a registry key for your application.</span></span>  
  
 <span data-ttu-id="6decf-238">다음 코드는 라는 원격 컴퓨터에서 실행 중인 Excel의 인스턴스의 버전 번호를 반환 `MyServer`:</span><span class="sxs-lookup"><span data-stu-id="6decf-238">The following code returns the version number of an instance of Excel running on a remote computer named `MyServer`:</span></span>  
  
```vb  
Sub CreateRemoteExcelObj()  
    Dim xlApp As Object  
    ' Replace string "\\MyServer" with name of the remote computer.  
    xlApp = CreateObject("Excel.Application", "\\MyServer")  
    MsgBox(xlApp.Version)  
End Sub  
```  
  
 <span data-ttu-id="6decf-239">원격 서버 이름이 올바른지, 또는 사용할 수 없는 경우 런타임 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-239">If the remote server name is incorrect, or if it is unavailable, a run-time error occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6decf-240">사용 하 여 `CreateObject` 개체의 현재 인스턴스가 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="6decf-240">Use `CreateObject` when there is no current instance of the object.</span></span> <span data-ttu-id="6decf-241">개체의 인스턴스에 이미 실행 중인 경우 새 인스턴스가 시작 되 고 지정 된 형식의 개체로 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-241">If an instance of the object is already running, a new instance is started, and an object of the specified type is created.</span></span> <span data-ttu-id="6decf-242">현재 인스턴스를 사용 하거나 응용 프로그램을 시작 하 고 파일을 로드 하 게 하려면 사용 된 `GetObject` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-242">To use the current instance, or to start the application and have it load a file, use the `GetObject` function.</span></span> <span data-ttu-id="6decf-243">등록 된 개체 자체를 단일 인스턴스 개체, 경우 개체의 인스턴스가 하나만 만들어지면 관계 없이 여러 번 `CreateObject` 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-243">If an object has registered itself as a single-instance object, only one instance of the object is created, no matter how many times `CreateObject` is executed.</span></span>  
  
## <a name="creating-framework-objects"></a><span data-ttu-id="6decf-244">프레임 워크 개체 만들기</span><span class="sxs-lookup"><span data-stu-id="6decf-244">Creating Framework Objects</span></span>  
 <span data-ttu-id="6decf-245">사용할 수는 `CreateObject` COM 개체를 만드는 데에 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-245">You can use the `CreateObject` function only to create a COM object.</span></span> <span data-ttu-id="6decf-246">메커니즘은 없습니다 정확한 해당.NET Framework 개체를 만드는 동안는 <xref:System.Activator> 에 <xref:System> 네임 스페이스는 로컬 또는 원격 개체를 만드는 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-246">While there is no exact equivalent mechanism for creating a .NET Framework object, the <xref:System.Activator> in the <xref:System> namespace contains methods to create local or remote objects.</span></span> <span data-ttu-id="6decf-247">특히 합니다 <xref:System.Activator.CreateInstance%2A> 메서드 또는 <xref:System.Activator.CreateInstanceFrom%2A> 메서드 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-247">In particular, the <xref:System.Activator.CreateInstance%2A> method or the <xref:System.Activator.CreateInstanceFrom%2A> method might be useful.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6decf-248">`CreateObject` 함수에 비관리 코드 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-248">The `CreateObject` function requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6decf-249">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-249">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-250">다음 예제에서는 `CreateObject` Microsoft Excel 워크시트를 만드는 함수를 파일로 워크시트를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-250">The following example uses the `CreateObject` function to create a Microsoft Excel worksheet and saves the worksheet to a file.</span></span> <span data-ttu-id="6decf-251">이 예제를 사용 하려면 Excel이이 프로그램이 실행 되는 컴퓨터에 설치 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-251">To use this example, Excel must be installed on the computer where this program runs.</span></span> <span data-ttu-id="6decf-252">형식 라이브러리에 대 한 참조를 추가 해야는 또한를 **COM** 탭의 **참조 추가** 대화 상자에는 **프로젝트** 메뉴.</span><span class="sxs-lookup"><span data-stu-id="6decf-252">Also, you must add a reference to the type library from the **COM** tab of the **Add Reference** dialog box on the **Project** menu.</span></span> <span data-ttu-id="6decf-253">형식 라이브러리의 이름을 컴퓨터에 설치 된 Excel 버전에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-253">The name of the type library varies depending on the version of Excel installed on your computer.</span></span> <span data-ttu-id="6decf-254">예를 들어 Microsoft Excel 2002에 대 한 형식 라이브러리를 이름은 **Microsoft Excel 10.0 개체 라이브러리**합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-254">For example, the type library for Microsoft Excel 2002 is named **Microsoft Excel 10.0 Object Library**.</span></span>  
  
 [!code-vb[VbVbalrExcelObject#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="6decf-255">서버를 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-255">Server is unavailable</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6decf-256">지정된 형식의 개체가 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-256">No object of the specified type exists</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)" />
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.Activator" />
        <altmember cref="Overload:System.Activator.CreateInstance" />
        <altmember cref="Overload:System.Activator.CreateInstanceFrom" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSetting">
      <MemberSignature Language="C#" Value="public static void DeleteSetting (string AppName, string Section = null, string Key = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteSetting(string AppName, string Section, string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSetting (AppName As String, Optional Section As String = null, Optional Key As String = null)" />
      <MemberSignature Language="F#" Value="static member DeleteSetting : string * string * string -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.DeleteSetting (AppName, Section, Key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" />
        <Parameter Name="Section" Type="System.String" />
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AppName">
          <span data-ttu-id="6decf-257">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-257">Required.</span>
          </span>
          <span data-ttu-id="6decf-258">섹션 또는 키 설정이 적용되는 응용 프로그램이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-258">
              <see langword="String" /> expression containing the name of the application or project to which the section or key setting applies.</span>
          </span>
        </param>
        <param name="Section">
          <span data-ttu-id="6decf-259">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-259">Required.</span>
          </span>
          <span data-ttu-id="6decf-260">키 설정을 삭제할 섹션의 이름을 포함하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-260">
              <see langword="String" /> expression containing the name of the section from which the key setting is being deleted.</span>
          </span>
          <span data-ttu-id="6decf-261">
            <c>AppName</c>과 <c>Section</c>만 제공할 경우 모든 관련 키 설정과 함께 지정한 섹션이 삭제됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-261">If only <c>AppName</c> and <c>Section</c> are provided, the specified section is deleted along with all related key settings.</span>
          </span>
        </param>
        <param name="Key">
          <span data-ttu-id="6decf-262">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-262">Optional.</span>
          </span>
          <span data-ttu-id="6decf-263">삭제할 키 설정의 이름을 포함하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-263">
              <see langword="String" /> expression containing the name of the key setting being deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-264">Windows 레지스트리에 있는 응용 프로그램 엔트리에서 섹션 설정 또는 키 설정을 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-264">Deletes a section or key setting from an application's entry in the Windows registry.</span>
          </span>
          <span data-ttu-id="6decf-265">
            <see langword="My" /> 기능을 사용하면 <see langword="DeleteSetting" /> 함수보다 레지스트리 작업의 생산성 및 성능이 향상됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-265">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than the <see langword="DeleteSetting" /> function.</span>
          </span>
          <span data-ttu-id="6decf-266">자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />을 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-266">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" /> .</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-267">모든 인수를 제공 하는 경우 지정한 설정이 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-267">If all arguments are provided, the specified setting is deleted.</span></span> <span data-ttu-id="6decf-268">런타임 오류가 발생 하는 사용 하려는 경우 `DeleteSetting` 존재 하지 않는 섹션 또는 키 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-268">A run-time error occurs if you attempt to use `DeleteSetting` on a nonexistent section or key setting.</span></span>  
  
 <span data-ttu-id="6decf-269">`DeleteSetting` 작동 하므로 한 사용자 로그온 할 필요는 `HKEY_LOCAL_USER` 사용자가 대화형으로 로그온 할 때까지 비활성화 되어 있는 레지스트리 키입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-269">`DeleteSetting` requires that a user be logged on since it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively.</span></span>  
  
 <span data-ttu-id="6decf-270">아래 (예: Mtx.exe) 비 대화형 프로세스에서 액세스 하는 레지스트리 설정에 저장 해야 합니다 `HKEY_LOCAL_MACHINE\Software\` 또는 `HKEY_USER\DEFAULT\Software` 레지스트리 키입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-270">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-271">다음 예제에서는 먼저 사용 하 여는 `SaveSetting` 에 대해 Windows 레지스트리 항목을 확인 하는 절차는 `MyApp` 응용 프로그램을 사용 하 여 다음는 `DeleteSetting` 함수를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-271">The following example first uses the `SaveSetting` procedure to make entries in the Windows registry for the `MyApp` application, and then uses the `DeleteSetting` function to remove them.</span></span> <span data-ttu-id="6decf-272">때문에 없습니다 `Key` 인수를 지정 하면 전체 `Startup` 섹션 이름 및 모든 해당 키를 포함 하 여 섹션이 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-272">Because no `Key` argument is specified, the whole `Startup` section is deleted, including the section name and all of its keys.</span></span>  
  
 [!code-vb[VbVbalrCatRef#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#45)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6decf-273">사용자가 로그인하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-273">User is not logged in.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Environ">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6decf-274">운영 체제 환경 변수와 연결된 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-274">Returns the string associated with an operating-system environment variable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Environ">
      <MemberSignature Language="C#" Value="public static string Environ (int Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Environ(int32 Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Environ (Expression As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Environ(int Expression);" />
      <MemberSignature Language="F#" Value="static member Environ : int -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Environ Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="6decf-275">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-275">Required.</span>
          </span>
          <span data-ttu-id="6decf-276">환경 변수의 이름이 포함된 문자열이나 환경 문자열 테이블에 있는 환경 문자열의 순서에 해당하는 정수를 계산하는 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-276">Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-277">운영 체제 환경 변수와 연결된 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-277">Returns the string associated with an operating-system environment variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-278">운영 체제 환경 변수와 연결된 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-278">Returns the string associated with an operating-system environment variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-279">경우 `Expression` 문자열을 포함 합니다 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 함수는 지정 된 환경 문자열에 할당 된 텍스트를 반환 합니다.-즉, 등호 (=) 해당 환경 변수 환경 문자열 테이블에 다음 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-279">If `Expression` contains a string, the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function returns the text assigned to the specified environment string—that is, the text following the equal sign (=) in the environment-string table for that environment variable.</span></span> <span data-ttu-id="6decf-280">경우에 문자열 `Expression` 길이가 0 인 문자열을 환경 문자열 테이블에서 찾을 수 없습니다 ("")이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-280">If the string in `Expression` cannot be found in the environment-string table, a zero-length string ("") is returned.</span></span>  
  
 <span data-ttu-id="6decf-281">경우 `Expression` 환경 문자열 테이블에서 위치에 숫자가 반환 되는 문자열이 정수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-281">If `Expression` contains an integer, the string occupying that numeric position in the environment-string table is returned.</span></span> <span data-ttu-id="6decf-282">이 경우 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 모든 환경 변수 이름을 포함 하 여 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-282">In this case, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns all of the text, including the name of the environment variable.</span></span> <span data-ttu-id="6decf-283">지정된 된 위치에서 환경 문자열이 없는 경우 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 길이가 0 인 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-283">If there is no environment string in the specified position, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns a zero-length string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6decf-284"><xref:Microsoft.VisualBasic.Interaction.Environ%2A> 함수 환경 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-284">The <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function requires environment permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6decf-285">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-285">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-286">이 예제에서는 합니다 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 의 길이 항목 수를 제공 하는 함수는 `PATH` 환경 문자열 테이블에서 문입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-286">This example uses the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function to supply the entry number and length of the `PATH` statement from the environment-string table.</span></span>  
  
 [!code-vb[VbVbalrCatRef#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6decf-287">
            <paramref name="Expression" />이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-287">
              <paramref name="Expression" /> is missing.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Environ">
      <MemberSignature Language="C#" Value="public static string Environ (string Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Environ(string Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Environ(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Environ (Expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Environ(System::String ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Environ : string -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Environ Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="6decf-288">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-288">Required.</span>
          </span>
          <span data-ttu-id="6decf-289">환경 변수의 이름이 포함된 문자열이나 환경 문자열 테이블에 있는 환경 문자열의 순서에 해당하는 정수를 계산하는 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-289">Expression that evaluates either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-290">운영 체제 환경 변수와 연결된 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-290">Returns the string associated with an operating-system environment variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-291">운영 체제 환경 변수와 연결된 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-291">Returns the string associated with an operating-system environment variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-292">경우 `Expression` 문자열을 포함 합니다 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 함수는 지정 된 환경 문자열에 할당 된 텍스트를 반환 합니다.-즉, 등호 (=) 해당 환경 변수 환경 문자열 테이블에 다음 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-292">If `Expression` contains a string, the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function returns the text assigned to the specified environment string—that is, the text following the equal sign (=) in the environment-string table for that environment variable.</span></span> <span data-ttu-id="6decf-293">경우에 문자열 `Expression` 길이가 0 인 문자열을 환경 문자열 테이블에서 찾을 수 없습니다 ("")이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-293">If the string in `Expression` cannot be found in the environment-string table, a zero-length string ("") is returned.</span></span>  
  
 <span data-ttu-id="6decf-294">경우 `Expression` 환경 문자열 테이블에서 위치에 숫자가 반환 되는 문자열이 정수를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-294">If `Expression` contains an integer, the string occupying that numeric position in the environment-string table is returned.</span></span> <span data-ttu-id="6decf-295">이 경우 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 모든 환경 변수 이름을 포함 하 여 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-295">In this case, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns all of the text, including the name of the environment variable.</span></span> <span data-ttu-id="6decf-296">지정된 된 위치에서 환경 문자열이 없는 경우 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 길이가 0 인 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-296">If there is no environment string in the specified position, <xref:Microsoft.VisualBasic.Interaction.Environ%2A> returns a zero-length string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6decf-297"><xref:Microsoft.VisualBasic.Interaction.Environ%2A> 함수 환경 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-297">The <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function requires environment permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6decf-298">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-298">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-299">이 예제에서는 합니다 <xref:Microsoft.VisualBasic.Interaction.Environ%2A> 의 길이 항목 수를 제공 하는 함수는 `PATH` 환경 문자열 테이블에서 문입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-299">This example uses the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function to supply the entry number and length of the `PATH` statement from the environment-string table.</span></span>  
  
 [!code-vb[VbVbalrCatRef#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6decf-300">
            <paramref name="Expression" />이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-300">
              <paramref name="Expression" /> is missing.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="GetAllSettings">
      <MemberSignature Language="C#" Value="public static string[,] GetAllSettings (string AppName, string Section);" />
      <MemberSignature Language="ILAsm" Value=".method public static string[,] GetAllSettings(string AppName, string Section) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllSettings (AppName As String, Section As String) As String(,)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^, 2&gt; ^ GetAllSettings(System::String ^ AppName, System::String ^ Section);" />
      <MemberSignature Language="F#" Value="static member GetAllSettings : string * string -&gt; string[,]" Usage="Microsoft.VisualBasic.Interaction.GetAllSettings (AppName, Section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[,]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" />
        <Parameter Name="Section" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AppName">
          <span data-ttu-id="6decf-301">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-301">Required.</span>
          </span>
          <span data-ttu-id="6decf-302">키 설정이 요청된 응용 프로그램이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-302">
              <see langword="String" /> expression containing the name of the application or project whose key settings are requested.</span>
          </span>
        </param>
        <param name="Section">
          <span data-ttu-id="6decf-303">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-303">Required.</span>
          </span>
          <span data-ttu-id="6decf-304">키 설정이 요청된 섹션의 이름을 포함하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-304">
              <see langword="String" /> expression containing the name of the section whose key settings are requested.</span>
          </span>
          <span data-ttu-id="6decf-305">
            <see langword="GetAllSettings" />는 2차원 문자열 배열을 포함하는 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-305">
              <see langword="GetAllSettings" /> returns an object that contains a two-dimensional array of strings.</span>
          </span>
          <span data-ttu-id="6decf-306">이 문자열은 지정한 섹션의 모든 키 설정과 이 설정에 해당하는 값을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-306">The strings contain all the key settings in the specified section, plus their corresponding values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-307">Windows 레지스트리에 있는 응용 프로그램 엔트리에서 키 설정 및 해당 값(원래 <see langword="SaveSetting" />으로 만든 값)의 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-307">Returns a list of key settings and their respective values (originally created with <see langword="SaveSetting" />) from an application's entry in the Windows registry.</span>
          </span>
          <span data-ttu-id="6decf-308">
            <see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" /> 함수보다 레지스트리 작업의 생산성 및 성능이 향상됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-308">Using the <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span>
          </span>
          <span data-ttu-id="6decf-309">자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-309">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-310">Windows 레지스트리에 있는 응용 프로그램 엔트리에서 키 설정 및 해당 값(원래 <see langword="SaveSetting" />으로 만든 값)의 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-310">Returns a list of key settings and their respective values (originally created with <see langword="SaveSetting" />) from an application's entry in the Windows registry.</span>
          </span>
          <span data-ttu-id="6decf-311">
            <see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" /> 함수보다 레지스트리 작업의 생산성 및 성능이 향상됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-311">Using the <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span>
          </span>
          <span data-ttu-id="6decf-312">자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-312">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-313">`GetAllSettings` 초기화 되지 않은 반환 `Object` 하나라 `AppName` 또는 `Section` 존재 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-313">`GetAllSettings` returns an uninitialized `Object` if either `AppName` or `Section` does not exist.</span></span>  
  
 <span data-ttu-id="6decf-314">작동 하기 때문에 `HKEY_LOCAL_USER` 레지스트리 키가 활성화 되지 않은 사용자가 대화형으로 로그온 할 때까지 `GetAllSettings` 사용자는 로그온 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-314">Because it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively, `GetAllSettings` requires that a user be logged on.</span></span>  
  
 <span data-ttu-id="6decf-315">아래 (예: Mtx.exe) 비 대화형 프로세스에서 액세스 하는 레지스트리 설정에 저장 해야 합니다 `HKEY_LOCAL_MACHINE\Software\` 또는 `HKEY_USER\DEFAULT\Software` 레지스트리 키입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-315">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-316">이 예제에서는 먼저 사용 하 여는 `SaveSetting` 로 지정 된 응용 프로그램에 대해 Windows 레지스트리 항목을 확인 하는 함수 `AppName`를 사용 하 여는 `GetAllSettings` 설정을 표시 하려면 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-316">This example first uses the `SaveSetting` function to make entries in the Windows registry for the application specified as `AppName`, then uses the `GetAllSettings` function to display the settings.</span></span> <span data-ttu-id="6decf-317">참고 해당 응용 프로그램 이름 및 `Section` 이름을 사용 하 여 검색할 수 없습니다 `GetAllSettings`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-317">Note that application names and `Section` names cannot be retrieved with `GetAllSettings`.</span></span> <span data-ttu-id="6decf-318">마지막으로 `DeleteSetting` 함수 응용 프로그램의 항목을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-318">Finally, the `DeleteSetting` function removes the application's entries.</span></span>  
  
 [!code-vb[VbVbalrCatRef#68](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#68)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6decf-319">사용자가 로그인하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-319">User is not logged in.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (string PathName = null, string Class = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObject(string PathName, string Class) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObject (Optional PathName As String = null, Optional Class As String = null) As Object" />
      <MemberSignature Language="F#" Value="static member GetObject : string * string -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.GetObject (PathName, Class)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PathName" Type="System.String" />
        <Parameter Name="Class" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="6decf-320">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-320">Optional.</span>
          </span>
          <span data-ttu-id="6decf-321">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-321">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="6decf-322">검색할 개체를 포함하는 파일의 전체 경로와 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-322">The full path and name of the file containing the object to retrieve.</span>
          </span>
          <span data-ttu-id="6decf-323">
            <c>PathName</c>이 생략된 경우 <c>Class</c>가 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-323">If <c>PathName</c> is omitted, <c>Class</c> is required.</span>
          </span>
        </param>
        <param name="Class">
          <span data-ttu-id="6decf-324">
            <c>PathName</c>이 제공되지 않을 경우 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-324">Required if <c>PathName</c> is not supplied.</span>
          </span>
          <span data-ttu-id="6decf-325">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-325">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="6decf-326">개체의 클래스를 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-326">A string representing the class of the object.</span>
          </span>
          <span data-ttu-id="6decf-327">
            <c>Class</c> 인수의 구문과 구성 요소는 다음과 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-327">The <c>Class</c> argument has the following syntax and parts:</span>
          </span>
          <span data-ttu-id="6decf-328">
            <c>appname</c>
            <c>.</c>
            <c>objecttype</c>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-328">
              <c>appname</c>
              <c>.</c>
              <c>objecttype</c>
            </span>
          </span>
          <span data-ttu-id="6decf-329">[1|1] 매개 변수</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-329">[1|1] Parameter</span>
          </span>
          <span data-ttu-id="6decf-330">[1|2] 설명</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-330">[1|2] Description</span>
          </span>
          <span data-ttu-id="6decf-331">[2|1] <c>appname</c></span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-331">[2|1] <c>appname</c></span>
          </span>
          <span data-ttu-id="6decf-332">[2|2] 필수적 요소</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-332">[2|2] Required.</span>
          </span>
          <span data-ttu-id="6decf-333">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-333">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="6decf-334">개체를 제공하는 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-334">The name of the application providing the object.</span>
          </span>
          <span data-ttu-id="6decf-335">[3|1] <c>objecttype</c></span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-335">[3|1] <c>objecttype</c></span>
          </span>
          <span data-ttu-id="6decf-336">[3|2] 필수적 요소</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-336">[3|2] Required.</span>
          </span>
          <span data-ttu-id="6decf-337">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-337">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="6decf-338">만들 개체의 형식이나 클래스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-338">The type or class of object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-339">COM 구성 요소에 의해 제공된 개체에 대한 참조를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-339">Returns a reference to an object provided by a COM component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-340">COM 구성 요소에 의해 제공된 개체에 대한 참조를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-340">Returns a reference to an object provided by a COM component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-341">사용 된 `GetObject` 파일에서 COM 구성 요소의 인스턴스를 로드 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-341">Use the `GetObject` function to load an instance of a COM component from a file.</span></span> <span data-ttu-id="6decf-342">다음은 이에 대한 예입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-342">The following example illustrates this.</span></span>  
  
```vb  
Dim CADObject As Object  
CADObject = GetObject("C:\CAD\schema.cad")  
```  
  
 <span data-ttu-id="6decf-343">이 코드를 실행 하면 지정 된 관련 응용 프로그램 `PathName` 시작 되 고 지정된 된 파일에서 개체 활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-343">When this code runs, the application associated with the specified `PathName` is started and the object in the specified file is activated.</span></span>  
  
## <a name="default-cases"></a><span data-ttu-id="6decf-344">기본 사례</span><span class="sxs-lookup"><span data-stu-id="6decf-344">Default Cases</span></span>  
 <span data-ttu-id="6decf-345">하는 경우 `PathName` 길이가 0 인 문자열 (`""`), `GetObject` 지정 된 클래스 형식의 새 개체 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-345">If `PathName` is a zero-length string (`""`), `GetObject` returns a new object instance of the specified class type.</span></span> <span data-ttu-id="6decf-346">경우는 `PathName` 인수가 생략 되 면 `GetObject` 에 지정 된 클래스 형식의 현재 활성 개체를 반환 `Class`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-346">If the `PathName` argument is omitted, `GetObject` returns a currently active object of the class type specified in `Class`.</span></span> <span data-ttu-id="6decf-347">지정 된 형식의 개체가 없는 경우 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-347">If no object of the specified type exists, an error occurs.</span></span>  
  
## <a name="accessing-a-subobject"></a><span data-ttu-id="6decf-348">하위 개체 액세스</span><span class="sxs-lookup"><span data-stu-id="6decf-348">Accessing a Subobject</span></span>  
 <span data-ttu-id="6decf-349">일부 응용 프로그램 파일과 연결 된 하위 활성화를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-349">Some applications allow you to activate a subobject associated with a file.</span></span> <span data-ttu-id="6decf-350">이렇게 하려면 느낌표 (`!`) 파일 이름 및 다음의 끝에 파일 부분을 식별 하는 문자열을 사용 하 여 활성화 하려는 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-350">To do this, add an exclamation point (`!`) to the end of the file name and follow it with a string that identifies the part of the file you want to activate.</span></span> <span data-ttu-id="6decf-351">이 문자열을 만드는 방법에 대 한 자세한 내용은 개체를 만든 응용 프로그램에 대 한 설명서를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="6decf-351">For information on how to create this string, see the documentation for the application that created the object.</span></span>  
  
 <span data-ttu-id="6decf-352">예를 들어 드로잉 응용 프로그램에서 파일에 저장 된 그리기에 여러 계층이 있는 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-352">For example, in a drawing application you might have multiple layers to a drawing stored in a file.</span></span> <span data-ttu-id="6decf-353">라는 계층을 활성화 하려면 다음 코드를 사용할 수 있습니다 `schema.cad`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-353">You could use the following code to activate a layer within a drawing called `schema.cad`.</span></span>  
  
```vb  
layerObject = GetObject("C:\CAD\schema.cad!Layer3")  
```  
  
## <a name="specifying-a-class"></a><span data-ttu-id="6decf-354">클래스를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-354">Specifying a Class</span></span>  
 <span data-ttu-id="6decf-355">개체를 지정 하지 않는 경우 `Class`, 자동화를 시작 및 개체를 활성화 하려면 응용 프로그램 제공한 파일 이름을 기반으로 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-355">If you do not specify the object's `Class`, Automation determines the application to start and the object to activate, based on the file name you provide.</span></span> <span data-ttu-id="6decf-356">그러나 일부 파일을 개체의 둘 이상의 클래스를 지원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-356">Some files, however, can support more than one class of object.</span></span> <span data-ttu-id="6decf-357">예를 들어 드로잉 세 가지 유형의 개체를 지원할 수 있습니다:는 `Application` 개체를 `Drawing` 개체 및 `Toolbar` 모두에 동일한 파일의 일부인 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-357">For example, a drawing might support three different types of objects: an `Application` object, a `Drawing` object, and a `Toolbar` object, all of which are part of the same file.</span></span> <span data-ttu-id="6decf-358">활성화 하려는 파일에는 개체를 지정 하려면 사용할 선택적 `Class` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-358">To specify which object in a file you want to activate, use the optional `Class` argument.</span></span> <span data-ttu-id="6decf-359">다음은 이에 대한 예입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-359">The following example illustrates this.</span></span>  
  
```vb  
Dim drawObj As Object  
drawObj = GetObject("C:\Drawings\sample.drw", "Figment.Drawing")  
```  
  
 <span data-ttu-id="6decf-360">위의 예에서 `Figment` 그리기 응용 프로그램의 이름 및 `Drawing` 지 원하는 개체 형식 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-360">In the preceding example, `Figment` is the name of a drawing application and `Drawing` is one of the object types it supports.</span></span>  
  
## <a name="using-the-object"></a><span data-ttu-id="6decf-361">개체를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="6decf-361">Using the Object</span></span>  
 <span data-ttu-id="6decf-362">개체 활성화 되 면 참조 하기 선언한 개체 변수를 사용 하 여 코드에서.</span><span class="sxs-lookup"><span data-stu-id="6decf-362">Once an object is activated, you refer to it in code using the object variable you declared.</span></span> <span data-ttu-id="6decf-363">개체 변수를 사용 하 여 새 개체의 속성 및 메서드에 액세스 앞의 예제에서 `drawObj`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-363">In the preceding example, you access properties and methods of the new object using the object variable `drawObj`.</span></span> <span data-ttu-id="6decf-364">다음은 이에 대한 예입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-364">The following example illustrates this.</span></span>  
  
```vb  
drawObj.Line(9, 90)  
drawObj.InsertText(9, 100, "Hello, world.")  
drawObj.SaveAs("C:\Drawings\sample.drw")  
```  
  
> [!NOTE]
>  <span data-ttu-id="6decf-365">사용 하 여는 `GetObject` 파일 로드를 사용 하 여 개체를 만들려는 경우 또는 개체의 현재 인스턴스가 있는 경우 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-365">Use the `GetObject` function when there is a current instance of the object or if you want to create the object with a file loaded.</span></span> <span data-ttu-id="6decf-366">현재 인스턴스가 없음, 시작 개체를 원하지 않는 경우 파일이 로드를 <xref:Microsoft.VisualBasic.Interaction.CreateObject%2A> 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-366">If there is no current instance, and you do not want the object started with a file loaded, use the <xref:Microsoft.VisualBasic.Interaction.CreateObject%2A> function.</span></span>  
>   
>  <span data-ttu-id="6decf-367">등록 된 개체 자체 ActiveX 단일 인스턴스 개체, 경우 개체의 인스턴스가 하나만 만들어지면 관계 없이 여러 번 `CreateObject` 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-367">If an object has registered itself as an ActiveX single-instance object, only one instance of the object is created, no matter how many times `CreateObject` is called.</span></span> <span data-ttu-id="6decf-368">단일 인스턴스 개체를 사용 하 여 `GetObject` 항상 길이가 0 인 문자열을 사용 하 여 호출 하는 경우 동일한 인스턴스를 반환 합니다 (`""`) 구문 및 해당 하는 경우 오류가 발생 합니다 `PathName` 인수를 생략 하면 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-368">With a single-instance object, `GetObject` always returns the same instance when called with the zero-length string (`""`) syntax, and it causes an error if the `PathName` argument is omitted.</span></span> <span data-ttu-id="6decf-369">사용할 수 없습니다 `GetObject` Visual Basic을 사용 하 여 만든 클래스에 대 한 참조를 가져오려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-369">You cannot use `GetObject` to obtain a reference to a class created with Visual Basic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6decf-370">`GetObject` 함수에 비관리 코드 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-370">The `GetObject` function requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6decf-371">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-371">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-372">다음 예제에서는 합니다 `GetObject` 특정 Microsoft Excel 워크시트에 대 한 참조를 가져오는 함수 (`excelObj`).</span><span class="sxs-lookup"><span data-stu-id="6decf-372">The following example uses the `GetObject` function to obtain a reference to a specific Microsoft Excel worksheet (`excelObj`).</span></span> <span data-ttu-id="6decf-373">워크시트의 사용 하 여 `Application` Excel를 표시 하려면 서 다른 작업을 수행 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-373">It uses the worksheet's `Application` property to make Excel visible, to close it, and to perform other actions.</span></span> <span data-ttu-id="6decf-374">두 개의 API 호출을 사용 하는 `detectExcel` 프로시저 for Excel을 찾아 실행 중인 경우 실행 개체 테이블에 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-374">Using two API calls, the `detectExcel` procedure looks for Excel, and if it is running, enters it in the Running Object table.</span></span> <span data-ttu-id="6decf-375">첫 번째 호출은 `GetObject` Excel 아직 실행 하지 않은,이 예제의 경우 오류가 발생 하면 합니다 `excelWasNotRunning` 플래그 설정할 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-375">The first call to `GetObject` causes an error if Excel is not already running, which in this example causes the `excelWasNotRunning` flag to be set to `True`.</span></span> <span data-ttu-id="6decf-376">두 번째 호출은 `GetObject` 열려는 파일을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-376">The second call to `GetObject` specifies a file to open.</span></span> <span data-ttu-id="6decf-377">두 번째 호출 시작 및 지정된 된 파일을 나타내는 워크시트에 대 한 참조를 반환 합니다. Excel를 이미 실행 하지 않는 경우 `test.xls`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-377">If Excel is not already running, the second call starts it and returns a reference to the worksheet represented by the specified file, `test.xls`.</span></span> <span data-ttu-id="6decf-378">지정 된 위치의; 파일이 있어야 합니다. 그렇지 않으면 Visual Basic을 throw 한 <xref:System.IO.FileNotFoundException>합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-378">The file must exist in the specified location; otherwise, Visual Basic throws a <xref:System.IO.FileNotFoundException>.</span></span> <span data-ttu-id="6decf-379">다음으로, 예제 코드는 Excel과 지정된 된 워크시트가 포함 된 창을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-379">Next, the example code makes both Excel and the window containing the specified worksheet visible.</span></span>  
  
 <span data-ttu-id="6decf-380">이 예제 `Option Strict Off` 런타임에 바인딩 사용 하기 때문에 여기서 개체 변수에 할당 된 형식의 `Object`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-380">This example requires `Option Strict Off` because it uses late binding, where objects are assigned to variables of type `Object`.</span></span> <span data-ttu-id="6decf-381">지정할 수 있습니다 `Option Strict On` 에서 Excel 형식 라이브러리에 대 한 참조를 추가 하는 경우에 특정 개체 유형의 개체를 선언 하 고는 **COM** 탭의 **참조 추가** 대화 상자는 \*\* 프로젝트\*\* Visual Studio의 메뉴.</span><span class="sxs-lookup"><span data-stu-id="6decf-381">You can specify `Option Strict On` and declare objects of specific object types if you add a reference to the Excel type library from the **COM** tab of the **Add Reference** dialog box of the **Project** menu in Visual Studio.</span></span>  
  
 [!code-vb[VbVbalrExcelObject#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#2)]  
  
 [!code-vb[VbVbalrExcelObject#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#4)]  
  
 [!code-vb[VbVbalrExcelObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrExcelObject/VB/Class1.vb#5)]  
  
 <span data-ttu-id="6decf-382">호출 하는 경우는 `getExcel` 함수는 검사가 Excel 이미 실행 되 고 있는지 확인 하려면 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-382">When you call the `getExcel` function, a check is made to see if Excel is already running.</span></span> <span data-ttu-id="6decf-383">그렇지 않은 경우 인스턴스가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-383">If it is not, then an instance is created.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6decf-384">간단히 하기 위해 앞의 예제는 모든 창 호출 가정 `XLMAIN` Microsoft Excel의 인스턴스에 속합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-384">For simplicity, the preceding example assumes that any window called `XLMAIN` belongs to an instance of Microsoft Excel.</span></span> <span data-ttu-id="6decf-385">다른 개체에 불법적 인 변조로 시작할 수 있는 창을 해당 이름을 가진를 만든 경우 Excel을 위한 모든 메시지를 수신 하 게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-385">If another object, possibly launched by illicit tampering, created a window with that name, it would receive all the messages you intended for Excel.</span></span> <span data-ttu-id="6decf-386">좀 더 엄격한 테스트 확인을 포함 해야 프로덕션에 사용 되는 응용 프로그램에서는 `XLMAIN` 실제로 Excel에 속합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-386">In an application to be used for production, you should include some more rigorous testing to verify that `XLMAIN` really belongs to Excel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="6decf-387">지정한 클래스 형식의 개체가 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-387">No object of the specified class type exists.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6decf-388">지정한 경로와 파일 이름의 개체가 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-388">No object with the specified path and file name exists.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)" />
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.IO.FileNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetSetting">
      <MemberSignature Language="C#" Value="public static string GetSetting (string AppName, string Section, string Key, string Default = &quot;&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetSetting(string AppName, string Section, string Key, string Default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetting (AppName As String, Section As String, Key As String, Optional Default As String = &quot;&quot;) As String" />
      <MemberSignature Language="F#" Value="static member GetSetting : string * string * string * string -&gt; string" Usage="Microsoft.VisualBasic.Interaction.GetSetting (AppName, Section, Key, Default)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" />
        <Parameter Name="Section" Type="System.String" />
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Default" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AppName">
          <span data-ttu-id="6decf-389">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-389">Required.</span>
          </span>
          <span data-ttu-id="6decf-390">키 설정이 요청된 응용 프로그램이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-390">
              <see langword="String" /> expression containing the name of the application or project whose key setting is requested.</span>
          </span>
        </param>
        <param name="Section">
          <span data-ttu-id="6decf-391">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-391">Required.</span>
          </span>
          <span data-ttu-id="6decf-392">키 설정이 있는 섹션의 이름을 포함하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-392">
              <see langword="String" /> expression containing the name of the section in which the key setting is found.</span>
          </span>
        </param>
        <param name="Key">
          <span data-ttu-id="6decf-393">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-393">Required.</span>
          </span>
          <span data-ttu-id="6decf-394">반환할 키 설정의 이름을 포함하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-394">
              <see langword="String" /> expression containing the name of the key setting to return.</span>
          </span>
        </param>
        <param name="Default">
          <span data-ttu-id="6decf-395">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-395">Optional.</span>
          </span>
          <span data-ttu-id="6decf-396">
            <c>키</c> 설정에 값이 설정되어 있지 않을 경우에 반환할 값을 포함하고 있는 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-396">Expression containing the value to return if no value is set in the <c>Key</c> setting.</span>
          </span>
          <span data-ttu-id="6decf-397">생략할 경우 <c>Default</c>는 길이가 0인 문자열("")로 간주됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-397">If omitted, <c>Default</c> is assumed to be a zero-length string ("").</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-398">Windows 레지스트리에 있는 응용 프로그램 엔트리에서 키 설정 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-398">Returns a key setting value from an application's entry in the Windows registry.</span>
          </span>
          <span data-ttu-id="6decf-399">
            <see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" />보다 레지스트리 작업의 생산성 및 성능이 향상됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-399">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span>
          </span>
          <span data-ttu-id="6decf-400">자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-400">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-401">Windows 레지스트리에 있는 응용 프로그램 엔트리에서 키 설정 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-401">Returns a key setting value from an application's entry in the Windows registry.</span>
          </span>
          <span data-ttu-id="6decf-402">
            <see langword="My" /> 기능을 사용하면 <see langword="GetAllSettings" />보다 레지스트리 작업의 생산성 및 성능이 향상됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-402">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="GetAllSettings" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-403">경우에 명명 된 항목 중 하나는 `GetSetting` 인수가 존재 하지 않는 `GetSetting` 의 값을 반환 `Default`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-403">If any of the items named in the `GetSetting` arguments do not exist, `GetSetting` returns a value of `Default`.</span></span>  
  
 <span data-ttu-id="6decf-404">작동 하기 때문에 `HKEY_LOCAL_USER` 레지스트리 키가 활성화 되지 않은 사용자가 대화형으로 로그온 할 때까지 `GetSetting` 사용자는 로그온 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-404">Because it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively, `GetSetting` requires that a user be logged on.</span></span>  
  
 <span data-ttu-id="6decf-405">아래 (예: Mtx.exe) 비 대화형 프로세스에서 액세스 하는 레지스트리 설정에 저장 해야 합니다 `HKEY_LOCAL_MACHINE\Software\` 또는 `HKEY_USER\DEFAULT\Software` 레지스트리 키입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-405">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
 <span data-ttu-id="6decf-406">`GetSetting` 필요 `Read` <xref:System.Security.Permissions.RegistryPermission> 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-406">`GetSetting` requires `Read`<xref:System.Security.Permissions.RegistryPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-407">이 예제에서는 먼저 사용 하 여는 `SaveSetting` 로 지정 된 응용 프로그램에 대해 Windows 레지스트리 항목을 확인 하는 함수 `AppName`를 사용 하 여는 `GetSetting` 설정 중 하나를 표시 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-407">This example first uses the `SaveSetting` function to make entries in the Windows registry for the application specified as `AppName`, and then uses the `GetSetting` function to display one of the settings.</span></span> <span data-ttu-id="6decf-408">때문에 `Default` 인수를 지정 하면 일부 값은 반드시 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-408">Because the `Default` argument is specified, some value is guaranteed to be returned.</span></span> <span data-ttu-id="6decf-409">있음을 `Section` 이름을 사용 하 여 검색할 수 없습니다 `GetSetting`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-409">Notice that `Section` names cannot be retrieved with `GetSetting`.</span></span> <span data-ttu-id="6decf-410">마지막으로 `DeleteSetting` 함수 응용 프로그램의 모든 엔트리를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-410">Finally, the `DeleteSetting` function removes all the application's entries.</span></span>  
  
 [!code-vb[VbVbalrCatRef#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#61)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6decf-411">하나 이상의 인수가 <see langword="String" /> 식이 아니거나 사용자가 로그인하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-411">One or more arguments are not <see langword="String" /> expressions, or user is not logged in.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Security.Permissions.RegistryPermission" />
      </Docs>
    </Member>
    <Member MemberName="IIf">
      <MemberSignature Language="C#" Value="public static object IIf (bool Expression, object TruePart, object FalsePart);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IIf(bool Expression, object TruePart, object FalsePart) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IIf (Expression As Boolean, TruePart As Object, FalsePart As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IIf(bool Expression, System::Object ^ TruePart, System::Object ^ FalsePart);" />
      <MemberSignature Language="F#" Value="static member IIf : bool * obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.IIf (Expression, TruePart, FalsePart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Boolean" />
        <Parameter Name="TruePart" Type="System.Object" />
        <Parameter Name="FalsePart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="6decf-412">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-412">Required.</span>
          </span>
          <span data-ttu-id="6decf-413">
            <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-413">
              <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="6decf-414">계산할 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-414">The expression you want to evaluate.</span>
          </span>
        </param>
        <param name="TruePart">
          <span data-ttu-id="6decf-415">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-415">Required.</span>
          </span>
          <span data-ttu-id="6decf-416">
            <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-416">
              <see langword="Object" />.</span>
          </span>
          <span data-ttu-id="6decf-417">
            <c>식</c>이 <see langword="True" />로 평가되는 경우 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-417">Returned if <c>Expression</c> evaluates to <see langword="True" />.</span>
          </span>
        </param>
        <param name="FalsePart">
          <span data-ttu-id="6decf-418">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-418">Required.</span>
          </span>
          <span data-ttu-id="6decf-419">
            <see langword="Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-419">
              <see langword="Object" />.</span>
          </span>
          <span data-ttu-id="6decf-420">
            <c>식</c>이 <see langword="False" />로 평가되는 경우 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-420">Returned if <c>Expression</c> evaluates to <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-421">식을 계산한 결과에 따라 두 개의 개체 중에서 하나를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-421">Returns one of two objects, depending on the evaluation of an expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-422">식을 계산한 결과에 따라 두 개의 개체 중에서 하나를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-422">Returns one of two objects, depending on the evaluation of an expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-423">합니다 `IIf` 함수는 해당 사용자의 삼항 제공 [조건부 연산자:?:](http://msdn.microsoft.com/library/88643ee8-7100-4f86-880a-705ec22b6271) Visual c + +에서입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-423">The `IIf` function provides a counterpart for the ternary [Conditional Operator: ? :](http://msdn.microsoft.com/library/88643ee8-7100-4f86-880a-705ec22b6271) in Visual C++.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-424">이 예제에서는 `IIf` 평가 하는 함수를 `testMe` 의 매개 변수는 `checkIt` 절차 및 반환 단어 "대형" 경우 크기는 1000 보다 큰;를 반환 합니다 단어 "작은" 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-424">This example uses the `IIf` function to evaluate the `testMe` parameter of the `checkIt` procedure and returns the word "Large" if the amount is greater than 1000; otherwise, it returns the word "Small".</span></span>  
  
 [!code-vb[VbVbalrFunctions#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#33)]  
  
 <span data-ttu-id="6decf-425">경우 `Option Strict` 됩니다 `On`를 사용 해야 합니다는 `CStr` 키워드에서 반환 된 값을 명시적으로 변환할 `Object` 에 `String`.</span><span class="sxs-lookup"><span data-stu-id="6decf-425">Note that if `Option Strict` is `On`, you must use the `CStr` keyword to explicitly convert the return from `Object` to `String`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public static string InputBox (string Prompt, string Title = &quot;&quot;, string DefaultResponse = &quot;&quot;, int XPos = -1, int YPos = -1);" />
      <MemberSignature Language="ILAsm" Value=".method public static string InputBox(string Prompt, string Title, string DefaultResponse, int32 XPos, int32 YPos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As String = &quot;&quot;, Optional DefaultResponse As String = &quot;&quot;, Optional XPos As Integer = -1, Optional YPos As Integer = -1) As String" />
      <MemberSignature Language="F#" Value="static member InputBox : string * string * string * int * int -&gt; string" Usage="Microsoft.VisualBasic.Interaction.InputBox (Prompt, Title, DefaultResponse, XPos, YPos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" />
        <Parameter Name="Title" Type="System.String" />
        <Parameter Name="DefaultResponse" Type="System.String" />
        <Parameter Name="XPos" Type="System.Int32" />
        <Parameter Name="YPos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Prompt">
          <span data-ttu-id="6decf-426">필수적 요소입니다. 대화 상자에서 메시지로 표시되는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-426">Required <see langword="String" /> expression displayed as the message in the dialog box.</span>
          </span>
          <span data-ttu-id="6decf-427">
            <c>프롬프트</c>의 최대 길이는 대략 1024자이며 사용되는 문자의 너비에 따라 달라집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-427">The maximum length of <c>Prompt</c> is approximately 1024 characters, depending on the width of the characters used.</span>
          </span>
          <span data-ttu-id="6decf-428">
            <c>프롬프트</c>가 두 줄 이상으로 구성되는 경우 캐리지 리턴 문자(<see langword="Chr(" />13<see langword=")" />), 줄 바꿈 문자(<see langword="Chr(" />10<see langword=")" />) 또는 각 줄 사이에 캐리지 리턴/줄 바꿈 조합(<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />)을 사용하여 줄을 구분할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-428">If <c>Prompt</c> consists of more than one line, you can separate the lines using a carriage return character (<see langword="Chr(" />13<see langword=")" />), a line feed character (<see langword="Chr(" />10<see langword=")" />), or a carriage return/line feed combination (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) between each line.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="6decf-429">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-429">Optional.</span>
          </span>
          <span data-ttu-id="6decf-430">대화 상자의 제목 표시줄에 표시되는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-430">
              <see langword="String" /> expression displayed in the title bar of the dialog box.</span>
          </span>
          <span data-ttu-id="6decf-431">
            <c>Title</c>을 생략하면 응용 프로그램 이름이 제목 표시줄에 나타납니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-431">If you omit <c>Title</c>, the application name is placed in the title bar.</span>
          </span>
        </param>
        <param name="DefaultResponse">
          <span data-ttu-id="6decf-432">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-432">Optional.</span>
          </span>
          <span data-ttu-id="6decf-433">입력한 내용이 없는 경우 텍스트 상자에 기본적으로 표시되는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-433">
              <see langword="String" /> expression displayed in the text box as the default response if no other input is provided.</span>
          </span>
          <span data-ttu-id="6decf-434">
            <c>DefaultResponse</c>를 생략하면 텍스트 상자가 빈 상태로 표시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-434">If you omit <c>DefaultResponse</c>, the displayed text box is empty.</span>
          </span>
        </param>
        <param name="XPos">
          <span data-ttu-id="6decf-435">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-435">Optional.</span>
          </span>
          <span data-ttu-id="6decf-436">화면 왼쪽 가장자리에서 대화 상자의 왼쪽 가장자리까지의 간격을 트윕 단위로 지정하는 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-436">Numeric expression that specifies, in twips, the distance of the left edge of the dialog box from the left edge of the screen.</span>
          </span>
          <span data-ttu-id="6decf-437">
            <c>XPos</c>를 생략하면 대화 상자는 화면 가운데에 가로 방향으로 배치됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-437">If you omit <c>XPos</c>, the dialog box is centered horizontally.</span>
          </span>
        </param>
        <param name="YPos">
          <span data-ttu-id="6decf-438">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-438">Optional.</span>
          </span>
          <span data-ttu-id="6decf-439">화면 맨 위에서 대화 상자의 위쪽 가장자리까지의 간격을 트윕 단위로 지정하는 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-439">Numeric expression that specifies, in twips, the distance of the upper edge of the dialog box from the top of the screen.</span>
          </span>
          <span data-ttu-id="6decf-440">
            <c>YPos</c>를 생략하면 대화 상자는 화면 아래 방향으로 1/3 지점에 세로 방향으로 배치됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-440">If you omit <c>YPos</c>, the dialog box is positioned vertically approximately one-third of the way down the screen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-441">대화 상자에서 프롬프트를 표시하고 사용자가 텍스트를 입력하거나 단추를 클릭할 때까지 대기한 다음 텍스트 상자의 내용을 포함하는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-441">Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-442">대화 상자에서 프롬프트를 표시하고 사용자가 텍스트를 입력하거나 단추를 클릭할 때까지 대기한 다음 텍스트 상자의 내용을 포함하는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-442">Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-443">사용자가 클릭 하면 **취소**, 길이가 0 인 문자열이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-443">If the user clicks **Cancel**, a zero-length string is returned.</span></span>  
  
 <span data-ttu-id="6decf-444">첫 번째 인수 보다 더를 지정 하려면 사용 해야는 `InputBox` 식에서 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-444">To specify more than the first argument, you must use the `InputBox` function in an expression.</span></span> <span data-ttu-id="6decf-445">위치 인수를 생략 하면 해당 쉼표 구분 기호를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-445">If you omit any positional arguments, you must retain the corresponding comma delimiter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6decf-446">`InputBox` 함수에는 필요 `UIPermission` 에 <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> 수준 부분 신뢰 상황에서 해당 실행에 영향을 줄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-446">The `InputBox` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6decf-447">자세한 내용은 및 <xref:System.Security.Permissions.UIPermission> 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-447">For more information, see  and <xref:System.Security.Permissions.UIPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-448">사용 하는 방법을 보여 주는이 예제는 `InputBox` 함수 값을 입력 하 라는 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-448">This example shows various ways to use the `InputBox` function to prompt the user to enter a value.</span></span> <span data-ttu-id="6decf-449">경우 x 및 y 위치를 생략 하면, 대화 상자는 자동으로 각 축의 가운데에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-449">If the x and y positions are omitted, the dialog box is automatically centered for the respective axes.</span></span> <span data-ttu-id="6decf-450">변수의 `MyValue` 사용자가 확인을 클릭 하거나 ENTER 키를 누르거나 사용자가 입력 한 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-450">The variable `MyValue` contains the value entered by the user if the user clicks OK or presses the ENTER key.</span></span>  
  
 [!code-vb[VbVbalrCatRef#67](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MsgBox">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.MsgBoxResult MsgBox (object Prompt, Microsoft.VisualBasic.MsgBoxStyle Buttons = Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal, object Title = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.MsgBoxResult MsgBox(object Prompt, valuetype Microsoft.VisualBasic.MsgBoxStyle Buttons, object Title) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MsgBox (Prompt As Object, Optional Buttons As MsgBoxStyle = Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal, Optional Title As Object = null) As MsgBoxResult" />
      <MemberSignature Language="F#" Value="static member MsgBox : obj * Microsoft.VisualBasic.MsgBoxStyle * obj -&gt; Microsoft.VisualBasic.MsgBoxResult" Usage="Microsoft.VisualBasic.Interaction.MsgBox (Prompt, Buttons, Title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.MsgBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.Object" />
        <Parameter Name="Buttons" Type="Microsoft.VisualBasic.MsgBoxStyle" />
        <Parameter Name="Title" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Prompt">
          <span data-ttu-id="6decf-451">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-451">Required.</span>
          </span>
          <span data-ttu-id="6decf-452">대화 상자에서 메시지로 표시되는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-452">
              <see langword="String" /> expression displayed as the message in the dialog box.</span>
          </span>
          <span data-ttu-id="6decf-453">
            <c>프롬프트</c>의 최대 길이는 대략 1024자이며 사용되는 문자의 너비에 따라 달라집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-453">The maximum length of <c>Prompt</c> is approximately 1024 characters, depending on the width of the characters used.</span>
          </span>
          <span data-ttu-id="6decf-454">
            <c>프롬프트</c>가 두 줄 이상으로 구성되는 경우 캐리지 리턴 문자(<see langword="Chr(" />13<see langword=")" />), 줄 바꿈 문자(<see langword="Chr(" />10<see langword=")" />) 또는 각 줄 사이에 캐리지 리턴/줄 바꿈 문자 조합(<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />)을 사용하여 줄을 구분할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-454">If <c>Prompt</c> consists of more than one line, you can separate the lines using a carriage return character (<see langword="Chr(" />13<see langword=")" />), a line feed character (<see langword="Chr(" />10<see langword=")" />), or a carriage return/linefeed character combination (<see langword="Chr(" />13<see langword=")" /> &amp; <see langword="Chr(" />10<see langword=")" />) between each line.</span>
          </span>
        </param>
        <param name="Buttons">
          <span data-ttu-id="6decf-455">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-455">Optional.</span>
          </span>
          <span data-ttu-id="6decf-456">표시할 단추의 수와 형식, 사용할 아이콘 스타일, 기본 단추의 ID 및 메시지 상자의 모달을 지정하는 값의 합을 나타내는 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-456">Numeric expression that is the sum of values specifying the number and type of buttons to display, the icon style to use, the identity of the default button, and the modality of the message box.</span>
          </span>
          <span data-ttu-id="6decf-457">
            <c>Buttons</c>를 생략한 경우 기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-457">If you omit <c>Buttons</c>, the default value is zero.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="6decf-458">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-458">Optional.</span>
          </span>
          <span data-ttu-id="6decf-459">대화 상자의 제목 표시줄에 표시되는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-459">
              <see langword="String" /> expression displayed in the title bar of the dialog box.</span>
          </span>
          <span data-ttu-id="6decf-460">
            <c>Title</c>을 생략하면 응용 프로그램 이름이 제목 표시줄에 나타납니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-460">If you omit <c>Title</c>, the application name is placed in the title bar.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-461">대화 상자에 메시지를 표시하고 사용자가 단추를 클릭할 때까지 대기한 다음 클릭된 단추를 나타내는 정수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-461">Displays a message in a dialog box, waits for the user to click a button, and then returns an integer indicating which button the user clicked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-462">
            <list type="table">
              <item>
                <term> 상수  </term>
                <description> 값  </description>
              </item>
              <item>
                <term>
                  <see langword="OK" />
                </term>
                <description> 1  </description>
              </item>
              <item>
                <term>
                  <see langword="Cancel" />
                </term>
                <description> 2  </description>
              </item>
              <item>
                <term>
                  <see langword="Abort" />
                </term>
                <description> 3  </description>
              </item>
              <item>
                <term>
                  <see langword="Retry" />
                </term>
                <description> 4  </description>
              </item>
              <item>
                <term>
                  <see langword="Ignore" />
                </term>
                <description> 5  </description>
              </item>
              <item>
                <term>
                  <see langword="Yes" />
                </term>
                <description> 6  </description>
              </item>
              <item>
                <term>
                  <see langword="No" />
                </term>
                <description> 7  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-462">
              <list type="table">
                <item>
                  <term> Constant  </term>
                  <description> Value  </description>
                </item>
                <item>
                  <term>
                    <see langword="OK" />
                  </term>
                  <description> 1  </description>
                </item>
                <item>
                  <term>
                    <see langword="Cancel" />
                  </term>
                  <description> 2  </description>
                </item>
                <item>
                  <term>
                    <see langword="Abort" />
                  </term>
                  <description> 3  </description>
                </item>
                <item>
                  <term>
                    <see langword="Retry" />
                  </term>
                  <description> 4  </description>
                </item>
                <item>
                  <term>
                    <see langword="Ignore" />
                  </term>
                  <description> 5  </description>
                </item>
                <item>
                  <term>
                    <see langword="Yes" />
                  </term>
                  <description> 6  </description>
                </item>
                <item>
                  <term>
                    <see langword="No" />
                  </term>
                  <description> 7  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-463">위치 인수를 생략 하면 해당 쉼표 구분 기호를 유지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-463">If you omit any positional arguments, you must retain the corresponding comma delimiter.</span></span>  
  
 <span data-ttu-id="6decf-464">대화 상자를 표시 하는 경우는 **취소할** ESC 키를 누르면 단추를 클릭 하는 것과 동일한 효과가 **취소**</span><span class="sxs-lookup"><span data-stu-id="6decf-464">If the dialog box displays a **Cancel** button, pressing the ESC key has the same effect as clicking **Cancel**</span></span>  
  
 <span data-ttu-id="6decf-465">대화 상자에는 **도움말** 단추 상황에 맞는 도움말 대화 상자에 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-465">If the dialog box contains a **Help** button, context-sensitive Help is provided for the dialog box.</span></span> <span data-ttu-id="6decf-466">그러나 값이 없는 다른 단추 중 하나 선택 될 때까지 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-466">However, no value is returned until one of the other buttons is chosen.</span></span> <span data-ttu-id="6decf-467">Windows Form 응용 프로그램에서 선택 합니다 **도움말** 실행 단추를 <xref:System.Windows.Forms.Control.HelpRequested> 폼에 대 한 이벤트.</span><span class="sxs-lookup"><span data-stu-id="6decf-467">In Windows Form applications, choosing the **Help** button executes the <xref:System.Windows.Forms.Control.HelpRequested> event for the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6decf-468">`MsgBox` 함수에는 필요 `UIPermission` 에 <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> 수준 부분 신뢰 상황에서 해당 실행에 영향을 줄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-468">The `MsgBox` function requires `UIPermission` at the <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows> level, which may affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6decf-469">자세한 내용은 <xref:System.Security.Permissions.UIPermission>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="6decf-469">For more information, see <xref:System.Security.Permissions.UIPermission>.</span></span>  
  
 <span data-ttu-id="6decf-470">`MsgBoxStyle` 열거형 값은 다음 표에 나열 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-470">The `MsgBoxStyle` enumeration values are listed in the following table.</span></span>  
  
|<span data-ttu-id="6decf-471">멤버</span><span class="sxs-lookup"><span data-stu-id="6decf-471">Member</span></span>|<span data-ttu-id="6decf-472">값</span><span class="sxs-lookup"><span data-stu-id="6decf-472">Value</span></span>|<span data-ttu-id="6decf-473">설명</span><span class="sxs-lookup"><span data-stu-id="6decf-473">Description</span></span>|  
|-|-|-|  
|<span data-ttu-id="6decf-474">멤버</span><span class="sxs-lookup"><span data-stu-id="6decf-474">Member</span></span>|<span data-ttu-id="6decf-475">값</span><span class="sxs-lookup"><span data-stu-id="6decf-475">Value</span></span>|<span data-ttu-id="6decf-476">설명</span><span class="sxs-lookup"><span data-stu-id="6decf-476">Description</span></span>|  
|`OKOnly`|<span data-ttu-id="6decf-477">0</span><span class="sxs-lookup"><span data-stu-id="6decf-477">0</span></span>|<span data-ttu-id="6decf-478">확인 표시 단추에만 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-478">Displays OK button only.</span></span>|  
|`OKCancel`|<span data-ttu-id="6decf-479">1</span><span class="sxs-lookup"><span data-stu-id="6decf-479">1</span></span>|<span data-ttu-id="6decf-480">확인 표시 및 취소 단추</span><span class="sxs-lookup"><span data-stu-id="6decf-480">Displays OK and Cancel buttons.</span></span>|  
|`AbortRetryIgnore`|<span data-ttu-id="6decf-481">2</span><span class="sxs-lookup"><span data-stu-id="6decf-481">2</span></span>|<span data-ttu-id="6decf-482">중단, 다시 시도 및 무시 단추가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-482">Displays Abort, Retry, and Ignore buttons.</span></span>|  
|`YesNoCancel`|<span data-ttu-id="6decf-483">3</span><span class="sxs-lookup"><span data-stu-id="6decf-483">3</span></span>|<span data-ttu-id="6decf-484">이 예로 표시 됩니다, 아니요 및 취소 단추가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-484">Displays Yes, No, and Cancel buttons.</span></span>|  
|`YesNo`|<span data-ttu-id="6decf-485">4</span><span class="sxs-lookup"><span data-stu-id="6decf-485">4</span></span>|<span data-ttu-id="6decf-486">예 및 아니요 단추가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-486">Displays Yes and No buttons.</span></span>|  
|`RetryCancel`|<span data-ttu-id="6decf-487">5</span><span class="sxs-lookup"><span data-stu-id="6decf-487">5</span></span>|<span data-ttu-id="6decf-488">다시 시도 및 취소 단추를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-488">Displays Retry and Cancel buttons.</span></span>|  
|`Critical`|<span data-ttu-id="6decf-489">16</span><span class="sxs-lookup"><span data-stu-id="6decf-489">16</span></span>|<span data-ttu-id="6decf-490">중요 한 메시지 아이콘을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-490">Displays Critical Message icon.</span></span>|  
|`Question`|<span data-ttu-id="6decf-491">32</span><span class="sxs-lookup"><span data-stu-id="6decf-491">32</span></span>|<span data-ttu-id="6decf-492">경고 쿼리 아이콘을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-492">Displays Warning Query icon.</span></span>|  
|`Exclamation`|<span data-ttu-id="6decf-493">48</span><span class="sxs-lookup"><span data-stu-id="6decf-493">48</span></span>|<span data-ttu-id="6decf-494">경고 메시지 아이콘을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-494">Displays Warning Message icon.</span></span>|  
|`Information`|<span data-ttu-id="6decf-495">64</span><span class="sxs-lookup"><span data-stu-id="6decf-495">64</span></span>|<span data-ttu-id="6decf-496">정보 메시지 아이콘을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-496">Displays Information Message icon.</span></span>|  
|`DefaultButton1`|<span data-ttu-id="6decf-497">0</span><span class="sxs-lookup"><span data-stu-id="6decf-497">0</span></span>|<span data-ttu-id="6decf-498">첫 번째 단추가 기본 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-498">First button is default.</span></span>|  
|`DefaultButton2`|<span data-ttu-id="6decf-499">256</span><span class="sxs-lookup"><span data-stu-id="6decf-499">256</span></span>|<span data-ttu-id="6decf-500">두 번째 단추가 기본 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-500">Second button is default.</span></span>|  
|`DefaultButton3`|<span data-ttu-id="6decf-501">512</span><span class="sxs-lookup"><span data-stu-id="6decf-501">512</span></span>|<span data-ttu-id="6decf-502">세 번째 단추가 기본 단추입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-502">Third button is default.</span></span>|  
|`ApplicationModal`|<span data-ttu-id="6decf-503">0</span><span class="sxs-lookup"><span data-stu-id="6decf-503">0</span></span>|<span data-ttu-id="6decf-504">응용 프로그램 모달입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-504">Application is modal.</span></span> <span data-ttu-id="6decf-505">사용자는 현재 응용 프로그램에서 작업을 계속 하기 전에 messagebox에 응답 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-505">The user must respond to the message box before continuing work in the current application.</span></span>|  
|`SystemModal`|<span data-ttu-id="6decf-506">4096</span><span class="sxs-lookup"><span data-stu-id="6decf-506">4096</span></span>|<span data-ttu-id="6decf-507">시스템 모달입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-507">System is modal.</span></span> <span data-ttu-id="6decf-508">모든 응용 프로그램에는 사용자가 messagebox에 응답할 때까지 일시 중단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-508">All applications are suspended until the user responds to the message box.</span></span>|  
|`MsgBoxSetForeground`|<span data-ttu-id="6decf-509">65536</span><span class="sxs-lookup"><span data-stu-id="6decf-509">65536</span></span>|<span data-ttu-id="6decf-510">메시지 상자 창에 전경 창으로 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-510">Specifies the message box window as the foreground window.</span></span>|  
|`MsgBoxRight`|<span data-ttu-id="6decf-511">524288</span><span class="sxs-lookup"><span data-stu-id="6decf-511">524288</span></span>|<span data-ttu-id="6decf-512">텍스트를 오른쪽에 맞춥니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-512">Text is right-aligned.</span></span>|  
|`MsgBoxRtlReading`|<span data-ttu-id="6decf-513">1048576</span><span class="sxs-lookup"><span data-stu-id="6decf-513">1048576</span></span>|<span data-ttu-id="6decf-514">텍스트를 오른쪽에서 왼쪽 히브리어 및 아랍어 시스템에서 읽는 표시를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-514">Specifies text should appear as right-to-left reading on Hebrew and Arabic systems.</span></span>|  
  
 <span data-ttu-id="6decf-515">값 (0 ~ 5)의 첫 번째 그룹 수와 대화 상자에서 표시 되는 단추의 종류를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-515">The first group of values (0–5) describes the number and type of buttons displayed in the dialog box.</span></span> <span data-ttu-id="6decf-516">두 번째 그룹 (16, 32, 48, 64) 아이콘 스타일을 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-516">The second group (16, 32, 48, 64) describes the icon style.</span></span> <span data-ttu-id="6decf-517">세 번째 그룹 (0, 256, 512) 단추는 기본값을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-517">The third group (0, 256, 512) determines which button is the default.</span></span> <span data-ttu-id="6decf-518">네 번째 그룹 (0, 4096) 메시지 상자의 모달 결정 및 다섯 번째 그룹은 메시지 상자 창에는 전경 창이 맞춤 및 텍스트 방향을 함께 있는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-518">The fourth group (0, 4096) determines the modality of the message box, and the fifth group specifies whether or not the message box window is the foreground window, along with the alignment and direction of the text.</span></span> <span data-ttu-id="6decf-519">에 대 한 최종 값을 만들 수는 숫자를 추가 하는 경우는 `Buttons` 인수를 사용 하 여 각 그룹에서 하나의 숫자만 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-519">When adding numbers to create a final value for the `Buttons` argument, use only one number from each group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-520">이 예제에서는 `MsgBox` 예 및 아니요 단추가 있는 대화 상자에 오류 메시지를 표시 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-520">This example uses the `MsgBox` function to display a critical-error message in a dialog box with Yes and No buttons.</span></span> <span data-ttu-id="6decf-521">아니요 단추는 기본적으로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-521">The No button is specified as the default response.</span></span> <span data-ttu-id="6decf-522">결합 하 여 이렇게는 `MsgBox` 하나의 숫자 식으로 상수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-522">This is done by combining the `MsgBox` constant values into one numeric expression.</span></span> <span data-ttu-id="6decf-523">이 예제의 경우 4를 추가 (는 예/아니요 단추 조합) 및 16 (합니다 **중대 오류 메시지** 창) 256 (기본 단추를 두 번째 단추)을 통해 276 총 및 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-523">In this case, adding 4 (the Yes/No button combination) and 16 (the **Critical Message** window) and 256 (the second button as default button) gives a total of 276.</span></span> <span data-ttu-id="6decf-524">값을 반환 합니다 `MsgBox` 함수는 사용자가 선택한 단추에 따라 달라 집니다: 예 6; 값을 반환 합니다 7의 값을 반환 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-524">The value returned by the `MsgBox` function depends on the button chosen by the user: Yes returns a value of 6; No returns a value of 7.</span></span>  
  
 [!code-vb[VbVbalrCatRef#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6decf-525">
            <paramref name="Prompt" />가 <see langword="String" /> 식이 아니거나 <paramref name="Title" />이 올바르지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-525">
              <paramref name="Prompt" /> is not a <see langword="String" /> expression, or <paramref name="Title" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6decf-526">프로세스가 사용자 대화형 모드로 실행되고 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-526">Process is not running in User Interactive mode.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="6decf-527">하나 이상의 매개 변수가 <see langword="MsgBoxResult" /> 또는 <see langword="MsgBoxStyle" /> 열거형의 멤버가 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-527">One or more parameters not a member of <see langword="MsgBoxResult" /> or <see langword="MsgBoxStyle" /> enumeration.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.MessageBox.Show(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Partition">
      <MemberSignature Language="C#" Value="public static string Partition (long Number, long Start, long Stop, long Interval);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Partition(int64 Number, int64 Start, int64 Stop, int64 Interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Partition (Number As Long, Start As Long, Stop As Long, Interval As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Partition(long Number, long Start, long Stop, long Interval);" />
      <MemberSignature Language="F#" Value="static member Partition : int64 * int64 * int64 * int64 -&gt; string" Usage="Microsoft.VisualBasic.Interaction.Partition (Number, Start, Stop, Interval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int64" />
        <Parameter Name="Start" Type="System.Int64" />
        <Parameter Name="Stop" Type="System.Int64" />
        <Parameter Name="Interval" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="6decf-528">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-528">Required.</span>
          </span>
          <span data-ttu-id="6decf-529">
            <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-529">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="6decf-530">하나의 계산된 범위에서 찾을 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-530">Whole number that you want to locate within one of the calculated ranges.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="6decf-531">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-531">Required.</span>
          </span>
          <span data-ttu-id="6decf-532">
            <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-532">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="6decf-533">계산된 범위 집합의 시작을 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-533">Whole number that indicates the start of the set of calculated ranges.</span>
          </span>
          <span data-ttu-id="6decf-534">
            <c>Start</c>는 0보다 작을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-534">
              <c>Start</c> cannot be less than 0.</span>
          </span>
        </param>
        <param name="Stop">
          <span data-ttu-id="6decf-535">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-535">Required.</span>
          </span>
          <span data-ttu-id="6decf-536">
            <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-536">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="6decf-537">계산된 범위 집합의 끝을 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-537">Whole number that indicates the end of the set of calculated ranges.</span>
          </span>
          <span data-ttu-id="6decf-538">
            <c>Stop</c>은 <c>Start</c>보다 작거나 같을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-538">
              <c>Stop</c> cannot be less than or equal to <c>Start</c>.</span>
          </span>
        </param>
        <param name="Interval">
          <span data-ttu-id="6decf-539">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-539">Required.</span>
          </span>
          <span data-ttu-id="6decf-540">
            <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-540">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="6decf-541">
            <c>Start</c>와 <c>Stop</c> 사이에서 계산되는 각 범위의 크기를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-541">Whole number that indicates the size of each range calculated between <c>Start</c> and <c>Stop</c>.</span>
          </span>
          <span data-ttu-id="6decf-542">
            <c>Interval</c>은 1보다 작을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-542">
              <c>Interval</c> cannot be less than 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-543">숫자가 들어 있는 계산된 범위를 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-543">Returns a string representing the calculated range that contains a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-544">숫자가 들어 있는 계산된 범위를 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-544">Returns a string representing the calculated range that contains a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-545">합니다 `Partition` 함수는 계산 숫자 범위 집합을 지정 된 값 수가 포함 된 각 `Interval`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-545">The `Partition` function calculates a set of numeric ranges, each containing the number of values specified by `Interval`.</span></span> <span data-ttu-id="6decf-546">첫 번째 범위에서 시작 `Start`에서 마지막 범위는 20에서 끝나고 `Stop`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-546">The first range begins at `Start`, and the last range ends at `Stop`.</span></span> <span data-ttu-id="6decf-547">합니다 `Partition` 함수는 범위를 식별 합니다 `Number` 해당 범위를 설명 하는 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-547">The `Partition` function then identifies which range contains `Number` and returns a string describing that range.</span></span> <span data-ttu-id="6decf-548">범위는 문자열로 표시 됩니다 "*lowervalue*:*uppervalue*" 여기서 범위의 최소값 (*lowervalue*)는 높은 끝점에서 분리 (\* uppervalue\*)에 콜론 (:).</span><span class="sxs-lookup"><span data-stu-id="6decf-548">The range is represented in the string as "*lowervalue*:*uppervalue*", where the low end of the range (*lowervalue*) is separated from the high end (*uppervalue*) by a colon (:).</span></span>  
  
 <span data-ttu-id="6decf-549">필요한 경우는 `Partition` 함수를 삽입 하기 전에 선행 공백을 *lowervalue* 하 고 *uppervalue* 갖도록 두 값 (의 문자열 표현으로 동일한 문자 수 `Stop` + 1).</span><span class="sxs-lookup"><span data-stu-id="6decf-549">If necessary, the `Partition` function inserts leading spaces before *lowervalue* and *uppervalue* so that they both have the same number of characters as the string representation of the value (`Stop` + 1).</span></span> <span data-ttu-id="6decf-550">출력을 사용 하는 경우 이렇게 하면 합니다 `Partition` 의 여러 값을 사용 하 여 함수 `Number`, 모든 후속 정렬 작업 동안 결과 텍스트를 올바르게 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-550">This ensures that if you use the output of the `Partition` function with several values of `Number`, the resulting text will be handled properly during any subsequent sort operation.</span></span>  
  
 <span data-ttu-id="6decf-551">다음 표에서 세 가지를 사용 하 여 계산 범위에 대 한 몇 가지 샘플 문자열을 보여 줍니다 `Start`, `Stop`, 및 `Interval`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-551">The following table shows some sample strings for ranges calculated using three sets of `Start`, `Stop`, and `Interval`.</span></span> <span data-ttu-id="6decf-552">"먼저 범위" 및 "범위 마지막" 열을 표시 최저 및 최고 가능한 지정 된 범위 값 `Start` 고 `Stop`입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-552">The "First range" and "Last range" columns show the lowest and highest ranges possible given the values of `Start` and `Stop`.</span></span> <span data-ttu-id="6decf-553">열 값에 대해 반환 된 문자열을 표시 범위"이전" 및 "마지막 범위" 이후 `Number` 보다 작거나 `Start` 보다 큰 `Stop`, 각각.</span><span class="sxs-lookup"><span data-stu-id="6decf-553">The "Before first range" and "After last range" columns show the strings returned for values of `Number` less than `Start` and greater than `Stop`, respectively.</span></span>  
  
|`Start`|`Stop`|`Interval`|<span data-ttu-id="6decf-554">첫 번째 범위 전의</span><span class="sxs-lookup"><span data-stu-id="6decf-554">Before first range</span></span>|<span data-ttu-id="6decf-555">첫 번째 범위</span><span class="sxs-lookup"><span data-stu-id="6decf-555">First range</span></span>|<span data-ttu-id="6decf-556">마지막 범위</span><span class="sxs-lookup"><span data-stu-id="6decf-556">Last range</span></span>|<span data-ttu-id="6decf-557">마지막 범위 이후</span><span class="sxs-lookup"><span data-stu-id="6decf-557">After last range</span></span>|  
|-|-|-|-|-|-|-|  
|<span data-ttu-id="6decf-558">0</span><span class="sxs-lookup"><span data-stu-id="6decf-558">0</span></span>|<span data-ttu-id="6decf-559">99</span><span class="sxs-lookup"><span data-stu-id="6decf-559">99</span></span>|<span data-ttu-id="6decf-560">5</span><span class="sxs-lookup"><span data-stu-id="6decf-560">5</span></span>|<span data-ttu-id="6decf-561">"   : -1"</span><span class="sxs-lookup"><span data-stu-id="6decf-561">"   : -1"</span></span>|<span data-ttu-id="6decf-562">"  0:  4"</span><span class="sxs-lookup"><span data-stu-id="6decf-562">"  0:  4"</span></span>|<span data-ttu-id="6decf-563">" 95: 99"</span><span class="sxs-lookup"><span data-stu-id="6decf-563">" 95: 99"</span></span>|<span data-ttu-id="6decf-564">"100:   "</span><span class="sxs-lookup"><span data-stu-id="6decf-564">"100:   "</span></span>|  
|<span data-ttu-id="6decf-565">20</span><span class="sxs-lookup"><span data-stu-id="6decf-565">20</span></span>|<span data-ttu-id="6decf-566">199</span><span class="sxs-lookup"><span data-stu-id="6decf-566">199</span></span>|<span data-ttu-id="6decf-567">10</span><span class="sxs-lookup"><span data-stu-id="6decf-567">10</span></span>|<span data-ttu-id="6decf-568">"   : 19"</span><span class="sxs-lookup"><span data-stu-id="6decf-568">"   : 19"</span></span>|<span data-ttu-id="6decf-569">" 20: 29"</span><span class="sxs-lookup"><span data-stu-id="6decf-569">" 20: 29"</span></span>|<span data-ttu-id="6decf-570">"190:199"</span><span class="sxs-lookup"><span data-stu-id="6decf-570">"190:199"</span></span>|<span data-ttu-id="6decf-571">"200:   "</span><span class="sxs-lookup"><span data-stu-id="6decf-571">"200:   "</span></span>|  
|<span data-ttu-id="6decf-572">100</span><span class="sxs-lookup"><span data-stu-id="6decf-572">100</span></span>|<span data-ttu-id="6decf-573">1010</span><span class="sxs-lookup"><span data-stu-id="6decf-573">1010</span></span>|<span data-ttu-id="6decf-574">20</span><span class="sxs-lookup"><span data-stu-id="6decf-574">20</span></span>|<span data-ttu-id="6decf-575">"    : 99"</span><span class="sxs-lookup"><span data-stu-id="6decf-575">"    : 99"</span></span>|<span data-ttu-id="6decf-576">" 100: 119"</span><span class="sxs-lookup"><span data-stu-id="6decf-576">" 100: 119"</span></span>|<span data-ttu-id="6decf-577">"1000:1010"</span><span class="sxs-lookup"><span data-stu-id="6decf-577">"1000:1010"</span></span>|<span data-ttu-id="6decf-578">"1011:    "</span><span class="sxs-lookup"><span data-stu-id="6decf-578">"1011:    "</span></span>|  
  
 <span data-ttu-id="6decf-579">위 테이블에서 세 번째 줄은 결과 보여 줍니다. 때 `Start` 하 고 `Stop` 으로 균등 하 게 나눌 수 없습니다는 숫자 집합을 정의 `Interval`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-579">In the preceding table, the third line shows the result when `Start` and `Stop` define a set of numbers that cannot be evenly divided by `Interval`.</span></span> <span data-ttu-id="6decf-580">마지막 범위에서 끝나는 `Stop`, 쉽게만 11 자도 `Interval` 는 20 개입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-580">The last range ends at `Stop`, making it only 11 numbers long, even though `Interval` is 20.</span></span>  
  
 <span data-ttu-id="6decf-581">하는 경우 `Interval` 1의 범위는 "`Number`:`Number`"에 관계 없이 `Start` 및 `Stop` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-581">If `Interval` is 1, the range is "`Number`:`Number`", regardless of the `Start` and `Stop` arguments.</span></span> <span data-ttu-id="6decf-582">예를 들어 경우 `Number` 267 됩니다 `Stop` 가 1000 인 및 `Interval` 1 `Partition` "267: 267"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-582">For example, if `Number` is 267, `Stop` is 1000, and `Interval` is 1, `Partition` returns " 267: 267".</span></span>  
  
 <span data-ttu-id="6decf-583">`Partition` 데이터베이스 쿼리를 생성할 때 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-583">`Partition` can be useful when constructing database queries.</span></span> <span data-ttu-id="6decf-584">주문 수 2000 1001 송장 값 1에서 1000 사이인 예를 들어 다양 한 값의 범위 내에서 발생 하 고 표시 하는 SELECT 쿼리를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-584">You can create a SELECT query that shows how many orders occur within various value ranges, for example with invoice values from 1 to 1000, 1001 to 2000, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-585">다음 예제에서는 일련의 범위 수십 1950 2049 년에서.</span><span class="sxs-lookup"><span data-stu-id="6decf-585">The following example sets up a series of ranges for decades from 1950 through 2049.</span></span> <span data-ttu-id="6decf-586">값을 찾은 `year` 반환 확인 하 고 적절 한 범위 내에서 `String` 값 범위를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-586">It locates the value of `year` within the appropriate range and returns a `String` value showing the range.</span></span> <span data-ttu-id="6decf-587">하는 경우 `year` 1984 년 값을 예를 들어이 `Partition` "1980:1989"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-587">If `year` has a value of 1984, for example, `Partition` returns "1980:1989".</span></span>  
  
 [!code-vb[VbVbalrFunctions#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#45)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6decf-588">
            <paramref name="Start" /> &lt; 0, <paramref name="Stop" /> &lt;= <paramref name="Start" /> 또는 <paramref name="Interval" /> &lt; 1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-588">
              <paramref name="Start" /> &lt; 0, <paramref name="Stop" /> &lt;= <paramref name="Start" />, or <paramref name="Interval" /> &lt; 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SaveSetting">
      <MemberSignature Language="C#" Value="public static void SaveSetting (string AppName, string Section, string Key, string Setting);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SaveSetting(string AppName, string Section, string Key, string Setting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSetting (AppName As String, Section As String, Key As String, Setting As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveSetting(System::String ^ AppName, System::String ^ Section, System::String ^ Key, System::String ^ Setting);" />
      <MemberSignature Language="F#" Value="static member SaveSetting : string * string * string * string -&gt; unit" Usage="Microsoft.VisualBasic.Interaction.SaveSetting (AppName, Section, Key, Setting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AppName" Type="System.String" />
        <Parameter Name="Section" Type="System.String" />
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Setting" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AppName">
          <span data-ttu-id="6decf-589">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-589">Required.</span>
          </span>
          <span data-ttu-id="6decf-590">설정이 적용되는 응용 프로그램이나 프로젝트의 이름을 포함하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-590">
              <see langword="String" /> expression containing the name of the application or project to which the setting applies.</span>
          </span>
        </param>
        <param name="Section">
          <span data-ttu-id="6decf-591">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-591">Required.</span>
          </span>
          <span data-ttu-id="6decf-592">키 설정을 저장할 섹션의 이름을 포함하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-592">
              <see langword="String" /> expression containing the name of the section in which the key setting is being saved.</span>
          </span>
        </param>
        <param name="Key">
          <span data-ttu-id="6decf-593">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-593">Required.</span>
          </span>
          <span data-ttu-id="6decf-594">저장할 키 설정의 이름을 포함하는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-594">
              <see langword="String" /> expression containing the name of the key setting being saved.</span>
          </span>
        </param>
        <param name="Setting">
          <span data-ttu-id="6decf-595">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-595">Required.</span>
          </span>
          <span data-ttu-id="6decf-596">설정할 <c>키</c> 값을 포함하는 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-596">Expression containing the value to which <c>Key</c> is being set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-597">Windows 레지스트리에 응용 프로그램 엔트리를 저장하거나 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-597">Saves or creates an application entry in the Windows registry.</span>
          </span>
          <span data-ttu-id="6decf-598">
            <see langword="My" /> 기능을 사용하면 <see langword="SaveSetting" />보다 레지스트리 작업의 생산성 및 성능이 향상됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-598">The <see langword="My" /> feature gives you greater productivity and performance in registry operations than <see langword="SaveSetting" />.</span>
          </span>
          <span data-ttu-id="6decf-599">자세한 내용은 <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-599">For more information, see <see cref="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-600">합니다 `SaveSetting` 키를 추가 하는 함수 `HKEY_CURRENT_USER\Software\VB and VBA Program Settings`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-600">The `SaveSetting` function adds the key to `HKEY_CURRENT_USER\Software\VB and VBA Program Settings`.</span></span>  
  
 <span data-ttu-id="6decf-601">어떤 이유로 키 설정을 저장할 수 없습니다, 하는 경우 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-601">If the key setting cannot be saved for any reason, an error occurs.</span></span>  
  
 <span data-ttu-id="6decf-602">`SaveSetting` 작동 하므로 한 사용자 로그온 할 필요는 `HKEY_LOCAL_USER` 사용자가 대화형으로 로그온 할 때까지 비활성화 되어 있는 레지스트리 키입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-602">`SaveSetting` requires that a user be logged on since it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively.</span></span>  
  
 <span data-ttu-id="6decf-603">아래 (예: Mtx.exe) 비 대화형 프로세스에서 액세스 하는 레지스트리 설정에 저장 해야 합니다 `HKEY_LOCAL_MACHINE\Software\` 또는 `HKEY_USER\DEFAULT\Software` 레지스트리 키입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-603">Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\Software\` or the `HKEY_USER\DEFAULT\Software` registry keys.</span></span>  
  
 <span data-ttu-id="6decf-604">`SaveSetting` 필요 `Write` 하 고 `Create` <xref:System.Security.Permissions.RegistryPermission> 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-604">`SaveSetting` requires `Write` and `Create`<xref:System.Security.Permissions.RegistryPermission> .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-605">다음 예제에서는 먼저 사용 하 여는 `SaveSetting` 함수에 대해 Windows 레지스트리 항목을 확인 하는 `MyApp` 응용 프로그램을 사용 하 여 다음를 `DeleteSetting` 함수를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-605">The following example first uses the `SaveSetting` function to make entries in the Windows registry for the `MyApp` application, and then uses the `DeleteSetting` function to remove them.</span></span>  
  
 [!code-vb[VbVbalrCatRef#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6decf-606">키 레지스트리를 만들 수 없거나 사용자가 로그인하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-606">Key registry could not be created, or user is not logged in.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.Security.Permissions.RegistryPermission" />
      </Docs>
    </Member>
    <Member MemberName="Shell">
      <MemberSignature Language="C#" Value="public static int Shell (string Pathname, Microsoft.VisualBasic.AppWinStyle Style = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, bool Wait = false, int Timeout = -1);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Shell(string Pathname, valuetype Microsoft.VisualBasic.AppWinStyle Style, bool Wait, int32 Timeout) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Shell (Pathname As String, Optional Style As AppWinStyle = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, Optional Wait As Boolean = false, Optional Timeout As Integer = -1) As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="static member Shell : string * Microsoft.VisualBasic.AppWinStyle * bool * int -&gt; int" Usage="Microsoft.VisualBasic.Interaction.Shell (Pathname, Style, Wait, Timeout)" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="C#" Value="public static int Shell (string PathName, Microsoft.VisualBasic.AppWinStyle Style = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, bool Wait = false, int Timeout = -1);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Shell(string PathName, valuetype Microsoft.VisualBasic.AppWinStyle Style, bool Wait, int32 Timeout) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function Shell (PathName As String, Optional Style As AppWinStyle = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, Optional Wait As Boolean = false, Optional Timeout As Integer = -1) As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Value="static member Shell : string * Microsoft.VisualBasic.AppWinStyle * bool * int -&gt; int" Usage="Microsoft.VisualBasic.Interaction.Shell (PathName, Style, Wait, Timeout)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Pathname" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="PathName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="Style" Type="Microsoft.VisualBasic.AppWinStyle" Index="1" />
        <Parameter Name="Wait" Type="System.Boolean" Index="2" />
        <Parameter Name="Timeout" Type="System.Int32" Index="3" />
      </Parameters>
      <Docs>
        <param name="PathName">
          <span data-ttu-id="6decf-607">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-607">Required.</span>
          </span>
          <span data-ttu-id="6decf-608">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-608">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="6decf-609">필수적 요소인 모든 인수 및 명령줄 스위치와 함께 실행할 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-609">Name of the program to execute, together with any required arguments and command-line switches.</span>
          </span>
          <span data-ttu-id="6decf-610">또한 <c>PathName</c>에는 드라이브와 디렉터리 경로 또는 폴더가 포함될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-610">
              <c>PathName</c> can also include the drive and the directory path or folder.</span>
          </span>
          <span data-ttu-id="6decf-611">프로그램의 경로를 모를 경우 <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" />를 사용하여 찾을 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-611">If you do not know the path to the program, you can use the <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" /> to locate it.</span>
          </span>
          <span data-ttu-id="6decf-612">예를 들어, <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>를 호출할 수 있으며, 드라이브 C:\\의 모든 위치에서 이름이 <c>testFile.txt</c>인 모든 파일의 전체 경로가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-612">For example, you can call <c>My.Computer.FileSystem.GetFiles("C:\", True, "testFile.txt")</c>, which returns the full path of every file named <c>testFile.txt</c> anywhere on drive C:\\.</span>
          </span>
        </param>
        <param name="Pathname">To be added.</param>
        <param name="Style">
          <span data-ttu-id="6decf-613">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-613">Optional.</span>
          </span>
          <span data-ttu-id="6decf-614">
            <see langword="AppWinStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-614">
              <see langword="AppWinStyle" />.</span>
          </span>
          <span data-ttu-id="6decf-615">프로그램이 실행될 창의 스타일을 지정하는 <see cref="T:Microsoft.VisualBasic.AppWinStyle" />에서 선택된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-615">A value chosen from the <see cref="T:Microsoft.VisualBasic.AppWinStyle" /> specifying the style of the window in which the program is to run.</span>
          </span>
          <span data-ttu-id="6decf-616">
            <c>Style</c>이 생략되면 <see langword="Shell" />은 최소화되고 포커스가 있는 상태로 프로그램을 시작하는 <see langword="AppWinStyle.MinimizedFocus" />를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-616">If <c>Style</c> is omitted, <see langword="Shell" /> uses <see langword="AppWinStyle.MinimizedFocus" />, which starts the program minimized and with focus.</span>
          </span>
        </param>
        <param name="Wait">
          <span data-ttu-id="6decf-617">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-617">Optional.</span>
          </span>
          <span data-ttu-id="6decf-618">
            <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-618">
              <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="6decf-619">프로그램이 완료될 때까지 <see langword="Shell" /> 함수가 대기할지 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-619">A value indicating whether the <see langword="Shell" /> function should wait for completion of the program.</span>
          </span>
          <span data-ttu-id="6decf-620">
            <c>Wait</c>가 생략되면 <see langword="Shell" />은 <see langword="False" />를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-620">If <c>Wait</c> is omitted, <see langword="Shell" /> uses <see langword="False" />.</span>
          </span>
        </param>
        <param name="Timeout">
          <span data-ttu-id="6decf-621">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-621">Optional.</span>
          </span>
          <span data-ttu-id="6decf-622">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-622">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="6decf-623">
            <c>Wait</c>가 <see langword="True" />인 경우 완료될 때까지 대기하는 시간(밀리초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-623">The number of milliseconds to wait for completion if <c>Wait</c> is <see langword="True" />.</span>
          </span>
          <span data-ttu-id="6decf-624">
            <c>Timeout</c>이 생략되면 <see langword="Shell" />은 -1을 사용합니다. 이 값은 시간 제한이 없고 프로그램이 완료될 때까지 <see langword="Shell" />이 반환되지 않음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-624">If <c>Timeout</c> is omitted, <see langword="Shell" /> uses -1, which means there is no timeout and <see langword="Shell" /> does not return until the program finishes.</span>
          </span>
          <span data-ttu-id="6decf-625">따라서 <c>Timeout</c>을 생략하거나 -1로 설정하면 <see langword="Shell" />에서 프로그램에 제어를 반환하지 않게 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-625">Therefore, if you omit <c>Timeout</c> or set it to -1, it is possible that <see langword="Shell" /> might never return control to your program.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-626">실행 프로그램을 실행하고 실행 중인 프로그램의 프로세스 ID가 포함된 정수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-626">Runs an executable program and returns an integer containing the program's process ID if it is still running.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-627">실행 프로그램을 실행하고 실행 중인 프로그램의 프로세스 ID가 포함된 정수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-627">Runs an executable program and returns an integer containing the program's process ID if it is still running.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-628">반환 값을 `Shell` 함수에서 프로그램 이름이 있는지 여부에 따라 달라 집니다 `PathName` 경우 계속 실행 중인 `Shell` 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-628">The return value of the `Shell` function depends on whether the program named in `PathName` is still executing when `Shell` returns.</span></span> <span data-ttu-id="6decf-629">설정 하는 경우 `Wait` 하 `True` 프로그램이 완료 제한 시간이 만료 되기 전에 `Shell` 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-629">If you set `Wait` to `True` and the program finishes before the timeout expires, `Shell` returns zero.</span></span> <span data-ttu-id="6decf-630">생략 하면 또는 제한 시간이 만료 되 면 `Wait` 로 설정 하거나 `False`, `Shell` 프로그램의 프로세스 ID를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-630">If the timeout expires, or if you omit `Wait` or set it to `False`, `Shell` returns the process ID of the program.</span></span> <span data-ttu-id="6decf-631">프로세스 ID는 실행 중인 프로그램을 식별 하는 고유 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-631">The process ID is a unique number that identifies the running program.</span></span>  
  
## <a name="failure-to-start"></a><span data-ttu-id="6decf-632">시작 하지 못함</span><span class="sxs-lookup"><span data-stu-id="6decf-632">Failure to Start</span></span>  
 <span data-ttu-id="6decf-633">경우는 `Shell` 함수는 명명된 된 프로그램을 시작할 수 없습니다는 <xref:System.IO.FileNotFoundException> 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-633">If the `Shell` function cannot start the named program, a <xref:System.IO.FileNotFoundException> error occurs.</span></span> <span data-ttu-id="6decf-634">이 발생할 수 있습니다 예를 들어 같은 16 비트 프로그램을 실행 하려고 할 때 `command.com`를 사용 하 여 응용 프로그램에서 <xref:System.Windows.Forms?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-634">This can happen, for example, when you attempt to run a 16-bit program, such as `command.com`, from an application using <xref:System.Windows.Forms?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6decf-635">해결 방법에 대 한 원하는 16 비트 프로그램을 호출 하는 32 비트 프로그램을 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-635">For a workaround, you can run a 32-bit program that calls the desired 16-bit program.</span></span> <span data-ttu-id="6decf-636">경우 `command.com`를 실행할 수 있습니다 `cmd.exe` 안으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-636">In the case of `command.com`, you can run `cmd.exe` as an alternative.</span></span>  
  
## <a name="waiting-for-completion"></a><span data-ttu-id="6decf-637">완료 대기 중</span><span class="sxs-lookup"><span data-stu-id="6decf-637">Waiting for Completion</span></span>  
 <span data-ttu-id="6decf-638">기본적으로 `Shell` 함수는 프로그램을 비동기적으로 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-638">By default, the `Shell` function runs the program asynchronously.</span></span> <span data-ttu-id="6decf-639">즉, 프로그램을 시작 합니다 `Shell` 함수에 다음 하기 전에 실행 종료 되지 않습니다는 `Shell` 함수 실행 됩니다. 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-639">This means that a program started with the `Shell` function might not finish executing before the statements following the `Shell` function are executed.</span></span> <span data-ttu-id="6decf-640">계속 하기 전에 완료 프로그램에 대 한 대기 하려는 경우 설정 합니다 `Wait` 에 `True`입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-640">If you want to wait for the program to finish before you continue, set `Wait` to `True`.</span></span>  
  
## <a name="determining-the-exit-code"></a><span data-ttu-id="6decf-641">종료 코드를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-641">Determining the Exit Code</span></span>  
 <span data-ttu-id="6decf-642">프로세스를 반환할 수는 *종료 코드* 종료 될 때입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-642">A process can return an *exit code* when it terminates.</span></span> <span data-ttu-id="6decf-643">그러나 사용할 수 없습니다 `Shell` 있기 때문에이 종료 코드를 검색할 `Shell` 종료를 기다리는 경우 0을 반환 및 프로세스에서 다른 개체에서 실행 되므로 `Shell`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-643">However, you cannot use `Shell` to retrieve this exit code, because `Shell` returns zero if it waits for termination, and also because the process runs in a different object from `Shell`.</span></span>  
  
 <span data-ttu-id="6decf-644">프로세스에서 종료 코드를 검색 하려면 프로세스를 시작 및 종료 될 때까지 기다리는 사용자 고유의 코드를 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-644">To retrieve the exit code from a process, you must write your own code to initiate the process and wait for termination.</span></span> <span data-ttu-id="6decf-645">다음 예제에서는 프로세스를 시작, 종료 될 때까지 기다렸다가, 종료 코드를 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-645">The following example shows how to initiate a process, wait for it to terminate, and retrieve its exit code.</span></span>  
  
```vb  
Dim procID As Integer  
Dim newProc As Diagnostics.Process  
newProc = Diagnostics.Process.Start("C:\WINDOWS\NOTEPAD.EXE")  
procID = newProc.Id  
newProc.WaitForExit()  
Dim procEC As Integer = -1  
If newProc.HasExited Then  
    procEC = newProc.ExitCode  
End If  
MsgBox("Process with ID " & CStr(ProcID) & _  
    " terminated with exit code " & CStr(procEC))  
```  
  
## <a name="protecting-the-file-specification"></a><span data-ttu-id="6decf-646">보호 파일 사양</span><span class="sxs-lookup"><span data-stu-id="6decf-646">Protecting the File Specification</span></span>  
 <span data-ttu-id="6decf-647">항상 묶어야 전체 경로 및 파일 사양은 따옴표 안에 다음 예와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-647">You should always enclose the entire path and file specification in quotation marks, as the following example shows.</span></span>  
  
```vb  
ID = Shell("""C:\Program Files\display.exe"" -a -q", , True, 100000)  
```  
  
 <span data-ttu-id="6decf-648">각 인접 큰따옴표 쌍 (`" "`) 문자열에서 리터럴 문자열에 하나의 큰따옴표 문자로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-648">Each pair of adjacent double quotation marks (`" "`) within the string literal is interpreted as one double quotation character in the string.</span></span> <span data-ttu-id="6decf-649">앞의 예제는 다음 문자열을 제공 하는 따라서는 `Shell` 함수:</span><span class="sxs-lookup"><span data-stu-id="6decf-649">Therefore, the preceding example presents the following string to the `Shell` function:</span></span>  
  
```console  
"C:\Program Files\display.exe" -a -q  
```  
  
 <span data-ttu-id="6decf-650">따옴표로 묶인 경로가 없는 경우 Windows는 라는 파일을 검색할 `Program.exe` C:\ 디렉터리에 대신 `display.exe` C:\Program Files 디렉터리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-650">If you did not have the path enclosed in quotation marks, Windows would look for a file called `Program.exe` in the C:\ directory, instead of `display.exe` in the C:\Program Files directory.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6decf-651">경로 및 파일 사양 따옴표로 묶지 마십시오 경우 보안 위험이 파일 이름 또는 경로 노드에 공백이 포함 된 경우.</span><span class="sxs-lookup"><span data-stu-id="6decf-651">If you do not enclose the path and file specification in quotation marks, there is a security risk if the file name or a path node contains spaces.</span></span> <span data-ttu-id="6decf-652">위의 예제에서는 경로 노드에 `\Program Files` 공백이 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-652">In the preceding example, the path node `\Program Files` includes a space.</span></span> <span data-ttu-id="6decf-653">인용 부호 및 명명 된 프로그램 내에서 지정 되지 않았습니다 하는 경우 `Program.exe` c: \에 설치 되어 있던\\, 예를 들어 불법적 인 변조로 Windows 실행 됩니다 대신 `display.exe`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-653">If the specification were not inside quotation marks and a program named `Program.exe` had been installed in C:\\, for example by illicit tampering, Windows would execute it instead of `display.exe`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6decf-654">`Shell` 함수에 비관리 코드 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-654">The `Shell` function requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="6decf-655">자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-655">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-656">다음 예제에서는 `Shell` 사용자가 지정한 응용 프로그램을 실행할 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-656">The following example uses the `Shell` function to run an application specified by the user.</span></span> <span data-ttu-id="6decf-657">지정 <xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType> 두 번째 인수가 보통 크기의 응용 프로그램 및 포커스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-657">Specifying <xref:Microsoft.VisualBasic.AppWinStyle.NormalFocus?displayProperty=nameWithType> as the second argument opens the application in normal size and gives it the focus.</span></span>  
  
 [!code-vb[VbVbalrFunctions#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#47)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6decf-658">
            <paramref name="Style" />의 범위는 0-9(포함)가 아니어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-658">
              <paramref name="Style" /> is not within range 0 through 9, inclusive.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="6decf-659">
            <see langword="Shell" />이 <paramref name="PathName" /> 파일을 찾을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-659">
              <see langword="Shell" /> cannot find the <paramref name="PathName" /> file.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="6decf-660">
            <paramref name="PathName" />가 <see langword="Nothing" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-660">
              <paramref name="PathName" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.AppWinStyle" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IO.FileNotFoundException" />
        <altmember cref="T:System.NullReferenceException" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" />
        <altmember cref="Overload:Microsoft.VisualBasic.Interaction.AppActivate" />
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static object Switch (params object[] VarExpr);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Switch(object[] VarExpr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Switch (ParamArray VarExpr As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Switch(... cli::array &lt;System::Object ^&gt; ^ VarExpr);" />
      <MemberSignature Language="F#" Value="static member Switch : obj[] -&gt; obj" Usage="Microsoft.VisualBasic.Interaction.Switch VarExpr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarExpr" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="VarExpr">
          <span data-ttu-id="6decf-661">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-661">Required.</span>
          </span>
          <span data-ttu-id="6decf-662">
            <see langword="Object" /> 매개 변수 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-662">
              <see langword="Object" /> parameter array.</span>
          </span>
          <span data-ttu-id="6decf-663">요소의 수는 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-663">Must have an even number of elements.</span>
          </span>
          <span data-ttu-id="6decf-664">쉼표로 구분된 <see langword="Object" /> 변수나 식의 목록 또는 1차원 배열의 <see langword="Object" /> 요소를 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-664">You can supply a list of <see langword="Object" /> variables or expressions separated by commas, or a single-dimensional array of <see langword="Object" /> elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6decf-665">식 목록을 계산하고 목록에서 <see langword="Object" />인 첫 번째 식에 해당하는 <see langword="True" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-665">Evaluates a list of expressions and returns an <see langword="Object" /> value corresponding to the first expression in the list that is <see langword="True" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6decf-666">식 목록을 계산하고 목록에서 <see langword="Object" />인 첫 번째 식에 해당하는 <see langword="True" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-666">Evaluates a list of expressions and returns an <see langword="Object" /> value corresponding to the first expression in the list that is <see langword="True" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6decf-667">제공 된 인수 `VarExpr` 쌍을 이루는 식 및 값으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-667">The argument supplied to `VarExpr` consists of paired expressions and values.</span></span> <span data-ttu-id="6decf-668">`Switch` 의 가장 큰 인덱스를 가장 낮은 홀수 식을 평가 하는 함수 `VarExpr`에 계산 되는 첫 번째 식과 연결 된 짝수 값을 반환 합니다 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-668">The `Switch` function evaluates the odd-numbered expressions from lowest to highest index in `VarExpr`, and returns the even-numbered value associated with the first expression that evaluates to `True`.</span></span> <span data-ttu-id="6decf-669">예를 들어 경우 `VarExpr(0)` 는 `True`, `Switch` 반환 `VarExpr(1)`, 경우에 `VarExpr(0)` 는 `False` 하지만 `VarExpr(2)` 는 `True`, `Switch` 반환 `VarExpr(3)`등.</span><span class="sxs-lookup"><span data-stu-id="6decf-669">For example, if `VarExpr(0)` is `True`, `Switch` returns `VarExpr(1)`, and if `VarExpr(0)` is `False` but `VarExpr(2)` is `True`, `Switch` returns `VarExpr(3)`, and so on.</span></span>  
  
 <span data-ttu-id="6decf-670">제공 하지 않는 경우는 `VarExpr` 인수를 `Switch` 반환 `Nothing`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-670">If you do not supply the `VarExpr` argument, `Switch` returns `Nothing`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6decf-671">인수 목록의 식은 함수 호출을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-671">The expressions in the argument list can include function calls.</span></span> <span data-ttu-id="6decf-672">인수 목록에 대 한 호출에 대 한 준비 과정의 일부로 `Switch`, Visual Basic 컴파일러는 모든 식에서 모든 함수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-672">As part of preparing the argument list for the call to `Switch`, the Visual Basic compiler calls every function in every expression.</span></span> <span data-ttu-id="6decf-673">즉, 인수 목록에서 이전 식이 경우 호출 되지 않는 특정 함수를 사용할 수 없게 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-673">This means that you cannot rely on a particular function not being called if an expression earlier in the argument list is `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6decf-674">다음 예제에서는 `Switch` 도시의 이름과 일치 하는 언어의 이름을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-674">The following example uses the `Switch` function to return the name of a language that matches the name of a city.</span></span> <span data-ttu-id="6decf-675">필요한 `Option Strict` 수 `Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-675">It requires that `Option Strict` be `Off`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#48)]  
  
 <span data-ttu-id="6decf-676">때문에 <xref:System.Diagnostics> 네임 스페이스 라는 클래스도 포함 되어 있습니다 <xref:System.Diagnostics.Switch>에 대 한 호출을 `Switch` 함수를 사용 하 여 한정 되어야 합니다는 <xref:Microsoft.VisualBasic> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6decf-676">Because the <xref:System.Diagnostics> namespace also contains a class called <xref:System.Diagnostics.Switch>, a call to the `Switch` function must be qualified with the <xref:Microsoft.VisualBasic> namespace.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6decf-677">인수 개수가 홀수 개입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6decf-677">Number of arguments is odd.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])" />
        <altmember cref="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>