<Type Name="Financial" FullName="Microsoft.VisualBasic.Financial">
  <TypeSignature Language="C#" Value="public sealed class Financial" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Financial extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Financial" />
  <TypeSignature Language="VB.NET" Value="Public Module Financial" />
  <TypeSignature Language="C++ CLI" Value="public ref class Financial sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bc242-101"><see langword="Financial" /> 모듈에는 재무 관련 작업을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-101">The <see langword="Financial" /> module contains procedures used to perform financial operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-102">이 모듈은 감가, 현재 및 미래 가치, 지 및 지불 하는 비율이 등의 금융 계산을 수행 하는 Visual Basic 런타임 라이브러리 멤버를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-102">This module supports the Visual Basic run-time library members that perform financial calculations such as depreciation, present and future values, interest rates, rates of return, and payments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-103">사용 하 여이 예제는 `Rate` 지급액의 총 수를 지정 된 대출의 관심 있는 속도 계산 하는 함수 (`TotPmts`), 대 부를 받아 지불 양을 (`Payment`), 현재 가치 또는 대출의 보안 주체 (`PVal`), 미래 대출 값 (`FVal`), 지불 시작 이나 끝 납입 기한 날짜가 인지 여부를 나타내는 숫자 (`PayType`), 및 예상된 이자율의 근사값 (`Guess`).</span><span class="sxs-lookup"><span data-stu-id="bc242-103">This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DDB">
      <MemberSignature Language="C#" Value="public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 DDB(float64 Cost, float64 Salvage, float64 Life, float64 Period, float64 Factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDB (Cost As Double, Salvage As Double, Life As Double, Period As Double, Optional Factor As Double = 2) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
        <Parameter Name="Factor" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="bc242-104">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-104">Required.</span></span> <span data-ttu-id="bc242-105">초기 자산 비용을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-105"><see langword="Double" /> specifying initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="bc242-106">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-106">Required.</span></span> <span data-ttu-id="bc242-107">내용 연수 종료 시점의 자산 값을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-107"><see langword="Double" /> specifying value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="bc242-108">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-108">Required.</span></span> <span data-ttu-id="bc242-109">자산의 내용 연수 길이를 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-109"><see langword="Double" /> specifying length of useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="bc242-110">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-110">Required.</span></span> <span data-ttu-id="bc242-111">자산 감가상각이 계산되는 기간을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-111"><see langword="Double" /> specifying period for which asset depreciation is calculated.</span></span></param>
        <param name="Factor"><span data-ttu-id="bc242-112">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-112">Optional.</span></span> <span data-ttu-id="bc242-113">잔액 감소 비율을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-113"><see langword="Double" /> specifying rate at which the balance declines.</span></span> <span data-ttu-id="bc242-114">생략하면 2(이중 체감 잔액법)로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-114">If omitted, 2 (double-declining method) is assumed.</span></span></param>
        <summary><span data-ttu-id="bc242-115">이중 체감 잔액법 또는 다른 방법을 사용하여 특정 기간의 자산에 대한 감가상각을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-115">Returns a <see langword="Double" /> specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></summary>
        <returns><span data-ttu-id="bc242-116">이중 체감 잔액법 또는 다른 방법을 사용하여 특정 기간의 자산에 대한 감가상각을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-116">Returns a <see langword="Double" /> specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-117">이중 체감 잔액 법 빠른 속도로 감가상각을 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-117">The double-declining balance method computes depreciation at an accelerated rate.</span></span> <span data-ttu-id="bc242-118">감가 비율이 첫 번째 기간 가장 하 고 기간에서 감소 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-118">Depreciation is highest in the first period and decreases in successive periods.</span></span>  
  
 <span data-ttu-id="bc242-119">`Life` 및 `Period` 인수는 같은 단위로 표현 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-119">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="bc242-120">예를 들어 경우 `Life` 월에 `Period` 개월도 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-120">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="bc242-121">모든 인수는 양수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-121">All arguments must be positive numbers.</span></span>  
  
 <span data-ttu-id="bc242-122">`DDB` 함수는 지정 된 기간에 대 한 감가상각비를 계산 하는 다음 수식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-122">The `DDB` function uses the following formula to calculate depreciation for a given period:</span></span>  
  
 <span data-ttu-id="bc242-123">감가상각 / '를 ' ((Cost – Salvage) \* 비율) / 수명</span><span class="sxs-lookup"><span data-stu-id="bc242-123">Depreciation / Period = ((Cost – Salvage) \* Factor) / Life</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-124">사용 하 여이 예제는 `DDB` 초기 비용 특정된 기간에 대 한 자산의 감가상각을 반환 하는 함수 (`InitCost`), 자산의 연수 끝날 때 잔존 가치 (`SalvageVal`), (년동안에서자산의총수명`LifeTime`), 및 감가상각이 계산 되는 기간 (`Depr`).</span><span class="sxs-lookup"><span data-stu-id="bc242-124">This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc242-125"><paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0 또는 <paramref name="Period" /> &gt; <paramref name="Life." /></span><span class="sxs-lookup"><span data-stu-id="bc242-125"><paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0, or <paramref name="Period" /> &gt; <paramref name="Life." /></span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="FV">
      <MemberSignature Language="C#" Value="public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FV(float64 Rate, float64 NPer, float64 Pmt, float64 PV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function FV (Rate As Double, NPer As Double, Pmt As Double, Optional PV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="bc242-126">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-126">Required.</span></span> <span data-ttu-id="bc242-127">기간당 이자율을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-127"><see langword="Double" /> specifying interest rate per period.</span></span> <span data-ttu-id="bc242-128">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-128">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="bc242-129">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-129">Required.</span></span> <span data-ttu-id="bc242-130">연금의 총 지불 기간 수를 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-130"><see langword="Double" /> specifying total number of payment periods in the annuity.</span></span> <span data-ttu-id="bc242-131">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-131">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="bc242-132">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-132">Required.</span></span> <span data-ttu-id="bc242-133">기간당 지불액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-133"><see langword="Double" /> specifying payment to be made each period.</span></span> <span data-ttu-id="bc242-134">지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-134">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="bc242-135">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-135">Optional.</span></span> <span data-ttu-id="bc242-136">일련의 미래 지불액에 대한 현재 값 또는 총액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-136"><see langword="Double" /> specifying present value (or lump sum) of a series of future payments.</span></span> <span data-ttu-id="bc242-137">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-137">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span> <span data-ttu-id="bc242-138">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-138">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="bc242-139">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-139">Optional.</span></span> <span data-ttu-id="bc242-140"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-140">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="bc242-141">이 인수는 납입 기한 말에 납입이 되어야 하면 <see langword="DueDate.EndOfPeriod" />이고, 납입 기한 초에 납입이 되어야 하면 <see langword="DueDate.BegOfPeriod" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-141">This argument must be either <see langword="DueDate.EndOfPeriod" /> if payments are due at the end of the payment period, or <see langword="DueDate.BegOfPeriod" /> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="bc242-142">생략된 경우 <see langword="DueDate.EndOfPeriod" />를 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-142">If omitted, <see langword="DueDate.EndOfPeriod" /> is assumed.</span></span></param>
        <summary><span data-ttu-id="bc242-143">일정 기간의 고정 지불액과 고정 이자율을 기준으로 한 예상 연금액을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-143">Returns a <see langword="Double" /> specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="bc242-144">일정 기간의 고정 지불액과 고정 이자율을 기준으로 한 예상 연금액을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-144">Returns a <see langword="Double" /> specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-145">연금은 일련의 시간이 지남에 따라 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-145">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="bc242-146">대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 연금 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-146">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="bc242-147">`Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-147">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="bc242-148">예를 들어 경우 `Rate` 월 단위로 계산 `NPer` 도 월 단위로 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-148">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="bc242-149">모든 인수에 대 한 현금 (예: 절약 예치금) 지급 나타내는 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-149">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-150">사용 하 여이 예제는 `FV` 함수를 지정 하 여 투자의 미래 가치를 반환 하는 비율 기간당 (`APR / 12`), 지불의 총 수 (`TotPmts`), 결제 (`Payment`)의 현재 값은 투자 (`PVal`), 및 결제 시작과 끝 지불 기간 중에 수행 되는지 여부를 나타내는 숫자 (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="bc242-150">This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="bc242-151">되므로 `Payment` 현금 지출을 나타내는 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-151">Note that because `Payment` represents cash paid out, it is a negative number.</span></span>  
  
 [!code-vb[VbVbalrMath#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPmt">
      <MemberSignature Language="C#" Value="public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="bc242-152">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-152">Required.</span></span> <span data-ttu-id="bc242-153">기간당 이자율을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-153"><see langword="Double" /> specifying interest rate per period.</span></span> <span data-ttu-id="bc242-154">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-154">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="bc242-155">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-155">Required.</span></span> <span data-ttu-id="bc242-156">1에서 <c>NPer</c>에 이르는 지불 기간을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-156"><see langword="Double" /> specifying payment period in the range 1 through <c>NPer</c>.</span></span></param>
        <param name="NPer"><span data-ttu-id="bc242-157">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-157">Required.</span></span> <span data-ttu-id="bc242-158">연금의 총 지불 기간 수를 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-158"><see langword="Double" /> specifying total number of payment periods in the annuity.</span></span> <span data-ttu-id="bc242-159">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-159">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="bc242-160">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-160">Required.</span></span> <span data-ttu-id="bc242-161">현재 값, 금일 값, 일련의 미래 지불액 또는 수령액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-161"><see langword="Double" /> specifying present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="bc242-162">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-162">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="bc242-163">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-163">Optional.</span></span> <span data-ttu-id="bc242-164">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-164"><see langword="Double" /> specifying future value or cash balance you want after you've made the final payment.</span></span> <span data-ttu-id="bc242-165">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-165">For example, the future value of a loan is $0 because that's its value after the final payment.</span></span> <span data-ttu-id="bc242-166">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-166">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="bc242-167">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-167">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="bc242-168">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-168">Optional.</span></span> <span data-ttu-id="bc242-169"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-169">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="bc242-170">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-170">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="bc242-171">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-171">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="bc242-172">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 이자 지불액을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-172">Returns a <see langword="Double" /> specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="bc242-173">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 이자 지불액을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-173">Returns a <see langword="Double" /> specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-174">연금은 일련의 시간이 지남에 따라 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-174">An annuity is a series of fixed cash payments made over time.</span></span> <span data-ttu-id="bc242-175">대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 연금 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-175">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="bc242-176">`Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-176">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="bc242-177">예를 들어 경우 `Rate` 월 단위로 계산 `NPer` 도 월 단위로 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-177">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="bc242-178">모든 인수에 대 한 현금 (예: 절약 예치금) 지급 나타내는 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-178">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-179">사용 하 여이 예제는 `IPmt` 함수가 지불의 모든 지불 경우 이자 계산을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-179">This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value.</span></span> <span data-ttu-id="bc242-180">기간당 이자율은 (`APR / 12`), 관심 있는 부분은 필요한 지불 기간 (`Period`), 지불의 총 수 (`TotPmts`), 현재 가치 또는 대출의 보안 주체 (`PVal`), 대출의 미래 가치 (`FVal`), 및 결제 되 시작 이나 끝 납입 기한 날짜가 있는지 여부를 나타내는 숫자 (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="bc242-180">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc242-181"><paramref name="Per" /> &lt;= 0 또는 <paramref name="Per" /> &gt; <paramref name="NPer" /></span><span class="sxs-lookup"><span data-stu-id="bc242-181"><paramref name="Per" /> &lt;= 0 or <paramref name="Per" /> &gt; <paramref name="NPer" /></span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="IRR">
      <MemberSignature Language="C#" Value="public static double IRR (ref double[] ValueArray, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 IRR(float64[]&amp; ValueArray, float64 Guess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function IRR (ByRef ValueArray As Double(), Optional Guess As Double = 0.1) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]&amp;" RefType="ref" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="bc242-182">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-182">Required.</span></span> <span data-ttu-id="bc242-183">현금 흐름 값을 지정하는 <see langword="Double" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-183">Array of <see langword="Double" /> specifying cash flow values.</span></span> <span data-ttu-id="bc242-184">배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-184">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="Guess"><span data-ttu-id="bc242-185">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-185">Optional.</span></span> <span data-ttu-id="bc242-186"><see langword="IRR" />에서 반환할 추정 값을 지정하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-186">Object specifying value you estimate will be returned by <see langword="IRR" />.</span></span> <span data-ttu-id="bc242-187">생략할 경우 <c>Guess</c>는 0.1(10%)입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-187">If omitted, <c>Guess</c> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="bc242-188">일련의 주기적인 현금 흐름(지불액과 수령액)에 대한 내부 수익률을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-188">Returns a <see langword="Double" /> specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="bc242-189">일련의 주기적인 현금 흐름(지불액과 수령액)에 대한 내부 수익률을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-189">Returns a <see langword="Double" /> specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-190">내부 수익률은 이자 지급액 및 수령액 정기적으로 발생 하는 구성 된 투자에 대 한 수신입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-190">The internal rate of return is the interest rate received for an investment consisting of payments and receipts that occur at regular intervals.</span></span>  
  
 <span data-ttu-id="bc242-191">`IRR` 함수는 배열에 있는 값의 순서를 사용 하 여 지급액 및 수령액의 순서를 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-191">The `IRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="bc242-192">올바른 순서로 지불 및 수신 확인 값을 입력 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-192">Be sure to enter your payment and receipt values in the correct sequence.</span></span> <span data-ttu-id="bc242-193">각 기간에 대 한 현금 흐름으로 연금에 대 한 이므로 수정 해야 하 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-193">The cash flow for each period does not need to be fixed, as it is for an annuity.</span></span>  
  
 <span data-ttu-id="bc242-194">`IRR` 반복적으로 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-194">`IRR` is calculated by iteration.</span></span> <span data-ttu-id="bc242-195">값의 시작 `Guess`, `IRR` 내 때까지 결과를 0.00001% 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-195">Starting with the value of `Guess`, `IRR` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="bc242-196">경우 `IRR` 20 후 결과 실패를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-196">If `IRR` cannot find a result after 20 tries, it fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-197">이 예제는 `IRR` 함수는 일련의 배열에 포함 된 5 개 현금 흐름에 대 한 내부 수익률을 반환 `Values()`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-197">In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="bc242-198">첫 번째 배열 요소는 비즈니스 착수 비용을 나타내는 음의 현금 흐름.</span><span class="sxs-lookup"><span data-stu-id="bc242-198">The first array element is a negative cash flow representing business start-up costs.</span></span> <span data-ttu-id="bc242-199">나머지 4 개 현금 흐름은 다음 4 년에 대 한 양의 현금 흐름을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-199">The remaining four cash flows represent positive cash flows for the subsequent four years.</span></span> <span data-ttu-id="bc242-200">`Guess` 예상된 내부 수익률이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-200">`Guess` is the estimated internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bc242-201">배열 인수 값이 잘못되었거나 <paramref name="Guess" /> &lt;= -1입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-201">Array argument values are invalid or <paramref name="Guess" /> &lt;= -1.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="MIRR">
      <MemberSignature Language="C#" Value="public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 MIRR(float64[]&amp; ValueArray, float64 FinanceRate, float64 ReinvestRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function MIRR (ByRef ValueArray As Double(), FinanceRate As Double, ReinvestRate As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MIRR(cli::array &lt;double&gt; ^ % ValueArray, double FinanceRate, double ReinvestRate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ValueArray" Type="System.Double[]&amp;" RefType="ref" />
        <Parameter Name="FinanceRate" Type="System.Double" />
        <Parameter Name="ReinvestRate" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="ValueArray"><span data-ttu-id="bc242-202">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-202">Required.</span></span> <span data-ttu-id="bc242-203">현금 흐름 값을 지정하는 <see langword="Double" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-203">Array of <see langword="Double" /> specifying cash-flow values.</span></span> <span data-ttu-id="bc242-204">배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-204">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <param name="FinanceRate"><span data-ttu-id="bc242-205">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-205">Required.</span></span> <span data-ttu-id="bc242-206">출자 비용으로 지불될 이자율을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-206"><see langword="Double" /> specifying interest rate paid as the cost of financing.</span></span></param>
        <param name="ReinvestRate"><span data-ttu-id="bc242-207">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-207">Required.</span></span> <span data-ttu-id="bc242-208">현금 재투자로 인한 수익에서 받는 이자율을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-208"><see langword="Double" /> specifying interest rate received on gains from cash reinvestment.</span></span></param>
        <summary><span data-ttu-id="bc242-209">일련의 주기적인 현금 흐름(지불액과 수령액)에 대해 수정된 내부 수익률을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-209">Returns a <see langword="Double" /> specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></summary>
        <returns><span data-ttu-id="bc242-210">일련의 주기적인 현금 흐름(지불액과 수령액)에 대해 수정된 내부 수익률을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-210">Returns a <see langword="Double" /> specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-211">수정 된 내부 수익률의 내부 수익률 있으면 지급액 및 수령액 서로 다른 속도로 충당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-211">The modified internal rate of return is the internal rate of return when payments and receipts are financed at different rates.</span></span> <span data-ttu-id="bc242-212">`MIRR` 함수는 고려 투자 비용 (`FinanceRate`) 및 현금 재투자 금리 (`ReinvestRate`).</span><span class="sxs-lookup"><span data-stu-id="bc242-212">The `MIRR` function takes into account both the cost of the investment (`FinanceRate`) and the interest rate received on reinvestment of cash (`ReinvestRate`).</span></span>  
  
 <span data-ttu-id="bc242-213">`FinanceRate` 및 `ReinvestRatearguments` 백분율 10 진수 값으로 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-213">The `FinanceRate` and `ReinvestRatearguments` are percentages expressed as decimal values.</span></span> <span data-ttu-id="bc242-214">예를 들어 12 %0.12로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-214">For example, 12 percent is expressed as 0.12.</span></span>  
  
 <span data-ttu-id="bc242-215">`MIRR` 함수는 배열에 있는 값의 순서를 사용 하 여 지급액 및 수령액의 순서를 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-215">The `MIRR` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="bc242-216">올바른 순서로 지불 및 수신 확인 값을 입력 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-216">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-217">사용 하 여이 예제는 `MIRR` 일련의 현금 흐름의 배열에 포함 된에 대 한 수정 된 내부 수익률을 반환 하도록 함수 `Values()`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-217">This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`.</span></span> <span data-ttu-id="bc242-218">`LoanAPR` 이자율, 및 `InvAPR` 재투자 이자율을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-218">`LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.</span></span>  
  
 [!code-vb[VbVbalrMath#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bc242-219"><paramref name="ValueArray" /> 차수가 1이 아니거나, <paramref name="FinanceRate" />가 -1이거나, <paramref name="ReinvestRate" />가 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-219">Rank of <paramref name="ValueArray" /> does not equal 1, <paramref name="FinanceRate" /> = -1, or <paramref name="ReinvestRate" /> = -1</span></span></exception>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="bc242-220">0으로 나누었습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-220">Division by zero has occurred.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.DivideByZeroException" />
      </Docs>
    </Member>
    <Member MemberName="NPer">
      <MemberSignature Language="C#" Value="public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPer(float64 Rate, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPer (Rate As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="bc242-221">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-221">Required.</span></span> <span data-ttu-id="bc242-222">기간당 이자율을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-222"><see langword="Double" /> specifying interest rate per period.</span></span> <span data-ttu-id="bc242-223">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-223">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Pmt"><span data-ttu-id="bc242-224">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-224">Required.</span></span> <span data-ttu-id="bc242-225">기간당 지불액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-225"><see langword="Double" /> specifying payment to be made each period.</span></span> <span data-ttu-id="bc242-226">지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-226">Payments usually contain principal and interest that does not change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="bc242-227">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-227">Required.</span></span> <span data-ttu-id="bc242-228">현재 값, 금일 값, 일련의 미래 지불액 또는 수령액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-228"><see langword="Double" /> specifying present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="bc242-229">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-229">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="bc242-230">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-230">Optional.</span></span> <span data-ttu-id="bc242-231">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-231"><see langword="Double" /> specifying future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="bc242-232">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-232">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="bc242-233">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-233">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="bc242-234">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-234">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="bc242-235">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-235">Optional.</span></span> <span data-ttu-id="bc242-236"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-236">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="bc242-237">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-237">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="bc242-238">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-238">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="bc242-239">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 기간 수를 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-239">Returns a <see langword="Double" /> specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="bc242-240">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 기간 수를 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-240">Returns a <see langword="Double" /> specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-241">연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-241">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="bc242-242">대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 연금 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-242">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="bc242-243">모든 인수에 대 한 현금 (예: 절약 예치금) 지급 나타내는 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-243">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-244">사용 하 여이 예제는 `NPer` 는 지불 수 있는 값과 지불 기간 수를 반환 하도록 함수에 포함 된 `PVal`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-244">This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`.</span></span> <span data-ttu-id="bc242-245">기간당 이자율은 제공 (`APR / 12`), 결제 (`Payment`), 대출의 미래 가치 (`FVal`), 및 결제 되 시작 이나 끝 납입 기한 날짜가 있는지 여부를 나타내는 숫자 (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="bc242-245">Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc242-246"><paramref name="Rate" />와 <paramref name="Pmt" />가 모두 0입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-246"><paramref name="Rate" /> = 0 and <paramref name="Pmt" /> = 0</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="NPV">
      <MemberSignature Language="C#" Value="public static double NPV (double Rate, ref double[] ValueArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 NPV(float64 Rate, float64[]&amp; ValueArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPV (Rate As Double, ByRef ValueArray As Double()) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double NPV(double Rate, cli::array &lt;double&gt; ^ % ValueArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="ValueArray" Type="System.Double[]&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="bc242-247">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-247">Required.</span></span> <span data-ttu-id="bc242-248">전 기간에 걸친 할인율을 지정하는 <see langword="Double" /> 형식이며 소수로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-248"><see langword="Double" /> specifying discount rate over the length of the period, expressed as a decimal.</span></span></param>
        <param name="ValueArray"><span data-ttu-id="bc242-249">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-249">Required.</span></span> <span data-ttu-id="bc242-250">현금 흐름 값을 지정하는 <see langword="Double" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-250">Array of <see langword="Double" /> specifying cash flow values.</span></span> <span data-ttu-id="bc242-251">배열에는 하나 이상의 음수 값(지불)과 하나 이상의 양수 값(확인)이 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-251">The array must contain at least one negative value (a payment) and one positive value (a receipt).</span></span></param>
        <summary><span data-ttu-id="bc242-252">일정 기간 현금 흐름(지불액과 수령액)과 할인율을 기준으로 현재의 순 투자 가치를 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-252">Returns a <see langword="Double" /> specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></summary>
        <returns><span data-ttu-id="bc242-253">일정 기간 현금 흐름(지불액과 수령액)과 할인율을 기준으로 현재의 순 투자 가치를 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-253">Returns a <see langword="Double" /> specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-254">으로 출 자금의 순 현재 가치에 이후 일련 지급액 및 수령액의 현재 값이입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-254">The net present value of an investment is the current value of a future series of payments and receipts.</span></span>  
  
 <span data-ttu-id="bc242-255">`NPV` 함수는 배열에 있는 값의 순서를 사용 하 여 지급액 및 수령액의 순서를 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-255">The `NPV` function uses the order of values within the array to interpret the order of payments and receipts.</span></span> <span data-ttu-id="bc242-256">올바른 순서로 지불 및 수신 확인 값을 입력 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-256">Be sure to enter your payment and receipt values in the correct sequence.</span></span>  
  
 <span data-ttu-id="bc242-257">`NPV` 투자 한 기간 날짜 전에 첫 번째 현금 흐름 값의 시작 및 배열에서 마지막 현금 흐름 값으로 끝납니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-257">The `NPV` investment begins one period before the date of the first cash flow value and ends with the last cash flow value in the array.</span></span>  
  
 <span data-ttu-id="bc242-258">순 현재 가치 계산 미래의 현금 흐름을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-258">The net present value calculation is based on future cash flows.</span></span> <span data-ttu-id="bc242-259">첫 번째 현금 흐름의 첫 번째 기간 시작 부분에서 발생 하는 경우 첫 번째 값에서 반환 된 값에 추가 해야 `NPV` 의 현금 흐름 값에 포함 해서도 안 및 `ValueArray`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-259">If your first cash flow occurs at the beginning of the first period, the first value must be added to the value returned by `NPV` and must not be included in the cash flow values of `ValueArray`.</span></span>  
  
 <span data-ttu-id="bc242-260">`NPV` 함수는 비슷합니다는 `PV` 점을 제외 하 고 (현재 가치) 함수는 `PV` 함수 현금 흐름의 끝 이나 기간의 시작에 시작할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-260">The `NPV` function is similar to the `PV` function (present value) except that the `PV` function allows cash flows to begin either at the end or the beginning of a period.</span></span> <span data-ttu-id="bc242-261">변수는 달리 `NPV` 현금 흐름 값 `PV` 투자 전체 현금 흐름을 수정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-261">Unlike the variable `NPV` cash flow values, `PV` cash flows must be fixed throughout the investment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-262">사용 하 여이 예제는 `NPV` 배열에 포함 된 현금 흐름의 순 현재 가치를 반환 하도록 함수 `values()`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-262">This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`.</span></span> <span data-ttu-id="bc242-263">반환 값에 저장 된 `FixedRetRate`, 고정된 내부 수익률을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-263">The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.</span></span>  
  
 [!code-vb[VbVbalrMath#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc242-264"><paramref name="ValueArray" />는 <see langword="Nothing" />이며, <paramref name="ValueArray" />의 순위는 &lt;&gt; 1 또는 <paramref name="Rate" /> = -1입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-264"><paramref name="ValueArray" /> is <see langword="Nothing" />, rank of <paramref name="ValueArray" /> &lt;&gt; 1, or <paramref name="Rate" /> = -1</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="Pmt">
      <MemberSignature Language="C#" Value="public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Pmt(float64 Rate, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pmt (Rate As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="bc242-265">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-265">Required.</span></span> <span data-ttu-id="bc242-266">기간당 이자율을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-266"><see langword="Double" /> specifies the interest rate per period.</span></span> <span data-ttu-id="bc242-267">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-267">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="bc242-268">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-268">Required.</span></span> <span data-ttu-id="bc242-269">연금의 총 지불 기간 수를 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-269"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="bc242-270">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 × 12, 즉 48입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-270">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="bc242-271">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-271">Required.</span></span> <span data-ttu-id="bc242-272">일련의 미래 지불액에 대한 현재 값 또는 총액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-272"><see langword="Double" /> specifies the present value (or lump sum) that a series of payments to be paid in the future is worth now.</span></span> <span data-ttu-id="bc242-273">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-273">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="bc242-274">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-274">Optional.</span></span> <span data-ttu-id="bc242-275">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-275"><see langword="Double" /> specifying future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="bc242-276">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-276">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="bc242-277">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-277">However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="bc242-278">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-278">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="bc242-279">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-279">Optional.</span></span> <span data-ttu-id="bc242-280"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-280">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="bc242-281">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-281">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="bc242-282">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-282">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="bc242-283">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금에 대한 지불액을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-283">Returns a <see langword="Double" /> specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="bc242-284">일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금에 대한 지불액을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-284">Returns a <see langword="Double" /> specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-285">연금은 일련의 일정 기간 동안 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-285">An annuity is a series of fixed cash payments made during a period of time.</span></span> <span data-ttu-id="bc242-286">대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 연금 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-286">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="bc242-287">`Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-287">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="bc242-288">예를 들어 경우 `Rate` 월 단위로 계산 `NPer` 도 월 단위로 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-288">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="bc242-289">음수로; 표현 됩니다 (예: 절약 예치금) 유료 현금 모든 인수에 대 한 (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-289">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-290">사용 하 여이 예제는 `Pmt` 고정된 기간 동안 대출의 월 상환액을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-290">This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period.</span></span> <span data-ttu-id="bc242-291">기간당 이자율은 (`APR / 12`), 지불의 총 수 (`TotPmts`), 현재 가치 또는 대출의 보안 주체 (`PVal`), 대출의 미래 가치 (`FVal`), 및를 나타내는 숫자입니다 여부는 지불이 시작 또는 끝 납입 기한 예정입니다. `(PayType).`</span><span class="sxs-lookup"><span data-stu-id="bc242-291">Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`</span></span>  
  
 [!code-vb[VbVbalrMath#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc242-292"><paramref name="NPer" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="bc242-292"><paramref name="NPer" /> = 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="PPmt">
      <MemberSignature Language="C#" Value="public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PPmt(float64 Rate, float64 Per, float64 NPer, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PPmt (Rate As Double, Per As Double, NPer As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="Per" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="bc242-293">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-293">Required.</span></span> <span data-ttu-id="bc242-294">기간당 이자율을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-294"><see langword="Double" /> specifies the interest rate per period.</span></span> <span data-ttu-id="bc242-295">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-295">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="Per"><span data-ttu-id="bc242-296">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-296">Required.</span></span> <span data-ttu-id="bc242-297">1에서 <c>NPer</c>에 이르는 지불 기간을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-297"><see langword="Double" /> specifies the payment period in the range 1 through <c>NPer</c>.</span></span></param>
        <param name="NPer"><span data-ttu-id="bc242-298">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-298">Required.</span></span> <span data-ttu-id="bc242-299">연금의 총 지불 기간 수를 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-299"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="bc242-300">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 x 12, 즉 48입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-300">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="PV"><span data-ttu-id="bc242-301">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-301">Required.</span></span> <span data-ttu-id="bc242-302">일련의 미래 지불액 또는 수령액의 현재 값을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-302"><see langword="Double" /> specifies the current value of a series of future payments or receipts.</span></span> <span data-ttu-id="bc242-303">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-303">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="bc242-304">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-304">Optional.</span></span> <span data-ttu-id="bc242-305">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-305"><see langword="Double" /> specifying future value or cash balance you want after you have made the final payment.</span></span> <span data-ttu-id="bc242-306">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-306">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="bc242-307">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-307">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="bc242-308">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-308">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="bc242-309">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-309">Optional.</span></span> <span data-ttu-id="bc242-310"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-310">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="bc242-311">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-311">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="bc242-312">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-312">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="bc242-313">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 원금 지불액을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-313">Returns a <see langword="Double" /> specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="bc242-314">일정 기간의 고정 지불액과 고정 이자율을 기준으로 일정 기간의 연금에 대한 원금 지불액을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-314">Returns a <see langword="Double" /> specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-315">연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-315">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="bc242-316">대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 연금 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-316">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="bc242-317">`Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-317">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="bc242-318">예를 들어 경우 `Rate` 월 단위로 계산 `NPer` 도 월 단위로 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-318">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="bc242-319">음수로; 표현 됩니다 (예: 절약 예치금) 유료 현금 모든 인수에 대 한 (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-319">For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-320">사용 하 여이 예제는 `PPmt` 함수가 특정 기간 동안 사용 된 주 모든 지불 같은 값의 경우 계산을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-320">This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value.</span></span> <span data-ttu-id="bc242-321">기간당 이자율은 (`APR / 12`), 주 부분 필요한 지불 기간 (`Period`), 지불의 총 수 (`TotPmts`), 현재 가치 또는 대출의 보안 주체 (`PVal`), 대출의 미래 가치 (`FVal`), 및 결제 되 시작 이나 끝 납입 기한 날짜가 있는지 여부를 나타내는 숫자 (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="bc242-321">Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).</span></span>  
  
 [!code-vb[VbVbalrMath#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc242-322"><paramref name="Per" /> &lt;=0 또는 <paramref name="Per" /> &gt; <paramref name="NPer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-322"><paramref name="Per" /> &lt;=0 or <paramref name="Per" /> &gt; <paramref name="NPer" />.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="PV">
      <MemberSignature Language="C#" Value="public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PV(float64 Rate, float64 NPer, float64 Pmt, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)" />
      <MemberSignature Language="VB.NET" Value="Public Function PV (Rate As Double, NPer As Double, Pmt As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rate" Type="System.Double" />
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
      </Parameters>
      <Docs>
        <param name="Rate"><span data-ttu-id="bc242-323">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-323">Required.</span></span> <span data-ttu-id="bc242-324">기간당 이자율을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-324"><see langword="Double" /> specifies the interest rate per period.</span></span> <span data-ttu-id="bc242-325">예를 들어, APR(연간 이자율) 10%로 자동차 대부를 받은 다음 매월 갚아 나가는 경우 월 이자율은 0.1/12, 즉 0.0083입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-325">For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</span></span></param>
        <param name="NPer"><span data-ttu-id="bc242-326">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-326">Required.</span></span> <span data-ttu-id="bc242-327">연금의 총 지불 기간 수를 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-327"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="bc242-328">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 4 x 12, 즉 48입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-328">For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="bc242-329">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-329">Required.</span></span> <span data-ttu-id="bc242-330">기간당 지불액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-330"><see langword="Double" /> specifies the payment to be made each period.</span></span> <span data-ttu-id="bc242-331">지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-331">Payments usually contain principal and interest that does not change during the life of the annuity.</span></span></param>
        <param name="FV"><span data-ttu-id="bc242-332">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-332">Optional.</span></span> <span data-ttu-id="bc242-333">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-333"><see langword="Double" /> specifies the future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="bc242-334">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-334">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="bc242-335">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-335">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="bc242-336">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-336">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="bc242-337">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-337">Optional.</span></span> <span data-ttu-id="bc242-338"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-338">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="bc242-339">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-339">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="bc242-340">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-340">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <summary><span data-ttu-id="bc242-341">미래에 지불할 일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 현재 가치를 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-341">Returns a <see langword="Double" /> specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></summary>
        <returns><span data-ttu-id="bc242-342">미래에 지불할 일정 기간의 고정 지불액과 고정 이자율을 기준으로 연금의 현재 가치를 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-342">Returns a <see langword="Double" /> specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-343">연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-343">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="bc242-344">대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 연금 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-344">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="bc242-345">`Rate` 및 `NPer` 인수는 같은 단위로 지불 기간을 사용 하 여 계산 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-345">The `Rate` and `NPer` arguments must be calculated using payment periods expressed in the same units.</span></span> <span data-ttu-id="bc242-346">예를 들어 경우 `Rate` 월 단위로 계산 `NPer` 도 월 단위로 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-346">For example, if `Rate` is calculated using months, `NPer` must also be calculated using months.</span></span>  
  
 <span data-ttu-id="bc242-347">모든 인수에 대 한 현금 (예: 절약 예치금) 지급 나타내는 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-347">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-348">이 예제는 `PV` 함수 앞으로 20 년 동안 매년 50, 000 달러를 제공 하는 $1000000 연금의 현재 가치를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-348">In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years.</span></span> <span data-ttu-id="bc242-349">되는 예상된 연이율 (`APR`), 지급액의 총 수 (`TotPmts`), 각 지불 양을 (`YrIncome`), 투자의 총 미래 가치 (`FVal`), 및를 나타내는 숫자 있는지 여부를 각 시작 또는 끝 납입 기한 지불 (`PayType`).</span><span class="sxs-lookup"><span data-stu-id="bc242-349">Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`).</span></span> <span data-ttu-id="bc242-350">`YrIncome` 현금을 지급 연금에서 각 연도 나타내므로 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-350">Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.</span></span>  
  
 [!code-vb[VbVbalrMath#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Rate(float64 NPer, float64 Pmt, float64 PV, float64 FV, valuetype Microsoft.VisualBasic.DueDate Due, float64 Guess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rate (NPer As Double, Pmt As Double, PV As Double, Optional FV As Double = 0, Optional Due As DueDate = Microsoft.VisualBasic.DueDate.EndOfPeriod, Optional Guess As Double = 0.1) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NPer" Type="System.Double" />
        <Parameter Name="Pmt" Type="System.Double" />
        <Parameter Name="PV" Type="System.Double" />
        <Parameter Name="FV" Type="System.Double" />
        <Parameter Name="Due" Type="Microsoft.VisualBasic.DueDate" />
        <Parameter Name="Guess" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="NPer"><span data-ttu-id="bc242-351">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-351">Required.</span></span> <span data-ttu-id="bc242-352">연금의 총 지불 기간 수를 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-352"><see langword="Double" /> specifies the total number of payment periods in the annuity.</span></span> <span data-ttu-id="bc242-353">예를 들어, 자동차 대부를 받아 4년간 매월 갚아 나가는 경우 상환 기간은 총 4 \* 12(즉 48)입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-353">For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 \* 12 (or 48) payment periods.</span></span></param>
        <param name="Pmt"><span data-ttu-id="bc242-354">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-354">Required.</span></span> <span data-ttu-id="bc242-355">기간당 지불액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-355"><see langword="Double" /> specifies the payment to be made each period.</span></span> <span data-ttu-id="bc242-356">지불액에는 일반적으로 연금을 받는 기간 동안 변경되지 않는 원금과 이자가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-356">Payments usually contain principal and interest that doesn't change over the life of the annuity.</span></span></param>
        <param name="PV"><span data-ttu-id="bc242-357">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-357">Required.</span></span> <span data-ttu-id="bc242-358">현재 값, 금일 값, 일련의 미래 지불액 또는 수령액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-358"><see langword="Double" /> specifies the present value, or value today, of a series of future payments or receipts.</span></span> <span data-ttu-id="bc242-359">예를 들어, 자동차를 사기 위해 돈을 빌릴 경우 총 차입 금액은 매월 자동차 대금을 지불할 사람에게 갚아야 할 현재의 금액입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-359">For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</span></span></param>
        <param name="FV"><span data-ttu-id="bc242-360">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-360">Optional.</span></span> <span data-ttu-id="bc242-361">최종 지불 후 앞으로 지불할 미래 값 또는 현금 잔액을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-361"><see langword="Double" /> specifies the future value or cash balance you want after you make the final payment.</span></span> <span data-ttu-id="bc242-362">예를 들어, 최종 지불 후의 대출 값은 $0이므로 대출의 미래 값은 $0입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-362">For example, the future value of a loan is $0 because that is its value after the final payment.</span></span> <span data-ttu-id="bc242-363">그러나 자녀의 교육을 위해 18년간 $50,000를 저축하려고 할 경우 $50,000가 미래 값이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-363">However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value.</span></span> <span data-ttu-id="bc242-364">생략된 경우 0이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-364">If omitted, 0 is assumed.</span></span></param>
        <param name="Due"><span data-ttu-id="bc242-365">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-365">Optional.</span></span> <span data-ttu-id="bc242-366"><see cref="T:Microsoft.VisualBasic.DueDate" /> 형식의 개체는 지불 기한을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-366">Object of type <see cref="T:Microsoft.VisualBasic.DueDate" /> that specifies when payments are due.</span></span> <span data-ttu-id="bc242-367">이 인수는 납입 기한 말에 납입이 되어야 하면 <c>DueDate.EndOfPeriod</c>이고, 납입 기한 초에 납입이 되어야 하면 <c>DueDate.BegOfPeriod</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-367">This argument must be either <c>DueDate.EndOfPeriod</c> if payments are due at the end of the payment period, or <c>DueDate.BegOfPeriod</c> if payments are due at the beginning of the period.</span></span> <span data-ttu-id="bc242-368">생략하면 <c>DueDate.EndOfPeriod</c>인 것으로 간주됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-368">If omitted, <c>DueDate.EndOfPeriod</c> is assumed.</span></span></param>
        <param name="Guess"><span data-ttu-id="bc242-369">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-369">Optional.</span></span> <span data-ttu-id="bc242-370"><see langword="Rate" />가 반환하는 추정 값을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-370"><see langword="Double" /> specifying value you estimate is returned by <see langword="Rate" />.</span></span> <span data-ttu-id="bc242-371">생략할 경우 <c>Guess</c>는 0.1(10%)입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-371">If omitted, <c>Guess</c> is 0.1 (10 percent).</span></span></param>
        <summary><span data-ttu-id="bc242-372">연금에 대한 일정 기간당 이자율을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-372">Returns a <see langword="Double" /> specifying the interest rate per period for an annuity.</span></span></summary>
        <returns><span data-ttu-id="bc242-373">연금에 대한 일정 기간당 이자율을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-373">Returns a <see langword="Double" /> specifying the interest rate per period for an annuity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-374">연금은 일련의 시간 동안 정기적으로 고정된 금액을 지불 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-374">An annuity is a series of fixed cash payments made over a period of time.</span></span> <span data-ttu-id="bc242-375">대출 (예: 홈 담보 대출) 또는 (예: 월간 저축 계획) 투자 연금 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-375">An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).</span></span>  
  
 <span data-ttu-id="bc242-376">모든 인수에 대 한 현금 (예: 절약 예치금) 지급 나타내는 음수; (예: 피제수 검사) 받은 양수도 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-376">For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</span></span>  
  
 <span data-ttu-id="bc242-377">`Rate` 반복적으로 계산 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-377">`Rate` is calculated by iteration.</span></span> <span data-ttu-id="bc242-378">값의 시작 `Guess`, `Rate` 내 때까지 결과를 0.00001% 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-378">Starting with the value of `Guess`, `Rate` cycles through the calculation until the result is accurate to within 0.00001 percent.</span></span> <span data-ttu-id="bc242-379">경우 `Rate` 20 후 결과 실패를 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-379">If `Rate` cannot find a result after 20 tries, it fails.</span></span> <span data-ttu-id="bc242-380">추정값 10%가 하는 경우 및 `Rate` 실패에 대 한 다른 값을 시도 `Guess`합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-380">If your guess is 10 percent and `Rate` fails, try a different value for `Guess`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-381">사용 하 여이 예제는 `Rate` 지급액의 총 수를 지정 하는 대출의 관심 있는 속도 계산 하는 함수 (`TotPmts`), 대 부를 받아 지불 양을 (`Payment`), 현재 가치 또는 대출의 보안 주체 (`PVal`), 미래 대출 값 (`FVal`), 지불 시작 이나 끝 납입 기한 날짜가 인지 여부를 나타내는 숫자 (`PayType`), 및 예상된 이자율의 근사값 (`Guess`).</span><span class="sxs-lookup"><span data-stu-id="bc242-381">This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).</span></span>  
  
 [!code-vb[VbVbalrMath#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc242-382"><paramref name="NPer" /> &lt;= 0.</span><span class="sxs-lookup"><span data-stu-id="bc242-382"><paramref name="NPer" /> &lt;= 0.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SLN">
      <MemberSignature Language="C#" Value="public static double SLN (double Cost, double Salvage, double Life);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SLN(float64 Cost, float64 Salvage, float64 Life) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SLN (Cost As Double, Salvage As Double, Life As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SLN(double Cost, double Salvage, double Life);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="bc242-383">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-383">Required.</span></span> <span data-ttu-id="bc242-384">초기 자산 비용을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-384"><see langword="Double" /> specifying initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="bc242-385">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-385">Required.</span></span> <span data-ttu-id="bc242-386">내용 연수 종료 시점의 자산 값을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-386"><see langword="Double" /> specifying value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="bc242-387">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-387">Required.</span></span> <span data-ttu-id="bc242-388">자산의 내용 연수 길이를 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-388"><see langword="Double" /> specifying length of the useful life of the asset.</span></span></param>
        <summary><span data-ttu-id="bc242-389">단일 기간의 자산에 대한 정액법을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-389">Returns a <see langword="Double" /> specifying the straight-line depreciation of an asset for a single period.</span></span></summary>
        <returns><span data-ttu-id="bc242-390">단일 기간의 자산에 대한 정액법을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-390">Returns a <see langword="Double" /> specifying the straight-line depreciation of an asset for a single period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-391">감가상각 기간은와 같은 단위로 표현 해야 합니다는 `Life` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-391">The depreciation period must be expressed in the same unit as the `Life` argument.</span></span> <span data-ttu-id="bc242-392">모든 인수는 양수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-392">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-393">사용 하 여이 예제는 `SLN` 기간 동안 초기 자산 비용에 대 한 자산 정액법을 반환 하는 함수 (`InitCost`), 자산의 연수 끝날 때 잔존 가치 (`SalvageVal`), 및 총 연 단위 (`LifeTime`).</span><span class="sxs-lookup"><span data-stu-id="bc242-393">This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc242-394"><paramref name="Life" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="bc242-394"><paramref name="Life" /> = 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SYD">
      <MemberSignature Language="C#" Value="public static double SYD (double Cost, double Salvage, double Life, double Period);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 SYD(float64 Cost, float64 Salvage, float64 Life, float64 Period) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function SYD (Cost As Double, Salvage As Double, Life As Double, Period As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double SYD(double Cost, double Salvage, double Life, double Period);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cost" Type="System.Double" />
        <Parameter Name="Salvage" Type="System.Double" />
        <Parameter Name="Life" Type="System.Double" />
        <Parameter Name="Period" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Cost"><span data-ttu-id="bc242-395">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-395">Required.</span></span> <span data-ttu-id="bc242-396">초기 자산 비용을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-396"><see langword="Double" /> specifying the initial cost of the asset.</span></span></param>
        <param name="Salvage"><span data-ttu-id="bc242-397">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-397">Required.</span></span> <span data-ttu-id="bc242-398">내용 연수 종료 시점의 자산 값을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-398"><see langword="Double" /> specifying the value of the asset at the end of its useful life.</span></span></param>
        <param name="Life"><span data-ttu-id="bc242-399">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-399">Required.</span></span> <span data-ttu-id="bc242-400">자산의 내용 연수 길이를 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-400"><see langword="Double" /> specifying the length of the useful life of the asset.</span></span></param>
        <param name="Period"><span data-ttu-id="bc242-401">필수.</span><span class="sxs-lookup"><span data-stu-id="bc242-401">Required.</span></span> <span data-ttu-id="bc242-402">자산 감가상각이 계산되는 기간을 지정하는 <see langword="Double" /> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-402"><see langword="Double" /> specifying the period for which asset depreciation is calculated.</span></span></param>
        <summary><span data-ttu-id="bc242-403">지정한 기간의 자산의 연수 합계 감가상각을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-403">Returns a <see langword="Double" /> specifying the sum-of-years digits depreciation of an asset for a specified period.</span></span></summary>
        <returns><span data-ttu-id="bc242-404">지정한 기간의 자산의 연수 합계 감가상각을 <see langword="Double" /> 형식으로 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-404">Returns a <see langword="Double" /> specifying the sum-of-years digits depreciation of an asset for a specified period.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bc242-405">`Life` 및 `Period` 인수는 같은 단위로 표현 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-405">The `Life` and `Period` arguments must be expressed in the same units.</span></span> <span data-ttu-id="bc242-406">예를 들어 경우 `Life` 월에 `Period` 개월도 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-406">For example, if `Life` is given in months, `Period` must also be given in months.</span></span> <span data-ttu-id="bc242-407">모든 인수는 양수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-407">All arguments must be positive numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bc242-408">사용 하 여이 예제는 `SYD` 초기 자산 비용 특정된 기간에 대 한 자산의 감가상각을 반환 하는 함수 (`InitCost`), 자산의 연수 끝날 때 잔존 가치 (`SalvageVal`), 및에서 자산의 총 수명 연도 (`LifeTime`).</span><span class="sxs-lookup"><span data-stu-id="bc242-408">This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).</span></span>  
  
 [!code-vb[VbVbalrMath#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bc242-409"><paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" /> 또는 <paramref name="Period" /> &lt;=0입니다.</span><span class="sxs-lookup"><span data-stu-id="bc242-409"><paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" />, or <paramref name="Period" /> &lt;=0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
  </Members>
</Type>