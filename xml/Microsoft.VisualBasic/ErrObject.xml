<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ErrObject.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac519573ad50fc15f1c13f60caa02a1d51f05408059.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19573ad50fc15f1c13f60caa02a1d51f05408059</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>The <ph id="ph1">&lt;see langword="ErrObject" /&gt;</ph> module contains properties and procedures used to identify and handle run-time errors using the <ph id="ph2">&lt;see langword="Err" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ErrObject" /&gt;</ph> 모듈에는 <ph id="ph2">&lt;see langword="Err" /&gt;</ph> 개체를 사용하여 런타임 오류를 식별하고 처리하는 속성과 프로시저가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>The <ph id="ph1">`ErrObject`</ph> module supports the <ph id="ph2">`Err`</ph> object.</source>
          <target state="translated"><ph id="ph1">`ErrObject`</ph> 모듈에서는 <ph id="ph2">`Err`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Information.Err%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Information.Err%2A&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>This example uses the properties of the <ph id="ph1">`Err`</ph> object in constructing an error-message dialog box.</source>
          <target state="translated">속성을 사용 하 여이 예제는 <ph id="ph1">`Err`</ph> 개체 오류 메시지 대화 상자를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.ErrObject">
          <source>Notice what happens when you use the <ph id="ph1">`Clear`</ph> method first: When you then generate a Visual Basic error with the <ph id="ph2">`Raise`</ph> method, Visual Basic's default values become the properties of the <ph id="ph3">`Err`</ph> object.</source>
          <target state="translated">사용 하면 어떻게 바뀌는지는 <ph id="ph1">`Clear`</ph> 메서드 첫 번째: 다음 생성 하는 경우와 Visual Basic 오류는 <ph id="ph2">`Raise`</ph> 메서드, Visual Basic의 기본 값의 속성 됩니다는 <ph id="ph3">`Err`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Clears all property settings of the <ph id="ph1">&lt;see langword="Err" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Err" /&gt;</ph> 개체의 모든 속성 설정을 지웁니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Use <ph id="ph1">`Clear`</ph> to explicitly clear the <ph id="ph2">`Err`</ph> object after an error has been handled, such as when you use deferred error handling with <ph id="ph3">`On Error Resume Next`</ph>.</source>
          <target state="translated">사용 하 여 <ph id="ph1">`Clear`</ph> 명시적으로 선택 취소 된 <ph id="ph2">`Err`</ph> 오류가 처리 된 후, 지연 된 오류 처리를 사용 하는 경우 등 개체 <ph id="ph3">`On Error Resume Next`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>The <ph id="ph1">`Clear`</ph> method is called automatically whenever any of the following statements executes:</source>
          <target state="translated"><ph id="ph1">`Clear`</ph> 메서드는 다음 문을 실행할 때마다:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any type of <ph id="ph1">`Resume`</ph> statement</source>
          <target state="translated">모든 종류의 <ph id="ph1">`Resume`</ph> 문</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source><ph id="ph1">`Exit Sub`</ph>, <ph id="ph2">`Exit Function`</ph>, or <ph id="ph3">`Exit Property`</ph></source>
          <target state="translated"><ph id="ph1">`Exit Sub`</ph>, <ph id="ph2">`Exit Function`</ph>또는 <ph id="ph3">`Exit Property`</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any <ph id="ph1">`On Error`</ph> statement</source>
          <target state="translated">모든 <ph id="ph1">`On Error`</ph> 문</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Any <ph id="ph1">`Try...Catch...Finally`</ph> statement</source>
          <target state="translated">모든 <ph id="ph1">`Try...Catch...Finally`</ph> 문</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>The <ph id="ph1">`On Error Resume Next`</ph> construct may be preferable to <ph id="ph2">`On Error GoTo`</ph> when handling errors generated during access to other objects.</source>
          <target state="translated"><ph id="ph1">`On Error Resume Next`</ph> 구문에 더 적합할 수 있습니다 <ph id="ph2">`On Error GoTo`</ph> 다른 개체에 액세스 하는 동안 발생 한 오류를 처리 하는 경우.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Checking <ph id="ph1">`Err`</ph> after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in <ph id="ph2">`Err.Number`</ph>, as well as which object originally generated the error (the object specified in <ph id="ph3">`Err.Source`</ph>).</source>
          <target state="translated">검사 <ph id="ph1">`Err`</ph> 개체와 함께 각 상호 작용 개체는 코드에서 액세스 된 후: 되도록 할 수 있습니다 어떤 개체에서 오류 코드를 배치 <ph id="ph2">`Err.Number`</ph>, 개체가 원래 오류 (개체를 생성 뿐만 아니라 에 지정 된 <ph id="ph3">`Err.Source`</ph>).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Clear`</ph> method to reset the numeric properties of the <ph id="ph3">`Err`</ph> object to zero and its string properties to zero-length strings.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`Err`</ph> 개체의 <ph id="ph2">`Clear`</ph> 의 숫자 속성을 다시 설정 하는 메서드는 <ph id="ph3">`Err`</ph> 개체 0, 빈 문자열을 문자열 속성입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Clear">
          <source>Without the call to <ph id="ph1">`Clear`</ph>, the second call to <ph id="ph2">`MsgBox`</ph> would display the same error message.</source>
          <target state="translated">에 대 한 호출 하지 않고 <ph id="ph1">`Clear`</ph>, 두 번째 호출으로 <ph id="ph2">`MsgBox`</ph> 동일한 오류 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing a descriptive string associated with an error.</source>
          <target state="translated">오류와 연결된 설명 문자열을 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 식을 반환하거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing a descriptive string associated with an error.</source>
          <target state="translated">오류와 연결된 설명 문자열을 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 식을 반환하거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>The <ph id="ph1">`Description`</ph> property setting consists of a short description of the error.</source>
          <target state="translated"><ph id="ph1">`Description`</ph> 속성 설정은 오류에 대 한 간단한 설명을 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>Use this property to alert the user to an error that you cannot or do not want to handle.</source>
          <target state="translated">한 오류를 처리할 수 없거나 처리 되지 않을 사용자에 게 알리도록 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>When generating a user-defined error, assign a short description of your error to the <ph id="ph1">`Description`</ph> property.</source>
          <target state="translated">사용자 정의 오류를 생성 하는 경우 해당 오류에 대 한 간단한 설명을 할당는 <ph id="ph1">`Description`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>If the <ph id="ph1">`Description`</ph> property is not filled in, and the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> property corresponds to a Visual Basic run-time error, then the string returned by the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A&gt;</ph> function is set in the <ph id="ph4">`Description`</ph> property when the error is generated.</source>
          <target state="translated">경우는 <ph id="ph1">`Description`</ph> 속성, 입력의 값과는 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> 반환 하는 문자열이 한 다음 속성은 Visual Basic 런타임 오류에 해당는 <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A&gt;</ph> 함수에 설정 되어는 <ph id="ph4">`Description`</ph> 오류가 발생 하는 경우이 속성입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Description">
          <source>This example assigns a user-defined message to the <ph id="ph1">`Description`</ph> property of the <ph id="ph2">`Err`</ph> object.</source>
          <target state="translated">사용자 정의 메시지를 지정 하는이 예제는 <ph id="ph1">`Description`</ph> 의 속성은 <ph id="ph2">`Err`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>If Visual Basic encounters no line numbers, it returns 0.</source>
          <target state="translated">줄 번호 없음를 못한 경우 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Erl">
          <source>This example uses the <ph id="ph1">`Erl`</ph> property to indicate the line number.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`Erl`</ph> 줄 번호를 나타내는 속성입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>Returns the exception representing the error that occurred.</source>
          <target state="translated">발생한 오류를 나타내는 예외를 반환합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>Returns the exception representing the error that occurred.</source>
          <target state="translated">발생한 오류를 나타내는 예외를 반환합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>The <ph id="ph1">`GetException`</ph> function is available only from the <ph id="ph2">`Err`</ph> object class.</source>
          <target state="translated"><ph id="ph1">`GetException`</ph> 함수는 에서만 사용할 수는 <ph id="ph2">`Err`</ph> 개체 클래스입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>It works with the <ph id="ph1">`Exception`</ph> property of the <ph id="ph2">`Err`</ph> object to display the error that has occurred.</source>
          <target state="translated">와 함께 작동는 <ph id="ph1">`Exception`</ph> 의 속성은 <ph id="ph2">`Err`</ph> 발생 한 오류를 표시 하려면 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.GetException">
          <source>The following code displays the message assigned to the exception in the <ph id="ph1">`Err`</ph> object:</source>
          <target state="translated">다음 코드는 예외에 할당 된 메시지를 표시는 <ph id="ph1">`Err`</ph> 개체:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Returns or sets an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> containing the context ID for a topic in a Help file.</source>
          <target state="translated">도움말 파일 항목의 컨텍스트 ID를 포함하는 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>를 반환하거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Returns or sets an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> containing the context ID for a topic in a Help file.</source>
          <target state="translated">도움말 파일 항목의 컨텍스트 ID를 포함하는 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>를 반환하거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>The <ph id="ph1">`HelpContext`</ph> property is used to display context-sensitive Help for an application.</source>
          <target state="translated"><ph id="ph1">`HelpContext`</ph> 속성은 응용 프로그램에 대 한 상황에 맞는 도움말을 표시 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If a Help file is specified in <ph id="ph1">`HelpFile`</ph>, the <ph id="ph2">`HelpContext`</ph> property is used to automatically display the Help file identified.</source>
          <target state="translated">도움말 파일을 지정 하는 경우 <ph id="ph1">`HelpFile`</ph>, <ph id="ph2">`HelpContext`</ph> 속성은 자동으로 식별 된 도움말 파일을 표시 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If both the <ph id="ph1">`HelpFile`</ph> and <ph id="ph2">`HelpContext`</ph> properties are empty, the value of the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> property  is checked.</source>
          <target state="translated">모두는 <ph id="ph1">`HelpFile`</ph> 및 <ph id="ph2">`HelpContext`</ph> 속성은 비어 있는 경우의 값은 <ph id="ph3">&lt;xref:Microsoft.VisualBasic.ErrObject.Number%2A&gt;</ph> 속성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If the value of the <ph id="ph1">`Number`</ph> property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</source>
          <target state="translated">하는 경우의 값은 <ph id="ph1">`Number`</ph> 속성 값에 해당 하는 Visual Basic 런타임 오류 아니면 오류에 대 한 Visual Basic 도움말 컨텍스트 ID를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>If the value of the <ph id="ph1">`Number`</ph> property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</source>
          <target state="translated">하는 경우의 값은 <ph id="ph1">`Number`</ph> 속성 Visual Basic 오류에 해당 하지 않는, Visual Basic 도움말 파일에 대 한 내용을 화면이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>You should write routines in your application to handle typical errors.</source>
          <target state="translated">일반 오류를 처리 하도록 응용 프로그램에서 루틴을 작성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</source>
          <target state="translated">개체를 프로그래밍할 때 여 오류 처리의 품질을 향상 하거나 오류를 복구할 수 없는 경우 프로그램 사용자에 게 의미 있는 메시지를 표시 하도록 개체의 도움말 파일을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpContext">
          <source>This example uses the <ph id="ph1">`HelpContext`</ph> property of the <ph id="ph2">`Err`</ph> object to show the Visual Basic Help topic for the <ph id="ph3">`Overflow`</ph> error.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`HelpContext`</ph> 의 속성은 <ph id="ph2">`Err`</ph> 개체에 대 한 Visual Basic 도움말 항목을 표시 하는 <ph id="ph3">`Overflow`</ph> 오류.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the fully qualified path to a Help file.</source>
          <target state="translated">도움말 파일의 정규화된 경로를 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 식을 반환하거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression containing the fully qualified path to a Help file.</source>
          <target state="translated">도움말 파일의 정규화된 경로를 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 식을 반환하거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If a Help file is specified by the <ph id="ph1">`HelpFile`</ph> property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</source>
          <target state="translated">도움말 파일을 통해 지정 된 경우는 <ph id="ph1">`HelpFile`</ph> 속성을 자동으로 호출 하는 도움말 키 (또는 F1 키)를 누를 때 오류 메시지 대화 상자.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If the <ph id="ph1">`HelpContext`</ph> property contains a valid context ID for the specified file, that topic is automatically displayed.</source>
          <target state="translated">경우는 <ph id="ph1">`HelpContext`</ph> 속성 포함 올바른 컨텍스트 ID를 지정된 된 파일을 해당 항목에 대 한 자동으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>If no <ph id="ph1">`HelpFile`</ph> is specified, the Visual Basic Help file is displayed.</source>
          <target state="translated">하지 않으면 <ph id="ph1">`HelpFile`</ph> 지정, Visual Basic 도움말 파일이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>You should write routines in your application to handle typical errors.</source>
          <target state="translated">일반 오류를 처리 하도록 응용 프로그램에서 루틴을 작성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</source>
          <target state="translated">개체를 프로그래밍할 때 여 오류 처리의 품질을 향상 하거나 오류를 복구할 수 없는 경우 프로그램 사용자에 게 의미 있는 메시지를 표시 하도록 개체의 도움말 파일을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>This example uses the <ph id="ph1">`HelpFile`</ph> property of the <ph id="ph2">`Err`</ph> object to start the Help system.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`HelpFile`</ph> 의 속성은 <ph id="ph2">`Err`</ph> 도움말 시스템을 시작 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.HelpFile">
          <source>By default, the <ph id="ph1">`HelpFile`</ph> property contains the name of the Visual Basic Help file.</source>
          <target state="translated">기본적으로는 <ph id="ph1">`HelpFile`</ph> 속성 Visual Basic 도움말 파일의 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Returns a system error code produced by a call to a dynamic-link library (DLL).</source>
          <target state="translated">DLL(동적 연결 라이브러리)을 호출하는 경우 생성되는 시스템 오류 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Returns a system error code produced by a call to a dynamic-link library (DLL).</source>
          <target state="translated">DLL(동적 연결 라이브러리)을 호출하는 경우 생성되는 시스템 오류 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property applies only to DLL calls made from Visual Basic code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> 속성은 Visual Basic 코드에서 DLL 호출에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>When such a call is made, the called function usually returns a code indicating success or failure, and the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is filled.</source>
          <target state="translated">호출된 된 함수에서 일반적으로 성공 또는 실패를 나타내는 코드를 반환 이러한 호출이 이루어지면 및 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> 속성이 채워집니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</source>
          <target state="translated">성공 또는 실패를 나타내는 반환 값을 결정 하는 DLL의 함수에 대 한 설명서를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Whenever the failure code is returned, the Visual Basic application should immediately check the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property.</source>
          <target state="translated">Visual Basic 응용 프로그램 즉시 확인 해야 때마다 오류 코드가 반환 되는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>No exception is raised when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is set.</source>
          <target state="translated">예외가 발생 하지 때는 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> property is protected by <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph>, which helps prevent it from being accessed from untrusted code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> 속성을 보호 <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph>에서 신뢰할 수 없는 코드에서 액세스 하는 사용 되지 않도록 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>However, <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> requires only the immediate caller to have <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt;</ph> permission.</source>
          <target state="translated">그러나 <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> 을 직접 실행 호출자만 필요 <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A&gt;</ph> 권한.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>If your code can be called from partially trusted code, exposing the value of <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> without validation is a security risk.</source>
          <target state="translated">코드와 부분적으로 신뢰할 수 있는 코드에서 호출할 수 있는 경우의 값을 노출 <ph id="ph1">&lt;xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A&gt;</ph> 없이 유효성 검사는 보안상 위험 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>For important limitations about how to use the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> member, see <bpt id="p1">[</bpt>Demand vs. LinkDemand<ept id="p1">](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>.</source>
          <target state="translated">사용 하는 방법에 대 한 중요 한 제한에 대 한는 <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> 멤버 참조 <bpt id="p1">[</bpt>Demand 합니다. LinkDemand<ept id="p1">](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>For more information about permissions, see <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> and <bpt id="p1">[</bpt>Code Access Permissions<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>.</source>
          <target state="translated">사용 권한에 대 한 자세한 내용은 참조 <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> 및 <bpt id="p1">[</bpt>코드 액세스 권한<ept id="p1">](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>Note   For smart devices this property always returns zero.</source>
          <target state="translated">Note 스마트 장치에 대 한이 속성은 항상 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The following example shows how you can use the <ph id="ph1">`LastDllError`</ph> property after calling a function in the Windows API.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">`LastDllError`</ph> Windows api에서 함수를 호출한 후 속성입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>The <ph id="ph1">`PrintWindowCoordinates`</ph> procedure takes a handle to a window and calls the <ph id="ph2">`GetWindowRect`</ph> function.</source>
          <target state="translated"><ph id="ph1">`PrintWindowCoordinates`</ph> 프로시저 창과 호출에 대 한 핸들에서 사용 하 여 <ph id="ph2">`GetWindowRect`</ph> 함수입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source><ph id="ph1">`GetWindowRect`</ph> fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</source>
          <target state="translated"><ph id="ph1">`GetWindowRect`</ph> 창 구성 하는 사각형의 면 길이의 RECT 데이터 구조를 채웁니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.LastDllError">
          <source>If you pass an invalid handle, an error occurs, and the error number is available through the <ph id="ph1">`LastDllError`</ph> property.</source>
          <target state="translated">잘못 된 핸들을 전달 하면 오류가 발생 하 고 오류 번호를 통해 사용할 수는 <ph id="ph1">`LastDllError`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Returns or sets a numeric value specifying an error.</source>
          <target state="translated">오류를 지정하는 숫자 값을 반환하거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Returns or sets a numeric value specifying an error.</source>
          <target state="translated">오류를 지정하는 숫자 값을 반환하거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>All of the <ph id="ph1">`Raise`</ph> arguments except <ph id="ph2">`Number`</ph> are optional.</source>
          <target state="translated">모든는 <ph id="ph1">`Raise`</ph> 제외한 인수 <ph id="ph2">`Number`</ph> 는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>If you omit optional arguments, and the property settings of the <ph id="ph1">`Err`</ph> object contain values that have not been cleared, those values serve as the values for your error.</source>
          <target state="translated">속성 설정 및 선택적 인수를 생략 하면는 <ph id="ph1">`Err`</ph> 지워지지 않은 값을 포함 하는 개체, 해당 값이 해당 오류에 대 한 값으로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Because the <ph id="ph1">`Err`</ph> object gives richer information than when you generate errors with the <ph id="ph2">`Error`</ph> statement, <ph id="ph3">`Raise`</ph> is useful for generating errors when writing class modules.</source>
          <target state="translated">때문에 <ph id="ph1">`Err`</ph> 사용 하 여 오류를 생성 하는 경우 보다 더 많은 정보를 제공 하는 개체는 <ph id="ph2">`Error`</ph> 문, <ph id="ph3">`Raise`</ph> 클래스 모듈을 쓸 때 오류를 생성 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>For example, with the <ph id="ph1">`Raise`</ph> method, the source that generated the error can be specified in the <ph id="ph2">`Source`</ph> property, online Help for the error can be referenced, and so on.</source>
          <target state="translated">예를 들어,는 <ph id="ph1">`Raise`</ph> 메서드, 오류를 생성 하는 원본에 지정할 수 있습니다는 <ph id="ph2">`Source`</ph> 속성을 오류에 대 한 온라인 도움말을 참조할 수 있습니다 및 등입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>When returning a user-defined error from an object, set <ph id="ph1">`Err.Number`</ph> by adding the number you selected as an error code to the <ph id="ph2">`VbObjectError`</ph> constant.</source>
          <target state="translated">개체에서 사용자 정의 오류를 반환할 때 설정 <ph id="ph1">`Err.Number`</ph> 를 오류 코드로 선택한 수를 추가 하 여는 <ph id="ph2">`VbObjectError`</ph> 상수입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>For example, you use the following code to return the number 1051 as an error code:</source>
          <target state="translated">다음 코드를 사용 하 여 오류 코드로 1051 수를 반환 하는 예를 들어:</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>This example illustrates a typical use of the <ph id="ph1">`Number`</ph> property in an error-handling routine.</source>
          <target state="translated">일반적인 사용을 보여 주는이 예제는 <ph id="ph1">`Number`</ph> 오류 처리 루틴에서 속성입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Raise`</ph> method to generate an original error within a function written in Visual Basic.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`Err`</ph> 개체의 <ph id="ph2">`Raise`</ph> 메서드 Visual Basic로 작성 하는 함수 내에서 원래 오류를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>The calling function can catch the error and report it to the user.</source>
          <target state="translated">호출 함수 오류를 catch 하 고 사용자에 게 보고할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source>Notice that procedure <ph id="ph1">`CallingProcedure`</ph> contrasts the type of information that you can derive from an <ph id="ph2">`Err`</ph> object with the information that you can derive from an <ph id="ph3">`Exception`</ph> object.</source>
          <target state="translated">프로시저 <ph id="ph1">`CallingProcedure`</ph> 파생할 수 있는 정보를 대조 한 <ph id="ph2">`Err`</ph> 파생할 수 있는 정보가 포함 된 개체는 <ph id="ph3">`Exception`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Number">
          <source><ph id="ph1">&lt;paramref name="Number" /&gt;</ph> is greater than 65535.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Number" /&gt;</ph>가 65535보다 큽니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph> integer that identifies the nature of the error.</source>
          <target state="translated">오류의 속성을 식별하는 <ph id="ph1">&lt;see langword="Long" /&gt;</ph> 형식의 정수입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</source>
          <target state="translated">Visual Basic 오류의 범위는 0에서 65535 사이이며, 0에서 512 사이의 범위는 시스템 오류로 예약되어 있고, 513에서 65535 사이의 범위는 사용자 정의 오류로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>When setting the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property to your own error code in a class module, you add your error code number to the <ph id="ph2">&lt;see langword="vbObjectError" /&gt;</ph> constant.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Number" /&gt;</ph> 속성을 클래스 모듈의 사용자 고유 오류 코드로 설정하는 경우 <ph id="ph2">&lt;see langword="vbObjectError" /&gt;</ph> 상수에 사용자의 오류 코드 번호를 추가합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>For example, to generate the error number 513, assign <bpt id="p1">&lt;c&gt;</bpt>vbObjectError + 513<ept id="p1">&lt;/c&gt;</ept> to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property.</source>
          <target state="translated">예를 들어, 513 오류 번호를 생성하려면 <bpt id="p1">&lt;c&gt;</bpt>vbObjectError + 513<ept id="p1">&lt;/c&gt;</ept>을 <ph id="ph1">&lt;see langword="Number" /&gt;</ph> 속성에 할당합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression naming the object or application that generated the error.</source>
          <target state="translated">오류를 생성한 개체 또는 응용 프로그램의 이름을 지정하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 식입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>When setting this property for an object, use the form <bpt id="p1">&lt;c&gt;</bpt>project<ept id="p1">&lt;/c&gt;</ept>.<bpt id="p2">&lt;c&gt;</bpt>class<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">개체에 대해 이 속성을 설정할 때는 <bpt id="p1">&lt;c&gt;</bpt>project<ept id="p1">&lt;/c&gt;</ept>.<bpt id="p2">&lt;c&gt;</bpt>class<ept id="p2">&lt;/c&gt;</ept> 형식을 사용합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Source<ept id="p1">&lt;/c&gt;</ept> is not specified, the process ID of the current Visual Basic project is used.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Source<ept id="p1">&lt;/c&gt;</ept>가 지정되어 있지 않으면 현재 Visual Basic 프로젝트의 프로세스 ID가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> expression describing the error.</source>
          <target state="translated">오류를 설명하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 식입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If unspecified, the value in the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property is examined.</source>
          <target state="translated">이 인수가 지정되지 않으면 <ph id="ph1">&lt;see langword="Number" /&gt;</ph> 속성의 값이 검사됩니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <ph id="ph1">&lt;see langword="Error" /&gt;</ph> function is used as the <ph id="ph2">&lt;see langword="Description" /&gt;</ph> property.</source>
          <target state="translated">Visual Basic 런타임 오류 코드에 매핑될 수 있는 경우 <ph id="ph1">&lt;see langword="Error" /&gt;</ph> 함수로 반환되는 문자열이 <ph id="ph2">&lt;see langword="Description" /&gt;</ph> 속성으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If there is no Visual Basic error corresponding to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property, the "Application-defined or object-defined error" message is used.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Number" /&gt;</ph> 속성과 일치하는 Visual Basic 오류가 없으면 "응용 프로그램 정의 또는 개체 정의 오류입니다."라는 메시지가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The fully qualified path to the Help file in which help on this error can be found.</source>
          <target state="translated">이 오류에 대한 도움말을 찾을 수 있는 도움말 파일의 정규화된 경로입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</source>
          <target state="translated">이 인수가 지정되지 않으면 Visual Basic은 Visual Basic 도움말 파일의 정규화된 드라이브, 경로 및 파일 이름을 사용합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The context ID identifying a topic within <bpt id="p1">&lt;c&gt;</bpt>HelpFile<ept id="p1">&lt;/c&gt;</ept> that provides help for the error.</source>
          <target state="translated">오류에 대한 도움말이 제공되는 <bpt id="p1">&lt;c&gt;</bpt>HelpFile<ept id="p1">&lt;/c&gt;</ept> 내의 항목을 식별하는 컨텍스트 ID입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If omitted, the Visual Basic Help-file context ID for the error corresponding to the <ph id="ph1">&lt;see langword="Number" /&gt;</ph> property is used, if it exists.</source>
          <target state="translated">이 인수가 생략된 경우 <ph id="ph1">&lt;see langword="Number" /&gt;</ph> 속성에 해당하는 오류의 Visual Basic 도움말 파일 컨텍스트 ID가 있으면 해당 ID가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Generates a run-time error; can be used instead of the <ph id="ph1">&lt;see langword="Error" /&gt;</ph> statement.</source>
          <target state="translated">런타임 오류를 생성하며 <ph id="ph1">&lt;see langword="Error" /&gt;</ph> 문 대신 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>All of the <ph id="ph1">`Raise`</ph> arguments except <ph id="ph2">`Number`</ph> are optional.</source>
          <target state="translated">모든는 <ph id="ph1">`Raise`</ph> 제외한 인수 <ph id="ph2">`Number`</ph> 는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>If you omit optional arguments, and the property settings of the <ph id="ph1">`Err`</ph> object contain values that have not been cleared, those values serve as the values for your error.</source>
          <target state="translated">속성 설정 및 선택적 인수를 생략 하면는 <ph id="ph1">`Err`</ph> 지워지지 않은 값을 포함 하는 개체, 해당 값이 해당 오류에 대 한 값으로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>Because the <ph id="ph1">`Err`</ph> object gives richer information than when you generate errors with the <ph id="ph2">`Error`</ph> statement, <ph id="ph3">`Raise`</ph> is useful for generating errors when writing class modules.</source>
          <target state="translated">때문에 <ph id="ph1">`Err`</ph> 사용 하 여 오류를 생성 하는 경우 보다 더 많은 정보를 제공 하는 개체는 <ph id="ph2">`Error`</ph> 문, <ph id="ph3">`Raise`</ph> 클래스 모듈을 쓸 때 오류를 생성 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>For example, with the <ph id="ph1">`Raise`</ph> method, the source that generated the error can be specified in the <ph id="ph2">`Source`</ph> property, online Help for the error can be referenced, and so on.</source>
          <target state="translated">예를 들어,는 <ph id="ph1">`Raise`</ph> 메서드, 오류를 생성 하는 원본에 지정할 수 있습니다는 <ph id="ph2">`Source`</ph> 속성을 오류에 대 한 온라인 도움말을 참조할 수 있습니다 및 등입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>This example uses the <ph id="ph1">`Err`</ph> object's <ph id="ph2">`Raise`</ph> method to generate an error within a function written in Visual Basic.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`Err`</ph> 개체의 <ph id="ph2">`Raise`</ph> Visual Basic로 작성 하는 함수 내에서 오류가 발생 하는 메서드.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
          <source>The calling function can catch the error and report it to the user with a message box.</source>
          <target state="translated">호출 하는 함수는 오류를 catch 하 고 메시지 상자를 사용 하 여 사용자에 게 보고 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression specifying the name of the object or application that originally generated the error.</source>
          <target state="translated">오류를 생성한 원래 개체 또는 응용 프로그램의 이름을 지정하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 식을 반환하거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Returns or sets a <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression specifying the name of the object or application that originally generated the error.</source>
          <target state="translated">오류를 생성한 원래 개체 또는 응용 프로그램의 이름을 지정하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 식을 반환하거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Read/write.</source>
          <target state="translated">읽기/쓰기입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>The <ph id="ph1">`Source`</ph> property specifies a <ph id="ph2">`String`</ph> expression representing the object that generated the error; the expression is usually the object's class name or process ID.</source>
          <target state="translated"><ph id="ph1">`Source`</ph> 속성 지정는 <ph id="ph2">`String`</ph> 개체를 나타내는 식을 오류를 생성 하는 되므로 일반적으로 식은 개체의 클래스 이름 또는 프로세스 id입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Use the <ph id="ph1">`Source`</ph> property to provide information when your code is unable to handle an error generated in an accessed object.</source>
          <target state="translated">사용 된 <ph id="ph1">`Source`</ph> 코드 액세스 된 개체에서 생성 된 오류를 처리할 수 없는 경우 정보를 제공 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>For example, if you access Microsoft Excel and it generates a <ph id="ph1">`Division by zero`</ph> error, Microsoft Excel sets <ph id="ph2">`Err.Number`</ph> to its error code for that error and sets <ph id="ph3">`Source`</ph> to "Excel.Application".</source>
          <target state="translated">예를 들어, Microsoft Excel을 액세스 하 고 생성 하는 경우는 <ph id="ph1">`Division by zero`</ph> 오류를 Microsoft Excel 설정 <ph id="ph2">`Err.Number`</ph> 해당 오류 및 집합의 오류 코드를 <ph id="ph3">`Source`</ph> "Excel.Application"에 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When the application is generating an error from code, <ph id="ph1">`Source`</ph> is your application's programmatic ID.</source>
          <target state="translated">응용 프로그램 코드에서 오류가 생성 되는 경우 <ph id="ph1">`Source`</ph> 프로그래밍 방식으로 응용 프로그램의 ID입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>Within a class, <ph id="ph1">`Source`</ph> should contain a name having the form <bpt id="p1">*</bpt>project<ept id="p1">*</ept>.<bpt id="p2">*</bpt>class<ept id="p2">*</ept>.</source>
          <target state="translated">클래스 내 <ph id="ph1">`Source`</ph> 형식 이름이 포함 되어야 <bpt id="p1">*</bpt>프로젝트<ept id="p1">*</ept>.<bpt id="p2">*</bpt> 클래스<ept id="p2">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When an unexpected error occurs in your code, the <ph id="ph1">`Source`</ph> property is automatically filled in.</source>
          <target state="translated">사용자 코드에서 예기치 않은 오류가 발생 하는 경우는 <ph id="ph1">`Source`</ph> 속성이 자동으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>For errors in a module, <ph id="ph1">`Source`</ph> contains the project name.</source>
          <target state="translated">모듈에 오류에 대 한 <ph id="ph1">`Source`</ph> 프로젝트 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>This example demonstrates the use of the <ph id="ph1">`Source`</ph> property in a typical error-handling routine.</source>
          <target state="translated">사용을 보여 주는이 예제는 <ph id="ph1">`Source`</ph> 일반적인 오류 처리 루틴에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>When an error is raised from <ph id="ph1">`Class1`</ph>, the string <ph id="ph2">`"Class1"`</ph> is assigned to the <ph id="ph3">`Source`</ph> property of the <ph id="ph4">`Err`</ph> object.</source>
          <target state="translated">오류가 발생 한 경우 <ph id="ph1">`Class1`</ph>, 문자열 <ph id="ph2">`"Class1"`</ph> 에 할당 되는 <ph id="ph3">`Source`</ph> 속성은 <ph id="ph4">`Err`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.ErrObject.Source">
          <source>This string is then displayed in an informative message indicating the source and number of the error.</source>
          <target state="translated">이 문자열은 다음 원본 및 발생 한 오류 수를 나타내는 정보 메시지에 표시 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>