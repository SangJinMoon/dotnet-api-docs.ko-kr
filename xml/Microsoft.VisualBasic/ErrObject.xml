<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99efa4f2fa97adfbbe2e2ba0ece6a60e4e9943ba" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52221920" /></Metadata><TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a22ef-101"><see langword="ErrObject" /> 속성 및 파악 하 고 사용 하 여 런타임 오류를 처리 하는 데 사용 되는 프로시저를 포함 하는 모듈을 <see langword="Err" /> 개체.</span><span class="sxs-lookup"><span data-stu-id="a22ef-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22ef-102">합니다 `ErrObject` 모듈을 지원 합니다 `Err` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="a22ef-103">자세한 내용은 <xref:Microsoft.VisualBasic.Information.Err%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a22ef-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22ef-104">속성을 사용 하 여이 예제는 `Err` 개체 오류 메시지 대화 상자를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="a22ef-105">사용 하는 경우 어떻게 되는지 살펴보십시오를 `Clear` 메서드 첫 번째: 다음 사용 하 여 Visual Basic 오류를 생성할 때를 `Raise` 메서드를 Visual Basic의 기본 값의 속성 수는 `Err` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="a22ef-106">On Error 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a22ef-106">On Error Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="a22ef-107">Try...Catch...Finally 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a22ef-107">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="a22ef-108">키워드(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a22ef-108">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="a22ef-109">Visual Basic 런타임 라이브러리 멤버</span><span class="sxs-lookup"><span data-stu-id="a22ef-109">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a22ef-110">모든 속성 설정을 지웁니다는 <see langword="Err" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-110">Clears all property settings of the <see langword="Err" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22ef-111">사용 하 여 `Clear` 명시적으로 선택 취소 합니다 `Err` 오류가 처리 된 후에 지연 된 오류 처리를 사용 하는 경우와 같이 개체 `On Error Resume Next`합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-111">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="a22ef-112">`Clear` 메서드는 다음 문을 실행할 때마다:</span><span class="sxs-lookup"><span data-stu-id="a22ef-112">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="a22ef-113">모든 유형의 `Resume` 문</span><span class="sxs-lookup"><span data-stu-id="a22ef-113">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="a22ef-114">`Exit Sub`, `Exit Function`또는 `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="a22ef-114">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="a22ef-115">모든 `On Error` 문</span><span class="sxs-lookup"><span data-stu-id="a22ef-115">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="a22ef-116">모든 `Try...Catch...Finally` 문</span><span class="sxs-lookup"><span data-stu-id="a22ef-116">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="a22ef-117">합니다 `On Error Resume Next` 구문에 더 적합할 수 있습니다 `On Error GoTo` 다른 개체에 액세스 하는 동안 발생 한 오류를 처리 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="a22ef-117">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="a22ef-118">검사 `Err` 각 상호 작용 후 개체를 사용 하 여 코드에서 액세스 하는 개체를: 확인할 수 있는 개체의 오류 코드에 배치 `Err.Number`, 개체가 원래 오류 (개체를 생성 하는 데 뿐만 아니라 에 지정 된 `Err.Source`).</span><span class="sxs-lookup"><span data-stu-id="a22ef-118">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22ef-119">이 예에서는 `Err` 개체의 `Clear` 의 숫자 속성을 다시 설정 하는 방법은 `Err` 개체 0, 길이가 0 인 문자열에 문자열 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-119">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="a22ef-120">호출 하지 않고 `Clear`, 두 번째 호출은 `MsgBox` 동일한 오류 메시지가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-120">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="a22ef-121">On Error 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a22ef-121">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22ef-122">설정 하거나 반환을 <see langword="String" /> 는 오류와 관련 된 설명이 포함 된 문자열을 포함 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-122">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="a22ef-123">읽기/쓰기입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-123">Read/write.</span></span></summary>
        <value><span data-ttu-id="a22ef-124">설정 하거나 반환을 <see langword="String" /> 는 오류와 관련 된 설명이 포함 된 문자열을 포함 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-124">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="a22ef-125">읽기/쓰기입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-125">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22ef-126">`Description` 오류에 대 한 간단한 설명을 속성 설정을 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-126">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="a22ef-127">이 속성을 사용 하 여 오류를 처리할 수 없거나 처리 하지 않으려는 사용자 경고를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-127">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="a22ef-128">사용자 정의 오류를 생성 하는 경우 해당 오류에 대 한 간단한 설명을 할당 된 `Description` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-128">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="a22ef-129">경우는 `Description` 속성에서는 채워지지 않습니다 값과는 <xref:Microsoft.VisualBasic.ErrObject.Number%2A> Visual Basic 런타임 오류에 해당 하는 속성을 반환 하는 문자열이 <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> 함수에 설정 된는 `Description` 오류가 생성 될 때 속성.</span><span class="sxs-lookup"><span data-stu-id="a22ef-129">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22ef-130">사용자 정의 메시지를 지정 하는이 예제는 `Description` 의 속성을 `Err` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-130">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22ef-131">마지막 실행 된 문의 줄 번호를 나타내는 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-131">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="a22ef-132">읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-132">Read-only.</span></span></summary>
        <value><span data-ttu-id="a22ef-133">마지막 실행 된 문의 줄 번호를 나타내는 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-133">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="a22ef-134">읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-134">Read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22ef-135">Visual Basic에서 줄 번호 없음를 발견 하는 경우 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-135">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22ef-136">이 예제에서는 `Erl` 줄 번호를 표시 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-136">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a22ef-137">발생 한 오류를 나타내는 예외를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-137">Returns the exception representing the error that occurred.</span></span></summary>
        <returns><span data-ttu-id="a22ef-138">발생 한 오류를 나타내는 예외를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-138">Returns the exception representing the error that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22ef-139">`GetException` 함수를 에서만 사용할 수는 `Err` 개체 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-139">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="a22ef-140">와 함께 작동 합니다 `Exception` 의 속성은 `Err` 발생 한 오류를 표시 하도록 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-140">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22ef-141">다음 코드는 예외에 할당 된 메시지를 표시 합니다 `Err` 개체:</span><span class="sxs-lookup"><span data-stu-id="a22ef-141">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22ef-142">반환 하거나 설정는 <see langword="Integer" /> 도움말 파일의 항목에 대 한 컨텍스트 ID를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-142">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="a22ef-143">읽기/쓰기입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-143">Read/write.</span></span></summary>
        <value><span data-ttu-id="a22ef-144">반환 하거나 설정는 <see langword="Integer" /> 도움말 파일의 항목에 대 한 컨텍스트 ID를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-144">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="a22ef-145">읽기/쓰기입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-145">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22ef-146">`HelpContext` 속성 응용 프로그램에 대 한 상황에 맞는 도움말을 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-146">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="a22ef-147">도움말 파일에 지정 된 경우 `HelpFile`, `HelpContext` 속성 자동으로 식별 된 도움말 파일을 표시 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-147">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="a22ef-148">모두를 `HelpFile` 및 `HelpContext` 속성은 비어 있는 경우 값은 <xref:Microsoft.VisualBasic.ErrObject.Number%2A> 속성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-148">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="a22ef-149">경우 값은 `Number` 속성 값에 해당 하는 Visual Basic 런타임 오류를 오류에 대 한 Visual Basic 도움말 컨텍스트 ID가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-149">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="a22ef-150">경우 값은 `Number` 속성 Visual Basic 오류에 해당 하지 않는, Visual Basic 도움말 파일에 대 한 내용을 화면이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-150">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a22ef-151">일반적인 오류 처리 응용 프로그램에서 루틴을 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-151">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="a22ef-152">개체를 사용 하 여 프로그래밍 하는 경우에 오류 처리의 품질을 개선 하거나 오류를 복구할 수 없는 경우 사용자에 게 의미 있는 메시지를 표시 하려면 개체의 도움말 파일을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-152">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22ef-153">이 예제에서는 `HelpContext` 의 속성을 `Err` 개체에 대 한 Visual Basic 도움말 항목을 표시할는 `Overflow` 오류.</span><span class="sxs-lookup"><span data-stu-id="a22ef-153">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22ef-154">설정 하거나 반환을 <see langword="String" /> 도움말 파일에 정규화 된 경로 포함 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-154">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="a22ef-155">읽기/쓰기입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-155">Read/write.</span></span></summary>
        <value><span data-ttu-id="a22ef-156">설정 하거나 반환을 <see langword="String" /> 도움말 파일에 정규화 된 경로 포함 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-156">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="a22ef-157">읽기/쓰기입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-157">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22ef-158">도움말 파일을 통해 지정 된 경우는 `HelpFile` 속성을 자동으로 호출 하는 사용자가 도움말 키 (또는 F1 키)를 누를 때 오류 메시지 대화 상자.</span><span class="sxs-lookup"><span data-stu-id="a22ef-158">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="a22ef-159">경우는 `HelpContext` 속성 지정된 된 파일을 해당 항목에 대 한 ID가 자동으로 표시 하는 올바른 컨텍스트를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-159">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="a22ef-160">없으면 `HelpFile` 지정, Visual Basic 도움말 파일을 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-160">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a22ef-161">일반적인 오류 처리 응용 프로그램에서 루틴을 작성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-161">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="a22ef-162">개체를 사용 하 여 프로그래밍 하는 경우에 오류 처리의 품질을 개선 하거나 오류를 복구할 수 없는 경우 사용자에 게 의미 있는 메시지를 표시 하려면 개체의 도움말 파일을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-162">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22ef-163">이 예제에서는 합니다 `HelpFile` 의 속성을 `Err` 도움말 시스템을 시작 하는 개체.</span><span class="sxs-lookup"><span data-stu-id="a22ef-163">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="a22ef-164">기본적으로 `HelpFile` 속성 Visual Basic 도움말 파일의 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-164">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22ef-165">동적 연결 라이브러리 (DLL)를 호출 하 여 생성 하는 시스템 오류 코드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-165">Returns a system error code produced by a call to a dynamic-link library (DLL).</span></span> <span data-ttu-id="a22ef-166">읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-166">Read-only.</span></span></summary>
        <value><span data-ttu-id="a22ef-167">동적 연결 라이브러리 (DLL)를 호출 하 여 생성 하는 시스템 오류 코드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-167">Returns a system error code produced by a call to a dynamic-link library (DLL).</span></span> <span data-ttu-id="a22ef-168">읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-168">Read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22ef-169"><xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> Visual Basic 코드에서 DLL 호출에만 속성이 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-169">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="a22ef-170">호출된 된 함수에서 일반적으로 성공 또는 실패를 나타내는 코드를 반환 해당 호출이 이루어지면 및 <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> 속성이 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-170">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="a22ef-171">성공 또는 실패를 나타내는 반환 값을 확인 하려면 DLL의 함수에 대 한 설명서를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-171">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="a22ef-172">Visual Basic 응용 프로그램 즉시 확인 해야 때마다 오류 코드가 반환 되는 <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-172">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="a22ef-173">예외가 발생 하지 않습니다 경우는 <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-173">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a22ef-174">합니다 <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> 속성을 보호 <xref:System.Security.Permissions.SecurityAction.LinkDemand>를 통해 신뢰할 수 없는 코드에서 액세스 하지 못하게 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-174">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="a22ef-175">그러나 <xref:System.Security.Permissions.SecurityAction.LinkDemand> 있어야 직접 실행 호출자만 <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> 권한.</span><span class="sxs-lookup"><span data-stu-id="a22ef-175">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="a22ef-176">코드는 부분적으로 신뢰할 수 있는 코드에서 호출할 수 있는, 경우 노출 값 <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> 유효성 검사는 보안 위험 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-176">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="a22ef-177">사용 하는 방법에 대 한 중요 한 제한 사항에 대해서는 <xref:System.Security.Permissions.SecurityAction.LinkDemand> 멤버 참조 [Demand 합니다. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-177">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="a22ef-178">사용 권한에 대 한 자세한 내용은 참조 하세요. <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-178">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="a22ef-179">Note 스마트 장치에 대 한이 속성은 항상 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-179">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22ef-180">다음 예제에서는 사용 하는 방법을 보여 줍니다는 `LastDllError` Windows api에서 함수를 호출한 후 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-180">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="a22ef-181">`PrintWindowCoordinates` 프로시저는 창을 호출 하는 핸들을 가져오고는 `GetWindowRect` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-181">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="a22ef-182">`GetWindowRect` 창 구성 하는 사각형의 면의 길이 사용 하 여 영역 데이터 구조를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-182">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="a22ef-183">잘못 된 핸들을 전달 하면 오류가 발생 하 고 오류 번호를 통해 사용할 수는 `LastDllError` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-183">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22ef-184">반환 하거나 오류를 지정 하는 숫자 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-184">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="a22ef-185">읽기/쓰기입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-185">Read/write.</span></span></summary>
        <value><span data-ttu-id="a22ef-186">반환 하거나 오류를 지정 하는 숫자 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-186">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="a22ef-187">읽기/쓰기입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-187">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22ef-188">모든 합니다 `Raise` 제외한 인수 `Number` 는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-188">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="a22ef-189">속성 설정 및 선택적 인수를 생략 하면는 `Err` 지워지지 않은 값을 포함 하는 개체, 해당 값이 오류에 대 한 값으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-189">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="a22ef-190">때문에 `Err` 개체는 사용 하 여 오류를 생성 하는 경우 보다 더 많은 정보를 제공 합니다 `Error` 문을 `Raise` 클래스 모듈을 작성 하는 경우 오류를 생성 하는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-190">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="a22ef-191">예를 들어 합니다 `Raise` 메서드를 오류를 발생 시킨 소스에서 지정할 수 있습니다는 `Source` 속성을 오류에 대 한 온라인 도움말을 참조할 수 있습니다 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-191">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="a22ef-192">개체에서 사용자 정의 오류를 반환 하는 경우 설정 `Err.Number` 을 오류 코드와 선택한 수를 추가 하 여를 `VbObjectError` 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-192">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="a22ef-193">예를 들어 오류 코드로 1051 개수를 반환 하려면 다음 코드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-193">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="a22ef-194">이 예제에는 일반적인 사용 방법을 보여 줍니다.는 `Number` 오류 처리 루틴에서 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-194">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="a22ef-195">이 예제에서는 합니다 `Err` 개체의 `Raise` Visual Basic로 작성 된 함수에 원래 오류를 생성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-195">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="a22ef-196">호출 하는 함수는 오류를 catch 하 고 사용자에 게 보고할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-196">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="a22ef-197">프로시저 `CallingProcedure` 에서 파생 시킬 수 있는 정보를 대조를 `Err` 에서 파생 시킬 수 있는 정보를 사용 하 여 개체를 `Exception` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-197">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a22ef-198"><paramref name="Number" /> 65535 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-198"><paramref name="Number" /> is greater than 65535.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="a22ef-199">필수.</span><span class="sxs-lookup"><span data-stu-id="a22ef-199">Required.</span></span> <span data-ttu-id="a22ef-200"><see langword="Long" /> 오류의 특성을 식별 하는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-200"><see langword="Long" /> integer that identifies the nature of the error.</span></span> <span data-ttu-id="a22ef-201">0-65535 범위에는 Visual Basic 오류 범위 0-512은 시스템 오류에 예약 되어 있습니다. 513에서 65535 사이의 범위는 사용자 정의 오류에 대해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-201">Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</span></span> <span data-ttu-id="a22ef-202">설정 하는 경우는 <see langword="Number" /> 클래스 모듈에 고유한 오류 코드 속성에 추가한 사용자의 오류 코드 번호를를 <see langword="vbObjectError" /> 상수입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-202">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span></span> <span data-ttu-id="a22ef-203">예를 들어, 513 오류 번호를 생성하려면 <c>vbObjectError + 513</c>을 <see langword="Number" /> 속성에 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-203">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span></span></param>
        <param name="Source"><span data-ttu-id="a22ef-204">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-204">Optional.</span></span> <span data-ttu-id="a22ef-205"><see langword="String" /> 개체 또는 오류를 발생 시킨 응용 프로그램 이름을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-205"><see langword="String" /> expression naming the object or application that generated the error.</span></span> <span data-ttu-id="a22ef-206">개체에 대해 이 속성을 설정할 때는 <c>project</c>.<c>class</c> 형식을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-206">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span></span> <span data-ttu-id="a22ef-207">경우 <paramref name="Source" /> 지정 하지 않으면 현재 Visual Basic 프로젝트의 프로세스 ID를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-207">If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</span></span></param>
        <param name="Description"><span data-ttu-id="a22ef-208">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-208">Optional.</span></span> <span data-ttu-id="a22ef-209"><see langword="String" /> 오류를 설명 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-209"><see langword="String" /> expression describing the error.</span></span> <span data-ttu-id="a22ef-210">지정 하지 않으면 값은 <see langword="Number" /> 속성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-210">If unspecified, the value in the <see langword="Number" /> property is examined.</span></span> <span data-ttu-id="a22ef-211">Visual Basic 런타임 오류에 매핑될 수 하는 경우 코드를 통해 반환 되는 문자열을 <see langword="Error" /> 로 함수를 사용 합니다 <see langword="Description" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-211">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span></span> <span data-ttu-id="a22ef-212">에 해당 하는 Visual Basic 오류가 없는 경우는 <see langword="Number" /> 속성을 "응용 프로그램 정의 또는 개체 정의 오류" 메시지가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-212">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="a22ef-213">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-213">Optional.</span></span> <span data-ttu-id="a22ef-214">이 오류에 대 한 도움말을 찾을 수 있는 도움말 파일에 정규화 된 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-214">The fully qualified path to the Help file in which help on this error can be found.</span></span> <span data-ttu-id="a22ef-215">지정 하지 않으면 Visual Basic에 정규화 된 드라이브, 경로 및 Visual Basic 도움말 파일의 파일 이름을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-215">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span></span></param>
        <param name="HelpContext"><span data-ttu-id="a22ef-216">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-216">Optional.</span></span> <span data-ttu-id="a22ef-217">내에서 항목을 식별 하는 상황에 맞는 ID <paramref name="HelpFile" /> 오류에 대 한 도움말을 제공 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-217">The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error.</span></span> <span data-ttu-id="a22ef-218">에 해당 하는 오류에 대 한 Visual Basic 도움말 파일 컨텍스트 ID를 생략 하면는 <see langword="Number" /> 존재 하는 경우 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-218">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span></span></param>
        <summary><span data-ttu-id="a22ef-219">런타임 오류를 생성합니다. 대신 사용할 수는 <see langword="Error" /> 문입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-219">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22ef-220">모든 합니다 `Raise` 제외한 인수 `Number` 는 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-220">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="a22ef-221">속성 설정 및 선택적 인수를 생략 하면는 `Err` 지워지지 않은 값을 포함 하는 개체, 해당 값이 오류에 대 한 값으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-221">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="a22ef-222">때문에 `Err` 개체는 사용 하 여 오류를 생성 하는 경우 보다 더 많은 정보를 제공 합니다 `Error` 문을 `Raise` 클래스 모듈을 작성 하는 경우 오류를 생성 하는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-222">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="a22ef-223">예를 들어 합니다 `Raise` 메서드를 오류를 발생 시킨 소스에서 지정할 수 있습니다는 `Source` 속성을 오류에 대 한 온라인 도움말을 참조할 수 있습니다 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-223">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22ef-224">이 예제에서는 합니다 `Err` 개체의 `Raise` Visual Basic로 작성 된 함수 내에서 오류를 생성 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-224">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="a22ef-225">호출 하는 함수는 오류를 catch 하 고 메시지 상자를 사용 하 여 사용자에 게 보고할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-225">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="a22ef-226">Error 문</span><span class="sxs-lookup"><span data-stu-id="a22ef-226">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="a22ef-227">On Error 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a22ef-227">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22ef-228">설정 하거나 반환을 <see langword="String" /> 개체 또는 원래 오류를 생성 하는 응용 프로그램의 이름을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-228">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="a22ef-229">읽기/쓰기입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-229">Read/write.</span></span></summary>
        <value><span data-ttu-id="a22ef-230">설정 하거나 반환을 <see langword="String" /> 개체 또는 원래 오류를 생성 하는 응용 프로그램의 이름을 지정 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-230">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="a22ef-231">읽기/쓰기입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-231">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22ef-232">`Source` 속성을 지정 된 `String` 개체를 나타내는 식을 오류를 생성 하는, 식은 일반적으로 개체의 클래스 이름 또는 프로세스 id입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-232">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="a22ef-233">사용 된 `Source` 코드 액세스 된 개체에서 생성 된 오류를 처리할 수 없을 때 정보를 제공 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-233">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="a22ef-234">예를 들어, Microsoft Excel을 액세스 하 고 생성 하는 경우는 `Division by zero` 오류를 Microsoft Excel 설정 `Err.Number` 집합과 오류에 대 한 해당 오류 코드로 `Source` "Excel.Application"를 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-234">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="a22ef-235">응용 프로그램 코드에서 오류가 생성 되 면 `Source` 응용 프로그램의 프로그래밍 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-235">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="a22ef-236">클래스 내의 `Source` 형식 이름이 있어야 *프로젝트*. *클래스*합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-236">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="a22ef-237">코드에서 예기치 않은 오류가 발생 하는 경우는 `Source` 속성이 자동으로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-237">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="a22ef-238">모듈에서 오류에 대 한 `Source` 프로젝트 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-238">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22ef-239">이 예제에서는 사용 된 `Source` 일반적인 오류 처리 루틴에서 속성.</span><span class="sxs-lookup"><span data-stu-id="a22ef-239">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="a22ef-240">오류가 발생 하면 `Class1`, 문자열 `"Class1"` 에 할당 되는 `Source` 의 속성을 `Err` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-240">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="a22ef-241">이 문자열은 다음 원본 및 오류 수를 나타내는 정보 메시지에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a22ef-241">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="a22ef-242">On Error 문(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a22ef-242">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>