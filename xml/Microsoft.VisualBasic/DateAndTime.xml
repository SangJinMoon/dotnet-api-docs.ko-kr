<Type Name="DateAndTime" FullName="Microsoft.VisualBasic.DateAndTime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c93207af9a66f4f47fd44508e84a0a61ee8cefee" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36727068" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DateAndTime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DateAndTime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.DateAndTime" />
  <TypeSignature Language="VB.NET" Value="Public Module DateAndTime" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateAndTime sealed" />
  <TypeSignature Language="F#" Value="type DateAndTime = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="eadec-101">
        <see langword="DateAndTime" /> 모듈에는 날짜 및 시간 작업에 사용되는 프로시저와 속성이 포함되어 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eadec-101">The <see langword="DateAndTime" /> module contains the procedures and properties used in date and time operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-102">이 모듈은 Visual Basic 언어 키워드 및 런타임 라이브러리 멤버를 현재 날짜 또는 시간, 날짜를 계산, 날짜 또는 시간을 반환, 날짜 또는 시간을 설정 또는 시간 프로세스의 기간을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-102">This module supports the Visual Basic language keywords and run-time library members that get the current date or time, perform date calculations, return a date or time, set the date or time, or time the duration of a process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-103">사용 하 여이 예제는 `Today` 속성을 현재 시스템 날짜를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-103">This example uses the `Today` property to return the current system date.</span></span>  
  
```vb  
Dim thisDate As Date  
thisDate = Today   
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DateAdd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eadec-104">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-104">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(valuetype Microsoft.VisualBasic.DateInterval Interval, float64 Number, valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As DateInterval, Number As Double, DateValue As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(Microsoft::VisualBasic::DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : Microsoft.VisualBasic.DateInterval * double * DateTime -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="eadec-105">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-105">Required.</span>
          </span>
          <span data-ttu-id="eadec-106">더할 시간 간격을 나타내는 <see langword="DateInterval" /> 열거형 값 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-106">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to add.</span>
          </span>
        </param>
        <param name="Number">
          <span data-ttu-id="eadec-107">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-107">Required.</span>
          </span>
          <span data-ttu-id="eadec-108">
            <see langword="Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-108">
              <see langword="Double" />.</span>
          </span>
          <span data-ttu-id="eadec-109">더할 간격의 수를 나타내는 부동 소수점 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-109">Floating-point expression representing the number of intervals you want to add.</span>
          </span>
          <span data-ttu-id="eadec-110">
            <c>숫자</c>는 미래의 날짜/시간 값을 구하는 경우에는 양수이고 과거의 날짜/시간 값을 구하는 경우에는 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-110">
              <c>Number</c> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span>
          </span>
          <span data-ttu-id="eadec-111">
            <c>간격</c>이 시간, 분 또는 초로 지정되는 경우에는 소수 부분이 포함될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-111">It can contain a fractional part when <c>Interval</c> specifies hours, minutes, or seconds.</span>
          </span>
          <span data-ttu-id="eadec-112">다른 <c>간격</c> 값의 경우에 <c>숫자</c>의 소수 부분은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-112">For other values of <c>Interval</c>, any fractional part of <c>Number</c> is ignored.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="eadec-113">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-113">Required.</span>
          </span>
          <span data-ttu-id="eadec-114">
            <see langword="Date" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-114">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="eadec-115">간격을 더할 날짜와 시간을 나타내는 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-115">An expression representing the date and time to which the interval is to be added.</span>
          </span>
          <span data-ttu-id="eadec-116">
            <c>DateValue</c> 자체는 호출 프로그램에서 변경되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-116">
              <c>DateValue</c> itself is not changed in the calling program.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-117">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-117">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-118">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-118">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-119">사용할 수는 `DateAdd` 함수를 추가 하거나 뺄 날짜에서 특정된 시간 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-119">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="eadec-120">예를 들어 이제 오늘 또는 시간 전에 45 분에서 30 일 날짜를 계산할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-120">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="eadec-121">날짜를 추가 하려면 `DateValue`를 사용할 수 있습니다 `DateInterval.Day`, `DateInterval.DayOfYear`, 또는 `DateInterval.Weekday`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-121">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="eadec-122">이러한 때문에 동등한 것으로 취급 됩니다 `DayOfYear` 및 `Weekday` 의미 있는 시간 간격을 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-122">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="eadec-123">`DateAdd` 함수는 잘못 된 날짜를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-123">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="eadec-124">필요한 경우 결과 날짜의 날짜 부분 결과 연도에 결과 달의 마지막 날 하향 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-124">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="eadec-125">다음 예제에서는 1 월 31 일에 1 개월을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-125">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="eadec-126">이 예제에서는 `DateAdd` 반환 `#2/28/1995#`이 아니라 `#2/31/1995#`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-126">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="eadec-127">경우 `DateValue` 은 `#1/31/1996#`, 반환 `#2/29/1996#` 1996 윤년 이므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-127">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eadec-128">`DateAdd` 현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성은 <xref:System.Globalization.CultureInfo> 클래스에 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-128">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="eadec-129">기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 값에 따라 결정 됩니다 **제어판** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-129">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="eadec-130">이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime> 구조를 해당 메서드에 추가 하는 옵션 제공 시간 간격을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-130">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="eadec-131">예를 들어 일 전 부터는 가장 가까운 밀리초로 반올림의 소수를 추가할 수 있습니다는 `Date` 다음과 같이 변수:</span><span class="sxs-lookup"><span data-stu-id="eadec-131">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="eadec-132">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-132">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-133">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-133">Enumeration value</span></span>|<span data-ttu-id="eadec-134">문자열</span><span class="sxs-lookup"><span data-stu-id="eadec-134">String</span></span>|<span data-ttu-id="eadec-135">시간 간격의 단위를 추가 하려면</span><span class="sxs-lookup"><span data-stu-id="eadec-135">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="eadec-136">d</span><span class="sxs-lookup"><span data-stu-id="eadec-136">d</span></span>|<span data-ttu-id="eadec-137">Day 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-137">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="eadec-138">y</span><span class="sxs-lookup"><span data-stu-id="eadec-138">y</span></span>|<span data-ttu-id="eadec-139">Day 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-139">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="eadec-140">h</span><span class="sxs-lookup"><span data-stu-id="eadec-140">h</span></span>|<span data-ttu-id="eadec-141">시간; 가장 가까운 밀리초로 반올림</span><span class="sxs-lookup"><span data-stu-id="eadec-141">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="eadec-142">n</span><span class="sxs-lookup"><span data-stu-id="eadec-142">n</span></span>|<span data-ttu-id="eadec-143">분; 가장 가까운 밀리초로 반올림</span><span class="sxs-lookup"><span data-stu-id="eadec-143">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="eadec-144">분</span><span class="sxs-lookup"><span data-stu-id="eadec-144">m</span></span>|<span data-ttu-id="eadec-145">월; 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-145">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="eadec-146">q</span><span class="sxs-lookup"><span data-stu-id="eadec-146">q</span></span>|<span data-ttu-id="eadec-147">분기; 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-147">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="eadec-148">s</span><span class="sxs-lookup"><span data-stu-id="eadec-148">s</span></span>|<span data-ttu-id="eadec-149">초입니다. 가장 가까운 밀리초로 반올림</span><span class="sxs-lookup"><span data-stu-id="eadec-149">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="eadec-150">주</span><span class="sxs-lookup"><span data-stu-id="eadec-150">w</span></span>|<span data-ttu-id="eadec-151">Day 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-151">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="eadec-152">ww</span><span class="sxs-lookup"><span data-stu-id="eadec-152">ww</span></span>|<span data-ttu-id="eadec-153">주; 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-153">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="eadec-154">yyyy</span><span class="sxs-lookup"><span data-stu-id="eadec-154">yyyy</span></span>|<span data-ttu-id="eadec-155">연도 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-155">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eadec-156">이 예제에서는 날짜를 사용 하 고는 `DateAdd` 함수 지정된 된 수의 개월 나중에 해당 날짜를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-156">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eadec-157">
            <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-157">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eadec-158">
            <paramref name="Interval" />가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-158">
              <paramref name="Interval" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eadec-159">계산된 날짜가 0001년 1월 1일 00:00:00시 이전 또는 9999년 12월 31일 23:59:59시 이후입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-159">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (string Interval, double Number, object DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(string Interval, float64 Number, object DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As String, Number As Double, DateValue As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(System::String ^ Interval, double Number, System::Object ^ DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : string * double * obj -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Number" Type="System.Double" />
        <Parameter Name="DateValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="eadec-160">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-160">Required.</span>
          </span>
          <span data-ttu-id="eadec-161">더할 시간 간격을 나타내는 <see langword="DateInterval" /> 열거형 값 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-161">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to add.</span>
          </span>
        </param>
        <param name="Number">
          <span data-ttu-id="eadec-162">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-162">Required.</span>
          </span>
          <span data-ttu-id="eadec-163">
            <see langword="Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-163">
              <see langword="Double" />.</span>
          </span>
          <span data-ttu-id="eadec-164">더할 간격의 수를 나타내는 부동 소수점 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-164">Floating-point expression representing the number of intervals you want to add.</span>
          </span>
          <span data-ttu-id="eadec-165">
            <c>숫자</c>는 미래의 날짜/시간 값을 구하는 경우에는 양수이고 과거의 날짜/시간 값을 구하는 경우에는 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-165">
              <c>Number</c> can be positive (to get date/time values in the future) or negative (to get date/time values in the past).</span>
          </span>
          <span data-ttu-id="eadec-166">
            <c>간격</c>이 시간, 분 또는 초로 지정되는 경우에는 소수 부분이 포함될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-166">It can contain a fractional part when <c>Interval</c> specifies hours, minutes, or seconds.</span>
          </span>
          <span data-ttu-id="eadec-167">다른 <c>간격</c> 값의 경우에 <c>숫자</c>의 소수 부분은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-167">For other values of <c>Interval</c>, any fractional part of <c>Number</c> is ignored.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="eadec-168">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-168">Required.</span>
          </span>
          <span data-ttu-id="eadec-169">
            <see langword="Date" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-169">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="eadec-170">간격을 더할 날짜와 시간을 나타내는 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-170">An expression representing the date and time to which the interval is to be added.</span>
          </span>
          <span data-ttu-id="eadec-171">
            <c>DateValue</c> 자체는 호출 프로그램에서 변경되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-171">
              <c>DateValue</c> itself is not changed in the calling program.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-172">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-172">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-173">지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-173">Returns a <see langword="Date" /> value containing a date and time value to which a specified time interval has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-174">사용할 수는 `DateAdd` 함수를 추가 하거나 뺄 날짜에서 특정된 시간 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-174">You can use the `DateAdd` function to add or subtract a specified time interval from a date.</span></span> <span data-ttu-id="eadec-175">예를 들어 이제 오늘 또는 시간 전에 45 분에서 30 일 날짜를 계산할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-175">For example, you can calculate a date 30 days from today or a time 45 minutes before now.</span></span>  
  
 <span data-ttu-id="eadec-176">날짜를 추가 하려면 `DateValue`를 사용할 수 있습니다 `DateInterval.Day`, `DateInterval.DayOfYear`, 또는 `DateInterval.Weekday`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-176">To add days to `DateValue`, you can use `DateInterval.Day`, `DateInterval.DayOfYear`, or `DateInterval.Weekday`.</span></span> <span data-ttu-id="eadec-177">이러한 때문에 동등한 것으로 취급 됩니다 `DayOfYear` 및 `Weekday` 의미 있는 시간 간격을 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-177">These are treated as equivalent because `DayOfYear` and `Weekday` are not meaningful time intervals.</span></span>  
  
 <span data-ttu-id="eadec-178">`DateAdd` 함수는 잘못 된 날짜를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-178">The `DateAdd` function never returns an invalid date.</span></span> <span data-ttu-id="eadec-179">필요한 경우 결과 날짜의 날짜 부분 결과 연도에 결과 달의 마지막 날 하향 조정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-179">If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year.</span></span> <span data-ttu-id="eadec-180">다음 예제에서는 1 월 31 일에 1 개월을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-180">The following example adds one month to January 31:</span></span>  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 <span data-ttu-id="eadec-181">이 예제에서는 `DateAdd` 반환 `#2/28/1995#`이 아니라 `#2/31/1995#`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-181">In this example, `DateAdd` returns `#2/28/1995#`, not `#2/31/1995#`.</span></span> <span data-ttu-id="eadec-182">경우 `DateValue` 은 `#1/31/1996#`, 반환 `#2/29/1996#` 1996 윤년 이므로 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-182">If `DateValue` is `#1/31/1996#`, it returns `#2/29/1996#` because 1996 is a leap year.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eadec-183">`DateAdd` 현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성은 <xref:System.Globalization.CultureInfo> 클래스에 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-183">`DateAdd` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="eadec-184">기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 값에 따라 결정 됩니다 **제어판** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-184">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="eadec-185">이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime> 구조를 해당 메서드에 추가 하는 옵션 제공 시간 간격을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-185">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in adding time intervals.</span></span> <span data-ttu-id="eadec-186">예를 들어 일 전 부터는 가장 가까운 밀리초로 반올림의 소수를 추가할 수 있습니다는 `Date` 다음과 같이 변수:</span><span class="sxs-lookup"><span data-stu-id="eadec-186">For example, you can add a fractional number of days, rounded to the nearest millisecond, to a `Date` variable as follows:</span></span>  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 <span data-ttu-id="eadec-187">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-187">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-188">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-188">Enumeration value</span></span>|<span data-ttu-id="eadec-189">문자열</span><span class="sxs-lookup"><span data-stu-id="eadec-189">String</span></span>|<span data-ttu-id="eadec-190">시간 간격의 단위를 추가 하려면</span><span class="sxs-lookup"><span data-stu-id="eadec-190">Unit of time interval to add</span></span>|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="eadec-191">d</span><span class="sxs-lookup"><span data-stu-id="eadec-191">d</span></span>|<span data-ttu-id="eadec-192">Day 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-192">Day; truncated to integral value</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="eadec-193">y</span><span class="sxs-lookup"><span data-stu-id="eadec-193">y</span></span>|<span data-ttu-id="eadec-194">Day 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-194">Day; truncated to integral value</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="eadec-195">h</span><span class="sxs-lookup"><span data-stu-id="eadec-195">h</span></span>|<span data-ttu-id="eadec-196">시간; 가장 가까운 밀리초로 반올림</span><span class="sxs-lookup"><span data-stu-id="eadec-196">Hour; rounded to nearest millisecond</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="eadec-197">n</span><span class="sxs-lookup"><span data-stu-id="eadec-197">n</span></span>|<span data-ttu-id="eadec-198">분; 가장 가까운 밀리초로 반올림</span><span class="sxs-lookup"><span data-stu-id="eadec-198">Minute; rounded to nearest millisecond</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="eadec-199">분</span><span class="sxs-lookup"><span data-stu-id="eadec-199">m</span></span>|<span data-ttu-id="eadec-200">월; 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-200">Month; truncated to integral value</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="eadec-201">q</span><span class="sxs-lookup"><span data-stu-id="eadec-201">q</span></span>|<span data-ttu-id="eadec-202">분기; 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-202">Quarter; truncated to integral value</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="eadec-203">s</span><span class="sxs-lookup"><span data-stu-id="eadec-203">s</span></span>|<span data-ttu-id="eadec-204">초입니다. 가장 가까운 밀리초로 반올림</span><span class="sxs-lookup"><span data-stu-id="eadec-204">Second; rounded to nearest millisecond</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="eadec-205">주</span><span class="sxs-lookup"><span data-stu-id="eadec-205">w</span></span>|<span data-ttu-id="eadec-206">Day 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-206">Day; truncated to integral value</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="eadec-207">ww</span><span class="sxs-lookup"><span data-stu-id="eadec-207">ww</span></span>|<span data-ttu-id="eadec-208">주; 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-208">Week; truncated to integral value</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="eadec-209">yyyy</span><span class="sxs-lookup"><span data-stu-id="eadec-209">yyyy</span></span>|<span data-ttu-id="eadec-210">연도 정수 값으로 잘린</span><span class="sxs-lookup"><span data-stu-id="eadec-210">Year; truncated to integral value</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eadec-211">이 예제에서는 날짜를 사용 하 고는 `DateAdd` 함수 지정된 된 수의 개월 나중에 해당 날짜를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-211">This example takes a date and, using the `DateAdd` function, displays a corresponding date a specified number of months in the future.</span></span>  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eadec-212">
            <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-212">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eadec-213">
            <paramref name="Interval" />가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-213">
              <paramref name="Interval" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eadec-214">계산된 날짜가 0001년 1월 1일 00:00:00시 이전 또는 9999년 12월 31일 23:59:59시 이후입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-214">Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiff">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eadec-215">두 <see langword="Long" /> 값 사이의 시간 간격 수를 지정한 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-215">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime Date1, valuetype System.DateTime Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As DateInterval, Date1 As DateTime, Date2 As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : Microsoft.VisualBasic.DateInterval * DateTime * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="Date1" Type="System.DateTime" />
        <Parameter Name="Date2" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="eadec-216">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-216">Required.</span>
          </span>
          <span data-ttu-id="eadec-217">
            <c>Date1</c>과 <c>Date2</c> 사이의 시간차 단위로 사용할 시간 간격을 나타내는 <see langword="DateInterval" /> 열거형 값 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-217">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to use as the unit of difference between <c>Date1</c> and <c>Date2</c>.</span>
          </span>
        </param>
        <param name="Date1">
          <span data-ttu-id="eadec-218">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-218">Required.</span>
          </span>
          <span data-ttu-id="eadec-219">
            <see langword="Date" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-219">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="eadec-220">계산에 사용할 첫째 날짜/시간 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-220">The first date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="Date2">
          <span data-ttu-id="eadec-221">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-221">Required.</span>
          </span>
          <span data-ttu-id="eadec-222">
            <see langword="Date" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-222">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="eadec-223">계산에 사용할 둘째 날짜/시간 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-223">The second date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="eadec-224">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-224">Optional.</span>
          </span>
          <span data-ttu-id="eadec-225">주의 첫째 요일을 지정하는 <see langword="FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-225">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="eadec-226">지정되지 않은 경우 <see langword="FirstDayOfWeek.Sunday" />가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-226">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="eadec-227">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-227">Optional.</span>
          </span>
          <span data-ttu-id="eadec-228">연도의 첫째 주를 지정하는 <see langword="FirstWeekOfYear" /> 열거형에서 선택한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-228">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="eadec-229">지정되지 않은 경우 <see langword="FirstWeekOfYear.Jan1" />가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-229">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-230">두 <see langword="Long" /> 값 사이의 시간 간격 수를 지정한 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-230">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-231">두 <see langword="Long" /> 값 사이의 시간 간격 수를 지정한 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-231">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-232">사용할 수는 `DateDiff` 두 개의 날짜/시간 값 사이 있는 개수 지정 된 시간 간격을 결정 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-232">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="eadec-233">사용할 수는 예를 들어 `DateDiff` 오늘과 연도의 마지막 사이의 주 수 또는 두 날짜 사이의 일 수를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-233">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="eadec-234">동작</span><span class="sxs-lookup"><span data-stu-id="eadec-234">Behavior</span></span>  
  
-   <span data-ttu-id="eadec-235">**매개 변수 처리입니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-235">**Treatment of Parameters.**</span></span> <span data-ttu-id="eadec-236">`DateDiff` 값을 빼고 `Date1` 의 값에서 `Date2` 시간차를 구합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-236">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="eadec-237">호출 프로그램에서 두 값이 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-237">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="eadec-238">**값을 반환 합니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-238">**Return Values.**</span></span> <span data-ttu-id="eadec-239">때문에 `Date1` 및 `Date2` 의 `Date` 데이터 형식 이므로 날짜 및 시간 값 100 나노초까지 정확한 타이머에서 저장 된 시스템입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-239">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="eadec-240">그러나 `DateDiff` 항상로 시간 간격의 수를 반환 합니다.는 `Long` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-240">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="eadec-241">경우 `Date1` 이후 날짜 및 시간 보다 나타냅니다 `Date2`, `DateDiff` 는 음수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-241">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="eadec-242">**일 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-242">**Day Intervals.**</span></span> <span data-ttu-id="eadec-243">경우 `Interval` 로 설정 되어 `DateInterval.DayOfYear`, 취급 됩니다 동일 `DateInterval.Day`때문에, `DayOfYear` 시간 간격에 대 한 의미 있는 단위 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-243">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="eadec-244">**주 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-244">**Week Intervals.**</span></span> <span data-ttu-id="eadec-245">경우 `Interval` 로 설정 된 `DateInterval.WeekOfYear`, 반환 값은 첫 번째 요일 포함 하는 주 사이의 주 수를 나타냅니다. `Date1` 및 포함 하는 주에 대 한 첫 번째 요일 `Date2`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-245">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="eadec-246">다음 예제에서는 다른 결과를 생성 되는 방식을 보여 줍니다. `DateInterval.Weekday`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-246">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="eadec-247">앞의 예제에서 `DateDiff` 0을 반환 `wD` 두 날짜 간의 차이 7 일 이내 이지만 1을 반환 하기 때문에 `wY` 해당 달력의 첫 번째 날에는 7 일 차이가 있기 때문에 주 동안 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-247">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="eadec-248">**더 큰 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-248">**Larger Intervals.**</span></span> <span data-ttu-id="eadec-249">경우 `Interval` 로 설정 된 `DateInterval.Year`, 반환 값의 연도 부분에서 순수 하 게 계산 됩니다 `Date1` 및 `Date2`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-249">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="eadec-250">마찬가지로, 반환 값에 대 한 `DateInterval.Month` 인수는 및에 대 한 연도 및 월 부분에서 순수 하 게 계산 `DateInterval.Quarter` 두 날짜를 포함 하는 분기에서입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-250">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="eadec-251">예를 들어, 다음 연도의 1 년 1 월 12 월 31 일을 비교할 때 `DateDiff` 에 대 한 1을 반환 `DateInterval.Year`, `DateInterval.Quarter`, 또는 `DateInterval.Month`최대 하루가 경과 된 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-251">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="eadec-252">여러 연대를 가진 일본 같은 문화권은 `DateDiff` 메서드 두 개 이상의 연대에 걸쳐 있는 경우 연도 차이 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-252">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="eadec-253">대신, 반환 값의 차이 계산할 수 있습니다는 <xref:System.DateTime.Year%2A> 속성을 다음 예에서 같이: `date2.Year - date1.Year`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-253">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="eadec-254">**기타 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-254">**Other Intervals.**</span></span> <span data-ttu-id="eadec-255">이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime> 구조를 해당 메서드에 추가 하는 옵션 제공 시간 간격을 찾는 데 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-255">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="eadec-256">예를 들어, 사용할 수는 `Subtract` 메서드 오버 로드 된 중 하나로: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다는 <xref:System.TimeSpan> 에서 `Date` 두 `Date` 값 및 <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다는 `Date` 값 반환 하는 <xref:System.TimeSpan>합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-256">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="eadec-257">다음 예제와 같이 걸리는 시간을 밀리초 단위로 찾으려고 프로세스의 시간 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-257">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="eadec-258">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-258">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-259">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-259">Enumeration value</span></span>|<span data-ttu-id="eadec-260">문자열 값</span><span class="sxs-lookup"><span data-stu-id="eadec-260">String value</span></span>|<span data-ttu-id="eadec-261">단위 시간 차이를</span><span class="sxs-lookup"><span data-stu-id="eadec-261">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="eadec-262">"d"</span><span class="sxs-lookup"><span data-stu-id="eadec-262">"d"</span></span>|<span data-ttu-id="eadec-263">Day</span><span class="sxs-lookup"><span data-stu-id="eadec-263">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="eadec-264">"y"</span><span class="sxs-lookup"><span data-stu-id="eadec-264">"y"</span></span>|<span data-ttu-id="eadec-265">Day</span><span class="sxs-lookup"><span data-stu-id="eadec-265">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="eadec-266">"h"</span><span class="sxs-lookup"><span data-stu-id="eadec-266">"h"</span></span>|<span data-ttu-id="eadec-267">Hour</span><span class="sxs-lookup"><span data-stu-id="eadec-267">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="eadec-268">"n"</span><span class="sxs-lookup"><span data-stu-id="eadec-268">"n"</span></span>|<span data-ttu-id="eadec-269">Minute</span><span class="sxs-lookup"><span data-stu-id="eadec-269">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="eadec-270">"m"</span><span class="sxs-lookup"><span data-stu-id="eadec-270">"m"</span></span>|<span data-ttu-id="eadec-271">월</span><span class="sxs-lookup"><span data-stu-id="eadec-271">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="eadec-272">"q"</span><span class="sxs-lookup"><span data-stu-id="eadec-272">"q"</span></span>|<span data-ttu-id="eadec-273">분기</span><span class="sxs-lookup"><span data-stu-id="eadec-273">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="eadec-274">"s"</span><span class="sxs-lookup"><span data-stu-id="eadec-274">"s"</span></span>|<span data-ttu-id="eadec-275">Second</span><span class="sxs-lookup"><span data-stu-id="eadec-275">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="eadec-276">"w"</span><span class="sxs-lookup"><span data-stu-id="eadec-276">"w"</span></span>|<span data-ttu-id="eadec-277">주</span><span class="sxs-lookup"><span data-stu-id="eadec-277">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="eadec-278">"ww"</span><span class="sxs-lookup"><span data-stu-id="eadec-278">"ww"</span></span>|<span data-ttu-id="eadec-279">주</span><span class="sxs-lookup"><span data-stu-id="eadec-279">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="eadec-280">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="eadec-280">"yyyy"</span></span>|<span data-ttu-id="eadec-281">Year</span><span class="sxs-lookup"><span data-stu-id="eadec-281">Year</span></span>|  
  
 <span data-ttu-id="eadec-282">`DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-282">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-283">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-283">Enumeration value</span></span>|<span data-ttu-id="eadec-284">값</span><span class="sxs-lookup"><span data-stu-id="eadec-284">Value</span></span>|<span data-ttu-id="eadec-285">설명</span><span class="sxs-lookup"><span data-stu-id="eadec-285">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="eadec-286">0</span><span class="sxs-lookup"><span data-stu-id="eadec-286">0</span></span>|<span data-ttu-id="eadec-287">시스템 설정에 지정 된 주의 첫 번째 날</span><span class="sxs-lookup"><span data-stu-id="eadec-287">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="eadec-288">1</span><span class="sxs-lookup"><span data-stu-id="eadec-288">1</span></span>|<span data-ttu-id="eadec-289">일요일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="eadec-289">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="eadec-290">2</span><span class="sxs-lookup"><span data-stu-id="eadec-290">2</span></span>|<span data-ttu-id="eadec-291">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="eadec-291">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="eadec-292">3</span><span class="sxs-lookup"><span data-stu-id="eadec-292">3</span></span>|<span data-ttu-id="eadec-293">화요일</span><span class="sxs-lookup"><span data-stu-id="eadec-293">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="eadec-294">4</span><span class="sxs-lookup"><span data-stu-id="eadec-294">4</span></span>|<span data-ttu-id="eadec-295">수요일</span><span class="sxs-lookup"><span data-stu-id="eadec-295">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="eadec-296">5</span><span class="sxs-lookup"><span data-stu-id="eadec-296">5</span></span>|<span data-ttu-id="eadec-297">목요일</span><span class="sxs-lookup"><span data-stu-id="eadec-297">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="eadec-298">6</span><span class="sxs-lookup"><span data-stu-id="eadec-298">6</span></span>|<span data-ttu-id="eadec-299">금요일</span><span class="sxs-lookup"><span data-stu-id="eadec-299">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="eadec-300">7</span><span class="sxs-lookup"><span data-stu-id="eadec-300">7</span></span>|<span data-ttu-id="eadec-301">토요일</span><span class="sxs-lookup"><span data-stu-id="eadec-301">Saturday</span></span>|  
  
 <span data-ttu-id="eadec-302">`WeekOfYear` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-302">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-303">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-303">Enumeration value</span></span>|<span data-ttu-id="eadec-304">값</span><span class="sxs-lookup"><span data-stu-id="eadec-304">Value</span></span>|<span data-ttu-id="eadec-305">설명</span><span class="sxs-lookup"><span data-stu-id="eadec-305">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="eadec-306">0</span><span class="sxs-lookup"><span data-stu-id="eadec-306">0</span></span>|<span data-ttu-id="eadec-307">시스템 설정에 지정 된 연도의 첫 번째 주</span><span class="sxs-lookup"><span data-stu-id="eadec-307">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="eadec-308">1</span><span class="sxs-lookup"><span data-stu-id="eadec-308">1</span></span>|<span data-ttu-id="eadec-309">주를 1 월 1 일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="eadec-309">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="eadec-310">2</span><span class="sxs-lookup"><span data-stu-id="eadec-310">2</span></span>|<span data-ttu-id="eadec-311">주 (ISO 8601 표준, 3.17 준수 함) 새 해 4 일 이상에 속하는 주</span><span class="sxs-lookup"><span data-stu-id="eadec-311">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="eadec-312">3</span><span class="sxs-lookup"><span data-stu-id="eadec-312">3</span></span>|<span data-ttu-id="eadec-313">올해에는 완전 한 첫 번째 주</span><span class="sxs-lookup"><span data-stu-id="eadec-313">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eadec-314">사용 하 여이 예제는 `DateDiff` 오늘과 특정된 날짜 사이의 일 수를 표시 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-314">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eadec-315">
            <paramref name="Date1" />, <paramref name="Date2" /> 또는 <paramref name="DayofWeek" />가 범위를 벗어났습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-315">
              <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eadec-316">
            <paramref name="Date1" /> 또는 <paramref name="Date2" />가 잘못된 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-316">
              <paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(string Interval, object Date1, object Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As String, Date1 As Object, Date2 As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : string * obj * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="Date1" Type="System.Object" />
        <Parameter Name="Date2" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="eadec-317">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-317">Required.</span>
          </span>
          <span data-ttu-id="eadec-318">
            <c>Date1</c>과 <c>Date2</c> 사이의 시간차 단위로 사용할 시간 간격을 나타내는 <see langword="DateInterval" /> 열거형 값 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-318">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the time interval you want to use as the unit of difference between <c>Date1</c> and <c>Date2</c>.</span>
          </span>
        </param>
        <param name="Date1">
          <span data-ttu-id="eadec-319">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-319">Required.</span>
          </span>
          <span data-ttu-id="eadec-320">
            <see langword="Date" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-320">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="eadec-321">계산에 사용할 첫째 날짜/시간 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-321">The first date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="Date2">
          <span data-ttu-id="eadec-322">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-322">Required.</span>
          </span>
          <span data-ttu-id="eadec-323">
            <see langword="Date" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-323">
              <see langword="Date" />.</span>
          </span>
          <span data-ttu-id="eadec-324">계산에 사용할 둘째 날짜/시간 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-324">The second date/time value you want to use in the calculation.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="eadec-325">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-325">Optional.</span>
          </span>
          <span data-ttu-id="eadec-326">주의 첫째 요일을 지정하는 <see langword="FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-326">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="eadec-327">지정되지 않은 경우 <see langword="FirstDayOfWeek.Sunday" />가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-327">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="eadec-328">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-328">Optional.</span>
          </span>
          <span data-ttu-id="eadec-329">연도의 첫째 주를 지정하는 <see langword="FirstWeekOfYear" /> 열거형에서 선택한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-329">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="eadec-330">지정되지 않은 경우 <see langword="FirstWeekOfYear.Jan1" />가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-330">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-331">두 <see langword="Long" /> 값 사이의 시간 간격 수를 지정한 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-331">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-332">두 <see langword="Long" /> 값 사이의 시간 간격 수를 지정한 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-332">Returns a <see langword="Long" /> value specifying the number of time intervals between two <see langword="Date" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-333">사용할 수는 `DateDiff` 두 개의 날짜/시간 값 사이 있는 개수 지정 된 시간 간격을 결정 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-333">You can use the `DateDiff` function to determine how many specified time intervals exist between two date/time values.</span></span> <span data-ttu-id="eadec-334">사용할 수는 예를 들어 `DateDiff` 오늘과 연도의 마지막 사이의 주 수 또는 두 날짜 사이의 일 수를 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-334">For example, you might use `DateDiff` to calculate the number of days between two dates, or the number of weeks between today and the end of the year.</span></span>  
  
## <a name="behavior"></a><span data-ttu-id="eadec-335">동작</span><span class="sxs-lookup"><span data-stu-id="eadec-335">Behavior</span></span>  
  
-   <span data-ttu-id="eadec-336">**매개 변수 처리입니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-336">**Treatment of Parameters.**</span></span> <span data-ttu-id="eadec-337">`DateDiff` 값을 빼고 `Date1` 의 값에서 `Date2` 시간차를 구합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-337">`DateDiff` subtracts the value of `Date1` from the value of `Date2` to produce the difference.</span></span> <span data-ttu-id="eadec-338">호출 프로그램에서 두 값이 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-338">Neither value is changed in the calling program.</span></span>  
  
-   <span data-ttu-id="eadec-339">**값을 반환 합니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-339">**Return Values.**</span></span> <span data-ttu-id="eadec-340">때문에 `Date1` 및 `Date2` 의 `Date` 데이터 형식 이므로 날짜 및 시간 값 100 나노초까지 정확한 타이머에서 저장 된 시스템입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-340">Because `Date1` and `Date2` are of the `Date` data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer.</span></span> <span data-ttu-id="eadec-341">그러나 `DateDiff` 항상로 시간 간격의 수를 반환 합니다.는 `Long` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-341">However, `DateDiff` always returns the number of time intervals as a `Long` value.</span></span>  
  
     <span data-ttu-id="eadec-342">경우 `Date1` 이후 날짜 및 시간 보다 나타냅니다 `Date2`, `DateDiff` 는 음수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-342">If `Date1` represents a later date and time than `Date2`, `DateDiff` returns a negative number.</span></span>  
  
-   <span data-ttu-id="eadec-343">**일 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-343">**Day Intervals.**</span></span> <span data-ttu-id="eadec-344">경우 `Interval` 로 설정 되어 `DateInterval.DayOfYear`, 취급 됩니다 동일 `DateInterval.Day`때문에, `DayOfYear` 시간 간격에 대 한 의미 있는 단위 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-344">If `Interval` is set to `DateInterval.DayOfYear`, it is treated the same as `DateInterval.Day`, because `DayOfYear` is not a meaningful unit for a time interval.</span></span>  
  
-   <span data-ttu-id="eadec-345">**주 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-345">**Week Intervals.**</span></span> <span data-ttu-id="eadec-346">경우 `Interval` 로 설정 된 `DateInterval.WeekOfYear`, 반환 값은 첫 번째 요일 포함 하는 주 사이의 주 수를 나타냅니다. `Date1` 및 포함 하는 주에 대 한 첫 번째 요일 `Date2`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-346">If `Interval` is set to `DateInterval.WeekOfYear`, the return value represents the number of weeks between the first day of the week containing `Date1` and the first day of the week containing `Date2`.</span></span> <span data-ttu-id="eadec-347">다음 예제에서는 다른 결과를 생성 되는 방식을 보여 줍니다. `DateInterval.Weekday`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-347">The following example shows how this produces different results from `DateInterval.Weekday`.</span></span>  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     <span data-ttu-id="eadec-348">앞의 예제에서 `DateDiff` 0을 반환 `wD` 두 날짜 간의 차이 7 일 이내 이지만 1을 반환 하기 때문에 `wY` 해당 달력의 첫 번째 날에는 7 일 차이가 있기 때문에 주 동안 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-348">In the preceding example, `DateDiff` returns 0 to `wD` because the difference between the two dates is less than seven days, but it returns 1 to `wY` because there is a seven-day difference between the first days of the respective calendar weeks.</span></span>  
  
-   <span data-ttu-id="eadec-349">**더 큰 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-349">**Larger Intervals.**</span></span> <span data-ttu-id="eadec-350">경우 `Interval` 로 설정 된 `DateInterval.Year`, 반환 값의 연도 부분에서 순수 하 게 계산 됩니다 `Date1` 및 `Date2`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-350">If `Interval` is set to `DateInterval.Year`, the return value is calculated purely from the year parts of `Date1` and `Date2`.</span></span> <span data-ttu-id="eadec-351">마찬가지로, 반환 값에 대 한 `DateInterval.Month` 인수는 및에 대 한 연도 및 월 부분에서 순수 하 게 계산 `DateInterval.Quarter` 두 날짜를 포함 하는 분기에서입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-351">Similarly, the return value for `DateInterval.Month` is calculated purely from the year and month parts of the arguments, and for `DateInterval.Quarter` from the quarters containing the two dates.</span></span>  
  
     <span data-ttu-id="eadec-352">예를 들어, 다음 연도의 1 년 1 월 12 월 31 일을 비교할 때 `DateDiff` 에 대 한 1을 반환 `DateInterval.Year`, `DateInterval.Quarter`, 또는 `DateInterval.Month`최대 하루가 경과 된 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-352">For example, when comparing December 31 to January 1 of the following year, `DateDiff` returns 1 for `DateInterval.Year`, `DateInterval.Quarter`, or `DateInterval.Month`, even though at most only one day has elapsed.</span></span>  
  
     <span data-ttu-id="eadec-353">여러 연대를 가진 일본 같은 문화권은 `DateDiff` 메서드 두 개 이상의 연대에 걸쳐 있는 경우 연도 차이 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-353">For cultures such as Japanese that have multiple eras, the `DateDiff` method does not return a difference in years if the difference spans two or more eras.</span></span> <span data-ttu-id="eadec-354">대신, 반환 값의 차이 계산할 수 있습니다는 <xref:System.DateTime.Year%2A> 속성을 다음 예에서 같이: `date2.Year - date1.Year`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-354">Instead, you can calculate the difference in values returned by the <xref:System.DateTime.Year%2A> property, as shown in the following example: `date2.Year - date1.Year`.</span></span>  
  
-   <span data-ttu-id="eadec-355">**기타 간격입니다.**</span><span class="sxs-lookup"><span data-stu-id="eadec-355">**Other Intervals.**</span></span> <span data-ttu-id="eadec-356">이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime> 구조를 해당 메서드에 추가 하는 옵션 제공 시간 간격을 찾는 데 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-356">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in finding time intervals.</span></span> <span data-ttu-id="eadec-357">예를 들어, 사용할 수는 `Subtract` 메서드 오버 로드 된 중 하나로: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다는 <xref:System.TimeSpan> 에서 `Date` 두 `Date` 값 및 <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다는 `Date` 값 반환 하는 <xref:System.TimeSpan>합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-357">For example, you can use the `Subtract` method in either of its overloaded forms: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a <xref:System.TimeSpan> from a `Date` variable to return another `Date` value, and <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> subtracts a `Date` value to return a <xref:System.TimeSpan>.</span></span> <span data-ttu-id="eadec-358">다음 예제와 같이 걸리는 시간을 밀리초 단위로 찾으려고 프로세스의 시간 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-358">You can time a process to find out how many milliseconds it takes, as the following example shows.</span></span>  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 <span data-ttu-id="eadec-359">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-359">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-360">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-360">Enumeration value</span></span>|<span data-ttu-id="eadec-361">문자열 값</span><span class="sxs-lookup"><span data-stu-id="eadec-361">String value</span></span>|<span data-ttu-id="eadec-362">단위 시간 차이를</span><span class="sxs-lookup"><span data-stu-id="eadec-362">Unit of time difference</span></span>|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|<span data-ttu-id="eadec-363">"d"</span><span class="sxs-lookup"><span data-stu-id="eadec-363">"d"</span></span>|<span data-ttu-id="eadec-364">Day</span><span class="sxs-lookup"><span data-stu-id="eadec-364">Day</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="eadec-365">"y"</span><span class="sxs-lookup"><span data-stu-id="eadec-365">"y"</span></span>|<span data-ttu-id="eadec-366">Day</span><span class="sxs-lookup"><span data-stu-id="eadec-366">Day</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="eadec-367">"h"</span><span class="sxs-lookup"><span data-stu-id="eadec-367">"h"</span></span>|<span data-ttu-id="eadec-368">Hour</span><span class="sxs-lookup"><span data-stu-id="eadec-368">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="eadec-369">"n"</span><span class="sxs-lookup"><span data-stu-id="eadec-369">"n"</span></span>|<span data-ttu-id="eadec-370">Minute</span><span class="sxs-lookup"><span data-stu-id="eadec-370">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="eadec-371">"m"</span><span class="sxs-lookup"><span data-stu-id="eadec-371">"m"</span></span>|<span data-ttu-id="eadec-372">월</span><span class="sxs-lookup"><span data-stu-id="eadec-372">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="eadec-373">"q"</span><span class="sxs-lookup"><span data-stu-id="eadec-373">"q"</span></span>|<span data-ttu-id="eadec-374">분기</span><span class="sxs-lookup"><span data-stu-id="eadec-374">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="eadec-375">"s"</span><span class="sxs-lookup"><span data-stu-id="eadec-375">"s"</span></span>|<span data-ttu-id="eadec-376">Second</span><span class="sxs-lookup"><span data-stu-id="eadec-376">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="eadec-377">"w"</span><span class="sxs-lookup"><span data-stu-id="eadec-377">"w"</span></span>|<span data-ttu-id="eadec-378">주</span><span class="sxs-lookup"><span data-stu-id="eadec-378">Week</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="eadec-379">"ww"</span><span class="sxs-lookup"><span data-stu-id="eadec-379">"ww"</span></span>|<span data-ttu-id="eadec-380">주</span><span class="sxs-lookup"><span data-stu-id="eadec-380">Calendar week</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="eadec-381">"yyyy"</span><span class="sxs-lookup"><span data-stu-id="eadec-381">"yyyy"</span></span>|<span data-ttu-id="eadec-382">Year</span><span class="sxs-lookup"><span data-stu-id="eadec-382">Year</span></span>|  
  
 <span data-ttu-id="eadec-383">`DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-383">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-384">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-384">Enumeration value</span></span>|<span data-ttu-id="eadec-385">값</span><span class="sxs-lookup"><span data-stu-id="eadec-385">Value</span></span>|<span data-ttu-id="eadec-386">설명</span><span class="sxs-lookup"><span data-stu-id="eadec-386">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="eadec-387">0</span><span class="sxs-lookup"><span data-stu-id="eadec-387">0</span></span>|<span data-ttu-id="eadec-388">시스템 설정에 지정 된 주의 첫 번째 날</span><span class="sxs-lookup"><span data-stu-id="eadec-388">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="eadec-389">1</span><span class="sxs-lookup"><span data-stu-id="eadec-389">1</span></span>|<span data-ttu-id="eadec-390">일요일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="eadec-390">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="eadec-391">2</span><span class="sxs-lookup"><span data-stu-id="eadec-391">2</span></span>|<span data-ttu-id="eadec-392">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="eadec-392">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="eadec-393">3</span><span class="sxs-lookup"><span data-stu-id="eadec-393">3</span></span>|<span data-ttu-id="eadec-394">화요일</span><span class="sxs-lookup"><span data-stu-id="eadec-394">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="eadec-395">4</span><span class="sxs-lookup"><span data-stu-id="eadec-395">4</span></span>|<span data-ttu-id="eadec-396">수요일</span><span class="sxs-lookup"><span data-stu-id="eadec-396">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="eadec-397">5</span><span class="sxs-lookup"><span data-stu-id="eadec-397">5</span></span>|<span data-ttu-id="eadec-398">목요일</span><span class="sxs-lookup"><span data-stu-id="eadec-398">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="eadec-399">6</span><span class="sxs-lookup"><span data-stu-id="eadec-399">6</span></span>|<span data-ttu-id="eadec-400">금요일</span><span class="sxs-lookup"><span data-stu-id="eadec-400">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="eadec-401">7</span><span class="sxs-lookup"><span data-stu-id="eadec-401">7</span></span>|<span data-ttu-id="eadec-402">토요일</span><span class="sxs-lookup"><span data-stu-id="eadec-402">Saturday</span></span>|  
  
 <span data-ttu-id="eadec-403">`WeekOfYear` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-403">The `WeekOfYear` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-404">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-404">Enumeration value</span></span>|<span data-ttu-id="eadec-405">값</span><span class="sxs-lookup"><span data-stu-id="eadec-405">Value</span></span>|<span data-ttu-id="eadec-406">설명</span><span class="sxs-lookup"><span data-stu-id="eadec-406">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="eadec-407">0</span><span class="sxs-lookup"><span data-stu-id="eadec-407">0</span></span>|<span data-ttu-id="eadec-408">시스템 설정에 지정 된 연도의 첫 번째 주</span><span class="sxs-lookup"><span data-stu-id="eadec-408">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="eadec-409">1</span><span class="sxs-lookup"><span data-stu-id="eadec-409">1</span></span>|<span data-ttu-id="eadec-410">주를 1 월 1 일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="eadec-410">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="eadec-411">2</span><span class="sxs-lookup"><span data-stu-id="eadec-411">2</span></span>|<span data-ttu-id="eadec-412">주 (ISO 8601 표준, 3.17 준수 함) 새 해 4 일 이상에 속하는 주</span><span class="sxs-lookup"><span data-stu-id="eadec-412">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="eadec-413">3</span><span class="sxs-lookup"><span data-stu-id="eadec-413">3</span></span>|<span data-ttu-id="eadec-414">올해에는 완전 한 첫 번째 주</span><span class="sxs-lookup"><span data-stu-id="eadec-414">First full week in the new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eadec-415">사용 하 여이 예제는 `DateDiff` 오늘과 특정된 날짜 사이의 일 수를 표시 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-415">This example uses the `DateDiff` function to display the number of days between a given date and today.</span></span>  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eadec-416">
            <paramref name="Date1" />, <paramref name="Date2" /> 또는 <paramref name="DayofWeek" />가 범위를 벗어났습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-416">
              <paramref name="Date1" />, <paramref name="Date2" />, or <paramref name="DayofWeek" /> is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eadec-417">
            <paramref name="Date1" /> 또는 <paramref name="Date2" />가 잘못된 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-417">
              <paramref name="Date1" /> or <paramref name="Date2" /> is of an invalid type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DatePart">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eadec-418">지정된 <see langword="Integer" /> 값의 지정된 구성 요소가 포함된 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-418">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue, valuetype Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As DateInterval, DateValue As DateTime, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional FirstWeekOfYearValue As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : Microsoft.VisualBasic.DateInterval * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, FirstDayOfWeekValue, FirstWeekOfYearValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" />
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="FirstWeekOfYearValue" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="eadec-419">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-419">Required.</span>
          </span>
          <span data-ttu-id="eadec-420">반환할 날짜/시간 값의 부분을 나타내는 <see langword="DateInterval" /> 열거형 값 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-420">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the part of the date/time value you want to return.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="eadec-421">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-421">Required.</span>
          </span>
          <span data-ttu-id="eadec-422">계산할 <see langword="Date" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-422">
              <see langword="Date" /> value that you want to evaluate.</span>
          </span>
        </param>
        <param name="FirstDayOfWeekValue">
          <span data-ttu-id="eadec-423">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-423">Optional.</span>
          </span>
          <span data-ttu-id="eadec-424">주의 첫째 요일을 지정하는 <see langword="FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-424">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="eadec-425">지정되지 않은 경우 <see langword="FirstDayOfWeek.Sunday" />가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-425">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="FirstWeekOfYearValue">
          <span data-ttu-id="eadec-426">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-426">Optional.</span>
          </span>
          <span data-ttu-id="eadec-427">연도의 첫째 주를 지정하는 <see langword="FirstWeekOfYear" /> 열거형에서 선택한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-427">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="eadec-428">지정되지 않은 경우 <see langword="FirstWeekOfYear.Jan1" />가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-428">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-429">지정된 <see langword="Integer" /> 값의 지정된 구성 요소가 포함된 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-429">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-430">지정된 <see langword="Integer" /> 값의 지정된 구성 요소가 포함된 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-430">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-431">사용할 수는 `DatePart` 함수는 날짜/시간 값을 평가 하 고 특정 구성 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-431">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="eadec-432">사용할 수는 예를 들어 `DatePart` 주 나 현재 시간을 계산 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-432">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="eadec-433">선택 하면 `DateInterval.Weekday` 에 대 한는 `Interval` 인수, 반환된 값은의 값과 일치는 `FirstDayOfWeek` 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-433">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="eadec-434">선택 하면 `DateInterval.WeekOfYear`, `DatePart` 사용 하 여는 <xref:System.Globalization.Calendar> 및 <xref:System.Globalization.CultureInfo> 의 클래스는 <xref:System.Globalization> 네임 스페이스를 현재 설정을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-434">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="eadec-435">`FirstDayOfWeekValue` 인수를 사용 하는 계산에 영향을 줍니다는 `DateInterval.Weekday` 및 `DateInterval.WeekOfYear` `Interval` 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-435">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="eadec-436">`FirstWeekOfYearValue` 인수를 지정 하는 계산에 영향을 줍니다 `DateInterval.WeekOfYear` 에 대 한 `Interval`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-436">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="eadec-437">이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime> 구조를 해당 메서드에 추가 하는 옵션 제공 날짜/시간 부분을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-437">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="eadec-438">예를 들어의 전체 날짜 값을 가져올 수 있습니다는 `Date` 시간 값으로 변수를 다음과 같이 자정으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-438">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="eadec-439">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-439">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-440">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-440">Enumeration value</span></span>|<span data-ttu-id="eadec-441">문자열</span><span class="sxs-lookup"><span data-stu-id="eadec-441">String</span></span>|<span data-ttu-id="eadec-442">반환 날짜/시간 값의 부분</span><span class="sxs-lookup"><span data-stu-id="eadec-442">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="eadec-443">d</span><span class="sxs-lookup"><span data-stu-id="eadec-443">d</span></span>|<span data-ttu-id="eadec-444">월간 일자(1~31)</span><span class="sxs-lookup"><span data-stu-id="eadec-444">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="eadec-445">y</span><span class="sxs-lookup"><span data-stu-id="eadec-445">y</span></span>|<span data-ttu-id="eadec-446">연간 일자(1~366)</span><span class="sxs-lookup"><span data-stu-id="eadec-446">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="eadec-447">h</span><span class="sxs-lookup"><span data-stu-id="eadec-447">h</span></span>|<span data-ttu-id="eadec-448">Hour</span><span class="sxs-lookup"><span data-stu-id="eadec-448">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="eadec-449">n</span><span class="sxs-lookup"><span data-stu-id="eadec-449">n</span></span>|<span data-ttu-id="eadec-450">Minute</span><span class="sxs-lookup"><span data-stu-id="eadec-450">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="eadec-451">분</span><span class="sxs-lookup"><span data-stu-id="eadec-451">m</span></span>|<span data-ttu-id="eadec-452">월</span><span class="sxs-lookup"><span data-stu-id="eadec-452">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="eadec-453">q</span><span class="sxs-lookup"><span data-stu-id="eadec-453">q</span></span>|<span data-ttu-id="eadec-454">분기</span><span class="sxs-lookup"><span data-stu-id="eadec-454">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="eadec-455">s</span><span class="sxs-lookup"><span data-stu-id="eadec-455">s</span></span>|<span data-ttu-id="eadec-456">Second</span><span class="sxs-lookup"><span data-stu-id="eadec-456">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="eadec-457">주</span><span class="sxs-lookup"><span data-stu-id="eadec-457">w</span></span>|<span data-ttu-id="eadec-458">요일(1~7)</span><span class="sxs-lookup"><span data-stu-id="eadec-458">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="eadec-459">ww</span><span class="sxs-lookup"><span data-stu-id="eadec-459">ww</span></span>|<span data-ttu-id="eadec-460">연간 주(1~53)</span><span class="sxs-lookup"><span data-stu-id="eadec-460">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="eadec-461">yyyy</span><span class="sxs-lookup"><span data-stu-id="eadec-461">yyyy</span></span>|<span data-ttu-id="eadec-462">Year</span><span class="sxs-lookup"><span data-stu-id="eadec-462">Year</span></span>|  
  
 <span data-ttu-id="eadec-463">`FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-463">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-464">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-464">Enumeration value</span></span>|<span data-ttu-id="eadec-465">값</span><span class="sxs-lookup"><span data-stu-id="eadec-465">Value</span></span>|<span data-ttu-id="eadec-466">설명</span><span class="sxs-lookup"><span data-stu-id="eadec-466">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="eadec-467">0</span><span class="sxs-lookup"><span data-stu-id="eadec-467">0</span></span>|<span data-ttu-id="eadec-468">시스템 설정에 지정 된 주의 첫 번째 날</span><span class="sxs-lookup"><span data-stu-id="eadec-468">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="eadec-469">1</span><span class="sxs-lookup"><span data-stu-id="eadec-469">1</span></span>|<span data-ttu-id="eadec-470">일요일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="eadec-470">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="eadec-471">2</span><span class="sxs-lookup"><span data-stu-id="eadec-471">2</span></span>|<span data-ttu-id="eadec-472">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="eadec-472">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="eadec-473">3</span><span class="sxs-lookup"><span data-stu-id="eadec-473">3</span></span>|<span data-ttu-id="eadec-474">화요일</span><span class="sxs-lookup"><span data-stu-id="eadec-474">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="eadec-475">4</span><span class="sxs-lookup"><span data-stu-id="eadec-475">4</span></span>|<span data-ttu-id="eadec-476">수요일</span><span class="sxs-lookup"><span data-stu-id="eadec-476">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="eadec-477">5</span><span class="sxs-lookup"><span data-stu-id="eadec-477">5</span></span>|<span data-ttu-id="eadec-478">목요일</span><span class="sxs-lookup"><span data-stu-id="eadec-478">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="eadec-479">6</span><span class="sxs-lookup"><span data-stu-id="eadec-479">6</span></span>|<span data-ttu-id="eadec-480">금요일</span><span class="sxs-lookup"><span data-stu-id="eadec-480">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="eadec-481">7</span><span class="sxs-lookup"><span data-stu-id="eadec-481">7</span></span>|<span data-ttu-id="eadec-482">토요일</span><span class="sxs-lookup"><span data-stu-id="eadec-482">Saturday</span></span>|  
  
 <span data-ttu-id="eadec-483">`FirstWeekOfYearValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-483">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-484">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-484">Enumeration value</span></span>|<span data-ttu-id="eadec-485">값</span><span class="sxs-lookup"><span data-stu-id="eadec-485">Value</span></span>|<span data-ttu-id="eadec-486">설명</span><span class="sxs-lookup"><span data-stu-id="eadec-486">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="eadec-487">0</span><span class="sxs-lookup"><span data-stu-id="eadec-487">0</span></span>|<span data-ttu-id="eadec-488">시스템 설정에 지정 된 연도의 첫 번째 주</span><span class="sxs-lookup"><span data-stu-id="eadec-488">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="eadec-489">1</span><span class="sxs-lookup"><span data-stu-id="eadec-489">1</span></span>|<span data-ttu-id="eadec-490">주를 1 월 1 일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="eadec-490">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="eadec-491">2</span><span class="sxs-lookup"><span data-stu-id="eadec-491">2</span></span>|<span data-ttu-id="eadec-492">주 (ISO 8601 표준, 3.17 준수 함) 새 해 4 일 이상에 속하는 주</span><span class="sxs-lookup"><span data-stu-id="eadec-492">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="eadec-493">3</span><span class="sxs-lookup"><span data-stu-id="eadec-493">3</span></span>|<span data-ttu-id="eadec-494">새 해에서 완전 한 첫 번째 주</span><span class="sxs-lookup"><span data-stu-id="eadec-494">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eadec-495">이 예제에서는 날짜를 사용 하 고는 `DatePart` 함수, 항목이 발생 하는 해당 연도의 분기를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-495">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eadec-496">
            <paramref name="Interval" />가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-496">
              <paramref name="Interval" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eadec-497">
            <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-497">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(string Interval, object DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As String, DateValue As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : string * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" />
        <Parameter Name="DateValue" Type="System.Object" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Interval">
          <span data-ttu-id="eadec-498">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-498">Required.</span>
          </span>
          <span data-ttu-id="eadec-499">반환할 날짜/시간 값의 부분을 나타내는 <see langword="DateInterval" /> 열거형 값 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-499">
              <see langword="DateInterval" /> enumeration value or <see langword="String" /> expression representing the part of the date/time value you want to return.</span>
          </span>
        </param>
        <param name="DateValue">
          <span data-ttu-id="eadec-500">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-500">Required.</span>
          </span>
          <span data-ttu-id="eadec-501">계산할 <see langword="Date" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-501">
              <see langword="Date" /> value that you want to evaluate.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="eadec-502">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-502">Optional.</span>
          </span>
          <span data-ttu-id="eadec-503">주의 첫째 요일을 지정하는 <see langword="FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-503">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="eadec-504">지정되지 않은 경우 <see langword="FirstDayOfWeek.Sunday" />가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-504">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="eadec-505">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-505">Optional.</span>
          </span>
          <span data-ttu-id="eadec-506">연도의 첫째 주를 지정하는 <see langword="FirstWeekOfYear" /> 열거형에서 선택한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-506">A value chosen from the <see langword="FirstWeekOfYear" /> enumeration that specifies the first week of the year.</span>
          </span>
          <span data-ttu-id="eadec-507">지정되지 않은 경우 <see langword="FirstWeekOfYear.Jan1" />가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-507">If not specified, <see langword="FirstWeekOfYear.Jan1" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-508">지정된 <see langword="Integer" /> 값의 지정된 구성 요소가 포함된 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-508">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-509">지정된 <see langword="Integer" /> 값의 지정된 구성 요소가 포함된 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-509">Returns an <see langword="Integer" /> value containing the specified component of a given <see langword="Date" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-510">사용할 수는 `DatePart` 함수는 날짜/시간 값을 평가 하 고 특정 구성 요소를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-510">You can use the `DatePart` function to evaluate a date/time value and return a specific component.</span></span> <span data-ttu-id="eadec-511">사용할 수는 예를 들어 `DatePart` 주 나 현재 시간을 계산 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-511">For example, you might use `DatePart` to calculate the day of the week or the current hour.</span></span>  
  
 <span data-ttu-id="eadec-512">선택 하면 `DateInterval.Weekday` 에 대 한는 `Interval` 인수, 반환된 값은의 값과 일치는 `FirstDayOfWeek` 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-512">If you choose `DateInterval.Weekday` for the `Interval` argument, the returned value is consistent with the values of the `FirstDayOfWeek` enumeration.</span></span> <span data-ttu-id="eadec-513">선택 하면 `DateInterval.WeekOfYear`, `DatePart` 사용 하 여는 <xref:System.Globalization.Calendar> 및 <xref:System.Globalization.CultureInfo> 의 클래스는 <xref:System.Globalization> 네임 스페이스를 현재 설정을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-513">If you choose `DateInterval.WeekOfYear`, `DatePart` uses the <xref:System.Globalization.Calendar> and <xref:System.Globalization.CultureInfo> classes of the <xref:System.Globalization> namespace to determine your current settings.</span></span>  
  
 <span data-ttu-id="eadec-514">`FirstDayOfWeekValue` 인수를 사용 하는 계산에 영향을 줍니다는 `DateInterval.Weekday` 및 `DateInterval.WeekOfYear` `Interval` 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-514">The `FirstDayOfWeekValue` argument affects calculations that use the `DateInterval.Weekday` and `DateInterval.WeekOfYear` `Interval` settings.</span></span> <span data-ttu-id="eadec-515">`FirstWeekOfYearValue` 인수를 지정 하는 계산에 영향을 줍니다 `DateInterval.WeekOfYear` 에 대 한 `Interval`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-515">The `FirstWeekOfYearValue` argument affects calculations that specify `DateInterval.WeekOfYear` for `Interval`.</span></span>  
  
 <span data-ttu-id="eadec-516">이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime> 구조를 해당 메서드에 추가 하는 옵션 제공 날짜/시간 부분을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-516">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in retrieving date/time parts.</span></span> <span data-ttu-id="eadec-517">예를 들어의 전체 날짜 값을 가져올 수 있습니다는 `Date` 시간 값으로 변수를 다음과 같이 자정으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-517">For example, you can obtain the entire date value of a `Date` variable, with the time value set to midnight, as follows:</span></span>  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 <span data-ttu-id="eadec-518">`Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-518">The `Interval` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-519">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-519">Enumeration value</span></span>|<span data-ttu-id="eadec-520">문자열</span><span class="sxs-lookup"><span data-stu-id="eadec-520">String</span></span>|<span data-ttu-id="eadec-521">반환 날짜/시간 값의 부분</span><span class="sxs-lookup"><span data-stu-id="eadec-521">Part of date/time value to return</span></span>|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|<span data-ttu-id="eadec-522">d</span><span class="sxs-lookup"><span data-stu-id="eadec-522">d</span></span>|<span data-ttu-id="eadec-523">월간 일자(1~31)</span><span class="sxs-lookup"><span data-stu-id="eadec-523">Day of month (1 through 31)</span></span>|  
|`DateInterval.DayOfYear`|<span data-ttu-id="eadec-524">y</span><span class="sxs-lookup"><span data-stu-id="eadec-524">y</span></span>|<span data-ttu-id="eadec-525">연간 일자(1~366)</span><span class="sxs-lookup"><span data-stu-id="eadec-525">Day of year (1 through 366)</span></span>|  
|`DateInterval.Hour`|<span data-ttu-id="eadec-526">h</span><span class="sxs-lookup"><span data-stu-id="eadec-526">h</span></span>|<span data-ttu-id="eadec-527">Hour</span><span class="sxs-lookup"><span data-stu-id="eadec-527">Hour</span></span>|  
|`DateInterval.Minute`|<span data-ttu-id="eadec-528">n</span><span class="sxs-lookup"><span data-stu-id="eadec-528">n</span></span>|<span data-ttu-id="eadec-529">Minute</span><span class="sxs-lookup"><span data-stu-id="eadec-529">Minute</span></span>|  
|`DateInterval.Month`|<span data-ttu-id="eadec-530">분</span><span class="sxs-lookup"><span data-stu-id="eadec-530">m</span></span>|<span data-ttu-id="eadec-531">월</span><span class="sxs-lookup"><span data-stu-id="eadec-531">Month</span></span>|  
|`DateInterval.Quarter`|<span data-ttu-id="eadec-532">q</span><span class="sxs-lookup"><span data-stu-id="eadec-532">q</span></span>|<span data-ttu-id="eadec-533">분기</span><span class="sxs-lookup"><span data-stu-id="eadec-533">Quarter</span></span>|  
|`DateInterval.Second`|<span data-ttu-id="eadec-534">s</span><span class="sxs-lookup"><span data-stu-id="eadec-534">s</span></span>|<span data-ttu-id="eadec-535">Second</span><span class="sxs-lookup"><span data-stu-id="eadec-535">Second</span></span>|  
|`DateInterval.Weekday`|<span data-ttu-id="eadec-536">주</span><span class="sxs-lookup"><span data-stu-id="eadec-536">w</span></span>|<span data-ttu-id="eadec-537">요일(1~7)</span><span class="sxs-lookup"><span data-stu-id="eadec-537">Day of week (1 through 7)</span></span>|  
|`DateInterval.WeekOfYear`|<span data-ttu-id="eadec-538">ww</span><span class="sxs-lookup"><span data-stu-id="eadec-538">ww</span></span>|<span data-ttu-id="eadec-539">연간 주(1~53)</span><span class="sxs-lookup"><span data-stu-id="eadec-539">Week of year (1 through 53)</span></span>|  
|`DateInterval.Year`|<span data-ttu-id="eadec-540">yyyy</span><span class="sxs-lookup"><span data-stu-id="eadec-540">yyyy</span></span>|<span data-ttu-id="eadec-541">Year</span><span class="sxs-lookup"><span data-stu-id="eadec-541">Year</span></span>|  
  
 <span data-ttu-id="eadec-542">`FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-542">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-543">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-543">Enumeration value</span></span>|<span data-ttu-id="eadec-544">값</span><span class="sxs-lookup"><span data-stu-id="eadec-544">Value</span></span>|<span data-ttu-id="eadec-545">설명</span><span class="sxs-lookup"><span data-stu-id="eadec-545">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="eadec-546">0</span><span class="sxs-lookup"><span data-stu-id="eadec-546">0</span></span>|<span data-ttu-id="eadec-547">시스템 설정에 지정 된 주의 첫 번째 날</span><span class="sxs-lookup"><span data-stu-id="eadec-547">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="eadec-548">1</span><span class="sxs-lookup"><span data-stu-id="eadec-548">1</span></span>|<span data-ttu-id="eadec-549">일요일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="eadec-549">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="eadec-550">2</span><span class="sxs-lookup"><span data-stu-id="eadec-550">2</span></span>|<span data-ttu-id="eadec-551">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="eadec-551">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="eadec-552">3</span><span class="sxs-lookup"><span data-stu-id="eadec-552">3</span></span>|<span data-ttu-id="eadec-553">화요일</span><span class="sxs-lookup"><span data-stu-id="eadec-553">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="eadec-554">4</span><span class="sxs-lookup"><span data-stu-id="eadec-554">4</span></span>|<span data-ttu-id="eadec-555">수요일</span><span class="sxs-lookup"><span data-stu-id="eadec-555">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="eadec-556">5</span><span class="sxs-lookup"><span data-stu-id="eadec-556">5</span></span>|<span data-ttu-id="eadec-557">목요일</span><span class="sxs-lookup"><span data-stu-id="eadec-557">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="eadec-558">6</span><span class="sxs-lookup"><span data-stu-id="eadec-558">6</span></span>|<span data-ttu-id="eadec-559">금요일</span><span class="sxs-lookup"><span data-stu-id="eadec-559">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="eadec-560">7</span><span class="sxs-lookup"><span data-stu-id="eadec-560">7</span></span>|<span data-ttu-id="eadec-561">토요일</span><span class="sxs-lookup"><span data-stu-id="eadec-561">Saturday</span></span>|  
  
 <span data-ttu-id="eadec-562">`FirstWeekOfYearValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-562">The `FirstWeekOfYearValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-563">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-563">Enumeration value</span></span>|<span data-ttu-id="eadec-564">값</span><span class="sxs-lookup"><span data-stu-id="eadec-564">Value</span></span>|<span data-ttu-id="eadec-565">설명</span><span class="sxs-lookup"><span data-stu-id="eadec-565">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|<span data-ttu-id="eadec-566">0</span><span class="sxs-lookup"><span data-stu-id="eadec-566">0</span></span>|<span data-ttu-id="eadec-567">시스템 설정에 지정 된 연도의 첫 번째 주</span><span class="sxs-lookup"><span data-stu-id="eadec-567">First week of year specified in system settings</span></span>|  
|`FirstWeekOfYear.Jan1`|<span data-ttu-id="eadec-568">1</span><span class="sxs-lookup"><span data-stu-id="eadec-568">1</span></span>|<span data-ttu-id="eadec-569">주를 1 월 1 일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="eadec-569">Week in which January 1 occurs (default)</span></span>|  
|`FirstWeekOfYear.FirstFourDays`|<span data-ttu-id="eadec-570">2</span><span class="sxs-lookup"><span data-stu-id="eadec-570">2</span></span>|<span data-ttu-id="eadec-571">주 (ISO 8601 표준, 3.17 준수 함) 새 해 4 일 이상에 속하는 주</span><span class="sxs-lookup"><span data-stu-id="eadec-571">Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstWeekOfYear.FirstFullWeek`|<span data-ttu-id="eadec-572">3</span><span class="sxs-lookup"><span data-stu-id="eadec-572">3</span></span>|<span data-ttu-id="eadec-573">새 해에서 완전 한 첫 번째 주</span><span class="sxs-lookup"><span data-stu-id="eadec-573">First full week in new year</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eadec-574">이 예제에서는 날짜를 사용 하 고는 `DatePart` 함수, 항목이 발생 하는 해당 연도의 분기를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-574">This example takes a date and, using the `DatePart` function, displays the quarter of the year in which it occurs.</span></span>  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eadec-575">
            <paramref name="Interval" />이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-575">
              <paramref name="Interval" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eadec-576">
            <paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-576">
              <paramref name="DateValue" /> is not coercible to <see langword="Date" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
      </Docs>
    </Member>
    <Member MemberName="DateSerial">
      <MemberSignature Language="C#" Value="public static DateTime DateSerial (int Year, int Month, int Day);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateSerial(int32 Year, int32 Month, int32 Day) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateSerial (Year As Integer, Month As Integer, Day As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateSerial(int Year, int Month, int Day);" />
      <MemberSignature Language="F#" Value="static member DateSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateSerial (Year, Month, Day)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Year" Type="System.Int32" />
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Year">
          <span data-ttu-id="eadec-577">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-577">Required.</span>
          </span>
          <span data-ttu-id="eadec-578">1에서 9999까지의 <see langword="Integer" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-578">
              <see langword="Integer" /> expression from 1 through 9999.</span>
          </span>
          <span data-ttu-id="eadec-579">이 범위 아래의 값도 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-579">However, values below this range are also accepted.</span>
          </span>
          <span data-ttu-id="eadec-580">
            <c>Year</c>가 0부터 99인 경우에는 아래의 "설명" 단원에 나온 것처럼 1930과 2029 사이의 값으로 해석되며,</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-580">If <c>Year</c> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the "Remarks" section below.</span>
          </span>
          <span data-ttu-id="eadec-581">
            <c>Year</c>가 1보다 작은 경우에는 현재 연도에서 해당 값을 뺍니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-581">If <c>Year</c> is less than 1, it is subtracted from the current year.</span>
          </span>
        </param>
        <param name="Month">
          <span data-ttu-id="eadec-582">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-582">Required.</span>
          </span>
          <span data-ttu-id="eadec-583">1에서 12까지의 <see langword="Integer" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-583">
              <see langword="Integer" /> expression from 1 through 12.</span>
          </span>
          <span data-ttu-id="eadec-584">그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-584">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="eadec-585">
            <c>Month</c>의 값은 1만큼 오프셋되어 계산된 연도의 1월에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-585">The value of <c>Month</c> is offset by 1 and applied to January of the calculated year.</span>
          </span>
          <span data-ttu-id="eadec-586">즉, (<c>Month</c> - 1)이 1월에 더해집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-586">In other words, (<c>Month</c> - 1) is added to January.</span>
          </span>
          <span data-ttu-id="eadec-587">필요한 경우에는 연도가 다시 계산됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-587">The year is recalculated if necessary.</span>
          </span>
          <span data-ttu-id="eadec-588">다음과 같은 결과가 이 효과를 보여줍니다. <c>Month</c>가 1이면 계산된 연도의 1월입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-588">The following results illustrate this effect:  If <c>Month</c> is 1, the result is January of the calculated year.</span>
          </span>
          <span data-ttu-id="eadec-589">
            <c>Month</c>가 0이면 이전 연도의 12월입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-589">If <c>Month</c> is 0, the result is December of the previous year.</span>
          </span>
          <span data-ttu-id="eadec-590">
            <c>Month</c>가 -1이면 이전 연도의 11월입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-590">If <c>Month</c> is -1, the result is November of the previous year.</span>
          </span>
          <span data-ttu-id="eadec-591">
            <c>Month</c>가 13이면 다음 연도의 1월입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-591">If <c>Month</c> is 13, the result is January of the following year.</span>
          </span>
        </param>
        <param name="Day">
          <span data-ttu-id="eadec-592">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-592">Required.</span>
          </span>
          <span data-ttu-id="eadec-593">1에서 31까지의 <see langword="Integer" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-593">
              <see langword="Integer" /> expression from 1 through 31.</span>
          </span>
          <span data-ttu-id="eadec-594">그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-594">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="eadec-595">
            <c>Day</c>의 값은 1만큼 오프셋되어 계산된 월의 1일에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-595">The value of <c>Day</c> is offset by 1 and applied to the first day of the calculated month.</span>
          </span>
          <span data-ttu-id="eadec-596">즉, (<c>Day</c>- 1)이 해당 월의 1일에 더해집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-596">In other words, (<c>Day</c> - 1) is added to the first of the month.</span>
          </span>
          <span data-ttu-id="eadec-597">필요한 경우에는 월과 연도가 다시 계산됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-597">The month and year are recalculated if necessary.</span>
          </span>
          <span data-ttu-id="eadec-598">다음과 같은 결과가 이 효과를 보여줍니다. <c>Day</c>가 1이면 계산된 월의 1일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-598">The following results illustrate this effect:  If <c>Day</c> is 1, the result is the first day of the calculated month.</span>
          </span>
          <span data-ttu-id="eadec-599">
            <c>Day</c>가 0이면 이전 월의 마지막 날짜입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-599">If <c>Day</c> is 0, the result is the last day of the previous month.</span>
          </span>
          <span data-ttu-id="eadec-600">
            <c>Day</c>가 -1이면 이전 월의 끝에서 두 번째 날짜입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-600">If <c>Day</c> is -1, the result is the penultimate day of the previous month.</span>
          </span>
          <span data-ttu-id="eadec-601">
            <c>Day</c>가 현재 월의 마지막 날짜 값을 넘으면 다음 월의 해당되는 날짜입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-601">If <c>Day</c> is past the end of the current month, the result is the appropriate day of the following month.</span>
          </span>
          <span data-ttu-id="eadec-602">예를 들어, <c>Month</c>가 4이고 <c>Day</c>가 31이면 5월 1일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-602">For example, if <c>Month</c> is 4 and <c>Day</c> is 31, the result is May 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-603">시간 정보가 자정(00:00:00)으로 설정된 상태에서 지정된 년, 월, 일을 나타내는 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-603">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-604">시간 정보가 자정(00:00:00)으로 설정된 상태에서 지정된 년, 월, 일을 나타내는 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-604">Returns a <see langword="Date" /> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-605">Windows 98 또는 Windows 2000에 대 한 두 자리 연도 `Year` 인수를 사용자가 정의한 컴퓨터 설정에 따라 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-605">Under Windows 98 or Windows 2000, two-digit years for the `Year` argument are interpreted based on user-defined computer settings.</span></span> <span data-ttu-id="eadec-606">기본 설정은 0부터 29 까지의 값 2000 년으로 해석 되 고 30부터 99 까지의 값 1930 – 1999 년으로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-606">The default settings are that values from 0 through 29 are interpreted as the years 2000–2029, and values from 30 through 99 are interpreted as the years 1930–1999.</span></span> <span data-ttu-id="eadec-607">다른 모든 `Year` 인수, 사용 하 여 4 자리 연도, 예를 들어 1924 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-607">For all other `Year` arguments, use a four-digit year; for example, 1924.</span></span>  
  
 <span data-ttu-id="eadec-608">이전 버전의 Windows에는 두 자리 연도 이전에 설명 된 기본값에 따라 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-608">Earlier versions of Windows interpret two-digit years based on the defaults described previously.</span></span> <span data-ttu-id="eadec-609">함수는 올바른 값을 반환 하도록 하려면, 4 자리를 사용 하 여 `Year`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-609">To be sure the function returns the proper value, use a four-digit `Year`.</span></span>  
  
 <span data-ttu-id="eadec-610">다음 예제에서는 음수, 0 및 양의 인수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-610">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="eadec-611">여기에서 `DateSerial` 함수에서 반환 된 `Date` 현재 연도의; 10 년 전 년에서 3 월 1 일 이전 날짜를 나타내는 10 년이 넘은 년 2 월의 마지막 날 즉, 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-611">Here, the `DateSerial` function returns a `Date` representing the day before the first day of March in the year 10 years before the current year; in other words, the last day of February ten years ago.</span></span>  
  
```vb  
Dim EndFeb As Date = DateSerial(-10, 3, 0)  
```  
  
 <span data-ttu-id="eadec-612">어느 경우 `Month` 또는 `Day` 정상 범위를 초과 하면, 다음으로 큰 단위가에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-612">If either `Month` or `Day` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="eadec-613">예를 들어 32 일을 지정 하는 경우 것으로 계산 됩니다 한 달의 값에 따라 4 일에서 `Month`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-613">For example, if you specify 32 days, it is evaluated as one month and from one to four days, depending on the value of `Month`.</span></span> <span data-ttu-id="eadec-614">경우 `Year` 9999 년 보다 큰 인수가-2147483648 ~ 2147483647, 범위 밖에 있으면 또는 <xref:System.ArgumentException> 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-614">If `Year` is greater than 9999, or if any argument is outside the range -2,147,483,648 through 2,147,483,647, an <xref:System.ArgumentException> error occurs.</span></span> <span data-ttu-id="eadec-615">3 개 인수에 의해 지정 된 날짜 이전 이면 년 12 월 31 일 23시 59분: 59 보다 이후 이거나 1, 1 월 1 일 00: 00시 9999는 <xref:System.ArgumentOutOfRangeException> 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-615">If the date specified by the three arguments is earlier than 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="eadec-616">`Date` 시간 구성 요소를 포함 하는 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-616">The `Date` data type includes time components.</span></span> <span data-ttu-id="eadec-617">`DateSerial` 0으로 이러한 모든 설정 하므로 반환 되는 값은 계산 된 날짜의 시작을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-617">`DateSerial` sets all of these to 0, so the returned value represents the beginning of the calculated day.</span></span>  
  
 <span data-ttu-id="eadec-618">이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime> 구조를 해당 메서드에 추가 하는 옵션 제공 어셈블하는 방법에 `Date` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-618">Since every `Date` value is supported by a <xref:System.DateTime> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="eadec-619">오버 로드 된 중 하나를 사용할 수는 예를 들어 <xref:System.DateTime.%23ctor%2A> 생성자를 채우는 한 `Date` 원하는 조합의 구성 요소를 사용 하 여 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-619">For example, you can use one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="eadec-620">다음 예제에서는 `NewDateTime` 6, 1978 년 5 월 초 아침에 8시 30분 전의 0.1에:</span><span class="sxs-lookup"><span data-stu-id="eadec-620">The following example sets `NewDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="eadec-621">사용 하 여이 예제는 `DateSerial` 함수는 지정 된 연도, 월 및 일에 대 한 날짜를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-621">This example uses the `DateSerial` function to return the date for the specified year, month, and day.</span></span>  
  
 [!code-vb[VbVbalrFunctions#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
      </Docs>
    </Member>
    <Member MemberName="DateString">
      <MemberSignature Language="C#" Value="public static string DateString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DateString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberSignature Language="VB.NET" Value="Public Property DateString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DateString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eadec-622">사용 중인 시스템에 따라 현재 날짜를 나타내는 <see langword="String" />을 반환하거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-622">Returns or sets a <see langword="String" /> value representing the current date according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eadec-623">사용 중인 시스템에 따라 현재 날짜를 나타내는 <see langword="String" />을 반환하거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-623">Returns or sets a <see langword="String" /> value representing the current date according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-624">`DateString` 약식된 월 이름을 사용 하는 MM 될 형식의 시스템 날짜를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-624">`DateString` returns the system date in the MM-dd-yyyy format, which uses the abbreviated month name.</span></span> <span data-ttu-id="eadec-625">허용 되는 날짜 형식 M-d-yyyy는 y-M-d, M/d/yyyy 및 M/d/y 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-625">The accepted formats for the date are M-d-yyyy, M-d-y, M/d/yyyy, and M/d/y.</span></span> <span data-ttu-id="eadec-626">더블 바이트 문자 집합 (DBCS)를 사용 하는 것을 제외한 모든 시스템 로캘에 대해서도 마찬가지입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-626">This is true for all system locales except those that use a double-byte character set (DBCS).</span></span> <span data-ttu-id="eadec-627">시스템 로캘을 더블 바이트 문자 집합을 사용 하는 경우 `DateString` yyyy-월-일 형식의 시스템 날짜를에서 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-627">If the system locale uses a double-byte character set, `DateString` returns the system date in the yyyy-MM-dd format.</span></span> <span data-ttu-id="eadec-628">시스템 로캘을 사용 하 여 설정 된 **시계, 언어 및 국가별** 항목에 **제어판**합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-628">The system locale is set by using the **Clock, Language, and Region** item in **Control Panel**.</span></span>  
  
 <span data-ttu-id="eadec-629">**참고** 는 `DateString` yyyy-월-일 형식에 대 한 시스템 날짜를 반환 하는 속성의 `zh` (중국어 간체) `ko` (한국어) 및 `ja` (일본어) 시스템 로캘에 내에서 Visual Basic을 실행 하는 경우 Silverlight 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-629">**Note** The `DateString` property returns the system date only in the yyyy-MM-dd format for the `zh` (Chinese simplified), `ko` (Korean), and `ja` (Japanese) system locales if you are running Visual Basic within Silverlight.</span></span>  
  
 <span data-ttu-id="eadec-630">가져오거나 현재 시스템 시간을 설정 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-630">To get or set the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="eadec-631">현재 시스템 날짜 또는 시간을 얻으려면 해당 로캘 형식이 나 사용자 지정 형식을 제공는 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> 속성을는 <xref:Microsoft.VisualBasic.Strings.Format%2A> 함수를 미리 정의 된 또는 사용자 정의 날짜/시간 형식 중 하나를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-631">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="eadec-632">다음은 이에 대한 예입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-632">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted date is " & Format(Now, "dddd, d MMM yyyy"))  
```  
  
 <span data-ttu-id="eadec-633">현재 시스템 날짜를 액세스 하는 `Date`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-633">To access the current system date as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eadec-634">시스템 날짜 또는 시간을 설정 하려면 비관리 코드 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-634">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="eadec-635">자세한 내용은 참조 <xref:System.Security.Permissions.SecurityPermission> 및 [코드 액세스 권한](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-635">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-636">다음 예제에서는 `DateString` 속성을 현재 시스템 날짜를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-636">The following example uses the `DateString` property to display the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eadec-637">
            <see langword="DateString" /> 값을 설정하는 데 사용된 형식이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-637">Invalid format used to set the value of <see langword="DateString" />.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="DateValue">
      <MemberSignature Language="C#" Value="public static DateTime DateValue (string StringDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateValue(string StringDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateValue (StringDate As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateValue(System::String ^ StringDate);" />
      <MemberSignature Language="F#" Value="static member DateValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateValue StringDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringDate">
          <span data-ttu-id="eadec-638">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-638">Required.</span>
          </span>
          <span data-ttu-id="eadec-639">1년 1월 1일 00:00:00부터 9999년 12월 31일 23:59:59까지의 날짜/시간 값을 나타내는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-639">
              <see langword="String" /> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-640">시간 정보가 자정(00:00:00)으로 설정된 상태에서 문자열로 표시된 날짜 정보가 들어 있는 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-640">Returns a <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-641">시간 정보가 자정(00:00:00)으로 설정된 상태에서 문자열로 표시된 날짜 정보가 들어 있는 <see langword="Date" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-641">
              <see langword="Date" /> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-642">경우 `StringDate` 유효한 날짜 구분 기호로 구분 된 1부터 12 까지의 숫자만 포함 `DateValue` 월, 일 및 연도 시스템에 대해 지정 된 간단한 날짜 형식으로의 순서를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-642">If `StringDate` includes only numbers from 1 through 12 separated by valid date separators, `DateValue` recognizes the order for month, day, and year according to the Short Date format specified for your system.</span></span> <span data-ttu-id="eadec-643">`DateValue` 현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성은 <xref:System.Globalization.CultureInfo> 클래스에 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-643">`DateValue` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="eadec-644">기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 값에 따라 결정 됩니다 **제어판** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-644">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span> <span data-ttu-id="eadec-645">간단한 날짜 형식 설정 하 여 재정의할 수 있습니다는 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> 의 속성은 <xref:System.Globalization.DateTimeFormatInfo> 클래스에 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-645">You can override the Short Date format by setting the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property of the <xref:System.Globalization.DateTimeFormatInfo> class in the <xref:System.Globalization> namespace.</span></span>  
  
 <span data-ttu-id="eadec-646">`DateValue` 약식 길고 숫자 형태로 월 이름을 인식합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-646">`DateValue` recognizes month names in long, abbreviated, and numeric form.</span></span> <span data-ttu-id="eadec-647">예를 들어 외에 12/30/1991 및 12/30/91 `DateValue` 1991 년 12 월 30 일 및 1991 년 12 월 30 일도 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-647">For example, in addition to recognizing 12/30/1991 and 12/30/91, `DateValue` also recognizes December 30, 1991 and Dec 30, 1991.</span></span>  
  
 <span data-ttu-id="eadec-648">하는 경우의 연도 부분 `StringDate` 를 생략 하면 `DateValue` 컴퓨터의 시스템 날짜는 현재 연도가 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-648">If the year part of `StringDate` is omitted, `DateValue` uses the current year from your computer's system date.</span></span>  
  
 <span data-ttu-id="eadec-649">경우는 `StringDate` 시간 정보를 포함 하는 인수 `DateValue` 반환된 된 값에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-649">If the `StringDate` argument includes time information, `DateValue` does not include it in the returned value.</span></span> <span data-ttu-id="eadec-650">그러나 경우 `StringDate` "89:"98 같이 잘못 된 시간 정보를 포함 한 <xref:System.InvalidCastException> 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-650">However, if `StringDate` includes invalid time information, such as "89:98", an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-651">사용 하 여이 예제는 `DateValue` 날짜를 문자열로 변환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-651">This example uses the `DateValue` function to convert a string to a date.</span></span> <span data-ttu-id="eadec-652">날짜를 직접 할당할 날짜 리터럴을 사용할 수도 있습니다는 `Object` 또는 `Date` 변수, 예를 들어 `oldDate = #2/12/69#`합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-652">You can also use date literals to directly assign a date to an `Object` or `Date` variable, for example, `oldDate = #2/12/69#`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eadec-653">
            <paramref name="StringDate" />에 잘못된 날짜 정보가 들어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-653">
              <paramref name="StringDate" /> includes invalid time information.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static int Day (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Day(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Day (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Day(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Day : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Day DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="eadec-654">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-654">Required.</span>
          </span>
          <span data-ttu-id="eadec-655">일을 추출할 <see langword="Date" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-655">
              <see langword="Date" /> value from which you want to extract the day.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-656">일(월 기준)을 나타내는 1부터 31까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-656">Returns an <see langword="Integer" /> value from 1 through 31 representing the day of the month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-657">일(월 기준)을 나타내는 1부터 31까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-657">Returns an <see langword="Integer" /> value from 1 through 31 representing the day of the month.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-658">사용 하는 경우는 `Day` 함수를 사용 하 여 정규화 해야 할 수 있습니다는 `Microsoft.VisualBasic` 네임 스페이스, 때문에 <xref:System.Windows.Forms> 네임 스페이스를 정의 <xref:System.Windows.Forms.Day> 열거 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-658">If you use the `Day` function, you might have to qualify it with the `Microsoft.VisualBasic` namespace, because the <xref:System.Windows.Forms> namespace defines <xref:System.Windows.Forms.Day> as an enumeration.</span></span> <span data-ttu-id="eadec-659">다음 예제와 어떻게 조건에 맞는 `Day` 이 모호성을 해결 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-659">The following example shows how qualifying `Day` resolves this ambiguity:</span></span>  
  
```vb  
Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)  
```  
  
 <span data-ttu-id="eadec-660">호출 하 여 해당 월의 일을 가져올 수도 있습니다 `DatePart` 지정 하 고 `DateInterval.Day` 에 대 한는 *간격* 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-660">You can also obtain the day of the month by calling `DatePart` and specifying `DateInterval.Day` for the *Interval* argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-661">다음 예제에서는 `Day` 함수 지정된 된 날짜에서 월의 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-661">The following example uses the `Day` function to obtain the day of the month from a specified date.</span></span> <span data-ttu-id="eadec-662">개발 환경에서 날짜 리터럴 표준 짧은 형식 (예: "02/12/1969)" 코드의 로캘 설정을 사용 하 여 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-662">In the development environment, the date literal is displayed in standard short format (such as "02/12/1969") using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#30)]  
  
 <span data-ttu-id="eadec-663">`Day` 구별 되도록 한정 됩니다는 <xref:System.Windows.Forms.Day?displayProperty=nameWithType> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-663">`Day` is qualified to distinguish it from the <xref:System.Windows.Forms.Day?displayProperty=nameWithType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static int Hour (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Hour(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hour (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Hour(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Hour TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue">
          <span data-ttu-id="eadec-664">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-664">Required.</span>
          </span>
          <span data-ttu-id="eadec-665">시를 추출할 원래 <see langword="Date" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-665">
              <see langword="Date" /> value from which you want to extract the hour.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-666">시간(일 기준)을 나타내는 0부터 23까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-666">Returns an <see langword="Integer" /> value from 0 through 23 representing the hour of the day.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-667">시간(일 기준)을 나타내는 0부터 23까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-667">Returns an <see langword="Integer" /> value from 0 through 23 representing the hour of the day.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-668">호출 하 여 하루 중 시간을 가져올 수도 있습니다 `DatePart` 지정 하 고 `DateInterval.Hour` 에 대 한는 `Interval` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-668">You can also obtain the hour of the day by calling `DatePart` and specifying `DateInterval.Hour` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-669">사용 하 여이 예제는 `Hour` 함수를 지정된 시간에서 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-669">This example uses the `Hour` function to obtain the hour from a specified time.</span></span> <span data-ttu-id="eadec-670">개발 환경에서 시간 리터럴이 코드의 로캘 설정을 사용 하 여 간단한 시간 형식으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-670">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static int Minute (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Minute(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Minute (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Minute(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Minute TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue">
          <span data-ttu-id="eadec-671">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-671">Required.</span>
          </span>
          <span data-ttu-id="eadec-672">분을 추출할 원래 <see langword="Date" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-672">
              <see langword="Date" /> value from which you want to extract the minute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-673">분을 나타내는 0부터 59까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-673">Returns an <see langword="Integer" /> value from 0 through 59 representing the minute of the hour.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-674">분을 나타내는 0부터 59까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-674">Returns an <see langword="Integer" /> value from 0 through 59 representing the minute of the hour.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-675">분을 호출 하 여 가져올 수도 있습니다 `DatePart` 지정 하 고 `DateInterval.Minute` 에 대 한는 `Interval` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-675">You can also obtain the minute of the hour by calling `DatePart` and specifying `DateInterval.Minute` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-676">사용 하 여이 예제는 `Minute` 함수를 지정된 시간에서 분을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-676">This example uses the `Minute` function to obtain the minute of the hour from a specified time.</span></span> <span data-ttu-id="eadec-677">개발 환경에서 시간 리터럴이 코드의 로캘 설정을 사용 하 여 간단한 시간 형식으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-677">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static int Month (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Month(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Month (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Month(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Month : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Month DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="eadec-678">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-678">Required.</span>
          </span>
          <span data-ttu-id="eadec-679">월을 추출할 원래 <see langword="Date" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-679">
              <see langword="Date" /> value from which you want to extract the month.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-680">월을 나타내는 1부터 12까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-680">Returns an <see langword="Integer" /> value from 1 through 12 representing the month of the year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-681">월을 나타내는 1부터 12까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-681">Returns an <see langword="Integer" /> value from 1 through 12 representing the month of the year.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-682">월을 호출 하 여 가져올 수도 있습니다 `DatePart` 지정 하 고 `DateInterval.Month` 에 대 한는 `Interval` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-682">You can also obtain the month of the year by calling `DatePart` and specifying `DateInterval.Month` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-683">사용 하 여이 예제는 `Month` 함수를 지정된 된 날짜에서 월을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-683">This example uses the `Month` function to obtain the month from a specified date.</span></span> <span data-ttu-id="eadec-684">날짜 리터럴이 간단히 표시 됩니다는 개발 환경에서 사용자 코드의 로캘 설정을 사용 하 여 형식을 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-684">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="MonthName">
      <MemberSignature Language="C#" Value="public static string MonthName (int Month, bool Abbreviate = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static string MonthName(int32 Month, bool Abbreviate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MonthName (Month As Integer, Optional Abbreviate As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member MonthName : int * bool -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.MonthName (Month, Abbreviate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Month" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Month">
          <span data-ttu-id="eadec-685">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-685">Required.</span>
          </span>
          <span data-ttu-id="eadec-686">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-686">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="eadec-687">1부터 13 사이의 숫자로 지정된 월 이름입니다. 여기서 1은 1월을 나타내고 12는 12월을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-687">The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December.</span>
          </span>
          <span data-ttu-id="eadec-688">13개월용 달력의 경우에는 값 13을 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-688">You can use the value 13 with a 13-month calendar.</span>
          </span>
          <span data-ttu-id="eadec-689">시스템에서 12개월용 달력을 사용하는 경우 <c>Month</c>가 13이면 <see langword="MonthName" />은 빈 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-689">If your system is using a 12-month calendar and <c>Month</c> is 13, <see langword="MonthName" /> returns an empty string.</span>
          </span>
        </param>
        <param name="Abbreviate">
          <span data-ttu-id="eadec-690">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-690">Optional.</span>
          </span>
          <span data-ttu-id="eadec-691">해당 월 이름이 약식 이름인지 여부를 나타내는 <see langword="Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-691">
              <see langword="Boolean" /> value that indicates if the month name is to be abbreviated.</span>
          </span>
          <span data-ttu-id="eadec-692">이 인수가 생략된 경우 기본값은 <see langword="False" />이며 해당 월 이름이 약식 이름이 아님을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-692">If omitted, the default is <see langword="False" />, which means the month name is not abbreviated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-693">지정된 월 이름이 들어 있는 <see langword="String" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-693">Returns a <see langword="String" /> value containing the name of the specified month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-694">지정된 월 이름이 들어 있는 <see langword="String" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-694">Returns a <see langword="String" /> value containing the name of the specified month.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-695">반환한 문자열 `MonthName` 의존 입력된 인수에서 뿐만 아니라 뿐만 아니라는 **국가별 옵션** Windows에 지정 된 설정을 **제어판**합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-695">The string returned by `MonthName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eadec-696">`MonthName` 현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성은 <xref:System.Globalization.CultureInfo> 클래스에 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-696">`MonthName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="eadec-697">기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 값에 따라 결정 됩니다 **제어판** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-697">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-698">사용 하 여이 예제는 `MonthName` 여 지정 된 정수 월의 이름을 결정 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-698">This example uses the `MonthName` function to determine the name of the month, by the integer given.</span></span> <span data-ttu-id="eadec-699">부울 값은 결정 하는지 여부를 전체 이름 (`False`) 또는 약식된 이름 (`True`) 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-699">The Boolean value will determine whether the full name (`False`) or the abbreviated name (`True`) will be displayed.</span></span>  
  
 [!code-vb[VbVbalrFunctions#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eadec-700">
            <paramref name="Month" />가 1보다 작거나 13보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-700">
              <paramref name="Month" /> is less than 1 or greater than 13.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eadec-701">시스템 설정에 따라 현재 날짜와 시간이 들어 있는 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-701">Returns a <see langword="Date" /> value containing the current date and time according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eadec-702">시스템 설정에 따라 현재 날짜와 시간이 들어 있는 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-702">Returns a <see langword="Date" /> value containing the current date and time according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-703">시스템 날짜를 설정 하려면 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-703">To set the system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span> <span data-ttu-id="eadec-704">시스템 시간을 설정 하려면는 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-704">To set the system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-705">다음 예제에서는 `Now` 속성을 현재 시스템 날짜와 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-705">The following example uses the `Now` property to return the current system date and time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static int Second (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Second(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Second (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Second(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Second : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Second TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="TimeValue">
          <span data-ttu-id="eadec-706">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-706">Required.</span>
          </span>
          <span data-ttu-id="eadec-707">초를 추출할 원래 <see langword="Date" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-707">
              <see langword="Date" /> value from which you want to extract the second.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-708">초를 나타내는 0부터 59까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-708">Returns an <see langword="Integer" /> value from 0 through 59 representing the second of the minute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-709">초를 나타내는 0부터 59까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-709">Returns an <see langword="Integer" /> value from 0 through 59 representing the second of the minute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-710">분의 두 번째 호출 하 여 가져올 수도 있습니다 `DatePart` 지정 하 고 `DateInterval.Second` 에 대 한는 `Interval` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-710">You can also obtain the second of the minute by calling `DatePart` and specifying `DateInterval.Second` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-711">다음 예제에서는 `Second` 함수 지정된 시간에서 분 중 두 번째 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-711">The following example uses the `Second` function to obtain the second of the minute from a specified time.</span></span> <span data-ttu-id="eadec-712">개발 환경에서 시간 리터럴이 코드의 로캘 설정을 사용 하 여 간단한 시간 형식으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-712">In the development environment, the time literal is displayed in short time format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public static DateTime TimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime TimeOfDay { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eadec-713">시스템 설정에 따라 현재 시간이 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-713">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eadec-714">시스템 설정에 따라 현재 시간이 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-714">Returns or sets a <see langword="Date" /> value containing the current time of day according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-715">`Date` 데이터 형식은 날짜 구성 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-715">The `Date` data type includes date components.</span></span> <span data-ttu-id="eadec-716">시스템 시간을 반환 하는 경우 `TimeOfDay` 이러한 모두 1로 설정 하는 하므로 반환 된 값은 1 년의 첫 번째 날을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-716">When returning the system time, `TimeOfDay` sets these all to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="eadec-717">시스템 시간을 설정할 때 `TimeOfDay` 날짜 구성 요소를 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-717">When setting the system time, `TimeOfDay` ignores the date components.</span></span>  
  
 <span data-ttu-id="eadec-718">현재 시스템 시간을 액세스 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="eadec-718">To access the current system time as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> property.</span></span>  
  
 <span data-ttu-id="eadec-719">를 가져오거나 현재 시스템 날짜를 설정 하려면 사용 된 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-719">To get or set the current system date, use the <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eadec-720">시스템 날짜 또는 시간을 설정 하려면 비관리 코드 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-720">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="eadec-721">자세한 내용은 참조 <xref:System.Security.Permissions.SecurityPermission> 및 [코드 액세스 권한](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-721">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-722">사용 하 여이 예제는 `TimeOfDay` 속성을 현재 시스템 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-722">This example uses the `TimeOfDay` property to return the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Timer" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Timer">
      <MemberSignature Language="C#" Value="public static double Timer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 Timer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timer As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property double Timer { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Timer : double" Usage="Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eadec-723">자정 이후 경과된 초 수를 나타내는 <see langword="Double" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-723">Returns a <see langword="Double" /> value representing the number of seconds elapsed since midnight.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eadec-724">자정 이후 경과된 초 수를 나타내는 <see langword="Double" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-724">Returns a <see langword="Double" /> value representing the number of seconds elapsed since midnight.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-725">`Timer` 속성은 가장 최근의 자정 이후 초와 밀리초를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-725">The `Timer` property returns both the seconds and the milliseconds since the most recent midnight.</span></span> <span data-ttu-id="eadec-726">반환 값의 정수 부분에는 초 있으며 밀리초 소수 부분에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-726">The seconds are in the integral part of the return value, and the milliseconds are in the fractional part.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-727">사용 하 여이 예제는 `Timer` 속성을 응용 프로그램을 일시 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-727">This example uses the `Timer` property to pause the application.</span></span> <span data-ttu-id="eadec-728">다른 처리는 일시 중지 상태에서 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-728">It can perform other processing during the pause.</span></span>  
  
 [!code-vb[VbVbalrTimerProperty#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTimerProperty/VB/Form1.vb#1)]  
  
 <span data-ttu-id="eadec-729">정규화 해야 하는 `Timer` 속성을는 <xref:Microsoft.VisualBasic?displayProperty=nameWithType> 네임 스페이스, 때문에 `Timer` 에 정의 된 클래스 이기도 <xref:System.Threading?displayProperty=nameWithType>, <xref:System.Timers?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms?displayProperty=nameWithType> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-729">Note that you must qualify the `Timer` property with the <xref:Microsoft.VisualBasic?displayProperty=nameWithType> namespace, because `Timer` is also a defined class in the <xref:System.Threading?displayProperty=nameWithType>, <xref:System.Timers?displayProperty=nameWithType>, and <xref:System.Windows.Forms?displayProperty=nameWithType> namespaces.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.VBMath.Randomize" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Windows.Forms" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeSerial">
      <MemberSignature Language="C#" Value="public static DateTime TimeSerial (int Hour, int Minute, int Second);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeSerial(int32 Hour, int32 Minute, int32 Second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeSerial (Hour As Integer, Minute As Integer, Second As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeSerial(int Hour, int Minute, int Second);" />
      <MemberSignature Language="F#" Value="static member TimeSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeSerial (Hour, Minute, Second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Hour" Type="System.Int32" />
        <Parameter Name="Minute" Type="System.Int32" />
        <Parameter Name="Second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Hour">
          <span data-ttu-id="eadec-730">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-730">Required.</span>
          </span>
          <span data-ttu-id="eadec-731">0에서 23까지의 <see langword="Integer" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-731">
              <see langword="Integer" /> expression from 0 through 23.</span>
          </span>
          <span data-ttu-id="eadec-732">그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-732">However, values outside this range are also accepted.</span>
          </span>
        </param>
        <param name="Minute">
          <span data-ttu-id="eadec-733">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-733">Required.</span>
          </span>
          <span data-ttu-id="eadec-734">0에서 59까지의 <see langword="Integer" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-734">
              <see langword="Integer" /> expression from 0 through 59.</span>
          </span>
          <span data-ttu-id="eadec-735">그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-735">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="eadec-736">
            <c>Minute</c>의 값은 계산된 시간에 더해지므로 음수 값은 계산된 시간에서 이 값만큼 뺀 분을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-736">The value of <c>Minute</c> is added to the calculated hour, so a negative value specifies minutes before that hour.</span>
          </span>
        </param>
        <param name="Second">
          <span data-ttu-id="eadec-737">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-737">Required.</span>
          </span>
          <span data-ttu-id="eadec-738">0에서 59까지의 <see langword="Integer" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-738">
              <see langword="Integer" /> expression from 0 through 59.</span>
          </span>
          <span data-ttu-id="eadec-739">그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-739">However, values outside this range are also accepted.</span>
          </span>
          <span data-ttu-id="eadec-740">
            <c>Second</c>의 값은 계산된 분에 더해지므로 음수 값은 계산된 분에서 이 값만큼 뺀 초를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-740">The value of <c>Second</c> is added to the calculated minute, so a negative value specifies seconds before that minute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-741">날짜 정보가 1년 1월 1일로 설정된 상태에서 지정된 시, 분, 초를 나타내는 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-741">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-742">날짜 정보가 1년 1월 1일로 설정된 상태에서 지정된 시, 분, 초를 나타내는 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-742">Returns a <see langword="Date" /> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-743">다음 예제에서는 음수, 0 및 양의 인수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-743">The following example demonstrates negative, zero, and positive argument values.</span></span> <span data-ttu-id="eadec-744">`TimeSerial` 함수 3 정오에 또는 오전 8시 45분: 00 시간 전에 15 분을 나타내는 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-744">The `TimeSerial` function returns a time representing 15 minutes before three hours before noon, or 8:45:00 AM.</span></span>  
  
```vb  
Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)  
```  
  
 <span data-ttu-id="eadec-745">어느 경우 `Minute` 또는 `Second` 정상 범위를 초과 하면, 다음으로 큰 단위가에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-745">If either `Minute` or `Second` exceeds its normal range, it is applied to the next larger unit as appropriate.</span></span> <span data-ttu-id="eadec-746">예를 들어 75 분을 지정 하는 경우 1 시간 15 분으로 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-746">For example, if you specify 75 minutes, it is evaluated as one hour and 15 minutes.</span></span>  
  
 <span data-ttu-id="eadec-747">`TimeSerial` 하루에서 시간 (초) 수 인 86,400, 모듈로 총 초를 줄입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-747">`TimeSerial` reduces the total seconds modulo 86,400, which is the number of seconds in a day.</span></span> <span data-ttu-id="eadec-748">따라서 반환 값은 항상 00시: 00에서 23시 59분: 59 사이의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-748">Therefore, the returned time is always between 00:00:00 and 23:59:59.</span></span>  
  
 <span data-ttu-id="eadec-749">`Date` 데이터 형식은 날짜 구성 요소를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-749">The `Date` data type includes date components.</span></span> <span data-ttu-id="eadec-750">`TimeSerial` 1로의 모든 설정 하므로 반환 되는 값 1 년의 첫 번째 날을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-750">`TimeSerial` sets all of these to 1, so the returned value represents the first day of the year 1.</span></span> <span data-ttu-id="eadec-751">그러나, 인수의 값 24 시간을 초과 하는 계산 된 시간, 경우에 일 필요에 따라 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-751">However, if the values of the arguments cause the calculated time to exceed 24 hours, the day is incremented as necessary.</span></span> <span data-ttu-id="eadec-752">다음 예에서 값 `Hour` 및 `Minute` 결과가 24 시간 이상 결합 된 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-752">In the following example, the values of `Hour` and `Minute` result in a combined time of more than 24 hours.</span></span>  
  
```vb  
MsgBox(TimeSerial(23, 75, 0))   
' The preceding statement displays "1/2/0001 12:15:00 AM".  
```  
  
 <span data-ttu-id="eadec-753">인수의 값 결과가 음수 계산 된 시간, 날짜 정보가 1/1/0001로 설정 되어 고 시간 정보는 00시: 00에서 23시 59분: 59 사이 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-753">If the values of the arguments result in a negative calculated time, the date information is set to 1/1/0001 and the time information is adjusted to be between 00:00:00 and 23:59:59.</span></span> <span data-ttu-id="eadec-754">그러나, 계산 된 시간 보다 작은 음의 24 시간,이 <xref:System.ArgumentOutOfRangeException> 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-754">However, if the calculated time is less than negative 24 hours, an <xref:System.ArgumentOutOfRangeException> error occurs.</span></span>  
  
 <span data-ttu-id="eadec-755">이후 모든 `Date` 값으로 사용할 수는 <xref:System.DateTime?displayProperty=nameWithType> 구조를 해당 메서드에 추가 하는 옵션 제공 어셈블하는 방법에 `Date` 값입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-755">Since every `Date` value is supported by a <xref:System.DateTime?displayProperty=nameWithType> structure, its methods give you additional options in assembling a `Date` value.</span></span> <span data-ttu-id="eadec-756">오버 로드 된 중 하나를 사용할 수는 예를 들어 <xref:System.DateTime.%23ctor%2A> 생성자를 채우는 한 `Date` 원하는 조합의 구성 요소를 사용 하 여 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-756">For example, you can employ one of the overloaded <xref:System.DateTime.%23ctor%2A> constructors to populate a `Date` variable using the desired combination of components.</span></span> <span data-ttu-id="eadec-757">다음 예제에서는 `newDateTime` 6, 1978 년 5 월 초 아침에 8시 30분 전의 0.1에:</span><span class="sxs-lookup"><span data-stu-id="eadec-757">The following example sets `newDateTime` to May 6, 1978 at one tenth of a second before 8:30 in the morning:</span></span>  
  
```vb  
Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 <span data-ttu-id="eadec-758">다음 예제에서는 `TimeSerial` 함수에 대해 지정 된 시간, 분 및 초는 시간을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-758">The following example uses the `TimeSerial` function to return a time for the specified hour, minute, and second.</span></span>  
  
 [!code-vb[VbVbalrFunctions#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eadec-759">인수의 범위가 -2,147,483,648 ~ 2,147,483,647을 벗어났습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-759">An argument is outside the range -2,147,483,648 through 2,147,483,647</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eadec-760">계산된 시간이 -24 시보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-760">Calculated time is less than negative 24 hours.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TimeString">
      <MemberSignature Language="C#" Value="public static string TimeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string TimeString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TimeString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eadec-761">시스템 설정에 따라 현재 시간을 나타내는 <see langword="String" /> 값을 반환하거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-761">Returns or sets a <see langword="String" /> value representing the current time of day according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eadec-762">시스템 설정에 따라 현재 시간을 나타내는 <see langword="String" /> 값을 반환하거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-762">Returns or sets a <see langword="String" /> value representing the current time of day according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-763">`TimeString` 항상 반환 하는 24 시간 형식 "h:mm: ss"로 시스템 시간 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-763">`TimeString` always returns the system time as "HH:mm:ss", which is a 24-hour format.</span></span> <span data-ttu-id="eadec-764">이 형식은 고정 문화권을 변경 해도 변경 되지 않습니다 즉는 **국가별 옵션** 에 **제어판**합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-764">This format is culture-invariant, which means it does not change even if you change the **Regional Options** in **Control Panel**.</span></span>  
  
 <span data-ttu-id="eadec-765">가져오거나 현재 시스템 날짜를 설정 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-765">To get or set the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="eadec-766">현재 시스템 날짜 또는 시간을 얻으려면 해당 로캘 형식이 나 사용자 지정 형식을 제공는 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> 속성을는 <xref:Microsoft.VisualBasic.Strings.Format%2A> 함수를 미리 정의 된 또는 사용자 정의 날짜/시간 형식 중 하나를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-766">To get the current system date or time in the format of your locale, or in a custom format, supply the <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> property to the <xref:Microsoft.VisualBasic.Strings.Format%2A> function, specifying either a predefined or user-defined date/time format.</span></span> <span data-ttu-id="eadec-767">다음은 이에 대한 예입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-767">The following example demonstrates this.</span></span>  
  
```vb  
MsgBox("The formatted time is " & Format(Now, "hh.mm.ss.fff tt"))  
```  
  
 <span data-ttu-id="eadec-768">현재 시스템 시간을 액세스 하는 `Date`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="eadec-768">To access the current system time as a `Date`, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eadec-769">시스템 날짜 또는 시간을 설정 하려면 비관리 코드 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-769">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial trust situations.</span></span> <span data-ttu-id="eadec-770">자세한 내용은 참조 <xref:System.Security.Permissions.SecurityPermission> 및 [코드 액세스 권한](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-770">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-771">사용 하 여이 예제는 `TimeString` 속성을 현재 시스템 시간을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-771">This example uses the `TimeString` property to display the current system time.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eadec-772">
            <see langword="TimeString" /> 값을 설정하는 데 사용된 형식이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-772">Invalid format used to set the value of <see langword="TimeString" />.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeValue">
      <MemberSignature Language="C#" Value="public static DateTime TimeValue (string StringTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeValue(string StringTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeValue (StringTime As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeValue(System::String ^ StringTime);" />
      <MemberSignature Language="F#" Value="static member TimeValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeValue StringTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringTime" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="StringTime">
          <span data-ttu-id="eadec-773">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-773">Required.</span>
          </span>
          <span data-ttu-id="eadec-774">1년 1월 1일 00:00:00부터 9999년 12월 31일 23:59:59까지의 날짜/시간 값을 나타내는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-774">
              <see langword="String" /> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-775">날짜 정보가 1년 1월 1일로 설정된 상태에서 문자열로 표시된 시간 정보가 들어 있는 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-775">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-776">날짜 정보가 1년 1월 1일로 설정된 상태에서 문자열로 표시된 시간 정보가 들어 있는 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-776">Returns a <see langword="Date" /> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-777">유효한 시간을 입력할 수 12 시간제 또는 24 시간 시계를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-777">You can enter valid times using a 12-hour or 24-hour clock.</span></span> <span data-ttu-id="eadec-778">예를 들어 `"2:24 P.M."` 및 `"14:24"` 은 모두 유효 `StringTime` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-778">For example, `"2:24 P.M."` and `"14:24"` are both valid `StringTime` arguments.</span></span>  
  
 <span data-ttu-id="eadec-779">경우는 `StringTime` 날짜 정보를 포함 하는 인수 `TimeValue` 반환된 된 값에 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-779">If the `StringTime` argument includes date information, `TimeValue` does not include it in the returned value.</span></span> <span data-ttu-id="eadec-780">그러나 경우 `StringTime` 예를 들어 "년 1 월 32," 잘못 된 날짜 정보를 포함 한 <xref:System.InvalidCastException> 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-780">However, if `StringTime` includes invalid date information, for example "January 32," an <xref:System.InvalidCastException> error occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-781">다음 예제에서는 `TimeValue` 함수를 한 번에 문자열을 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-781">The following example uses the `TimeValue` function to convert a string to a time.</span></span> <span data-ttu-id="eadec-782">한 번에 직접 할당할 날짜 리터럴을 사용할 수도 있습니다는 `Date` 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-782">You can also use date literals to directly assign a time to a `Date` variable.</span></span>  
  
 [!code-vb[VbVbalrFunctions#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="eadec-783">
            <paramref name="StringTime" />에 잘못된 날짜 정보가 들어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-783">
              <paramref name="StringTime" /> includes invalid date information.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eadec-784">사용 중인 시스템에 따라 현재 날짜가 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-784">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eadec-785">사용 중인 시스템에 따라 현재 날짜가 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-785">Returns or sets a <see langword="Date" /> value containing the current date according to your system.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-786">`Date` 시간 구성 요소를 포함 하는 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-786">The `Date` data type includes time components.</span></span> <span data-ttu-id="eadec-787">시스템 날짜를 반환 하는 경우 `Today` 하므로 반환 된 값은 자정 나타냅니다 모두 0으로 설정 (00: 00:00).</span><span class="sxs-lookup"><span data-stu-id="eadec-787">When returning the system date, `Today` sets all of these to 0, so the returned value represents midnight (00:00:00).</span></span> <span data-ttu-id="eadec-788">시스템 날짜를 설정할 때 `Today` 시간 구성 요소를 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-788">When setting the system date, `Today` ignores the time components.</span></span>  
  
 <span data-ttu-id="eadec-789">현재 시스템 날짜를 액세스 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-789">To access the current system date as a `String`, use the <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> property.</span></span>  
  
 <span data-ttu-id="eadec-790">을 가져오거나 현재 시스템 시간을 설정 하려면 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-790">To get or set the current system time, use the <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eadec-791">시스템 날짜 또는 시간을 설정 하려면 비관리 코드 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-791">Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations.</span></span> <span data-ttu-id="eadec-792">자세한 내용은 참조 <xref:System.Security.Permissions.SecurityPermission> 및 [코드 액세스 권한](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-792">For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-793">사용 하 여이 예제는 `Today` 속성을 현재 시스템 날짜를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-793">This example uses the `Today` property to return the current system date.</span></span>  
  
 [!code-vb[VbVbalrDateProperties#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Weekday(valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (DateValue As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday) As Integer" />
      <MemberSignature Language="F#" Value="static member Weekday : DateTime * Microsoft.VisualBasic.FirstDayOfWeek -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Weekday (DateValue, DayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="eadec-794">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-794">Required.</span>
          </span>
          <span data-ttu-id="eadec-795">요일을 확인할 <see langword="Date" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-795">
              <see langword="Date" /> value for which you want to determine the day of the week.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="eadec-796">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-796">Optional.</span>
          </span>
          <span data-ttu-id="eadec-797">주의 첫째 요일을 지정하는 <see langword="FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-797">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="eadec-798">지정되지 않은 경우 <see langword="FirstDayOfWeek.Sunday" />가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-798">If not specified, <see langword="FirstDayOfWeek.Sunday" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-799">일(주 기준)을 나타내는 수가 들어 있는 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-799">Returns an <see langword="Integer" /> value containing a number representing the day of the week.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-800">일(주 기준)을 나타내는 수가 들어 있는 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-800">Returns an <see langword="Integer" /> value containing a number representing the day of the week.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-801">반환한 값은 `Weekday` 의 값에 해당 하는 함수는 `FirstDayOfWeek` 열거형, 즉 함수에서 반환 하 고 값입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-801">The value returned by the `Weekday` function corresponds to the values of the `FirstDayOfWeek` enumeration; that is, 1 indicates Sunday and 7 indicates Saturday.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eadec-802">`Weekday` 현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성은 <xref:System.Globalization.CultureInfo> 클래스에 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-802">`Weekday` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="eadec-803">기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 값에 따라 결정 됩니다 **제어판** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-803">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="eadec-804">`DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-804">The `DayOfWeek` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-805">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-805">Enumeration value</span></span>|<span data-ttu-id="eadec-806">값</span><span class="sxs-lookup"><span data-stu-id="eadec-806">Value</span></span>|<span data-ttu-id="eadec-807">설명</span><span class="sxs-lookup"><span data-stu-id="eadec-807">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="eadec-808">0</span><span class="sxs-lookup"><span data-stu-id="eadec-808">0</span></span>|<span data-ttu-id="eadec-809">시스템 설정에 지정 된 주의 첫 번째 날</span><span class="sxs-lookup"><span data-stu-id="eadec-809">First day of week specified in system settings</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="eadec-810">1</span><span class="sxs-lookup"><span data-stu-id="eadec-810">1</span></span>|<span data-ttu-id="eadec-811">일요일 (기본값)</span><span class="sxs-lookup"><span data-stu-id="eadec-811">Sunday (default)</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="eadec-812">2</span><span class="sxs-lookup"><span data-stu-id="eadec-812">2</span></span>|<span data-ttu-id="eadec-813">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="eadec-813">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="eadec-814">3</span><span class="sxs-lookup"><span data-stu-id="eadec-814">3</span></span>|<span data-ttu-id="eadec-815">화요일</span><span class="sxs-lookup"><span data-stu-id="eadec-815">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="eadec-816">4</span><span class="sxs-lookup"><span data-stu-id="eadec-816">4</span></span>|<span data-ttu-id="eadec-817">수요일</span><span class="sxs-lookup"><span data-stu-id="eadec-817">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="eadec-818">5</span><span class="sxs-lookup"><span data-stu-id="eadec-818">5</span></span>|<span data-ttu-id="eadec-819">목요일</span><span class="sxs-lookup"><span data-stu-id="eadec-819">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="eadec-820">6</span><span class="sxs-lookup"><span data-stu-id="eadec-820">6</span></span>|<span data-ttu-id="eadec-821">금요일</span><span class="sxs-lookup"><span data-stu-id="eadec-821">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="eadec-822">7</span><span class="sxs-lookup"><span data-stu-id="eadec-822">7</span></span>|<span data-ttu-id="eadec-823">토요일</span><span class="sxs-lookup"><span data-stu-id="eadec-823">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eadec-824">다음 예제에서는 `Weekday` 함수를 지정된 된 날짜에서 요일을 차례로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-824">The following example uses the `Weekday` function to obtain the day of the week from a specified date.</span></span>  
  
 [!code-vb[VbVbalrFunctions#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eadec-825">
            <paramref name="DayOfWeek" />가 0보다 작거나 7보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-825">
              <paramref name="DayOfWeek" /> is less than 0 or more than 7.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="WeekdayName">
      <MemberSignature Language="C#" Value="public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);" />
      <MemberSignature Language="ILAsm" Value=".method public static string WeekdayName(int32 Weekday, bool Abbreviate, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekdayName (Weekday As Integer, Optional Abbreviate As Boolean = false, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.System) As String" />
      <MemberSignature Language="F#" Value="static member WeekdayName : int * bool * Microsoft.VisualBasic.FirstDayOfWeek -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.WeekdayName (Weekday, Abbreviate, FirstDayOfWeekValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Weekday" Type="System.Int32" />
        <Parameter Name="Abbreviate" Type="System.Boolean" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
      </Parameters>
      <Docs>
        <param name="Weekday">
          <span data-ttu-id="eadec-826">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-826">Required.</span>
          </span>
          <span data-ttu-id="eadec-827">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-827">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="eadec-828">형식이며 요일에 대해 지정된 1부터 7까지의 숫자 값입니다. 1은 주의 첫째 요일을 나타내고 7은 주의 마지막 요일을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-828">The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week.</span>
          </span>
          <span data-ttu-id="eadec-829">첫째 요일과 마지막 요일은 <c>FirstDayOfWeekValue</c>의 설정에 따라 달라집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-829">The identities of the first and last days depend on the setting of <c>FirstDayOfWeekValue</c>.</span>
          </span>
        </param>
        <param name="Abbreviate">
          <span data-ttu-id="eadec-830">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-830">Optional.</span>
          </span>
          <span data-ttu-id="eadec-831">해당 요일 이름이 약식 이름인지 여부를 나타내는 <see langword="Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-831">
              <see langword="Boolean" /> value that indicates if the weekday name is to be abbreviated.</span>
          </span>
          <span data-ttu-id="eadec-832">이 인수가 생략된 경우 기본값은 <see langword="False" />이며 해당 요일 이름이 약식 이름이 아님을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-832">If omitted, the default is <see langword="False" />, which means the weekday name is not abbreviated.</span>
          </span>
        </param>
        <param name="FirstDayOfWeekValue">
          <span data-ttu-id="eadec-833">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-833">Optional.</span>
          </span>
          <span data-ttu-id="eadec-834">주의 첫째 요일을 지정하는 <see langword="FirstDayOfWeek" /> 열거형에서 선택한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-834">A value chosen from the <see langword="FirstDayOfWeek" /> enumeration that specifies the first day of the week.</span>
          </span>
          <span data-ttu-id="eadec-835">지정되지 않은 경우 <see langword="FirstDayOfWeek.System" />가 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-835">If not specified, <see langword="FirstDayOfWeek.System" /> is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-836">지정된 요일 이름이 들어 있는 <see langword="String" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-836">Returns a <see langword="String" /> value containing the name of the specified weekday.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-837">지정된 요일 이름이 들어 있는 <see langword="String" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-837">Returns a <see langword="String" /> value containing the name of the specified weekday.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-838">반환한 문자열 `WeekdayName` 의존 입력된 인수에서 뿐만 아니라 뿐만 아니라는 **국가별 옵션** Windows에 지정 된 설정을 **제어판**합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-838">The string returned by `WeekdayName` depends not only on the input arguments, but also on the **Regional Options** settings specified in the Windows **Control Panel**.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eadec-839">`WeekdayName` 현재 달력 설정을 사용 하 여는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성은 <xref:System.Globalization.CultureInfo> 클래스에 <xref:System.Globalization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-839">`WeekdayName` uses the current calendar setting from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of the <xref:System.Globalization.CultureInfo> class in the <xref:System.Globalization> namespace.</span></span> <span data-ttu-id="eadec-840">기본 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 값에 따라 결정 됩니다 **제어판** 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-840">The default <xref:System.Globalization.CultureInfo.CurrentCulture%2A> values are determined by **Control Panel** settings.</span></span>  
  
 <span data-ttu-id="eadec-841">`FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-841">The `FirstDayOfWeekValue` argument can have one of the following settings.</span></span>  
  
|<span data-ttu-id="eadec-842">열거형 값</span><span class="sxs-lookup"><span data-stu-id="eadec-842">Enumeration value</span></span>|<span data-ttu-id="eadec-843">값</span><span class="sxs-lookup"><span data-stu-id="eadec-843">Value</span></span>|<span data-ttu-id="eadec-844">설명</span><span class="sxs-lookup"><span data-stu-id="eadec-844">Description</span></span>|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|<span data-ttu-id="eadec-845">0</span><span class="sxs-lookup"><span data-stu-id="eadec-845">0</span></span>|<span data-ttu-id="eadec-846">시스템에 지정 된 주의 첫 번째 요일을 설정 (기본값)</span><span class="sxs-lookup"><span data-stu-id="eadec-846">First day of week specified in system settings (default)</span></span>|  
|`FirstDayOfWeek.Sunday`|<span data-ttu-id="eadec-847">1</span><span class="sxs-lookup"><span data-stu-id="eadec-847">1</span></span>|<span data-ttu-id="eadec-848">일요일</span><span class="sxs-lookup"><span data-stu-id="eadec-848">Sunday</span></span>|  
|`FirstDayOfWeek.Monday`|<span data-ttu-id="eadec-849">2</span><span class="sxs-lookup"><span data-stu-id="eadec-849">2</span></span>|<span data-ttu-id="eadec-850">월요일 (ISO 8601 표준, 3.17)</span><span class="sxs-lookup"><span data-stu-id="eadec-850">Monday (complies with ISO standard 8601, section 3.17)</span></span>|  
|`FirstDayOfWeek.Tuesday`|<span data-ttu-id="eadec-851">3</span><span class="sxs-lookup"><span data-stu-id="eadec-851">3</span></span>|<span data-ttu-id="eadec-852">화요일</span><span class="sxs-lookup"><span data-stu-id="eadec-852">Tuesday</span></span>|  
|`FirstDayOfWeek.Wednesday`|<span data-ttu-id="eadec-853">4</span><span class="sxs-lookup"><span data-stu-id="eadec-853">4</span></span>|<span data-ttu-id="eadec-854">수요일</span><span class="sxs-lookup"><span data-stu-id="eadec-854">Wednesday</span></span>|  
|`FirstDayOfWeek.Thursday`|<span data-ttu-id="eadec-855">5</span><span class="sxs-lookup"><span data-stu-id="eadec-855">5</span></span>|<span data-ttu-id="eadec-856">목요일</span><span class="sxs-lookup"><span data-stu-id="eadec-856">Thursday</span></span>|  
|`FirstDayOfWeek.Friday`|<span data-ttu-id="eadec-857">6</span><span class="sxs-lookup"><span data-stu-id="eadec-857">6</span></span>|<span data-ttu-id="eadec-858">금요일</span><span class="sxs-lookup"><span data-stu-id="eadec-858">Friday</span></span>|  
|`FirstDayOfWeek.Saturday`|<span data-ttu-id="eadec-859">7</span><span class="sxs-lookup"><span data-stu-id="eadec-859">7</span></span>|<span data-ttu-id="eadec-860">토요일</span><span class="sxs-lookup"><span data-stu-id="eadec-860">Saturday</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eadec-861">다음 예제에서는 `Weekday` 함수 지정된 된 날짜에서 요일을 차례로입니다. 다음는 `WeekDayName` 함수에서 해당 번호 된 요일 이름을 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-861">The following example uses the `Weekday` function to obtain the day of the week from a specified date, and then the `WeekDayName` function to obtain the name of the weekday from its number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eadec-862">
            <paramref name="Weekday" />가 1-7 범위를 벗어났거나 <paramref name="FirstDayOfWeekValue" />가 0-7 범위를 벗어났습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-862">
              <paramref name="Weekday" /> is less than 1 or greater than 7, or <paramref name="FirstDayOfWeekValue" /> is less than 0 or greater than 7.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static int Year (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Year(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Year (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Year(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Year : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Year DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="DateValue">
          <span data-ttu-id="eadec-863">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-863">Required.</span>
          </span>
          <span data-ttu-id="eadec-864">연도를 추출할 원래 <see langword="Date" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-864">
              <see langword="Date" /> value from which you want to extract the year.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eadec-865">연도를 나타내는 1부터 9999까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-865">Returns an <see langword="Integer" /> value from 1 through 9999 representing the year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eadec-866">연도를 나타내는 1부터 9999까지의 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eadec-866">Returns an <see langword="Integer" /> value from 1 through 9999 representing the year.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eadec-867">호출 하 여 연도 구할 수도 `DatePart` 지정 하 고 `DateInterval.Year` 에 대 한는 `Interval` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-867">You can also obtain the year by calling `DatePart` and specifying `DateInterval.Year` for the `Interval` argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eadec-868">다음 예제에서는 `Year` 함수 지정된 된 날짜의 연도입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-868">The following example uses the `Year` function to obtain the year from a specified date.</span></span> <span data-ttu-id="eadec-869">날짜 리터럴이 간단히 표시 됩니다는 개발 환경에서 사용자 코드의 로캘 설정을 사용 하 여 형식을 날짜입니다.</span><span class="sxs-lookup"><span data-stu-id="eadec-869">In the development environment, the date literal is displayed in short date format using the locale settings of your code.</span></span>  
  
 [!code-vb[VbVbalrFunctions#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
  </Members>
</Type>