<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Information.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c57dd6007d6c60bd212b9cf55d27c4a45966b12e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c57dd6007d6c60bd212b9cf55d27c4a45966b12e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Information">
          <source>The <ph id="ph1">&lt;see langword="Information" /&gt;</ph> module contains the procedures used to return, test for, or verify information.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Information" /&gt;</ph> 모듈에는 정보를 반환하고, 테스트하고, 확인하는 프로시저가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Information">
          <source>This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</source>
          <target state="translated">이 모듈은 Visual Basic 언어 키워드와 오류 정보를 제공, 데이터 유효성 검사, 배열 범위를 결정 및 데이터 형식 및 색 정보를 검색 하는 런타임 라이브러리 멤버를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Information">
          <source>The following example uses the <ph id="ph1">`VbTypeName`</ph> function to return data type names for several variables.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`VbTypeName`</ph> 함수를 여러 변수에 대 한 데이터 형식 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>Returns an integer indicating the line number of the last executed statement.</source>
          <target state="translated">마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>If Visual Basic encounters no line numbers, it returns 0.</source>
          <target state="translated">줄 번호 없음를 못한 경우 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Erl">
          <source>This example uses the <ph id="ph1">`Erl`</ph> property to indicate the line number.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`Erl`</ph> 줄 번호를 나타내는 속성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Contains information about run-time errors.</source>
          <target state="translated">런타임 오류에 대한 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Contains information about run-time errors.</source>
          <target state="translated">런타임 오류에 대한 정보를 포함합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>The properties of the <ph id="ph1">`Err`</ph> object are set by the generator of an error—Visual Basic, an object, or the programmer.</source>
          <target state="translated">속성은 <ph id="ph1">`Err`</ph> 개체가 오류가 생성자에 의해 설정 됩니다-Visual Basic, 개체 또는 프로그래머가 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>When a run-time error occurs, the properties of the <ph id="ph1">`Err`</ph> object are filled with information that uniquely identifies the error and that you can use to handle the error.</source>
          <target state="translated">런타임 오류가 발생할 때의 속성은 <ph id="ph1">`Err`</ph> 오류를 고유 하 게 식별 하는 정보로 채워진 개체를 오류를 처리 하는 데 사용할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>To generate a run-time error in your code, use the <ph id="ph1">`Raise`</ph> method.</source>
          <target state="translated">코드에서 런타임 오류를 생성 하려면 사용 된 <ph id="ph1">`Raise`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>The <ph id="ph1">`Err`</ph> object's properties are reset to zero or zero-length strings ("") after an <ph id="ph2">`Exit Sub`</ph>, <ph id="ph3">`Exit Function`</ph>, <ph id="ph4">`Exit Property`</ph>, or <ph id="ph5">`Resume Next`</ph> statement within an error-handling routine.</source>
          <target state="translated"><ph id="ph1">`Err`</ph> 개체의 속성을 0 또는 빈 문자열 다시 설정 됩니다 ("") 한 후는 <ph id="ph2">`Exit Sub`</ph>, <ph id="ph3">`Exit Function`</ph>, <ph id="ph4">`Exit Property`</ph>, 또는 <ph id="ph5">`Resume Next`</ph> 오류 처리 루틴 내에 문의 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Using any form of the <ph id="ph1">`Resume`</ph> statement outside of an error-handling routine will not reset the <ph id="ph2">`Err`</ph> object's properties.</source>
          <target state="translated">모든 형태를 사용 하는 <ph id="ph1">`Resume`</ph> 오류 처리 루틴 외부로 다시 설정 되지 것입니다는 <ph id="ph2">`Err`</ph> 개체의 속성입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>You can use the <ph id="ph1">`Clear`</ph> method to explicitly reset <ph id="ph2">`Err`</ph>.</source>
          <target state="translated">사용할 수는 <ph id="ph1">`Clear`</ph> 메서드를 명시적으로 다시 설정할 <ph id="ph2">`Err`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Use the <ph id="ph1">`Raise`</ph> method rather than the <ph id="ph2">`Error`</ph> statement to generate run-time errors for system errors and class modules.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`Raise`</ph> 메서드 보다는 <ph id="ph2">`Error`</ph> 시스템 오류에 대 한 런타임 오류를 생성 하 고 클래스 모듈 문을 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Your decision about whether to use the <ph id="ph1">`Raise`</ph> method in other code depends on the richness of the information you want to return.</source>
          <target state="translated">사용할지 여부를 결정 하는 <ph id="ph1">`Raise`</ph> 다른 코드에서 메서드 반환 하려는 정보의 양에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>The <ph id="ph1">`Err`</ph> object is an intrinsic object with global scope.</source>
          <target state="translated"><ph id="ph1">`Err`</ph> 개체는 글로벌 범위를 갖는 내장 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Therefore, you do not need to create an instance of it in your code.</source>
          <target state="translated">따라서 코드에 해당 형식의 인스턴스를 만들 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>This example uses the properties of the <ph id="ph1">`Err`</ph> object in constructing an error-message dialog box.</source>
          <target state="translated">속성을 사용 하 여이 예제는 <ph id="ph1">`Err`</ph> 개체 오류 메시지 대화 상자를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.Err">
          <source>Notice that if you use the <ph id="ph1">`Clear`</ph> method first, when you generate a Visual Basic error with the <ph id="ph2">`Raise`</ph> method, Visual Basic's default values become the properties of the <ph id="ph3">`Err`</ph> object.</source>
          <target state="translated">사용 하는 경우 다음에 유의 <ph id="ph1">`Clear`</ph> 메서드와 Visual Basic 오류를 생성 하면 첫 번째는 <ph id="ph2">`Raise`</ph> 메서드, Visual Basic의 기본 값의 속성 됩니다는 <ph id="ph3">`Err`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> variable.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 변수입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether a variable points to an array.</source>
          <target state="translated">변수가 배열을 가리키고 있는지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether a variable points to an array.</source>
          <target state="translated">변수가 배열을 가리키고 있는지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source><ph id="ph1">`IsArray`</ph> returns <ph id="ph2">`True`</ph> if the variable points to an array; otherwise, it returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsArray`</ph> 반환 <ph id="ph2">`True`</ph> 변수가 배열을 가리키는지; 그렇지 않으면 반환 <ph id="ph3">`False`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source><ph id="ph1">`IsArray`</ph> is especially useful with objects that might contain arrays.</source>
          <target state="translated"><ph id="ph1">`IsArray`</ph> 배열을 포함 하는 개체와 특히 유용 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
          <source>This example uses the <ph id="ph1">`IsArray`</ph> function to check if several variables refer to an array.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`IsArray`</ph> 함수를 여러 변수 배열 참조 하는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 식입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression represents a valid <ph id="ph2">&lt;see langword="Date" /&gt;</ph> value.</source>
          <target state="translated">식이 올바른 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 나타내는지 여부를 알리는 <ph id="ph2">&lt;see langword="Date" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression represents a valid <ph id="ph2">&lt;see langword="Date" /&gt;</ph> value.</source>
          <target state="translated">식이 올바른 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 나타내는지 여부를 알리는 <ph id="ph2">&lt;see langword="Date" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source><ph id="ph1">`IsDate`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> is of the <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> data type or can be converted to it; otherwise, it returns <ph id="ph5">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsDate`</ph> 반환 <ph id="ph2">`True`</ph> 경우 <ph id="ph3">`Expression`</ph> 입니다는 <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> 데이터 입력 수에 변환 된 없으면, 반환 하거나 <ph id="ph5">`False`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> data type holds both a date value and a time value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 데이터 형식은 날짜 값과 시간 값을 갖습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source><ph id="ph1">`IsDate`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> represents a valid date, a valid time, or a valid date and time.</source>
          <target state="translated"><ph id="ph1">`IsDate`</ph> 반환 <ph id="ph2">`True`</ph> 경우 <ph id="ph3">`Expression`</ph> 유효한 날짜, 유효한 시간 또는 유효한 날짜 및 시간을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>The following example uses the <ph id="ph1">`IsDate`</ph> function to determine if several variables represent valid <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`IsDate`</ph> 여러 변수를 나타내는 유효한 경우 확인 하는 함수 <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
          <source>In the preceding example, <ph id="ph1">`IsDate`</ph> returns <ph id="ph2">`True`</ph> for the first four calls and <ph id="ph3">`False`</ph> for the last call.</source>
          <target state="translated">앞의 예제에서 <ph id="ph1">`IsDate`</ph> 반환 <ph id="ph2">`True`</ph> 처음 네 개의 호출에 대 한 및 <ph id="ph3">`False`</ph> 마지막 호출에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 식입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression evaluates to the <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> class.</source>
          <target state="translated">식이 <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> 클래스로 계산되는지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression evaluates to the <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> class.</source>
          <target state="translated">식이 <ph id="ph2">&lt;see cref="T:System.DBNull" /&gt;</ph> 클래스로 계산되는지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source><ph id="ph1">`IsDBNull`</ph> returns <ph id="ph2">`True`</ph> if the data type of <ph id="ph3">`Expression`</ph> evaluates to the <ph id="ph4">&lt;xref:System.DBNull&gt;</ph> type; otherwise, <ph id="ph5">`IsDBNull`</ph> returns <ph id="ph6">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsDBNull`</ph> 반환 <ph id="ph2">`True`</ph> 의 데이터 형식이 <ph id="ph3">`Expression`</ph> 로 평가 되는 <ph id="ph4">&lt;xref:System.DBNull&gt;</ph> 입력; 그렇지 않으면 <ph id="ph5">`IsDBNull`</ph> 반환 <ph id="ph6">`False`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.DBNull?displayProperty=nameWithType&gt;</ph> value indicates that the <ph id="ph2">`Object`</ph> represents missing or nonexistent data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.DBNull?displayProperty=nameWithType&gt;</ph> 값 이면는 <ph id="ph2">`Object`</ph> 없거나 존재 하지 않는 데이터를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source><ph id="ph1">`DBNull`</ph> is not the same as <ph id="ph2">`Nothing`</ph>, which indicates that a variable has not yet been initialized.</source>
          <target state="translated"><ph id="ph1">`DBNull`</ph> 와 동일 하지는 <ph id="ph2">`Nothing`</ph>는 변수가 초기화 되지 않았음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source><ph id="ph1">`DBNull`</ph> is also not the same as a zero-length string (<ph id="ph2">`""`</ph>), which is sometimes referred to as a null string.</source>
          <target state="translated"><ph id="ph1">`DBNull`</ph> 또한 같지 않습니다 길이가 0 인 문자열 (<ph id="ph2">`""`</ph>), null 문자열 참조 되는 경우에 따라 있는 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
          <source>This example uses the <ph id="ph1">`IsDBNull`</ph> function to determine if a variable evaluates to <ph id="ph2">`DBNull`</ph>.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`IsDBNull`</ph> 함수를 확인 하는 경우 변수 <ph id="ph2">`DBNull`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 식입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression is an exception type.</source>
          <target state="translated">식이 예외 형식인지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression is an exception type.</source>
          <target state="translated">식이 예외 형식인지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source><ph id="ph1">`IsError`</ph> returns <ph id="ph2">`True`</ph> if the expression represents an <ph id="ph3">`Object`</ph> variable that derives from the <ph id="ph4">&lt;xref:System.Exception&gt;</ph> class in the <ph id="ph5">&lt;xref:System&gt;</ph> namespace.</source>
          <target state="translated"><ph id="ph1">`IsError`</ph> 반환 <ph id="ph2">`True`</ph> 식이 나타내는 경우는 <ph id="ph3">`Object`</ph> 변수에서 파생 되는 <ph id="ph4">&lt;xref:System.Exception&gt;</ph> 클래스에 <ph id="ph5">&lt;xref:System&gt;</ph> 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source>An exception that derives from <ph id="ph1">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph> can be caught with the <ph id="ph2">`Try...Catch...Finally`</ph> statements.</source>
          <target state="translated">파생 되는 예외 <ph id="ph1">&lt;xref:System.Exception?displayProperty=nameWithType&gt;</ph> 와 낼 수 있습니다는 <ph id="ph2">`Try...Catch...Finally`</ph> 문.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
          <source>The following example uses the <ph id="ph1">`IsError`</ph> function to check if an expression represents a system exception.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`IsError`</ph> 을 확인 하는 경우 식을 시스템 예외를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 식입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression has no object assigned to it.</source>
          <target state="translated">식에 할당된 개체가 있는지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression has no object assigned to it.</source>
          <target state="translated">식에 할당된 개체가 있는지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source><ph id="ph1">`IsNothing`</ph> returns <ph id="ph2">`True`</ph> if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNothing`</ph> 반환 <ph id="ph2">`True`</ph> 반환 하는 경우 식이 현재 개체에 할당 된, 그렇지 않으면 되지 않는 개체 변수를 나타내는, <ph id="ph3">`False`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source><ph id="ph1">`IsNothing`</ph> is intended to work on reference types.</source>
          <target state="translated"><ph id="ph1">`IsNothing`</ph> 참조 형식에서 작동 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>A value type cannot hold a value of  and reverts to its default value if you assign <ph id="ph1">`Nothing`</ph> to it.</source>
          <target state="translated">값 형식을의 값을 보유할 수 없습니다 및 할당 하는 경우 값이 기본값으로 되돌아갑니다 <ph id="ph1">`Nothing`</ph> 에 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>If you supply a value type in <ph id="ph1">`Expression`</ph>, <ph id="ph2">`IsNothing`</ph> always returns <ph id="ph3">`False`</ph>.</source>
          <target state="translated">에 값 형식을 제공 하는 경우 <ph id="ph1">`Expression`</ph>, <ph id="ph2">`IsNothing`</ph> 항상 반환 <ph id="ph3">`False`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
          <source>The following example uses the <ph id="ph1">`IsNothing`</ph> function to determine if an object variable is associated with any object instance.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`IsNothing`</ph> 개체 변수에 모든 개체 인스턴스와 연결 되어 있는지 확인 하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 식입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression can be evaluated as a number.</source>
          <target state="translated">식이 숫자로 계산될 수 있는지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression can be evaluated as a number.</source>
          <target state="translated">식이 숫자로 계산될 수 있는지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`True`</ph> if the data type of <ph id="ph3">`Expression`</ph> is <ph id="ph4">`Boolean`</ph>, <ph id="ph5">`Byte`</ph>, <ph id="ph6">`Decimal`</ph>, <ph id="ph7">`Double`</ph>, <ph id="ph8">`Integer`</ph>, <ph id="ph9">`Long`</ph>, <ph id="ph10">`SByte`</ph>, <ph id="ph11">`Short`</ph>, <ph id="ph12">`Single`</ph>, <ph id="ph13">`UInteger`</ph>, <ph id="ph14">`ULong`</ph>, or <ph id="ph15">`UShort`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph> 반환 <ph id="ph2">`True`</ph> 의 데이터 형식이 <ph id="ph3">`Expression`</ph> 은 <ph id="ph4">`Boolean`</ph>, <ph id="ph5">`Byte`</ph>, <ph id="ph6">`Decimal`</ph>, <ph id="ph7">`Double`</ph>, <ph id="ph8">`Integer`</ph>, <ph id="ph9">`Long`</ph>, <ph id="ph10">`SByte`</ph>, <ph id="ph11">`Short`</ph>, <ph id="ph12">`Single`</ph>, <ph id="ph13">`UInteger`</ph>, <ph id="ph14">`ULong`</ph>, 또는 <ph id="ph15">`UShort`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>It also returns <ph id="ph1">`True`</ph> if <ph id="ph2">`Expression`</ph> is a <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, or <ph id="ph5">`Object`</ph> that can be successfully converted to a number.</source>
          <target state="translated">또한 반환 <ph id="ph1">`True`</ph> 경우 <ph id="ph2">`Expression`</ph> 는 <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, 또는 <ph id="ph5">`Object`</ph> 숫자로 성공적으로 변환할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">`Expression`</ph> can contain non-numeric characters.</source>
          <target state="translated"><ph id="ph1">`Expression`</ph> 숫자가 아닌 문자를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> is a string that contains a valid hexadecimal or octal number.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph> 반환 <ph id="ph2">`True`</ph> 경우 <ph id="ph3">`Expression`</ph> 유효한 16 진수 또는 8 진수 숫자를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">`IsNumeric`</ph> also returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> contains a valid numeric expression that begins with a + or - character or contains commas.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph> 도 반환 <ph id="ph2">`True`</ph> 경우 <ph id="ph3">`Expression`</ph> 로 시작 하는 유효한 숫자 식에 포함 되어는 + 또는-문자 또는 쉼표를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source><ph id="ph1">`IsNumeric`</ph> returns <ph id="ph2">`False`</ph> if <ph id="ph3">`Expression`</ph> is of data type <ph id="ph4">`Date`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsNumeric`</ph> 반환 <ph id="ph2">`False`</ph> 경우 <ph id="ph3">`Expression`</ph> 데이터 형식의 <ph id="ph4">`Date`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>It returns <ph id="ph1">`False`</ph> if <ph id="ph2">`Expression`</ph> is a <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, or <ph id="ph5">`Object`</ph> that cannot be successfully converted to a number.</source>
          <target state="translated">반환 <ph id="ph1">`False`</ph> 경우 <ph id="ph2">`Expression`</ph> 는 <ph id="ph3">`Char`</ph>, <ph id="ph4">`String`</ph>, 또는 <ph id="ph5">`Object`</ph> 를 변환할 수 없는 성공적으로 숫자입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
          <source>The following example uses the <ph id="ph1">`IsNumeric`</ph> function to determine if the contents of a variable can be evaluated as a number.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`IsNumeric`</ph> 함수를 숫자로 변수의 내용을 경우 평가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> expression.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 식입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression evaluates to a reference type.</source>
          <target state="translated">식이 참조 형식으로 계산될 수 있는지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether an expression evaluates to a reference type.</source>
          <target state="translated">식이 참조 형식으로 계산될 수 있는지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source><ph id="ph1">`IsReference`</ph> returns <ph id="ph2">`True`</ph> if <ph id="ph3">`Expression`</ph> represents a reference type, such as a class instance, a <ph id="ph4">`String`</ph> type, or an array of any type; otherwise, it returns <ph id="ph5">`False`</ph>.</source>
          <target state="translated"><ph id="ph1">`IsReference`</ph> 반환 <ph id="ph2">`True`</ph> 경우 <ph id="ph3">`Expression`</ph> 클래스 인스턴스를 같은 참조 형식, 나타냅니다는 <ph id="ph4">`String`</ph> 형식 또는 모든 형식의; 배열 그렇지 <ph id="ph5">`False`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>A reference type contains a pointer to data stored elsewhere in memory.</source>
          <target state="translated">참조 형식이 다른 위치에서 메모리에 저장 된 데이터에 대 한 포인터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>A value type contains its own data.</source>
          <target state="translated">값 형식 자체 데이터를 포함합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>This example uses the <ph id="ph1">`IsReference`</ph> function to check if several variables refer to reference types.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`IsReference`</ph> 함수를 참조 형식에 여러 변수를 참조 하는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>In the preceding example, the first three calls to <ph id="ph1">`IsReference`</ph> return <ph id="ph2">`True`</ph>.</source>
          <target state="translated">위의 예제에서 처음 3 개를 호출 <ph id="ph1">`IsReference`</ph> 반환 <ph id="ph2">`True`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
          <source>The last call returns <ph id="ph1">`False`</ph>, because <ph id="ph2">`Integer`</ph> is a value type, not a reference type.</source>
          <target state="translated">마지막 호출에서 반환 <ph id="ph1">`False`</ph>때문에, <ph id="ph2">`Integer`</ph> 는 참조 형식이 아닌 값 형식입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Array of any data type.</source>
          <target state="translated">데이터 형식의 배열로,</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>The array in which you want to find the lowest possible subscript of a dimension.</source>
          <target state="translated">차원의 가능한 최저 첨자를 찾을 배열입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>The dimension for which the lowest possible subscript is to be returned.</source>
          <target state="translated">가능한 최저 첨자가 반환될 차원입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Use 1 for the first dimension, 2 for the second, and so on.</source>
          <target state="translated">첫 번째 차원에는 1, 두 번째 차원에는 2를 사용하는 방식으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Rank<ept id="p1">&lt;/c&gt;</ept> is omitted, 1 is assumed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Rank<ept id="p1">&lt;/c&gt;</ept>가 생략되면 1이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Returns the lowest available subscript for the indicated dimension of an array.</source>
          <target state="translated">배열의 표시된 차원에 사용할 수 있는 최저 첨자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>The lowest value the subscript for the specified dimension can contain.</source>
          <target state="translated">지정한 차원의 첨자에 포함될 수 있는 가장 낮은 값입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;see langword="LBound" /&gt;</ph> always returns 0 as long as <ph id="ph2">&lt;paramref name="Array" /&gt;</ph> has been initialized, even if it has no elements, for example if it is a zero-length string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="LBound" /&gt;</ph>는 <ph id="ph2">&lt;paramref name="Array" /&gt;</ph>가 초기화된 경우 길이가 0인 문자열과 같이 요소가 없어도 항상 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="Array" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>, <ph id="ph3">&lt;see langword="LBound" /&gt;</ph> throws an <ph id="ph4">&lt;see cref="T:System.ArgumentNullException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Array" /&gt;</ph>가 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>이면 <ph id="ph3">&lt;see langword="LBound" /&gt;</ph>는 <ph id="ph4">&lt;see cref="T:System.ArgumentNullException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</source>
          <target state="translated">배열 첨자가 0에서 시작하므로 모든 차원에 대해 사용할 수 있는 최저 첨자는 항상 0입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>For an array with the following dimensions, <ph id="ph1">`LBound`</ph> returns the values in the following table:</source>
          <target state="translated">다음 차원 배열에 대해 <ph id="ph1">`LBound`</ph> 다음 표에서 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Call to LBound</source>
          <target state="translated">LBound에 대 한 호출</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source>The following example uses the <ph id="ph1">`LBound`</ph> function to determine the lowest available subscript for the indicated dimension of an array.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`LBound`</ph> 함수 표시 된 차원 배열에 사용할 수 있는 최저 첨자를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Array" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Array" /&gt;</ph>가 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Rank" /&gt;</ph> less than 1, or <ph id="ph2">&lt;paramref name="Rank" /&gt;</ph> is greater than the rank of <ph id="ph3">&lt;paramref name="Array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Rank" /&gt;</ph>가 1보다 작거나 <ph id="ph2">&lt;paramref name="Rank" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="Array" /&gt;</ph>의 차수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>A whole number in the range 0–15.</source>
          <target state="translated">0에서 15 사이의 정수입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the RGB color code corresponding to the specified color number.</source>
          <target state="translated">지정한 색 번호에 해당되는 RGB 색 코드를 나타내는 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing the RGB color code corresponding to the specified color number.</source>
          <target state="translated">지정한 색 번호에 해당되는 RGB 색 코드를 나타내는 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</source>
          <target state="translated">반환된 된 값 최하위 바이트 부터는 Visual Basic 언어에서 사용 하는 RGB 시스템의 적절 한 색을 설정 하는 데 빨강, 녹색 및 파랑 값을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>The <ph id="ph1">`Color`</ph> argument has these settings.</source>
          <target state="translated"><ph id="ph1">`Color`</ph> 인수에 이러한 설정이 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Number</source>
          <target state="translated">수</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Color</source>
          <target state="translated">색</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Number</source>
          <target state="translated">수</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Color</source>
          <target state="translated">색</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Black</source>
          <target state="translated">검정</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Gray</source>
          <target state="translated">회색</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Blue</source>
          <target state="translated">파랑</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>9</source>
          <target state="translated">10</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light blue</source>
          <target state="translated">연한 파란색</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Green</source>
          <target state="translated">녹색</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>10</source>
          <target state="translated">10</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light green</source>
          <target state="translated">연한 녹색</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Cyan</source>
          <target state="translated">녹청</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>11</source>
          <target state="translated">11</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light cyan</source>
          <target state="translated">밝은 녹청</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Red</source>
          <target state="translated">빨강</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>12</source>
          <target state="translated">12</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light red</source>
          <target state="translated">밝은 빨강</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Magenta</source>
          <target state="translated">자홍</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>13</source>
          <target state="translated">13</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light magenta</source>
          <target state="translated">밝은 자홍</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>6</source>
          <target state="translated">6</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Yellow</source>
          <target state="translated">노랑</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>14</source>
          <target state="translated">14</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Light yellow</source>
          <target state="translated">연한 노랑</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>White</source>
          <target state="translated">하얀</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>15</source>
          <target state="translated">15</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>Bright white</source>
          <target state="translated">밝은 흰색</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source>This example uses the <ph id="ph1">`QBColor`</ph> function to change to the color indicated by <ph id="ph2">`colorInteger`</ph>.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`QBColor`</ph> 색으로 변경 하는 함수를 가리키는 <ph id="ph2">`colorInteger`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source><ph id="ph1">`QBColor`</ph> accepts integer values between 0 and 15.</source>
          <target state="translated"><ph id="ph1">`QBColor`</ph> 0에서 15 사이의 정수 값을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Color" /&gt;</ph> is outside of range 0 to 15, inclusive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Color" /&gt;</ph>가 0부터 15까지의 범위를 벗어났습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> in the range 0–255, inclusive, that represents the intensity of the red component of the color.</source>
          <target state="translated">0에서 255(포함) 사이의 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 형식으로, 빨간색의 농도를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> in the range 0–255, inclusive, that represents the intensity of the green component of the color.</source>
          <target state="translated">0에서 255(포함) 사이의 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 형식으로, 녹색의 농도를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> in the range 0–255, inclusive, that represents the intensity of the blue component of the color.</source>
          <target state="translated">0에서 255(포함) 사이의 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 형식으로, 파란색의 농도를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing an RGB color value from a set of red, green and blue color components.</source>
          <target state="translated">빨강, 녹색 및 파랑 색 구성 요소 집합에서 RGB 색상 값을 나타내는 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value representing an RGB color value from a set of red, green and blue color components.</source>
          <target state="translated">빨강, 녹색 및 파랑 색 구성 요소 집합에서 RGB 색상 값을 나타내는 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</source>
          <target state="translated">색 사양을 사용할 수 있는 응용 프로그램 메서드 및 속성 사양이 RGB를 나타내는 숫자 색 값을 기대 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</source>
          <target state="translated">RGB 색상 값 빨간색, 녹색 및 파란색 표시할 특정 색의 상대 강도 지정 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>If the value for any argument to <ph id="ph1">`RGB`</ph> is greater than 255, 255 is used.</source>
          <target state="translated">경우에 대 한 인수 값 <ph id="ph1">`RGB`</ph> 255 보다 크면 255가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>The following table lists some standard colors and the red, green, and blue values they include.</source>
          <target state="translated">다음 표에서 일부 표준 색과 포함 된 빨간색, 녹색 및 파랑 값을 나열 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Color</source>
          <target state="translated">색</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Red value</source>
          <target state="translated">빨간색 값</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Green value</source>
          <target state="translated">녹색 값</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Blue value</source>
          <target state="translated">파란색 값</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Black</source>
          <target state="translated">검정</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Blue</source>
          <target state="translated">파랑</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Green</source>
          <target state="translated">녹색</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Cyan</source>
          <target state="translated">녹청</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Red</source>
          <target state="translated">빨강</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Magenta</source>
          <target state="translated">자홍</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>Yellow</source>
          <target state="translated">노랑</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>White</source>
          <target state="translated">하얀</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source>This example shows how the <ph id="ph1">`RGB`</ph> function is used to return a whole number representing an <ph id="ph2">`RGB`</ph> color value.</source>
          <target state="translated">이 예에서는 방법을 <ph id="ph1">`RGB`</ph> 함수를 사용 하 여 나타내는 정수를 반환 하는 <ph id="ph2">`RGB`</ph> 색상 값입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Green" /&gt;</ph>, <ph id="ph2">&lt;paramref name="Blue" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="Red" /&gt;</ph> is outside of range 0 to 255, inclusive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Green" /&gt;</ph>, <ph id="ph2">&lt;paramref name="Blue" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="Red" /&gt;</ph>가 0부터 255까지의 범위를 벗어났습니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> variable containing a Visual Basic type name.</source>
          <target state="translated">Visual Basic 형식 이름을 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 변수입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing the system data type name of a variable.</source>
          <target state="translated">변수의 시스템 데이터 형식 이름을 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing the system data type name of a variable.</source>
          <target state="translated">변수의 시스템 데이터 형식 이름을 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source><ph id="ph1">`SystemTypeName`</ph> returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</source>
          <target state="translated"><ph id="ph1">`SystemTypeName`</ph> 정규화 된 공용 언어 런타임 (CLR) 형식 이름에 해당 하는 Visual Basic 형식 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>For example, if <ph id="ph1">`VbName`</ph> contains "Date", <ph id="ph2">`SystemTypeName`</ph> returns "System.DateTime".</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`VbName`</ph> "Date" 포함 <ph id="ph2">`SystemTypeName`</ph> "System.DateTime"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>If <ph id="ph1">`SystemTypeName`</ph> does not recognize the value of <ph id="ph2">`VbName`</ph>, it returns <ph id="ph3">`Nothing`</ph> (not the string "Nothing").</source>
          <target state="translated">경우 <ph id="ph1">`SystemTypeName`</ph> 의 값을 인식 하지 않으므로 <ph id="ph2">`VbName`</ph>, 반환 <ph id="ph3">`Nothing`</ph> (문자열이 아니라 "없음").</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
          <source>The following example uses the <ph id="ph1">`SystemTypeName`</ph> function to return data type names for several variables.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`SystemTypeName`</ph> 함수를 여러 변수에 대 한 데이터 형식 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> variable.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 변수입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>If <ph id="ph1">&lt;see langword="Option Strict" /&gt;</ph> is <ph id="ph2">&lt;see langword="Off" /&gt;</ph>, you can pass a variable of any data type except a structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Option Strict" /&gt;</ph>가 <ph id="ph2">&lt;see langword="Off" /&gt;</ph>이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing data-type information about a variable.</source>
          <target state="translated">변수에 대한 데이터 형식 정보를 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing data-type information about a variable.</source>
          <target state="translated">변수에 대한 데이터 형식 정보를 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>The following table shows the <ph id="ph1">`String`</ph> values returned by <ph id="ph2">`TypeName`</ph> for different contents of <ph id="ph3">`VarName`</ph>.</source>
          <target state="translated">다음 표는 <ph id="ph1">`String`</ph> 반환한 값 <ph id="ph2">`TypeName`</ph> 의 서로 다른 내용에 대 한 <ph id="ph3">`VarName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source><ph id="ph1">`VarName`</ph> contents</source>
          <target state="translated"><ph id="ph1">`VarName`</ph> 내용</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>String returned</source>
          <target state="translated">반환 문자열</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>16-bit <ph id="ph1">`True`</ph> or <ph id="ph2">`False`</ph> value type</source>
          <target state="translated">16 비트 <ph id="ph1">`True`</ph> 또는 <ph id="ph2">`False`</ph> 값 형식</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Boolean"</source>
          <target state="translated">"부울"</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>8-bit binary value type</source>
          <target state="translated">8 비트 이진 값 형식</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Byte"</source>
          <target state="translated">"Byte"</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>16-bit character value type</source>
          <target state="translated">16 비트 문자 값 형식</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Char"</source>
          <target state="translated">"Char"</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>64-bit date and time value type</source>
          <target state="translated">64 비트 날짜 및 시간 값 형식</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Date"</source>
          <target state="translated">"Date"</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Reference type indicating missing or nonexistent data</source>
          <target state="translated">누락 되었거나 존재 하지 않는 데이터를 나타내는 참조 형식</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"DBNull"</source>
          <target state="translated">"DBNull"</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>128-bit fixed-point numeric value type</source>
          <target state="translated">128 비트 고정 소수점 숫자 값 형식</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Decimal"</source>
          <target state="translated">"십진수"</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>64-bit floating-point numeric value type</source>
          <target state="translated">64 비트 부동 소수점 숫자 값 형식</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Double"</source>
          <target state="translated">"Double"</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>32-bit integer value type</source>
          <target state="translated">32 비트 정수 값 형식</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Integer"</source>
          <target state="translated">"Integer"</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Reference type pointing to an unspecialized object</source>
          <target state="translated">지정 되지 않은 개체를 가리키는 참조 형식</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Object"</source>
          <target state="translated">"개체"</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Reference type pointing to a specialized object created from class <bpt id="p1">*</bpt>objectclass<ept id="p1">*</ept></source>
          <target state="translated">클래스에서 지정 된 개체를 가리키는 참조 형식 <bpt id="p1">*</bpt>개체 클래스<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"<bpt id="p1">*</bpt>objectclass<ept id="p1">*</ept>"</source>
          <target state="translated">"<bpt id="p1">*</bpt>objectclass<ept id="p1">*</ept>"</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>64-bit integer value type</source>
          <target state="translated">64 비트 정수 값 형식</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Long"</source>
          <target state="translated">"시간"</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Reference type with no object currently assigned to it</source>
          <target state="translated">에 현재 할당 된 개체가 참조 형식</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Nothing"</source>
          <target state="translated">"없음"</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>8-bit signed integer value type</source>
          <target state="translated">8 비트 부호 있는 정수 값 형식</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"SByte"</source>
          <target state="translated">"SByte"</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>16-bit integer value type</source>
          <target state="translated">16 비트 정수 값 형식</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Short"</source>
          <target state="translated">"짧은"</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>32-bit floating-point numeric value type</source>
          <target state="translated">32 비트 부동 소수점 숫자 값 형식</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"Single"</source>
          <target state="translated">"Single"</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Reference type pointing to a string of 16-bit characters</source>
          <target state="translated">16 비트 문자의 문자열을 가리키는 참조 형식</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"String"</source>
          <target state="translated">"String"</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>32-bit unsigned integer value type</source>
          <target state="translated">32 비트 부호 없는 정수 값 형식</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"UInteger"</source>
          <target state="translated">"UInteger"</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>64-bit unsigned integer value type</source>
          <target state="translated">64 비트 부호 없는 정수 값 형식</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"ULong"</source>
          <target state="translated">"ULong"</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>16-bit unsigned integer value type</source>
          <target state="translated">16 비트 부호 없는 정수 값 형식</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>"UShort"</source>
          <target state="translated">"UShort"</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>If <ph id="ph1">`VarName`</ph> is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</source>
          <target state="translated">경우 <ph id="ph1">`VarName`</ph> 은 배열, 반환 되는 문자열 앞의 표에 빈 괄호가 추가 된 문자열 중 하나가 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>For example, if <ph id="ph1">`VarName`</ph> points to an array of integers, <ph id="ph2">`TypeName`</ph> returns "Integer()".</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`VarName`</ph> 정수의 배열을 가리킵니다 <ph id="ph2">`TypeName`</ph> "필수적 요소"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>When <ph id="ph1">`TypeName`</ph> returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</source>
          <target state="translated">때 <ph id="ph1">`TypeName`</ph> 참조 형식의 이름을 반환 이름만 자체를 정규화 된 이름이 아니라, 클래스 등 반환 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>For example, if <ph id="ph1">`VarName`</ph> points to an object of class <ph id="ph2">&lt;xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">`TypeName`</ph> returns "PaperSource".</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`VarName`</ph> 클래스의 개체를 가리키는 <ph id="ph2">&lt;xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">`TypeName`</ph> "PaperSource"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, <ph id="ph1">`TypeName`</ph> returns "Nothing".</source>
          <target state="translated">변수가 특정 클래스 형식으로 선언 하지만 개체가 할당, 없는 경우에 <ph id="ph1">`TypeName`</ph> "없음"을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
          <source>The following example uses the <ph id="ph1">`TypeName`</ph> function to return data type information about several variables.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`TypeName`</ph> 함수 여러 변수에 대 한 데이터 형식 정보를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Array of any data type.</source>
          <target state="translated">데이터 형식의 배열로,</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The array in which you want to find the highest possible subscript of a dimension.</source>
          <target state="translated">차원의 가능한 최고 첨자를 찾을 배열입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The dimension for which the highest possible subscript is to be returned.</source>
          <target state="translated">가능한 최고 첨자가 반환될 차원입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Use 1 for the first dimension, 2 for the second, and so on.</source>
          <target state="translated">첫 번째 차원에는 1, 두 번째 차원에는 2를 사용하는 방식으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>Rank<ept id="p1">&lt;/c&gt;</ept> is omitted, 1 is assumed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Rank<ept id="p1">&lt;/c&gt;</ept>가 생략되면 1이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Returns the highest available subscript for the indicated dimension of an array.</source>
          <target state="translated">배열의 표시된 차원에 사용할 수 있는 최고 첨자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The highest value the subscript for the specified dimension can contain.</source>
          <target state="translated">지정한 차원의 첨자에 포함될 수 있는 가장 높은 값입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="Array" /&gt;</ph> has only one element, <ph id="ph2">&lt;see langword="UBound" /&gt;</ph> returns 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Array" /&gt;</ph>에 요소가 하나만 있으면 <ph id="ph2">&lt;see langword="UBound" /&gt;</ph>에서 0을 반환합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="Array" /&gt;</ph> has no elements, for example if it is a zero-length string, <ph id="ph2">&lt;see langword="UBound" /&gt;</ph> returns -1.</source>
          <target state="translated">길이가 0인 문자열과 같이 <ph id="ph1">&lt;paramref name="Array" /&gt;</ph>에 요소가 없으면 <ph id="ph2">&lt;see langword="UBound" /&gt;</ph>에서 -1을 반환합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</source>
          <target state="translated">배열 첨자가 0에서 시작, 차원의 길이 해당 차원에 사용할 수 있는 가장 높은 첨자 보다 1 큽니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>For an array with the following dimensions, <ph id="ph1">`UBound`</ph> returns the values in the following table:</source>
          <target state="translated">다음 차원 배열에 대해 <ph id="ph1">`UBound`</ph> 다음 표에서 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Call to UBound</source>
          <target state="translated">UBound에 대 한 호출</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>Return value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>100</source>
          <target state="translated">100</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>You can use <ph id="ph1">`UBound`</ph> to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</source>
          <target state="translated">사용할 수 있습니다 <ph id="ph1">`UBound`</ph> 전체를 확인 하려면 수 있지만 배열에 있는 요소의 수 첨자가 0에서 시작 하는 팩트에 대 한 계정에 반환 하는 값 조정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The following example calculates the total size of the array <ph id="ph1">`a`</ph> in the preceding example:</source>
          <target state="translated">다음 예제에서는 배열의 전체 크기를 계산 <ph id="ph1">`a`</ph> 앞의 예제에서:</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The value calculated for <ph id="ph1">`total`</ph> is 3030, which is 101 * 6 * 5.</source>
          <target state="translated">값에 대 한 계산 <ph id="ph1">`total`</ph> 는 3030은 101 * 6 * 5입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source>The following example uses the <ph id="ph1">`UBound`</ph> function to determine the highest available subscript for the indicated dimension of an array.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`UBound`</ph> 함수는 배열의 지정 된 차원에 대 한 사용 가능한 가장 높은 첨자를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Array" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Array" /&gt;</ph>가 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="Rank" /&gt;</ph> is less than 1, or <ph id="ph2">&lt;paramref name="Rank" /&gt;</ph> is greater than the rank of <ph id="ph3">&lt;paramref name="Array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Rank" /&gt;</ph>가 1보다 작거나 <ph id="ph2">&lt;paramref name="Rank" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="Array" /&gt;</ph>의 차수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source><ph id="ph1">&lt;see langword="Object" /&gt;</ph> variable.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Object" /&gt;</ph> 변수입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>If <ph id="ph1">&lt;see langword="Option Strict" /&gt;</ph> is <ph id="ph2">&lt;see langword="Off" /&gt;</ph>, you can pass a variable of any data type except a structure.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Option Strict" /&gt;</ph>가 <ph id="ph2">&lt;see langword="Off" /&gt;</ph>이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value containing the data type classification of a variable.</source>
          <target state="translated">변수의 데이터 형식 분류를 포함하는 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Returns an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> value containing the data type classification of a variable.</source>
          <target state="translated">변수의 데이터 형식 분류를 포함하는 <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>The integer value returned by <ph id="ph1">`VarType`</ph> is a member of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.VariantType&gt;</ph>.</source>
          <target state="translated">반환 된 정수 값 <ph id="ph1">`VarType`</ph> 의 구성원은 <ph id="ph2">&lt;xref:Microsoft.VisualBasic.VariantType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>The following table shows the values returned by <ph id="ph1">`VarType`</ph> for special cases of <ph id="ph2">`VarName`</ph>.</source>
          <target state="translated">다음 표에서 반환 하는 값을 보여 줍니다. <ph id="ph1">`VarType`</ph> 의 특수 한 경우에 대 한 <ph id="ph2">`VarName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Data type represented by <ph id="ph1">`VarName`</ph></source>
          <target state="translated">데이터 형식으로 표시 <ph id="ph1">`VarName`</ph></target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Value returned by <ph id="ph1">`VarType`</ph></source>
          <target state="translated">반환 된 값 <ph id="ph1">`VarType`</ph></target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source><bpt id="p1">[</bpt>Nothing<ept id="p1">](~/docs/visual-basic/language-reference/nothing.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Nothing<ept id="p1">](~/docs/visual-basic/language-reference/nothing.md)</ept></target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Enumeration</source>
          <target state="translated">열거형</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Underlying data type (<ph id="ph1">`SByte`</ph>, <ph id="ph2">`Byte`</ph>, <ph id="ph3">`Short`</ph>, <ph id="ph4">`UShort`</ph>, <ph id="ph5">`Integer`</ph>, <ph id="ph6">`UInteger`</ph>, <ph id="ph7">`Long`</ph>, or <ph id="ph8">`ULong`</ph>)</source>
          <target state="translated">기본 데이터 형식 (<ph id="ph1">`SByte`</ph>, <ph id="ph2">`Byte`</ph>, <ph id="ph3">`Short`</ph>, <ph id="ph4">`UShort`</ph>, <ph id="ph5">`Integer`</ph>, <ph id="ph6">`UInteger`</ph>, <ph id="ph7">`Long`</ph>, 또는 <ph id="ph8">`ULong`</ph>)</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Array</source>
          <target state="translated">배열</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Bitwise OR of array element type and <ph id="ph1">`VariantType.Array`</ph></source>
          <target state="translated">배열 요소 형식은의 비트 OR 및 <ph id="ph1">`VariantType.Array`</ph></target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Array of arrays</source>
          <target state="translated">형식 배열</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Bitwise OR of <ph id="ph1">`VariantType.Object`</ph> and <ph id="ph2">`VariantType.Array`</ph></source>
          <target state="translated">비트 OR <ph id="ph1">`VariantType.Object`</ph> 및 <ph id="ph2">`VariantType.Array`</ph></target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Structure (<ph id="ph1">&lt;xref:System.ValueType?displayProperty=nameWithType&gt;</ph>)</source>
          <target state="translated">구조 (<ph id="ph1">&lt;xref:System.ValueType?displayProperty=nameWithType&gt;</ph>)</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>Unknown</source>
          <target state="translated">알 수 없음</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
          <source>The following example uses the <ph id="ph1">`VarType`</ph> function to return data type classification information about several variables.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`VarType`</ph> 함수 여러 변수에 대 한 데이터 형식을 분류 정보를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>Required.</source>
          <target state="translated">필수.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> variable containing a type name used by the common language runtime.</source>
          <target state="translated">공용 언어 런타임에서 사용되는 형식 이름을 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 변수입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing the Visual Basic data type name of a variable.</source>
          <target state="translated">변수의 Visual Basic 데이터 형식 이름을 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>Returns a <ph id="ph1">&lt;see langword="String" /&gt;</ph> value containing the Visual Basic data type name of a variable.</source>
          <target state="translated">변수의 Visual Basic 데이터 형식 이름을 포함하는 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source><ph id="ph1">`VbTypeName`</ph> returns the Visual Basic type name corresponding to the common language runtime type name.</source>
          <target state="translated"><ph id="ph1">`VbTypeName`</ph> 공용 언어 런타임 형식 이름에 해당 하는 Visual Basic 형식 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>For example, if <ph id="ph1">`UrtName`</ph> contains "Int32" or "System.Int32", <ph id="ph2">`VbTypeName`</ph> returns "Integer".</source>
          <target state="translated">예를 들어 경우 <ph id="ph1">`UrtName`</ph> "Int32" 또는 "System.Int32" 포함 <ph id="ph2">`VbTypeName`</ph> "정수"를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>If <ph id="ph1">`VbTypeName`</ph> does not recognize the value of <ph id="ph2">`UrtName`</ph>, it returns <ph id="ph3">`Nothing`</ph> (not the string "Nothing").</source>
          <target state="translated">경우 <ph id="ph1">`VbTypeName`</ph> 의 값을 인식 하지 않으므로 <ph id="ph2">`UrtName`</ph>, 반환 <ph id="ph3">`Nothing`</ph> (문자열이 아니라 "없음").</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>The type name in <ph id="ph1">`UrtName`</ph> can be obtained from various sources, for example from the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> property in the <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph> array of the <ph id="ph4">&lt;xref:System.Type&gt;</ph> class.</source>
          <target state="translated">에 형식 이름을 <ph id="ph1">`UrtName`</ph> 에서 얻을 수 있습니다 다양 한 원본의 예는 <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> 속성에는 <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph> 배열을 <ph id="ph4">&lt;xref:System.Type&gt;</ph> 클래스.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
          <source>The following example uses the <ph id="ph1">`VbTypeName`</ph> function to return data type names for several variables.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`VbTypeName`</ph> 함수를 여러 변수에 대 한 데이터 형식 이름을 반환 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>