<Type Name="Information" FullName="Microsoft.VisualBasic.Information">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c57dd6007d6c60bd212b9cf55d27c4a45966b12e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Information" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Information extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Information" />
  <TypeSignature Language="VB.NET" Value="Public Module Information" />
  <TypeSignature Language="C++ CLI" Value="public ref class Information sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="79f0a-101">
        <see langword="Information" /> 모듈에는 정보를 반환하고, 테스트하고, 확인하는 프로시저가 포함되어 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79f0a-101">The <see langword="Information" /> module contains the procedures used to return, test for, or verify information.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-102">이 모듈은 Visual Basic 언어 키워드와 오류 정보를 제공, 데이터 유효성 검사, 배열 범위를 결정 및 데이터 형식 및 색 정보를 검색 하는 런타임 라이브러리 멤버를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-102">This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-103">다음 예제에서는 `VbTypeName` 함수를 여러 변수에 대 한 데이터 형식 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-103">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
```  
Dim sysDateName As String = "System.DateTime"  
Dim sysShortName As String = "Int16"  
Dim sysBadName As String = "Nonsense"  
Dim testVbName As String  
testVbName = VbTypeName(sysDateName)   
' Returns "Date".  
testVbName = VbTypeName(sysShortName)   
' Returns "Short".  
testVbName = VbTypeName(sysBadName)   
' Returns Nothing.  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public static int Erl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Erl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Erl" />
      <MemberSignature Language="VB.NET" Value="Public Function Erl () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Erl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79f0a-104">마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-104">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="79f0a-105">읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-105">Read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-106">마지막으로 실행된 문의 줄 번호를 나타내는 정수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-106">Returns an integer indicating the line number of the last executed statement.</span>
          </span>
          <span data-ttu-id="79f0a-107">읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-107">Read-only.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-108">줄 번호 없음를 못한 경우 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-108">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-109">사용 하 여이 예제는 `Erl` 줄 번호를 나타내는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-109">This example uses the `Erl` property to indicate the line number.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Err">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.ErrObject Err ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.ErrObject Err() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.Err" />
      <MemberSignature Language="VB.NET" Value="Public Function Err () As ErrObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::ErrObject ^ Err();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ErrObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79f0a-110">런타임 오류에 대한 정보를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-110">Contains information about run-time errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-111">런타임 오류에 대한 정보를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-111">Contains information about run-time errors.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-112">속성은 `Err` 개체가 오류가 생성자에 의해 설정 됩니다-Visual Basic, 개체 또는 프로그래머가 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-112">The properties of the `Err` object are set by the generator of an error—Visual Basic, an object, or the programmer.</span></span>  
  
 <span data-ttu-id="79f0a-113">런타임 오류가 발생할 때의 속성은 `Err` 오류를 고유 하 게 식별 하는 정보로 채워진 개체를 오류를 처리 하는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-113">When a run-time error occurs, the properties of the `Err` object are filled with information that uniquely identifies the error and that you can use to handle the error.</span></span> <span data-ttu-id="79f0a-114">코드에서 런타임 오류를 생성 하려면 사용 된 `Raise` 메서드.</span><span class="sxs-lookup"><span data-stu-id="79f0a-114">To generate a run-time error in your code, use the `Raise` method.</span></span>  
  
 <span data-ttu-id="79f0a-115">`Err` 개체의 속성을 0 또는 빈 문자열 다시 설정 됩니다 ("") 한 후는 `Exit Sub`, `Exit Function`, `Exit Property`, 또는 `Resume Next` 오류 처리 루틴 내에 문의 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-115">The `Err` object's properties are reset to zero or zero-length strings ("") after an `Exit Sub`, `Exit Function`, `Exit Property`, or `Resume Next` statement within an error-handling routine.</span></span> <span data-ttu-id="79f0a-116">모든 형태를 사용 하는 `Resume` 오류 처리 루틴 외부로 다시 설정 되지 것입니다는 `Err` 개체의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-116">Using any form of the `Resume` statement outside of an error-handling routine will not reset the `Err` object's properties.</span></span> <span data-ttu-id="79f0a-117">사용할 수는 `Clear` 메서드를 명시적으로 다시 설정할 `Err`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-117">You can use the `Clear` method to explicitly reset `Err`.</span></span>  
  
 <span data-ttu-id="79f0a-118">사용 하 여는 `Raise` 메서드 보다는 `Error` 시스템 오류에 대 한 런타임 오류를 생성 하 고 클래스 모듈 문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-118">Use the `Raise` method rather than the `Error` statement to generate run-time errors for system errors and class modules.</span></span> <span data-ttu-id="79f0a-119">사용할지 여부를 결정 하는 `Raise` 다른 코드에서 메서드 반환 하려는 정보의 양에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-119">Your decision about whether to use the `Raise` method in other code depends on the richness of the information you want to return.</span></span>  
  
 <span data-ttu-id="79f0a-120">`Err` 개체는 글로벌 범위를 갖는 내장 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-120">The `Err` object is an intrinsic object with global scope.</span></span> <span data-ttu-id="79f0a-121">따라서 코드에 해당 형식의 인스턴스를 만들 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-121">Therefore, you do not need to create an instance of it in your code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-122">속성을 사용 하 여이 예제는 `Err` 개체 오류 메시지 대화 상자를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-122">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="79f0a-123">사용 하는 경우 다음에 유의 `Clear` 메서드와 Visual Basic 오류를 생성 하면 첫 번째는 `Raise` 메서드, Visual Basic의 기본 값의 속성 됩니다는 `Err` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-123">Notice that if you use the `Clear` method first, when you generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public static bool IsArray (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsArray(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsArray (VarName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsArray(System::Object ^ VarName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="79f0a-124">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-124">Required.</span>
          </span>
          <span data-ttu-id="79f0a-125">
            <see langword="Object" /> 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-125">
              <see langword="Object" /> variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-126">변수가 배열을 가리키고 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-126">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-127">변수가 배열을 가리키고 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-127">Returns a <see langword="Boolean" /> value indicating whether a variable points to an array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-128">`IsArray` 반환 `True` 변수가 배열을 가리키는지; 그렇지 않으면 반환 `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-128">`IsArray` returns `True` if the variable points to an array; otherwise, it returns `False`.</span></span> <span data-ttu-id="79f0a-129">`IsArray` 배열을 포함 하는 개체와 특히 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-129">`IsArray` is especially useful with objects that might contain arrays.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-130">사용 하 여이 예제는 `IsArray` 함수를 여러 변수 배열 참조 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-130">This example uses the `IsArray` function to check if several variables refer to an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static bool IsDate (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDate(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDate (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDate(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="79f0a-131">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-131">Required.</span>
          </span>
          <span data-ttu-id="79f0a-132">
            <see langword="Object" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-132">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-133">식이 올바른 <see langword="Boolean" /> 값을 나타내는지 여부를 알리는 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-133">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-134">식이 올바른 <see langword="Boolean" /> 값을 나타내는지 여부를 알리는 <see langword="Date" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-134">Returns a <see langword="Boolean" /> value indicating whether an expression represents a valid <see langword="Date" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-135">`IsDate` 반환 `True` 경우 `Expression` 입니다는 <xref:System.DateTime> 데이터 입력 수에 변환 된 없으면, 반환 하거나 `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-135">`IsDate` returns `True` if `Expression` is of the <xref:System.DateTime> data type or can be converted to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="79f0a-136"><xref:System.DateTime> 데이터 형식은 날짜 값과 시간 값을 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-136">The <xref:System.DateTime> data type holds both a date value and a time value.</span></span> <span data-ttu-id="79f0a-137">`IsDate` 반환 `True` 경우 `Expression` 유효한 날짜, 유효한 시간 또는 유효한 날짜 및 시간을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-137">`IsDate` returns `True` if `Expression` represents a valid date, a valid time, or a valid date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-138">다음 예제에서는 `IsDate` 여러 변수를 나타내는 유효한 경우 확인 하는 함수 <xref:System.DateTime> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-138">The following example uses the `IsDate` function to determine if several variables represent valid <xref:System.DateTime> values.</span></span>  
  
 [!code-vb[VbVbalrFunctions#35](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#35)]  
  
 <span data-ttu-id="79f0a-139">앞의 예제에서 `IsDate` 반환 `True` 처음 네 개의 호출에 대 한 및 `False` 마지막 호출에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-139">In the preceding example, `IsDate` returns `True` for the first four calls and `False` for the last call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDBNull(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDBNull (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDBNull(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="79f0a-140">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-140">Required.</span>
          </span>
          <span data-ttu-id="79f0a-141">
            <see langword="Object" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-141">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-142">식이 <see cref="T:System.DBNull" /> 클래스로 계산되는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-142">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-143">식이 <see cref="T:System.DBNull" /> 클래스로 계산되는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-143">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to the <see cref="T:System.DBNull" /> class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-144">`IsDBNull` 반환 `True` 의 데이터 형식이 `Expression` 로 평가 되는 <xref:System.DBNull> 입력; 그렇지 않으면 `IsDBNull` 반환 `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-144">`IsDBNull` returns `True` if the data type of `Expression` evaluates to the <xref:System.DBNull> type; otherwise, `IsDBNull` returns `False`.</span></span>  
  
 <span data-ttu-id="79f0a-145"><xref:System.DBNull?displayProperty=nameWithType> 값 이면는 `Object` 없거나 존재 하지 않는 데이터를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-145">The <xref:System.DBNull?displayProperty=nameWithType> value indicates that the `Object` represents missing or nonexistent data.</span></span> <span data-ttu-id="79f0a-146">`DBNull` 와 동일 하지는 `Nothing`는 변수가 초기화 되지 않았음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-146">`DBNull` is not the same as `Nothing`, which indicates that a variable has not yet been initialized.</span></span> <span data-ttu-id="79f0a-147">`DBNull` 또한 같지 않습니다 길이가 0 인 문자열 (`""`), null 문자열 참조 되는 경우에 따라 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-147">`DBNull` is also not the same as a zero-length string (`""`), which is sometimes referred to as a null string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-148">사용 하 여이 예제는 `IsDBNull` 함수를 확인 하는 경우 변수 `DBNull`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-148">This example uses the `IsDBNull` function to determine if a variable evaluates to `DBNull`.</span></span>  
  
 [!code-vb[VbVbalrFunctions#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.DBNull" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public static bool IsError (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsError(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsError(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="79f0a-149">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-149">Required.</span>
          </span>
          <span data-ttu-id="79f0a-150">
            <see langword="Object" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-150">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-151">식이 예외 형식인지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-151">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-152">식이 예외 형식인지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-152">Returns a <see langword="Boolean" /> value indicating whether an expression is an exception type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-153">`IsError` 반환 `True` 식이 나타내는 경우는 `Object` 변수에서 파생 되는 <xref:System.Exception> 클래스에 <xref:System> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-153">`IsError` returns `True` if the expression represents an `Object` variable that derives from the <xref:System.Exception> class in the <xref:System> namespace.</span></span>  
  
 <span data-ttu-id="79f0a-154">파생 되는 예외 <xref:System.Exception?displayProperty=nameWithType> 와 낼 수 있습니다는 `Try...Catch...Finally` 문.</span><span class="sxs-lookup"><span data-stu-id="79f0a-154">An exception that derives from <xref:System.Exception?displayProperty=nameWithType> can be caught with the `Try...Catch...Finally` statements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-155">다음 예제에서는 `IsError` 을 확인 하는 경우 식을 시스템 예외를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-155">The following example uses the `IsError` function to check if an expression represents a system exception.</span></span>  
  
 [!code-vb[VbVbalrFunctions#37](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNothing">
      <MemberSignature Language="C#" Value="public static bool IsNothing (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNothing(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNothing (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNothing(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="79f0a-156">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-156">Required.</span>
          </span>
          <span data-ttu-id="79f0a-157">
            <see langword="Object" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-157">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-158">식에 할당된 개체가 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-158">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-159">식에 할당된 개체가 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-159">Returns a <see langword="Boolean" /> value indicating whether an expression has no object assigned to it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-160">`IsNothing` 반환 `True` 반환 하는 경우 식이 현재 개체에 할당 된, 그렇지 않으면 되지 않는 개체 변수를 나타내는, `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-160">`IsNothing` returns `True` if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="79f0a-161">`IsNothing` 참조 형식에서 작동 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-161">`IsNothing` is intended to work on reference types.</span></span> <span data-ttu-id="79f0a-162">값 형식을의 값을 보유할 수 없습니다 및 할당 하는 경우 값이 기본값으로 되돌아갑니다 `Nothing` 에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-162">A value type cannot hold a value of  and reverts to its default value if you assign `Nothing` to it.</span></span> <span data-ttu-id="79f0a-163">에 값 형식을 제공 하는 경우 `Expression`, `IsNothing` 항상 반환 `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-163">If you supply a value type in `Expression`, `IsNothing` always returns `False`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-164">다음 예제에서는 `IsNothing` 개체 변수에 모든 개체 인스턴스와 연결 되어 있는지 확인 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-164">The following example uses the `IsNothing` function to determine if an object variable is associated with any object instance.</span></span>  
  
 [!code-vb[VbVbalrFunctions#38](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static bool IsNumeric (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNumeric(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumeric (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumeric(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="79f0a-165">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-165">Required.</span>
          </span>
          <span data-ttu-id="79f0a-166">
            <see langword="Object" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-166">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-167">식이 숫자로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-167">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-168">식이 숫자로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-168">Returns a <see langword="Boolean" /> value indicating whether an expression can be evaluated as a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-169">`IsNumeric` 반환 `True` 의 데이터 형식이 `Expression` 은 `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, 또는 `UShort`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-169">`IsNumeric` returns `True` if the data type of `Expression` is `Boolean`, `Byte`, `Decimal`, `Double`, `Integer`, `Long`, `SByte`, `Short`, `Single`, `UInteger`, `ULong`, or `UShort`.</span></span> <span data-ttu-id="79f0a-170">또한 반환 `True` 경우 `Expression` 는 `Char`, `String`, 또는 `Object` 숫자로 성공적으로 변환할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-170">It also returns `True` if `Expression` is a `Char`, `String`, or `Object` that can be successfully converted to a number.</span></span> <span data-ttu-id="79f0a-171">`Expression` 숫자가 아닌 문자를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-171">`Expression` can contain non-numeric characters.</span></span> <span data-ttu-id="79f0a-172">`IsNumeric` 반환 `True` 경우 `Expression` 유효한 16 진수 또는 8 진수 숫자를 포함 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-172">`IsNumeric` returns `True` if `Expression` is a string that contains a valid hexadecimal or octal number.</span></span> <span data-ttu-id="79f0a-173">`IsNumeric` 도 반환 `True` 경우 `Expression` 로 시작 하는 유효한 숫자 식에 포함 되어는 + 또는-문자 또는 쉼표를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-173">`IsNumeric` also returns `True` if `Expression` contains a valid numeric expression that begins with a + or - character or contains commas.</span></span>  
  
 <span data-ttu-id="79f0a-174">`IsNumeric` 반환 `False` 경우 `Expression` 데이터 형식의 `Date`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-174">`IsNumeric` returns `False` if `Expression` is of data type `Date`.</span></span> <span data-ttu-id="79f0a-175">반환 `False` 경우 `Expression` 는 `Char`, `String`, 또는 `Object` 를 변환할 수 없는 성공적으로 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-175">It returns `False` if `Expression` is a `Char`, `String`, or `Object` that cannot be successfully converted to a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-176">다음 예제에서는 `IsNumeric` 함수를 숫자로 변수의 내용을 경우 평가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-176">The following example uses the `IsNumeric` function to determine if the contents of a variable can be evaluated as a number.</span></span>  
  
 [!code-vb[VbVbalrFunctions#39](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#39)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public static bool IsReference (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReference(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReference (Expression As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReference(System::Object ^ Expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="79f0a-177">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-177">Required.</span>
          </span>
          <span data-ttu-id="79f0a-178">
            <see langword="Object" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-178">
              <see langword="Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-179">식이 참조 형식으로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-179">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-180">식이 참조 형식으로 계산될 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-180">Returns a <see langword="Boolean" /> value indicating whether an expression evaluates to a reference type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-181">`IsReference` 반환 `True` 경우 `Expression` 클래스 인스턴스를 같은 참조 형식, 나타냅니다는 `String` 형식 또는 모든 형식의; 배열 그렇지 `False`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-181">`IsReference` returns `True` if `Expression` represents a reference type, such as a class instance, a `String` type, or an array of any type; otherwise, it returns `False`.</span></span>  
  
 <span data-ttu-id="79f0a-182">참조 형식이 다른 위치에서 메모리에 저장 된 데이터에 대 한 포인터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-182">A reference type contains a pointer to data stored elsewhere in memory.</span></span> <span data-ttu-id="79f0a-183">값 형식 자체 데이터를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-183">A value type contains its own data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-184">사용 하 여이 예제는 `IsReference` 함수를 참조 형식에 여러 변수를 참조 하는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-184">This example uses the `IsReference` function to check if several variables refer to reference types.</span></span>  
  
 [!code-vb[VbVbalrFunctions#40](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#40)]  
  
 <span data-ttu-id="79f0a-185">위의 예제에서 처음 3 개를 호출 `IsReference` 반환 `True`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-185">In the preceding example, the first three calls to `IsReference` return `True`.</span></span> <span data-ttu-id="79f0a-186">마지막 호출에서 반환 `False`때문에, `Integer` 는 참조 형식이 아닌 값 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-186">The last call returns `False`, because `Integer` is a value type, not a reference type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public static int LBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 LBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array">
          <span data-ttu-id="79f0a-187">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-187">Required.</span>
          </span>
          <span data-ttu-id="79f0a-188">데이터 형식의 배열로,</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-188">Array of any data type.</span>
          </span>
          <span data-ttu-id="79f0a-189">차원의 가능한 최저 첨자를 찾을 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-189">The array in which you want to find the lowest possible subscript of a dimension.</span>
          </span>
        </param>
        <param name="Rank">
          <span data-ttu-id="79f0a-190">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-190">Optional.</span>
          </span>
          <span data-ttu-id="79f0a-191">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-191">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="79f0a-192">가능한 최저 첨자가 반환될 차원입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-192">The dimension for which the lowest possible subscript is to be returned.</span>
          </span>
          <span data-ttu-id="79f0a-193">첫 번째 차원에는 1, 두 번째 차원에는 2를 사용하는 방식으로 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-193">Use 1 for the first dimension, 2 for the second, and so on.</span>
          </span>
          <span data-ttu-id="79f0a-194">
            <c>Rank</c>가 생략되면 1이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-194">If <c>Rank</c> is omitted, 1 is assumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-195">배열의 표시된 차원에 사용할 수 있는 최저 첨자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-195">Returns the lowest available subscript for the indicated dimension of an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-196">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-196">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="79f0a-197">지정한 차원의 첨자에 포함될 수 있는 가장 낮은 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-197">The lowest value the subscript for the specified dimension can contain.</span>
          </span>
          <span data-ttu-id="79f0a-198">
            <see langword="LBound" />는 <paramref name="Array" />가 초기화된 경우 길이가 0인 문자열과 같이 요소가 없어도 항상 0을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-198">
              <see langword="LBound" /> always returns 0 as long as <paramref name="Array" /> has been initialized, even if it has no elements, for example if it is a zero-length string.</span>
          </span>
          <span data-ttu-id="79f0a-199">
            <paramref name="Array" />가 <see langword="Nothing" />이면 <see langword="LBound" />는 <see cref="T:System.ArgumentNullException" />을 throw합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-199">If <paramref name="Array" /> is <see langword="Nothing" />, <see langword="LBound" /> throws an <see cref="T:System.ArgumentNullException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-200">배열 첨자가 0에서 시작하므로 모든 차원에 대해 사용할 수 있는 최저 첨자는 항상 0입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-200">Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.</span></span>  
  
 <span data-ttu-id="79f0a-201">다음 차원 배열에 대해 `LBound` 다음 표에서 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-201">For an array with the following dimensions, `LBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="79f0a-202">LBound에 대 한 호출</span><span class="sxs-lookup"><span data-stu-id="79f0a-202">Call to LBound</span></span>|<span data-ttu-id="79f0a-203">반환 값</span><span class="sxs-lookup"><span data-stu-id="79f0a-203">Return value</span></span>|  
|--------------------|------------------|  
|`LBound(a, 1)`|<span data-ttu-id="79f0a-204">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-204">0</span></span>|  
|`LBound(a, 2)`|<span data-ttu-id="79f0a-205">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-205">0</span></span>|  
|`LBound(a, 3)`|<span data-ttu-id="79f0a-206">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-206">0</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-207">다음 예제에서는 `LBound` 함수 표시 된 차원 배열에 사용할 수 있는 최저 첨자를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-207">The following example uses the `LBound` function to determine the lowest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#41](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79f0a-208">
            <paramref name="Array" />가 <see langword="Nothing" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-208">
              <paramref name="Array" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="79f0a-209">
            <paramref name="Rank" />가 1보다 작거나 <paramref name="Rank" />가 <paramref name="Array" />의 차수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-209">
              <paramref name="Rank" /> less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
      </Docs>
    </Member>
    <Member MemberName="QBColor">
      <MemberSignature Language="C#" Value="public static int QBColor (int Color);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 QBColor(int32 Color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function QBColor (Color As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QBColor(int Color);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Color" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Color">
          <span data-ttu-id="79f0a-210">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-210">Required.</span>
          </span>
          <span data-ttu-id="79f0a-211">0에서 15 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-211">A whole number in the range 0–15.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-212">지정한 색 번호에 해당되는 RGB 색 코드를 나타내는 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-212">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-213">지정한 색 번호에 해당되는 RGB 색 코드를 나타내는 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-213">Returns an <see langword="Integer" /> value representing the RGB color code corresponding to the specified color number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-214">반환된 된 값 최하위 바이트 부터는 Visual Basic 언어에서 사용 하는 RGB 시스템의 적절 한 색을 설정 하는 데 빨강, 녹색 및 파랑 값을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-214">Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.</span></span>  
  
 <span data-ttu-id="79f0a-215">`Color` 인수에 이러한 설정이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-215">The `Color` argument has these settings.</span></span>  
  
|<span data-ttu-id="79f0a-216">수</span><span class="sxs-lookup"><span data-stu-id="79f0a-216">Number</span></span>|<span data-ttu-id="79f0a-217">색</span><span class="sxs-lookup"><span data-stu-id="79f0a-217">Color</span></span>|<span data-ttu-id="79f0a-218">수</span><span class="sxs-lookup"><span data-stu-id="79f0a-218">Number</span></span>|<span data-ttu-id="79f0a-219">색</span><span class="sxs-lookup"><span data-stu-id="79f0a-219">Color</span></span>|  
|------------|-----------|------------|-----------|  
|<span data-ttu-id="79f0a-220">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-220">0</span></span>|<span data-ttu-id="79f0a-221">검정</span><span class="sxs-lookup"><span data-stu-id="79f0a-221">Black</span></span>|<span data-ttu-id="79f0a-222">8</span><span class="sxs-lookup"><span data-stu-id="79f0a-222">8</span></span>|<span data-ttu-id="79f0a-223">회색</span><span class="sxs-lookup"><span data-stu-id="79f0a-223">Gray</span></span>|  
|<span data-ttu-id="79f0a-224">1</span><span class="sxs-lookup"><span data-stu-id="79f0a-224">1</span></span>|<span data-ttu-id="79f0a-225">파랑</span><span class="sxs-lookup"><span data-stu-id="79f0a-225">Blue</span></span>|<span data-ttu-id="79f0a-226">10</span><span class="sxs-lookup"><span data-stu-id="79f0a-226">9</span></span>|<span data-ttu-id="79f0a-227">연한 파란색</span><span class="sxs-lookup"><span data-stu-id="79f0a-227">Light blue</span></span>|  
|<span data-ttu-id="79f0a-228">2</span><span class="sxs-lookup"><span data-stu-id="79f0a-228">2</span></span>|<span data-ttu-id="79f0a-229">녹색</span><span class="sxs-lookup"><span data-stu-id="79f0a-229">Green</span></span>|<span data-ttu-id="79f0a-230">10</span><span class="sxs-lookup"><span data-stu-id="79f0a-230">10</span></span>|<span data-ttu-id="79f0a-231">연한 녹색</span><span class="sxs-lookup"><span data-stu-id="79f0a-231">Light green</span></span>|  
|<span data-ttu-id="79f0a-232">3</span><span class="sxs-lookup"><span data-stu-id="79f0a-232">3</span></span>|<span data-ttu-id="79f0a-233">녹청</span><span class="sxs-lookup"><span data-stu-id="79f0a-233">Cyan</span></span>|<span data-ttu-id="79f0a-234">11</span><span class="sxs-lookup"><span data-stu-id="79f0a-234">11</span></span>|<span data-ttu-id="79f0a-235">밝은 녹청</span><span class="sxs-lookup"><span data-stu-id="79f0a-235">Light cyan</span></span>|  
|<span data-ttu-id="79f0a-236">4</span><span class="sxs-lookup"><span data-stu-id="79f0a-236">4</span></span>|<span data-ttu-id="79f0a-237">빨강</span><span class="sxs-lookup"><span data-stu-id="79f0a-237">Red</span></span>|<span data-ttu-id="79f0a-238">12</span><span class="sxs-lookup"><span data-stu-id="79f0a-238">12</span></span>|<span data-ttu-id="79f0a-239">밝은 빨강</span><span class="sxs-lookup"><span data-stu-id="79f0a-239">Light red</span></span>|  
|<span data-ttu-id="79f0a-240">5</span><span class="sxs-lookup"><span data-stu-id="79f0a-240">5</span></span>|<span data-ttu-id="79f0a-241">자홍</span><span class="sxs-lookup"><span data-stu-id="79f0a-241">Magenta</span></span>|<span data-ttu-id="79f0a-242">13</span><span class="sxs-lookup"><span data-stu-id="79f0a-242">13</span></span>|<span data-ttu-id="79f0a-243">밝은 자홍</span><span class="sxs-lookup"><span data-stu-id="79f0a-243">Light magenta</span></span>|  
|<span data-ttu-id="79f0a-244">6</span><span class="sxs-lookup"><span data-stu-id="79f0a-244">6</span></span>|<span data-ttu-id="79f0a-245">노랑</span><span class="sxs-lookup"><span data-stu-id="79f0a-245">Yellow</span></span>|<span data-ttu-id="79f0a-246">14</span><span class="sxs-lookup"><span data-stu-id="79f0a-246">14</span></span>|<span data-ttu-id="79f0a-247">연한 노랑</span><span class="sxs-lookup"><span data-stu-id="79f0a-247">Light yellow</span></span>|  
|<span data-ttu-id="79f0a-248">7</span><span class="sxs-lookup"><span data-stu-id="79f0a-248">7</span></span>|<span data-ttu-id="79f0a-249">하얀</span><span class="sxs-lookup"><span data-stu-id="79f0a-249">White</span></span>|<span data-ttu-id="79f0a-250">15</span><span class="sxs-lookup"><span data-stu-id="79f0a-250">15</span></span>|<span data-ttu-id="79f0a-251">밝은 흰색</span><span class="sxs-lookup"><span data-stu-id="79f0a-251">Bright white</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-252">사용 하 여이 예제는 `QBColor` 색으로 변경 하는 함수를 가리키는 `colorInteger`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-252">This example uses the `QBColor` function to change to the color indicated by `colorInteger`.</span></span> <span data-ttu-id="79f0a-253">`QBColor` 0에서 15 사이의 정수 값을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-253">`QBColor` accepts integer values between 0 and 15.</span></span>  
  
 [!code-vb[VbVbalrCatRef#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79f0a-254">
            <paramref name="Color" />가 0부터 15까지의 범위를 벗어났습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-254">
              <paramref name="Color" /> is outside of range 0 to 15, inclusive.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RGB">
      <MemberSignature Language="C#" Value="public static int RGB (int Red, int Green, int Blue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 RGB(int32 Red, int32 Green, int32 Blue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RGB (Red As Integer, Green As Integer, Blue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int RGB(int Red, int Green, int Blue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Red" Type="System.Int32" />
        <Parameter Name="Green" Type="System.Int32" />
        <Parameter Name="Blue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Red">
          <span data-ttu-id="79f0a-255">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-255">Required.</span>
          </span>
          <span data-ttu-id="79f0a-256">0에서 255(포함) 사이의 <see langword="Integer" /> 형식으로, 빨간색의 농도를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-256">
              <see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the red component of the color.</span>
          </span>
        </param>
        <param name="Green">
          <span data-ttu-id="79f0a-257">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-257">Required.</span>
          </span>
          <span data-ttu-id="79f0a-258">0에서 255(포함) 사이의 <see langword="Integer" /> 형식으로, 녹색의 농도를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-258">
              <see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the green component of the color.</span>
          </span>
        </param>
        <param name="Blue">
          <span data-ttu-id="79f0a-259">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-259">Required.</span>
          </span>
          <span data-ttu-id="79f0a-260">0에서 255(포함) 사이의 <see langword="Integer" /> 형식으로, 파란색의 농도를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-260">
              <see langword="Integer" /> in the range 0–255, inclusive, that represents the intensity of the blue component of the color.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-261">빨강, 녹색 및 파랑 색 구성 요소 집합에서 RGB 색상 값을 나타내는 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-261">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-262">빨강, 녹색 및 파랑 색 구성 요소 집합에서 RGB 색상 값을 나타내는 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-262">Returns an <see langword="Integer" /> value representing an RGB color value from a set of red, green and blue color components.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-263">색 사양을 사용할 수 있는 응용 프로그램 메서드 및 속성 사양이 RGB를 나타내는 숫자 색 값을 기대 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-263">Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value.</span></span> <span data-ttu-id="79f0a-264">RGB 색상 값 빨간색, 녹색 및 파란색 표시할 특정 색의 상대 강도 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-264">An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.</span></span>  
  
 <span data-ttu-id="79f0a-265">경우에 대 한 인수 값 `RGB` 255 보다 크면 255가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-265">If the value for any argument to `RGB` is greater than 255, 255 is used.</span></span>  
  
 <span data-ttu-id="79f0a-266">다음 표에서 일부 표준 색과 포함 된 빨간색, 녹색 및 파랑 값을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-266">The following table lists some standard colors and the red, green, and blue values they include.</span></span>  
  
|<span data-ttu-id="79f0a-267">색</span><span class="sxs-lookup"><span data-stu-id="79f0a-267">Color</span></span>|<span data-ttu-id="79f0a-268">빨간색 값</span><span class="sxs-lookup"><span data-stu-id="79f0a-268">Red value</span></span>|<span data-ttu-id="79f0a-269">녹색 값</span><span class="sxs-lookup"><span data-stu-id="79f0a-269">Green value</span></span>|<span data-ttu-id="79f0a-270">파란색 값</span><span class="sxs-lookup"><span data-stu-id="79f0a-270">Blue value</span></span>|  
|-----------|---------------|-----------------|----------------|  
|<span data-ttu-id="79f0a-271">검정</span><span class="sxs-lookup"><span data-stu-id="79f0a-271">Black</span></span>|<span data-ttu-id="79f0a-272">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-272">0</span></span>|<span data-ttu-id="79f0a-273">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-273">0</span></span>|<span data-ttu-id="79f0a-274">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-274">0</span></span>|  
|<span data-ttu-id="79f0a-275">파랑</span><span class="sxs-lookup"><span data-stu-id="79f0a-275">Blue</span></span>|<span data-ttu-id="79f0a-276">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-276">0</span></span>|<span data-ttu-id="79f0a-277">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-277">0</span></span>|<span data-ttu-id="79f0a-278">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-278">255</span></span>|  
|<span data-ttu-id="79f0a-279">녹색</span><span class="sxs-lookup"><span data-stu-id="79f0a-279">Green</span></span>|<span data-ttu-id="79f0a-280">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-280">0</span></span>|<span data-ttu-id="79f0a-281">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-281">255</span></span>|<span data-ttu-id="79f0a-282">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-282">0</span></span>|  
|<span data-ttu-id="79f0a-283">녹청</span><span class="sxs-lookup"><span data-stu-id="79f0a-283">Cyan</span></span>|<span data-ttu-id="79f0a-284">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-284">0</span></span>|<span data-ttu-id="79f0a-285">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-285">255</span></span>|<span data-ttu-id="79f0a-286">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-286">255</span></span>|  
|<span data-ttu-id="79f0a-287">빨강</span><span class="sxs-lookup"><span data-stu-id="79f0a-287">Red</span></span>|<span data-ttu-id="79f0a-288">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-288">255</span></span>|<span data-ttu-id="79f0a-289">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-289">0</span></span>|<span data-ttu-id="79f0a-290">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-290">0</span></span>|  
|<span data-ttu-id="79f0a-291">자홍</span><span class="sxs-lookup"><span data-stu-id="79f0a-291">Magenta</span></span>|<span data-ttu-id="79f0a-292">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-292">255</span></span>|<span data-ttu-id="79f0a-293">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-293">0</span></span>|<span data-ttu-id="79f0a-294">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-294">255</span></span>|  
|<span data-ttu-id="79f0a-295">노랑</span><span class="sxs-lookup"><span data-stu-id="79f0a-295">Yellow</span></span>|<span data-ttu-id="79f0a-296">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-296">255</span></span>|<span data-ttu-id="79f0a-297">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-297">255</span></span>|<span data-ttu-id="79f0a-298">0</span><span class="sxs-lookup"><span data-stu-id="79f0a-298">0</span></span>|  
|<span data-ttu-id="79f0a-299">하얀</span><span class="sxs-lookup"><span data-stu-id="79f0a-299">White</span></span>|<span data-ttu-id="79f0a-300">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-300">255</span></span>|<span data-ttu-id="79f0a-301">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-301">255</span></span>|<span data-ttu-id="79f0a-302">255</span><span class="sxs-lookup"><span data-stu-id="79f0a-302">255</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-303">이 예에서는 방법을 `RGB` 함수를 사용 하 여 나타내는 정수를 반환 하는 `RGB` 색상 값입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-303">This example shows how the `RGB` function is used to return a whole number representing an `RGB` color value.</span></span>  
  
 [!code-vb[VbVbalrCatRef#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79f0a-304">
            <paramref name="Green" />, <paramref name="Blue" /> 또는 <paramref name="Red" />가 0부터 255까지의 범위를 벗어났습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-304">
              <paramref name="Green" />, <paramref name="Blue" />, or <paramref name="Red" /> is outside of range 0 to 255, inclusive.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SystemTypeName">
      <MemberSignature Language="C#" Value="public static string SystemTypeName (string VbName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string SystemTypeName(string VbName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SystemTypeName (VbName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ SystemTypeName(System::String ^ VbName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VbName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VbName">
          <span data-ttu-id="79f0a-305">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-305">Required.</span>
          </span>
          <span data-ttu-id="79f0a-306">Visual Basic 형식 이름을 포함하는 <see langword="String" /> 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-306">A <see langword="String" /> variable containing a Visual Basic type name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-307">변수의 시스템 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-307">Returns a <see langword="String" /> value containing the system data type name of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-308">변수의 시스템 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-308">Returns a <see langword="String" /> value containing the system data type name of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-309">`SystemTypeName` 정규화 된 공용 언어 런타임 (CLR) 형식 이름에 해당 하는 Visual Basic 형식 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-309">`SystemTypeName` returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name.</span></span> <span data-ttu-id="79f0a-310">예를 들어 경우 `VbName` "Date" 포함 `SystemTypeName` "System.DateTime"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-310">For example, if `VbName` contains "Date", `SystemTypeName` returns "System.DateTime".</span></span> <span data-ttu-id="79f0a-311">경우 `SystemTypeName` 의 값을 인식 하지 않으므로 `VbName`, 반환 `Nothing` (문자열이 아니라 "없음").</span><span class="sxs-lookup"><span data-stu-id="79f0a-311">If `SystemTypeName` does not recognize the value of `VbName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-312">다음 예제에서는 `SystemTypeName` 함수를 여러 변수에 대 한 데이터 형식 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-312">The following example uses the `SystemTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#49)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public static string TypeName (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TypeName(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.TypeName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TypeName (VarName As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TypeName(System::Object ^ VarName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="79f0a-313">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-313">Required.</span>
          </span>
          <span data-ttu-id="79f0a-314">
            <see langword="Object" /> 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-314">
              <see langword="Object" /> variable.</span>
          </span>
          <span data-ttu-id="79f0a-315">
            <see langword="Option Strict" />가 <see langword="Off" />이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-315">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-316">변수에 대한 데이터 형식 정보를 포함하는 <see langword="String" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-316">Returns a <see langword="String" /> value containing data-type information about a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-317">변수에 대한 데이터 형식 정보를 포함하는 <see langword="String" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-317">Returns a <see langword="String" /> value containing data-type information about a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-318">다음 표는 `String` 반환한 값 `TypeName` 의 서로 다른 내용에 대 한 `VarName`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-318">The following table shows the `String` values returned by `TypeName` for different contents of `VarName`.</span></span>  
  
|<span data-ttu-id="79f0a-319">`VarName` 내용</span><span class="sxs-lookup"><span data-stu-id="79f0a-319">`VarName` contents</span></span>|<span data-ttu-id="79f0a-320">반환 문자열</span><span class="sxs-lookup"><span data-stu-id="79f0a-320">String returned</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="79f0a-321">16 비트 `True` 또는 `False` 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-321">16-bit `True` or `False` value type</span></span>|<span data-ttu-id="79f0a-322">"부울"</span><span class="sxs-lookup"><span data-stu-id="79f0a-322">"Boolean"</span></span>|  
|<span data-ttu-id="79f0a-323">8 비트 이진 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-323">8-bit binary value type</span></span>|<span data-ttu-id="79f0a-324">"Byte"</span><span class="sxs-lookup"><span data-stu-id="79f0a-324">"Byte"</span></span>|  
|<span data-ttu-id="79f0a-325">16 비트 문자 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-325">16-bit character value type</span></span>|<span data-ttu-id="79f0a-326">"Char"</span><span class="sxs-lookup"><span data-stu-id="79f0a-326">"Char"</span></span>|  
|<span data-ttu-id="79f0a-327">64 비트 날짜 및 시간 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-327">64-bit date and time value type</span></span>|<span data-ttu-id="79f0a-328">"Date"</span><span class="sxs-lookup"><span data-stu-id="79f0a-328">"Date"</span></span>|  
|<span data-ttu-id="79f0a-329">누락 되었거나 존재 하지 않는 데이터를 나타내는 참조 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-329">Reference type indicating missing or nonexistent data</span></span>|<span data-ttu-id="79f0a-330">"DBNull"</span><span class="sxs-lookup"><span data-stu-id="79f0a-330">"DBNull"</span></span>|  
|<span data-ttu-id="79f0a-331">128 비트 고정 소수점 숫자 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-331">128-bit fixed-point numeric value type</span></span>|<span data-ttu-id="79f0a-332">"십진수"</span><span class="sxs-lookup"><span data-stu-id="79f0a-332">"Decimal"</span></span>|  
|<span data-ttu-id="79f0a-333">64 비트 부동 소수점 숫자 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-333">64-bit floating-point numeric value type</span></span>|<span data-ttu-id="79f0a-334">"Double"</span><span class="sxs-lookup"><span data-stu-id="79f0a-334">"Double"</span></span>|  
|<span data-ttu-id="79f0a-335">32 비트 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-335">32-bit integer value type</span></span>|<span data-ttu-id="79f0a-336">"Integer"</span><span class="sxs-lookup"><span data-stu-id="79f0a-336">"Integer"</span></span>|  
|<span data-ttu-id="79f0a-337">지정 되지 않은 개체를 가리키는 참조 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-337">Reference type pointing to an unspecialized object</span></span>|<span data-ttu-id="79f0a-338">"개체"</span><span class="sxs-lookup"><span data-stu-id="79f0a-338">"Object"</span></span>|  
|<span data-ttu-id="79f0a-339">클래스에서 지정 된 개체를 가리키는 참조 형식 *개체 클래스*</span><span class="sxs-lookup"><span data-stu-id="79f0a-339">Reference type pointing to a specialized object created from class *objectclass*</span></span>|<span data-ttu-id="79f0a-340">"*objectclass*"</span><span class="sxs-lookup"><span data-stu-id="79f0a-340">"*objectclass*"</span></span>|  
|<span data-ttu-id="79f0a-341">64 비트 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-341">64-bit integer value type</span></span>|<span data-ttu-id="79f0a-342">"시간"</span><span class="sxs-lookup"><span data-stu-id="79f0a-342">"Long"</span></span>|  
|<span data-ttu-id="79f0a-343">에 현재 할당 된 개체가 참조 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-343">Reference type with no object currently assigned to it</span></span>|<span data-ttu-id="79f0a-344">"없음"</span><span class="sxs-lookup"><span data-stu-id="79f0a-344">"Nothing"</span></span>|  
|<span data-ttu-id="79f0a-345">8 비트 부호 있는 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-345">8-bit signed integer value type</span></span>|<span data-ttu-id="79f0a-346">"SByte"</span><span class="sxs-lookup"><span data-stu-id="79f0a-346">"SByte"</span></span>|  
|<span data-ttu-id="79f0a-347">16 비트 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-347">16-bit integer value type</span></span>|<span data-ttu-id="79f0a-348">"짧은"</span><span class="sxs-lookup"><span data-stu-id="79f0a-348">"Short"</span></span>|  
|<span data-ttu-id="79f0a-349">32 비트 부동 소수점 숫자 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-349">32-bit floating-point numeric value type</span></span>|<span data-ttu-id="79f0a-350">"Single"</span><span class="sxs-lookup"><span data-stu-id="79f0a-350">"Single"</span></span>|  
|<span data-ttu-id="79f0a-351">16 비트 문자의 문자열을 가리키는 참조 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-351">Reference type pointing to a string of 16-bit characters</span></span>|<span data-ttu-id="79f0a-352">"String"</span><span class="sxs-lookup"><span data-stu-id="79f0a-352">"String"</span></span>|  
|<span data-ttu-id="79f0a-353">32 비트 부호 없는 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-353">32-bit unsigned integer value type</span></span>|<span data-ttu-id="79f0a-354">"UInteger"</span><span class="sxs-lookup"><span data-stu-id="79f0a-354">"UInteger"</span></span>|  
|<span data-ttu-id="79f0a-355">64 비트 부호 없는 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-355">64-bit unsigned integer value type</span></span>|<span data-ttu-id="79f0a-356">"ULong"</span><span class="sxs-lookup"><span data-stu-id="79f0a-356">"ULong"</span></span>|  
|<span data-ttu-id="79f0a-357">16 비트 부호 없는 정수 값 형식</span><span class="sxs-lookup"><span data-stu-id="79f0a-357">16-bit unsigned integer value type</span></span>|<span data-ttu-id="79f0a-358">"UShort"</span><span class="sxs-lookup"><span data-stu-id="79f0a-358">"UShort"</span></span>|  
  
 <span data-ttu-id="79f0a-359">경우 `VarName` 은 배열, 반환 되는 문자열 앞의 표에 빈 괄호가 추가 된 문자열 중 하나가 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-359">If `VarName` is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended.</span></span> <span data-ttu-id="79f0a-360">예를 들어 경우 `VarName` 정수의 배열을 가리킵니다 `TypeName` "필수적 요소"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-360">For example, if `VarName` points to an array of integers, `TypeName` returns "Integer()".</span></span>  
  
 <span data-ttu-id="79f0a-361">때 `TypeName` 참조 형식의 이름을 반환 이름만 자체를 정규화 된 이름이 아니라, 클래스 등 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-361">When `TypeName` returns the name of a reference type such as a class, it returns only the name itself, not the qualified name.</span></span> <span data-ttu-id="79f0a-362">예를 들어 경우 `VarName` 클래스의 개체를 가리키는 <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` "PaperSource"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-362">For example, if `VarName` points to an object of class <xref:System.Drawing.Printing.PaperSource?displayProperty=nameWithType>, `TypeName` returns "PaperSource".</span></span> <span data-ttu-id="79f0a-363">변수가 특정 클래스 형식으로 선언 하지만 개체가 할당, 없는 경우에 `TypeName` "없음"을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-363">Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, `TypeName` returns "Nothing".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-364">다음 예제에서는 `TypeName` 함수 여러 변수에 대 한 데이터 형식 정보를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-364">The following example uses the `TypeName` function to return data type information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#52](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#52)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.IsArray(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDate(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsError(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Information.IsReference(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public static int UBound (Array Array, int Rank = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 UBound(class System.Array Array, int32 Rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Array" Type="System.Array" />
        <Parameter Name="Rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Array">
          <span data-ttu-id="79f0a-365">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-365">Required.</span>
          </span>
          <span data-ttu-id="79f0a-366">데이터 형식의 배열로,</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-366">Array of any data type.</span>
          </span>
          <span data-ttu-id="79f0a-367">차원의 가능한 최고 첨자를 찾을 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-367">The array in which you want to find the highest possible subscript of a dimension.</span>
          </span>
        </param>
        <param name="Rank">
          <span data-ttu-id="79f0a-368">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-368">Optional.</span>
          </span>
          <span data-ttu-id="79f0a-369">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-369">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="79f0a-370">가능한 최고 첨자가 반환될 차원입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-370">The dimension for which the highest possible subscript is to be returned.</span>
          </span>
          <span data-ttu-id="79f0a-371">첫 번째 차원에는 1, 두 번째 차원에는 2를 사용하는 방식으로 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-371">Use 1 for the first dimension, 2 for the second, and so on.</span>
          </span>
          <span data-ttu-id="79f0a-372">
            <c>Rank</c>가 생략되면 1이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-372">If <c>Rank</c> is omitted, 1 is assumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-373">배열의 표시된 차원에 사용할 수 있는 최고 첨자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-373">Returns the highest available subscript for the indicated dimension of an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-374">
            <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-374">
              <see langword="Integer" />.</span>
          </span>
          <span data-ttu-id="79f0a-375">지정한 차원의 첨자에 포함될 수 있는 가장 높은 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-375">The highest value the subscript for the specified dimension can contain.</span>
          </span>
          <span data-ttu-id="79f0a-376">
            <paramref name="Array" />에 요소가 하나만 있으면 <see langword="UBound" />에서 0을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-376">If <paramref name="Array" /> has only one element, <see langword="UBound" /> returns 0.</span>
          </span>
          <span data-ttu-id="79f0a-377">길이가 0인 문자열과 같이 <paramref name="Array" />에 요소가 없으면 <see langword="UBound" />에서 -1을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-377">If <paramref name="Array" /> has no elements, for example if it is a zero-length string, <see langword="UBound" /> returns -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-378">배열 첨자가 0에서 시작, 차원의 길이 해당 차원에 사용할 수 있는 가장 높은 첨자 보다 1 큽니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-378">Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.</span></span>  
  
 <span data-ttu-id="79f0a-379">다음 차원 배열에 대해 `UBound` 다음 표에서 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-379">For an array with the following dimensions, `UBound` returns the values in the following table:</span></span>  
  
```vb  
Dim a(100, 5, 4) As Byte  
```  
  
|<span data-ttu-id="79f0a-380">UBound에 대 한 호출</span><span class="sxs-lookup"><span data-stu-id="79f0a-380">Call to UBound</span></span>|<span data-ttu-id="79f0a-381">반환 값</span><span class="sxs-lookup"><span data-stu-id="79f0a-381">Return value</span></span>|  
|--------------------|------------------|  
|`UBound(a, 1)`|<span data-ttu-id="79f0a-382">100</span><span class="sxs-lookup"><span data-stu-id="79f0a-382">100</span></span>|  
|`UBound(a, 2)`|<span data-ttu-id="79f0a-383">5</span><span class="sxs-lookup"><span data-stu-id="79f0a-383">5</span></span>|  
|`UBound(a, 3)`|<span data-ttu-id="79f0a-384">4</span><span class="sxs-lookup"><span data-stu-id="79f0a-384">4</span></span>|  
  
 <span data-ttu-id="79f0a-385">사용할 수 있습니다 `UBound` 전체를 확인 하려면 수 있지만 배열에 있는 요소의 수 첨자가 0에서 시작 하는 팩트에 대 한 계정에 반환 하는 값 조정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-385">You can use `UBound` to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0.</span></span> <span data-ttu-id="79f0a-386">다음 예제에서는 배열의 전체 크기를 계산 `a` 앞의 예제에서:</span><span class="sxs-lookup"><span data-stu-id="79f0a-386">The following example calculates the total size of the array `a` in the preceding example:</span></span>  
  
```vb  
Dim total As Integer  
total = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  
```  
  
 <span data-ttu-id="79f0a-387">값에 대 한 계산 `total` 는 3030은 101 * 6 * 5입니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-387">The value calculated for `total` is 3030, which is 101 * 6 * 5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-388">다음 예제에서는 `UBound` 함수는 배열의 지정 된 차원에 대 한 사용 가능한 가장 높은 첨자를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-388">The following example uses the `UBound` function to determine the highest available subscript for the indicated dimension of an array.</span></span>  
  
 [!code-vb[VbVbalrFunctions#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79f0a-389">
            <paramref name="Array" />가 <see langword="Nothing" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-389">
              <paramref name="Array" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="79f0a-390">
            <paramref name="Rank" />가 1보다 작거나 <paramref name="Rank" />가 <paramref name="Array" />의 차수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-390">
              <paramref name="Rank" /> is less than 1, or <paramref name="Rank" /> is greater than the rank of <paramref name="Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.RankException" />
      </Docs>
    </Member>
    <Member MemberName="VarType">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.VariantType VarType (object VarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.VisualBasic.VariantType VarType(object VarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VarType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarType (VarName As Object) As VariantType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::VariantType VarType(System::Object ^ VarName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.VariantType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VarName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="VarName">
          <span data-ttu-id="79f0a-391">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-391">Required.</span>
          </span>
          <span data-ttu-id="79f0a-392">
            <see langword="Object" /> 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-392">
              <see langword="Object" /> variable.</span>
          </span>
          <span data-ttu-id="79f0a-393">
            <see langword="Option Strict" />가 <see langword="Off" />이면 구조체를 제외한 모든 데이터 형식의 변수를 전달할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-393">If <see langword="Option Strict" /> is <see langword="Off" />, you can pass a variable of any data type except a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-394">변수의 데이터 형식 분류를 포함하는 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-394">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-395">변수의 데이터 형식 분류를 포함하는 <see langword="Integer" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-395">Returns an <see langword="Integer" /> value containing the data type classification of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-396">반환 된 정수 값 `VarType` 의 구성원은 <xref:Microsoft.VisualBasic.VariantType>합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-396">The integer value returned by `VarType` is a member of the <xref:Microsoft.VisualBasic.VariantType>.</span></span>  
  
 <span data-ttu-id="79f0a-397">다음 표에서 반환 하는 값을 보여 줍니다. `VarType` 의 특수 한 경우에 대 한 `VarName`합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-397">The following table shows the values returned by `VarType` for special cases of `VarName`.</span></span>  
  
|<span data-ttu-id="79f0a-398">데이터 형식으로 표시 `VarName`</span><span class="sxs-lookup"><span data-stu-id="79f0a-398">Data type represented by `VarName`</span></span>|<span data-ttu-id="79f0a-399">반환 된 값 `VarType`</span><span class="sxs-lookup"><span data-stu-id="79f0a-399">Value returned by `VarType`</span></span>|  
|----------------------------------------|---------------------------------|  
|[<span data-ttu-id="79f0a-400">Nothing</span><span class="sxs-lookup"><span data-stu-id="79f0a-400">Nothing</span></span>](~/docs/visual-basic/language-reference/nothing.md)|`VariantType.Object`|  
|<xref:System.DBNull>|`VariantType.Null`|  
|<span data-ttu-id="79f0a-401">열거형</span><span class="sxs-lookup"><span data-stu-id="79f0a-401">Enumeration</span></span>|<span data-ttu-id="79f0a-402">기본 데이터 형식 (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, 또는 `ULong`)</span><span class="sxs-lookup"><span data-stu-id="79f0a-402">Underlying data type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`)</span></span>|  
|<span data-ttu-id="79f0a-403">배열</span><span class="sxs-lookup"><span data-stu-id="79f0a-403">Array</span></span>|<span data-ttu-id="79f0a-404">배열 요소 형식은의 비트 OR 및 `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="79f0a-404">Bitwise OR of array element type and `VariantType.Array`</span></span>|  
|<span data-ttu-id="79f0a-405">형식 배열</span><span class="sxs-lookup"><span data-stu-id="79f0a-405">Array of arrays</span></span>|<span data-ttu-id="79f0a-406">비트 OR `VariantType.Object` 및 `VariantType.Array`</span><span class="sxs-lookup"><span data-stu-id="79f0a-406">Bitwise OR of `VariantType.Object` and `VariantType.Array`</span></span>|  
|<span data-ttu-id="79f0a-407">구조 (<xref:System.ValueType?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="79f0a-407">Structure (<xref:System.ValueType?displayProperty=nameWithType>)</span></span>|`VariantType.UserDefinedType`|  
|<xref:System.Exception>|`VariantType.Error`|  
|<span data-ttu-id="79f0a-408">알 수 없음</span><span class="sxs-lookup"><span data-stu-id="79f0a-408">Unknown</span></span>|`VariantType.Object`|  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-409">다음 예제에서는 `VarType` 함수 여러 변수에 대 한 데이터 형식을 분류 정보를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-409">The following example uses the `VarType` function to return data type classification information about several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#55](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="T:Microsoft.VisualBasic.VariantType" />
      </Docs>
    </Member>
    <Member MemberName="VbTypeName">
      <MemberSignature Language="C#" Value="public static string VbTypeName (string UrtName);" />
      <MemberSignature Language="ILAsm" Value=".method public static string VbTypeName(string UrtName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VbTypeName (UrtName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VbTypeName(System::String ^ UrtName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="UrtName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="UrtName">
          <span data-ttu-id="79f0a-410">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-410">Required.</span>
          </span>
          <span data-ttu-id="79f0a-411">공용 언어 런타임에서 사용되는 형식 이름을 포함하는 <see langword="String" /> 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-411">
              <see langword="String" /> variable containing a type name used by the common language runtime.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79f0a-412">변수의 Visual Basic 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-412">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79f0a-413">변수의 Visual Basic 데이터 형식 이름을 포함하는 <see langword="String" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79f0a-413">Returns a <see langword="String" /> value containing the Visual Basic data type name of a variable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79f0a-414">`VbTypeName` 공용 언어 런타임 형식 이름에 해당 하는 Visual Basic 형식 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-414">`VbTypeName` returns the Visual Basic type name corresponding to the common language runtime type name.</span></span> <span data-ttu-id="79f0a-415">예를 들어 경우 `UrtName` "Int32" 또는 "System.Int32" 포함 `VbTypeName` "정수"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-415">For example, if `UrtName` contains "Int32" or "System.Int32", `VbTypeName` returns "Integer".</span></span> <span data-ttu-id="79f0a-416">경우 `VbTypeName` 의 값을 인식 하지 않으므로 `UrtName`, 반환 `Nothing` (문자열이 아니라 "없음").</span><span class="sxs-lookup"><span data-stu-id="79f0a-416">If `VbTypeName` does not recognize the value of `UrtName`, it returns `Nothing` (not the string "Nothing").</span></span>  
  
 <span data-ttu-id="79f0a-417">에 형식 이름을 `UrtName` 에서 얻을 수 있습니다 다양 한 원본의 예는 <xref:System.Reflection.MemberInfo.Name%2A> 속성에는 <xref:System.Reflection.MemberInfo> 배열을 <xref:System.Type> 클래스.</span><span class="sxs-lookup"><span data-stu-id="79f0a-417">The type name in `UrtName` can be obtained from various sources, for example from the <xref:System.Reflection.MemberInfo.Name%2A> property in the <xref:System.Reflection.MemberInfo> array of the <xref:System.Type> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79f0a-418">다음 예제에서는 `VbTypeName` 함수를 여러 변수에 대 한 데이터 형식 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="79f0a-418">The following example uses the `VbTypeName` function to return data type names for several variables.</span></span>  
  
 [!code-vb[VbVbalrFunctions#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#56)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>