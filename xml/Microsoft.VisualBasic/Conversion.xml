<Type Name="Conversion" FullName="Microsoft.VisualBasic.Conversion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc28c5733fb9f77e132ec584a6f025b3048ad10b" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48643510" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Conversion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Conversion extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Conversion" />
  <TypeSignature Language="VB.NET" Value="Public Module Conversion" />
  <TypeSignature Language="C++ CLI" Value="public ref class Conversion sealed" />
  <TypeSignature Language="F#" Value="type Conversion = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3a844-101">
        <see langword="Conversion" /> 모듈에는 다양한 변환 작업을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a844-101">The <see langword="Conversion" /> module contains the procedures used to perform various conversion operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-102">이 모듈에서는 Visual Basic 언어 키워드 및 10 진수를 다른 진수로 변환 하는 런타임 라이브러리 멤버를 다른 숫자 문자열, 숫자, 문자열 및 데이터를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-102">This module supports the Visual Basic language keywords and run-time library members that convert decimal numbers to other bases, numbers to strings, strings to numbers, and one data type to another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-103">이 예제에서는 `Hex` 숫자의 16 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-103">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
      <span data-ttu-id="3a844-104">변환 요약</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a844-104">Conversion Summary</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">
      <span data-ttu-id="3a844-105">키워드(Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a844-105">Keywords (Visual Basic)</span>
      </span>
    </related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">
      <span data-ttu-id="3a844-106">Visual Basic 런타임 라이브러리 멤버</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a844-106">Visual Basic Run-Time Library Members</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="CTypeDynamic">
      <MemberSignature Language="C#" Value="public static object CTypeDynamic (object Expression, Type TargetType);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CTypeDynamic(object Expression, class System.Type TargetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CTypeDynamic (Expression As Object, TargetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CTypeDynamic(System::Object ^ Expression, Type ^ TargetType);" />
      <MemberSignature Language="F#" Value="static member CTypeDynamic : obj * Type -&gt; obj" Usage="Microsoft.VisualBasic.Conversion.CTypeDynamic (Expression, TargetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="TargetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="3a844-107">변환할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-107">The object to convert.</span>
          </span>
        </param>
        <param name="TargetType">
          <span data-ttu-id="3a844-108">개체를 변환할 대상 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-108">The type to which to convert the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-109">개체를 지정된 형식으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-109">Converts an object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-110">런타임에서의 형식이 요청된 대상 형식인 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-110">An object whose type at run time is the requested target type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-111">`CTypeDynamic` 메서드 변환으로 전달 되는 개체를 `Expression` 에 지정 된 형식 매개 변수는 `TargetType` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-111">The `CTypeDynamic` method converts the object passed as the `Expression` parameter to the type specified by the `TargetType` parameter.</span></span> <span data-ttu-id="3a844-112">개체가 동적 개체를 하는 경우는 `CTypeDynamic` 메서드 사용 가능한 동적 변환을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-112">If the object is a dynamic object, the `CTypeDynamic` method applies available dynamic conversions.</span></span>  
  
 <span data-ttu-id="3a844-113">`CTypeDynamic` 메서드 개체 자체에 의해 정의 된 변환 의미 체계에 따라 동적 변환을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-113">The `CTypeDynamic` method applies dynamic conversions in accordance with the conversion semantics defined by the object itself.</span></span> <span data-ttu-id="3a844-114">동적 개체에서 상속 하는 경우 <xref:System.Dynamic.DynamicObject>, `CTypeDynamic` 메서드는 먼저, 정적 사용자 정의 변환을 사용 하 여 변환을 수행 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-114">If a dynamic object inherits from <xref:System.Dynamic.DynamicObject>, the `CTypeDynamic` method first attempts to perform the conversion by using a user-defined, static conversion.</span></span> <span data-ttu-id="3a844-115">사용자 정의 정적 변환에 실패 하는 경우는 `CTypeDynamic` 메서드는 동적 변환을 사용 하 여 변환을 수행 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-115">If the user-defined, static conversion fails, the `CTypeDynamic` method attempts to perform the conversion by using dynamic conversions.</span></span> <span data-ttu-id="3a844-116">동적 개체를 구현 하는 경우 <xref:System.Dynamic.IDynamicMetaObjectProvider>, `CTypeDynamic` 메서드는 정적 사용자 정의 변환을 통해 동적 변환 우선 순위를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-116">If a dynamic object implements <xref:System.Dynamic.IDynamicMetaObjectProvider>, the `CTypeDynamic` method gives precedence to dynamic conversions over user-defined, static conversions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-117">다음 예제에서는 `CTypeDynamic` 동적 개체에서 정의한 변환을 사용 하 여 동적 개체를 문자열로 변환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-117">The following example uses the `CTypeDynamic` method to convert a dynamic object to a string by using the conversion defined by the dynamic object.</span></span>  
  
```vb  
Imports System.Dynamic  
  
Module Module1  
    Sub Main()  
        Dim dyn As Object = New SampleDynamicObject  
        Dim sampleString = CTypeDynamic(dyn, GetType(String))  
        Console.WriteLine(sampleString)  
    End Sub  
End Module  
  
Class SampleDynamicObject  
    Inherits DynamicObject  
  
    Public Overrides Function TryConvert(ByVal binder As ConvertBinder,  
                                         ByRef result As Object) As Boolean  
  
        If binder.Type = GetType(String) Then  
            result = "Sample String"  
            Return True  
        End If  
  
        Return False  
    End Function  
End Class  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Dynamic.DynamicObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)" />
        <altmember cref="M:System.Dynamic.DynamicMetaObject.BindConvert(System.Dynamic.ConvertBinder)" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/early-late-binding/working-with-dynamic-objects.md">
          <span data-ttu-id="3a844-118">동적 개체 작업(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-118">Working with Dynamic Objects (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/csharp/programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md">
          <span data-ttu-id="3a844-119">연습: 동적 개체 만들기 및 사용(C# 및 Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-119">Walkthrough: Creating and Using Dynamic Objects (C# and Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CTypeDynamic&lt;TargetType&gt;">
      <MemberSignature Language="C#" Value="public static TargetType CTypeDynamic&lt;TargetType&gt; (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static !!TargetType CTypeDynamic&lt;TargetType&gt;(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CTypeDynamic(Of TargetType) (Expression As Object) As TargetType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TargetType&gt;&#xA; static TargetType CTypeDynamic(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member CTypeDynamic : obj -&gt; 'argetType" Usage="Microsoft.VisualBasic.Conversion.CTypeDynamic Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TargetType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TargetType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TargetType">
          <span data-ttu-id="3a844-120">개체를 변환할 대상 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-120">The type to which to convert the object.</span>
          </span>
        </typeparam>
        <param name="Expression">
          <span data-ttu-id="3a844-121">변환할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-121">The object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-122">개체를 지정된 제네릭 형식으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-122">Converts an object to the specified generic type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-123">요청된 제네릭 형식으로 정적 형식이 지정된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-123">An object statically typed as the requested generic type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-124">합니다 `CTypeDynamic` 메서드 변환으로 전달 되는 개체는 `Expression` 제네릭 매개 변수의 형식으로 지정 된 형식 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-124">The `CTypeDynamic` method converts the object passed as the `Expression` parameter to the type specified by the type of the generic parameter.</span></span> <span data-ttu-id="3a844-125">개체가 동적 개체를 하는 경우는 `CTypeDynamic` 메서드 사용 가능한 동적 변환을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-125">If the object is a dynamic object, the `CTypeDynamic` method applies available dynamic conversions.</span></span>  
  
 <span data-ttu-id="3a844-126">`CTypeDynamic` 메서드 개체 자체에 의해 정의 된 변환 의미 체계에 따라 동적 변환을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-126">The `CTypeDynamic` method applies dynamic conversions in accordance with the conversion semantics defined by the object itself.</span></span> <span data-ttu-id="3a844-127">동적 개체에서 상속 하는 경우 <xref:System.Dynamic.DynamicObject>, `CTypeDynamic` 메서드는 먼저, 정적 사용자 정의 변환을 사용 하 여 변환을 수행 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-127">If a dynamic object inherits from <xref:System.Dynamic.DynamicObject>, the `CTypeDynamic` method first attempts to perform the conversion by using a user-defined, static conversion.</span></span> <span data-ttu-id="3a844-128">사용자 정의 정적 변환에 실패 하는 경우는 `CTypeDynamic` 메서드는 동적 변환을 사용 하 여 변환을 수행 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-128">If the user-defined, static conversion fails, the `CTypeDynamic` method attempts to perform the conversion by using dynamic conversions.</span></span> <span data-ttu-id="3a844-129">동적 개체를 구현 하는 경우 <xref:System.Dynamic.IDynamicMetaObjectProvider>, `CTypeDynamic` 메서드는 정적 사용자 정의 변환을 통해 동적 변환 우선 순위를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-129">If a dynamic object implements <xref:System.Dynamic.IDynamicMetaObjectProvider>, the `CTypeDynamic` method gives precedence to dynamic conversions over user-defined, static conversions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-130">다음 예제에서는 `CTypeDynamic` 동적 개체에서 정의한 변환을 사용 하 여 동적 개체를 문자열로 변환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-130">The following example uses the `CTypeDynamic` method to convert a dynamic object to a string by using the conversion defined by the dynamic object.</span></span>  
  
```vb  
Imports System.Dynamic  
  
Module Module1  
    Sub Main()  
        Dim dyn As Object = New SampleDynamicObject  
        Dim str = CTypeDynamic(Of String)(dyn)  
        Console.WriteLine(str)  
    End Sub  
End Module  
  
Class SampleDynamicObject  
    Inherits DynamicObject  
  
    Public Overrides Function TryConvert(ByVal binder As ConvertBinder,  
                                         ByRef result As Object) As Boolean  
  
        If binder.Type = GetType(String) Then  
            result = "Sample String"  
            Return True  
        End If  
  
        Return False  
    End Function  
End Class  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Dynamic.DynamicObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)" />
        <altmember cref="M:System.Dynamic.DynamicMetaObject.BindConvert(System.Dynamic.ConvertBinder)" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)" />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/early-late-binding/working-with-dynamic-objects.md">
          <span data-ttu-id="3a844-131">동적 개체 작업(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-131">Working with Dynamic Objects (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/csharp/programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md">
          <span data-ttu-id="3a844-132">연습: 동적 개체 만들기 및 사용(C# 및 Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-132">Walkthrough: Creating and Using Dynamic Objects (C# and Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ErrorToString">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a844-133">지정한 오류 번호에 해당하는 오류 메시지를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-133">Returns the error message that corresponds to a given error number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ErrorToString">
      <MemberSignature Language="C#" Value="public static string ErrorToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string ErrorToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ErrorToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ErrorToString();" />
      <MemberSignature Language="F#" Value="static member ErrorToString : unit -&gt; string" Usage="Microsoft.VisualBasic.Conversion.ErrorToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a844-134">지정한 오류 번호에 해당하는 오류 메시지를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-134">Returns the error message that corresponds to a given error number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-135">최근 런타임 오류에 해당하는 오류 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-135">The error message that corresponds to the most recent run-time error.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-136">합니다 `ErrorToString` 의 속성 설정을 검사 하는 함수는 `Err` 최근 런타임 오류를 식별 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-136">The `ErrorToString` function examines the property settings of the `Err` object to identify the most recent run-time error.</span></span> <span data-ttu-id="3a844-137">반환 값을 `ErrorToString` 에 해당 하는 함수를 `Description` 의 속성은 `Err` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-137">The return value of the `ErrorToString` function corresponds to the `Description` property of the `Err` object.</span></span> <span data-ttu-id="3a844-138">런타임 오류가 발생 하지 않은, 경우 `ErrorToString` 길이가 0 인 문자열을 반환 합니다 ("").</span><span class="sxs-lookup"><span data-stu-id="3a844-138">If no run-time error has occurred, `ErrorToString` returns a zero-length string ("").</span></span>  
  
 <span data-ttu-id="3a844-139">Visual basic 6.0 및 이전 버전에서는이 기능에서 제공한는 `Error` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-139">In Visual Basic version 6.0 and earlier, this functionality was provided by the `Error` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-140">다음 코드에서는 `ErrorToString` 함수를 지정 된 오류 번호에 해당 하는 오류 메시지를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-140">The following code uses the `ErrorToString` function to display error messages that correspond to the specified error numbers.</span></span>  
  
 [!code-vb[VbVbalrCatRef#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-141">
            <paramref name="ErrorNumber" />가 범위에서 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-141">
              <paramref name="ErrorNumber" /> is out of range.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="P:Microsoft.VisualBasic.ErrObject.Description" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="ErrorToString">
      <MemberSignature Language="C#" Value="public static string ErrorToString (int ErrorNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public static string ErrorToString(int32 ErrorNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErrorToString (ErrorNumber As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ErrorToString(int ErrorNumber);" />
      <MemberSignature Language="F#" Value="static member ErrorToString : int -&gt; string" Usage="Microsoft.VisualBasic.Conversion.ErrorToString ErrorNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ErrorNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ErrorNumber">
          <span data-ttu-id="3a844-142">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-142">Optional.</span>
          </span>
          <span data-ttu-id="3a844-143">유효한 임의의 오류 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-143">Any valid error number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-144">지정한 오류 번호에 해당하는 오류 메시지를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-144">Returns the error message that corresponds to a given error number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-145">지정한 오류 번호에 해당하는 오류 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-145">The error message that corresponds to a given error number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-146">합니다 `ErrorToString` 의 속성 설정을 검사 하는 함수는 `Err` 최근 런타임 오류를 식별 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-146">The `ErrorToString` function examines the property settings of the `Err` object to identify the most recent run-time error.</span></span> <span data-ttu-id="3a844-147">반환 값을 `ErrorToString` 에 해당 하는 함수를 `Description` 의 속성은 `Err` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-147">The return value of the `ErrorToString` function corresponds to the `Description` property of the `Err` object.</span></span> <span data-ttu-id="3a844-148">하는 경우 `ErrorNumber` 알맞은 오류 번호를 되었지만 정의 되어 있지 `ErrorToString` 문자열을 반환 합니다 `"Application-defined or object-defined error."` 경우 `ErrorNumber` 유효 하지 않은 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-148">If `ErrorNumber` is a valid error number but is not defined, `ErrorToString` returns the string `"Application-defined or object-defined error."` If `ErrorNumber` is not valid, an error occurs.</span></span> <span data-ttu-id="3a844-149">경우 `ErrorNumber` 를 생략 하면 가장 최근의 해당 메시지에서 런타임 오류가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-149">If `ErrorNumber` is omitted, the message corresponding to the most recent run-time error is returned.</span></span> <span data-ttu-id="3a844-150">런타임 오류가 발생 하지 않은 경우 또는 `ErrorNumber` 가 0 이면 `ErrorToString` 길이가 0 인 문자열을 반환 합니다 ("").</span><span class="sxs-lookup"><span data-stu-id="3a844-150">If no run-time error has occurred or `ErrorNumber` is 0, `ErrorToString` returns a zero-length string ("").</span></span>  
  
 <span data-ttu-id="3a844-151">Visual basic 6.0 및 이전 버전에서는이 기능에서 제공한는 `Error` 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-151">In Visual Basic version 6.0 and earlier, this functionality was provided by the `Error` function.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-152">다음 코드에서는 `ErrorToString` 함수를 지정 된 오류 번호에 해당 하는 오류 메시지를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-152">The following code uses the `ErrorToString` function to display error messages that correspond to the specified error numbers.</span></span>  
  
 [!code-vb[VbVbalrCatRef#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-153">
            <paramref name="ErrorNumber" />가 범위에서 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-153">
              <paramref name="ErrorNumber" /> is out of range.</span>
          </span>
        </exception>
        <altmember cref="T:Microsoft.VisualBasic.ErrObject" />
        <altmember cref="P:Microsoft.VisualBasic.ErrObject.Description" />
        <altmember cref="T:System.ArgumentException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fix">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a844-154">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-154">Return the integer portion of a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static decimal Fix (decimal Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.Decimal Fix(valuetype System.Decimal Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Fix(System::Decimal Number);" />
      <MemberSignature Language="F#" Value="static member Fix : decimal -&gt; decimal" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-155">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-155">Required.</span>
          </span>
          <span data-ttu-id="3a844-156">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-156">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-157">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-157">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-158">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-158">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-159">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-159">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-160">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-160">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-161">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-161">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-162">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-162">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-163">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-163">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-164">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-164">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-165">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-165">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-166">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-166">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-167">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-167">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-168">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-168">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-169">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-169">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-170">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-170">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-171">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-171">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-172">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-172">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-173">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-173">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-174">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-174">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-175">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-175">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-176">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-176">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-177">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-177">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-178">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-178">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-179">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-179">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static double Fix (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Fix(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Fix(double Number);" />
      <MemberSignature Language="F#" Value="static member Fix : double -&gt; double" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-180">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-180">Required.</span>
          </span>
          <span data-ttu-id="3a844-181">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-181">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-182">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-182">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-183">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-183">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-184">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-184">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-185">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-185">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-186">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-186">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-187">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-187">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-188">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-188">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-189">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-189">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-190">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-190">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-191">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-191">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-192">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-192">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-193">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-193">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-194">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-194">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-195">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-195">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-196">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-196">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-197">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-197">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-198">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-198">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-199">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-199">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-200">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-200">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-201">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-201">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-202">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-202">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-203">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-203">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-204">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-204">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static short Fix (short Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Fix(int16 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Fix(short Number);" />
      <MemberSignature Language="F#" Value="static member Fix : int16 -&gt; int16" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-205">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-205">Required.</span>
          </span>
          <span data-ttu-id="3a844-206">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-206">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-207">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-207">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-208">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-208">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-209">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-209">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-210">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-210">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-211">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-211">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-212">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-212">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-213">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-213">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-214">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-214">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-215">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-215">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-216">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-216">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-217">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-217">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-218">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-218">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-219">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-219">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-220">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-220">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-221">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-221">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-222">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-222">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-223">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-223">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-224">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-224">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-225">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-225">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-226">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-226">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-227">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-227">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-228">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-228">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-229">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-229">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static int Fix (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Fix(int32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Fix(int Number);" />
      <MemberSignature Language="F#" Value="static member Fix : int -&gt; int" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-230">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-230">Required.</span>
          </span>
          <span data-ttu-id="3a844-231">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-231">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-232">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-232">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-233">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-233">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-234">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-234">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-235">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-235">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-236">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-236">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-237">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-237">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-238">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-238">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-239">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-239">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-240">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-240">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-241">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-241">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-242">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-242">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-243">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-243">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-244">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-244">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-245">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-245">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-246">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-246">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-247">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-247">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-248">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-248">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-249">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-249">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-250">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-250">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-251">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-251">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-252">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-252">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-253">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-253">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-254">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-254">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static long Fix (long Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Fix(int64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Fix(long Number);" />
      <MemberSignature Language="F#" Value="static member Fix : int64 -&gt; int64" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-255">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-255">Required.</span>
          </span>
          <span data-ttu-id="3a844-256">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-256">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-257">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-257">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-258">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-258">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-259">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-259">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-260">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-260">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-261">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-261">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-262">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-262">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-263">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-263">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-264">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-264">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-265">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-265">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-266">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-266">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-267">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-267">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-268">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-268">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-269">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-269">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-270">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-270">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-271">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-271">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-272">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-272">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-273">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-273">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-274">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-274">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-275">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-275">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-276">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-276">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-277">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-277">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-278">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-278">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-279">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-279">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static object Fix (object Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Fix(object Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Fix(System::Object ^ Number);" />
      <MemberSignature Language="F#" Value="static member Fix : obj -&gt; obj" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-280">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-280">Required.</span>
          </span>
          <span data-ttu-id="3a844-281">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-281">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-282">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-282">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-283">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-283">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-284">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-284">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-285">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-285">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-286">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-286">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-287">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-287">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-288">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-288">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-289">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-289">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-290">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-290">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-291">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-291">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-292">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-292">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-293">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-293">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-294">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-294">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-295">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-295">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-296">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-296">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-297">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-297">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-298">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-298">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-299">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-299">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-300">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-300">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-301">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-301">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-302">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-302">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-303">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-303">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-304">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-304">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Fix">
      <MemberSignature Language="C#" Value="public static float Fix (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Fix(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fix (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Fix(float Number);" />
      <MemberSignature Language="F#" Value="static member Fix : single -&gt; single" Usage="Microsoft.VisualBasic.Conversion.Fix Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-305">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-305">Required.</span>
          </span>
          <span data-ttu-id="3a844-306">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-306">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-307">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-307">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-308">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-308">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-309">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-309">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-310">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-310">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-311">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-311">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-312">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-312">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-313">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-313">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-314">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-314">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-315">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-315">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-316">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-316">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-317">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-317">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-318">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-318">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-319">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-319">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-320">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-320">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-321">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-321">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-322">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-322">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-323">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-323">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-324">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-324">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-325">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-325">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-326">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-326">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-327">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-327">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-328">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-328">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-329">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-329">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Hex">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a844-330">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-330">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (byte Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(unsigned int8 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::Byte Number);" />
      <MemberSignature Language="F#" Value="static member Hex : byte -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-331">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-331">Required.</span>
          </span>
          <span data-ttu-id="3a844-332">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-332">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-333">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-333">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-334">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-334">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-335">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-335">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-336">경우 `Number` 됩니다</span><span class="sxs-lookup"><span data-stu-id="3a844-336">If `Number` is</span></span>|<span data-ttu-id="3a844-337">16 진수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-337">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-338">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-338">Empty</span></span>|<span data-ttu-id="3a844-339">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-339">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-340">모든 숫자 값</span><span class="sxs-lookup"><span data-stu-id="3a844-340">Any numeric value</span></span>|<span data-ttu-id="3a844-341">최대 16 개의 16 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-341">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="3a844-342">16 진수 숫자 앞에 사용 하 여 적절 한 범위에서 직접 나타낼 수 있습니다 `&H`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-342">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="3a844-343">예를 들어 `&H10` 10 진수 16 진수 표기법으로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-343">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-344">이 예제에서는 `Hex` 숫자의 16 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-344">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-345">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-345">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-346">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-346">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-347">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-347">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md">
          <span data-ttu-id="3a844-348">방법: 16진수 문자열을 숫자로 변환</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-348">How to: Convert Hexadecimal Strings to Numbers</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (short Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(int16 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(short Number);" />
      <MemberSignature Language="F#" Value="static member Hex : int16 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-349">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-349">Required.</span>
          </span>
          <span data-ttu-id="3a844-350">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-350">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-351">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-351">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-352">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-352">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-353">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-353">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-354">경우 `Number` 됩니다</span><span class="sxs-lookup"><span data-stu-id="3a844-354">If `Number` is</span></span>|<span data-ttu-id="3a844-355">16 진수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-355">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-356">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-356">Empty</span></span>|<span data-ttu-id="3a844-357">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-357">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-358">모든 숫자 값</span><span class="sxs-lookup"><span data-stu-id="3a844-358">Any numeric value</span></span>|<span data-ttu-id="3a844-359">최대 16 개의 16 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-359">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="3a844-360">16 진수 숫자 앞에 사용 하 여 적절 한 범위에서 직접 나타낼 수 있습니다 `&H`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-360">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="3a844-361">예를 들어 `&H10` 10 진수 16 진수 표기법으로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-361">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-362">이 예제에서는 `Hex` 숫자의 16 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-362">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-363">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-363">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-364">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-364">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-365">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-365">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md">
          <span data-ttu-id="3a844-366">방법: 16진수 문자열을 숫자로 변환</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-366">How to: Convert Hexadecimal Strings to Numbers</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(int32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(int Number);" />
      <MemberSignature Language="F#" Value="static member Hex : int -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-367">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-367">Required.</span>
          </span>
          <span data-ttu-id="3a844-368">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-368">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-369">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-369">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-370">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-370">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-371">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-371">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-372">경우 `Number` 됩니다</span><span class="sxs-lookup"><span data-stu-id="3a844-372">If `Number` is</span></span>|<span data-ttu-id="3a844-373">16 진수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-373">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-374">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-374">Empty</span></span>|<span data-ttu-id="3a844-375">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-375">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-376">모든 숫자 값</span><span class="sxs-lookup"><span data-stu-id="3a844-376">Any numeric value</span></span>|<span data-ttu-id="3a844-377">최대 16 개의 16 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-377">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="3a844-378">16 진수 숫자 앞에 사용 하 여 적절 한 범위에서 직접 나타낼 수 있습니다 `&H`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-378">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="3a844-379">예를 들어 `&H10` 10 진수 16 진수 표기법으로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-379">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-380">이 예제에서는 `Hex` 숫자의 16 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-380">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-381">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-381">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-382">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-382">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-383">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-383">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md">
          <span data-ttu-id="3a844-384">방법: 16진수 문자열을 숫자로 변환</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-384">How to: Convert Hexadecimal Strings to Numbers</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (long Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(int64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(long Number);" />
      <MemberSignature Language="F#" Value="static member Hex : int64 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-385">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-385">Required.</span>
          </span>
          <span data-ttu-id="3a844-386">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-386">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-387">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-387">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-388">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-388">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-389">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-389">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-390">경우 `Number` 됩니다</span><span class="sxs-lookup"><span data-stu-id="3a844-390">If `Number` is</span></span>|<span data-ttu-id="3a844-391">16 진수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-391">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-392">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-392">Empty</span></span>|<span data-ttu-id="3a844-393">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-393">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-394">모든 숫자 값</span><span class="sxs-lookup"><span data-stu-id="3a844-394">Any numeric value</span></span>|<span data-ttu-id="3a844-395">최대 16 개의 16 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-395">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="3a844-396">16 진수 숫자 앞에 사용 하 여 적절 한 범위에서 직접 나타낼 수 있습니다 `&H`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-396">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="3a844-397">예를 들어 `&H10` 10 진수 16 진수 표기법으로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-397">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-398">이 예제에서는 `Hex` 숫자의 16 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-398">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-399">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-399">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-400">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-400">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-401">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-401">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md">
          <span data-ttu-id="3a844-402">방법: 16진수 문자열을 숫자로 변환</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-402">How to: Convert Hexadecimal Strings to Numbers</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (object Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(object Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::Object ^ Number);" />
      <MemberSignature Language="F#" Value="static member Hex : obj -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-403">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-403">Required.</span>
          </span>
          <span data-ttu-id="3a844-404">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-404">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-405">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-405">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-406">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-406">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-407">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-407">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-408">경우 `Number` 됩니다</span><span class="sxs-lookup"><span data-stu-id="3a844-408">If `Number` is</span></span>|<span data-ttu-id="3a844-409">16 진수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-409">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-410">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-410">Empty</span></span>|<span data-ttu-id="3a844-411">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-411">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-412">모든 숫자 값</span><span class="sxs-lookup"><span data-stu-id="3a844-412">Any numeric value</span></span>|<span data-ttu-id="3a844-413">최대 16 개의 16 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-413">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="3a844-414">16 진수 숫자 앞에 사용 하 여 적절 한 범위에서 직접 나타낼 수 있습니다 `&H`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-414">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="3a844-415">예를 들어 `&H10` 10 진수 16 진수 표기법으로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-415">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-416">이 예제에서는 `Hex` 숫자의 16 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-416">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-417">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-417">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-418">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-418">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-419">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-419">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md">
          <span data-ttu-id="3a844-420">방법: 16진수 문자열을 숫자로 변환</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-420">How to: Convert Hexadecimal Strings to Numbers</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (sbyte Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(int8 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::SByte Number);" />
      <MemberSignature Language="F#" Value="static member Hex : sbyte -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-421">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-421">Required.</span>
          </span>
          <span data-ttu-id="3a844-422">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-422">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-423">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-423">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-424">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-424">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-425">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-425">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-426">경우 `Number` 됩니다</span><span class="sxs-lookup"><span data-stu-id="3a844-426">If `Number` is</span></span>|<span data-ttu-id="3a844-427">16 진수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-427">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-428">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-428">Empty</span></span>|<span data-ttu-id="3a844-429">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-429">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-430">모든 숫자 값</span><span class="sxs-lookup"><span data-stu-id="3a844-430">Any numeric value</span></span>|<span data-ttu-id="3a844-431">최대 16 개의 16 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-431">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="3a844-432">16 진수 숫자 앞에 사용 하 여 적절 한 범위에서 직접 나타낼 수 있습니다 `&H`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-432">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="3a844-433">예를 들어 `&H10` 10 진수 16 진수 표기법으로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-433">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-434">이 예제에서는 `Hex` 숫자의 16 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-434">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-435">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-435">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-436">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-436">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-437">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-437">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md">
          <span data-ttu-id="3a844-438">방법: 16진수 문자열을 숫자로 변환</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-438">How to: Convert Hexadecimal Strings to Numbers</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (ushort Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(unsigned int16 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::UInt16 Number);" />
      <MemberSignature Language="F#" Value="static member Hex : uint16 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-439">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-439">Required.</span>
          </span>
          <span data-ttu-id="3a844-440">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-440">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-441">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-441">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-442">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-442">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-443">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-443">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-444">경우 `Number` 됩니다</span><span class="sxs-lookup"><span data-stu-id="3a844-444">If `Number` is</span></span>|<span data-ttu-id="3a844-445">16 진수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-445">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-446">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-446">Empty</span></span>|<span data-ttu-id="3a844-447">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-447">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-448">모든 숫자 값</span><span class="sxs-lookup"><span data-stu-id="3a844-448">Any numeric value</span></span>|<span data-ttu-id="3a844-449">최대 16 개의 16 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-449">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="3a844-450">16 진수 숫자 앞에 사용 하 여 적절 한 범위에서 직접 나타낼 수 있습니다 `&H`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-450">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="3a844-451">예를 들어 `&H10` 10 진수 16 진수 표기법으로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-451">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-452">이 예제에서는 `Hex` 숫자의 16 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-452">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-453">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-453">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-454">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-454">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-455">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-455">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md">
          <span data-ttu-id="3a844-456">방법: 16진수 문자열을 숫자로 변환</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-456">How to: Convert Hexadecimal Strings to Numbers</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (uint Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(unsigned int32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::UInt32 Number);" />
      <MemberSignature Language="F#" Value="static member Hex : uint32 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-457">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-457">Required.</span>
          </span>
          <span data-ttu-id="3a844-458">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-458">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-459">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-459">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-460">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-460">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-461">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-461">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-462">경우 `Number` 됩니다</span><span class="sxs-lookup"><span data-stu-id="3a844-462">If `Number` is</span></span>|<span data-ttu-id="3a844-463">16 진수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-463">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-464">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-464">Empty</span></span>|<span data-ttu-id="3a844-465">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-465">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-466">모든 숫자 값</span><span class="sxs-lookup"><span data-stu-id="3a844-466">Any numeric value</span></span>|<span data-ttu-id="3a844-467">최대 16 개의 16 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-467">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="3a844-468">16 진수 숫자 앞에 사용 하 여 적절 한 범위에서 직접 나타낼 수 있습니다 `&H`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-468">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="3a844-469">예를 들어 `&H10` 10 진수 16 진수 표기법으로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-469">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-470">이 예제에서는 `Hex` 숫자의 16 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-470">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-471">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-471">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-472">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-472">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-473">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-473">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md">
          <span data-ttu-id="3a844-474">방법: 16진수 문자열을 숫자로 변환</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-474">How to: Convert Hexadecimal Strings to Numbers</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Hex">
      <MemberSignature Language="C#" Value="public static string Hex (ulong Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Hex(unsigned int64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex (Number As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Hex(System::UInt64 Number);" />
      <MemberSignature Language="F#" Value="static member Hex : uint64 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Hex Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-475">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-475">Required.</span>
          </span>
          <span data-ttu-id="3a844-476">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-476">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-477">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-477">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-478">숫자의 16진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-478">Returns a string representing the hexadecimal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-479">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-479">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-480">경우 `Number` 됩니다</span><span class="sxs-lookup"><span data-stu-id="3a844-480">If `Number` is</span></span>|<span data-ttu-id="3a844-481">16 진수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-481">Hex returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-482">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-482">Empty</span></span>|<span data-ttu-id="3a844-483">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-483">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-484">모든 숫자 값</span><span class="sxs-lookup"><span data-stu-id="3a844-484">Any numeric value</span></span>|<span data-ttu-id="3a844-485">최대 16 개의 16 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-485">Up to sixteen hexadecimal characters</span></span>|  
  
 <span data-ttu-id="3a844-486">16 진수 숫자 앞에 사용 하 여 적절 한 범위에서 직접 나타낼 수 있습니다 `&H`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-486">You can represent hexadecimal numbers directly by preceding numbers in the proper range with `&H`.</span></span> <span data-ttu-id="3a844-487">예를 들어 `&H10` 10 진수 16 진수 표기법으로 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-487">For example, `&H10` represents decimal 16 in hexadecimal notation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-488">이 예제에서는 `Hex` 숫자의 16 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-488">This example uses the `Hex` function to return the hexadecimal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-489">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-489">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-490">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-490">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Oct" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-491">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-491">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/strings/how-to-convert-hexadecimal-strings-to-numbers.md">
          <span data-ttu-id="3a844-492">방법: 16진수 문자열을 숫자로 변환</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-492">How to: Convert Hexadecimal Strings to Numbers</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Int">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a844-493">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-493">Return the integer portion of a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static decimal Int (decimal Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.Decimal Int(valuetype System.Decimal Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Int(System::Decimal Number);" />
      <MemberSignature Language="F#" Value="static member Int : decimal -&gt; decimal" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-494">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-494">Required.</span>
          </span>
          <span data-ttu-id="3a844-495">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-495">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-496">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-496">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-497">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-497">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-498">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-498">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-499">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-499">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-500">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-500">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-501">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-501">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-502">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-502">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-503">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-503">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-504">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-504">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-505">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-505">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-506">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-506">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-507">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-507">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-508">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-508">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-509">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-509">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-510">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-510">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-511">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-511">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-512">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-512">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-513">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-513">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-514">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-514">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-515">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-515">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-516">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-516">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-517">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-517">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-518">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-518">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static double Int (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Int(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Int(double Number);" />
      <MemberSignature Language="F#" Value="static member Int : double -&gt; double" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-519">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-519">Required.</span>
          </span>
          <span data-ttu-id="3a844-520">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-520">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-521">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-521">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-522">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-522">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-523">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-523">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-524">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-524">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-525">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-525">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-526">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-526">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-527">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-527">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-528">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-528">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-529">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-529">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-530">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-530">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-531">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-531">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-532">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-532">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-533">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-533">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-534">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-534">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-535">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-535">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-536">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-536">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-537">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-537">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-538">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-538">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-539">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-539">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-540">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-540">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-541">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-541">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-542">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-542">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-543">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-543">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static short Int (short Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Int(int16 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Int(short Number);" />
      <MemberSignature Language="F#" Value="static member Int : int16 -&gt; int16" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-544">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-544">Required.</span>
          </span>
          <span data-ttu-id="3a844-545">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-545">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-546">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-546">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-547">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-547">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-548">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-548">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-549">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-549">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-550">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-550">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-551">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-551">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-552">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-552">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-553">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-553">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-554">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-554">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-555">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-555">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-556">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-556">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-557">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-557">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-558">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-558">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-559">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-559">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-560">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-560">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-561">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-561">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-562">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-562">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-563">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-563">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-564">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-564">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-565">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-565">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-566">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-566">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-567">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-567">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-568">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-568">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static int Int (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Int(int32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Int(int Number);" />
      <MemberSignature Language="F#" Value="static member Int : int -&gt; int" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-569">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-569">Required.</span>
          </span>
          <span data-ttu-id="3a844-570">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-570">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-571">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-571">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-572">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-572">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-573">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-573">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-574">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-574">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-575">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-575">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-576">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-576">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-577">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-577">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-578">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-578">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-579">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-579">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-580">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-580">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-581">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-581">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-582">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-582">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-583">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-583">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-584">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-584">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-585">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-585">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-586">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-586">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-587">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-587">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-588">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-588">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-589">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-589">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-590">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-590">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-591">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-591">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-592">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-592">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-593">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-593">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static long Int (long Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Int(int64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Int(long Number);" />
      <MemberSignature Language="F#" Value="static member Int : int64 -&gt; int64" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-594">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-594">Required.</span>
          </span>
          <span data-ttu-id="3a844-595">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-595">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-596">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-596">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-597">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-597">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-598">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-598">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-599">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-599">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-600">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-600">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-601">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-601">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-602">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-602">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-603">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-603">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-604">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-604">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-605">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-605">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-606">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-606">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-607">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-607">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-608">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-608">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-609">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-609">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-610">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-610">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-611">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-611">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-612">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-612">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-613">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-613">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-614">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-614">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-615">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-615">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-616">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-616">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-617">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-617">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-618">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-618">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static object Int (object Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Int(object Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Int(System::Object ^ Number);" />
      <MemberSignature Language="F#" Value="static member Int : obj -&gt; obj" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-619">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-619">Required.</span>
          </span>
          <span data-ttu-id="3a844-620">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-620">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-621">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-621">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-622">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-622">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-623">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-623">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-624">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-624">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-625">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-625">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-626">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-626">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-627">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-627">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-628">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-628">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-629">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-629">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-630">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-630">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-631">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-631">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-632">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-632">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-633">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-633">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-634">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-634">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-635">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-635">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-636">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-636">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-637">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-637">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-638">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-638">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-639">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-639">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-640">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-640">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-641">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-641">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-642">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-642">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-643">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-643">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static float Int (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Int(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Int(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Int (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Int(float Number);" />
      <MemberSignature Language="F#" Value="static member Int : single -&gt; single" Usage="Microsoft.VisualBasic.Conversion.Int Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-644">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-644">Required.</span>
          </span>
          <span data-ttu-id="3a844-645">
            <see langword="Double" /> 형식의 수이거나 임의의 유효한 숫자 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-645">A number of type <see langword="Double" /> or any valid numeric expression.</span>
          </span>
          <span data-ttu-id="3a844-646">
            <c>Number</c>에 <see langword="Nothing" />이 포함되어 있으면 <see langword="Nothing" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-646">If <c>Number</c> contains <see langword="Nothing" />, <see langword="Nothing" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-647">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-647">Return the integer portion of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-648">숫자의 정수 부분을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-648">Return the integer portion of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-649">모두를 `Int` 하 고 `Fix` 의 소수 부분을 제거 하는 함수 `Number` 결과 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-649">Both the `Int` and `Fix` functions remove the fractional part of `Number` and return the resulting integer value.</span></span>  
  
 <span data-ttu-id="3a844-650">차이점 `Int` 및 `Fix` 함수는 경우 `Number` 음수 이면 `Int` 보다 작거나 같음 첫 번째 음의 정수를 반환 `Number`반면 `Fix` 첫 번째 음의 정수를 반환 합니다. 보다 크거나 같은 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-650">The difference between `Int` and `Fix` functions is that if `Number` is negative, `Int` returns the first negative integer less than or equal to `Number`, whereas `Fix` returns the first negative integer greater than or equal to `Number`.</span></span> <span data-ttu-id="3a844-651">예를 들어 `Int` -8.4-9, 변환 및 `Fix` -8.4-8로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-651">For example, `Int` converts -8.4 to -9, and `Fix` converts -8.4 to -8.</span></span>  
  
 <span data-ttu-id="3a844-652">`Fix(number)` 해당 하는 `Sign(number) * Int(Abs(number)).`</span><span class="sxs-lookup"><span data-stu-id="3a844-652">`Fix(number)` is equivalent to `Sign(number) * Int(Abs(number)).`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-653">이 예제는 방법을 `Int` 및 `Fix` 함수는 숫자의 정수 부분을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-653">This example illustrates how the `Int` and `Fix` functions return integer portions of numbers.</span></span> <span data-ttu-id="3a844-654">인수가 음수인 경우는 `Int` 함수는 첫 번째 음의 정수를 반환 수; 보다 작거나는 `Fix` 수 보다 크거나 같은 경우 함수는 첫 번째 음의 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-654">In the case of a negative number argument, the `Int` function returns the first negative integer less than or equal to the number; the `Fix` function returns the first negative integer greater than or equal to the number.</span></span> <span data-ttu-id="3a844-655">다음 예제에서는 지정 해야 `Option Strict Off` 형식에서 암시적 변환을 `Double` 입력할 `Integer` 허용 되지 않습니다 `Option Strict On`:</span><span class="sxs-lookup"><span data-stu-id="3a844-655">The following example requires you to specify `Option Strict Off` because implicit conversions from type `Double` to type `Integer` are not allowed under `Option Strict On`:</span></span>  
  
 [!code-vb[VbVbalrMath#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class2.vb#4)]  
  
 <span data-ttu-id="3a844-656">사용할 수는 `CInt` 함수를 명시적으로 다른 데이터 형식을 형식으로 변환 `Integer` 사용 하 여 `Option Strict Off`입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-656">You can use the `CInt` function to explicitly convert other data types to type `Integer` with `Option Strict Off`.</span></span> <span data-ttu-id="3a844-657">그러나 `CInt` 숫자의 소수 부분을 잘라내는 하는 대신 가장 가까운 정수로 반올림 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-657">However, `CInt` rounds to the nearest integer instead of truncating the fractional part of numbers.</span></span> <span data-ttu-id="3a844-658">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-658">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#5)]  
  
 <span data-ttu-id="3a844-659">사용할 수는 `CInt` 함수에 대 한 호출의 결과에 `Fix` 또는 `Int` 반올림 하지 않고 정수로 변환 하는 명시적 변환을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-659">You can use the `CInt` function on the result of a call to `Fix` or `Int` to perform explicit conversion to integer without rounding.</span></span> <span data-ttu-id="3a844-660">예:</span><span class="sxs-lookup"><span data-stu-id="3a844-660">For example:</span></span>  
  
 [!code-vb[VbVbalrMath#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#6)]  
  
 <span data-ttu-id="3a844-661">에 대 한 자세한 `CInt`를 참조 하세요 [형식 변환 함수](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-661">For more information on `CInt`, see [Type Conversion Functions](~/docs/visual-basic/language-reference/functions/type-conversion-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-662">Number를 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-662">Number is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-663">Number가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-663">Number is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-664">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-664">Type Conversion Functions</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">
          <span data-ttu-id="3a844-665">데이터 형식 요약(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-665">Data Type Summary (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">
          <span data-ttu-id="3a844-666">수학 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-666">Math Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/math-functions.md">
          <span data-ttu-id="3a844-667">수학 함수(Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-667">Math Functions (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-668">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-668">Conversion Summary</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Oct">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a844-669">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-669">Returns a string representing the octal value of a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (byte Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(unsigned int8 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::Byte Number);" />
      <MemberSignature Language="F#" Value="static member Oct : byte -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-670">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-670">Required.</span>
          </span>
          <span data-ttu-id="3a844-671">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-671">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-672">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-672">Returns a string representing the octal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-673">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-673">Returns a string representing the octal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-674">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-674">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-675">Number가</span><span class="sxs-lookup"><span data-stu-id="3a844-675">If Number is</span></span>|<span data-ttu-id="3a844-676">10 월 반환</span><span class="sxs-lookup"><span data-stu-id="3a844-676">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-677">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-677">Empty</span></span>|<span data-ttu-id="3a844-678">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-678">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-679">다른 모든 숫자</span><span class="sxs-lookup"><span data-stu-id="3a844-679">Any other number</span></span>|<span data-ttu-id="3a844-680">22 최대 8 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-680">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="3a844-681">숫자 앞에 사용 하 여 적절 한 범위에서 직접 8 진수 숫자를 나타낼 수 있습니다 `&O`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-681">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="3a844-682">예를 들어 `&O10` 는 10 진수 8에 대 한 8 진수 표기법입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-682">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-683">이 예제에서는 `Oct` 숫자의 8 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-683">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-684">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-684">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-685">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-685">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-686">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-686">Conversion Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-687">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-687">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (short Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(int16 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(short Number);" />
      <MemberSignature Language="F#" Value="static member Oct : int16 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-688">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-688">Required.</span>
          </span>
          <span data-ttu-id="3a844-689">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-689">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-690">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-690">Returns a string representing the octal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-691">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-691">Returns a string representing the octal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-692">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-692">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-693">Number가</span><span class="sxs-lookup"><span data-stu-id="3a844-693">If Number is</span></span>|<span data-ttu-id="3a844-694">10 월 반환</span><span class="sxs-lookup"><span data-stu-id="3a844-694">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-695">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-695">Empty</span></span>|<span data-ttu-id="3a844-696">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-696">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-697">다른 모든 숫자</span><span class="sxs-lookup"><span data-stu-id="3a844-697">Any other number</span></span>|<span data-ttu-id="3a844-698">22 최대 8 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-698">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="3a844-699">숫자 앞에 사용 하 여 적절 한 범위에서 직접 8 진수 숫자를 나타낼 수 있습니다 `&O`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-699">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="3a844-700">예를 들어 `&O10` 는 10 진수 8에 대 한 8 진수 표기법입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-700">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-701">이 예제에서는 `Oct` 숫자의 8 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-701">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-702">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-702">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-703">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-703">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-704">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-704">Conversion Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-705">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-705">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (int Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(int32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(int Number);" />
      <MemberSignature Language="F#" Value="static member Oct : int -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-706">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-706">Required.</span>
          </span>
          <span data-ttu-id="3a844-707">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-707">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-708">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-708">Returns a string representing the octal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-709">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-709">Returns a string representing the octal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-710">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-710">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-711">Number가</span><span class="sxs-lookup"><span data-stu-id="3a844-711">If Number is</span></span>|<span data-ttu-id="3a844-712">10 월 반환</span><span class="sxs-lookup"><span data-stu-id="3a844-712">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-713">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-713">Empty</span></span>|<span data-ttu-id="3a844-714">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-714">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-715">다른 모든 숫자</span><span class="sxs-lookup"><span data-stu-id="3a844-715">Any other number</span></span>|<span data-ttu-id="3a844-716">22 최대 8 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-716">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="3a844-717">숫자 앞에 사용 하 여 적절 한 범위에서 직접 8 진수 숫자를 나타낼 수 있습니다 `&O`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-717">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="3a844-718">예를 들어 `&O10` 는 10 진수 8에 대 한 8 진수 표기법입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-718">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-719">이 예제에서는 `Oct` 숫자의 8 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-719">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-720">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-720">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-721">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-721">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-722">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-722">Conversion Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-723">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-723">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (long Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(int64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(long Number);" />
      <MemberSignature Language="F#" Value="static member Oct : int64 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-724">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-724">Required.</span>
          </span>
          <span data-ttu-id="3a844-725">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-725">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-726">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-726">Returns a string representing the octal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-727">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-727">Returns a string representing the octal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-728">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-728">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-729">Number가</span><span class="sxs-lookup"><span data-stu-id="3a844-729">If Number is</span></span>|<span data-ttu-id="3a844-730">10 월 반환</span><span class="sxs-lookup"><span data-stu-id="3a844-730">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-731">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-731">Empty</span></span>|<span data-ttu-id="3a844-732">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-732">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-733">다른 모든 숫자</span><span class="sxs-lookup"><span data-stu-id="3a844-733">Any other number</span></span>|<span data-ttu-id="3a844-734">22 최대 8 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-734">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="3a844-735">숫자 앞에 사용 하 여 적절 한 범위에서 직접 8 진수 숫자를 나타낼 수 있습니다 `&O`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-735">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="3a844-736">예를 들어 `&O10` 는 10 진수 8에 대 한 8 진수 표기법입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-736">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-737">이 예제에서는 `Oct` 숫자의 8 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-737">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-738">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-738">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-739">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-739">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-740">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-740">Conversion Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-741">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-741">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (object Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(object Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::Object ^ Number);" />
      <MemberSignature Language="F#" Value="static member Oct : obj -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-742">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-742">Required.</span>
          </span>
          <span data-ttu-id="3a844-743">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-743">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-744">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-744">Returns a string representing the octal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-745">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-745">Returns a string representing the octal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-746">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-746">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-747">Number가</span><span class="sxs-lookup"><span data-stu-id="3a844-747">If Number is</span></span>|<span data-ttu-id="3a844-748">10 월 반환</span><span class="sxs-lookup"><span data-stu-id="3a844-748">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-749">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-749">Empty</span></span>|<span data-ttu-id="3a844-750">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-750">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-751">다른 모든 숫자</span><span class="sxs-lookup"><span data-stu-id="3a844-751">Any other number</span></span>|<span data-ttu-id="3a844-752">22 최대 8 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-752">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="3a844-753">숫자 앞에 사용 하 여 적절 한 범위에서 직접 8 진수 숫자를 나타낼 수 있습니다 `&O`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-753">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="3a844-754">예를 들어 `&O10` 는 10 진수 8에 대 한 8 진수 표기법입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-754">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-755">이 예제에서는 `Oct` 숫자의 8 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-755">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-756">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-756">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-757">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-757">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-758">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-758">Conversion Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-759">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-759">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (sbyte Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(int8 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::SByte Number);" />
      <MemberSignature Language="F#" Value="static member Oct : sbyte -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-760">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-760">Required.</span>
          </span>
          <span data-ttu-id="3a844-761">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-761">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-762">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-762">Returns a string representing the octal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-763">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-763">Returns a string representing the octal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-764">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-764">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-765">Number가</span><span class="sxs-lookup"><span data-stu-id="3a844-765">If Number is</span></span>|<span data-ttu-id="3a844-766">10 월 반환</span><span class="sxs-lookup"><span data-stu-id="3a844-766">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-767">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-767">Empty</span></span>|<span data-ttu-id="3a844-768">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-768">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-769">다른 모든 숫자</span><span class="sxs-lookup"><span data-stu-id="3a844-769">Any other number</span></span>|<span data-ttu-id="3a844-770">22 최대 8 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-770">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="3a844-771">숫자 앞에 사용 하 여 적절 한 범위에서 직접 8 진수 숫자를 나타낼 수 있습니다 `&O`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-771">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="3a844-772">예를 들어 `&O10` 는 10 진수 8에 대 한 8 진수 표기법입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-772">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-773">이 예제에서는 `Oct` 숫자의 8 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-773">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-774">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-774">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-775">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-775">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-776">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-776">Conversion Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-777">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-777">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (ushort Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(unsigned int16 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::UInt16 Number);" />
      <MemberSignature Language="F#" Value="static member Oct : uint16 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-778">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-778">Required.</span>
          </span>
          <span data-ttu-id="3a844-779">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-779">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-780">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-780">Returns a string representing the octal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-781">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-781">Returns a string representing the octal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-782">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-782">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-783">Number가</span><span class="sxs-lookup"><span data-stu-id="3a844-783">If Number is</span></span>|<span data-ttu-id="3a844-784">10 월 반환</span><span class="sxs-lookup"><span data-stu-id="3a844-784">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-785">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-785">Empty</span></span>|<span data-ttu-id="3a844-786">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-786">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-787">다른 모든 숫자</span><span class="sxs-lookup"><span data-stu-id="3a844-787">Any other number</span></span>|<span data-ttu-id="3a844-788">22 최대 8 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-788">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="3a844-789">숫자 앞에 사용 하 여 적절 한 범위에서 직접 8 진수 숫자를 나타낼 수 있습니다 `&O`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-789">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="3a844-790">예를 들어 `&O10` 는 10 진수 8에 대 한 8 진수 표기법입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-790">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-791">이 예제에서는 `Oct` 숫자의 8 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-791">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-792">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-792">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-793">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-793">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-794">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-794">Conversion Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-795">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-795">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (uint Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(unsigned int32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::UInt32 Number);" />
      <MemberSignature Language="F#" Value="static member Oct : uint32 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-796">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-796">Required.</span>
          </span>
          <span data-ttu-id="3a844-797">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-797">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-798">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-798">Returns a string representing the octal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-799">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-799">Returns a string representing the octal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-800">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-800">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-801">Number가</span><span class="sxs-lookup"><span data-stu-id="3a844-801">If Number is</span></span>|<span data-ttu-id="3a844-802">10 월 반환</span><span class="sxs-lookup"><span data-stu-id="3a844-802">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-803">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-803">Empty</span></span>|<span data-ttu-id="3a844-804">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-804">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-805">다른 모든 숫자</span><span class="sxs-lookup"><span data-stu-id="3a844-805">Any other number</span></span>|<span data-ttu-id="3a844-806">22 최대 8 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-806">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="3a844-807">숫자 앞에 사용 하 여 적절 한 범위에서 직접 8 진수 숫자를 나타낼 수 있습니다 `&O`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-807">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="3a844-808">예를 들어 `&O10` 는 10 진수 8에 대 한 8 진수 표기법입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-808">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-809">이 예제에서는 `Oct` 숫자의 8 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-809">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-810">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-810">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-811">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-811">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-812">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-812">Conversion Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-813">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-813">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Oct">
      <MemberSignature Language="C#" Value="public static string Oct (ulong Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Oct(unsigned int64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct (Number As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Oct(System::UInt64 Number);" />
      <MemberSignature Language="F#" Value="static member Oct : uint64 -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Oct Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-814">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-814">Required.</span>
          </span>
          <span data-ttu-id="3a844-815">임의의 유효한 숫자 식 또는 <see langword="String" /> 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-815">Any valid numeric expression or <see langword="String" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-816">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-816">Returns a string representing the octal value of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-817">숫자의 8진수 값을 나타내는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-817">Returns a string representing the octal value of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-818">경우 `Number` 하지 않은 정수 계산 되기 전에 가장 가까운 정수로 반올림 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-818">If `Number` is not already a whole number, it is rounded to the nearest whole number before being evaluated.</span></span>  
  
|<span data-ttu-id="3a844-819">Number가</span><span class="sxs-lookup"><span data-stu-id="3a844-819">If Number is</span></span>|<span data-ttu-id="3a844-820">10 월 반환</span><span class="sxs-lookup"><span data-stu-id="3a844-820">Oct returns</span></span>|  
|-|-|  
|<span data-ttu-id="3a844-821">Empty</span><span class="sxs-lookup"><span data-stu-id="3a844-821">Empty</span></span>|<span data-ttu-id="3a844-822">영 (0)</span><span class="sxs-lookup"><span data-stu-id="3a844-822">Zero (0)</span></span>|  
|<span data-ttu-id="3a844-823">다른 모든 숫자</span><span class="sxs-lookup"><span data-stu-id="3a844-823">Any other number</span></span>|<span data-ttu-id="3a844-824">22 최대 8 진수 문자</span><span class="sxs-lookup"><span data-stu-id="3a844-824">Up to 22 octal characters</span></span>|  
  
 <span data-ttu-id="3a844-825">숫자 앞에 사용 하 여 적절 한 범위에서 직접 8 진수 숫자를 나타낼 수 있습니다 `&O`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-825">You can represent octal numbers directly by preceding numbers in the proper range with `&O`.</span></span> <span data-ttu-id="3a844-826">예를 들어 `&O10` 는 10 진수 8에 대 한 8 진수 표기법입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-826">For example, `&O10` is the octal notation for decimal 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-827">이 예제에서는 `Oct` 숫자의 8 진수 값을 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-827">This example uses the `Oct` function to return the octal value of a number.</span></span>  
  
 [!code-vb[VbVbalrStrings#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-828">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-828">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-829">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-829">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Hex" />
        <altmember cref="T:System.ArgumentNullException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-830">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-830">Conversion Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-831">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-831">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Str">
      <MemberSignature Language="C#" Value="public static string Str (object Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Str(object Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Str (Number As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Str(System::Object ^ Number);" />
      <MemberSignature Language="F#" Value="static member Str : obj -&gt; string" Usage="Microsoft.VisualBasic.Conversion.Str Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number">
          <span data-ttu-id="3a844-832">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-832">Required.</span>
          </span>
          <span data-ttu-id="3a844-833">임의의 유효한 숫자 식을 포함하는 <see langword="Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-833">An <see langword="Object" /> containing any valid numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-834">숫자를 나타내는 <see langword="String" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-834">Returns a <see langword="String" /> representation of a number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-835">숫자를 나타내는 <see langword="String" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-835">Returns a <see langword="String" /> representation of a number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-836">부호에 대 한 숫자를 문자열로 변환 되 면 선행 공백이 항상 예약 됩니다 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-836">When numbers are converted to strings, a leading space is always reserved for the sign of `Number`.</span></span> <span data-ttu-id="3a844-837">경우 `Number` 이 양수인 경우 반환 되는 문자열 앞에 공백이 있고 더하기 인 것으로 간주 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-837">If `Number` is positive, the returned string contains a leading space, and the plus sign is implied.</span></span> <span data-ttu-id="3a844-838">음수는 빼기 기호 (-) 및 선행 공백 없이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-838">A negative number will include the minus sign (-) and no leading space.</span></span>  
  
 <span data-ttu-id="3a844-839">사용 된 `Format` 숫자 값을 형식이 지정 된 날짜, 시간 또는 통화 또는 다른 사용자 정의 형식으로 변환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-839">Use the `Format` function to convert numeric values you want formatted as dates, times, or currency or in other user-defined formats.</span></span> <span data-ttu-id="3a844-840">와 달리 합니다 `Str` 함수는 `Format` 함수의 부호에 대 한 선행 공백을 포함 하지 않습니다 `Number`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-840">Unlike the `Str` function, the `Format` function does not include a leading space for the sign of `Number`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a844-841">합니다 `Str` 기간만 인식 합니다 (`.`) 유효한 소수 구분 기호로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-841">The `Str` function recognizes only the period (`.`) as a valid decimal separator.</span></span> <span data-ttu-id="3a844-842">다른 소수 구분 기호 (예를 들어 국가별 응용 프로그램)에서 사용 하는 경우 사용 합니다 `CStr` 또는 `Format` 숫자를 문자열로 변환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-842">If different decimal separators are used (for example, in international applications), use the `CStr` or `Format` functions to convert a number to a string.</span></span> <span data-ttu-id="3a844-843">숫자의 문자열 표현을 특정 문화권에서을 사용 수의 `ToString(IFormatProvider)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="3a844-843">To get the string representation of a number in a particular culture, use the number's `ToString(IFormatProvider)` method.</span></span> <span data-ttu-id="3a844-844">사용 예를 들어 <xref:System.Double.ToString%2A> 형식의 값을 변환할 때는 `Double` 문자열로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-844">For example, use <xref:System.Double.ToString%2A> when converting a value of type `Double` to a string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a844-845">이 예제에서는 합니다 `Str` 함수를 반환 하는 `String` 숫자로 표현 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-845">This example uses the `Str` function to return a `String` representation of a number.</span></span> <span data-ttu-id="3a844-846">양수 값을 문자열로 변환할 때, 해당 로그인에 대 한 선행 공백이 항상 예약 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-846">When a positive number is converted to a string, a leading space is always reserved for its sign.</span></span>  
  
 [!code-vb[VbVbalrStrings#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrStrings/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3a844-847">
            <paramref name="Number" />을(를) 지정하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-847">
              <paramref name="Number" /> is not specified.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3a844-848">
            <paramref name="Number" />가 숫자 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-848">
              <paramref name="Number" /> is not a numeric type.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="Overload:Microsoft.VisualBasic.Conversion.Val" />
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.InvalidCastException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/conversion-summary.md">
          <span data-ttu-id="3a844-849">변환 요약</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-849">Conversion Summary</span>
          </span>
        </related>
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-850">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-850">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Val">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a844-851">문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-851">Returns the numbers contained in a string as a numeric value of appropriate type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public static int Val (char Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Val(char Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Val(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Val (Expression As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Val(char Expression);" />
      <MemberSignature Language="F#" Value="static member Val : char -&gt; int" Usage="Microsoft.VisualBasic.Conversion.Val Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="3a844-852">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-852">Required.</span>
          </span>
          <span data-ttu-id="3a844-853">모든 유효한 <see langword="String" /> 식, <see langword="Object" /> 변수 또는 <see langword="Char" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-853">Any valid <see langword="String" /> expression, <see langword="Object" /> variable, or <see langword="Char" /> value.</span>
          </span>
          <span data-ttu-id="3a844-854">
            <c>Expression</c>이 <see langword="Object" /> 형식인 경우 해당 값을 <see langword="String" />으로 변환할 수 있어야 합니다. 그렇지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-854">If <c>Expression</c> is of type <see langword="Object" />, its value must be convertible to <see langword="String" /> or an <see cref="T:System.ArgumentException" /> error occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-855">문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-855">Returns the numbers contained in a string as a numeric value of appropriate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-856">문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-856">Returns the numbers contained in a string as a numeric value of appropriate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-857">`Val` 함수는 숫자의 일부분으로 인식할 수 없는 첫 문자에서 문자열 읽기를 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-857">The `Val` function stops reading the string at the first character it cannot recognize as part of a number.</span></span> <span data-ttu-id="3a844-858">주로 달러 기호 및 쉼표와 같은 숫자 값의 일부로 간주 되는 기호 및 문자 인식 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-858">Symbols and characters that are often considered parts of numeric values, such as dollar signs and commas, are not recognized.</span></span> <span data-ttu-id="3a844-859">그러나 함수 인식 기 접두사 `&O` (에 대 한 8 진수) 및 `&H` (16 진수)에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-859">However, the function recognizes the radix prefixes `&O` (for octal) and `&H` (for hexadecimal).</span></span> <span data-ttu-id="3a844-860">공백, 탭 및 줄 바꿈 문자 인수에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-860">Blanks, tabs, and linefeed characters are stripped from the argument.</span></span>  
  
 <span data-ttu-id="3a844-861">다음 호출에서는 값 1615198이 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-861">The following call returns the value 1615198.</span></span>  
  
```  
  
Val(" 1615 198th Street N.E.")   
```  
  
 <span data-ttu-id="3a844-862">다음 호출 10 진수 값-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-862">The following call returns the decimal value -1.</span></span>  
  
```  
  
Val("&HFFFF")   
```  
  
> [!NOTE]
>  <span data-ttu-id="3a844-863">합니다 `Val` 기간만 인식 합니다 (`.`) 유효한 소수 구분 기호로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-863">The `Val` function recognizes only the period (`.`) as a valid decimal separator.</span></span> <span data-ttu-id="3a844-864">10 진수 구분 하는 경우 사용 하 여 `CDbl` 또는 `CInt` 대신 문자열을 숫자로 변환 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-864">When different decimal separators are used, as in international applications, use `CDbl` or `CInt` instead to convert a string to a number.</span></span> <span data-ttu-id="3a844-865">사용할 숫자 형식의 숫자 값을 특정 문화권의 숫자의 문자열 표현으로 변환 하려면 `Parse(String, IFormatProvider)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="3a844-865">To convert the string representation of a number in a particular culture to a numeric value, use the numeric type's `Parse(String, IFormatProvider)` method.</span></span> <span data-ttu-id="3a844-866">사용 예를 들어 <xref:System.Double.Parse%2A?displayProperty=nameWithType> 문자열을 변환 하는 경우는 `Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-866">For example, use <xref:System.Double.Parse%2A?displayProperty=nameWithType> when converting a string to a `Double`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a844-867"><xref:System.InvalidCastException> 일반적이 지 않은 특정 숫자 형식에 대 한 응답에서 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-867">An <xref:System.InvalidCastException> exception might be raised in response to certain uncommon number formats.</span></span> <span data-ttu-id="3a844-868">예를 들어, 다음 코드는이 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-868">For example, the following code raises this exception.</span></span>  
>   
>  `' These examples cause run-time errors.`  
>   
>  `'Console.WriteLine(Val("1.34%"))`  
>   
>  `'Console.WriteLine(Val("1.34&"))`  
>   
>  <span data-ttu-id="3a844-869">사이 충돌이 형식으로 지정는 `Double` 하며 `Integer` 및 `Long` 형식 문자는 문자열에 포함 되지 않은 경우 컴파일러에서 포착 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-869">The conflict between the number formatted as a `Double` and the `Integer` and `Long` type characters would be caught by the compiler if it were not contained in a string.</span></span>  
>   
>  `' These examples cause compiler errors.`  
>   
>  `'Dim m = 1.34%`  
>   
>  `'Dim n = 1.34&`  
  
   
  
## Examples  
 <span data-ttu-id="3a844-870">다음 예제에서는 `Val` 각 문자열에 포함 된 숫자를 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-870">The following example uses the `Val` function to return the numbers contained in each string.</span></span> <span data-ttu-id="3a844-871">`Val` 숫자, 숫자 한정자, 숫자 문장 부호, 공백 또는 해석 될 수 없는 첫 번째 문자에서 변환 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-871">`Val` stops converting at the first character that cannot be interpreted as a numeric digit, numeric modifier, numeric punctuation, or white space.</span></span>  
  
 [!code-vb[VbVbalrFunctions#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="3a844-872">
            <paramref name="InputStr" />이 너무 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-872">
              <paramref name="InputStr" /> is too large.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-873">
            <paramref name="Expression" />은 <see langword="String" />으로 변환할 수 없는 <see langword="Object" /> 형식의 식인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-873">
              <paramref name="Expression" /> is an <see langword="Object" /> type expression that is not convertible to <see langword="String" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.OverflowException" />
        <altmember cref="T:System.InvalidCastException" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-874">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-874">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public static double Val (object Expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Val(object Expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Val(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Val (Expression As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Val(System::Object ^ Expression);" />
      <MemberSignature Language="F#" Value="static member Val : obj -&gt; double" Usage="Microsoft.VisualBasic.Conversion.Val Expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="3a844-875">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-875">Required.</span>
          </span>
          <span data-ttu-id="3a844-876">모든 유효한 <see langword="String" /> 식, <see langword="Object" /> 변수 또는 <see langword="Char" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-876">Any valid <see langword="String" /> expression, <see langword="Object" /> variable, or <see langword="Char" /> value.</span>
          </span>
          <span data-ttu-id="3a844-877">
            <c>Expression</c>이 <see langword="Object" /> 형식인 경우 해당 값을 <see langword="String" />으로 변환할 수 있어야 합니다. 그렇지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-877">If <c>Expression</c> is of type <see langword="Object" />, its value must be convertible to <see langword="String" /> or an <see cref="T:System.ArgumentException" /> error occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-878">문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-878">Returns the numbers contained in a string as a numeric value of appropriate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-879">문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-879">Returns the numbers contained in a string as a numeric value of appropriate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-880">`Val` 함수는 숫자의 일부분으로 인식할 수 없는 첫 문자에서 문자열 읽기를 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-880">The `Val` function stops reading the string at the first character it cannot recognize as part of a number.</span></span> <span data-ttu-id="3a844-881">주로 달러 기호 및 쉼표와 같은 숫자 값의 일부로 간주 되는 기호 및 문자 인식 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-881">Symbols and characters that are often considered parts of numeric values, such as dollar signs and commas, are not recognized.</span></span> <span data-ttu-id="3a844-882">그러나 함수 인식 기 접두사 `&O` (에 대 한 8 진수) 및 `&H` (16 진수)에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-882">However, the function recognizes the radix prefixes `&O` (for octal) and `&H` (for hexadecimal).</span></span> <span data-ttu-id="3a844-883">공백, 탭 및 줄 바꿈 문자 인수에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-883">Blanks, tabs, and linefeed characters are removed from the argument.</span></span>  
  
 <span data-ttu-id="3a844-884">다음 호출 1234123 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-884">The following call returns the value 1234123.</span></span>  
  
```  
  
Val(" 1234 123th Street N.E.")   
```  
  
 <span data-ttu-id="3a844-885">다음 호출 10 진수 값-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-885">The following call returns the decimal value -1.</span></span>  
  
```  
  
Val("&HFFFF")   
```  
  
> [!NOTE]
>  <span data-ttu-id="3a844-886">합니다 `Val` 기간만 인식 합니다 (`.`) 유효한 소수 구분 기호로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-886">The `Val` function recognizes only the period (`.`) as a valid decimal separator.</span></span> <span data-ttu-id="3a844-887">국가별 응용 프로그램, 다른 소수 구분 기호를 사용 하는 경우 사용할 `CDbl` 또는 `CInt` 대신 문자열을 숫자로 변환 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-887">When other decimal separators are used, as in international applications, use `CDbl` or `CInt` instead to convert a string to a number.</span></span> <span data-ttu-id="3a844-888">사용할 숫자 형식의 숫자 값을 특정 문화권의 숫자의 문자열 표현으로 변환 하려면 `Parse(String, IFormatProvider)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="3a844-888">To convert the string representation of a number in a particular culture to a numeric value, use the numeric type's `Parse(String, IFormatProvider)` method.</span></span> <span data-ttu-id="3a844-889">사용 예를 들어 <xref:System.Double.Parse%2A?displayProperty=nameWithType> 문자열을 변환 하는 경우는 `Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-889">For example, use <xref:System.Double.Parse%2A?displayProperty=nameWithType> when converting a string to a `Double`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a844-890"><xref:System.InvalidCastException> 일반적이 지 않은 특정 숫자 형식에 대 한 응답에서 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-890">An <xref:System.InvalidCastException> exception might be raised in response to certain uncommon number formats.</span></span> <span data-ttu-id="3a844-891">예를 들어, 다음 코드는이 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-891">For example, the following code raises this exception.</span></span>  
>   
>  `' These examples cause run-time errors.`  
>   
>  `'Console.WriteLine(Val("1.34%"))`  
>   
>  `'Console.WriteLine(Val("1.34&"))`  
>   
>  <span data-ttu-id="3a844-892">사이 충돌이 형식으로 지정 된 `Double` 및 `Integer` 및 `Long` 충돌 문자열에 포함 되지 않은 경우 컴파일러에서 형식 문자를 포착 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-892">The conflict between the number formatted as a `Double` and the `Integer` and `Long` type characters would be caught by the compiler if the conflict were not contained in strings.</span></span>  
>   
>  `' These examples cause compiler errors.`  
>   
>  `'Dim m = 1.34%`  
>   
>  `'Dim n = 1.34&`  
  
   
  
## Examples  
 <span data-ttu-id="3a844-893">다음 예제에서는 `Val` 각 문자열에 포함 된 숫자를 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-893">The following example uses the `Val` function to return the numbers contained in each string.</span></span> <span data-ttu-id="3a844-894">`Val` 숫자, 숫자 한정자, 숫자 문장 부호, 공백 또는 해석 될 수 없는 첫 번째 문자에서 변환 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-894">`Val` stops converting at the first character that cannot be interpreted as a numeric digit, numeric modifier, numeric punctuation, or white space.</span></span>  
  
 [!code-vb[VbVbalrFunctions#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="3a844-895">
            <paramref name="InputStr" />이 너무 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-895">
              <paramref name="InputStr" /> is too large.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-896">
            <paramref name="Expression" />은 <see langword="String" />으로 변환할 수 없는 <see langword="Object" /> 형식의 식인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-896">
              <paramref name="Expression" /> is an <see langword="Object" /> type expression that is not convertible to <see langword="String" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.OverflowException" />
        <altmember cref="T:System.InvalidCastException" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-897">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-897">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public static double Val (string InputStr);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 Val(string InputStr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Conversion.Val(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Val (InputStr As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Val(System::String ^ InputStr);" />
      <MemberSignature Language="F#" Value="static member Val : string -&gt; double" Usage="Microsoft.VisualBasic.Conversion.Val InputStr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InputStr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="InputStr">
          <span data-ttu-id="3a844-898">필수.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-898">Required.</span>
          </span>
          <span data-ttu-id="3a844-899">모든 유효한 <see langword="String" /> 식, <see langword="Object" /> 변수 또는 <see langword="Char" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-899">Any valid <see langword="String" /> expression, <see langword="Object" /> variable, or <see langword="Char" /> value.</span>
          </span>
          <span data-ttu-id="3a844-900">
            <c>Expression</c>이 <see langword="Object" /> 형식인 경우 해당 값을 <see langword="String" />으로 변환할 수 있어야 합니다. 그렇지 않으면 <see cref="T:System.ArgumentException" /> 오류가 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-900">If <c>Expression</c> is of type <see langword="Object" />, its value must be convertible to <see langword="String" /> or an <see cref="T:System.ArgumentException" /> error occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a844-901">문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-901">Returns the numbers contained in a string as a numeric value of appropriate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a844-902">문자열에 포함된 숫자를 적절한 형식의 숫자 값으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-902">Returns the numbers contained in a string as a numeric value of appropriate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a844-903">`Val` 함수는 숫자의 일부분으로 인식할 수 없는 첫 문자에서 문자열 읽기를 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-903">The `Val` function stops reading the string at the first character it cannot recognize as part of a number.</span></span> <span data-ttu-id="3a844-904">주로 달러 기호 및 쉼표와 같은 숫자 값의 일부로 간주 되는 기호 및 문자 인식 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-904">Symbols and characters that are often considered parts of numeric values, such as dollar signs and commas, are not recognized.</span></span> <span data-ttu-id="3a844-905">그러나 함수 인식 기 접두사 `&O` (에 대 한 8 진수) 및 `&H` (16 진수)에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-905">However, the function recognizes the radix prefixes `&O` (for octal) and `&H` (for hexadecimal).</span></span> <span data-ttu-id="3a844-906">공백, 탭 및 줄 바꿈 문자 인수에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-906">Blanks, tabs, and linefeed characters are removed from the argument.</span></span>  
  
 <span data-ttu-id="3a844-907">다음 호출 1234123 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-907">The following call returns the value 1234123.</span></span>  
  
```  
  
Val(" 1234 123th Street N.E.")   
```  
  
 <span data-ttu-id="3a844-908">다음 호출 10 진수 값-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-908">The following call returns the decimal value -1.</span></span>  
  
```  
  
Val("&HFFFF")   
```  
  
> [!NOTE]
>  <span data-ttu-id="3a844-909">합니다 `Val` 기간만 인식 합니다 (`.`) 유효한 소수 구분 기호로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-909">The `Val` function recognizes only the period (`.`) as a valid decimal separator.</span></span> <span data-ttu-id="3a844-910">국가별 응용 프로그램, 다른 소수 구분 기호를 사용 하는 경우 사용할 `CDbl` 또는 `CInt` 대신 문자열을 숫자로 변환 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-910">When other decimal separators are used, as in international applications, use `CDbl` or `CInt` instead to convert a string to a number.</span></span> <span data-ttu-id="3a844-911">사용할 숫자 형식의 숫자 값을 특정 문화권의 숫자의 문자열 표현으로 변환 하려면 `Parse(String, IFormatProvider)` 메서드.</span><span class="sxs-lookup"><span data-stu-id="3a844-911">To convert the string representation of a number in a particular culture to a numeric value, use the numeric type's `Parse(String, IFormatProvider)` method.</span></span> <span data-ttu-id="3a844-912">사용 예를 들어 <xref:System.Double.Parse%2A?displayProperty=nameWithType> 문자열을 변환 하는 경우는 `Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-912">For example, use <xref:System.Double.Parse%2A?displayProperty=nameWithType> when converting a string to a `Double`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a844-913"><xref:System.InvalidCastException> 일반적이 지 않은 특정 숫자 형식에 대 한 응답에서 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-913">An <xref:System.InvalidCastException> exception might be raised in response to certain uncommon number formats.</span></span> <span data-ttu-id="3a844-914">예를 들어, 다음 코드는이 예외가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-914">For example, the following code raises this exception.</span></span>  
>   
>  `' These examples cause run-time errors.`  
>   
>  `'Console.WriteLine(Val("1.34%"))`  
>   
>  `'Console.WriteLine(Val("1.34&"))`  
>   
>  <span data-ttu-id="3a844-915">사이 충돌이 형식으로 지정 된 `Double` 및 `Integer` 및 `Long` 충돌 문자열에 포함 되지 않은 경우 컴파일러에서 형식 문자를 포착 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-915">The conflict between the number formatted as a `Double` and the `Integer` and `Long` type characters would be caught by the compiler if the conflict were not contained in strings.</span></span>  
>   
>  `' These examples cause compiler errors.`  
>   
>  `'Dim m = 1.34%`  
>   
>  `'Dim n = 1.34&`  
  
   
  
## Examples  
 <span data-ttu-id="3a844-916">다음 예제에서는 `Val` 각 문자열에 포함 된 숫자를 반환 하는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-916">The following example uses the `Val` function to return the numbers contained in each string.</span></span> <span data-ttu-id="3a844-917">`Val` 숫자, 숫자 한정자, 숫자 문장 부호, 공백 또는 해석 될 수 없는 첫 번째 문자에서 변환 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="3a844-917">`Val` stops converting at the first character that cannot be interpreted as a numeric digit, numeric modifier, numeric punctuation, or white space.</span></span>  
  
 [!code-vb[VbVbalrFunctions#54](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#54)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="3a844-918">
            <paramref name="InputStr" />이 너무 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-918">
              <paramref name="InputStr" /> is too large.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a844-919">
            <paramref name="Expression" />은 <see langword="String" />으로 변환할 수 없는 <see langword="Object" /> 형식의 식인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-919">
              <paramref name="Expression" /> is an <see langword="Object" /> type expression that is not convertible to <see langword="String" />.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.VisualBasic.Conversion.Str(System.Object)" />
        <altmember cref="T:System.OverflowException" />
        <altmember cref="T:System.InvalidCastException" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/functions/type-conversion-functions.md">
          <span data-ttu-id="3a844-920">CString</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a844-920">Type Conversion Functions</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>