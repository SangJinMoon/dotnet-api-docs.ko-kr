<Type Name="CompareInfo" FullName="System.Globalization.CompareInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d150c7756aece4a724e93be5298222625bc06fc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36487848" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CompareInfo : System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompareInfo extends System.Object implements class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CompareInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareInfo&#xA;Implements IDeserializationCallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareInfo : System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type CompareInfo = class&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c1c11-101">Implements a set of methods for culture-sensitive string comparisons.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c1c11-101">Implements a set of methods for culture-sensitive string comparisons.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-102">데이터 비교 및 정렬에 대 한 규칙에는 문화권 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-102">Conventions for comparing and sorting data vary from culture to culture.</span></span> <span data-ttu-id="c1c11-103">예를 들어 윗주 또는 문자의 시각적 표시 정렬 순서를 기반으로 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-103">For example, sort order may be based on phonetics or on the visual representation of characters.</span></span> <span data-ttu-id="c1c11-104">동아시아 언어에서는 표의 문자의 부수와 획에 따라 문자가 정렬됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-104">In East Asian languages, characters are sorted by the stroke and radical of ideographs.</span></span> <span data-ttu-id="c1c11-105">언어와 문화권이 알파벳에 사용하는 순서에 따라 정렬 순서가 달라지기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-105">Sorting also depends on the order languages and cultures use for the alphabet.</span></span> <span data-ttu-id="c1c11-106">예를 들어 덴마크어 알파벳의 "Æ" 문자는 "Z" 다음에 옵니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-106">For example, the Danish language has an "Æ" character that it sorts after "Z" in the alphabet.</span></span> <span data-ttu-id="c1c11-107">또한 비교는 대/소문자 구분 또는 대/소문자를 구분 될 수 있습니다 및 대/소문자 규칙 문화권에 의해도 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-107">In addition, comparisons may be case-sensitive or case-insensitive, and casing rules may also differ by culture.</span></span> <span data-ttu-id="c1c11-108"><xref:System.Globalization.CompareInfo> 클래스는이 문화권 구분 문자열 비교 데이터를 유지 관리 하 고 문화권 구분 문자열 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-108">The <xref:System.Globalization.CompareInfo> class is responsible for maintaining this culture-sensitive string comparison data and for performing culture-sensitive string operations.</span></span>  
  
 <span data-ttu-id="c1c11-109">인스턴스화할 필요가 없습니다 일반적으로 <xref:System.Globalization.CompareInfo> 모든 비-서 수 문자열 비교 연산에서 암시적으로 사용 되 하나를 직접 개체에 대 한 호출을 포함 하 여는 <xref:System.String.Compare%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c1c11-109">Typically, you do not have to instantiate a <xref:System.Globalization.CompareInfo> object directly, because one is used implicitly by all non-ordinal string comparison operations, including calls to the <xref:System.String.Compare%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c1c11-110">그러나 검색 하려는 경우는 <xref:System.Globalization.CompareInfo> 개체를 이러한 방법 중 하나로 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-110">However, if you do want to retrieve a <xref:System.Globalization.CompareInfo> object, you can do it in one of these ways:</span></span>  
  
-   <span data-ttu-id="c1c11-111">값을 검색 하는 여는 <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> 특정 문화권에 대 한 속성.</span><span class="sxs-lookup"><span data-stu-id="c1c11-111">By retrieving the value of the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> property for a particular culture.</span></span>  
  
-   <span data-ttu-id="c1c11-112">정적을 호출 하 여 <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> 문화권 이름 사용한 메서드.</span><span class="sxs-lookup"><span data-stu-id="c1c11-112">By calling the static <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> method with a culture name.</span></span> <span data-ttu-id="c1c11-113">이 통해에 대 한 런타임에 바인딩된 액세스는 <xref:System.Globalization.CompareInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-113">This allows for late-bound access to a <xref:System.Globalization.CompareInfo> object.</span></span>  
  
## <a name="ignored-search-values"></a><span data-ttu-id="c1c11-114">검색 값 무시</span><span class="sxs-lookup"><span data-stu-id="c1c11-114">Ignored search values</span></span>  
 <span data-ttu-id="c1c11-115">문자 집합에는 무시할 수 있는 문자가 포함되며, 이들 문자는 언어 또는 문화권 구분 비교를 수행하는 경우 고려되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-115">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="c1c11-116">와 같은 비교 메서드 <xref:System.Globalization.CompareInfo.IndexOf%2A> 및 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-116">Comparison methods such as <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> do not consider such characters when they perform a culture-sensitive comparison.</span></span> <span data-ttu-id="c1c11-117">무시할 수 있는 문자는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-117">Ignorable characters include:</span></span>  
  
-   <span data-ttu-id="c1c11-118"><xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c1c11-118"><xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c1c11-119">문화권 구분 비교 메서드는 검색 되는 문자열의 시작 부분 (인덱스 0)에 빈 문자열을 검색 항상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-119">Culture-sensitive comparison methods will always find an empty string at the beginning (index zero) of the string being searched.</span></span>  
  
-   <span data-ttu-id="c1c11-120">특히, 비교 옵션 때문에 작업에 간주 되지 않는 코드 포인트를 사용 하는 문자 구성 된 문자열 또는 문자는 <xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> 및 <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> 기호와 공백 없는 결합에 검색이 옵션 문자는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-120">A character or string consisting of characters with code points that are not considered in the operation because of comparison options, In particular, the  <xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> and <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> options produce searches in which symbols and nonspacing combining characters are ignored.</span></span>  
  
-   <span data-ttu-id="c1c11-121">언어적 의미가 없는 코드 포인트를 사용 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-121">A string with code points that have no linguistic significance.</span></span> <span data-ttu-id="c1c11-122">예를 들어 하이픈이 (U + 00AD)은 항상 문화권 구분 문자열 비교에서 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-122">For example, a soft hyphen (U+00AD) is always ignored in a culture-sensitive string comparison.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="c1c11-123">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="c1c11-123">Security considerations</span></span>  
 <span data-ttu-id="c1c11-124">문자열 비교 또는 대/소문자 변경에 종속 되는 보안 결정을 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성을 운영 체제의 문화권 설정에 관계 없이 일관 된 동작 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-124">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent, regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-125">형식의 매개 변수가 있어야 하는 문자열 비교 메서드를 사용 해야 가능 하면 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-125">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-126">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-126">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-127">다음 예제와 방법을 <xref:System.Globalization.CompareInfo> 연관 된 개체는 <xref:System.Globalization.CultureInfo> 개체 문자열 비교에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-127">The following example shows how the <xref:System.Globalization.CompareInfo> object associated with a <xref:System.Globalization.CultureInfo> object affects string comparison.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-128">Compares two strings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-128">Compares two strings.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int&#xA;override this.Compare : string * string -&gt; int" Usage="compareInfo.Compare (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1">
          <span data-ttu-id="c1c11-129">The first string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-129">The first string to compare.</span>
          </span>
        </param>
        <param name="string2">
          <span data-ttu-id="c1c11-130">The second string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-130">The second string to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-131">Compares two strings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-131">Compares two strings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-132">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-132">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="c1c11-133">
            <list type="table">
              <listheader>
                <term> Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> zero  </term>
                <description> The two strings are equal.  </description>
              </item>
              <item>
                <term> less than zero  </term>
                <description>
                  <paramref name="string1" /> is less than <paramref name="string2" />.  </description>
              </item>
              <item>
                <term> greater than zero  </term>
                <description>
                  <paramref name="string1" /> is greater than <paramref name="string2" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-133">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> zero  </term>
                  <description> The two strings are equal.  </description>
                </item>
                <item>
                  <term> less than zero  </term>
                  <description>
                    <paramref name="string1" /> is less than <paramref name="string2" />.  </description>
                </item>
                <item>
                  <term> greater than zero  </term>
                  <description>
                    <paramref name="string1" /> is greater than <paramref name="string2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-134">기본적으로 비교를 사용 하 여 수행 <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-134">By default, the comparison is performed by using <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c1c11-135">문자열 비교 또는 대/소문자 변경에 종속 되는 보안 결정을 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성을 운영 체제의 문화권 설정에 관계 없이 일관 된 동작 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-135">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-136">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-136">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-137">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-137">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-138">다음 예제에서는 여러 가지를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:</span><span class="sxs-lookup"><span data-stu-id="c1c11-138">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="c1c11-139"><xref:System.Globalization.CompareInfo> 스페인어 (스페인) 문화권 국제 정렬와 연관 된 개체</span><span class="sxs-lookup"><span data-stu-id="c1c11-139"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="c1c11-140"><xref:System.Globalization.CompareInfo> 스페인어 (스페인) 문화권 전통 정렬와 연관 된 개체</span><span class="sxs-lookup"><span data-stu-id="c1c11-140"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="c1c11-141"><xref:System.Globalization.CompareInfo> 와 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="c1c11-141"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 <span data-ttu-id="c1c11-142">다음 예제에서는 <xref:System.Globalization.CompareInfo.Compare%2A> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-142">The following example demonstrates calling the <xref:System.Globalization.CompareInfo.Compare%2A> method.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-143">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자는 언어 또는 문화권 구분 비교를 수행 하는 경우 고려 되지 않습니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> 메서드는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 예를 들어, "동물"와 "ani 메일" (소프트 하이픈 또는 U + 00AD 사용)의 문화권 구분 비교는 두 문자열은 다음 예제와 같이 해당을 나타냅니다.  [! code-vb[System.Globalization.CompareInfo.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)]  문자열 비교에서 무시할 수 있는 문자를 인식 하려면 호출는 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드 중 하나의 값을 제공 하 고 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-143">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison. The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> method does not consider such characters when it performs a culture-sensitive comparison. For instance, a culture-sensitive comparison of "animal" with "ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent, as the following example shows.  [!code-vb[System.Globalization.CompareInfo.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)]  To recognize ignorable characters in a string comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> method and supply a value of either <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, string2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">
          <span data-ttu-id="c1c11-144">The first string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-144">The first string to compare.</span>
          </span>
        </param>
        <param name="string2">
          <span data-ttu-id="c1c11-145">The second string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-145">The second string to compare.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-146">A value that defines how <c>string1</c> and <c>string2</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-146">A value that defines how <c>string1</c> and <c>string2</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-147">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-147">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-148">Compares two strings using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-148">Compares two strings using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-149">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-149">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="c1c11-150">
            <list type="table">
              <listheader>
                <term> Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> zero  </term>
                <description> The two strings are equal.  </description>
              </item>
              <item>
                <term> less than zero  </term>
                <description>
                  <paramref name="string1" /> is less than <paramref name="string2" />.  </description>
              </item>
              <item>
                <term> greater than zero  </term>
                <description>
                  <paramref name="string1" /> is greater than <paramref name="string2" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-150">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> zero  </term>
                  <description> The two strings are equal.  </description>
                </item>
                <item>
                  <term> less than zero  </term>
                  <description>
                    <paramref name="string1" /> is less than <paramref name="string2" />.  </description>
                </item>
                <item>
                  <term> greater than zero  </term>
                  <description>
                    <paramref name="string1" /> is greater than <paramref name="string2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-151">문자열 비교 또는 대/소문자 변경에 종속 되는 보안 결정을 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성을 운영 체제의 문화권 설정에 관계 없이 일관 된 동작 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-151">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-152">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-152">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-153">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-153">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-154">다음 예제에서는 다른를 사용 하 여 두 문자열을 비교 <xref:System.Globalization.CompareOptions> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-154">The following example compares two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CPP/comparestrstropt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CS/comparestrstropt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/VB/comparestrstropt.vb#1)]  
  
 <span data-ttu-id="c1c11-155">다음 예제에서는 <xref:System.Globalization.CompareInfo.Compare%2A> 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-155">The following example demonstrates calling the <xref:System.Globalization.CompareInfo.Compare%2A> method.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-156">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-156">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-157">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자는 언어 또는 문화권 구분 비교를 수행 하는 경우 고려 되지 않습니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 비교에는 무시할 수 있는 문자를 인식 하려면의 값을 제공 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-157">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison. The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> method does not consider such characters when it performs a culture-sensitive comparison. To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int -&gt; int&#xA;override this.Compare : string * int * string * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1">
          <span data-ttu-id="c1c11-158">The first string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-158">The first string to compare.</span>
          </span>
        </param>
        <param name="offset1">
          <span data-ttu-id="c1c11-159">The zero-based index of the character in <c>string1</c> at which to start comparing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-159">The zero-based index of the character in <c>string1</c> at which to start comparing.</span>
          </span>
        </param>
        <param name="string2">
          <span data-ttu-id="c1c11-160">The second string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-160">The second string to compare.</span>
          </span>
        </param>
        <param name="offset2">
          <span data-ttu-id="c1c11-161">The zero-based index of the character in <c>string2</c> at which to start comparing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-161">The zero-based index of the character in <c>string2</c> at which to start comparing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-162">Compares the end section of a string with the end section of another string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-162">Compares the end section of a string with the end section of another string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-163">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-163">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="c1c11-164">
            <list type="table">
              <listheader>
                <term> Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> zero  </term>
                <description> The two strings are equal.  </description>
              </item>
              <item>
                <term> less than zero  </term>
                <description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.  </description>
              </item>
              <item>
                <term> greater than zero  </term>
                <description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-164">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> zero  </term>
                  <description> The two strings are equal.  </description>
                </item>
                <item>
                  <term> less than zero  </term>
                  <description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.  </description>
                </item>
                <item>
                  <term> greater than zero  </term>
                  <description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-165">문자열 비교 또는 대/소문자 변경에 종속 되는 보안 결정을 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성을 운영 체제의 문화권 설정에 관계 없이 일관 된 동작 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-165">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-166">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-166">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-167">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-167">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-168">다음 예제에서는 여러 가지를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:</span><span class="sxs-lookup"><span data-stu-id="c1c11-168">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="c1c11-169"><xref:System.Globalization.CompareInfo> 스페인어 (스페인) 문화권 국제 정렬와 연관 된 개체</span><span class="sxs-lookup"><span data-stu-id="c1c11-169"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="c1c11-170"><xref:System.Globalization.CompareInfo> 스페인어 (스페인) 문화권 전통 정렬와 연관 된 개체</span><span class="sxs-lookup"><span data-stu-id="c1c11-170"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="c1c11-171"><xref:System.Globalization.CompareInfo> 와 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="c1c11-171"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CPP/comparestrintstrint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CS/comparestrintstrint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/VB/comparestrintstrint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-172">
            <paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-172">
              <paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-173">-or-  <paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-173">-or-  <paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span>
          </span>
          <span data-ttu-id="c1c11-174">-or-  <paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-174">-or-  <paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-175">
            <para>문자 집합에는 무시할 수 있는 문자가 포함 됩니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> 메서드는 언어 또는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 비교에는 무시할 수 있는 문자를 인식 하려면 호출는 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드 값을 지정 하 고 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-175">
              <para>Character sets include ignorable characters. The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison. To recognize ignorable characters in your comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">
          <span data-ttu-id="c1c11-176">The first string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-176">The first string to compare.</span>
          </span>
        </param>
        <param name="offset1">
          <span data-ttu-id="c1c11-177">The zero-based index of the character in <c>string1</c> at which to start comparing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-177">The zero-based index of the character in <c>string1</c> at which to start comparing.</span>
          </span>
        </param>
        <param name="string2">
          <span data-ttu-id="c1c11-178">The second string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-178">The second string to compare.</span>
          </span>
        </param>
        <param name="offset2">
          <span data-ttu-id="c1c11-179">The zero-based index of the character in <c>string2</c> at which to start comparing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-179">The zero-based index of the character in <c>string2</c> at which to start comparing.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-180">A value that defines how <c>string1</c> and <c>string2</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-180">A value that defines how <c>string1</c> and <c>string2</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-181">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-181">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-182">Compares the end section of a string with the end section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-182">Compares the end section of a string with the end section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-183">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-183">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="c1c11-184">
            <list type="table">
              <listheader>
                <term> Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> zero  </term>
                <description> The two strings are equal.  </description>
              </item>
              <item>
                <term> less than zero  </term>
                <description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.  </description>
              </item>
              <item>
                <term> greater than zero  </term>
                <description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-184">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> zero  </term>
                  <description> The two strings are equal.  </description>
                </item>
                <item>
                  <term> less than zero  </term>
                  <description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.  </description>
                </item>
                <item>
                  <term> greater than zero  </term>
                  <description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-185">문자열 비교 또는 대/소문자 변경에 종속 되는 보안 결정을 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성을 운영 체제의 문화권 설정에 관계 없이 일관 된 동작 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-185">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-186">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-186">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-187">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-187">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-188">다음 예제에서는 서로 다른 두 문자열의 일부를 비교 <xref:System.Globalization.CompareOptions> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-188">The following example compares portions of two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CPP/comparestrintstrintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CS/comparestrintstrintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/VB/comparestrintstrintopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-189">
            <paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-189">
              <paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-190">-or-  <paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-190">-or-  <paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span>
          </span>
          <span data-ttu-id="c1c11-191">-or-  <paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-191">-or-  <paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-192">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-192">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-193">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자는 언어 또는 문화권 구분 비교를 수행 하는 경우 고려 되지 않습니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 비교에는 무시할 수 있는 문자를 인식 하려면의 값을 제공 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-193">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison. The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> method does not consider such characters when performing a culture-sensitive comparison. To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int -&gt; int&#xA;override this.Compare : string * int * int * string * int * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1">
          <span data-ttu-id="c1c11-194">The first string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-194">The first string to compare.</span>
          </span>
        </param>
        <param name="offset1">
          <span data-ttu-id="c1c11-195">The zero-based index of the character in <c>string1</c> at which to start comparing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-195">The zero-based index of the character in <c>string1</c> at which to start comparing.</span>
          </span>
        </param>
        <param name="length1">
          <span data-ttu-id="c1c11-196">The number of consecutive characters in <c>string1</c> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-196">The number of consecutive characters in <c>string1</c> to compare.</span>
          </span>
        </param>
        <param name="string2">
          <span data-ttu-id="c1c11-197">The second string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-197">The second string to compare.</span>
          </span>
        </param>
        <param name="offset2">
          <span data-ttu-id="c1c11-198">The zero-based index of the character in <c>string2</c> at which to start comparing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-198">The zero-based index of the character in <c>string2</c> at which to start comparing.</span>
          </span>
        </param>
        <param name="length2">
          <span data-ttu-id="c1c11-199">The number of consecutive characters in <c>string2</c> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-199">The number of consecutive characters in <c>string2</c> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-200">Compares a section of one string with a section of another string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-200">Compares a section of one string with a section of another string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-201">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-201">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="c1c11-202">
            <list type="table">
              <listheader>
                <term> Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> zero  </term>
                <description> The two strings are equal.  </description>
              </item>
              <item>
                <term> less than zero  </term>
                <description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.  </description>
              </item>
              <item>
                <term> greater than zero  </term>
                <description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-202">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> zero  </term>
                  <description> The two strings are equal.  </description>
                </item>
                <item>
                  <term> less than zero  </term>
                  <description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.  </description>
                </item>
                <item>
                  <term> greater than zero  </term>
                  <description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-203">문자열 비교 또는 대/소문자 변경에 종속 되는 보안 결정을 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성을 운영 체제의 문화권 설정에 관계 없이 일관 된 동작 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-203">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-204">형식의 매개 변수가 있어야 하는 문자열 비교 메서드를 사용 해야 가능 하면 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-204">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-205">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-205">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-206">다음 예제에서는 여러 가지를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:</span><span class="sxs-lookup"><span data-stu-id="c1c11-206">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="c1c11-207"><xref:System.Globalization.CompareInfo> 스페인어 (스페인) 문화권 국제 정렬와 연관 된 개체</span><span class="sxs-lookup"><span data-stu-id="c1c11-207"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="c1c11-208"><xref:System.Globalization.CompareInfo> 스페인어 (스페인) 문화권 전통 정렬와 연관 된 개체</span><span class="sxs-lookup"><span data-stu-id="c1c11-208"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="c1c11-209"><xref:System.Globalization.CompareInfo> 와 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="c1c11-209"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CPP/comparestrintintstrintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CS/comparestrintintstrintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/VB/comparestrintintstrintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-210">
            <paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-210">
              <paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-211">-or-  <paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-211">-or-  <paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span>
          </span>
          <span data-ttu-id="c1c11-212">-or-  <paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-212">-or-  <paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span>
          </span>
          <span data-ttu-id="c1c11-213">-or-  <paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-213">-or-  <paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span>
          </span>
          <span data-ttu-id="c1c11-214">-or-  <paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-214">-or-  <paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-215">
            <para>문자 집합에는 무시할 수 있는 문자가 포함 됩니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> 메서드는 언어 또는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 비교에는 무시할 수 있는 문자를 인식 하려면 호출는 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드 값을 지정 하 고 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-215">
              <para>Character sets include ignorable characters. The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison. To recognize ignorable characters in your comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">
          <span data-ttu-id="c1c11-216">The first string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-216">The first string to compare.</span>
          </span>
        </param>
        <param name="offset1">
          <span data-ttu-id="c1c11-217">The zero-based index of the character in <c>string1</c> at which to start comparing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-217">The zero-based index of the character in <c>string1</c> at which to start comparing.</span>
          </span>
        </param>
        <param name="length1">
          <span data-ttu-id="c1c11-218">The number of consecutive characters in <c>string1</c> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-218">The number of consecutive characters in <c>string1</c> to compare.</span>
          </span>
        </param>
        <param name="string2">
          <span data-ttu-id="c1c11-219">The second string to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-219">The second string to compare.</span>
          </span>
        </param>
        <param name="offset2">
          <span data-ttu-id="c1c11-220">The zero-based index of the character in <c>string2</c> at which to start comparing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-220">The zero-based index of the character in <c>string2</c> at which to start comparing.</span>
          </span>
        </param>
        <param name="length2">
          <span data-ttu-id="c1c11-221">The number of consecutive characters in <c>string2</c> to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-221">The number of consecutive characters in <c>string2</c> to compare.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-222">A value that defines how <c>string1</c> and <c>string2</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-222">A value that defines how <c>string1</c> and <c>string2</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-223">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-223">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-224">Compares a section of one string with a section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-224">Compares a section of one string with a section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-225">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-225">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="c1c11-226">
            <list type="table">
              <listheader>
                <term> Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> zero  </term>
                <description> The two strings are equal.  </description>
              </item>
              <item>
                <term> less than zero  </term>
                <description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.  </description>
              </item>
              <item>
                <term> greater than zero  </term>
                <description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-226">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> zero  </term>
                  <description> The two strings are equal.  </description>
                </item>
                <item>
                  <term> less than zero  </term>
                  <description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.  </description>
                </item>
                <item>
                  <term> greater than zero  </term>
                  <description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-227">문자열 비교 또는 대/소문자 변경에 종속 되는 보안 결정을 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성을 운영 체제의 문화권 설정에 관계 없이 일관 된 동작 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-227">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-228">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-228">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-229">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-229">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-230">다음 예제에서는 서로 다른 두 문자열의 일부를 비교 <xref:System.Globalization.CompareOptions> 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-230">The following example compares portions of two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CPP/comparestrintintstrintintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CS/comparestrintintstrintintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/VB/comparestrintintstrintintopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-231">
            <paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-231">
              <paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-232">-or-  <paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-232">-or-  <paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span>
          </span>
          <span data-ttu-id="c1c11-233">-or-  <paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-233">-or-  <paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span>
          </span>
          <span data-ttu-id="c1c11-234">-or-  <paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-234">-or-  <paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span>
          </span>
          <span data-ttu-id="c1c11-235">-or-  <paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-235">-or-  <paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-236">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-236">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-237">
            <para>문자 집합에는 무시할 수 있는 문자가 포함 됩니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 비교에는 무시할 수 있는 문자를 인식 하려면의 값을 제공 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-237">
              <para>Character sets include ignorable characters. The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method does not consider these characters when it performs a culture-sensitive comparison. To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compareInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c1c11-238">The object to compare with the current <see cref="T:System.Globalization.CompareInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-238">The object to compare with the current <see cref="T:System.Globalization.CompareInfo" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-239">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-239">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-240">
            <see langword="true" /> if the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-240">
              <see langword="true" /> if the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-241">두 개의 <xref:System.Globalization.CompareInfo> 개체가 서로 같은지 경우 해당 <xref:System.Globalization.CompareInfo.LCID%2A> 및 <xref:System.Globalization.CompareInfo.Name%2A> 속성이 같은지 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-241">Two <xref:System.Globalization.CompareInfo> objects are equal if their <xref:System.Globalization.CompareInfo.LCID%2A> and <xref:System.Globalization.CompareInfo.Name%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="c1c11-242">이 메서드를 재정의 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-242">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c1c11-243">문자열 비교 또는 대/소문자 변경에 종속 되는 보안 결정을 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성을 운영 체제의 문화권 설정에 관계 없이 일관 된 동작 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-243">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCompareInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-244">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-244">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (culture As Integer) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="c1c11-245">An integer representing the culture identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-245">An integer representing the culture identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-246">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-246">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-247">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-247">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1c11-248">다음 예제에서는 여러 가지를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:</span><span class="sxs-lookup"><span data-stu-id="c1c11-248">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="c1c11-249"><xref:System.Globalization.CompareInfo> 스페인어 (스페인) 문화권 국제 정렬와 연관 된 개체</span><span class="sxs-lookup"><span data-stu-id="c1c11-249"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="c1c11-250"><xref:System.Globalization.CompareInfo> 스페인어 (스페인) 문화권 전통 정렬와 연관 된 개체</span><span class="sxs-lookup"><span data-stu-id="c1c11-250"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="c1c11-251"><xref:System.Globalization.CompareInfo> 와 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="c1c11-251"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (name As String) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c1c11-252">A string representing the culture name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-252">A string representing the culture name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-253">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-253">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-254">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-254">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1c11-255">다음 예제에서는 여러 가지를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:</span><span class="sxs-lookup"><span data-stu-id="c1c11-255">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="c1c11-256"><xref:System.Globalization.CompareInfo> 스페인어 (스페인) 문화권 국제 정렬와 연관 된 개체</span><span class="sxs-lookup"><span data-stu-id="c1c11-256"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="c1c11-257"><xref:System.Globalization.CompareInfo> 스페인어 (스페인) 문화권 전통 정렬와 연관 된 개체</span><span class="sxs-lookup"><span data-stu-id="c1c11-257"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="c1c11-258"><xref:System.Globalization.CompareInfo> 와 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="c1c11-258"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-259">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-259">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-260">
            <paramref name="name" /> is an invalid culture name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-260">
              <paramref name="name" /> is an invalid culture name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (culture, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="c1c11-261">An integer representing the culture identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-261">An integer representing the culture identifier.</span>
          </span>
        </param>
        <param name="assembly">
          <span data-ttu-id="c1c11-262">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-262">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-263">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-263">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-264">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-264">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-265">이 메서드의 동작은 예측할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-265">The behavior of this method is unpredictable.</span></span> <span data-ttu-id="c1c11-266">응용 프로그램에서 어셈블리를 입력을 사용 하지 않는이 메서드의 버전을 사용 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-266">It is recommended for your application to use a version of this method that does not take an assembly input.</span></span>  
  
 <span data-ttu-id="c1c11-267">`assembly` 매개 변수는 동일한 형식 이어야 합니다 <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-267">The `assembly` parameter must be of the same type as <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-268">
            <paramref name="assembly" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-268">
              <paramref name="assembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-269">
            <paramref name="assembly" /> is of an invalid type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-269">
              <paramref name="assembly" /> is of an invalid type.</span>
          </span>
        </exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (name, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c1c11-270">A string representing the culture name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-270">A string representing the culture name.</span>
          </span>
        </param>
        <param name="assembly">
          <span data-ttu-id="c1c11-271">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-271">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-272">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-272">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-273">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-273">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-274">이 메서드의 동작은 예측할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-274">The behavior of this method is unpredictable.</span></span> <span data-ttu-id="c1c11-275">어셈블리를 입력을 사용 하지 않는이 메서드의 버전을 사용 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-275">We recommend that you use a version of this method that does not take an assembly input.</span></span>  
  
 <span data-ttu-id="c1c11-276">`assembly` 매개 변수는 동일한 형식 이어야 합니다 <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-276">The `assembly` parameter must be of the same type as <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-277">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-277">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-278">-or-  <paramref name="assembly" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-278">-or-  <paramref name="assembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-279">
            <paramref name="name" /> is an invalid culture name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-279">
              <paramref name="name" /> is an invalid culture name.</span>
          </span>
          <span data-ttu-id="c1c11-280">-or-  <paramref name="assembly" /> is of an invalid type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-280">-or-  <paramref name="assembly" /> is of an invalid type.</span>
          </span>
        </exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-281">Returns a hash code either for this <see cref="T:System.Globalization.CompareInfo" /> instance or for a particular string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-281">Returns a hash code either for this <see cref="T:System.Globalization.CompareInfo" /> instance or for a particular string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compareInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-282">Serves as a hash function for the current <see cref="T:System.Globalization.CompareInfo" /> for hashing algorithms and data structures, such as a hash table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-282">Serves as a hash function for the current <see cref="T:System.Globalization.CompareInfo" /> for hashing algorithms and data structures, such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-283">A hash code for the current <see cref="T:System.Globalization.CompareInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-283">A hash code for the current <see cref="T:System.Globalization.CompareInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-284">이 메서드를 재정의 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-284">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c1c11-285">이 메서드는 <xref:System.Globalization.CompareInfo.Equals%2A> 메서드에 따라 동일한 두 개체에 대해 같은 해시 코드를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-285">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.CompareInfo.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetHashCode (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHashCode (source As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.GetHashCode (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-286">The string whose hash code is to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-286">The string whose hash code is to be returned.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-287">A value that determines how strings are compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-287">A value that determines how strings are compared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-288">Gets the hash code for a string based on specified comparison options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-288">Gets the hash code for a string based on specified comparison options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-289">A 32-bit signed integer hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-289">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-290">동작은 <xref:System.Globalization.CompareInfo.GetHashCode%2A> 간에 다른 공용 언어 런타임 버전 중 하나 또는 한.NET Framework 플랫폼에서 변경 될 수 있습니다 하는 구현에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-290">The behavior of <xref:System.Globalization.CompareInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another, or from one .NET Framework platform to another.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c1c11-291">두 string 개체 같으면는 <xref:System.Globalization.CompareInfo.GetHashCode%2A> 메서드 같은 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-291">If two string objects are equal, the <xref:System.Globalization.CompareInfo.GetHashCode%2A> method returns identical values.</span></span> <span data-ttu-id="c1c11-292">그러나 않습니다 각 고유한 문자열 값에 대 한 고유 해시 코드 값.</span><span class="sxs-lookup"><span data-stu-id="c1c11-292">However, there is not a unique hash code value for each unique string value.</span></span> <span data-ttu-id="c1c11-293">서로 다른 문자열이 동일한 해시 코드를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-293">Different strings can return the same hash code.</span></span>  
>   
>  <span data-ttu-id="c1c11-294">해시 코드 자체은 안정적인 것으로 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-294">The hash code itself is not guaranteed to be stable.</span></span> <span data-ttu-id="c1c11-295">동일한 문자열에 대 한 해시 코드 (예: 32 비트 및 64 비트)는 단일 버전의.NET Framework에 대 한 플랫폼 및 버전의.NET Framework에서 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-295">Hash codes for identical strings can differ across versions of the .NET Framework and across platforms (such as 32-bit and 64-bit) for a single version of the .NET Framework.</span></span> <span data-ttu-id="c1c11-296">경우에 따라 응용 프로그램 도메인 별로 다도 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-296">In some cases, they can even differ by application domain.</span></span>  
>   
>  <span data-ttu-id="c1c11-297">결과적으로 해시 코드 작성 된 응용 프로그램 도메인 외부에서 사용할 수는 없습니다는 컬렉션의 키 필드와 사용 하지 않아야 하 고 유지 되지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-297">As a result, hash codes should never be used outside of the application domain in which they were created, they should never be used as key fields in a collection, and they should never be persisted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-298">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-298">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSortKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-299">Gets a <see cref="T:System.Globalization.SortKey" /> object for a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-299">Gets a <see cref="T:System.Globalization.SortKey" /> object for a string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-300">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-300">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-301">Gets the sort key for the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-301">Gets the sort key for the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-302">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-302">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-303">문자열의 각 문자에는 여러 범주의 정렬 가중치가, 스크립트, 사전순, 대/소문자를 포함 하 여 및 분음 부호 가중치 부여 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-303">Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="c1c11-304">정렬 키는 이러한 가중치는 특정 문자열의 리포지토리입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-304">A sort key is the repository of these weights for a particular string.</span></span> <span data-ttu-id="c1c11-305">예를 들어 정렬 키에는 다음 문자열의 대/소문자 가중치 및 기타 등등 알파벳 가중치를 문자열로 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-305">For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</span></span> <span data-ttu-id="c1c11-306"><xref:System.Globalization.CompareInfo.GetSortKey%2A> 메서드는 Windows API 메서드 `LCMapString` LCMAP_SORTKEY 플래그 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-306">The <xref:System.Globalization.CompareInfo.GetSortKey%2A> method is equivalent to the Windows API method `LCMapString` with the LCMAP_SORTKEY flag.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortKey" />
      </Docs>
    </Member>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String, options As CompareOptions) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-307">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-307">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-308">A bitwise combination of one or more of the following enumeration values that define how the sort key is calculated: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-308">A bitwise combination of one or more of the following enumeration values that define how the sort key is calculated: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-309">Gets a <see cref="T:System.Globalization.SortKey" /> object for the specified string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-309">Gets a <see cref="T:System.Globalization.SortKey" /> object for the specified string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-310">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-310">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-311">문자열의 각 문자에는 여러 범주의 정렬 가중치가, 스크립트, 사전순, 대/소문자를 포함 하 여 및 분음 부호 가중치 부여 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-311">Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="c1c11-312">정렬 키는 이러한 가중치는 특정 문자열의 리포지토리입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-312">A sort key is the repository of these weights for a particular string.</span></span> <span data-ttu-id="c1c11-313">예를 들어 정렬 키에는 다음 문자열의 대/소문자 가중치 및 기타 등등 알파벳 가중치를 문자열로 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-313">For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</span></span> <span data-ttu-id="c1c11-314"><xref:System.Globalization.CompareInfo.GetSortKey%2A> 메서드는 Windows API 메서드 `LCMapString` LCMAP_SORTKEY 플래그 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-314">The <xref:System.Globalization.CompareInfo.GetSortKey%2A> method is equivalent to the Windows API method `LCMapString` with the LCMAP_SORTKEY flag.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-315">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-315">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.SortKey" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-316">Returns the zero-based index of the first occurrence of a value within a string or within a portion of it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-316">Returns the zero-based index of the first occurrence of a value within a string or within a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char -&gt; int&#xA;override this.IndexOf : string * char -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-317">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-317">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-318">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-318">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-319">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-319">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-320">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-320">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-321">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-321">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-322">이 메서드는 문자열의 끝에는 문자열의 시작 부분에서 소스 문자열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-322">This method searches the source string from the beginning of the string to the end of the string.</span></span>  
  
 <span data-ttu-id="c1c11-323">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-323">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-324">경우 `value` 미리 구성 된 유니코드 문자를 나타냅니다, 합자 "Æ"와 같은 (U + 00 C 6), 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-324">If `value` represents a precomposed Unicode character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-325">서 수 (문화권) 검색을 수행 하려면 형식의 매개 변수가는 유니코드 코드 포인트가 동일 해야는 오버 로드를 호출 하는 문자 다른 문자와 같은 것으로 간주 됩니다 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-325">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode code points are the same, you should call an overload that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="c1c11-326">와 달리 <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>, 문화권 구분 비교를 수행 하는 오버 로드는 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 를 검색 하는 문자는 서 수 비교를 수행 하 고 문화권 구분 비교를 수행 하는 문자열을 검색 하는 오버 로드 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-326">Unlike <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>, which performs a culture-sensitive comparison, overloads of the <xref:System.String.IndexOf%2A?displayProperty=nameWithType> method that search for a character perform an ordinal comparison and overloads that search for a string perform a culture-sensitive comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-327">형식의 매개 변수가 있어야 하는 문자열 비교 메서드를 사용 해야 가능 하면 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-327">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-328">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-328">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-329">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-329">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-330">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-330">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-331">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> 메서드는 항상 0 (영)의 시작 부분에서 일치 항목은 발견 되었음을 나타내기 위해 반환 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> 메서드는 두 개의 문자열에 하이픈 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 메서드는 일치 하는 항목이 발견 했다는 것을 나타내려면 0 (영) 문자열의 시작 부분에서  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#3] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#3] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-331">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />. In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> method is used to find the soft hyphen (U+00AD) in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.  [!code-csharp[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)] [!code-vb[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string -&gt; int&#xA;override this.IndexOf : string * string -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-332">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-332">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-333">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-333">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-334">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-334">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-335">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-335">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-336">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-336">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-337">소스 문자열 앞으로 문자열의 시작 부분에서 시작 하 고 문자열의 끝에서 끝나는 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-337">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="c1c11-338">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-338">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-339">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-339">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-340">서 수 (문화권) 검색을 수행 하려면, 유니코드 값을 비교 하는 위치 하나를 사용 해야 형식의 매개 변수가 있는 오버 로드 중 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-340">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should use one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-341">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-341">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-342">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-342">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-343">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-343">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-344">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-344">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-345">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-345">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-346">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> 메서드는 항상 0 (영)의 시작 부분에서 일치 항목은 발견 되었음을 나타내기 위해 반환 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> 메서드 두 문자열의 세 부분 문자열 (하이픈이 (U + 00AD), "n" 이어서 하이픈이 및 하이픈이 뒤에 "m")를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 각각의 경우에는 사용자 지정 하이픈은 무시할 수 있는 문자 이므로 결과 동일에 붙은 사용자 지정 하이픈이 포함 되지 않았던 마치 <paramref name="value" />합니다. 하이픈이를 검색할 때 메서드를 나타내는 문자열의 시작 부분에서 일치 하는 항목이 발견 했다는 0 (영)을 반환 합니다.  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#2] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#2] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-346">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />. In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings. Only one of the strings contains a soft hyphen. In each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in <paramref name="value" />. When searching for a soft hyphen only, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.  [!code-csharp[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)] [!code-vb[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-347">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-347">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-348">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-348">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-349">A value that defines how the strings should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-349">A value that defines how the strings should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-350">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-350">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-351">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-351">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-352">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-352">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-353">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-353">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-354">소스 문자열 앞으로 문자열의 시작 부분에서 시작 하 고 문자열의 끝에서 끝나는 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-354">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="c1c11-355"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-355">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-356">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-356">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-357">문자가 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "Æ" (U + 6), 같은 것 간주 될 수 있습니다에 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-357">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-358">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-358">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="c1c11-359">문자는 유니코드 값이 동일한 경우에 다른 문자와 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-359">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="c1c11-360">오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 반면에 문자열을 검색 하는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-360">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-361">형식의 매개 변수가 있어야 하는 문자열 비교 메서드를 사용 해야 가능 하면 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-361">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-362">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-362">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-363">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-363">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-364">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-364">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-365">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-365">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-366">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 메서드는 항상 0 (영)의 시작 부분에서 일치 항목은 발견 되었음을 나타내기 위해 반환 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 소프트 하이픈 (U + 00AD)에 두 문자열을 찾으려고 메서드를 사용 합니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 문화권 구분 검색 (영) 나타내는 0을 반환 일치 하는 항목이 발견 했다는 문자열의 시작 부분에 있습니다. 그러나 서 수 검색을 성공적으로 하이픈 한 문자열에서 찾아 보고 해주어에서 두 번째 문자열입니다.  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#4] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#4] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-366">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />. In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method is used to search for a soft hyphen (U+00AD) in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 0 (zero) to indicate that it has found a match at the beginning of the string. An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.  [!code-csharp[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)] [!code-vb[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int -&gt; int&#xA;override this.IndexOf : string * char * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-367">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-367">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-368">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-368">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-369">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-369">The zero-based starting index of the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-370">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-370">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-371">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-371">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-372">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-372">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-373">소스 문자열의 앞에서 시작이 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-373">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="c1c11-374">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-374">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-375">문자가 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "Æ" (U + 6), 같은 것 간주 될 수 있습니다에 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-375">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-376">유니코드 값이 동일한 경우에 문자 다른 문자로 같은으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-376">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="c1c11-377">오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 반면에 문자열을 검색 하는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-377">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-378">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-378">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-379">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-379">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-380">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-380">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="c1c11-381"><xref:System.Globalization.CompareInfo.IndexOf%2A> 및 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 같아도 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-381">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-382">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-382">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-383">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-383">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-384">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> 메서드는 두 개의 문자열에 "n" 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 메서드는 "n" 위치에서 일치 항목 발견 했다는 것을 나타내려면 1을 반환 합니다.  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#5] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#5] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-384">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins. In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> method is used to find a soft hyphen (U+00AD) after an "n" in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, the method returns 1 to indicate that it has found a match at the position of the "n".  [!code-csharp[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)] [!code-vb[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-385">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-385">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-386">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-386">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-387">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-387">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-388">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-388">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-389">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-389">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-390">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-390">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-391">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-391">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-392">소스 문자열 앞으로 문자열의 시작 부분에서 시작 하 고 문자열의 끝에서 끝나는 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-392">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="c1c11-393"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-393">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-394">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-394">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-395">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-395">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-396">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값이 비교 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-396">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-397">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-397">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-398">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-398">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-399">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-399">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-400">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-400">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-401">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-401">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-402">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-402">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-403">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드는 항상 0 (영)의 시작 부분에서 일치 항목은 발견 되었음을 나타내기 위해 반환 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드 두 문자열의 세 부분 문자열 (하이픈이 (U + 00AD), "n" 이어서 하이픈이 및 하이픈이 뒤에 "m")를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 사용자 지정 하이픈은 무시할 수 있는 문자 이므로 문화권 구분 검색 하이픈 검색 문자열에 포함 되지 않은 경우 반환 되는 동일한 값을 반환 합니다. 그러나 서 수 검색을 성공적으로 하이픈 한 문자열에서 찾아 보고 해주어에서 두 번째 문자열입니다.  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#6] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#6] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-403">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />. In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings. Only one of the strings contains a soft hyphen. Because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string. An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.  [!code-csharp[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)] [!code-vb[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int -&gt; int&#xA;override this.IndexOf : string * string * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-404">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-404">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-405">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-405">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-406">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-406">The zero-based starting index of the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-407">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-407">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-408">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-408">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-409">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-409">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-410">소스 문자열의 앞에서 시작이 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-410">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="c1c11-411">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-411">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-412">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-412">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-413">유니코드 값이 비교 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-413">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-414">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-414">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-415">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-415">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-416">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-416">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="c1c11-417"><xref:System.Globalization.CompareInfo.IndexOf%2A> 및 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 같아도 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-417">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-418">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-418">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-419">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-419">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-420">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-420">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-421">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다.  다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> 메서드 뒤에 두 개의 문자열에 "m" 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 메서드는 문자열에서 "m"의 인덱스를 반환 합니다. 참고의 경우 첫 번째 문자열 뒤에 "m" 하이픈을 포함 하는 메서드는 사용자 지정 하이픈의 인덱스를 반환 하지 못하고 대신 "m"의 인덱스를 반환 합니다.  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#14] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#14] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-421">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.  In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in two strings. Only one of the strings contains the required substring. In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string. Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".  [!code-csharp[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)] [!code-vb[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-422">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-422">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-423">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-423">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-424">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-424">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-425">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-425">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-426">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-426">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-427">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-427">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-428">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-428">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-429">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-429">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-430">소스 문자열의 앞에서 시작이 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-430">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="c1c11-431"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-431">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-432">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-432">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-433">문자가 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "Æ" (U + 6), 같은 것 간주 될 수 있습니다에 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-433">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-434">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-434">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="c1c11-435">문자는 유니코드 값이 동일한 경우에 다른 문자와 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-435">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="c1c11-436">오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 반면에 문자열을 검색 하는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-436">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-437">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-437">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-438">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-438">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-439">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-439">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="c1c11-440"><xref:System.Globalization.CompareInfo.IndexOf%2A> 및 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 같아도 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-440">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-441">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-441">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-442">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-442">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-443">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-443">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-444">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />는 검색 처음 시작한 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 개의 문자열에 "n" 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 문화권 구분 검색 "n" 위치에서 일치 항목 발견 했다는 것을 나타내려면 1을 반환 합니다. 그러나 서 수 검색을 성공적으로 하이픈 한 문자열에서 찾아 보고 해주어에서 두 번째 문자열입니다.  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#8] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#8] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-444">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, the character position at which the search first began. In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the soft hyphen (U+00AD) after an "n" in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 1 to indicate that it has found a match at the position of the "n". An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.  [!code-csharp[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)] [!code-vb[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int -&gt; int&#xA;override this.IndexOf : string * char * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-445">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-445">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-446">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-446">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-447">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-447">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c1c11-448">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-448">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-449">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-449">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-450">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-450">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-451">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-451">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-452">소스 문자열의 앞에서 시작이 검색은 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-452">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="c1c11-453">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-453">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-454">문자가 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "Æ" (U + 6), 같은 것 간주 될 수 있습니다에 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-454">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-455">유니코드 값이 동일한 경우에 문자 다른 문자로 같은으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-455">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="c1c11-456">오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 반면에 문자열을 검색 하는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-456">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-457">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-457">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-458">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-458">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-459">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-459">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-460">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-460">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-461">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-461">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
          <span data-ttu-id="c1c11-462">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-462">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-463">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-463">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-464">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 되는 검색 처음 시작한 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 두 개의 문자열에 "n" 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 메서드는 "n" 위치에서 일치 항목 발견 했다는 것을 나타내려면 1을 반환 합니다.  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#9] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#9] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-464">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search first began. In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method is used to find a soft hyphen (U+00AD) after an "n" in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, the method returns 1 to indicate that it has found a match at the position of the "n".  [!code-csharp[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)] [!code-vb[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-465">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-465">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-466">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-466">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-467">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-467">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-468">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-468">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-469">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-469">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-470">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-470">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-471">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-471">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-472">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-472">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-473">소스 문자열의 앞에서 시작이 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-473">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="c1c11-474"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-474">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-475">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-475">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-476">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-476">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-477">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값이 비교 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-477">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-478">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-478">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-479">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-479">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-480">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-480">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="c1c11-481"><xref:System.Globalization.CompareInfo.IndexOf%2A> 및 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 같아도 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-481">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-482">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-482">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-483">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-483">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-484">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-484">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-485">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-485">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-486">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다.  다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드 뒤에 "m"가 포함 된 두 문자열의 세 번째 문자 위치부터 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. "m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다. 메서드는 서 수 비교를 수행 하는 경우에 첫 번째 문자열에는 사용자 지정 하이픈의 인덱스를 반환 합니다.  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#15] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#15] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-486">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.  In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting with the third character position in two strings. Only one of the strings contains the required substring. In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison. Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m". The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.  [!code-csharp[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)] [!code-vb[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int -&gt; int&#xA;override this.IndexOf : string * string * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-487">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-487">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-488">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-488">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-489">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-489">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c1c11-490">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-490">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-491">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-491">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-492">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-492">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-493">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-493">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-494">소스 문자열의 앞에서 시작이 검색은 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-494">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="c1c11-495">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-495">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-496">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-496">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-497">유니코드 값이 비교 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-497">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-498">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-498">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-499">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-499">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-500">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-500">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-501">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-501">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-502">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-502">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-503">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-503">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
          <span data-ttu-id="c1c11-504">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-504">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-505">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-505">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-506">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다.  다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드 뒤에 "m"부터 두 문자열의 여섯 번째 문자 위치에서 세 번째 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. 참고의 경우 첫 번째 문자열 뒤에 "m" 하이픈을 포함 하는 메서드는 사용자 지정 하이픈의 인덱스를 반환 하지 못하고 대신 "m"의 인덱스를 반환 합니다.  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#17] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#17] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-506">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.  In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings. Only one of the strings contains the required substring. In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison. Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".  [!code-csharp[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)] [!code-vb[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-507">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-507">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-508">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-508">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-509">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-509">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c1c11-510">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-510">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-511">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-511">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-512">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-512">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-513">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-513">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-514">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-514">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-515">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-515">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-516">소스 문자열의 앞에서 시작이 검색은 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-516">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="c1c11-517"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-517">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-518">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-518">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-519">문자가 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "Æ" (U + 6), 같은 것 간주 될 수 있습니다에 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-519">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-520">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-520">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="c1c11-521">문자는 유니코드 값이 동일한 경우에 다른 문자와 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-521">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="c1c11-522">오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 반면에 문자열을 검색 하는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-522">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-523">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-523">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-524">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-524">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-525">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-525">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-526">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-526">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-527">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-527">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
          <span data-ttu-id="c1c11-528">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-528">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-529">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-529">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-530">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-530">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-531">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 되는 검색 처음 시작한 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 개의 문자열에 "n" 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 문화권 구분 검색 "n" 위치에서 일치 항목 발견 했다는 것을 나타내려면 1을 반환 합니다. 그러나 서 수 검색을 성공적으로 하이픈 한 문자열에서 찾아 보고 해주어에서 두 번째 문자열입니다.  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#12] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#12] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-531">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search first began. In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the soft hyphen (U+00AD) after an "n" in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 1 to indicate that it has found a match at the position of the "n". An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.  [!code-csharp[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)] [!code-vb[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-532">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-532">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-533">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-533">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-534">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-534">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c1c11-535">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-535">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-536">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-536">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-537">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-537">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-538">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-538">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-539">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-539">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-540">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-540">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-541">소스 문자열의 앞에서 시작이 검색은 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-541">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="c1c11-542"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-542">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-543">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-543">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-544">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-544">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-545">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값이 비교 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-545">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-546">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-546">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-547">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-547">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-548">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-548">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-549">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-549">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-550">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-550">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-551">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-551">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
          <span data-ttu-id="c1c11-552">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-552">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-553">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-553">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-554">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-554">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-555">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다.  다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드 뒤에 "m"부터 두 문자열의 여섯 번째 문자 위치에서 세 번째 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. 그러나 서 수 비교를 수행 하는 경우 찾으면 부분 문자열이 첫 번째 문자열에만 합니다. 참고의 경우 첫 번째 문자열 뒤에 "m" 하이픈을 포함 하는 메서드는 사용자 지정 하이픈의 인덱스를 반환 하지 못하고 문화권 구분 비교를 수행 하는 경우 대신 "m"의 인덱스를 반환 합니다. 메서드는 서 수 비교를 수행 하는 경우에 첫 번째 문자열에는 사용자 지정 하이픈의 인덱스를 반환 합니다.  [! 코드 csharp [System.Globalization.CompareInfo.IndexOf#16] (~/samples/snippets/csharp/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)] [! vb 코드 [System.Globalization.CompareInfo.IndexOf#16] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/시스템입니다. Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-555">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.  In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings. Only one of the strings contains the required substring. In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison. When it performs an ordinal comparison, however, it finds the substring only in the first string. Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison. The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.  [!code-csharp[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)] [!code-vb[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPrefix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-556">Determines whether a string starts with a specific prefix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-556">Determines whether a string starts with a specific prefix.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string -&gt; bool&#xA;override this.IsPrefix : string * string -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-557">The string to search in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-557">The string to search in.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="c1c11-558">The string to compare with the beginning of <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-558">The string to compare with the beginning of <c>source</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-559">Determines whether the specified source string starts with the specified prefix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-559">Determines whether the specified source string starts with the specified prefix.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-560">
            <see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-560">
              <see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-561">모든 문자열 시작 되며 빈 부분 문자열으로 끝납니다 (""); 따라서 경우 `prefix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-561">Every string starts and ends with an empty substring (""); therefore, if `prefix` is an empty string, this method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-562">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-562">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-563">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-563">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-564">다음 예에서는 문자열이 접두사 또는 다른 문자열의 접미사 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-564">The following example determines whether a string is the prefix or suffix of another string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-565">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-565">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-566">-or-  <paramref name="prefix" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-566">-or-  <paramref name="prefix" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-567">The string to search in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-567">The string to search in.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="c1c11-568">The string to compare with the beginning of <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-568">The string to compare with the beginning of <c>source</c>.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-569">A value that defines how <c>source</c> and <c>prefix</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-569">A value that defines how <c>source</c> and <c>prefix</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-570">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-570">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-571">Determines whether the specified source string starts with the specified prefix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-571">Determines whether the specified source string starts with the specified prefix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-572">
            <see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-572">
              <see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-573">모든 문자열 시작 되며 빈 부분 문자열으로 끝납니다 (""); 따라서 경우 `prefix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-573">Every string starts and ends with an empty substring (""); therefore, if `prefix` is an empty string, this method returns `true`.</span></span>  
  
 <span data-ttu-id="c1c11-574"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-574">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-575">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-575">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-576">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-576">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-577">다음 예에서는 문자열이 접두사 또는 접미사를 사용 하 여 다른 문자열 인지 확인 <xref:System.Globalization.CompareOptions>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-577">The following example determines whether a string is the prefix or suffix of another string using <xref:System.Globalization.CompareOptions>.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-578">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-578">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-579">-or-  <paramref name="prefix" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-579">-or-  <paramref name="prefix" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-580">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-580">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSortable">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-581">Indicates whether a specified Unicode character or string is sortable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-581">Indicates whether a specified Unicode character or string is sortable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(char ch);" />
      <MemberSignature Language="F#" Value="static member IsSortable : char -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="c1c11-582">A Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-582">A Unicode character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-583">Indicates whether a specified Unicode character is sortable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-583">Indicates whether a specified Unicode character is sortable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-584">
            <see langword="true" /> if the <paramref name="ch" /> parameter is sortable; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-584">
              <see langword="true" /> if the <paramref name="ch" /> parameter is sortable; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-585">`ch` 매개 변수는 내부에 정의 된 유니코드 문자가 정렬 가능한 유니버설 <xref:System.Globalization.CompareInfo> 클래스 정렬 테이블 및 사용자 또는 쌍을 이루지 않는 높거나 낮은 서로게이트 문자가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-585">The `ch` parameter is sortable if it is a Unicode character that is defined in an internal <xref:System.Globalization.CompareInfo> class sort table, and is not a private use or unpaired high or low surrogate character.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsSortable : string -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c1c11-586">A string of zero or more Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-586">A string of zero or more Unicode characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-587">Indicates whether a specified Unicode string is sortable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-587">Indicates whether a specified Unicode string is sortable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-588">
            <see langword="true" /> if the <paramref name="str" /> parameter is not an empty string ("") and all the Unicode characters in <paramref name="str" /> are sortable; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-588">
              <see langword="true" /> if the <paramref name="str" /> parameter is not an empty string ("") and all the Unicode characters in <paramref name="str" /> are sortable; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-589">각 유니코드 문자에는 `str` 매개 변수 하나 표시 됩니다 또는 자세한 u t F-16으로 인코딩된 <xref:System.Char> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-589">Each Unicode character in the `str` parameter is represented by one or more UTF-16 encoded <xref:System.Char> objects.</span></span> <span data-ttu-id="c1c11-590">`str` 매개 변수는 각 유니코드 문자는 내부에 정의 된 경우에 정렬 가능한 <xref:System.Globalization.CompareInfo> 클래스 정렬 테이블 및 사용자 또는 쌍을 이루지 않는 높거나 낮은 서로게이트 문자가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-590">The `str` parameter is sortable if each Unicode character is defined in an internal <xref:System.Globalization.CompareInfo> class sort table, and is not a private use or unpaired high or low surrogate character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-591">
            <paramref name="str" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-591">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSuffix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-592">Determines whether a string ends with a specific suffix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-592">Determines whether a string ends with a specific suffix.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string -&gt; bool&#xA;override this.IsSuffix : string * string -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-593">The string to search in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-593">The string to search in.</span>
          </span>
        </param>
        <param name="suffix">
          <span data-ttu-id="c1c11-594">The string to compare with the end of <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-594">The string to compare with the end of <c>source</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-595">Determines whether the specified source string ends with the specified suffix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-595">Determines whether the specified source string ends with the specified suffix.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-596">
            <see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-596">
              <see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-597">모든 문자열 시작 되며 빈 부분 문자열으로 끝납니다 (""); 따라서 경우 `suffix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-597">Every string starts and ends with an empty substring (""); therefore, if `suffix` is an empty string, this method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-598">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-598">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-599">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-599">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-600">다음 예에서는 문자열이 접두사 또는 다른 문자열의 접미사 인지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-600">The following example determines whether a string is the prefix or suffix of another string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-601">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-601">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-602">-or-  <paramref name="suffix" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-602">-or-  <paramref name="suffix" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-603">The string to search in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-603">The string to search in.</span>
          </span>
        </param>
        <param name="suffix">
          <span data-ttu-id="c1c11-604">The string to compare with the end of <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-604">The string to compare with the end of <c>source</c>.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-605">A value that defines how <c>source</c> and <c>suffix</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-605">A value that defines how <c>source</c> and <c>suffix</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-606">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" /> used by itself, or the bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-606">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" /> used by itself, or the bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-607">Determines whether the specified source string ends with the specified suffix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-607">Determines whether the specified source string ends with the specified suffix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-608">
            <see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-608">
              <see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-609">모든 문자열 시작 되며 빈 부분 문자열으로 끝납니다 (""); 따라서 경우 `suffix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-609">Every string starts and ends with an empty substring (""); therefore, if `suffix` is an empty string, this method returns `true`.</span></span>  
  
 <span data-ttu-id="c1c11-610"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-610">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-611">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-611">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-612">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-612">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-613">다음 예에서는 문자열이 접두사 또는 접미사를 사용 하 여 다른 문자열 인지 확인 <xref:System.Globalization.CompareOptions>합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-613">The following example determines whether a string is the prefix or suffix of another string using <xref:System.Globalization.CompareOptions>.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-614">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-614">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-615">-or-  <paramref name="suffix" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-615">-or-  <paramref name="suffix" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-616">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-616">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-617">Returns the zero-based index of the last occurrence of a value within a string or within a portion of it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-617">Returns the zero-based index of the last occurrence of a value within a string or within a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char -&gt; int&#xA;override this.LastIndexOf : string * char -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-618">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-618">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-619">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-619">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-620">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-620">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-621">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-621">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-622">소스 문자열 뒤로 문자열의 끝에서 시작 하 고 끝나는 문자열의 시작 부분에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-622">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="c1c11-623">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-623">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-624">문자가 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "Æ" (U + 6), 같은 것 간주 될 수 있습니다에 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-624">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-625">유니코드 값이 동일한 경우에 문자 다른 문자로 같은으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-625">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="c1c11-626">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 반면에 문자열을 검색 하는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-626">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-627">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-627">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-628">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-628">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-629">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-629">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-630">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-630">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-631">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> 메서드는 항상 마지막 인덱스 위치를 반환 <paramref name="source" /> 의 끝에 일치 하는 발견 되었음을 나타내기 위해 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> 메서드는 두 개의 문자열에 하이픈 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 메서드를 나타내는 문자열의 끝에서 일치 항목 발견 했다는 문자열에서 마지막 인덱스 위치를 반환 합니다.  [! code-csharp[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)] [! code-vb[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-631">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> method always returns the last index position in <paramref name="source" /> to indicate that the match is found at the end of <paramref name="source" />. In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> method is used to find the soft hyphen (U+00AD) in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, the method returns the last index position in the string to indicate that it has found a match at the end of the string.  [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string -&gt; int&#xA;override this.LastIndexOf : string * string -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-632">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-632">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-633">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-633">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-634">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-634">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-635">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-635">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-636">소스 문자열 뒤로 문자열의 끝에서 시작 하 고 끝나는 문자열의 시작 부분에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-636">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="c1c11-637">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-637">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-638">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-638">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-639">유니코드 값이 비교 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-639">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-640">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-640">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-641">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-641">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-642">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-642">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-643">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-643">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-644">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-644">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-645">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> 메서드는 항상 반환 <paramref name="source" />.<see cref="P:System.String.Length" /> – 마지막 인덱스 위치를 나타내는 1 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> 메서드 두 문자열의 세 부분 문자열 (하이픈이 (U + 00AD), "n" 이어서 하이픈이 및 하이픈이 뒤에 "m")를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 각각의 경우에는 사용자 지정 하이픈은 무시할 수 있는 문자 이므로 결과 동일에 붙은 사용자 지정 하이픈이 포함 되지 않았던 마치 <paramref name="value" />합니다. 하이픈이를 검색할 때 메서드 6, 5를 반환 합니다. 이러한 값의 두 문자열의 마지막 문자 인덱스에 해당 합니다.  [! code-csharp[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)] [! code-vb[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-645">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> method always returns <paramref name="source" />.<see cref="P:System.String.Length" /> – 1, which represents the last index position in <paramref name="source" />. In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings. Only one of the strings contains a soft hyphen. In each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in <paramref name="value" />. When searching for a soft hyphen only, the method returns 6 and 5. These values correspond to the index of the last character in the two strings.  [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-646">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-646">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-647">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-647">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-648">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-648">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-649">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-649">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-650">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-650">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-651">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-651">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-652">소스 문자열 뒤로 문자열의 끝에서 시작 하 고 끝나는 문자열의 시작 부분에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-652">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="c1c11-653"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-653">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-654">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-654">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-655">문자가 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "Æ" (U + 6), 같은 것 간주 될 수 있습니다에 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-655">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-656">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-656">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="c1c11-657">문자는 유니코드 값이 동일한 경우에 다른 문자와 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-657">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="c1c11-658">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 반면에 문자열을 검색 하는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-658">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-659">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-659">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-660">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-660">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-661">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-661">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-662">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-662">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-663">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-663">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-664">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 메서드는 항상 마지막 문자 위치를 반환 <paramref name="source" /> 의 끝에 일치 하는 발견 되었음을 나타내기 위해 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 소프트 하이픈 (U + 00AD)에 두 문자열을 찾으려고 메서드를 사용 합니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 문화권 구분 검색 소스 문자열의 마지막 인덱스 위치를 반환 합니다. 반면, 한 서 수 검색 성공적으로 하이픈 한 문자열에서 찾아 보고 해주어에서 두 번째 문자열입니다.  [! code-csharp[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)] [! code-vb[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-664">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method always returns the last character position in <paramref name="source" /> to indicate that the match is found at the end of <paramref name="source" />. In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method is used to search for a soft hyphen (U+00AD) in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the last index position in the source string. In contrast, an ordinal search successfully finds the soft hyphen in one string and reports that it is absent from the second string.  [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int -&gt; int&#xA;override this.LastIndexOf : string * char * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-665">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-665">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-666">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-666">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-667">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-667">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-668">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-668">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-669">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-669">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-670">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-670">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-671">소스 문자열은 검색 결과에서 시작 `startIndex` 영역 문자열의 시작 부분에서 끝납니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-671">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="c1c11-672">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-672">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-673">문자가 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "Æ" (U + 6), 같은 것 간주 될 수 있습니다에 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-673">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-674">유니코드 값이 동일한 경우에 문자 다른 문자로 같은으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-674">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="c1c11-675">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 반면에 문자열을 검색 하는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-675">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-676">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-676">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-677">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-677">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-678">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-678">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="c1c11-679"><xref:System.Globalization.CompareInfo.IndexOf%2A> 및 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 같아도 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-679">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-680">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-680">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-681">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-681">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-682">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> 메서드는 두 개의 문자열에 "m"의 최종 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 메서드는 "m", 값의 인덱스 위치의 <paramref name="startIndex" />합니다.  [! code-csharp[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)] [! code-vb[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-682">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins. In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, the method returns the index position of the "m", which is the value of <paramref name="startIndex" />.  [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-683">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-683">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-684">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-684">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-685">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-685">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-686">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-686">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-687">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-687">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-688">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-688">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-689">소스 문자열 뒤로 문자열의 끝에서 시작 하 고 끝나는 문자열의 시작 부분에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-689">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="c1c11-690"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-690">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-691">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-691">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-692">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-692">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-693">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값이 비교 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-693">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-694">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-694">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-695">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-695">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-696">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-696">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-697">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-697">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-698">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-698">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-699">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-699">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-700">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="source" />.<see cref="P:System.String.Length" /> – 마지막 인덱스 위치를 나타내는 1 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드 두 문자열의 세 부분 문자열 (하이픈이 (U + 00AD), "n" 이어서 하이픈이 및 하이픈이 뒤에 "m")를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 사용자 지정 하이픈은 무시할 수 있는 문자 이므로 문화권 구분 검색 하이픈 검색 문자열에 포함 되지 않은 경우 반환 되는 동일한 값을 반환 합니다. 그러나 서 수 검색을 성공적으로 하이픈 한 문자열에서 찾아 보고 해주어에서 두 번째 문자열입니다.  [! code-csharp[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)] [! code-vb[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-700">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method always returns <paramref name="source" />.<see cref="P:System.String.Length" /> – 1, which represents the last index position in <paramref name="source" />. In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings. Only one of the strings contains a soft hyphen. Because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string. An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.  [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int -&gt; int&#xA;override this.LastIndexOf : string * string * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-701">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-701">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-702">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-702">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-703">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-703">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-704">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-704">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-705">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-705">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-706">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-706">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-707">소스 문자열은 검색 결과에서 시작 `startIndex` 영역 문자열의 시작 부분에서 끝납니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-707">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="c1c11-708">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-708">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-709">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-709">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-710">유니코드 값이 비교 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-710">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-711">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-711">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-712">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-712">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-713">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-713">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="c1c11-714"><xref:System.Globalization.CompareInfo.IndexOf%2A> 및 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 같아도 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-714">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-715">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-715">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-716">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-716">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-717">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-717">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-718">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> 메서드 하이픈이 (U + 00AD)를 포함 하 고 앞 또는 마지막 "m" 문자열에 포함 하는 부분 문자열을 찾는 데 사용 됩니다. 검색 문자열에 하이픈은 무시 되므로 사용자 지정 하이픈 및 "m"으로 구성 된 부분 문자열을 하이픈으로 구성 된 부분 문자열을 찾기 위해 호출 하는 반면 문자열에 "m"의 위치를 반환 하 고 "n" 반환 찾으려고 메서드를 호출의  "n"의 위치입니다. 검색 문자열만 하이픈을 포함 된 경우 메서드는 "m"의 값을 나타내는의 인덱스를 반환 하는 <paramref name="startIndex" />합니다.  [! code-csharp[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)] [! code-vb[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-718">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins. In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> method is used to find a substring that includes a soft hyphen (U+00AD) and that precedes or includes the final "m" in a string. Because the soft hyphen in the search string is ignored, calling the method to find a substring that consists of the soft hyphen and "m" returns the position of the "m" in the string, whereas calling it to find a substring that consists of the soft hyphen and "n" returns the position of the "n". When the search string contains only the soft hyphen, the method returns the index of the "m", which represents the value of <paramref name="startIndex" />.  [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-719">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-719">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-720">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-720">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-721">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-721">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-722">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-722">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-723">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-723">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-724">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-724">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-725">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-725">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-726">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-726">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-727">소스 문자열은 검색 결과에서 시작 `startIndex` 영역 문자열의 시작 부분에서 끝납니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-727">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="c1c11-728"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-728">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-729">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-729">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-730">문자가 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "Æ" (U + 6), 같은 것 간주 될 수 있습니다에 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-730">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-731">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-731">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="c1c11-732">문자는 유니코드 값이 동일한 경우에 다른 문자와 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-732">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="c1c11-733">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 반면에 문자열을 검색 하는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-733">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-734">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-734">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-735">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-735">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-736">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-736">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="c1c11-737"><xref:System.Globalization.CompareInfo.IndexOf%2A> 및 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 같아도 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-737">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-738">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-738">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-739">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-739">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-740">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-740">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-741">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 개의 문자열에 "m"의 최종 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 문화권 구분 검색 "m"의 인덱스 위치를 반환 합니다. 그러나 서 수 검색을 성공적으로 하이픈 한 문자열에서 찾아 보고 해주어에서 두 번째 문자열입니다.  [! code-csharp[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)] [! code-vb[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-741">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins. In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the index position of the "m". An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.  [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int -&gt; int&#xA;override this.LastIndexOf : string * char * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-742">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-742">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-743">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-743">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-744">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-744">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c1c11-745">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-745">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-746">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-746">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-747">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-747">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-748">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-748">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-749">소스 문자열은 검색 결과에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-749">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="c1c11-750">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-750">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-751">문자가 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "Æ" (U + 6), 같은 것 간주 될 수 있습니다에 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-751">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-752">유니코드 값이 동일한 경우에 문자 다른 문자로 같은으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-752">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="c1c11-753">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 반면에 문자열을 검색 하는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-753">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-754">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-754">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-755">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-755">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-756">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-756">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-757">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-757">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-758">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-758">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
          <span data-ttu-id="c1c11-759">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-759">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-760">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-760">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-761">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 두 개의 문자열에 "m"의 최종 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 메서드는 "m", 값의 인덱스 위치의 <paramref name="startIndex" />합니다.  [! code-csharp[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)] [! code-vb[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-761">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins. In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, the method returns the index position of the "m", which is the value of <paramref name="startIndex" />.  [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-762">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-762">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-763">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-763">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-764">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-764">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-765">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-765">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-766">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-766">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-767">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-767">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-768">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-768">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-769">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-769">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-770">소스 문자열은 검색 결과에서 시작 `startIndex` 영역 문자열의 시작 부분에서 끝납니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-770">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="c1c11-771"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-771">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-772">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-772">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-773">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-773">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-774">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값이 비교 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-774">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-775">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-775">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-776">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-776">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-777">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-777">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="c1c11-778"><xref:System.Globalization.CompareInfo.IndexOf%2A> 및 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 같아도 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-778">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-779">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-779">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-780">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-780">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-781">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-781">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-782">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-782">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-783">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다.  다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드 뒤에 "m", 두 문자열의 마지막 "m"부터 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. "m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다. 메서드는 서 수 비교를 수행 하는 경우에 첫 번째 문자열에는 사용자 지정 하이픈의 인덱스를 반환 합니다.  [! code-csharp[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)] [! code-vb[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-783">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.  In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m", starting with the final "m" in two strings. Only one of the strings contains the required substring. In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison. Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m". The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.  [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int -&gt; int&#xA;override this.LastIndexOf : string * string * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-784">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-784">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-785">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-785">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-786">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-786">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c1c11-787">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-787">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-788">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-788">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-789">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-789">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-790">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-790">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-791">소스 문자열은 검색 결과에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-791">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="c1c11-792">이 오버 로드는 문화권 구분 검색을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-792">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-793">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-793">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-794">유니코드 값이 비교 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-794">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-795">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-795">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-796">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-796">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-797">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-797">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-798">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-798">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-799">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-799">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-800">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-800">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
          <span data-ttu-id="c1c11-801">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-801">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-802">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-802">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-803">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다.  다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드 두 문자열의 최종 "m" 앞에 있는 3 개의 문자 뒤에 "m" 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. 참고의 경우 첫 번째 문자열 뒤에 "m" 하이픈을 포함 하는 메서드는 사용자 지정 하이픈의 인덱스를 반환 하지 못하고 대신 "m"의 인덱스를 반환 합니다.  [! code-csharp[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)] [! code-vb[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-803">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.  In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in the three characters that precede the final "m" of two strings. Only one of the strings contains the required substring. In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison. Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".  [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-804">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-804">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-805">The character to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-805">The character to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-806">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-806">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c1c11-807">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-807">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-808">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-808">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-809">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-809">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-810">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-810">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-811">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-811">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-812">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-812">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-813">소스 문자열은 검색 결과에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-813">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="c1c11-814"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-814">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-815">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-815">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-816">문자가 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "Æ" (U + 6), 같은 것 간주 될 수 있습니다에 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-816">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-817">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-817">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="c1c11-818">문자는 유니코드 값이 동일한 경우에 다른 문자와 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-818">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="c1c11-819">오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 반면에 문자열을 검색 하는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-819">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-820">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-820">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-821">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-821">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-822">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-822">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-823">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-823">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-824">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-824">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
          <span data-ttu-id="c1c11-825">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-825">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-826">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-826">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-827">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-827">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-828">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자는 결과 해당 문자가 제거 된 대상을 검색 하 합니다. 이 경우는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 개의 문자열에 "m"의 최종 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 하이픈은 무시할 수 있는 문자 이므로 문화권 구분 검색 인덱스의 위치를 반환 "m"을 값의 <paramref name="startIndex" />합니다. 그러나 서 수 검색을 성공적으로 하이픈 한 문자열에서 찾아 보고 해주어에서 두 번째 문자열입니다.  [! code-csharp[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)] [! code-vb[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-828">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed. In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins. In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings. Only one of the strings contains a soft hyphen. In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the index position of the "m", which is the value of <paramref name="startIndex" />. An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.  [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="c1c11-829">The string to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-829">The string to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c1c11-830">The string to locate within <c>source</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-830">The string to locate within <c>source</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="c1c11-831">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-831">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c1c11-832">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-832">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="c1c11-833">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-833">A value that defines how <c>source</c> and <c>value</c> should be compared.</span>
          </span>
          <span data-ttu-id="c1c11-834">
            <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-834">
              <c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-835">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-835">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-836">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-836">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span>
          </span>
          <span data-ttu-id="c1c11-837">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-837">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-838">소스 문자열은 검색 결과에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-838">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="c1c11-839"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-839">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="c1c11-840">경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-840">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="c1c11-841">미리 구성 된 문자를 "Æ" 합자 같은 (U + 6)을 나타내는 유니코드 값 동일한 문자의 구성 요소가 올바른 순서로 "AE"와 같은 것으로 간주 될 수 있습니다 (U + 0041, U + 0045) 문화권에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-841">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="c1c11-842">경우 `options` 포함는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값이 비교 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-842">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1c11-843">가능 하면 메서드를 호출 해야 문자열 비교 형식의 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-843">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="c1c11-844">일반적으로 사용자 인터페이스에 표시 되는 문자열 비교를 위한 (사용 하 여 현재 문화권) 하는 언어 옵션을 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-844">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-845">다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열의 부분에 부분 문자열의 인덱스를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-845">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c1c11-846">
            <paramref name="source" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-846">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c1c11-847">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-847">-or-  <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c1c11-848">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-848">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span>
          </span>
          <span data-ttu-id="c1c11-849">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-849">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c1c11-850">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-850">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c1c11-851">
            <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-851">
              <paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-852">
            <para>문자 집합 포함 무시할 수 있는 문자는 문자 언어 또는 문화권 구분 정렬을 수행 하는 경우 고려 되지 않습니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 즉 검색을 시작할 문자 위치입니다.  다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드 뒤에 "m" 모든 하이픈이 (U + 00AD)의 위치를 알았지만 두 문자열의 "m"의 최종 하기 전에 첫 번째 문자 위치를 사용 합니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. 그러나 서 수 비교를 수행 하는 경우 찾으면 부분 문자열이 첫 번째 문자열에만 합니다. 참고의 경우 첫 번째 문자열 뒤에 "m" 하이픈을 포함 하는 메서드는 사용자 지정 하이픈의 인덱스를 반환 하지 못하고 문화권 구분 비교를 수행 하는 경우 대신 "m"의 인덱스를 반환 합니다. 메서드는 서 수 비교를 수행 하는 경우에 첫 번째 문자열에는 사용자 지정 하이픈의 인덱스를 반환 합니다.  [! code-vb[System.Globalization.CompareInfo.LastIndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-852">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort. In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.  In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in all but the first character position before the final "m" in two strings. Only one of the strings contains the required substring. In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison. When it performs an ordinal comparison, however, it finds the substring only in the first string. Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison. The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.  [!code-vb[System.Globalization.CompareInfo.LastIndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CompareInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-853">Gets the properly formed culture identifier for the current <see cref="T:System.Globalization.CompareInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-853">Gets the properly formed culture identifier for the current <see cref="T:System.Globalization.CompareInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1c11-854">올바르게 형성 된 문화권 식별자에 대 한 현재 <see cref="T:System.Globalization.CompareInfo" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-854">The properly formed culture identifier for the current <see cref="T:System.Globalization.CompareInfo" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1c11-855">다음 예제는 <xref:System.Globalization.CompareInfo.LCID%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-855">The following example demonstrates the <xref:System.Globalization.CompareInfo.LCID%2A> property.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.CompareInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-856">Gets the name of the culture used for sorting operations by this <see cref="T:System.Globalization.CompareInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-856">Gets the name of the culture used for sorting operations by this <see cref="T:System.Globalization.CompareInfo" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1c11-857">문화권의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-857">The name of a culture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-858"><xref:System.Globalization.CompareInfo.Name%2A> 및 <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> 속성 다른 값을 가질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-858">The <xref:System.Globalization.CompareInfo.Name%2A> and <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> properties can have different values.</span></span> <span data-ttu-id="c1c11-859">예를 들어 한 <xref:System.Globalization.CompareInfo.LCID%2A> 속성 값이 16 진수 0x10407 비슷해 보이지만 독일 전화 번호부에서 이름을 정렬 하는 대체 정렬 문화권을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-859">For example, an <xref:System.Globalization.CompareInfo.LCID%2A> property value of hexadecimal 0x10407 identifies an alternate sort culture that sorts names as they might appear in a German telephone book.</span></span> <span data-ttu-id="c1c11-860"><xref:System.Globalization.CompareInfo.Name%2A> 속성 반면 "de-de_phoneb"의 값은는 <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> 관련된 독일어 (독일) 문화권의 속성을 "DE-DE" 값이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-860">The <xref:System.Globalization.CompareInfo.Name%2A> property has a value of "de-de_phoneb", whereas the <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> property of the associated German (Germany) culture has a value of "de-DE".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1c11-861">다음 예제에서는 FR-FR 및 JA-JP 문화권을 사용 하 여 세 개의 문자열을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-861">The following example compares three strings using the fr-FR and ja-JP cultures.</span></span> <span data-ttu-id="c1c11-862"><xref:System.Globalization.CultureInfo.Name%2A> 속성은 각 문화권의 이름을 표시 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-862">The <xref:System.Globalization.CultureInfo.Name%2A> property is used to display the name of each culture.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="c1c11-863">The object that initiated the callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-863">The object that initiated the callback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c1c11-864">Runs when the entire object graph has been deserialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-864">Runs when the entire object graph has been deserialized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-865">이 멤버는 명시적 인터페이스 멤버 구현 사용할 수 있는 경우에만 현재 <xref:System.Globalization.CompareInfo> 개체가로 캐스팅 한 <xref:System.Runtime.Serialization.IDeserializationCallback> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-865">This member is an explicit interface member implementation that can be used only when the current <xref:System.Globalization.CompareInfo> object is cast to an <xref:System.Runtime.Serialization.IDeserializationCallback> interface.</span></span> <span data-ttu-id="c1c11-866">자세한 내용은 <xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c1c11-866">For more information, see the <xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="compareInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-867">Returns a string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-867">Returns a string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c1c11-868">A string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-868">A string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-869">이 메서드를 재정의 <xref:System.Object.ToString%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c1c11-869">This method overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c1c11-870">클래스 이름과 인스턴스 값으로 구성 된 문자열을 반환 <xref:System.Globalization.CompareInfo.Name%2A> 속성을 하이픈으로 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-870">It returns a string that consists of the class name and the value of the instance <xref:System.Globalization.CompareInfo.Name%2A> property, separated by a hyphen.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="c1c11-871">
            <para>대상.NET Framework 4는 <see cref="M:System.Globalization.CompareInfo.ToString" /> 클래스 이름 뒤에 공백, 하이픈, 공백, 및의 값을 반환 하는 메서드는 <see cref="P:System.Globalization.CompareInfo.Name" /> 속성입니다. 예는 <see cref="T:System.Globalization.CompareInfo" /> EN-US 문화권을 나타내는 개체의 <see cref="M:System.Globalization.CompareInfo.ToString" /> 메서드 "CompareInfo-EN-US"를 반환 합니다. 이전 버전의.NET Framework에서는 클래스 이름 뒤에 공백, 하이픈, 공백, 및의 값으로 반환 된 <see cref="P:System.Globalization.CompareInfo.LCID" /> 속성입니다. 예는 <see cref="T:System.Globalization.CompareInfo" /> EN-US 문화권을 나타내는 개체의 <see cref="M:System.Globalization.CompareInfo.ToString" /> 메서드 "CompareInfo-1033"를 반환 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-871">
              <para>Staring with the .NET Framework 4, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns the class name followed by a space, a hyphen, a space, and the value of the <see cref="P:System.Globalization.CompareInfo.Name" /> property. For example, for a <see cref="T:System.Globalization.CompareInfo" /> object that represents the en-US culture, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns "CompareInfo - en-US". In previous versions of the .NET Framework, it returns the class name followed by a space, a hyphen, a space, and the value of the <see cref="P:System.Globalization.CompareInfo.LCID" /> property. For example, for a <see cref="T:System.Globalization.CompareInfo" /> object that represents the en-US culture, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns "CompareInfo - 1033".</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public System.Globalization.SortVersion Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.SortVersion Version" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As SortVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::SortVersion ^ Version { System::Globalization::SortVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : System.Globalization.SortVersion" Usage="System.Globalization.CompareInfo.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.SortVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c1c11-872">Gets information about the version of Unicode used for comparing and sorting strings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-872">Gets information about the version of Unicode used for comparing and sorting strings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c1c11-873">문자열을 비교하고 정렬하는 데 사용되는 유니코드 버전에 대한 정보를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c1c11-873">An object that contains information about the Unicode version used for comparing and sorting strings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1c11-874">개별 문자의 가중치 및 특정 문자열의 비교 및 정렬 하는 방법은.NET Framework의 특정 버전을 구현 하는 유니코드 사양의 버전에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-874">The weight of individual characters, and therefore the way in which particular strings are compared or ordered, depends on the version of the Unicode specification that a particular version of the .NET Framework implements.</span></span> <span data-ttu-id="c1c11-875">에 [!INCLUDE[net_v45](~/includes/net-v45-md.md)],이에 의존 호스트 운영 체제 다음 표에서 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-875">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], this also depends on the host operating system, as the following table shows.</span></span> <span data-ttu-id="c1c11-876">지원되는 유니코드 버전 목록은 문자 비교 및 정렬에만 적용되며 범주에 따른 유니코드 문자의 분류에는 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-876">Note that this list of supported Unicode versions applies to character comparison and sorting only; it does not apply to classification of Unicode characters by category.</span></span>  
  
|<span data-ttu-id="c1c11-877">.NET Framework 버전</span><span class="sxs-lookup"><span data-stu-id="c1c11-877">.NET Framework version</span></span>|<span data-ttu-id="c1c11-878">운영 체제</span><span class="sxs-lookup"><span data-stu-id="c1c11-878">Operating system</span></span>|<span data-ttu-id="c1c11-879">유니코드 버전</span><span class="sxs-lookup"><span data-stu-id="c1c11-879">Unicode version</span></span>|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|<span data-ttu-id="c1c11-880">모든 운영 체제</span><span class="sxs-lookup"><span data-stu-id="c1c11-880">All operating systems</span></span>|<span data-ttu-id="c1c11-881">Unicode 5.0</span><span class="sxs-lookup"><span data-stu-id="c1c11-881">Unicode 5.0</span></span>|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)]<span data-ttu-id="c1c11-882"> 이상 버전</span><span class="sxs-lookup"><span data-stu-id="c1c11-882"> and later versions</span></span>|[!INCLUDE[win7](~/includes/win7-md.md)]|<span data-ttu-id="c1c11-883">Unicode 5.0</span><span class="sxs-lookup"><span data-stu-id="c1c11-883">Unicode 5.0</span></span>|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)]<span data-ttu-id="c1c11-884"> 이상 버전</span><span class="sxs-lookup"><span data-stu-id="c1c11-884"> and later versions</span></span>|[!INCLUDE[win8](~/includes/win8-md.md)]<span data-ttu-id="c1c11-885"> 및 이후 Windows 운영 체제 버전</span><span class="sxs-lookup"><span data-stu-id="c1c11-885"> and later Windows operating system versions</span></span>|<span data-ttu-id="c1c11-886">유니코드 6.3</span><span class="sxs-lookup"><span data-stu-id="c1c11-886">Unicode 6.3</span></span>|  
  
 <span data-ttu-id="c1c11-887"><xref:System.Globalization.SortVersion> 에서 반환 된 개체는 <xref:System.Globalization.CompareInfo.Version%2A> 속성 문자열을 비교 하는 데 사용 하는 정확한 유니코드 버전을 식별 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-887">The <xref:System.Globalization.SortVersion> object returned by the <xref:System.Globalization.CompareInfo.Version%2A> property doesn't identify the precise Unicode version used to compare strings.</span></span> <span data-ttu-id="c1c11-888">두 개를 비교 하는 경우에 유용 <xref:System.Globalization.SortVersion> 문자열을 비교 하는 동일한 유니코드 version 및 culture 사용 여부를 결정 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-888">It is useful only when comparing two <xref:System.Globalization.SortVersion> objects to determine whether they use the same Unicode version and culture to compare strings.</span></span> <span data-ttu-id="c1c11-889">자세한 내용 및 예제에 대 한 참조는 <xref:System.Globalization.SortVersion> 참조 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="c1c11-889">For more information and an example, see the <xref:System.Globalization.SortVersion> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortVersion" />
      </Docs>
    </Member>
  </Members>
</Type>