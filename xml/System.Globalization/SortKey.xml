<Type Name="SortKey" FullName="System.Globalization.SortKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f16bb4d967dabb900994d7846cd4790eae2c94b4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36485788" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortKey" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit SortKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SortKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey" />
  <TypeSignature Language="F#" Value="type SortKey = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7b263-101">Represents the result of mapping a string to its sort key.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7b263-101">Represents the result of mapping a string to its sort key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b263-102">두 문자열의 문화권 구분 비교는 대/소문자 및 분음 부호 가중치 가중치가 여러 범주의 정렬 가중치가, 스크립트, 사전순, 포함 된 문자열의 각 문자에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-102">A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="7b263-103">정렬 키가 이러한 가중치는 특정 문자열의 리포지토리로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-103">A sort key serves as the repository of these weights for a particular string.</span></span>  
  
 <span data-ttu-id="7b263-104"><xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> 의 인스턴스를 반환 하는 메서드는 <xref:System.Globalization.SortKey> 지정된 된 문자열에 문자의 문화권 구분 매핑을 반영 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-104">The <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> method returns an instance of the <xref:System.Globalization.SortKey> class that reflects the culture-sensitive mapping of characters in a specified string.</span></span> <span data-ttu-id="7b263-105">값을 <xref:System.Globalization.SortKey> 개체에서 반환 되는 키 데이터는는 <xref:System.Globalization.SortKey.KeyData%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-105">The value of a <xref:System.Globalization.SortKey> object is its key data, which is returned by the <xref:System.Globalization.SortKey.KeyData%2A> property.</span></span> <span data-ttu-id="7b263-106">이 키 데이터 일련의 바이트 문자열, culture 별 정렬 규칙 및 사용자 지정 비교 옵션을 인코딩할 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-106">This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options.</span></span> <span data-ttu-id="7b263-107">정렬 키를 사용 하 여 비교 각 정렬 키에 해당 키 데이터의 비트 비교로 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-107">A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.</span></span>  <span data-ttu-id="7b263-108">예를 들어, 호출 하 여 정렬 키를 만드는 경우는 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> 메서드 값이 <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>, 정렬 키를 사용 하는 문자열 비교 연산을 대/소문자는 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-108">For example, if you create a sort key by calling the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> method with a value of <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>, a string comparison operation that uses the sort key is case-insensitive.</span></span>  
  
 <span data-ttu-id="7b263-109">정적을 호출 하 여 정렬 키를 비교 하는 문자열에 대 한 정렬 키를 만든 후 <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7b263-109">After you create a sort key for a string, you compare sort keys by calling the static <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7b263-110">이 메서드가 간단한 바이트 단위로 비교 하므로 보다 훨씬 빠릅니다는 <xref:System.String.Compare%2A?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7b263-110">This method performs a simple byte-by-byte comparison, so it is much faster than the <xref:System.String.Compare%2A?displayProperty=nameWithType> or <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="7b263-111">성능 고려 사항</span><span class="sxs-lookup"><span data-stu-id="7b263-111">Performance considerations</span></span>  
 <span data-ttu-id="7b263-112">문자열 비교를 수행 하는 경우는 <xref:System.Globalization.SortKey.Compare%2A> 및 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 메서드는 동일한 결과 생성 하지만 이러한 대상 시나리오가 서로 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-112">When performing a string comparison, the <xref:System.Globalization.SortKey.Compare%2A> and <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> methods yield the same results, but they target different scenarios.</span></span>  
  
 <span data-ttu-id="7b263-113">상위 수준에서 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 메서드 각 문자열에 대 한 정렬 키 생성, 비교를 수행 하 고 다음 정렬 키를 삭제 하 고 비교 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-113">At a high level, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison.</span></span> <span data-ttu-id="7b263-114">그러나는 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 메서드 실제로 하지 않는 키를 생성 전체 정렬 비교를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-114">However, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method actually doesn't generate an entire sort key to perform the comparison.</span></span> <span data-ttu-id="7b263-115">대신, 메서드는 각 문자열에서 각 텍스트 요소 (즉, 기본, 서로게이트 쌍 문자나 문자 시퀀스 결합)에 대 한 키 데이터를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-115">Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string.</span></span> <span data-ttu-id="7b263-116">키 데이터의 해당 텍스트 요소를 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-116">The method then compares the key data for the corresponding text elements.</span></span> <span data-ttu-id="7b263-117">작업에는 비교의 최종 결과 결정 하는 즉시 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-117">The operation terminates as soon as the ultimate result of the comparison is determined.</span></span> <span data-ttu-id="7b263-118">정렬 키 정보가 계산 없는 <xref:System.Globalization.SortKey> 개체가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-118">Sort key information is computed, but no <xref:System.Globalization.SortKey> object is created.</span></span> <span data-ttu-id="7b263-119">이 전략은 두 문자열이 한 번만 비교 하는 경우 성능 면에서 경제적이 고 아니지만 동일한 문자열이 여러 번을 비교 하는 경우 비용이 많이 드는 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-119">This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.</span></span>  
  
 <span data-ttu-id="7b263-120"><xref:System.Globalization.SortKey.Compare%2A> 메서드를 사용 하려면 생성 한 <xref:System.Globalization.SortKey> 비교를 수행 하기 전에 각 문자열에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-120">The <xref:System.Globalization.SortKey.Compare%2A> method requires generation of a <xref:System.Globalization.SortKey> object for each string before performing the comparison.</span></span> <span data-ttu-id="7b263-121">이 전략은 시간과 메모리를 생성 하는 데 때문에 첫 번째 비교에 대 한 성능 저하는 <xref:System.Globalization.SortKey> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-121">This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <xref:System.Globalization.SortKey> objects.</span></span> <span data-ttu-id="7b263-122">동일한 정렬 키에는 여러 번 비교 하는 경우에 경제적입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-122">However, it becomes economical if the same sort keys are compared many times.</span></span>  
  
 <span data-ttu-id="7b263-123">예를 들어, 문자열 기반 인덱스 열이 지정된 된 검색 문자열과 일치 하는 행에 대 한 데이터베이스 테이블을 검색 하는 응용 프로그램을 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-123">For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string.</span></span> <span data-ttu-id="7b263-124">테이블에는 수천 개의 행을 포함 되 고 각 행에 있는 인덱스의 검색 문자열과 비교는 시간이 오래 걸립니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-124">The table contains thousands of rows, and comparing the search string to the index in each row will take a long time.</span></span> <span data-ttu-id="7b263-125">따라서 응용 프로그램에서는 행 및 해당 인덱스 열을 저장 하는 경우 또한 생성 하 고 인덱스에 대 한 정렬 키를 검색 성능을 향상 시킬 전용된 열에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-125">Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance.</span></span> <span data-ttu-id="7b263-126">응용 프로그램 대상 행을 검색할 때 검색 문자열 인덱스 문자열 인덱스 문자열 검색 문자열을 비교 하는 대신에 대 한 정렬 키에 대 한 정렬 키를 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-126">When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="7b263-127">보안 고려 사항</span><span class="sxs-lookup"><span data-stu-id="7b263-127">Security considerations</span></span>  
 <span data-ttu-id="7b263-128"><xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.SortKey> 지정 된 문자열을 기반으로 하는 값을 가진 개체 및 <xref:System.Globalization.CompareOptions> 값 및 내부와 관련 된 문화권 <xref:System.Globalization.CompareInfo> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-128">The <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method returns a <xref:System.Globalization.SortKey> object with the value based on a specified string and <xref:System.Globalization.CompareOptions> value, and the culture associated with the underlying <xref:System.Globalization.CompareInfo> object.</span></span> <span data-ttu-id="7b263-129">문자열 비교 또는 대/소문자 변경에 따라 달라 집니다 보안 결정 하는 경우 사용 해야는 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 메서드 작업의 동작 운영 체제의 문화권 설정에 관계 없이 일치 하는지 확인 하 고 고정 문화권의 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-129">If a security decision depends on a string comparison or case change, you should use the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.</span></span>  
  
 <span data-ttu-id="7b263-130">정렬 키를 가져오려면 다음 단계를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-130">Use the following steps to obtain a sort key:</span></span>  
  
1.  <span data-ttu-id="7b263-131">고정 문화권에서 검색 된 <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-131">Retrieve the invariant culture from the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> property.</span></span>  
  
2.  <span data-ttu-id="7b263-132">검색 한 <xref:System.Globalization.CompareInfo> 고정 문화권에 대 한 개체는 <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-132">Retrieve a <xref:System.Globalization.CompareInfo> object for the invariant culture from the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="7b263-133"><xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-133">Call the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b263-134">값으로 작업 하는 <xref:System.Globalization.SortKey> 개체 하는 것은 Windows `LCMapString` LCMAP_SORTKEY 값이 지정 된 메서드.</span><span class="sxs-lookup"><span data-stu-id="7b263-134">Working with the value of a <xref:System.Globalization.SortKey> object is equivalent to calling the Windows `LCMapString` method with the LCMAP_SORTKEY value specified.</span></span> <span data-ttu-id="7b263-135">그러나는 <xref:System.Globalization.SortKey> 개체 영어 문자에 대 한 정렬 키 한국어 문자에 대 한 정렬 키를 앞에 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-135">However, for the <xref:System.Globalization.SortKey> object, the sort keys for English characters precede the sort keys for Korean characters.</span></span>  
  
 <span data-ttu-id="7b263-136"><xref:System.Globalization.SortKey> 개체 수에 serialize 된 통과할 수 있도록 <xref:System.AppDomain> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-136"><xref:System.Globalization.SortKey> objects can be serialized, but only so that they can cross <xref:System.AppDomain> objects.</span></span> <span data-ttu-id="7b263-137">응용 프로그램 또는 그 반대로 serialize 하는 경우는 <xref:System.Globalization.SortKey> 개체,.NET Framework의 새 버전이 있는 경우 응용 프로그램이 모든 정렬 키를 다시 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-137">If an application serializes a <xref:System.Globalization.SortKey> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.</span></span>  
  
 <span data-ttu-id="7b263-138">정렬 키에 대 한 자세한 내용은 유니코드 기술 표준 #10, 참조 "유니코드 데이터 정렬 알고리즘"에 [유니코드 컨소시엄 웹 사이트](http://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-138">For more information about sort keys, see Unicode Technical Standard #10, "Unicode Collation Algorithm" on the [Unicode Consortium website](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b263-139">다음 예제에서는 llama"문자열" "EN-US"와 "ES-ES" 문화권 및 "EN-US"와 "ES-ES" 전통적인 문화권을 사용 하 여 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-139">The following example compares the string "llama" using the "en-US" and "es-ES" cultures, and the "en-US" and "es-ES" traditional cultures.</span></span>  
  
 [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]
 [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  
  
 <span data-ttu-id="7b263-140">다음 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Globalization.SortKey> 큰 배열 정렬 및 검색 광범위 하 게 의존 하는 응용 프로그램의 성능을 향상 시키는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-140">The following example shows how you can use the <xref:System.Globalization.SortKey> class to improve performance in an application that relies extensively on sorting and searching a large array.</span></span> <span data-ttu-id="7b263-141">예제에는 13 개의 요소를이 경우에 이름, 순서가 지정 되지 않은 배열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-141">The example creates an unordered array of names, which in this case has 13 elements.</span></span> <span data-ttu-id="7b263-142">그런 다음 각 이름의 정렬 키에 전달 하는 병렬 배열에 저장 된 <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7b263-142">It then stores the sort key of each name in a parallel array, which it passes to the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7b263-143">결과 정렬된 된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-143">The result is a sorted array.</span></span> <span data-ttu-id="7b263-144">이 예제에서는 세 개의 문자열에 대 한 배열을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-144">The example then searches the array for three strings.</span></span> <span data-ttu-id="7b263-145">각 검색 문자열에 대 한 호출에서 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 문자열의 정렬 키를 차례로 호출을 검색 하는 메서드는 <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> 정렬 키의 배열에서 해당 정렬 키의 인덱스를 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-145">For each search string, it calls the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method to retrieve the string's sort key, and then calls the <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> method to retrieve the index of that sort key in the array of sort keys.</span></span> <span data-ttu-id="7b263-146">이름 및 정렬 키 배열 병렬 이므로, 반환 된 인덱스에 있는 이름의 인덱스 이기도 `names` 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-146">Because the name and sort key arrays are parallel, the returned index is also the index of the name in the `names` array.</span></span>  
  
 [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]
 [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
    <altmember cref="P:System.Globalization.SortKey.KeyData" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Globalization.SortKey sortkey1, class System.Globalization.SortKey sortkey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (sortkey1 As SortKey, sortkey2 As SortKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Globalization::SortKey ^ sortkey1, System::Globalization::SortKey ^ sortkey2);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Globalization.SortKey * System.Globalization.SortKey -&gt; int" Usage="System.Globalization.SortKey.Compare (sortkey1, sortkey2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
        <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
      </Parameters>
      <Docs>
        <param name="sortkey1">
          <span data-ttu-id="7b263-147">The first sort key to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-147">The first sort key to compare.</span>
          </span>
        </param>
        <param name="sortkey2">
          <span data-ttu-id="7b263-148">The second sort key to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-148">The second sort key to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b263-149">Compares two sort keys.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-149">Compares two sort keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b263-150">A signed integer that indicates the relationship between <paramref name="sortkey1" /> and <paramref name="sortkey2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-150">A signed integer that indicates the relationship between <paramref name="sortkey1" /> and <paramref name="sortkey2" />.</span>
          </span>
          <span data-ttu-id="7b263-151">
            <list type="table">
              <listheader>
                <term> Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description>
                  <paramref name="sortkey1" /> is less than <paramref name="sortkey2" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description>
                  <paramref name="sortkey1" /> is equal to <paramref name="sortkey2" />.  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description>
                  <paramref name="sortkey1" /> is greater than <paramref name="sortkey2" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-151">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="sortkey1" /> is less than <paramref name="sortkey2" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="sortkey1" /> is equal to <paramref name="sortkey2" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="sortkey1" /> is greater than <paramref name="sortkey2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b263-152"><xref:System.Globalization.SortKey.Compare%2A> 메서드 비교는 <xref:System.Globalization.SortKey.KeyData%2A> 의 속성은 `sortkey1` 및 `sortkey2` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-152">The <xref:System.Globalization.SortKey.Compare%2A> method compares the <xref:System.Globalization.SortKey.KeyData%2A> properties of the `sortkey1` and `sortkey2` parameters.</span></span> <span data-ttu-id="7b263-153">와 동일한 결과 생성 하는 메서드는 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7b263-153">The method yields the same results as the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b263-154">에 대 한 자세한 내용은 <xref:System.Globalization.SortKey.Compare%2A> 메서드와 정렬 키의 비교 참조는 <xref:System.Globalization.SortKey> 클래스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-154">For more information about the <xref:System.Globalization.SortKey.Compare%2A> method and the comparison of sort keys, see the <xref:System.Globalization.SortKey> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b263-155">사용 하 여 두 문자열을 비교 하는 다음 코드 예제는 <xref:System.Globalization.SortKey.Compare%2A> 메서드 및 해당 <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="7b263-155">The following code example compares two strings using the <xref:System.Globalization.SortKey.Compare%2A> method and the equivalent <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]
 [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b263-156">
            <paramref name="sortkey1" /> or <paramref name="sortkey2" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-156">
              <paramref name="sortkey1" /> or <paramref name="sortkey2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortKey.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7b263-157">The object to compare with the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-157">The object to compare with the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b263-158">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-158">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b263-159">
            <see langword="true" /> if the <paramref name="value" /> parameter is equal to the current <see cref="T:System.Globalization.SortKey" /> object; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-159">
              <see langword="true" /> if the <paramref name="value" /> parameter is equal to the current <see cref="T:System.Globalization.SortKey" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b263-160">두 개의 <xref:System.Globalization.SortKey> 개체는 같은 것으로 간주 되는 <xref:System.Globalization.SortKey.KeyData%2A> 속성이 같은지 합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-160">Two <xref:System.Globalization.SortKey> objects are considered equal if their <xref:System.Globalization.SortKey.KeyData%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="7b263-161">이 메서드를 재정의 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-161">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b263-162">다음 코드 예제에서는 결과 보여 줍니다. <xref:System.Globalization.SortKey.Equals%2A> 다른와 비교 했을 때 <xref:System.Globalization.SortKey> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-162">The following code example shows the results of <xref:System.Globalization.SortKey.Equals%2A> when compared with different <xref:System.Globalization.SortKey> objects.</span></span>  
  
 [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]
 [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b263-163">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-163">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.Globalization.SortKey.KeyData" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7b263-164">Serves as a hash function for the current <see cref="T:System.Globalization.SortKey" /> object that is suitable for hashing algorithms and data structures such as a hash table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-164">Serves as a hash function for the current <see cref="T:System.Globalization.SortKey" /> object that is suitable for hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b263-165">A hash code for the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-165">A hash code for the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b263-166">이 메서드는 <xref:System.Globalization.SortKey.Equals%2A> 메서드에 따라 동일한 두 개체에 대해 같은 해시 코드를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-166">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.SortKey.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="7b263-167">이 메서드를 재정의 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-167">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.SortKey.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public virtual byte[] KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : byte[]" Usage="System.Globalization.SortKey.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b263-168">Gets the byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-168">Gets the byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b263-169">현재 나타내는 바이트 배열 <see cref="T:System.Globalization.SortKey" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-169">A byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b263-170">반환 된 데이터의 사용에 대 한 자세한 내용은 <xref:System.Globalization.SortKey.KeyData%2A> 문자열 비교에서 속성 참조는 <xref:System.Globalization.SortKey> 클래스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-170">For more information about the use of the data returned by the <xref:System.Globalization.SortKey.KeyData%2A> property in comparing strings, see the <xref:System.Globalization.SortKey> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b263-171">다음 코드 예제에서는 원래 문자열 및 문자열, 대/소문자 구분 정렬 키와 대/소문자 구분 정렬 키에 대 한 주요 데이터를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-171">The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public virtual string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Globalization.SortKey.OriginalString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b263-172">Gets the original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-172">Gets the original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b263-173">현재를 만드는 데 원래 문자열 <see cref="T:System.Globalization.SortKey" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-173">The original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b263-174">다음 코드 예제에서는 원래 문자열 및 문자열, 대/소문자 구분 정렬 키와 대/소문자 구분 정렬 키에 대 한 주요 데이터를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-174">The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sortKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7b263-175">Returns a string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-175">Returns a string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b263-176">A string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b263-176">A string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b263-177">반환 값은 연결 된 문자열 "정렬 키-", 문화권 식별자 및 현재 비교 옵션 <xref:System.Globalization.SortKey> 개체 및의 값은 <xref:System.Globalization.SortKey.OriginalString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-177">The return value is the concatenation of the string "SortKey - ", the culture identifier and compare options of the current <xref:System.Globalization.SortKey> object, and the value of the <xref:System.Globalization.SortKey.OriginalString%2A> property.</span></span>  
  
 <span data-ttu-id="7b263-178">이 메서드를 재정의 <xref:System.Object.ToString%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-178">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b263-179">다음 코드 예제에서는 원래 문자열에서 생성 된 문자열을 표시는 <xref:System.Globalization.SortKey.ToString%2A> 방법 대/소문자 구분 및 대/소문자 구분 정렬 키와 대/소문자 구분 및 대/소문자 구분 정렬 키에 대 한 키 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="7b263-179">The following code example displays an original string, the strings yielded by the <xref:System.Globalization.SortKey.ToString%2A> method for case-sensitive and case-insensitive sort keys, and the key data for case-sensitive and case-insensitive sort keys.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>