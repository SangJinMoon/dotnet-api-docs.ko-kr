<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortKey.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b15666ecaaf1c3a9665c2c3559b07e71e53f5316.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15666ecaaf1c3a9665c2c3559b07e71e53f5316</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Globalization.SortKey">
          <source>Represents the result of mapping a string to its sort key.</source>
          <target state="translated">문자열을 해당 정렬 키에 매핑한 결과를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights.</source>
          <target state="translated">두 문자열의 문화권 구분 비교는 대/소문자 및 분음 부호 가중치 가중치가 여러 범주의 정렬 가중치가, 스크립트, 사전순, 포함 된 문자열의 각 문자에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>A sort key serves as the repository of these weights for a particular string.</source>
          <target state="translated">정렬 키가 이러한 가중치는 특정 문자열의 리포지토리로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType&gt;</ph> method returns an instance of the <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> class that reflects the culture-sensitive mapping of characters in a specified string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType&gt;</ph> 의 인스턴스를 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> 지정된 된 문자열에 문자의 문화권 구분 매핑을 반영 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The value of a <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object is its key data, which is returned by the <ph id="ph2">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> property.</source>
          <target state="translated">값을 <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> 개체에서 반환 되는 키 데이터는는 <ph id="ph2">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options.</source>
          <target state="translated">이 키 데이터 일련의 바이트 문자열, culture 별 정렬 규칙 및 사용자 지정 비교 옵션을 인코딩할 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.</source>
          <target state="translated">정렬 키를 사용 하 여 비교 각 정렬 키에 해당 키 데이터의 비트 비교로 구성 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>For example, if you create a sort key by calling the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29&gt;</ph> method with a value of <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType&gt;</ph>, a string comparison operation that uses the sort key is case-insensitive.</source>
          <target state="translated">예를 들어, 호출 하 여 정렬 키를 만드는 경우는 <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29&gt;</ph> 메서드 값이 <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType&gt;</ph>, 정렬 키를 사용 하는 문자열 비교 연산을 대/소문자는 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>After you create a sort key for a string, you compare sort keys by calling the static <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">정적을 호출 하 여 정렬 키를 비교 하는 문자열에 대 한 정렬 키를 만든 후 <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>This method performs a simple byte-by-byte comparison, so it is much faster than the <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 메서드가 간단한 바이트 단위로 비교 하므로 보다 훨씬 빠릅니다는 <ph id="ph1">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>Performance considerations</source>
          <target state="translated">성능 고려 사항</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>When performing a string comparison, the <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> methods yield the same results, but they target different scenarios.</source>
          <target state="translated">문자열 비교를 수행 하는 경우는 <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> 메서드는 동일한 결과 생성 하지만 이러한 대상 시나리오가 서로 다릅니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>At a high level, the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison.</source>
          <target state="translated">상위 수준에서 <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> 메서드 각 문자열에 대 한 정렬 키 생성, 비교를 수행 하 고 다음 정렬 키를 삭제 하 고 비교 결과입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>However, the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> method actually doesn't generate an entire sort key to perform the comparison.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> 메서드 실제로 하지 않는 키를 생성 전체 정렬 비교를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string.</source>
          <target state="translated">대신, 메서드는 각 문자열에서 각 텍스트 요소 (즉, 기본, 서로게이트 쌍 문자나 문자 시퀀스 결합)에 대 한 키 데이터를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The method then compares the key data for the corresponding text elements.</source>
          <target state="translated">키 데이터의 해당 텍스트 요소를 비교합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The operation terminates as soon as the ultimate result of the comparison is determined.</source>
          <target state="translated">작업에는 비교의 최종 결과 결정 하는 즉시 종료 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>Sort key information is computed, but no <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object is created.</source>
          <target state="translated">정렬 키 정보가 계산 없는 <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> 개체가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.</source>
          <target state="translated">이 전략은 두 문자열이 한 번만 비교 하는 경우 성능 면에서 경제적이 고 아니지만 동일한 문자열이 여러 번을 비교 하는 경우 비용이 많이 드는 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> method requires generation of a <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> object for each string before performing the comparison.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> 메서드를 사용 하려면 생성 한 <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> 비교를 수행 하기 전에 각 문자열에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> objects.</source>
          <target state="translated">이 전략은 시간과 메모리를 생성 하는 데 때문에 첫 번째 비교에 대 한 성능 저하는 <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>However, it becomes economical if the same sort keys are compared many times.</source>
          <target state="translated">동일한 정렬 키에는 여러 번 비교 하는 경우에 경제적입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string.</source>
          <target state="translated">예를 들어, 문자열 기반 인덱스 열이 지정된 된 검색 문자열과 일치 하는 행에 대 한 데이터베이스 테이블을 검색 하는 응용 프로그램을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The table contains thousands of rows, and comparing the search string to the index in each row will take a long time.</source>
          <target state="translated">테이블에는 수천 개의 행을 포함 되 고 각 행에 있는 인덱스의 검색 문자열과 비교는 시간이 오래 걸립니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance.</source>
          <target state="translated">따라서 응용 프로그램에서는 행 및 해당 인덱스 열을 저장 하는 경우 또한 생성 하 고 인덱스에 대 한 정렬 키를 검색 성능을 향상 시킬 전용된 열에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.</source>
          <target state="translated">응용 프로그램 대상 행을 검색할 때 검색 문자열 인덱스 문자열 인덱스 문자열 검색 문자열을 비교 하는 대신에 대 한 정렬 키에 대 한 정렬 키를 비교 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>Security considerations</source>
          <target state="translated">보안 고려 사항</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> object with the value based on a specified string and <ph id="ph3">&lt;xref:System.Globalization.CompareOptions&gt;</ph> value, and the culture associated with the underlying <ph id="ph4">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> 지정 된 문자열을 기반으로 하는 값을 가진 개체 및 <ph id="ph3">&lt;xref:System.Globalization.CompareOptions&gt;</ph> 값 및 내부와 관련 된 문화권 <ph id="ph4">&lt;xref:System.Globalization.CompareInfo&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>If a security decision depends on a string comparison or case change, you should use the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType&gt;</ph> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.</source>
          <target state="translated">문자열 비교 또는 대/소문자 변경에 따라 달라 집니다 보안 결정 하는 경우 사용 해야는 <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType&gt;</ph> 메서드 작업의 동작 운영 체제의 문화권 설정에 관계 없이 일치 하는지 확인 하 고 고정 문화권의 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>Use the following steps to obtain a sort key:</source>
          <target state="translated">정렬 키를 가져오려면 다음 단계를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>Retrieve the invariant culture from the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">고정 문화권에서 검색 된 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>Retrieve a <ph id="ph1">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object for the invariant culture from the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">검색 한 <ph id="ph1">&lt;xref:System.Globalization.CompareInfo&gt;</ph> 고정 문화권에 대 한 개체는 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>Call the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>Working with the value of a <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object is equivalent to calling the Windows <ph id="ph2">`LCMapString`</ph> method with the LCMAP_SORTKEY value specified.</source>
          <target state="translated">값으로 작업 하는 <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> 개체 하는 것은 Windows <ph id="ph2">`LCMapString`</ph> LCMAP_SORTKEY 값이 지정 된 메서드.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>However, for the <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object, the sort keys for English characters precede the sort keys for Korean characters.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> 개체 영어 문자에 대 한 정렬 키 한국어 문자에 대 한 정렬 키를 앞에 야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source><ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> objects can be serialized, but only so that they can cross <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> 개체 수에 serialize 된 통과할 수 있도록 <ph id="ph2">&lt;xref:System.AppDomain&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>If an application serializes a <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.</source>
          <target state="translated">응용 프로그램 또는 그 반대로 serialize 하는 경우는 <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> 개체,.NET Framework의 새 버전이 있는 경우 응용 프로그램이 모든 정렬 키를 다시 생성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>For more information about sort keys, see Unicode Technical Standard #10, "Unicode Collation Algorithm" on the <bpt id="p1">[</bpt>Unicode Consortium website<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>.</source>
          <target state="translated">정렬 키에 대 한 자세한 내용은 유니코드 기술 표준 #10, 참조 "유니코드 데이터 정렬 알고리즘"에 <bpt id="p1">[</bpt>유니코드 컨소시엄 웹 사이트<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The following example compares the string "llama" using the "en-US" and "es-ES" cultures, and the "en-US" and "es-ES" traditional cultures.</source>
          <target state="translated">다음 예제에서는 llama"문자열" "EN-US"와 "ES-ES" 문화권 및 "EN-US"와 "ES-ES" 전통적인 문화권을 사용 하 여 비교 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The following example shows how you can use the <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> class to improve performance in an application that relies extensively on sorting and searching a large array.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> 큰 배열 정렬 및 검색 광범위 하 게 의존 하는 응용 프로그램의 성능을 향상 시키는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The example creates an unordered array of names, which in this case has 13 elements.</source>
          <target state="translated">예제에는 13 개의 요소를이 경우에 이름, 순서가 지정 되지 않은 배열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>It then stores the sort key of each name in a parallel array, which it passes to the <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">그런 다음 각 이름의 정렬 키에 전달 하는 병렬 배열에 저장 된 <ph id="ph1">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The result is a sorted array.</source>
          <target state="translated">결과 정렬된 된 배열입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>The example then searches the array for three strings.</source>
          <target state="translated">이 예제에서는 세 개의 문자열에 대 한 배열을 검색합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>For each search string, it calls the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType&gt;</ph> method to retrieve the string's sort key, and then calls the <ph id="ph2">&lt;xref:System.Array.FindIndex%2A?displayProperty=nameWithType&gt;</ph> method to retrieve the index of that sort key in the array of sort keys.</source>
          <target state="translated">각 검색 문자열에 대 한 호출에서 <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType&gt;</ph> 문자열의 정렬 키를 차례로 호출을 검색 하는 메서드는 <ph id="ph2">&lt;xref:System.Array.FindIndex%2A?displayProperty=nameWithType&gt;</ph> 정렬 키의 배열에서 해당 정렬 키의 인덱스를 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.SortKey">
          <source>Because the name and sort key arrays are parallel, the returned index is also the index of the name in the <ph id="ph1">`names`</ph> array.</source>
          <target state="translated">이름 및 정렬 키 배열 병렬 이므로, 반환 된 인덱스에 있는 이름의 인덱스 이기도 <ph id="ph1">`names`</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source>The first sort key to compare.</source>
          <target state="translated">비교할 첫째 정렬 키입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source>The second sort key to compare.</source>
          <target state="translated">비교할 둘째 정렬 키입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source>Compares two sort keys.</source>
          <target state="translated">두 정렬 키를 비교합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source>A signed integer that indicates the relationship between <ph id="ph1">&lt;paramref name="sortkey1" /&gt;</ph> and <ph id="ph2">&lt;paramref name="sortkey2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sortkey1" /&gt;</ph>과(와) <ph id="ph2">&lt;paramref name="sortkey2" /&gt;</ph> 간의 관계를 나타내는 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 조건</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="sortkey1" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="sortkey2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="sortkey1" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="sortkey2" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="sortkey1" /&gt;</ph> is equal to <ph id="ph4">&lt;paramref name="sortkey2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="sortkey1" /&gt;</ph>이(가) <ph id="ph4">&lt;paramref name="sortkey2" /&gt;</ph>과(와) 같습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="sortkey1" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="sortkey2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="sortkey1" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="sortkey2" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> method compares the <ph id="ph2">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> properties of the <ph id="ph3">`sortkey1`</ph> and <ph id="ph4">`sortkey2`</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> 메서드 비교는 <ph id="ph2">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> 의 속성은 <ph id="ph3">`sortkey1`</ph> 및 <ph id="ph4">`sortkey2`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source>The method yields the same results as the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">와 동일한 결과 생성 하는 메서드는 <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> method and the comparison of sort keys, see the <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> class topic.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> 메서드와 정렬 키의 비교 참조는 <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> 클래스 항목입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source>The following code example compares two strings using the <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> method and the equivalent <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하 여 두 문자열을 비교 하는 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Globalization.SortKey.Compare%2A&gt;</ph> 메서드 및 해당 <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
          <source><ph id="ph1">&lt;paramref name="sortkey1" /&gt;</ph> or <ph id="ph2">&lt;paramref name="sortkey2" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sortkey1" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="sortkey2" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Equals(System.Object)">
          <source>The object to compare with the current <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> 개체와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Equals(System.Object)">
          <source>Determines whether the specified object is equal to the current <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> object.</source>
          <target state="translated">지정한 개체와 현재 <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> 개체가 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is equal to the current <ph id="ph3">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> 매개 변수가 현재 <ph id="ph3">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> 개체와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 다르면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.Equals(System.Object)">
          <source>Two <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> objects are considered equal if their <ph id="ph2">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> properties are equal.</source>
          <target state="translated">두 개의 <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> 개체는 같은 것으로 간주 되는 <ph id="ph2">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> 속성이 같은지 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.Equals(System.Object)">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.Equals(System.Object)">
          <source>The following code example shows the results of <ph id="ph1">&lt;xref:System.Globalization.SortKey.Equals%2A&gt;</ph> when compared with different <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> objects.</source>
          <target state="translated">다음 코드 예제에서는 결과 보여 줍니다. <ph id="ph1">&lt;xref:System.Globalization.SortKey.Equals%2A&gt;</ph> 다른와 비교 했을 때 <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.Equals(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.GetHashCode">
          <source>Serves as a hash function for the current <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> object that is suitable for hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">해시 알고리즘과 해시 테이블 같은 데이터 구조에 적합한 현재 <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> 개체에 대한 해시 함수의 역할을 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> 개체의 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.GetHashCode">
          <source>This method generates the same hash code for two objects that are equal according to the <ph id="ph1">&lt;xref:System.Globalization.SortKey.Equals%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Globalization.SortKey.Equals%2A&gt;</ph> 메서드에 따라 동일한 두 개체에 대해 같은 해시 코드를 생성합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.GetHashCode">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Globalization.SortKey.KeyData">
          <source>Gets the byte array representing the current <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> 개체를 나타내는 바이트 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.SortKey.KeyData">
          <source>A byte array representing the current <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> 개체를 나타내는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.SortKey.KeyData">
          <source>For more information about the use of the data returned by the <ph id="ph1">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> property in comparing strings, see the <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> class topic.</source>
          <target state="translated">반환 된 데이터의 사용에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Globalization.SortKey.KeyData%2A&gt;</ph> 문자열 비교에서 속성 참조는 <ph id="ph2">&lt;xref:System.Globalization.SortKey&gt;</ph> 클래스 항목입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.SortKey.KeyData">
          <source>The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</source>
          <target state="translated">다음 코드 예제에서는 원래 문자열 및 문자열, 대/소문자 구분 정렬 키와 대/소문자 구분 정렬 키에 대 한 주요 데이터를 표시합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Globalization.SortKey.OriginalString">
          <source>Gets the original string used to create the current <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> 개체를 만드는 데 사용되는 원래 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.SortKey.OriginalString">
          <source>The original string used to create the current <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> 개체를 만드는 데 사용되는 원래 문자열입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.SortKey.OriginalString">
          <source>The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</source>
          <target state="translated">다음 코드 예제에서는 원래 문자열 및 문자열, 대/소문자 구분 정렬 키와 대/소문자 구분 정렬 키에 대 한 주요 데이터를 표시합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.ToString">
          <source>Returns a string that represents the current <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> 개체를 나타내는 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Globalization.SortKey.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Globalization.SortKey" /&gt;</ph> 개체를 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.ToString">
          <source>The return value is the concatenation of the string "SortKey - ", the culture identifier and compare options of the current <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> object, and the value of the <ph id="ph2">&lt;xref:System.Globalization.SortKey.OriginalString%2A&gt;</ph> property.</source>
          <target state="translated">반환 값은 연결 된 문자열 "정렬 키-", 문화권 식별자 및 현재 비교 옵션 <ph id="ph1">&lt;xref:System.Globalization.SortKey&gt;</ph> 개체 및의 값은 <ph id="ph2">&lt;xref:System.Globalization.SortKey.OriginalString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.ToString">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=nameWithType&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.SortKey.ToString">
          <source>The following code example displays an original string, the strings yielded by the <ph id="ph1">&lt;xref:System.Globalization.SortKey.ToString%2A&gt;</ph> method for case-sensitive and case-insensitive sort keys, and the key data for case-sensitive and case-insensitive sort keys.</source>
          <target state="translated">다음 코드 예제에서는 원래 문자열에서 생성 된 문자열을 표시는 <ph id="ph1">&lt;xref:System.Globalization.SortKey.ToString%2A&gt;</ph> 방법 대/소문자 구분 및 대/소문자 구분 정렬 키와 대/소문자 구분 및 대/소문자 구분 정렬 키에 대 한 키 데이터입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>