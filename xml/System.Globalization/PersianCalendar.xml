<Type Name="PersianCalendar" FullName="System.Globalization.PersianCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60d45e605b8818d28c7ed116d2e35bd8a1c2974e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36485850" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PersianCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PersianCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.PersianCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class PersianCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersianCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type PersianCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>페르시아력을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 지역에서는 다른 월 이름을 사용 하지만 페르시아 력의 페르시아어는 발음 대부분의 국가에서 사용 됩니다. 페르시아력을 이란과 아프가니스탄의 공식 달력 및 카자흐스탄, 타지 키스탄 등의 영역에는 대체 달력 중 하나입니다.  
  
> [!NOTE]
>  사용 하는 방법에 대 한 내용은 <xref:System.Globalization.PersianCalendar> 클래스 오류 코드 및 기타 달력.NET Framework의 클래스를 참조 하십시오 [달력 작업](~/docs/standard/datetime/working-with-calendars.md)합니다.  
  
 페르시아 력의 날짜부터 헤 622에 해당 하는 시작 C.E. 고 때 마 (PBUH)에서 마이그레이션한 메카 메디 나 연도입니다. 예를 들어 날짜 C.E. 2002 년 3 월 21 일 1381 Anno Persico 파라 바 하르 연도의 해당 월의 첫 번째 날에 해당합니다.  
  
 페르시아 태양 년에 기반 하며 길이 약 365 일입니다. 1 년 4 계절 순환 고에 새 해는 지구 중심에서으로 본 북반구를 지 나 남반구에서 적도 교차 하는 sun 표시 될 때 시작 합니다. 새 해는 북반구에서 스프링의 첫 번째 날인 파라 바 하르 달의 첫 날짜를 표시 합니다.  
  
 페르시아력 첫 번째 6 개의 각 31 일, 앞으로 5 개월 각각의 30 일이 많고 지난 달 29 일 또는 30 일 평년에서 윤년에서 합니다. 윤년은 연도, 33으로 나눌 때 나머지가 1, 5, 9, 13, 17, 22, 26, 또는 30입니다. 예를 들어 1370 년 이므로 윤년 33으로 나누면 나머지가 17 생성 합니다. 33 주기 마다 약 8 윤 년이 있습니다.  
  
## <a name="the-persiancalendar-class-and-net-framework-versions"></a>PersianCalendar 클래스 및.NET Framework 버전  
 부터는 [!INCLUDE[net_v46](~/includes/net-v46-md.md)], <xref:System.Globalization.PersianCalendar> 클래스 observational 알고리즘 보다는 회교식 양력 천문학적인 알고리즘을 사용 하 여 날짜를 계산 하 합니다. 이렇게 하면는 <xref:System.Globalization.PersianCalendar> 구현 이란과 아프가니스탄, 가장 광범위 하 게 사용에서가 페르시아 력의 인 두 국가에서 사용 중인 페르시아 력의와 일치 합니다. .NET Framework 4 또는 이상을 실행 하는 모든 앱에 변경 내용이 적용 된 [!INCLUDE[net_v46](~/includes/net-v46-md.md)] 가 설치 되어 있습니다.  
  
 변경 된 알고리즘의 결과:  
  
-   두 알고리즘 2123 일반 달력의 1800 사이의 날짜를 변환 하는 경우 동일한 결과 반환 해야 합니다.  
  
-   두 알고리즘 1800 전후 2123 일반 달력에서 날짜를 변환 하는 경우 다른 결과 반환할 수 있습니다.  
  
-   <xref:System.Globalization.PersianCalendar.MinSupportedDateTime%2A> 속성 값이 변경에서 0622 년 3 월 21, 일반 달력에서 0622 년 3 월 22를 일반 달력의 합니다.  
  
-   <xref:System.Globalization.PersianCalendar.MaxSupportedDateTime%2A> 페르시아 력의 9378 년의 10 월 13 일에 페르시아 력의 9378 년의 10 월 10 일에서 속성 값이 변경 합니다.  
  
-   <xref:System.Globalization.PersianCalendar.IsLeapYear%2A> 에 이전 보다 메서드가 다른 결과 반환할 수 있습니다.  
  
## <a name="using-the-persiancalendar-class"></a>PersianCalendar 클래스를 사용 하 여  
 응용 프로그램 사용을 <xref:System.Globalization.PersianCalendar> 페르시아 력의 날짜를 계산 하거나 양력 날짜와 페르시아 날짜를 변환 하는 개체입니다.  
  
 사용할 수 없습니다는 <xref:System.Globalization.PersianCalendar> 문화권에 대 한 기본 달력으로 개체입니다. 기본 달력에서 지정 된는 <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> 속성에서 반환 되는 달력 중 하나 여야 하 고는 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> 속성입니다. 현재는 <xref:System.Globalization.PersianCalendar> 클래스에서 지 원하는 모든 culture에 대 한 선택적인 달력 아닙니다.는 <xref:System.Globalization.CultureInfo> 클래스 및 기본 달력이 될 수 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 인스턴스화합니다 <xref:System.DateTime> 사용 하 여 개체는 <xref:System.DateTime.Now%2A?displayProperty=nameWithType> 속성에는 <xref:System.DateTime> 생성자와 페르시아 력의 <xref:System.Globalization.Calendar.ToDateTime%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> 메서드. 양력 및 페르시아어 모두 달력에서이 날짜를 표시합니다. 또한 페르시아 력의 날짜 범위를 표시합니다.  
  
 [!code-csharp[sys.glob.PersianCal#3](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/calendar2.cs#3)]
 [!code-vb[sys.glob.PersianCal#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/calendar2.vb#3)]  
  
 다음 예제에서는의 필드, 속성 및 메서드 멤버는 <xref:System.Globalization.PersianCalendar> 클래스입니다.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PersianCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PersianCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Globalization.PersianCalendar" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에 대 한 생성자를 사용 하 여 <xref:System.Globalization.PersianCalendar> 클래스입니다.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="persianCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">월을 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="months">더할 월 수를 나타내는 양수 또는 음수입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" /> 개체에서 지정된 월 수만큼 오프셋된 <see cref="T:System.DateTime" /> 개체를 반환합니다.</summary>
        <returns>
          <paramref name="time" /> 매개 변수로 지정된 날짜에 <paramref name="months" /> 매개 변수로 지정된 월 수를 더한 결과로 만들어지는 날짜를 나타내는 <see cref="T:System.DateTime" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성은 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.AddMonths%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">결과 <see cref="T:System.DateTime" />이 지원되는 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="months" />가 -120,000보다 작거나 120,000보다 큽니다.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="persianCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">연도를 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="years">더할 연도 수를 나타내는 양수 또는 음수입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" /> 개체에서 지정된 연도 수만큼 오프셋된 <see cref="T:System.DateTime" /> 개체를 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" /> 개체에 지정된 연도 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성은 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.AddYears%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">결과 <see cref="T:System.DateTime" />이 지원되는 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="years" />가 -10,000보다 작거나 10,000보다 큽니다.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.PersianCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.PersianCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 달력이 양력인지, 음력인지 또는 음양력인지를 나타내는 값을 가져옵니다.</summary>
        <value>항상 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 특정 일정에 대 한 날짜 계산 양력 기반의 음력 또는 양력인 인지에 따라 달라 집니다.  
  
   
  
## Examples  
 다음 예제에서는 리플렉션을 사용 하 여 각각 인스턴스화하 <xref:System.Globalization.Calendar> 형식 및.NET Framework에서 발견 된 값을 표시 해당 <xref:System.Globalization.Calendar.AlgorithmType%2A> 속성입니다.  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.PersianCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.PersianCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.PersianCalendar" /> 개체에 있는 연대의 목록을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Globalization.PersianCalendar" /> 개체에 있는 연대를 나타내는 정수의 배열입니다. 이 배열은 값이 <see cref="F:System.Globalization.PersianCalendar.PersianEra" />인 단일 요소로 구성됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.Eras%2A> 속성입니다.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.PersianCalendar.PersianEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="persianCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" /> 개체의 날짜(월 기준)를 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" /> 개체의 날짜(월 기준)를 나타내는 1부터 31까지의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> 매개 변수가 <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" />보다 작거나 <see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" />보다 큰 날짜를 나타내는 경우</exception>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="persianCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" /> 개체의 요일을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" /> 개체의 요일을 나타내는 <see cref="T:System.DayOfWeek" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.GetDayOfWeek%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="persianCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" /> 개체의 날짜(연도 기준)를 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" /> 개체의 날짜(연도 기준)를 나타내는 1부터 366까지의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.GetDayOfYear%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> 매개 변수가 <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" />보다 작거나 <see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" />보다 큰 날짜를 나타내는 경우</exception>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="persianCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다(1 ~ 9378).</param>
        <param name="month">월을 나타내는 정수입니다. 이 정수의 범위는 <c>연도</c>가 9378이 아닌 경우 1부터 12까지이고, <c>연도</c>가 9378인 경우 1부터 10까지입니다.</param>
        <param name="era">연대를 나타내는 정수입니다(0 ~ 1).</param>
        <summary>지정된 연도 및 연대의 지정된 월에 있는 일 수를 반환합니다.</summary>
        <returns>지정된 연도 및 연대의 지정된 월에 있는 일수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.GetDaysInMonth%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />, <paramref name="month" /> 또는 <paramref name="era" />가 이 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="persianCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다(1 ~ 9378).</param>
        <param name="era">연대를 나타내는 정수입니다(0 ~ 1).</param>
        <summary>지정된 연대에 있는 지정된 연도의 일수를 반환합니다.</summary>
        <returns>지정된 연도 및 연대의 일수입니다. 평년의 일수는 365일이고 윤년의 일수는 366일입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 사용을 보여 줍니다.는 <xref:System.Globalization.PersianCalendar.GetDaysInYear%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> 또는 <paramref name="era" />가 이 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="persianCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" /> 개체의 연대를 반환합니다.</summary>
        <returns>항상 <see cref="F:System.Globalization.PersianCalendar.PersianEra" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.GetEra%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> 매개 변수가 <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" />보다 작거나 <see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" />보다 큰 날짜를 나타내는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.PersianCalendar.PersianEra" />
        <altmember cref="P:System.Globalization.PersianCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="persianCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">변환할 연도를 나타내는 정수입니다(1 ~ 9378).</param>
        <param name="era">연대를 나타내는 정수입니다(0 ~ 1).</param>
        <summary>지정된 연도 및 연대의 윤월을 반환합니다.</summary>
        <returns>반환 값은 항상 0입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.GetLeapMonth%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> 또는 <paramref name="era" />가 이 달력에서 지원하는 범위 밖에 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="persianCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" /> 개체의 월을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" /> 개체의 월을 나타내는 1부터 12까지의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.GetMonth%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> 매개 변수가 <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" />보다 작거나 <see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" />보다 큰 날짜를 나타내는 경우</exception>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="persianCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다(1 ~ 9378).</param>
        <param name="era">연대를 나타내는 정수입니다(0 ~ 1).</param>
        <summary>지정된 연대에 있는 지정된 연도의 월 수를 반환합니다.</summary>
        <returns>
          <paramref name="year" /> 매개 변수가 9378이면 10을 반환하고, 그렇지 않으면 항상 12를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.GetMonthsInYear%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> 또는 <paramref name="era" />가 이 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="persianCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" /> 개체의 연도를 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" />의 연도를 나타내는 1에서 9378 사이의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.GetYear%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> 매개 변수가 <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" />보다 작거나 <see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" />보다 큰 날짜를 나타내는 경우</exception>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="persianCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다(1 ~ 9378).</param>
        <param name="month">월을 나타내는 정수입니다. 이 정수의 범위는 <c>연도</c>가 9378이 아닌 경우 1부터 12까지이고, <c>연도</c>가 9378인 경우 1부터 10까지입니다.</param>
        <param name="day">일을 나타내는 정수입니다(1 ~ 31).</param>
        <param name="era">연대를 나타내는 정수입니다(0 ~ 1).</param>
        <summary>지정한 날짜가 윤일인지 여부를 확인합니다.</summary>
        <returns>지정된 날짜가 윤일이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 윤 일은 윤년에만 있는 일입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.IsLeapDay%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />, <paramref name="month" />, <paramref name="day" /> 또는 <paramref name="era" />가 이 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="persianCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다(1 ~ 9378).</param>
        <param name="month">월을 나타내는 정수입니다. 이 정수의 범위는 <c>연도</c>가 9378이 아닌 경우 1부터 12까지이고, <c>연도</c>가 9378인 경우 1부터 10까지입니다.</param>
        <param name="era">연대를 나타내는 정수입니다(0 ~ 1).</param>
        <summary>지정한 연대 및 연도의 특정 월이 윤월인지 여부를 확인합니다.</summary>
        <returns>
          <see cref="T:System.Globalization.PersianCalendar" /> 클래스에서 윤월의 개념을 지원하지 않으므로 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.IsLeapMonth%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />, <paramref name="month" /> 또는 <paramref name="era" />가 이 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="persianCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다(1 ~ 9378).</param>
        <param name="era">연대를 나타내는 정수입니다(0 ~ 1).</param>
        <summary>지정된 연대의 지정된 연도가 윤년인지 여부를 확인합니다.</summary>
        <returns>지정된 연도가 윤년이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 부터는 [!INCLUDE[net_v46](~/includes/net-v46-md.md)], 구현의 <xref:System.Globalization.PersianCalendar> 클래스는 회교식 양력 알고리즘 observational 알고리즘에서 변경 되었습니다. 결과적으로,는 <xref:System.Globalization.PersianCalendar.IsLeapYear%2A> 서로 다른 값에서 실행할 때 반환 될 수 있으며 [!INCLUDE[net_v46](~/includes/net-v46-md.md)] 보다 이전 버전의.NET Framework에서 실행 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.IsLeapYear%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> 또는 <paramref name="era" />가 이 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="F:System.Globalization.PersianCalendar.PersianEra" />
        <altmember cref="P:System.Globalization.PersianCalendar.Eras" />
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.PersianCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.PersianCalendar" /> 클래스에서 지원하는 마지막 날짜와 시간을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Globalization.PersianCalendar" /> 클래스에서 지원하는 마지막 날짜와 시간입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값은 <xref:System.Globalization.PersianCalendar.MaxSupportedDateTime%2A> 속성은 서 기 9999 년 12 월 31 일의 마지막 순간 에 해당 합니다. 에 [!INCLUDE[net_v46](~/includes/net-v46-md.md)],이 값은 페르시아 력의 9378 년의 10 월 13 일에 해당 합니다. .NET Framework의 이전 버전에서는 페르시아 력의 9378 년 10 월의 일에 같습니다. 자세한 내용은 "PersianCalendar 클래스 및.NET Framework 버전"의 참조는 <xref:System.Globalization.PersianCalendar> 항목입니다.  
  
 9999 C.E. 페르시아력에서 9378 년와 같습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.MaxSupportedDateTime%2A> 속성입니다.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.PersianCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.PersianCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.PersianCalendar" /> 클래스에서 지원하는 시작 날짜와 시간을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Globalization.PersianCalendar" /> 클래스에서 지원하는 시작 날짜와 시간입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 부터는 [!INCLUDE[net_v46](~/includes/net-v46-md.md)]의 값은 <xref:System.Globalization.PersianCalendar.MinSupportedDateTime%2A> 속성은 첫 번째 순간 C.E. 622 년 3 월 22 일에 에 해당 합니다. 이전 버전의 C.E. 622 년 3 월 21 일의 첫 번째 순간, NET Framework 에 해당 합니다. 자세한 내용은 "PersianCalendar 클래스 및.NET Framework 버전"의 참조는 <xref:System.Globalization.PersianCalendar> 항목입니다.  
  
 622 C.E. 페르시아력의 0001 년와 같습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.MinSupportedDateTime%2A> 속성입니다.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="PersianEra">
      <MemberSignature Language="C#" Value="public static readonly int PersianEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 PersianEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.PersianCalendar.PersianEra" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PersianEra As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int PersianEra;" />
      <MemberSignature Language="F#" Value=" staticval mutable PersianEra : int" Usage="System.Globalization.PersianCalendar.PersianEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 연대를 나타냅니다. 이 필드는 상수입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값 <xref:System.Globalization.PersianCalendar.PersianEra> 는 1입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.PersianEra> 속성입니다.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="persianCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다(1 ~ 9378).</param>
        <param name="month">월을 나타내는 정수입니다(1 ~ 12).</param>
        <param name="day">일을 나타내는 정수입니다(1 ~ 31).</param>
        <param name="hour">시간을 나타내는 정수입니다(0 ~ 23).</param>
        <param name="minute">분을 나타내는 정수입니다(0 ~ 59).</param>
        <param name="second">초를 나타내는 정수입니다(0 ~ 59).</param>
        <param name="millisecond">밀리초를 나타내는 정수입니다(0 ~ 999).</param>
        <param name="era">연대를 나타내는 정수입니다(0 ~ 1).</param>
        <summary>지정된 날짜, 시간 및 연대로 설정된 <see cref="T:System.DateTime" /> 개체를 반환합니다.</summary>
        <returns>현재 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.PersianCalendar.ToDateTime%2A> 메서드는 양력 날짜를 현재 달력에서 날짜를 변환할 수 때문에 유용 합니다. 양력 날짜 이후에 데 사용할 수, 예를 들어 특정 달력에서 동일한 날짜를 만들거나 다양 한 달력의 날짜와 비교 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.ToDateTime%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, <paramref name="millisecond" /> 또는 <paramref name="era" />가 이 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.PersianCalendar.PersianEra" />
        <altmember cref="P:System.Globalization.PersianCalendar.Eras" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="persianCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">변환할 연도를 나타내는 정수입니다(1 ~ 9378).</param>
        <summary>지정된 연도를 네 자릿수 연도로 변환합니다.</summary>
        <returns>
          <paramref name="year" />를 네 자릿수로 표시하는 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 `year` 매개 변수를 사용 하 여 4 자리 연도 표현에서 <xref:System.Globalization.PersianCalendar.TwoDigitYearMax%2A> 속성입니다. 반환 값은 두 자리 연도를 네 자리 연도 변환할 수 있는 100 년 범위의 상한입니다. 예를 들어 100 년 범위의 2019 1930 인 경우 다음 두 자리 값이 30 해석 됩니다 1930 두 자리 값은 29 2029로 해석 됩니다.  
  
 <xref:System.Globalization.PersianCalendar.ToFourDigitYear%2A> 두 자리 연도 또는 네 자리 연도 지원합니다. 두 자리 연도 값 (100 미만)를 전달 하면이 메서드는 값에 따라 네 자릿수 값을 변환 하는 <xref:System.Globalization.PersianCalendar.TwoDigitYearMax%2A> 적절 한 네 자리 연도 나타내는 값입니다. 응용 프로그램에서 지원 되는 달력 사이의 범위 내에 있는 네 자리 연도 값을 제공 하는 경우 <xref:System.Globalization.PersianCalendar.ToFourDigitYear%2A>, 메서드는 실제 입력된 값을 반환 합니다. 지원 되는 달력 범위 밖에 있는 4 자리 값을 제공 하는 응용 프로그램 또는 음수 값을 제공 하는 경우 메서드는 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.ToFourDigitYear%2A> 메서드.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />가 0보다 작거나 9378보다 큽니다.</exception>
        <altmember cref="P:System.Globalization.PersianCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.PersianCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.PersianCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도를 가져오거나 설정합니다.</summary>
        <value>두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 2 자리 연도를를 4 자리 연도 변환할 수 있습니다. 예를 들어이 속성을 2029로 설정 하는 경우는 100 년 간의 범위는 1930에서 2029 합니다. 따라서 30의 2 자리 숫자 값 2 자리 값은 29 2029로 해석 됩니다 1930으로 해석 됩니다.  
  
 이 속성의 초기 값은 제어판에서 국가 및 언어 옵션의 설정에서 파생 됩니다. 그러나 해당 정보의 수명 동안 변경할 수는 <xref:System.AppDomain>합니다. <xref:System.Globalization.PersianCalendar> 클래스 시스템 설정의 변경 내용을 검색 하지 않는 자동으로 합니다. 달력 국가 및 언어 옵션에서 지원 되지 않으면,이 속성의 초기 값은 달력 클래스에 의해 정의 된 기본값으로 값입니다.  
  
 응용 프로그램을 99 2 자리 연도 문자 그대로 해석 되도록 임을 나타내려면이 값을 설정 해야 합니다. 예를 들어이 속성이 99, 100 년 간의 범위는 0 (아닙니다: 대부분의 달력에 대 한 유효한 값)에서 99 사이로. 따라서 30의 2 자리 숫자 값은 30로 해석 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Globalization.PersianCalendar.TwoDigitYearMax%2A> 속성입니다.  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 달력이 읽기 전용인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값이 100보다 작거나 9378보다 큰 경우</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>