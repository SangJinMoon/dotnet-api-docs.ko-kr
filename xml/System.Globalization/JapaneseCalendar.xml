<Type Name="JapaneseCalendar" FullName="System.Globalization.JapaneseCalendar">
  <TypeSignature Language="C#" Value="public class JapaneseCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JapaneseCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.JapaneseCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class JapaneseCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class JapaneseCalendar : System::Globalization::Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fc15a-101">일본식 달력을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-101">Represents the Japanese calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-102">똑같습니다 달력 이라고 일본식 달력 연도 및 연대의 서로 제외 하 고 그레고리오 력 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-102">The Japanese calendar, which is also known as the Wareki calendar, works exactly like the Gregorian calendar, except that the year and era are different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc15a-103">사용 하는 방법에 대 한 내용은 <xref:System.Globalization.JapaneseCalendar> 클래스 오류 코드 및 기타 달력.NET Framework의 클래스를 참조 하십시오 [달력 작업](~/docs/standard/datetime/working-with-calendars.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-103">For information about using the <xref:System.Globalization.JapaneseCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="fc15a-104">일본식 달력 마다 고유한 통치 연대를 인식합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-104">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="fc15a-105">현재 연대 그레고리오력의 1989 년부터 시작 되는 헤이세이 기원이입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-105">The current era is the Heisei era, which began in the Gregorian calendar year 1989.</span></span> <span data-ttu-id="fc15a-106">연대 이름이 년 이전에 일반적으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-106">The era name is typically displayed before the year.</span></span> <span data-ttu-id="fc15a-107">예를 들어 그레고리오 력 2001 년 일본식 달력 연도 헤이세이 13입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-107">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="fc15a-108">첫 번째는 년 "넨" 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-108">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="fc15a-109">따라서 1989 그레고리오 력 연도 일본식 달력 연도 헤이세이 넨 이었습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-109">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span>  
  
 <span data-ttu-id="fc15a-110">이 클래스는 다음과 같이 연대를 숫자 할당:</span><span class="sxs-lookup"><span data-stu-id="fc15a-110">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="fc15a-111">GetEra 값</span><span class="sxs-lookup"><span data-stu-id="fc15a-111">GetEra value</span></span>|<span data-ttu-id="fc15a-112">연대 이름</span><span class="sxs-lookup"><span data-stu-id="fc15a-112">Era Name</span></span>|<span data-ttu-id="fc15a-113">연대 약어</span><span class="sxs-lookup"><span data-stu-id="fc15a-113">Era Abbreviation</span></span>|<span data-ttu-id="fc15a-114">양력 날짜</span><span class="sxs-lookup"><span data-stu-id="fc15a-114">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="fc15a-115">4</span><span class="sxs-lookup"><span data-stu-id="fc15a-115">4</span></span>|<span data-ttu-id="fc15a-116">平成 (헤이세이)</span><span class="sxs-lookup"><span data-stu-id="fc15a-116">平成 (Heisei)</span></span>|<span data-ttu-id="fc15a-117">平 (H, h)</span><span class="sxs-lookup"><span data-stu-id="fc15a-117">平 (H, h)</span></span>|<span data-ttu-id="fc15a-118">표시 하도록 1989 년 1 월 8,</span><span class="sxs-lookup"><span data-stu-id="fc15a-118">January 8, 1989 to present</span></span>|  
|<span data-ttu-id="fc15a-119">3</span><span class="sxs-lookup"><span data-stu-id="fc15a-119">3</span></span>|<span data-ttu-id="fc15a-120">昭和 (쇼프레젠테이션에서)</span><span class="sxs-lookup"><span data-stu-id="fc15a-120">昭和 (Showa)</span></span>|<span data-ttu-id="fc15a-121">昭 (S, s)</span><span class="sxs-lookup"><span data-stu-id="fc15a-121">昭 (S, s)</span></span>|<span data-ttu-id="fc15a-122">1926 년 12 월 25, 1989 년 1 월 7</span><span class="sxs-lookup"><span data-stu-id="fc15a-122">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="fc15a-123">2</span><span class="sxs-lookup"><span data-stu-id="fc15a-123">2</span></span>|<span data-ttu-id="fc15a-124">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="fc15a-124">大正 (Taisho)</span></span>|<span data-ttu-id="fc15a-125">大 (T, t)</span><span class="sxs-lookup"><span data-stu-id="fc15a-125">大 (T, t)</span></span>|<span data-ttu-id="fc15a-126">1912 년 7 월 30, 1926 년 12 월 24,</span><span class="sxs-lookup"><span data-stu-id="fc15a-126">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="fc15a-127">1</span><span class="sxs-lookup"><span data-stu-id="fc15a-127">1</span></span>|<span data-ttu-id="fc15a-128">明治 (메이지)</span><span class="sxs-lookup"><span data-stu-id="fc15a-128">明治 (Meiji)</span></span>|<span data-ttu-id="fc15a-129">明 (M, m)</span><span class="sxs-lookup"><span data-stu-id="fc15a-129">明 (M, m)</span></span>|<span data-ttu-id="fc15a-130">1868, 1912 년 7 월 29 일까 지 년 9 월 8 일</span><span class="sxs-lookup"><span data-stu-id="fc15a-130">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="fc15a-131">이 클래스는 일반 달력 1868 9 월 8 일) (의 메이지 1 년 9 월 8에서 날짜를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-131">This class handles dates from September 8 in the year Meiji 1 (in the Gregorian calendar, September 8, 1868).</span></span> <span data-ttu-id="fc15a-132">일본식 달력 전환 되었지만 음력 달력에서 양력으로 연도 메이지 6 (그레고리오 력 1873)에 있지만이 구현 양력만을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-132">Although the Japanese calendar was switched from a lunar calendar to a solar calendar in the year Meiji 6 (1873 of the Gregorian calendar), this implementation is based on the solar calendar only.</span></span>  
  
 <span data-ttu-id="fc15a-133">일본식 달력의 윤년 일반 달력의 같은 윤년에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-133">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="fc15a-134">일반 달력의 윤년 4로 100 그레고리오 력 연도 균등 하 게 나눌 수로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-134">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="fc15a-135">그러나 있는 양력 연도 400으로 나눌 수는 윤년 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-135">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="fc15a-136">평년은 365 일이 고 윤년 수는 366 일입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-136">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="fc15a-137">일본식 달력 28에서 31 일 12 개월 내에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-137">The Japanese calendar has 12 months with 28 to 31 days each:</span></span>  
  
|<span data-ttu-id="fc15a-138">GetMonth 값</span><span class="sxs-lookup"><span data-stu-id="fc15a-138">GetMonth value</span></span>|<span data-ttu-id="fc15a-139">월</span><span class="sxs-lookup"><span data-stu-id="fc15a-139">Month</span></span>|<span data-ttu-id="fc15a-140">영어</span><span class="sxs-lookup"><span data-stu-id="fc15a-140">English</span></span>|<span data-ttu-id="fc15a-141">에서 일 수</span><span class="sxs-lookup"><span data-stu-id="fc15a-141">Days in common years</span></span>|<span data-ttu-id="fc15a-142">윤년의 날짜</span><span class="sxs-lookup"><span data-stu-id="fc15a-142">Days in leap years</span></span>|  
|--------------------|-----------|-------------|--------------------------|------------------------|  
|<span data-ttu-id="fc15a-143">1</span><span class="sxs-lookup"><span data-stu-id="fc15a-143">1</span></span>|<span data-ttu-id="fc15a-144">1 月 (이치)</span><span class="sxs-lookup"><span data-stu-id="fc15a-144">1月 (Ichigatsu)</span></span>|<span data-ttu-id="fc15a-145">1 월</span><span class="sxs-lookup"><span data-stu-id="fc15a-145">January</span></span>|<span data-ttu-id="fc15a-146">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-146">31</span></span>|<span data-ttu-id="fc15a-147">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-147">31</span></span>|  
|<span data-ttu-id="fc15a-148">2</span><span class="sxs-lookup"><span data-stu-id="fc15a-148">2</span></span>|<span data-ttu-id="fc15a-149">2 月 (츠)</span><span class="sxs-lookup"><span data-stu-id="fc15a-149">2月 (Nigatsu)</span></span>|<span data-ttu-id="fc15a-150">2 월</span><span class="sxs-lookup"><span data-stu-id="fc15a-150">February</span></span>|<span data-ttu-id="fc15a-151">28</span><span class="sxs-lookup"><span data-stu-id="fc15a-151">28</span></span>|<span data-ttu-id="fc15a-152">29</span><span class="sxs-lookup"><span data-stu-id="fc15a-152">29</span></span>|  
|<span data-ttu-id="fc15a-153">3</span><span class="sxs-lookup"><span data-stu-id="fc15a-153">3</span></span>|<span data-ttu-id="fc15a-154">3 月 (Sangatsu)</span><span class="sxs-lookup"><span data-stu-id="fc15a-154">3月 (Sangatsu)</span></span>|<span data-ttu-id="fc15a-155">3 월</span><span class="sxs-lookup"><span data-stu-id="fc15a-155">March</span></span>|<span data-ttu-id="fc15a-156">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-156">31</span></span>|<span data-ttu-id="fc15a-157">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-157">31</span></span>|  
|<span data-ttu-id="fc15a-158">4</span><span class="sxs-lookup"><span data-stu-id="fc15a-158">4</span></span>|<span data-ttu-id="fc15a-159">4 月 (날짜)</span><span class="sxs-lookup"><span data-stu-id="fc15a-159">4月 (Shigatsu)</span></span>|<span data-ttu-id="fc15a-160">4 월</span><span class="sxs-lookup"><span data-stu-id="fc15a-160">April</span></span>|<span data-ttu-id="fc15a-161">30</span><span class="sxs-lookup"><span data-stu-id="fc15a-161">30</span></span>|<span data-ttu-id="fc15a-162">30</span><span class="sxs-lookup"><span data-stu-id="fc15a-162">30</span></span>|  
|<span data-ttu-id="fc15a-163">5</span><span class="sxs-lookup"><span data-stu-id="fc15a-163">5</span></span>|<span data-ttu-id="fc15a-164">5月 (Gogatsu)</span><span class="sxs-lookup"><span data-stu-id="fc15a-164">5月 (Gogatsu)</span></span>|<span data-ttu-id="fc15a-165">년 5 월</span><span class="sxs-lookup"><span data-stu-id="fc15a-165">May</span></span>|<span data-ttu-id="fc15a-166">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-166">31</span></span>|<span data-ttu-id="fc15a-167">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-167">31</span></span>|  
|<span data-ttu-id="fc15a-168">6</span><span class="sxs-lookup"><span data-stu-id="fc15a-168">6</span></span>|<span data-ttu-id="fc15a-169">6月 (Rokugatsu)</span><span class="sxs-lookup"><span data-stu-id="fc15a-169">6月 (Rokugatsu)</span></span>|<span data-ttu-id="fc15a-170">June</span><span class="sxs-lookup"><span data-stu-id="fc15a-170">June</span></span>|<span data-ttu-id="fc15a-171">30</span><span class="sxs-lookup"><span data-stu-id="fc15a-171">30</span></span>|<span data-ttu-id="fc15a-172">30</span><span class="sxs-lookup"><span data-stu-id="fc15a-172">30</span></span>|  
|<span data-ttu-id="fc15a-173">7</span><span class="sxs-lookup"><span data-stu-id="fc15a-173">7</span></span>|<span data-ttu-id="fc15a-174">7月 (Shichigatsu)</span><span class="sxs-lookup"><span data-stu-id="fc15a-174">7月 (Shichigatsu)</span></span>|<span data-ttu-id="fc15a-175">7 월</span><span class="sxs-lookup"><span data-stu-id="fc15a-175">July</span></span>|<span data-ttu-id="fc15a-176">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-176">31</span></span>|<span data-ttu-id="fc15a-177">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-177">31</span></span>|  
|<span data-ttu-id="fc15a-178">8</span><span class="sxs-lookup"><span data-stu-id="fc15a-178">8</span></span>|<span data-ttu-id="fc15a-179">8 月 (Hachigatsu)</span><span class="sxs-lookup"><span data-stu-id="fc15a-179">8月 (Hachigatsu)</span></span>|<span data-ttu-id="fc15a-180">8 월</span><span class="sxs-lookup"><span data-stu-id="fc15a-180">August</span></span>|<span data-ttu-id="fc15a-181">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-181">31</span></span>|<span data-ttu-id="fc15a-182">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-182">31</span></span>|  
|<span data-ttu-id="fc15a-183">10</span><span class="sxs-lookup"><span data-stu-id="fc15a-183">9</span></span>|<span data-ttu-id="fc15a-184">9 月 (Kugatsu)</span><span class="sxs-lookup"><span data-stu-id="fc15a-184">9月 (Kugatsu)</span></span>|<span data-ttu-id="fc15a-185">9 월</span><span class="sxs-lookup"><span data-stu-id="fc15a-185">September</span></span>|<span data-ttu-id="fc15a-186">30</span><span class="sxs-lookup"><span data-stu-id="fc15a-186">30</span></span>|<span data-ttu-id="fc15a-187">30</span><span class="sxs-lookup"><span data-stu-id="fc15a-187">30</span></span>|  
|<span data-ttu-id="fc15a-188">10</span><span class="sxs-lookup"><span data-stu-id="fc15a-188">10</span></span>|<span data-ttu-id="fc15a-189">10 月 (츠)</span><span class="sxs-lookup"><span data-stu-id="fc15a-189">10月 (Juugatsu)</span></span>|<span data-ttu-id="fc15a-190">10 월</span><span class="sxs-lookup"><span data-stu-id="fc15a-190">October</span></span>|<span data-ttu-id="fc15a-191">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-191">31</span></span>|<span data-ttu-id="fc15a-192">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-192">31</span></span>|  
|<span data-ttu-id="fc15a-193">11</span><span class="sxs-lookup"><span data-stu-id="fc15a-193">11</span></span>|<span data-ttu-id="fc15a-194">11 月 (Juuichigatsu)</span><span class="sxs-lookup"><span data-stu-id="fc15a-194">11月 (Juuichigatsu)</span></span>|<span data-ttu-id="fc15a-195">11 월</span><span class="sxs-lookup"><span data-stu-id="fc15a-195">November</span></span>|<span data-ttu-id="fc15a-196">30</span><span class="sxs-lookup"><span data-stu-id="fc15a-196">30</span></span>|<span data-ttu-id="fc15a-197">30</span><span class="sxs-lookup"><span data-stu-id="fc15a-197">30</span></span>|  
|<span data-ttu-id="fc15a-198">12</span><span class="sxs-lookup"><span data-stu-id="fc15a-198">12</span></span>|<span data-ttu-id="fc15a-199">12 月 (Juunigatsu)</span><span class="sxs-lookup"><span data-stu-id="fc15a-199">12月 (Juunigatsu)</span></span>|<span data-ttu-id="fc15a-200">12 월</span><span class="sxs-lookup"><span data-stu-id="fc15a-200">December</span></span>|<span data-ttu-id="fc15a-201">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-201">31</span></span>|<span data-ttu-id="fc15a-202">31</span><span class="sxs-lookup"><span data-stu-id="fc15a-202">31</span></span>|  
  
 <span data-ttu-id="fc15a-203">2 월의 일반 달력 월에 해당 하는 츠에 윤년 29 일 및 평년 28 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-203">Nigatsu, which is equivalent to the Gregorian calendar month of February, has 29 days during leap years and 28 during common years.</span></span>  
  
 <span data-ttu-id="fc15a-204">A.d. 2001 년 1 월 1 일</span><span class="sxs-lookup"><span data-stu-id="fc15a-204">The date January 1, 2001 A.D.</span></span> <span data-ttu-id="fc15a-205">일반 달력에서은 일본식 달력의 연간 헤이세이 13 이치의 첫 번째 날에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-205">in the Gregorian calendar is equivalent to the first day of Ichigatsu in the year Heisei 13 in the Japanese calendar.</span></span>  
  
 <span data-ttu-id="fc15a-206">응용 프로그램을 사용 하는 경우는 <xref:System.Globalization.JapaneseCalendar> 클래스 <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> 연도 앞의 연대 약어를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-206">If the application is using the <xref:System.Globalization.JapaneseCalendar> class, <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> recognizes the era abbreviations in front of the year.</span></span> <span data-ttu-id="fc15a-207">약어는 라틴 알파벳 대/소문자 구분 하는 단일 문자 약어 이거나 단일 문자 간지 약어입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-207">The abbreviation is either the single-character case-insensitive Latin alphabet abbreviation or the single-character Kanji abbreviation.</span></span>  
  
 <span data-ttu-id="fc15a-208">각 <xref:System.Globalization.CultureInfo> 개체가 집합 일정을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-208">Each <xref:System.Globalization.CultureInfo> object supports a set of calendars.</span></span> <span data-ttu-id="fc15a-209"><xref:System.Globalization.CultureInfo.Calendar%2A> 문화권에 대 한 기본 일정을 반환 하는 속성 및 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> 속성 문화권에서 지원 되는 모든 달력을 포함 하는 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-209">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="fc15a-210">사용 하는 달력을 변경 하려면는 <xref:System.Globalization.CultureInfo>, 응용 프로그램 설정 해야는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 새 <xref:System.Globalization.Calendar>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-210">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JapaneseCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JapaneseCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc15a-211"><see cref="T:System.Globalization.JapaneseCalendar" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-211">Initializes a new instance of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeInitializationException"><span data-ttu-id="fc15a-212">누락된 문화권 정보가 있어 <see cref="T:System.Globalization.JapaneseCalendar" /> 개체를 초기화할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-212">Unable to initialize a <see cref="T:System.Globalization.JapaneseCalendar" /> object because of missing culture information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="fc15a-213">월을 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-213">The <see cref="T:System.DateTime" /> to which to add months.</span></span></param>
        <param name="months"><span data-ttu-id="fc15a-214">더할 월 수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-214">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="fc15a-215">지정된 <see cref="T:System.DateTime" />에서 지정된 월 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-215">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="fc15a-216">지정된 <see cref="T:System.DateTime" />에 지정된 월 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-216">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-217">결과의 날짜 부분 <xref:System.DateTime> 결과 일 결과 결과 연도의 월에 유효한 날짜가 아닌 경우 영향을 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-217">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="fc15a-218">결과 결과 연도의 월에 유효 마지막 날짜로 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-218">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="fc15a-219">결과의 연도 부분 <xref:System.DateTime> 결과 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-219">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="fc15a-220">결과의 연대 부분이 <xref:System.DateTime> 에 영향을의 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-220">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="fc15a-221">결과 시간 부분은 <xref:System.DateTime> 지정 된 동일 하 게 유지 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-221">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="fc15a-222">예를 들어 지정된 된 월 31 일에, 츠 (10 월)이 지정 된 일 그 달의 31 일이 고 `months` 이 6 이면이 하나 결과 월의 날짜 (년 4 월) 및 결과 일이 지정 된 연도의 더 날짜의 마지막 날인 30 일이입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-222">For example, if the specified month is Juugatsu (October), which has 31 days, the specified day is the 31st day of that month, and `months` is 6, the resulting year is one more than the specified year, the resulting month is Shigatsu (April), and the resulting day is the 30th day, which is the last day in Shigatsu (April).</span></span>  
  
 <span data-ttu-id="fc15a-223">경우 `months` 가 음수 이면 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-223">If `months` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="fc15a-224"><xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-224">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fc15a-225">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성은 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-225">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-226">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 일본식 달력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-226">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fc15a-227">결과 <see cref="T:System.DateTime" />이 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-227">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-228"><paramref name="months" />가 -120000보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-228"><paramref name="months" /> is less than -120000.</span></span>  
  
 <span data-ttu-id="fc15a-229">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-229">-or-</span></span>  
  
 <span data-ttu-id="fc15a-230"><paramref name="months" />가 120000보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-230"><paramref name="months" /> is greater than 120000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="fc15a-231">연도를 더할 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-231">The <see cref="T:System.DateTime" /> to which to add years.</span></span></param>
        <param name="years"><span data-ttu-id="fc15a-232">더할 연도 수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-232">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="fc15a-233">지정된 <see cref="T:System.DateTime" />에서 지정된 연도 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-233">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="fc15a-234">지정된 <see cref="T:System.DateTime" />에 지정된 연도 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-234">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-235">결과의 날짜 부분 <xref:System.DateTime> 결과 일 결과 결과 연도의 월에 유효한 날짜가 아닌 경우 영향을 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-235">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="fc15a-236">결과 결과 연도의 월에 유효 마지막 날짜로 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-236">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="fc15a-237">결과의 월 부분 <xref:System.DateTime> 지정 된 동일 하 게 유지 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-237">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="fc15a-238">결과의 연대 부분이 <xref:System.DateTime> 에 영향을의 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-238">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="fc15a-239">결과 시간 부분은 <xref:System.DateTime> 지정 된 동일 하 게 유지 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-239">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="fc15a-240">예를 들어, (2 월) 츠 29 일 할당 했을 때 윤년 28 일에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-240">For example, Nigatsu (February) has 28 days except during leap years when it has 29 days.</span></span> <span data-ttu-id="fc15a-241">지정된 된 날짜 (2 월) 츠 29 번째 날의 값과 윤년에 경우 `years` 1 이면 결과 날짜에는 다음 연도 츠 (2 월)의 28 번째 날 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-241">If the specified date is the 29th day of Nigatsu (February) in a leap year and the value of `years` is 1, the resulting date will be the 28th day of Nigatsu (February) in the following year.</span></span>  
  
 <span data-ttu-id="fc15a-242">경우 `years` 가 음수 이면 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-242">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="fc15a-243"><xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-243">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fc15a-244">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성은 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-244">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-245">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 일본식 달력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-245">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fc15a-246">결과 <see cref="T:System.DateTime" />이 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-246">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-247"><paramref name="time" />이 <see cref="T:System.Globalization.JapaneseCalendar" /> 형식에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-247"><paramref name="time" /> is outside the supported range of the <see cref="T:System.Globalization.JapaneseCalendar" /> type.</span></span>  
  
 <span data-ttu-id="fc15a-248">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-248">-or-</span></span>  
  
 <span data-ttu-id="fc15a-249"><paramref name="years" />가 -10,000보다 작거나 10,000보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-249"><paramref name="years" /> is less than -10,000 or greater than 10,000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc15a-250">현재 달력이 양력인지, 음력인지 또는 두 가지를 조합한 것인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-250">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="fc15a-251">항상 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-251">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc15a-252">다음 예제에서는 리플렉션을 사용 하 여 각각 인스턴스화하 <xref:System.Globalization.Calendar> 형식 및.NET Framework에서 발견 된 값을 표시 해당 <xref:System.Globalization.Calendar.AlgorithmType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-252">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc15a-253"><see cref="T:System.Globalization.JapaneseCalendar" />에 있는 연대의 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-253">Gets the list of eras in the <see cref="T:System.Globalization.JapaneseCalendar" />.</span></span></summary>
        <value><span data-ttu-id="fc15a-254"><see cref="T:System.Globalization.JapaneseCalendar" />에 있는 연대를 나타내는 정수의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-254">An array of integers that represents the eras in the <see cref="T:System.Globalization.JapaneseCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-255">일본식 달력 마다 고유한 통치 연대를 인식합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-255">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="fc15a-256">현재 연대 그레고리오력의 1989 년부터 시작 되는 헤이세이 기원이입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-256">The current era is the Heisei era, which began in the Gregorian calendar year 1989.</span></span> <span data-ttu-id="fc15a-257">연대 이름이 년 이전에 일반적으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-257">The era name is typically displayed before the year.</span></span> <span data-ttu-id="fc15a-258">예를 들어 그레고리오 력 2001 년 일본식 달력 연도 헤이세이 13입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-258">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="fc15a-259">첫 번째는 년 "넨" 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-259">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="fc15a-260">따라서 1989 그레고리오 력 연도 일본식 달력 연도 헤이세이 넨 이었습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-260">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span>  
  
 <span data-ttu-id="fc15a-261">이 클래스는 다음과 같이 연대를 숫자 할당:</span><span class="sxs-lookup"><span data-stu-id="fc15a-261">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="fc15a-262">GetEra 값</span><span class="sxs-lookup"><span data-stu-id="fc15a-262">GetEra value</span></span>|<span data-ttu-id="fc15a-263">연대 이름</span><span class="sxs-lookup"><span data-stu-id="fc15a-263">Era Name</span></span>|<span data-ttu-id="fc15a-264">연대 약어</span><span class="sxs-lookup"><span data-stu-id="fc15a-264">Era Abbreviation</span></span>|<span data-ttu-id="fc15a-265">양력 날짜</span><span class="sxs-lookup"><span data-stu-id="fc15a-265">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="fc15a-266">4</span><span class="sxs-lookup"><span data-stu-id="fc15a-266">4</span></span>|<span data-ttu-id="fc15a-267">平成 (헤이세이)</span><span class="sxs-lookup"><span data-stu-id="fc15a-267">平成 (Heisei)</span></span>|<span data-ttu-id="fc15a-268">平 (H, h)</span><span class="sxs-lookup"><span data-stu-id="fc15a-268">平 (H, h)</span></span>|<span data-ttu-id="fc15a-269">표시 하도록 1989 년 1 월 8,</span><span class="sxs-lookup"><span data-stu-id="fc15a-269">January 8, 1989 to present</span></span>|  
|<span data-ttu-id="fc15a-270">3</span><span class="sxs-lookup"><span data-stu-id="fc15a-270">3</span></span>|<span data-ttu-id="fc15a-271">昭和 (쇼프레젠테이션에서)</span><span class="sxs-lookup"><span data-stu-id="fc15a-271">昭和 (Showa)</span></span>|<span data-ttu-id="fc15a-272">昭 (S, s)</span><span class="sxs-lookup"><span data-stu-id="fc15a-272">昭 (S, s)</span></span>|<span data-ttu-id="fc15a-273">1926 년 12 월 25, 1989 년 1 월 7</span><span class="sxs-lookup"><span data-stu-id="fc15a-273">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="fc15a-274">2</span><span class="sxs-lookup"><span data-stu-id="fc15a-274">2</span></span>|<span data-ttu-id="fc15a-275">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="fc15a-275">大正 (Taisho)</span></span>|<span data-ttu-id="fc15a-276">大 (T, t)</span><span class="sxs-lookup"><span data-stu-id="fc15a-276">大 (T, t)</span></span>|<span data-ttu-id="fc15a-277">1912 년 7 월 30, 1926 년 12 월 24,</span><span class="sxs-lookup"><span data-stu-id="fc15a-277">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="fc15a-278">1</span><span class="sxs-lookup"><span data-stu-id="fc15a-278">1</span></span>|<span data-ttu-id="fc15a-279">明治 (메이지)</span><span class="sxs-lookup"><span data-stu-id="fc15a-279">明治 (Meiji)</span></span>|<span data-ttu-id="fc15a-280">明 (M, m)</span><span class="sxs-lookup"><span data-stu-id="fc15a-280">明 (M, m)</span></span>|<span data-ttu-id="fc15a-281">1868, 1912 년 7 월 29 일까 지 년 9 월 8 일</span><span class="sxs-lookup"><span data-stu-id="fc15a-281">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="fc15a-282">이 클래스는 메이지 1 (그레고리오 력 1868 년 1 월 1 일) 년에서 9 월 8에서 날짜를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-282">This class handles dates from September 8 in the year Meiji 1 (January 1, 1868 of the Gregorian calendar).</span></span> <span data-ttu-id="fc15a-283">일본식 달력 전환 되었지만 음력 달력에서 양력으로 연도 메이지 6 (그레고리오 력 1873)에 있지만이 구현 양력만을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-283">Although the Japanese calendar was switched from a lunar calendar to a solar calendar in the year Meiji 6 (1873 of the Gregorian calendar), this implementation is based on the solar calendar only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc15a-284">추가 연대를 추가 하도록 나중에 응용 프로그램은 일본식 달력에 대 한 예상 되는 4 개 연대 이상 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-284">Should additional eras be added in the future, applications may encounter more than the expected four eras for the Japanese calendar.</span></span> <span data-ttu-id="fc15a-285">이러한 이벤트;에서 작업을 계속 하도록 하려면 응용 프로그램을 테스트 해야 참조 [연대 일본식 달력에 대 한 처리](http://go.microsoft.com/fwlink/p/?LinkId=239618)합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-285">Applications should be tested to ensure that they continue to work in such an event; see [Era Handling for the Japanese Calendar](http://go.microsoft.com/fwlink/p/?LinkId=239618).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-286">에 포함 된 값을 표시 하는 다음 예제는 <xref:System.Globalization.JapaneseCalendar.Eras%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-286">The following example displays the values contained in the <xref:System.Globalization.JapaneseCalendar.Eras%2A> property.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CPP/yslin_japanesecalendar_eras.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CS/yslin_japanesecalendar_eras.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/VB/yslin_japanesecalendar_eras.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="fc15a-287">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-287">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="fc15a-288">지정된 <see cref="T:System.DateTime" />의 날짜(월 기준)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-288">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="fc15a-289">지정된 <see cref="T:System.DateTime" />의 날짜(월 기준)를 나타내는 1에서 31 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-289">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc15a-290">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 일본식 달력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-290">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="fc15a-291">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-291">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="fc15a-292">지정된 <see cref="T:System.DateTime" />의 요일을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-292">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="fc15a-293">지정된 <see cref="T:System.DayOfWeek" />의 요일을 나타내는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-293">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-294"><xref:System.DayOfWeek> 값은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-294">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="fc15a-295">DayOfWeek 값</span><span class="sxs-lookup"><span data-stu-id="fc15a-295">DayOfWeek value</span></span>|<span data-ttu-id="fc15a-296">나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-296">which indicates</span></span>|  
|---------------------|---------------------|  
|<span data-ttu-id="fc15a-297">일요일</span><span class="sxs-lookup"><span data-stu-id="fc15a-297">Sunday</span></span>|<span data-ttu-id="fc15a-298">日曜日 (Nichiyoubi)</span><span class="sxs-lookup"><span data-stu-id="fc15a-298">日曜日 (Nichiyoubi)</span></span>|  
|<span data-ttu-id="fc15a-299">월요일</span><span class="sxs-lookup"><span data-stu-id="fc15a-299">Monday</span></span>|<span data-ttu-id="fc15a-300">月曜日 (Getsuyoubi)</span><span class="sxs-lookup"><span data-stu-id="fc15a-300">月曜日 (Getsuyoubi)</span></span>|  
|<span data-ttu-id="fc15a-301">화요일</span><span class="sxs-lookup"><span data-stu-id="fc15a-301">Tuesday</span></span>|<span data-ttu-id="fc15a-302">火曜日 (Kayoubi)</span><span class="sxs-lookup"><span data-stu-id="fc15a-302">火曜日 (Kayoubi)</span></span>|  
|<span data-ttu-id="fc15a-303">수요일</span><span class="sxs-lookup"><span data-stu-id="fc15a-303">Wednesday</span></span>|<span data-ttu-id="fc15a-304">水曜日 (Suiyoubi)</span><span class="sxs-lookup"><span data-stu-id="fc15a-304">水曜日 (Suiyoubi)</span></span>|  
|<span data-ttu-id="fc15a-305">목요일</span><span class="sxs-lookup"><span data-stu-id="fc15a-305">Thursday</span></span>|<span data-ttu-id="fc15a-306">木曜日 (Mokuyoubi)</span><span class="sxs-lookup"><span data-stu-id="fc15a-306">木曜日 (Mokuyoubi)</span></span>|  
|<span data-ttu-id="fc15a-307">금요일</span><span class="sxs-lookup"><span data-stu-id="fc15a-307">Friday</span></span>|<span data-ttu-id="fc15a-308">金曜日 (Kinyoubi)</span><span class="sxs-lookup"><span data-stu-id="fc15a-308">金曜日 (Kinyoubi)</span></span>|  
|<span data-ttu-id="fc15a-309">토요일</span><span class="sxs-lookup"><span data-stu-id="fc15a-309">Saturday</span></span>|<span data-ttu-id="fc15a-310">土曜日 (Doyoubi)</span><span class="sxs-lookup"><span data-stu-id="fc15a-310">土曜日 (Doyoubi)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-311">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 일본식 달력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-311">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="fc15a-312">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-312">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="fc15a-313">지정된 <see cref="T:System.DateTime" />의 날짜(연도 기준)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-313">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="fc15a-314">지정된 <see cref="T:System.DateTime" />의 날짜(연도 기준)를 나타내는 1에서 366 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-314">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-315">날짜의 해당 연도의 첫 번째 날부터의 일 수로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-315">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="fc15a-316">예를 들어 <xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A> , 1을 반환 하는 첫 번째 월의 첫 번째 날에 대 한 및 <xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A> 마지막의 마지막 날에 대 한 달 값은 해당 연도의 총 일 수를 반환에서 반환한 <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-316">For example, <xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value as that returned by <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-317">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 일본식 달력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-317">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="fc15a-318">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-318">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="fc15a-319">월을 나타내는 1에서 12 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-319">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="fc15a-320">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-320">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="fc15a-321">지정된 연대의 지정된 연도에 있는 지정된 월의 날짜 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-321">Returns the number of days in the specified month in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="fc15a-322">지정된 연대의 지정된 연도에 있는 지정된 월의 날짜 수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-322">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-323">예를 들어이 메서드 28 이나 29 그레고리오력에서 (2 월, `month` = 2) 인지 여부에 따라 `year` 윤년 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-323">For example, this method returns 28 or 29 for Nigatsu (February, `month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-324">다음 코드 예제에서는 <xref:System.Globalization.JapaneseCalendar.GetDaysInMonth%2A> 각 5 년에는 각 연대에서 두 번째 달에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-324">The following code example calls <xref:System.Globalization.JapaneseCalendar.GetDaysInMonth%2A> for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/CPP/japanesecalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/CS/japanesecalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/VB/japanesecalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-325"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-325"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-326">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-326">-or-</span></span>  
  
 <span data-ttu-id="fc15a-327"><paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-327"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-328">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-328">-or-</span></span>  
  
 <span data-ttu-id="fc15a-329"><paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-329"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="fc15a-330">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-330">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="fc15a-331">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-331">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="fc15a-332">지정된 연대에 있는 지정된 연도의 날짜 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-332">Returns the number of days in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="fc15a-333">지정된 연대에 있는 지정된 연도의 날짜 수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-333">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-334">365 또는 여부에 따라 366이이 메서드가 반환 하는 예를 들어 `year` 윤년 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-334">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-335">다음 예제에서는 <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A> 각 연대에서 근무 연수가 5 년에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-335">The following example calls <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/CPP/japanesecalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/CS/japanesecalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/VB/japanesecalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-336"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-336"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-337">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-337">-or-</span></span>  
  
 <span data-ttu-id="fc15a-338"><paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-338"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="fc15a-339">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-339">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="fc15a-340">지정된 <see cref="T:System.DateTime" />의 연대를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-340">Returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="fc15a-341">지정된 <see cref="T:System.DateTime" />의 연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-341">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-342">일본식 달력 마다 고유한 통치 연대를 인식합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-342">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="fc15a-343">현재 연대 그레고리오력의 1989 년부터 시작 되는 헤이세이 기원이입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-343">The current era is the Heisei era, which began in the Gregorian calendar year 1989.</span></span> <span data-ttu-id="fc15a-344">연대 이름이 년 이전에 일반적으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-344">The era name is typically displayed before the year.</span></span> <span data-ttu-id="fc15a-345">예를 들어 그레고리오 력 2001 년 일본식 달력 연도 헤이세이 13입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-345">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="fc15a-346">첫 번째는 년 "넨" 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-346">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="fc15a-347">따라서 1989 그레고리오 력 연도 일본식 달력 연도 헤이세이 넨 이었습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-347">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span>  
  
 <span data-ttu-id="fc15a-348">이 클래스는 다음과 같이 연대를 숫자 할당:</span><span class="sxs-lookup"><span data-stu-id="fc15a-348">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="fc15a-349">GetEra 값</span><span class="sxs-lookup"><span data-stu-id="fc15a-349">GetEra value</span></span>|<span data-ttu-id="fc15a-350">연대 이름</span><span class="sxs-lookup"><span data-stu-id="fc15a-350">Era Name</span></span>|<span data-ttu-id="fc15a-351">연대 약어</span><span class="sxs-lookup"><span data-stu-id="fc15a-351">Era Abbreviation</span></span>|<span data-ttu-id="fc15a-352">양력 날짜</span><span class="sxs-lookup"><span data-stu-id="fc15a-352">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="fc15a-353">4</span><span class="sxs-lookup"><span data-stu-id="fc15a-353">4</span></span>|<span data-ttu-id="fc15a-354">平成 (헤이세이)</span><span class="sxs-lookup"><span data-stu-id="fc15a-354">平成 (Heisei)</span></span>|<span data-ttu-id="fc15a-355">平 (H, h)</span><span class="sxs-lookup"><span data-stu-id="fc15a-355">平 (H, h)</span></span>|<span data-ttu-id="fc15a-356">표시 하도록 1989 년 1 월 8,</span><span class="sxs-lookup"><span data-stu-id="fc15a-356">January 8, 1989 to present</span></span>|  
|<span data-ttu-id="fc15a-357">3</span><span class="sxs-lookup"><span data-stu-id="fc15a-357">3</span></span>|<span data-ttu-id="fc15a-358">昭和 (쇼프레젠테이션에서)</span><span class="sxs-lookup"><span data-stu-id="fc15a-358">昭和 (Showa)</span></span>|<span data-ttu-id="fc15a-359">昭 (S, s)</span><span class="sxs-lookup"><span data-stu-id="fc15a-359">昭 (S, s)</span></span>|<span data-ttu-id="fc15a-360">1926 년 12 월 25, 1989 년 1 월 7</span><span class="sxs-lookup"><span data-stu-id="fc15a-360">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="fc15a-361">2</span><span class="sxs-lookup"><span data-stu-id="fc15a-361">2</span></span>|<span data-ttu-id="fc15a-362">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="fc15a-362">大正 (Taisho)</span></span>|<span data-ttu-id="fc15a-363">大 (T, t)</span><span class="sxs-lookup"><span data-stu-id="fc15a-363">大 (T, t)</span></span>|<span data-ttu-id="fc15a-364">1912 년 7 월 30, 1926 년 12 월 24,</span><span class="sxs-lookup"><span data-stu-id="fc15a-364">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="fc15a-365">1</span><span class="sxs-lookup"><span data-stu-id="fc15a-365">1</span></span>|<span data-ttu-id="fc15a-366">明治 (메이지)</span><span class="sxs-lookup"><span data-stu-id="fc15a-366">明治 (Meiji)</span></span>|<span data-ttu-id="fc15a-367">明 (M, m)</span><span class="sxs-lookup"><span data-stu-id="fc15a-367">明 (M, m)</span></span>|<span data-ttu-id="fc15a-368">1868, 1912 년 7 월 29 일까 지 년 9 월 8 일</span><span class="sxs-lookup"><span data-stu-id="fc15a-368">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="fc15a-369">일반적으로 <xref:System.Globalization.JapaneseCalendar> 클래스 번째 메이지 1 (9 월 8 1868 일 일반 달력), 년에서 9 월 8에서 날짜 지원의 <xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-369">Ordinarily, the <xref:System.Globalization.JapaneseCalendar> class supports dates from September 8 in the year Meiji 1 (September 8, 1868 of the Gregorian calendar), which is the value of the <xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A> property.</span></span> <span data-ttu-id="fc15a-370">그러나는 <xref:System.Globalization.JapaneseCalendar.GetEra%2A> 메서드가 성공적으로 연대를 반환 날짜에 대 한에서 1 월 1 일까 지 메이지 1 년에서 9 월 7 (1 월 1 1868 일 일반 달력의 1868 년 9 월 7 일을 통해).</span><span class="sxs-lookup"><span data-stu-id="fc15a-370">However, the <xref:System.Globalization.JapaneseCalendar.GetEra%2A> method successfully returns the era for dates from January 1 through September 7 in the year Meiji 1 (January 1, 1868 through September 7, 1868 in the Gregorian calendar).</span></span> <span data-ttu-id="fc15a-371">일반 달력의 1868 년 1 월 1 일 이전 날짜에 대 한 메서드에서 throw 된 <xref:System.ArgumentOutOfRangeException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-371">For dates earlier than January 1, 1868 in the Gregorian calendar, the method throws an <xref:System.ArgumentOutOfRangeException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-372">여러 구성 요소 값을 표시 하는 다음 예제는 <xref:System.DateTime> 일본식 달력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-372">The following example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fc15a-373">결과 <see cref="T:System.DateTime" />이 지원되는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-373">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="fc15a-374">연도입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-374">A year.</span></span></param>
        <param name="era"><span data-ttu-id="fc15a-375">연대입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-375">An era.</span></span></param>
        <summary><span data-ttu-id="fc15a-376">지정한 연도 및 연대의 윤월을 계산합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-376">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="fc15a-377">반환 값은 <see cref="T:System.Globalization.JapaneseCalendar" /> 형식이 윤월 개념을 지원하지 않기 때문에 항상 0입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-377">The return value is always 0 because the <see cref="T:System.Globalization.JapaneseCalendar" /> type does not support the notion of a leap month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-378">윤 월의 개념을 지 원하는 일정에서 윤 월에 특정 월 또는 연도의 모든 달이 지난 후 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-378">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="fc15a-379">예를 들어는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 메서드 13 지정된 된 날짜와 관련 된 달을 나타내는 1 사이의 숫자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-379">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="fc15a-380">해당 연도의 8 및 9 번째 달을 윤 월 되어 있는 경우는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 메서드가 윤 월에 대 한 9 및 10 번째 8 월에 대 한 8을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-380">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-381"><paramref name="year" /> 또는 <paramref name="era" />가 <see cref="T:System.Globalization.JapaneseCalendar" /> 형식에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-381"><paramref name="year" /> or <paramref name="era" /> is outside the range supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="fc15a-382">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-382">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="fc15a-383">지정된 <see cref="T:System.DateTime" />의 월을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-383">Returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="fc15a-384">지정된 <see cref="T:System.DateTime" />의 월을 나타내는 1에서 12 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-384">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc15a-385">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 일본식 달력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-385">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="fc15a-386">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-386">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="fc15a-387">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-387">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="fc15a-388">지정된 연대에 있는 지정된 연도의 월 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-388">Returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="fc15a-389">반환 값은 항상 12입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-389">The return value is always 12.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc15a-390">다음 코드 예제에서는 <xref:System.Globalization.JapaneseCalendar.GetMonthsInYear%2A> 각 연대에서 근무 연수가 5 년에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-390">The following code example calls <xref:System.Globalization.JapaneseCalendar.GetMonthsInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/CPP/japanesecalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/CS/japanesecalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/VB/japanesecalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-391"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-391"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-392">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-392">-or-</span></span>  
  
 <span data-ttu-id="fc15a-393"><paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-393"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="fc15a-394">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-394">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <param name="rule"><span data-ttu-id="fc15a-395">주를 정의하는 <see cref="T:System.Globalization.CalendarWeekRule" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-395">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span></span></param>
        <param name="firstDayOfWeek"><span data-ttu-id="fc15a-396">주의 첫째 요일을 나타내는 <see cref="T:System.DayOfWeek" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-396">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span></span></param>
        <summary><span data-ttu-id="fc15a-397">지정된 <see cref="T:System.DateTime" />의 날짜가 포함된 주(연도 기준)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-397">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="fc15a-398"><paramref name="time" /> 매개 변수의 날짜가 포함된 주(연도 기준)를 나타내는 1부터 시작하는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-398">A 1-based integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-399">설정 하 여 연도에 주 수를 확인 하려면이 메서드를 사용할 수는 `time` 해당 연도의 마지막 날에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-399">This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year.</span></span>  
  
 <span data-ttu-id="fc15a-400"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성에 사용할 수 있는 culture 별 값이 포함 된 `rule` 및 `firstDayOfWeek` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-400">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters.</span></span>  
  
 <span data-ttu-id="fc15a-401"><xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> 의 속성 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 기본 포함 <xref:System.DayOfWeek> 첫 번째 날에 지정 된 달력을 사용 하 여 특정 문화권에 대 한 주를 나타내는 값의 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 의 속성 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-401">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fc15a-402"><xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> 속성 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 기본 포함 <xref:System.Globalization.CalendarWeekRule> 에 지정 된 달력을 사용 하 여 특정 문화권에 대 한 주를 정의 하는 값의 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성의 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-402">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fc15a-403">예를 들어 <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 메서드 1 월 1 일에 대 한 1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-403">For example, in <xref:System.Globalization.GregorianCalendar>, the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method for January 1 returns 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-404">다음 코드 예제와 어떻게 결과인 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 에 따라 달라 집니다는 <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> 및 <xref:System.Globalization.CalendarWeekRule> 사용 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-404">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used.</span></span> <span data-ttu-id="fc15a-405">지정된 된 날짜는 연도의 마지막 날 이면 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 해당 연도의 주 총 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-405">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-406"><paramref name="time" /> 또는 <paramref name="firstDayOfWeek" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-406"><paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-407">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-407">-or-</span></span>  
  
 <span data-ttu-id="fc15a-408"><paramref name="rule" />은 유효한 <see cref="T:System.Globalization.CalendarWeekRule" /> 값이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-408"><paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="fc15a-409">읽을 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-409">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="fc15a-410">지정된 <see cref="T:System.DateTime" />의 연도를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-410">Returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="fc15a-411">지정된 <see cref="T:System.DateTime" />의 연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-411">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc15a-412">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 일본식 달력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-412">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="fc15a-413">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-413">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="fc15a-414">월을 나타내는 1에서 12 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-414">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="fc15a-415">일을 나타내는 1에서 31 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-415">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="fc15a-416">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-416">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="fc15a-417">지정된 연대의 지정된 날짜가 윤일인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-417">Determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns>
          <span data-ttu-id="fc15a-418">지정된 날짜가 윤일이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-418"><see langword="true" />, if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-419">일본식 달력의 윤년 일반 달력의 같은 윤년에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-419">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="fc15a-420">일반 달력의 윤년 4로 100 그레고리오 력 연도 균등 하 게 나눌 수로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-420">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="fc15a-421">그러나 있는 양력 연도 400으로 나눌 수는 윤년 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-421">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="fc15a-422">평년은 365 일이 고 윤년 수는 366 일입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-422">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="fc15a-423">윤 일은 윤년에만 있는 일입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-423">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="fc15a-424">예를 들어, (2 월) 츠 29 번째 날은 유일한 윤 일입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-424">For example, the 29th day of Nigatsu (February) is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-425">다음 예제에서는 <xref:System.Globalization.JapaneseCalendar.IsLeapDay%2A> 5 년이 각 연대에서 두 번째 달 (2 월)의 마지막 날에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-425">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/CPP/japanesecalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/CS/japanesecalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/VB/japanesecalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-426"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-426"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-427">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-427">-or-</span></span>  
  
 <span data-ttu-id="fc15a-428"><paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-428"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-429">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-429">-or-</span></span>  
  
 <span data-ttu-id="fc15a-430"><paramref name="day" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-430"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-431">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-431">-or-</span></span>  
  
 <span data-ttu-id="fc15a-432"><paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-432"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="fc15a-433">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-433">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="fc15a-434">월을 나타내는 1에서 12 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-434">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="fc15a-435">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-435">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="fc15a-436">지정된 연대의 지정된 연도에 있는 지정된 월이 윤월인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-436">Determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="fc15a-437">이 메서드는 파생 클래스에서 다시 정의되지 않는 한 항상 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-437">This method always returns <see langword="false" />, unless overridden by a derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-438">일본식 달력의 윤년 일반 달력의 같은 윤년에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-438">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="fc15a-439">일반 달력의 윤년 4로 100 그레고리오 력 연도 균등 하 게 나눌 수로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-439">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="fc15a-440">그러나 있는 양력 연도 400으로 나눌 수는 윤년 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-440">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="fc15a-441">평년은 365 일이 고 윤년 수는 366 일입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-441">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="fc15a-442">윤 월은 윤년에만 있는 한 전체 월.</span><span class="sxs-lookup"><span data-stu-id="fc15a-442">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="fc15a-443">일본식 달력 윤 월 않아도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-443">The Japanese calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-444">다음 예제에서는 <xref:System.Globalization.JapaneseCalendar.IsLeapMonth%2A> 현재 연대의 근무 연수가 5 년의 모든 월에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-444">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapMonth%2A> for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/CPP/japanesecalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/CS/japanesecalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/VB/japanesecalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-445"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-445"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-446">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-446">-or-</span></span>  
  
 <span data-ttu-id="fc15a-447"><paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-447"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-448">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-448">-or-</span></span>  
  
 <span data-ttu-id="fc15a-449"><paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-449"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="fc15a-450">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-450">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="fc15a-451">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-451">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="fc15a-452">지정된 연대의 지정된 연도가 윤년인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-452">Determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns>
          <span data-ttu-id="fc15a-453">지정된 연도가 윤년이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-453"><see langword="true" />, if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-454">일본식 달력의 윤년 일반 달력의 같은 윤년에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-454">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="fc15a-455">일반 달력의 윤년 4로 100 그레고리오 력 연도 균등 하 게 나눌 수로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-455">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="fc15a-456">그러나 있는 양력 연도 400으로 나눌 수는 윤년 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-456">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="fc15a-457">평년은 365 일이 고 윤년 수는 366 일입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-457">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-458">다음 예제에서는 <xref:System.Globalization.JapaneseCalendar.IsLeapYear%2A> 각 연대에서 근무 연수가 5 년에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-458">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/CPP/japanesecalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/CS/japanesecalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/VB/japanesecalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-459"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-459"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-460">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-460">-or-</span></span>  
  
 <span data-ttu-id="fc15a-461"><paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-461"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc15a-462">현재 <see cref="T:System.Globalization.JapaneseCalendar" /> 개체에서 지원하는 마지막 날짜와 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-462">Gets the latest date and time supported by the current <see cref="T:System.Globalization.JapaneseCalendar" /> object.</span></span></summary>
        <value><span data-ttu-id="fc15a-463">날짜와 시간에서 지원 되는 <see cref="T:System.Globalization.JapaneseCalendar" /> 서 기 9999 년 12 월 31 일의 마지막 순간에 해당 하는 형식</span><span class="sxs-lookup"><span data-stu-id="fc15a-463">The latest date and time supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type, which is equivalent to the last moment of December 31, 9999 C.E.</span></span> <span data-ttu-id="fc15a-464">에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-464">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc15a-465">다음 코드 예제는 최소값이 고 달력의 최대값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-465">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CPP/japanesecalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CS/japanesecalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/VB/japanesecalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc15a-466">현재 <see cref="T:System.Globalization.JapaneseCalendar" /> 개체에서 지원하는 시작 날짜와 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-466">Gets the earliest date and time supported by the current <see cref="T:System.Globalization.JapaneseCalendar" /> object.</span></span></summary>
        <value><span data-ttu-id="fc15a-467">시작 날짜와 시간에서 지원 되는 <see cref="T:System.Globalization.JapaneseCalendar" /> C.E. 1868 년 9 월 8 일의 첫 번째 순간 형식</span><span class="sxs-lookup"><span data-stu-id="fc15a-467">The earliest date and time supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type, which is equivalent to the first moment of September 8, 1868 C.E.</span></span> <span data-ttu-id="fc15a-468">에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-468">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-469">지 원하는 가장 빠른 날짜는 <xref:System.Globalization.JapaneseCalendar> 클래스는 년 9 월 1868 8 일 C.E., 메이지 연대에 있는 첫 번째 연도의 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-469">The earliest date supported by the <xref:System.Globalization.JapaneseCalendar> class is September 8, 1868 C.E., in the first year of the Meiji era.</span></span> <span data-ttu-id="fc15a-470">일반적으로 날짜 및 시간을 사용 하는 작업은 <xref:System.Globalization.JapaneseCalendar> 클래스 throw는 <xref:System.ArgumentOutOfRangeException> 이 날짜 이전 날짜에 대 한 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-470">Ordinarily, date and time operations that use the <xref:System.Globalization.JapaneseCalendar> class throw an <xref:System.ArgumentOutOfRangeException> exception for dates before this date.</span></span> <span data-ttu-id="fc15a-471">그러나 일부 멤버와 같은 <xref:System.Globalization.JapaneseCalendar.GetEra%2A> 메서드를 메이지 1 년에서 9 월 7 통해 1868 년 1 월 1 일에서 날짜를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-471">However, some members, such as the <xref:System.Globalization.JapaneseCalendar.GetEra%2A> method, support dates from January 1, 1868 through September 7 in the year Meiji 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc15a-472">다음 예제에서는 달력에서 지 원하는 시작 및 완료 날짜를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-472">The following example gets the earliest and latest dates supported by the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CPP/japanesecalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CS/japanesecalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/VB/japanesecalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="fc15a-473">연도를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-473">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="fc15a-474">월을 나타내는 1에서 12 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-474">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="fc15a-475">일을 나타내는 1에서 31 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-475">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="fc15a-476">시간을 나타내는 0에서 23 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-476">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="fc15a-477">분을 나타내는 0에서 59 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-477">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="fc15a-478">초를 나타내는 0에서 59 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-478">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="fc15a-479">밀리초를 나타내는 0에서 999 사이의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-479">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="fc15a-480">연대를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-480">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="fc15a-481">지정된 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-481">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="fc15a-482">현재 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-482">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-483"><xref:System.Globalization.JapaneseCalendar.ToDateTime%2A> 메서드는 양력 날짜를 현재 달력에서 날짜를 변환할 수 때문에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-483">The <xref:System.Globalization.JapaneseCalendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date.</span></span> <span data-ttu-id="fc15a-484">양력 날짜 이후에 데 사용할 수, 예를 들어 특정 달력에서 동일한 날짜를 만들거나 다양 한 달력의 날짜와 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-484">The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-485"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-485"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-486">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-486">-or-</span></span>  
  
 <span data-ttu-id="fc15a-487"><paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-487"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-488">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-488">-or-</span></span>  
  
 <span data-ttu-id="fc15a-489"><paramref name="day" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-489"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="fc15a-490">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-490">-or-</span></span>  
  
 <span data-ttu-id="fc15a-491"><paramref name="hour" />가 0보다 작거나 23보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-491"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
 <span data-ttu-id="fc15a-492">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-492">-or-</span></span>  
  
 <span data-ttu-id="fc15a-493"><paramref name="minute" />가 0보다 작거나 59보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-493"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="fc15a-494">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-494">-or-</span></span>  
  
 <span data-ttu-id="fc15a-495"><paramref name="second" />가 0보다 작거나 59보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-495"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="fc15a-496">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-496">-or-</span></span>  
  
 <span data-ttu-id="fc15a-497"><paramref name="millisecond" />가 0보다 작거나 999보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-497"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span>  
  
 <span data-ttu-id="fc15a-498">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-498">-or-</span></span>  
  
 <span data-ttu-id="fc15a-499"><paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-499"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="fc15a-500">변환할 연도를 나타내는 정수이며 일반적으로 두 자리입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-500">An integer (usually two digits) that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="fc15a-501"><see cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" /> 속성으로 해당 세기를 확인하여 지정된 연도를 네 자릿수 연도로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-501">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="fc15a-502"><paramref name="year" />를 네 자릿수로 표시하는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-502">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-503">이 메서드는 <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-503">This method implements <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fc15a-504">값을 반환 하는 일본식 달력의 연간 미만 네 자릿수 일반적 이기 때문에이 구현은 항상는 `year` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-504">Because the year in the Japanese calendar is typically less than four digits long, this implementation always returns the value of the `year` parameter.</span></span>  
  
 <span data-ttu-id="fc15a-505"><xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> 두 자리 연도 또는 네 자리 연도 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-505"><xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="fc15a-506">그러나 유효한 연도 일반적으로 두 자릿수 (100 미만)로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-506">However, a valid year is generally represented as two digits (less than 100).</span></span> <span data-ttu-id="fc15a-507">두 자리 연도 값을 전달 하면이 메서드는 값에 따라 네 자릿수 값을 변환 하는 <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A> 적절 한 네 자리 연도 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-507">Passing a two-digit year value causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="fc15a-508">네 자리 값을 제공 하는 응용 프로그램 또는 0 또는 음수 값을 제공 하는 경우 <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-508">If the application supplies a four-digit value, or if it supplies zero or a negative value, <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fc15a-509"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-509"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc15a-510">두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-510">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="fc15a-511">두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도입니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-511">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc15a-512">이 속성은 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-512">This property implements <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fc15a-513">일반적으로 일본식 달력의 연도 네 개 미만의 자릿수 이므로이 구현 기본적으로 99를 반환 하 고 반환 값의 영향을 주지 않습니다 <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fc15a-513">Because the year in the Japanese calendar is typically less than four digits long, this implementation returns 99 by default and does not affect the return value of <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fc15a-514">set 작업에서 지정된 값이 99보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-514">The value specified in a set operation is less than 99.</span></span>  
  
 <span data-ttu-id="fc15a-515">또는</span><span class="sxs-lookup"><span data-stu-id="fc15a-515">-or-</span></span>  
  
 <span data-ttu-id="fc15a-516">set 작업에서 지정한 값이 8011 또는 <see langword="MaxSupportedDateTime.Year" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-516">The value specified in a set operation is greater than 8011 (or <see langword="MaxSupportedDateTime.Year" />).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fc15a-517">set 작업에서 현재 인스턴스가 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="fc15a-517">In a set operation, the current instance is read-only.</span></span></exception>
        <altmember cref="M:System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>