<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextElementEnumerator.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c9664f1e2acccdee870814b869f6832677a1e9f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9664f1e2acccdee870814b869f6832677a1e9f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Globalization.TextElementEnumerator">
          <source>Enumerates the text elements of a string.</source>
          <target state="translated">문자열의 텍스트 요소를 열거합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</source>
          <target state="translated">.NET Framework의 문자 소 즉, 단일 문자로 표시 되는 텍스트 단위로 텍스트 요소를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A text element can be any of the following:</source>
          <target state="translated">텍스트 요소는 다음 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A base character, which is represented as a single <ph id="ph1">&lt;xref:System.Char&gt;</ph> value.</source>
          <target state="translated">Single로 표현 되는 기본 문자 <ph id="ph1">&lt;xref:System.Char&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, LATIN CAPITAL LETTER A (U+0041) and LATIN SMALL LETTER AE (U+00E6) are base characters.</source>
          <target state="translated">예를 들어 영어 대문자 문자는 (U + 0041) 및 LATIN SMALL 문자 AE (U + 00E6)는 기본 문자입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A combining character sequence, which consists of a base character and one or more combining characters.</source>
          <target state="translated">조합 문자는 기본 문자 및 결합 문자를 하나 이상으로 구성 된 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, example, LATIN CAPITAL LETTER A (U+0041) followed by COMBINING MACRON (U+0304) is a combining character sequence.</source>
          <target state="translated">예를 들어 예제에서는 장 결합 하 여 뒤에 (U + 0041) LATIN CAPITAL LETTER (U + 0304) 조합에는 문자 시퀀스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Surrogate pairs, which the <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines as a coded character representation for a single abstract character that consists of a sequence of two code units: a high surrogate, and a low surrogate.</source>
          <target state="translated">서로게이트 쌍을 하는 <bpt id="p1">[</bpt>유니코드 표준<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> 두 코드 단위의 시퀀스를 구성 하는 단일 추상 문자에 대 한 코드 문자 표현으로 정의: 상위 서로게이트 및 하위 서로게이트입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Surrogate pairs are used to represent characters outside of the Unicode Basic Multilingual Plane as UTF-8 encoded characters.</source>
          <target state="translated">서로게이트 쌍은 u t F-8로 인코딩된 문자로 유니코드 Basic Multilingual Plane 외부에 문자를 나타내는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, GOTHIC LETTER SAUIL (U+10343) is represented in UTF-8 encoding as a high surrogate whose value is 0xD800 and a low surrogate whose value is 0xDF43.</source>
          <target state="translated">예를 들어 고딕 문자 SAUIL (U + 10343) utf-8 인코딩을 해당 값이 0xd800 상위 서로게이트 및 해당 값이 0xDF43 하위 서로게이트도 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A surrogate pair can represent a base character or a combining character.</source>
          <target state="translated">서로게이트 쌍 조합 문자 또는 기본 문자를 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class allows you to work with the text elements in a string rather than with single <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> 클래스를 사용 하면 단일 대신 문자열의 텍스트 요소를 사용 하 여 작동 하도록 <ph id="ph2">&lt;xref:System.Char&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>You instantiate a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object that represents a particular string by passing the string to the <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">인스턴스화하는 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> 문자열을 전달 하 여 특정 문자열을 나타내는 개체는 <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>This returns an enumerator that is positioned before the first text element in the string.</source>
          <target state="translated">문자열의 첫 번째 텍스트 요소 앞에 배치 하는 열거자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Calling the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> 메서드도 실행 하면 열거자가이 위치로 복원 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Because this represents an invalid state, you must call <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first text element of the string before reading the value of the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property to return the current text element.</source>
          <target state="translated">호출 해야이 잘못 된 상태를 나타내므로 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> 하 여 열거자를 문자열의 첫 번째 텍스트 요소로의 값을 읽기 전에 <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 현재 텍스트 요소를 반환 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>When working with a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object, you are responsible for positioning the enumerator.</source>
          <target state="translated">작업할 때는 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> 개체 열거자 위치를 지정 하는 일을 담당 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property returns the same text element until you call either <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 속성 중 하나를 호출할 때까지 같은 텍스트 요소를 반환 <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The enumerator is in an invalid state if it is positioned before the first text element or after the last text element in the string.</source>
          <target state="translated">열거자에 잘못 된 상태 이면 첫 번째 텍스트 요소 앞 또는 문자열에서 마지막 텍스트 요소 뒤에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>When the enumerator is in an invalid state, attempting to retrieve the value of the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">열거자가 잘못 된 상태에,의 값을 검색 하는 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 속성 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>You can determine whether the enumerator is in an invalid state by testing whether the return value of the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">테스트 하 여 열거자가 잘못 된 상태에 있는지 여부를 확인할 수 있는지 여부를의 반환 값은 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object represents a snapshot of the current state of a string variable or string literal at the moment that the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object is instantiated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> 개체는 문자열 변수 또는 현재 리터럴 문자열의 현재 상태 스냅숏을 나타냅니다 하는 <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> 개체가 인스턴스화될 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Note that:</source>
          <target state="translated">다음 사항에 유의합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Text element enumerators can only be used to read data in a string.</source>
          <target state="translated">텍스트 요소 열거자만 문자열에 데이터를 읽는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>They cannot modify the underlying string.</source>
          <target state="translated">내부 문자열을 수정할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>An enumerator does not have exclusive access to the string that it represents.</source>
          <target state="translated">열거자는 표시 되는 문자열에 대 한 단독 액세스는 없습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A string variable can be modified after the enumerator is created.</source>
          <target state="translated">열거자가 만들어진 후 문자열 변수를 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object enumerates the text elements present in the string at the time that the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object was instantiated.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> 개체 시간에는 문자열에 나타날 텍스트 요소를 열거 하는 <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> 개체가 인스턴스화입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>It does not reflect any subsequent changes to the string variable if that variable is modified afterward.</source>
          <target state="translated">해당 변수는 나중에 수정할 수는 string 변수 후속 변경 내용은 반영 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Because the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class does not override <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>, two <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> objects that represent the same string will be considered unequal.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> 클래스를 재정의 하지 않습니다 <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>, 두 개의 <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> 동일한 문자열을 나타내는 개체를 같지 않은 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class to enumerate the text elements of a string.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> 문자열의 텍스트 요소를 열거 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>Gets the current text element in the string.</source>
          <target state="translated">문자열의 현재 텍스트 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>An object containing the current text element in the string.</source>
          <target state="translated">문자열의 현재 텍스트 요소를 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first text element of the string before reading the value of <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">열거자를 만들거나는 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> 호출 됩니다 <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> 호출 하 여 열거자를 문자열의 첫 번째 텍스트 요소 값을 읽기 전에 <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 마지막으로 호출 하는 경우 예외를 throw <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> 반환 <ph id="ph3">`false`</ph>, 문자열의 끝 나타냅니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 열거자를 연속으로 호출의 위치를 이동 하지 않는 <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 될 때까지 동일한 개체를 반환 <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> 라고 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">열거자가 문자열의 첫째 텍스트 요소 앞이나 마지막 텍스트 요소 뒤에 배치되는 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>Gets the index of the text element that the enumerator is currently positioned over.</source>
          <target state="translated">열거자가 현재 위치하고 있는 텍스트 요소의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>The index of the text element that the enumerator is currently positioned over.</source>
          <target state="translated">열거자가 현재 위치하고 있는 텍스트 요소의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">열거자가 문자열의 첫째 텍스트 요소 앞이나 마지막 텍스트 요소 뒤에 배치되는 경우</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>Gets the current text element in the string.</source>
          <target state="translated">문자열의 현재 텍스트 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>A new string containing the current text element in the string being read.</source>
          <target state="translated">읽고 있는 문자열의 현재 텍스트 요소를 포함하는 새 문자열입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>This method returns the same text element as the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">와 같은 텍스트 요소를 반환 하는이 메서드는 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">열거자가 문자열의 첫째 텍스트 요소 앞이나 마지막 텍스트 요소 뒤에 배치되는 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>Advances the enumerator to the next text element of the string.</source>
          <target state="translated">열거자를 문자열의 다음 텍스트 요소로 이동합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next text element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the string.</source>
          <target state="translated">열거자가 다음 요소로 이동한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>가 반환되고 문자열의 끝을 지난 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, the enumerator is positioned before the first text element of the string, and the first call to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> moves the enumerator over the first text element of the string.</source>
          <target state="translated">열거자를 만든 후 또는 이후에 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> 는 호출에 열거자는 문자열과 첫 번째 호출의 첫 번째 텍스트 요소 앞에 배치 됩니다 <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> 열거자 문자열의 첫 번째 텍스트 요소로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>If the string is modified after this enumerator was created, <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> throws an exception.</source>
          <target state="translated">이 열거자가 만들어진 후 문자열을 수정 하는 경우 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>After the end of the string is passed, subsequent calls to <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">문자열의 끝이 전달 된를 다시 호출 하면 후 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> 반환 <ph id="ph2">`false`</ph> 될 때까지 <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> 라고 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first text element in the string.</source>
          <target state="translated">문자열의 첫째 텍스트 요소 앞의 초기 위치에 열거자를 지정합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> method moves the enumerator to the beginning of the string, before the first text element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> 메서드는 첫 번째 텍스트 요소 앞의 시작 부분에 열거자를 이동 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>After calling <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>, you must call <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first text element of the string before calling <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> to read the value of the first text element.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>, 호출 해야 <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> 하 여 열거자를 호출 하기 전에 문자열의 첫 번째 텍스트 요소로 <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 첫 번째 텍스트 요소의 값을 읽을 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>