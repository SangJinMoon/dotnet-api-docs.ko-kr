<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CompareOptions.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55c2600ef56fcc32df38e39267ac68858f8f1a1c5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c2600ef56fcc32df38e39267ac68858f8f1a1c5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Globalization.CompareOptions">
          <source>Defines the string comparison options to use with <ph id="ph1">&lt;see cref="T:System.Globalization.CompareInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.CompareInfo" /&gt;</ph>와 함께 사용할 문자열 비교 옵션을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>These options denote case sensitivity or necessity to ignore types of characters.</source>
          <target state="translated">이러한 옵션을 대/소문자 구분 또는 종류의 문자를 무시 해야 하는지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>The .NET Framework uses three distinct ways of sorting: word sort, string sort, and ordinal sort.</source>
          <target state="translated">.NET Framework에서는 세 가지 방법으로 정렬: 정렬, 문자열 정렬 및 정렬 서 수를 단어입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>Word sort performs a culture-sensitive comparison of strings.</source>
          <target state="translated">Word 정렬 문자열의 문화권 구분 비교를 수행합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>Certain nonalphanumeric characters might have special weights assigned to them.</source>
          <target state="translated">특정 영숫자가 아닌 문자는 특별 한 가중치 할당 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>For example, the hyphen ("-") might have a very small weight assigned to it so that "coop" and "co-op" appear next to each other in a sorted list.</source>
          <target state="translated">예를 들어, 하이픈 ("-")는 매우 작은 가중치가 할당 "coop" 및 "co-op" 정렬된 된 목록에서 서로 인접 표시 되도록 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>String sort is similar to word sort, except that there are no special cases.</source>
          <target state="translated">문자열 정렬은 특별 한 경우가 점을 제외 하 고 word 정렬 비슷합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>Therefore, all nonalphanumeric symbols come before all alphanumeric characters.</source>
          <target state="translated">따라서 모든 영숫자가 아닌 기호가 모든 영숫자 문자 앞에 오는 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>Ordinal sort compares strings based on the Unicode values of each element of the string.</source>
          <target state="translated">정렬 서 수 문자열의 각 요소 유니코드 값을 기반으로 하는 문자열을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>The StringSort value can only be used with <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">StringSort 값만 사용 하 여 <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source><ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> is thrown if the StringSort value is used with <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.IsPrefix%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.CompareInfo.IsSuffix%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> StringSort 값으로 사용 되는 경우 throw 되 <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.IsPrefix%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.CompareInfo.IsSuffix%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>When possible, the application should use string comparison methods that accept a <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> value to specify the kind of comparison expected.</source>
          <target state="translated">응용 프로그램에 동의 하는 문자열 비교 메서드를 사용 해야 가능 하면 한 <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> 예상 비교의 종류를 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>As a general rule, user-facing comparisons are best served by the use of linguistic options (using the current culture), while security comparisons should specify Ordinal or OrdinalIgnoreCase.</source>
          <target state="translated">사용자 용 비교는 가장 일반적으로 제공 하는 동안 보안 (현재 문화권을 사용), 언어 옵션을 사용 하 여 비교 Ordinal 또는 OrdinalIgnoreCase 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.CompareOptions">
          <source>The following code example shows how sorting with StringSort differs from sorting without StringSort.</source>
          <target state="translated">다음 코드 예제에서는 어떻게 StringSort 하지 않은 다른 지 StringSort를 사용한 정렬을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreCase">
          <source>Indicates that the string comparison must ignore case.</source>
          <target state="translated">이 문자열 비교 옵션은 대/소문자를 무시함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreKanaType">
          <source>Indicates that the string comparison must ignore the Kana type.</source>
          <target state="translated">이 문자열 비교 옵션은 일본어 가나 형식을 무시함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreKanaType">
          <source>Kana type refers to Japanese hiragana and katakana characters, which represent phonetic sounds in the Japanese language.</source>
          <target state="translated">가나 형식은 일본어의 발성음을 표현하는 히라가나 문자와 가타카나 문자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreKanaType">
          <source>Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as "computer" or "Internet".</source>
          <target state="translated">히라가나는 일본 고유의 어구과 단어를 표현하는 데 사용되고, 가타카나는 "컴퓨터"나 "인터넷" 등과 같은 외래어를 표현하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreKanaType">
          <source>A phonetic sound can be expressed in both hiragana and katakana.</source>
          <target state="translated">발성음은 히라가나와 가타카나 모두로 표현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreKanaType">
          <source>If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.</source>
          <target state="translated">이 값이 선택되어 있으면 하나의 발성음에 대해 히라가나 문자와 가타카나 문자가 같은 것으로 간주됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreNonSpace">
          <source>Indicates that the string comparison must ignore nonspacing combining characters, such as diacritics.</source>
          <target state="translated">분음 부호와 같이 공백 없는 조합 문자를 무시하는 문자열 비교를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreNonSpace">
          <source>The <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines combining characters as characters that are combined with base characters to produce a new character.</source>
          <target state="translated"><bpt id="p1">[</bpt>유니코드 표준(Unicode Standard)<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>에서 조합 문자는 기본 문자와 조합하여 새 문자를 만들어내는 문자로 정의됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreNonSpace">
          <source>Nonspacing combining characters do not occupy a spacing position by themselves when rendered.</source>
          <target state="translated">간격이 없는 조합 문자는 렌더링될 때 스스로 공간을 차지하지 않습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreSymbols">
          <source>Indicates that the string comparison must ignore symbols, such as white-space characters, punctuation, currency symbols, the percent sign, mathematical symbols, the ampersand, and so on.</source>
          <target state="translated">이 문자열 비교 옵션은 공백 문자, 문장 부호, 통화 기호, 백분율 기호, 수학 기호, 앰퍼샌드 등의 기호를 무시함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreWidth">
          <source>Indicates that the string comparison must ignore the character width.</source>
          <target state="translated">이 문자열 비교 옵션은 문자 너비를 무시함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreWidth">
          <source>For example, Japanese katakana characters can be written as full-width or half-width.</source>
          <target state="translated">예를 들어 일본어의 가타카나 문자는 전자나 반자로 쓸 수 있는데,</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.IgnoreWidth">
          <source>If this value is selected, the katakana characters written as full-width are considered equal to the same characters written as half-width.</source>
          <target state="translated">이 값이 선택되어 있으면 전자로 쓰여진 가타카나 문자와 반자로 쓰여진 가타카나 문자가 같은 것으로 간주됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.None">
          <source>Indicates the default option settings for string comparisons.</source>
          <target state="translated">문자열 비교를 위한 기본 옵션 설정을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.Ordinal">
          <source>Indicates that the string comparison must use successive Unicode UTF-16 encoded values of the string (code unit by code unit comparison), leading to a fast comparison but one that is culture-insensitive.</source>
          <target state="translated">문자열 비교가 문자열의 후속 유니코드 UTF-16 인코딩 값을 사용해야 함을 나타냅니다(코드 단위별 코드 단위 비교). 이 값을 사용하면 문자열을 빠르게 비교할 수 있지만 문화권을 구분할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.Ordinal">
          <source>A string starting with a code unit XXXX16 comes before a string starting with YYYY16, if XXXX16 is less than YYYY16.</source>
          <target state="translated">XXXX16이 YYYY16보다 작은 경우 코드 단위 XXXX16으로 시작하는 문자열이 YYYY16으로 시작하는 문자열 앞에 옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.Ordinal">
          <source>This value cannot be combined with other <ph id="ph1">&lt;see cref="T:System.Globalization.CompareOptions" /&gt;</ph> values and must be used alone.</source>
          <target state="translated">이 값은 다른 <ph id="ph1">&lt;see cref="T:System.Globalization.CompareOptions" /&gt;</ph> 값과 함께 사용할 수 없으며 단독으로 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.OrdinalIgnoreCase">
          <source>String comparison must ignore case, then perform an ordinal comparison.</source>
          <target state="translated">문자열 비교에서는 대/소문자를 무시하고 서수 비교를 수행해야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.OrdinalIgnoreCase">
          <source>This technique is equivalent to converting the string to uppercase using the invariant culture and then performing an ordinal comparison on the result.</source>
          <target state="translated">이 기술은 고정 문화권을 사용하여 문자열을 대문자로 변환한 다음 해당 결과에 대해 서수 비교를 수행하는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.StringSort">
          <source>Indicates that the string comparison must use the string sort algorithm.</source>
          <target state="translated">이 문자열 비교 옵션은 문자열 정렬 알고리즘을 사용해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Globalization.CompareOptions.StringSort">
          <source>In a string sort, the hyphen and the apostrophe, as well as other nonalphanumeric symbols, come before alphanumeric characters.</source>
          <target state="translated">문자열 정렬에서 하이픈, 아포스트로피, 비영숫자 기호 등이 영숫자 문자 앞에 옵니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>