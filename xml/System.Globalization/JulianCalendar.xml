<Type Name="JulianCalendar" FullName="System.Globalization.JulianCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2272945b94882b1d7748705cf857d6688d0c23ad" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420087" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JulianCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JulianCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.JulianCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class JulianCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class JulianCalendar : System::Globalization::Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>율리우스력을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 45 기원전 줄리어스 시저 라는 음력 달력에 달력 개정 된을 정렬 합니다. 율리우스력은 일반 달력의 선행 프로그램.  
  
> [!NOTE]
>  사용 하는 방법에 대 한 내용은 <xref:System.Globalization.HebrewCalendar> 클래스 오류 코드 및 기타 달력.NET Framework의 클래스를 참조 하십시오 [달력 작업](~/docs/standard/datetime/working-with-calendars.md)합니다.  
  
 <xref:System.Globalization.JulianCalendar> 클래스 현재 연대만 인식 합니다.  
  
 일반 달력 달리 율리우스력 4로 균등 하 게 나눌 수는 연도로 윤년을 정의 합니다. 따라서 달력 오차가 생깁니다 128 년 마다 1 일입니다. 평년은 365 일이 고 윤년 수는 366 일입니다.  
  
 그레고리오 력 율리우스력이 28에서 31 일 12 개월: (31 일) 년 1 월, 년 2 월 (28 이나 29 일), (31 일) 년 3 월, 년 4 월 (30 일), 년 5 월 (31 일), 년 6 월 (30 일), 7 월 (31 일), (31 일) 8 월, 년 9 월 (30 일), 년 10 월 (31 일) 11 월 (30 일)이 고 12 월 (31 일)입니다. 2 월 29 일 윤년 평년 28에 있습니다.  
  
 A.d. 2001 년 1 월 1 일 일반 달력에서은 A.D. 2000 년 12 월 19 일에 해당 율리우스력에.  
  
 현재는 <xref:System.Globalization.JulianCalendar> 에서 지 원하는 문화권에서 사용 되지 않는 <xref:System.Globalization.CultureInfo> 클래스입니다. 따라서는 <xref:System.Globalization.JulianCalendar> 클래스 율리우스력 날짜를 계산 하는 데에 사용할 수 있습니다.  
  
 각 <xref:System.Globalization.CultureInfo> 개체가 집합 일정을 지원 합니다. <xref:System.Globalization.CultureInfo.Calendar%2A> 문화권에 대 한 기본 일정을 반환 하는 속성 및 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> 속성 문화권에서 지원 되는 모든 달력을 포함 하는 배열을 반환 합니다. 사용 하는 달력을 변경 하려면는 <xref:System.Globalization.CultureInfo>, 응용 프로그램 설정 해야는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 새 <xref:System.Globalization.Calendar>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JulianCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JulianCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Globalization.JulianCalendar" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">월을 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="months">더할 월 수입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />에서 지정된 월 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" />에 지정된 월 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 결과의 날짜 부분 <xref:System.DateTime> 결과 일 결과 결과 연도의 월에 유효한 날짜가 아닌 경우 영향을 합니다. 결과 결과 연도의 월에 유효 마지막 날짜로 변경 됩니다. 결과의 연도 부분 <xref:System.DateTime> 결과 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 이 구현은 현재 연대만 지원합니다. 따라서 <xref:System.ArgumentException> 결과 연도 지정 된 연대를 벗어나는 경우 throw 되 <xref:System.DateTime>합니다. 결과 시간 부분은 <xref:System.DateTime> 지정 된 동일 하 게 유지 <xref:System.DateTime>합니다.  
  
 예를 들어 지정된 된 월 10 월 31 일,이 경우 지정 된 날짜가 해당 월의 고 값은의 `months` 매개 변수는 6, 결과 연도 하나는 결과 월, 4 월 이며 결과 da 지정 된 연도의 더 y가 4 월의 마지막 날 30 번째 날입니다.  
  
 하는 경우의 값은 `months` 매개 변수는 음수 이면 결과 <xref:System.DateTime> 지정 된 이전 <xref:System.DateTime>합니다.  
  
 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성은 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 율리우스력 기준으로 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">결과 <see cref="T:System.DateTime" />이 지원되는 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="months" />가 -120000보다 작습니다.  
  
 또는  
  
 <paramref name="months" />가 120000보다 큽니다.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">연도를 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="years">더할 연도 수입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />에서 지정된 연도 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" />에 지정된 연도 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 결과의 날짜 부분 <xref:System.DateTime> 결과 일 결과 결과 연도의 월에 유효한 날짜가 아닌 경우 영향을 합니다. 결과 결과 연도의 월에 유효 마지막 날짜로 변경 됩니다. 결과의 월 부분 <xref:System.DateTime> 지정 된 동일 하 게 유지 <xref:System.DateTime>합니다. 이 구현은 현재 연대만 지원합니다. 따라서 <xref:System.ArgumentException> 결과 연도 지정 된 연대를 벗어나는 경우 throw 되 <xref:System.DateTime>합니다. 결과 시간 부분은 <xref:System.DateTime> 지정 된 동일 하 게 유지 <xref:System.DateTime>합니다.  
  
 예를 들어 2 월에 28 일 제외 하 고 29 일 할당 했을 때 윤년 있습니다. 지정한 날짜가 윤년의 2 월 29 번째 날과 값 이면 `years` 1 이면 결과 날짜는 다음 연도에 대 한 2 월 28 번째 날입니다.  
  
 경우 `years` 가 음수 이면 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.  
  
 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성은 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 율리우스력 기준으로 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">결과 <see cref="T:System.DateTime" />이 지원되는 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 달력이 양력인지, 음력인지 또는 두 가지를 조합한 것인지를 나타내는 값을 가져옵니다.</summary>
        <value>항상 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 리플렉션을 사용 하 여 각각 인스턴스화하 <xref:System.Globalization.Calendar> 형식 및.NET Framework에서 발견 된 값을 표시 해당 <xref:System.Globalization.Calendar.AlgorithmType%2A> 속성입니다.  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.JulianCalendar" />에 있는 연대의 목록을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Globalization.JulianCalendar" />에 있는 연대를 나타내는 정수의 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.JulianCalendar> 클래스 현재 연대만 인식 합니다. 이 속성에는 항상 하나의 요소만 있는 배열을 반환합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />의 날짜(월 기준)를 반환합니다.</summary>
        <returns>
          <paramref name="time" />의 날짜(월 기준)를 나타내는 1에서 31 사이의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 율리우스력 기준으로 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />의 요일을 반환합니다.</summary>
        <returns>
          <paramref name="time" />의 요일을 나타내는 <see cref="T:System.DayOfWeek" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DayOfWeek> 값은 일요일, 월요일, 화요일, 수요일, 목요일, 금요일, 토요일 및 합니다.  
  
   
  
## Examples  
 여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 율리우스력 기준으로 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />의 날짜(연도 기준)를 반환합니다.</summary>
        <returns>
          <paramref name="time" />의 날짜(연도 기준)를 나타내는 1에서 366 사이의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 날짜의 해당 연도의 첫 번째 날부터의 일 수로 정의 됩니다. 예를 들어 <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> , 1을 반환 하는 첫 번째 월의 첫 번째 날에 대 한 및 <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> 마지막에 대 한 지난 달의 날짜를에서 일의 총 수를 반환 합니다. 전체에서 반환 된 것과 동일한 값은 <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>합니다.  
  
   
  
## Examples  
 여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 율리우스력 기준으로 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 1에서 12 사이의 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>지정된 연대의 지정된 연도에 있는 지정된 월의 날짜 수를 반환합니다.</summary>
        <returns>지정된 연대의 지정된 연도에 있는 지정된 월의 날짜 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 2 월 28 이나 29 반환 (`month` = 2) 인지 여부에 따라 `year` 윤년 인지 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.JulianCalendar.GetDaysInMonth%2A> 각 5 년에는 각 연대에서 두 번째 달에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/CPP/juliancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/CS/juliancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/VB/juliancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>지정된 연대에 있는 지정된 연도의 날짜 수를 반환합니다.</summary>
        <returns>지정된 연대에 있는 지정된 연도의 날짜 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 반환 365 또는 여부에 따라 366 `year` 윤년 인지 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A> 각 연대에서 근무 연수가 5 년에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/CPP/juliancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/CS/juliancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/VB/juliancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />의 연대를 반환합니다.</summary>
        <returns>
          <paramref name="time" />의 연대를 나타내는 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.JulianCalendar> 클래스 현재 연대만 인식 합니다.  
  
   
  
## Examples  
 여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 율리우스력 기준으로 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>지정한 연도 및 연대의 윤월을 계산합니다.</summary>
        <returns>지정한 연도와 연대에서 윤월을 나타내는 양의 정수입니다. 또는 이 메서드는 달력이 윤월을 지원하지 않거나 <paramref name="year" /> 및 <paramref name="era" />가 윤년을 지정하지 않는 경우 0을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 윤 월의 개념을 지 원하는 일정에서 윤 월에 특정 월 또는 연도의 모든 달이 지난 후 발생할 수 있습니다. 예를 들어는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 메서드 13 지정된 된 날짜와 관련 된 달을 나타내는 1 사이의 숫자를 반환 합니다. 해당 연도의 8 및 9 번째 달을 윤 월 되어 있는 경우는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 메서드가 윤 월에 대 한 9 및 10 번째 8 월에 대 한 8을 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />의 월을 반환합니다.</summary>
        <returns>
          <paramref name="time" />의 월을 나타내는 1에서 12 사이의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 율리우스력 기준으로 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>지정된 연대에 있는 지정된 연도의 월 수를 반환합니다.</summary>
        <returns>지정된 연대에 있는 지정된 연도의 월 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.JulianCalendar.GetMonthsInYear%2A> 각 연대에서 근무 연수가 5 년에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/CPP/juliancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/CS/juliancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/VB/juliancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />의 연도를 반환합니다.</summary>
        <returns>
          <paramref name="time" />의 연도를 나타내는 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 여러 구성 요소 값을 표시 하는 다음 코드 예제는 <xref:System.DateTime> 율리우스력 기준으로 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 1에서 12 사이의 정수입니다.</param>
        <param name="day">일을 나타내는 1에서 31 사이의 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>지정된 연대의 지정된 날짜가 윤일인지 여부를 확인합니다.</summary>
        <returns>
          지정된 날짜가 윤일이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반 달력 달리 율리우스력 4로 균등 하 게 나눌 수는 연도로 윤년을 정의 합니다. 따라서 달력 오차가 생깁니다 128 년 마다 1 일입니다. 예를 들어 1999은 윤년이 아니지만 2000은 합니다. 평년은 365 일이 고 윤년 수는 366 일입니다.  
  
 윤 일은 윤년에만 있는 일입니다. 율리우스력을 2 월 29 번째 날이 유일한 윤 일입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.JulianCalendar.IsLeapDay%2A> 5 년이 각 연대에서 두 번째 달 (2 월)의 마지막 날에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/CPP/juliancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/CS/juliancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/VB/juliancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="day" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 1에서 12 사이의 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>지정된 연대의 지정된 연도에 있는 지정된 월이 윤월인지 여부를 확인합니다.</summary>
        <returns>이 메서드는 파생 클래스에서 다시 정의되지 않는 한 항상 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반 달력 달리 율리우스력 4로 균등 하 게 나눌 수는 연도로 윤년을 정의 합니다. 따라서 달력 오차가 생깁니다 128 년 마다 1 일입니다. 예를 들어 1999은 윤년이 아니지만 2000은 합니다. 평년은 365 일이 고 윤년 수는 366 일입니다.  
  
 윤 월은 윤년에만 있는 한 전체 월. 율리우스력 윤 월은 수 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.JulianCalendar.IsLeapMonth%2A> 현재 연대의 근무 연수가 5 년의 모든 월에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/CPP/juliancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/CS/juliancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/VB/juliancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>지정된 연대의 지정된 연도가 윤년인지 여부를 확인합니다.</summary>
        <returns>
          지정된 연도가 윤년이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반 달력 달리 율리우스력 4로 균등 하 게 나눌 수는 연도로 윤년을 정의 합니다. 따라서 달력 오차가 생깁니다 128 년 마다 1 일입니다. 예를 들어 1999은 윤년이 아니지만 2000은 합니다. 평년은 365 일이 고 윤년 수는 366 일입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.JulianCalendar.IsLeapYear%2A> 각 연대에서 근무 연수가 5 년에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/CPP/juliancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/CS/juliancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/VB/juliancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="JulianEra">
      <MemberSignature Language="C#" Value="public static readonly int JulianEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 JulianEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.JulianCalendar.JulianEra" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly JulianEra As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int JulianEra;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 연대를 나타냅니다. 이 필드는 상수입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.JulianCalendar> 클래스 현재 연대만 인식 합니다. 이 필드는 항상 1을 반환합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.JulianCalendar" /> 클래스에서 지원하는 마지막 날짜와 시간을 가져옵니다.</summary>
        <value>날짜와 시간에서 지원 되는 <see cref="T:System.Globalization.JulianCalendar" /> 서 기 9999 년 12 월 31 일의 마지막 순간 클래스 에 해당 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 최소값이 고 달력의 최대값을 가져옵니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CPP/juliancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CS/juliancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/VB/juliancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.JulianCalendar" /> 클래스에서 지원하는 시작 날짜와 시간을 가져옵니다.</summary>
        <value>시작 날짜와 시간에서 지원 되는 <see cref="T:System.Globalization.JulianCalendar" /> 서 기 0001 년 1 월 1 일의 첫 번째 순간 클래스 에 해당 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 최소값이 고 달력의 최대값을 가져옵니다.  
  
 [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CPP/juliancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CS/juliancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/VB/juliancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 1에서 12 사이의 정수입니다.</param>
        <param name="day">일을 나타내는 1에서 31 사이의 정수입니다.</param>
        <param name="hour">시간을 나타내는 0에서 23 사이의 정수입니다.</param>
        <param name="minute">분을 나타내는 0에서 59 사이의 정수입니다.</param>
        <param name="second">초를 나타내는 0에서 59 사이의 정수입니다.</param>
        <param name="millisecond">밀리초를 나타내는 0에서 999 사이의 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>지정된 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>현재 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="day" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
 또는  
  
 <paramref name="hour" />가 0보다 작거나 23보다 큽니다.  
  
 또는  
  
 <paramref name="minute" />가 0보다 작거나 59보다 큽니다.  
  
 또는  
  
 <paramref name="second" />가 0보다 작거나 59보다 큽니다.  
  
 또는  
  
 <paramref name="millisecond" />가 0보다 작거나 999보다 큽니다.  
  
 또는  
  
 <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">변환할 연도를 나타내는 두 자릿수 또는 네 자릿수의 정수입니다.</param>
        <summary>
          <see cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" /> 속성으로 해당 세기를 확인하여 지정된 연도를 네 자릿수 연도로 변환합니다.</summary>
        <returns>
          <paramref name="year" />를 네 자릿수로 표시하는 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> 두 자릿수 연도로 표시할 수 있는 100 년 범위의 마지막 연도입니다. 세기 지정 된를 찾아 확인 `year` 100 년 간의 범위 내에서. 예를 들어 경우 <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> 설정 2029로 100 년 범위의 1930에서 2029 합니다. 따라서 30의 2 자리 숫자 값 2 자리 값은 29 2029로 해석 됩니다 1930으로 해석 됩니다.  
  
 <xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A> 두 자리 연도 또는 네 자리 연도 지원합니다. 두 자리 연도 값 (100 미만)를 전달 하면이 메서드는 값에 따라 네 자릿수 값을 변환 하는 <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> 적절 한 네 자리 연도 나타내는 값입니다. 응용 프로그램에서 지원 되는 달력 사이의 범위 내에 있는 네 자리 연도 값을 제공 하는 경우 <xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A>, 메서드는 실제 입력된 값을 반환 합니다. 지원 되는 달력 범위 밖에 있는 4 자리 값을 제공 하는 응용 프로그램 또는 음수 값을 제공 하는 경우 메서드는 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도를 가져오거나 설정합니다.</summary>
        <value>두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 2 자리 연도를를 4 자리 연도 변환할 수 있습니다. 예를 들어이 속성을 2029로 설정 하는 경우는 100 년 간의 범위는 1930에서 2029 합니다. 따라서 30의 2 자리 숫자 값 2 자리 값은 29 2029로 해석 됩니다 1930으로 해석 됩니다.  
  
 <xref:System.Globalization.JulianCalendar> 클래스 시스템 설정의 변경 내용을 검색 하지 않습니다.  
  
 응용 프로그램 99로는 2 자리 연도 문자 그대로 해석 되도록 하려면이 값을 설정할 수 있습니다. 예를 들어이 속성이 99, 100 년 간의 범위는 0 (아닙니다: 대부분의 달력에 대 한 유효한 값)에서 99 사이로. 따라서 30의 2 자리 숫자 값은 30로 해석 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업에서 지정된 값이 99보다 작은 경우  
  
 또는  
  
 set 작업에서 지정한 값이 8011 (또는 <see langword="MaxSupportedDateTime.Year" />)보다 큰 경우</exception>
        <exception cref="T:System.InvalidOperationException">set 작업에서 현재 인스턴스가 읽기 전용인 경우</exception>
        <altmember cref="M:System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>