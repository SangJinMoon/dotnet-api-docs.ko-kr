<Type Name="IdnMapping" FullName="System.Globalization.IdnMapping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4825d2cbe8edc0b55312a892a1a873eff67e20b6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36486022" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IdnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IdnMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.IdnMapping" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IdnMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdnMapping sealed" />
  <TypeSignature Language="F#" Value="type IdnMapping = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Supports the use of non-ASCII characters for Internet domain names. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인터넷 도메인 이름과 도메인 이름 레이블, 레이블 구분 기호로 구분 된 하나 이상의 부분으로 구성 됩니다. 예를 들어 도메인 이름이 "www.proseware.com", "www", "proseware" 레이블과 마침표로 구분 하 여 "com"으로 구성 됩니다. 표준 도메인 이름은 US-ASCII (또는 기본 라틴 문자) 문자 범위 U + 0021 U + 007E 하에서 지정 된 문자의 구성 됩니다. 에 US-ASCII 문자 세트를 국제화 한 도메인 이름에 응용 프로그램 IDNA ()를 사용 하지 않는 문화권 인터넷 사용을 용이 하 게 하려면 표준 유니코드 문자 US-ASCII 문자 범위 외부의 포함을 지원 하기 위해 2003에 적용 됩니다. 그러나 이름 서버 및 도메인 이름 확인 US-ASCII 문자 범위 내의 문자 의존 하 여 계속 합니다.  
  
 IDNA 메커니즘 Punycode를 사용 하 여 US-ASCII 문자 범위 domain name system에서 지 원하는 US-ASCII 문자 범위를 벗어나는 유니코드 문자를 포함 하는 다국어 도메인 이름을 매핑할 수 있습니다. 인터넷을 통해 전송 된 데이터가 아니라 도메인 이름만 변환할 IDNA 메커니즘 사용 됩니다.  
  
> [!IMPORTANT]
>  에 [!INCLUDE[net_v45](~/includes/net-v45-md.md)], <xref:System.Globalization.IdnMapping> 클래스는 서로 다른 버전의 IDNA 표준 사용 중인 운영 체제에 따라 지원:  
>   
>  -   실행할 때 [!INCLUDE[win8](~/includes/win8-md.md)]에 설명 된 IDNA 표준의 2008 버전 지원 [RFC 5891: 다국어 도메인 이름에 응용 프로그램 IDNA (): 프로토콜](http://go.microsoft.com/fwlink/?LinkId=231875)합니다.  
> -   에 설명 된 표준의 2003 버전 지원에 이전 버전의 Windows 운영 체제에서 실행 되는 경우 [RFC 3490: 응용 프로그램 (IDNA)에서 도메인 이름을 국제화](http://go.microsoft.com/fwlink/?LinkId=158110)합니다.  
>   
>  참조 [유니코드 기술 표준 #46: IDNA 호환성 처리](http://go.microsoft.com/fwlink/?LinkId=232459) 방식에서 차이점에 대 한 이러한 표준 특정 문자 집합을 처리 합니다.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType> 메서드 정규화 된 도메인 이름, 정규화 된 이름을 표시 가능한 US ASCII 코드 포인트 범위 (U + 0020 ~ U + 007E)을 유니코드 문자로 구성 되어 있으며 앞에 ASCII 호환 인코딩 (ACE)이 접두사로 추가 하는 표현으로 변환 (" xn-") 각 레이블에 합니다. <xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType> 메서드 복원 하 여 변환 된 도메인 이름 레이블이 <xref:System.Globalization.IdnMapping.GetAscii%2A> 메서드.  
  
 변환할 문자열 레이블 구분 기호를 포함 하는 경우 표의 문자 마침표 문자 (U + 3002), 전체 중지 (U + FF0E) 전자 및 반자 표의 전체 중지 (U + FF61)는 <xref:System.Globalization.IdnMapping.GetAscii%2A> 메서드 레이블 구분 기호로 마침표 (기간, U + 변환 002E)입니다. 하지만 <xref:System.Globalization.IdnMapping.GetUnicode%2A> 메서드는 원래 레이블 구분 기호 문자를 복원 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> 메서드 배열을 internationalized domain Punycode로 변환 합니다. <xref:System.Globalization.IdnMapping.GetUnicode%2A> 메서드 다음 있는 Punycode 도메인 이름을 원래 도메인 이름으로 다시 변환 하지만 원래 레이블 구분 표준 레이블 구분 기호로 대체 합니다.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>모든 공용 메서드가 <see cref="T:System.Globalization.IdnMapping" /> 는 스레드로부터 안전 하 고는 여러 스레드에서 동시에 사용할 수 있습니다는 <see cref="T:System.Globalization.IdnMapping" /> 인스턴스의 속성이 설정 되지 않은 동시에 합니다.</threadsafe>
    <altmember cref="Overload:System.String.Normalize" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdnMapping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.IdnMapping" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType> 및 <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType> 속성으로 초기화 됩니다 `false`합니다. 부분적인 ASCII 문자 A-Z, 0-9, 하이픈 (-) 이외의 문자 (U + 00ad)를 하 고 도메인 이름에 마침표 (.) 문자를 사용할 수 있지만 할당 되지 않은 유니코드 코드 포인트 되지는 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUnassigned">
      <MemberSignature Language="C#" Value="public bool AllowUnassigned { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnassigned" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUnassigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUnassigned { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUnassigned : bool with get, set" Usage="System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether unassigned Unicode code points are used in operations performed by members of the current <see cref="T:System.Globalization.IdnMapping" /> object.</summary>
        <value>
          <see langword="true" /> 작업에 할당 되지 않은 코드 포인트 사용 되는 경우 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 등록 된 도메인 이름 할당 되지 않은 코드 포인트를 포함할 수 없습니다. 따라서 기본값인은 <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> 속성은 `false`합니다. IDNA 사양 일치 하는 문자열에 대 한 쿼리에만 할당 되지 않은 코드 포인트를 허용 합니다 (즉, 도메인 이름 조회에서). 도메인 이름에 할당 되지 않은 코드 포인트를 사용 하는 방법에 대 한 자세한 내용은 참조 [RFC 3454, "국제 문자열 (stringprep) 준비"](http://go.microsoft.com/fwlink/?LinkId=231873) 및 [RFC 5891, "응용 프로그램 (에서 국제 도메인 이름 IDNA): 프로토콜 "](http://go.microsoft.com/fwlink/?LinkId=231875)합니다.  
  
> [!IMPORTANT]
>  경우는 <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> 속성은 `false`, 속성에 연결 된 동작은 기본 운영 체제에 따라 다릅니다. [!INCLUDE[win8](~/includes/win8-md.md)], <xref:System.Globalization.IdnMapping> 클래스 유니코드 6.0 표준을 기반으로 IDNA 2008를 준수 합니다. 이전 버전의 Windows에서는에 <xref:System.Globalization.IdnMapping> IDNA 2003 유니코드 3을 기반으로 하는 클래스는 기반.* x*합니다. IDNA 2003에서 할당 되지 않은 일부 코드 포인트가 문자 할당 되 고 IDNA 2008에서 지원 됩니다. 예를 들어 U + 0221 유니코드 4.0에서 도입 되었습니다. [!INCLUDE[win8](~/includes/win8-md.md)]로 인코딩된 "xn-6la"입니다. 이전 버전의 Windows에서 throw 한 <xref:System.ArgumentException> 예외입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="idnMapping.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare to the current object.</param>
        <summary>Indicates whether a specified object and the current <see cref="T:System.Globalization.IdnMapping" /> object are equal.</summary>
        <returns>
          <see langword="true" /> if the object specified by the <paramref name="obj" /> parameter is derived from <see cref="T:System.Globalization.IdnMapping" /> and its <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties are equal; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAscii">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Encodes a string of domain name labels that include Unicode characters outside the US-ASCII character range to a string of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E). The string is formatted according to the IDNA standard.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string -&gt; string" Usage="idnMapping.GetAscii unicode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unicode">The string to convert, which consists of one or more domain name labels delimited with label separators.</param>
        <summary>Encodes a string of domain name labels that consist of Unicode characters to a string of displayable Unicode characters in the US-ASCII character range. The string is formatted according to the IDNA standard.</summary>
        <returns>The equivalent of the string specified by the <paramref name="unicode" /> parameter, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `unicode` 매개 변수는 유효한 유니코드 문자로 구성 된 하나 이상의 레이블의 문자열로 지정 합니다. 레이블은 레이블 구분 기호로 구분 됩니다. `unicode` 포함 하 고 필요에 따라 구분 기호로 끝날 수 있지만 매개 변수는 레이블 구분으로 시작할 수 없습니다. 레이블 구분 기호는 전체 중지 (기간, U + 002E), 표의 전체 중지 (U + 3002), 전체 중지 (U + FF0E) 전자 및 반자 표의 전체 중지 (U + FF61). 예를 들어 도메인 이름이 "www.adatum.com", "www", "adatum" 레이블과 마침표로 구분 하 여 "com"으로 구성 됩니다.  
  
 레이블을는 다음 문자를 포함할 수 없습니다.  
  
-   유니코드 U + 0001 ~ U + 001F 및 U + 007F에서에서 제어 문자.  
  
-   유니코드 문자를 할당 되지 않은 경우의 값은 <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> 속성은 `false`합니다.  
  
-   US ASCII에서 사용할 수 없는 문자가 문자 공간 등의 범위 (U + 0020) 느낌표 (U + 0021)를 표시 하는 경우 줄 (U + 005f 인) 문자를 낮은 값은 <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> 속성은 `true`합니다.  
  
-   문자 IDNA 표준의 특정 버전에 따라 금지 됩니다. 여기에 금지 된 문자에 대 한 자세한 내용은 참조 [RFC 3454: 준비의 다국어 문자열 ("stringprep")](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003 및 [RFC 5982: The 유니코드 코드 포인트와에 대 한 다국어 도메인 이름 응용 프로그램](http://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008에 대 한 합니다.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> 메서드 전체 중지 (기간, U + 002E)에 모든 레이블 구분 기호를 변환 합니다.  
  
 경우 `unicode` 외부 US-ASCII 문자를 포함 메서드가 반환 하 고 US-ASCII 문자 범위 내의 문자가 없는 문자 범위는 금지 `unicode` 변경 되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> 메서드 배열을 internationalized domain, Punycode로 변환 US-ASCII 문자 범위에 있는 문자로 구성 된 인코딩된 해당 하는입니다. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> 메서드 다음 있는 Punycode 도메인 이름을 원래 도메인 이름으로 다시 변환 하지만 원래 레이블 구분 표준 레이블 구분 기호로 대체 합니다.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
        <block subset="none" type="usage">
          <para>에 [! INCLUDE[net_v45](~/includes/net-v45-md.md)]는 <see cref="T:System.Globalization.IdnMapping" /> 클래스는 서로 다른 버전의 IDNA 표준 사용 중인 운영 체제에 따라 지원:-에서 실행 하는 경우 [! 에 설명 된 IDNA 표준의 2008 버전 지원 INCLUDE[win8](~/includes/win8-md.md)] [RFC 5891: 다국어 도메인 이름에 응용 프로그램 IDNA (): Protocol] (http://go.microsoft.com/fwlink/?LinkId=231875)합니다.  -에 설명 된 표준의 2003 버전을 지원 이전 버전의 Windows 운영 체제를 실행 하는 경우 [RFC 3490: 국제화 한 도메인 이름에 응용 프로그램 IDNA ()] (http://go.microsoft.com/fwlink/?LinkId=158110)합니다.  참조 [유니코드 기술 표준 #46: IDNA 호환성 처리] (http://go.microsoft.com/fwlink/?LinkId=232459) 방식에서 차이점에 대 한 이러한 표준 특정 문자 집합을 처리 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">The string to convert, which consists of one or more domain name labels delimited with label separators.</param>
        <param name="index">A zero-based offset into <c>unicode</c> that specifies the start of the substring to convert. The conversion operation continues to the end of the <c>unicode</c> string.</param>
        <summary>Encodes a substring of domain name labels that include Unicode characters outside the US-ASCII character range. The substring is converted to a string of displayable Unicode characters in the US-ASCII character range and is formatted according to the IDNA standard.</summary>
        <returns>The equivalent of the substring specified by the <paramref name="unicode" /> and <paramref name="index" /> parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `unicode` 및 `index` 매개 변수는 유효한 유니코드 문자로 구성 된 하나 이상의 레이블이 있는 부분 문자열을 정의 합니다. 레이블은 레이블 구분 기호로 구분 됩니다. 부분 문자열의 첫 번째 문자는 레이블 구분으로 시작할 수 없습니다 하지만 포함 하 고 필요에 따라 구분 기호로 끝날 수 있습니다. 레이블 구분 기호는 전체 중지 (기간, U + 002E), 표의 전체 중지 (U + 3002), 전체 중지 (U + FF0E) 전자 및 반자 표의 전체 중지 (U + FF61). 예를 들어 도메인 이름이 "www.adatum.com", "www", "adatum" 레이블과 마침표로 구분 하 여 "com"으로 구성 됩니다.  
  
 레이블을는 다음 문자를 포함할 수 없습니다.  
  
-   유니코드 U + 0001 ~ U + 001F 및 U + 007F에서에서 제어 문자.  
  
-   유니코드 문자 값에 따라 할당 되지 않은 <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> 속성입니다.  
  
-   US ASCII에서 사용할 수 없는 문자가 문자 공간 등의 범위 (U + 0020), 느낌표 (U + 0021), 표시 및 값에 따라 낮은 줄 (U + 005f 인) 문자는 <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> 속성입니다.  
  
-   문자 IDNA 표준의 특정 버전에 따라 금지 됩니다. 여기에 금지 된 문자에 대 한 자세한 내용은 참조 [RFC 3454: 준비의 다국어 문자열 ("stringprep")](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003 및 [RFC 5982: The 유니코드 코드 포인트와에 대 한 다국어 도메인 이름 응용 프로그램](http://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008에 대 한 합니다.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> 메서드 전체 중지 (기간, U + 002E)에 모든 레이블 구분 기호를 변환 합니다.  
  
 경우 `unicode` 외부 US-ASCII 문자를 포함 메서드가 반환 하 고 US-ASCII 문자 범위 내의 문자가 없는 문자 범위는 금지 `unicode` 변경 되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 로컬 부분을 제거 및 @ 전자 메일 주소를 전달 하는 문자는 결과 도메인 이름에 <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> 미국 ascii에서 문자로 구성 된 인코딩된 해당 하는 한 Punycode 도메인 이름을 만드는 메서드를 문자 범위입니다. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> 메서드 다음 있는 Punycode 도메인 이름을 원래 도메인 이름으로 다시 변환 하지만 원래 레이블 구분 표준 레이블 구분 기호로 대체 합니다.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1a.cs#2)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.  -or-  <paramref name="index" /> is greater than the length of <paramref name="unicode" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
        <block subset="none" type="usage">
          <para>에 [! INCLUDE[net_v45](~/includes/net-v45-md.md)]는 <see cref="T:System.Globalization.IdnMapping" /> 클래스는 서로 다른 버전의 IDNA 표준 사용 중인 운영 체제에 따라 지원:-에서 실행 하는 경우 [! 에 설명 된 IDNA 표준의 2008 버전 지원 INCLUDE[win8](~/includes/win8-md.md)] [RFC 5891: 다국어 도메인 이름에 응용 프로그램 IDNA (): Protocol] (http://go.microsoft.com/fwlink/?LinkId=231875)합니다.  -에 설명 된 표준의 2003 버전을 지원 이전 버전의 Windows 운영 체제를 실행 하는 경우 [RFC 3490: 국제화 한 도메인 이름에 응용 프로그램 IDNA ()] (http://go.microsoft.com/fwlink/?LinkId=158110)합니다.  참조 [유니코드 기술 표준 #46: IDNA 호환성 처리] (http://go.microsoft.com/fwlink/?LinkId=232459) 방식에서 차이점에 대 한 이러한 표준 특정 문자 집합을 처리 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">The string to convert, which consists of one or more domain name labels delimited with label separators.</param>
        <param name="index">A zero-based offset into <c>unicode</c> that specifies the start of the substring.</param>
        <param name="count">The number of characters to convert in the substring that starts at the position specified by  <c>index</c> in the <c>unicode</c> string.</param>
        <summary>Encodes the specified number of characters in a  substring of domain name labels that include Unicode characters outside the US-ASCII character range. The substring is converted to a string of displayable Unicode characters in the US-ASCII character range and is formatted according to the IDNA standard.</summary>
        <returns>The equivalent of the substring specified by the <paramref name="unicode" />, <paramref name="index" />, and <paramref name="count" /> parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Unicode`, `index`, 및 `count` 매개 변수는 유효한 유니코드 문자로 구성 된 하나 이상의 레이블이 있는 부분 문자열을 정의 합니다. 레이블은 레이블 구분 기호로 구분 됩니다. 부분 문자열의 첫 번째 문자는 레이블 구분으로 시작할 수 없습니다 하지만 포함 하 고 필요에 따라 구분 기호로 끝날 수 있습니다. 레이블 구분 기호는 전체 중지 (기간, U + 002E), 표의 전체 중지 (U + 3002), 전체 중지 (U + FF0E) 전자 및 반자 표의 전체 중지 (U + FF61). 예를 들어 도메인 이름이 "www.adatum.com", "www", "adatum" 레이블과 마침표로 구분 하 여 "com"으로 구성 됩니다.  
  
 레이블을는 다음 문자를 포함할 수 없습니다.  
  
-   유니코드 U + 0001 ~ U + 001F 및 U + 007F에서에서 제어 문자.  
  
-   유니코드 문자 값에 따라 할당 되지 않은 <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> 속성입니다.  
  
-   US ASCII에서 사용할 수 없는 문자가 문자 공간 등의 범위 (U + 0020), 느낌표 (U + 0021), 표시 및 값에 따라 낮은 줄 (U + 005f 인) 문자는 <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> 속성입니다.  
  
-   문자 IDNA 표준의 특정 버전에 따라 금지 됩니다. 여기에 금지 된 문자에 대 한 자세한 내용은 참조 [RFC 3454: 준비의 다국어 문자열 ("stringprep")](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003 및 [RFC 5982: The 유니코드 코드 포인트와에 대 한 다국어 도메인 이름 응용 프로그램](http://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008에 대 한 합니다.  
  
 <xref:System.Globalization.IdnMapping.GetAscii%2A> 메서드 전체 중지 (기간, U + 002E)에 모든 레이블 구분 기호를 변환 합니다. 부분 문자열 US-ASCII 문자 범위를 벗어나는 문자를 포함 하는 경우 US-ASCII 문자 범위 내의 문자가 없는 금지 됩니다 메서드 변경 하지 않고 부분 문자열을 반환 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> 다국어 도메인 이름 IDNA 표준을 준수 하는 도메인 이름으로 변환 하는 메서드입니다. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> 메서드 다음 표준화 된 도메인 이름을 원래 도메인 이름으로 다시 변환 하지만 원래 레이블 구분 표준 레이블 구분 기호로 대체 합니다.  
  
 [!code-csharp[IdnMapping.GetX#1](~/samples/snippets/csharp/VS_Snippets_CLR/IdnMapping.GetX/CS/getx.cs#1)]
 [!code-vb[IdnMapping.GetX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IdnMapping.GetX/VB/getx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> or <paramref name="count" /> is less than zero.  -or-  <paramref name="index" /> is greater than the length of <paramref name="unicode" />.  -or-  <paramref name="index" /> is greater than the length of <paramref name="unicode" /> minus <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
        <block subset="none" type="usage">
          <para>에 [! INCLUDE[net_v45](~/includes/net-v45-md.md)]는 <see cref="T:System.Globalization.IdnMapping" /> 클래스는 서로 다른 버전의 IDNA 표준 사용 중인 운영 체제에 따라 지원:-에서 실행 하는 경우 [! 에 설명 된 IDNA 표준의 2008 버전 지원 INCLUDE[win8](~/includes/win8-md.md)] [RFC 5891: 다국어 도메인 이름에 응용 프로그램 IDNA (): Protocol] (http://go.microsoft.com/fwlink/?LinkId=231875)합니다.  -에 설명 된 표준의 2003 버전을 지원 이전 버전의 Windows 운영 체제를 실행 하는 경우 [RFC 3490: 국제화 한 도메인 이름에 응용 프로그램 IDNA ()] (http://go.microsoft.com/fwlink/?LinkId=158110)합니다.  참조 [유니코드 기술 표준 #46: IDNA 호환성 처리] (http://go.microsoft.com/fwlink/?LinkId=232459) 방식에서 차이점에 대 한 이러한 표준 특정 문자 집합을 처리 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="idnMapping.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a hash code for this <see cref="T:System.Globalization.IdnMapping" /> object.</summary>
        <returns>One of four 32-bit signed constants derived from the properties of an <see cref="T:System.Globalization.IdnMapping" /> object.  The return value has no special meaning and is not suitable for use in a hash code algorithm.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 <xref:System.Globalization.IdnMapping.GetHashCode%2A> 메서드 응용 프로그램 코드 의미 있는 해시 알고리즘을 구현 하는 경우.  
  
   
  
## Examples  
 다음 예에서는 단일 문자열을 공백으로 구분 된 여러 전자 메일 주소를 포함할 수 있음을 가정 합니다. 로컬 부분을 제거 및 @ 각 전자 메일 주소를 전달 하는 문자는 결과 도메인 이름에 <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> 또는 <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> 메서드 Punycode 도메인 이름을 만들 수 있습니다. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> 메서드는 다음 있는 Punycode 도메인 이름을 원래 도메인 이름으로 다시 변환 합니다.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1b.cs#3)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1b.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Decodes one or more domain name labels encoded according to the IDNA standard to a string of Unicode characters.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string -&gt; string" Usage="idnMapping.GetUnicode ascii" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ascii">The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</param>
        <summary>Decodes a string of one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</summary>
        <returns>The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 도메인 이름, 레이블 및 레이블 구분 하는 방법에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> 메서드 배열을 internationalized domain Punycode로 변환 합니다. <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> 메서드 다음 있는 Punycode 도메인 이름을 원래 도메인 이름으로 다시 변환 하지만 원래 레이블 구분 표준 레이블 구분 기호로 대체 합니다.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</param>
        <param name="index">A zero-based offset into <c>ascii</c> that specifies the start of the substring to decode. The decoding operation continues to the end of the <c>ascii</c> string.</param>
        <summary>Decodes a substring of one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</summary>
        <returns>The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" /> and <paramref name="index" /> parameters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 도메인 이름, 레이블 및 레이블 구분 하는 방법에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.  -or-  <paramref name="index" /> is greater than the length of <paramref name="ascii" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</param>
        <param name="index">A zero-based offset into <c>ascii</c> that specifies the start of the substring.</param>
        <param name="count">The number of characters to convert in the substring that starts at the position specified by <c>index</c> in the <c>ascii</c> string.</param>
        <summary>Decodes a substring of a specified length that contains one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</summary>
        <returns>The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" />, <paramref name="index" />, and <paramref name="count" /> parameters.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 도메인 이름, 레이블 및 레이블 구분 하는 방법에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> or <paramref name="count" /> is less than zero.  -or-  <paramref name="index" /> is greater than the length of <paramref name="ascii" />.  -or-  <paramref name="index" /> is greater than the length of <paramref name="ascii" /> minus <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseStd3AsciiRules">
      <MemberSignature Language="C#" Value="public bool UseStd3AsciiRules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseStd3AsciiRules" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStd3AsciiRules As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseStd3AsciiRules { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseStd3AsciiRules : bool with get, set" Usage="System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether standard or relaxed naming conventions are used in operations performed by members of the current <see cref="T:System.Globalization.IdnMapping" /> object.</summary>
        <value>
          <see langword="true" /> 표준 명명 규칙; 작업에서 사용 되는 경우 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 표준 명명 규칙을 준수 하는 도메인 이름은 US-ASCII 문자 범위에 있는 문자의 특정 하위 집합을 구성 됩니다. 문자는 문자 A-Z, 0 ~ 9 숫자, 하이픈 (-) 문자 (U + 00ad) 및 마침표 (.). 입력 한 문자의 대/소문자는 중요 하지 않습니다. 완화 된 명명 규칙 보다 광범위 한 ASCII 범위를 사용할 수는 공간을 포함 하 여 문자 (U + 0020), 느낌표 문자 (U + 0021), 및는 밑줄 문자 (U + 005f 인). 경우 <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> 은 `true`, 반환한 레이블에 사용할 수 있는 표준 문자만는 <xref:System.Globalization.IdnMapping.GetAscii%2A> 메서드.  
  
 기본적으로 값은 <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> 속성은 `false`, ASCII 문자는 확장 된 하위 집합 레이블을에 사용할 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Globalization.IdnMapping> 표시할 문자 U + 0000에서 U + 001F의 사용을 금지 하는 클래스 및 U + 007F 도메인 이름에는 설정에 관계 없이 레이블는 <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> 속성입니다. 이러한 금지 이름 스푸핑을 같은 보안 공격의 위험을 줄입니다.  
  
   
  
## Examples  
 다음 예제에서는 ASCII 범위 U + 0000에서 U + 007f까지 문자를 포함 하는 Url을 생성 하 고 파이프라인 연산자는 <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> 두 방식의 <xref:System.Globalization.IdnMapping> 개체입니다. 하나의 개체에 해당 <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> 속성이로 설정 `true`, 다른 개체에으로 설정 하 고 `false`합니다. 출력 문자가 유효 하지 않은 경우에 표시 됩니다는 <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> 속성은 `true` 되었을 때 하지만 유효한 `false`합니다.  
  
 [!code-csharp[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/cs/usestd3asciirules1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/vb/usestd3asciirules1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>