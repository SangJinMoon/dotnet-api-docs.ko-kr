<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IdnMapping.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456396cdc1f438781ba992e7fbc1d352d6be3206760.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">396cdc1f438781ba992e7fbc1d352d6be3206760</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Globalization.IdnMapping">
          <source>Supports the use of non-ASCII characters for Internet domain names.</source>
          <target state="translated">인터넷 도메인 이름에서 ASCII 문자가 아닌 문자의 사용을 지원합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Globalization.IdnMapping">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>An Internet domain name consists of one or more parts, called domain name labels, separated by label separators.</source>
          <target state="translated">인터넷 도메인 이름과 도메인 이름 레이블, 레이블 구분 기호로 구분 된 하나 이상의 부분으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>For example, the domain name "www.proseware.com" consists of the labels, "www", "proseware", and "com", separated by periods.</source>
          <target state="translated">예를 들어 도메인 이름이 "www.proseware.com", "www", "proseware" 레이블과 마침표로 구분 하 여 "com"으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>Standard domain names consist of designated characters in the US-ASCII (or Basic Latin) character range, from U+0021 to U+007E.</source>
          <target state="translated">표준 도메인 이름은 US-ASCII (또는 기본 라틴 문자) 문자 범위 U + 0021 U + 007E 하에서 지정 된 문자의 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>To facilitate Internet usage in cultures that do not use the US-ASCII character set, the Internationalizing Domain Names in Applications (IDNA) standard was adopted in 2003 to support the inclusion of Unicode characters outside the US-ASCII character range.</source>
          <target state="translated">에 US-ASCII 문자 세트를 국제화 한 도메인 이름에 응용 프로그램 IDNA ()를 사용 하지 않는 문화권 인터넷 사용을 용이 하 게 하려면 표준 유니코드 문자 US-ASCII 문자 범위 외부의 포함을 지원 하기 위해 2003에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>However, name servers and domain name resolution continue to rely on characters within the US-ASCII character range.</source>
          <target state="translated">그러나 이름 서버 및 도메인 이름 확인 US-ASCII 문자 범위 내의 문자 의존 하 여 계속 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>The IDNA mechanism uses Punycode to map an internationalized domain name that contains Unicode characters outside the US-ASCII character range to the US-ASCII character range supported by the domain name system.</source>
          <target state="translated">IDNA 메커니즘 Punycode를 사용 하 여 US-ASCII 문자 범위 domain name system에서 지 원하는 US-ASCII 문자 범위를 벗어나는 유니코드 문자를 포함 하는 다국어 도메인 이름을 매핑할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>The IDNA mechanism is used to convert only domain names, not data transmitted over the Internet.</source>
          <target state="translated">인터넷을 통해 전송 된 데이터가 아니라 도메인 이름만 변환할 IDNA 메커니즘 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Globalization.IdnMapping&gt;</ph> class supports different versions of the IDNA standard, depending on the operating system in use:</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Globalization.IdnMapping&gt;</ph> 클래스는 서로 다른 버전의 IDNA 표준 사용 중인 운영 체제에 따라 지원:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>When run on <ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>, it supports the 2008 version of the IDNA standard outlined by <bpt id="p1">[</bpt>RFC 5891: Internationalized Domain Names in Applications (IDNA): Protocol<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231875)</ept>.</source>
          <target state="translated">실행할 때 <ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>에 설명 된 IDNA 표준의 2008 버전 지원 <bpt id="p1">[</bpt>RFC 5891: 다국어 도메인 이름에 응용 프로그램 IDNA (): 프로토콜<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231875)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>When run on earlier versions of the Windows operating system, it supports the 2003 version of the standard outlined by <bpt id="p1">[</bpt>RFC 3490: Internationalizing Domain Names in Applications (IDNA)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=158110)</ept>.</source>
          <target state="translated">에 설명 된 표준의 2003 버전 지원에 이전 버전의 Windows 운영 체제에서 실행 되는 경우 <bpt id="p1">[</bpt>RFC 3490: 응용 프로그램 (IDNA)에서 도메인 이름을 국제화<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=158110)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>See <bpt id="p1">[</bpt>Unicode Technical Standard #46: IDNA Compatibility Processing<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=232459)</ept> for the differences in the way these standards handle particular sets of characters.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>유니코드 기술 표준 #46: IDNA 호환성 처리<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=232459)</ept> 방식에서 차이점에 대 한 이러한 표준 특정 문자 집합을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType&gt;</ph> method normalizes a domain name, converts the normalized name to a representation that consists of displayable Unicode characters in the US-ASCII code point range (U+0020 to U+007E), and prepends an ASCII-compatible encoding (ACE) prefix ("xn--") to each label.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType&gt;</ph> 메서드 정규화 된 도메인 이름, 정규화 된 이름을 표시 가능한 US ASCII 코드 포인트 범위 (U + 0020 ~ U + 007E)을 유니코드 문자로 구성 되어 있으며 앞에 ASCII 호환 인코딩 (ACE)이 접두사로 추가 하는 표현으로 변환 (" xn-") 각 레이블에 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType&gt;</ph> method restores the domain name labels converted by the <ph id="ph2">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType&gt;</ph> 메서드 복원 하 여 변환 된 도메인 이름 레이블이 <ph id="ph2">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>If the string to be converted includes the label separator characters IDEOGRAPHIC FULL STOP (U+3002), FULLWIDTH FULL STOP (U+FF0E), and HALFWIDTH IDEOGRAPHIC FULL STOP (U+FF61), the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> method converts them to the label separator FULL STOP (period, U+002E).</source>
          <target state="translated">변환할 문자열 레이블 구분 기호를 포함 하는 경우 표의 문자 마침표 문자 (U + 3002), 전체 중지 (U + FF0E) 전자 및 반자 표의 전체 중지 (U + FF61)는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> 메서드 레이블 구분 기호로 마침표 (기간, U + 변환 002E)입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%2A&gt;</ph> method, however, does not restore the original label separator character.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%2A&gt;</ph> 메서드는 원래 레이블 구분 기호 문자를 복원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method to convert an array of internationalized domain names to Punycode.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 메서드 배열을 internationalized domain Punycode로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%2A&gt;</ph> method then converts the Punycode domain name back to the original domain name, but replaces the original label separators with the standard label separator.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%2A&gt;</ph> 메서드 다음 있는 Punycode 도메인 이름을 원래 도메인 이름으로 다시 변환 하지만 원래 레이블 구분 표준 레이블 구분 기호로 대체 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.IdnMapping">
          <source>All public methods of <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads, as long as the <ph id="ph2">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> instance's properties are not also set concurrently.</source>
          <target state="translated">모든 공용 메서드가 <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> 는 스레드로부터 안전 하 고는 여러 스레드에서 동시에 사용할 수 있습니다는 <ph id="ph2">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> 인스턴스의 속성이 설정 되지 않은 동시에 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType&gt;</ph> properties are initialized to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType&gt;</ph> 속성으로 초기화 됩니다 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.#ctor">
          <source>A small subset of ASCII characters other than A-Z, 0-9, the hyphen (-) character (U+002D), and the period (.) character are permitted in domain names, but unassigned Unicode code points are not.</source>
          <target state="translated">부분적인 ASCII 문자 A-Z, 0-9, 하이픈 (-) 이외의 문자 (U + 00ad)를 하 고 도메인 이름에 마침표 (.) 문자를 사용할 수 있지만 할당 되지 않은 유니코드 코드 포인트 되지는 않습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>Gets or sets a value that indicates whether unassigned Unicode code points are used in operations performed by members of the current <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> 개체의 멤버에서 수행한 작업에 할당되지 않은 유니코드 코드 포인트가 사용되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if unassigned code points are used in operations; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">할당되지 않은 코드 포인트가 작업에 사용되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>A registered domain name cannot contain unassigned code points.</source>
          <target state="translated">등록 된 도메인 이름 할당 되지 않은 코드 포인트를 포함할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>Consequently, the default value of the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">따라서 기본값인은 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>The IDNA specification permits unassigned code points only in queries for matching strings (that is, in domain name lookup).</source>
          <target state="translated">IDNA 사양 일치 하는 문자열에 대 한 쿼리에만 할당 되지 않은 코드 포인트를 허용 합니다 (즉, 도메인 이름 조회에서).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>For more information about the use of unassigned code points in domain names, see <bpt id="p1">[</bpt>RFC 3454, "Preparation of Internationalized Strings (stringprep)"<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231873)</ept> and <bpt id="p2">[</bpt>RFC 5891, "Internationalized Domain Names in Applications (IDNA): Protocol"<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=231875)</ept>.</source>
          <target state="translated">도메인 이름에 할당 되지 않은 코드 포인트를 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>RFC 3454, "국제 문자열 (stringprep) 준비"<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231873)</ept> 및 <bpt id="p2">[</bpt>RFC 5891, "응용 프로그램 (에서 국제 도메인 이름 IDNA): 프로토콜 "<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=231875)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the behavior associated with the property depends on the underlying operating system.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, 속성에 연결 된 동작은 기본 운영 체제에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>On <ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Globalization.IdnMapping&gt;</ph> class conforms to IDNA 2008, which is based on the Unicode 6.0 standard.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Globalization.IdnMapping&gt;</ph> 클래스 유니코드 6.0 표준을 기반으로 IDNA 2008를 준수 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>On previous versions of Windows, the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping&gt;</ph> class is based on IDNA 2003, which is based on Unicode 3.<bpt id="p1">*</bpt>x<ept id="p1">*</ept>.</source>
          <target state="translated">이전 버전의 Windows에서는에 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping&gt;</ph> IDNA 2003 유니코드 3을 기반으로 하는 클래스는 기반.<bpt id="p1">*</bpt> x<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>Some code points that were unassigned in IDNA 2003 have been assigned characters and are supported in IDNA 2008.</source>
          <target state="translated">IDNA 2003에서 할당 되지 않은 일부 코드 포인트가 문자 할당 되 고 IDNA 2008에서 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>For example, U+0221 was introduced in Unicode 4.0.</source>
          <target state="translated">예를 들어 U + 0221 유니코드 4.0에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>On <ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>, it is encoded as "xn—6la".</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>로 인코딩된 "xn-6la"입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.AllowUnassigned">
          <source>On previous versions of Windows, it throws an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> exception.</source>
          <target state="translated">이전 버전의 Windows에서 throw 한 <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.Equals(System.Object)">
          <source>The object to compare to the current object.</source>
          <target state="translated">현재 개체와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.Equals(System.Object)">
          <source>Indicates whether a specified object and the current <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> object are equal.</source>
          <target state="translated">지정된 개체가 현재 <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> 개체와 같은지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object specified by the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> parameter is derived from <ph id="ph3">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> and its <ph id="ph4">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> and <ph id="ph5">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> properties are equal; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 매개 변수로 지정된 개체가 <ph id="ph3">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph>에서 파생되었으며 <ph id="ph4">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> 및 <ph id="ph5">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> 속성이 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph6">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="T:System.Globalization.IdnMapping">
          <source>Encodes a string of domain name labels that include Unicode characters outside the US-ASCII character range to a string of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E).</source>
          <target state="translated">US-ASCII 문자 범위 외부의 유니코드 문자를 포함하는 도메인 이름 레이블의 문자열을 US-ASCII 문자 범위(U+0020 ~ U+007E)에 있는 표시 가능한 유니코드 문자의 문자열로 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Globalization.IdnMapping">
          <source>The string is formatted according to the IDNA standard.</source>
          <target state="translated">문자열은 IDNA 표준에 따라 형식이 지정됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>The string to convert, which consists of one or more domain name labels delimited with label separators.</source>
          <target state="translated">변환할 문자열입니다. 레이블 구분 기호로 구분된 하나 이상의 도메인 이름으로 구성되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>Encodes a string of domain name labels that consist of Unicode characters to a string of displayable Unicode characters in the US-ASCII character range.</source>
          <target state="translated">유니코드 문자로 구성된 도메인 이름 레이블 문자열을 US-ASCII 문자 범위에 있는 표시 가능한 유니코드 문자의 문자열로 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>The string is formatted according to the IDNA standard.</source>
          <target state="translated">문자열은 IDNA 표준에 따라 형식이 지정됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>The equivalent of the string specified by the <ph id="ph1">&lt;paramref name="unicode" /&gt;</ph> parameter, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph> 매개 변수로 지정된 문자열에 해당하며, US-ASCII 문자 범위(U+0020 ~ U+007E)의 표시 가능한 유니코드 문자로 구성되고, IDNA 표준에 따라 형식이 지정된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>The <ph id="ph1">`unicode`</ph> parameter specifies a string of one or more labels that consist of valid Unicode characters.</source>
          <target state="translated"><ph id="ph1">`unicode`</ph> 매개 변수는 유효한 유니코드 문자로 구성 된 하나 이상의 레이블의 문자열로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>The labels are separated by label separators.</source>
          <target state="translated">레이블은 레이블 구분 기호로 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>The <ph id="ph1">`unicode`</ph> parameter cannot begin with a label separator, but it can include and optionally end with a separator.</source>
          <target state="translated"><ph id="ph1">`unicode`</ph> 포함 하 고 필요에 따라 구분 기호로 끝날 수 있지만 매개 변수는 레이블 구분으로 시작할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>The label separators are FULL STOP (period, U+002E), IDEOGRAPHIC FULL STOP (U+3002), FULLWIDTH FULL STOP (U+FF0E), and HALFWIDTH IDEOGRAPHIC FULL STOP (U+FF61).</source>
          <target state="translated">레이블 구분 기호는 전체 중지 (기간, U + 002E), 표의 전체 중지 (U + 3002), 전체 중지 (U + FF0E) 전자 및 반자 표의 전체 중지 (U + FF61).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>For example, the domain name "www.adatum.com" consists of the labels, "www", "adatum", and "com", separated by periods.</source>
          <target state="translated">예를 들어 도메인 이름이 "www.adatum.com", "www", "adatum" 레이블과 마침표로 구분 하 여 "com"으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>A label cannot contain any of the following characters:</source>
          <target state="translated">레이블을는 다음 문자를 포함할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>Unicode control characters from U+0001 through U+001F, and U+007F.</source>
          <target state="translated">유니코드 U + 0001 ~ U + 001F 및 U + 007F에서에서 제어 문자.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>Unassigned Unicode characters, if the value of the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">유니코드 문자를 할당 되지 않은 경우의 값은 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>Non-standard characters in the US-ASCII character range, such as the SPACE (U+0020), EXCLAMATION MARK (U+0021), and LOW LINE (U+005F) characters, if the value of the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">US ASCII에서 사용할 수 없는 문자가 문자 공간 등의 범위 (U + 0020) 느낌표 (U + 0021)를 표시 하는 경우 줄 (U + 005f 인) 문자를 낮은 값은 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>Characters that are prohibited by a specific version of the IDNA standard.</source>
          <target state="translated">문자 IDNA 표준의 특정 버전에 따라 금지 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>For more information about prohibited characters, see <bpt id="p1">[</bpt>RFC 3454: Preparation of Internationalized Strings ("stringprep")<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231873)</ept> for IDNA 2003, and <bpt id="p2">[</bpt>RFC 5982: The Unicode Code Points and Internationalized Domain Names for Applications<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=231877)</ept> for IDNA 2008.</source>
          <target state="translated">여기에 금지 된 문자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>RFC 3454: 준비의 다국어 문자열 ("stringprep")<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231873)</ept> IDNA 2003 및 <bpt id="p2">[</bpt>RFC 5982: The 유니코드 코드 포인트와에 대 한 다국어 도메인 이름 응용 프로그램<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=231877)</ept> IDNA 2008에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> method converts all label separators to FULL STOP (period, U+002E).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> 메서드 전체 중지 (기간, U + 002E)에 모든 레이블 구분 기호를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>If <ph id="ph1">`unicode`</ph> contains no characters outside the US-ASCII character range and no characters within the US-ASCII character range are prohibited, the method returns <ph id="ph2">`unicode`</ph> unchanged.</source>
          <target state="translated">경우 <ph id="ph1">`unicode`</ph> 외부 US-ASCII 문자를 포함 메서드가 반환 하 고 US-ASCII 문자 범위 내의 문자가 없는 문자 범위는 금지 <ph id="ph2">`unicode`</ph> 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%29&gt;</ph> method to convert an array of internationalized domain names to Punycode, which is an encoded equivalent that consists of characters in the US-ASCII character range.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%29&gt;</ph> 메서드 배열을 internationalized domain, Punycode로 변환 US-ASCII 문자 범위에 있는 문자로 구성 된 인코딩된 해당 하는입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29&gt;</ph> method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29&gt;</ph> 메서드 다음 있는 Punycode 도메인 이름을 원래 도메인 이름으로 다시 변환 하지만 원래 레이블 구분 표준 레이블 구분 기호로 대체 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph> is invalid based on the <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> properties, and the IDNA standard.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> 속성과 IDNA 표준에 맞지 않는 경우</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> class supports different versions of the IDNA standard, depending on the operating system in use:</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, <ph id="ph2">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> 클래스는 서로 다른 버전의 IDNA 표준 사용 중인 운영 체제에 따라 지원:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>When run on <ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>, it supports the 2008 version of the IDNA standard outlined by <bpt id="p1">[</bpt>RFC 5891: Internationalized Domain Names in Applications (IDNA): Protocol<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231875)</ept>.</source>
          <target state="translated">실행할 때 <ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>에 설명 된 IDNA 표준의 2008 버전 지원 <bpt id="p1">[</bpt>RFC 5891: 다국어 도메인 이름에 응용 프로그램 IDNA (): 프로토콜<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231875)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>When run on earlier versions of the Windows operating system, it supports the 2003 version of the standard outlined by <bpt id="p1">[</bpt>RFC 3490: Internationalizing Domain Names in Applications (IDNA)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=158110)</ept>.</source>
          <target state="translated">에 설명 된 표준의 2003 버전 지원에 이전 버전의 Windows 운영 체제에서 실행 되는 경우 <bpt id="p1">[</bpt>RFC 3490: 응용 프로그램 (IDNA)에서 도메인 이름을 국제화<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=158110)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String)">
          <source>See <bpt id="p1">[</bpt>Unicode Technical Standard #46: IDNA Compatibility Processing<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=232459)</ept> for the differences in the way these standards handle particular sets of characters.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>유니코드 기술 표준 #46: IDNA 호환성 처리<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=232459)</ept> 방식에서 차이점에 대 한 이러한 표준 특정 문자 집합을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>The string to convert, which consists of one or more domain name labels delimited with label separators.</source>
          <target state="translated">변환할 문자열입니다. 레이블 구분 기호로 구분된 하나 이상의 도메인 이름으로 구성되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>A zero-based offset into <bpt id="p1">&lt;c&gt;</bpt>unicode<ept id="p1">&lt;/c&gt;</ept> that specifies the start of the substring to convert.</source>
          <target state="translated">0부터 시작하는 오프셋으로, <bpt id="p1">&lt;c&gt;</bpt>unicode<ept id="p1">&lt;/c&gt;</ept>에서 변환할 부분 문자열의 시작을 지정합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>The conversion operation continues to the end of the <bpt id="p1">&lt;c&gt;</bpt>unicode<ept id="p1">&lt;/c&gt;</ept> string.</source>
          <target state="translated">변환 작업은 <bpt id="p1">&lt;c&gt;</bpt>유니코드<ept id="p1">&lt;/c&gt;</ept> 문자열의 끝까지 수행됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>Encodes a substring of domain name labels that include Unicode characters outside the US-ASCII character range.</source>
          <target state="translated">US-ASCII 문자 범위 외부의 유니코드 문자를 포함하는 도메인 이름 레이블의 부분 문자열을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>The substring is converted to a string of displayable Unicode characters in the US-ASCII character range and is formatted according to the IDNA standard.</source>
          <target state="translated">하위 문자열은 US-ASCII 문자 범위의 표시 가능한 유니코드 문자열로 변환되고 IDNA 표준에 따라 형식이 지정됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>The equivalent of the substring specified by the <ph id="ph1">&lt;paramref name="unicode" /&gt;</ph> and <ph id="ph2">&lt;paramref name="index" /&gt;</ph> parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 매개 변수로 지정된 부분 문자열에 해당하며, US-ASCII 문자 범위(U+0020 ~ U+007E)의 표시 가능한 유니코드 문자로 구성되고, IDNA 표준에 따라 형식이 지정된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>The <ph id="ph1">`unicode`</ph> and <ph id="ph2">`index`</ph> parameters define a substring with one or more labels that consist of valid Unicode characters.</source>
          <target state="translated"><ph id="ph1">`unicode`</ph> 및 <ph id="ph2">`index`</ph> 매개 변수는 유효한 유니코드 문자로 구성 된 하나 이상의 레이블이 있는 부분 문자열을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>The labels are separated by label separators.</source>
          <target state="translated">레이블은 레이블 구분 기호로 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>The first character of the substring cannot begin with a label separator, but it can include and optionally end with a separator.</source>
          <target state="translated">부분 문자열의 첫 번째 문자는 레이블 구분으로 시작할 수 없습니다 하지만 포함 하 고 필요에 따라 구분 기호로 끝날 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>The label separators are FULL STOP (period, U+002E), IDEOGRAPHIC FULL STOP (U+3002), FULLWIDTH FULL STOP (U+FF0E), and HALFWIDTH IDEOGRAPHIC FULL STOP (U+FF61).</source>
          <target state="translated">레이블 구분 기호는 전체 중지 (기간, U + 002E), 표의 전체 중지 (U + 3002), 전체 중지 (U + FF0E) 전자 및 반자 표의 전체 중지 (U + FF61).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>For example, the domain name "www.adatum.com" consists of the labels, "www", "adatum", and "com", separated by periods.</source>
          <target state="translated">예를 들어 도메인 이름이 "www.adatum.com", "www", "adatum" 레이블과 마침표로 구분 하 여 "com"으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>A label cannot contain any of the following characters:</source>
          <target state="translated">레이블을는 다음 문자를 포함할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>Unicode control characters from U+0001 through U+001F, and U+007F.</source>
          <target state="translated">유니코드 U + 0001 ~ U + 001F 및 U + 007F에서에서 제어 문자.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>Unassigned Unicode characters, depending on the value of the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A&gt;</ph> property.</source>
          <target state="translated">유니코드 문자 값에 따라 할당 되지 않은 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>Non-standard characters in the US-ASCII character range, such as the SPACE (U+0020), EXCLAMATION MARK (U+0021), and LOW LINE (U+005F) characters, depending on the value of the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> property.</source>
          <target state="translated">US ASCII에서 사용할 수 없는 문자가 문자 공간 등의 범위 (U + 0020), 느낌표 (U + 0021), 표시 및 값에 따라 낮은 줄 (U + 005f 인) 문자는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>Characters that are prohibited by a specific version of the IDNA standard.</source>
          <target state="translated">문자 IDNA 표준의 특정 버전에 따라 금지 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>For more information about prohibited characters, see <bpt id="p1">[</bpt>RFC 3454: Preparation of Internationalized Strings ("stringprep")<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231873)</ept> for IDNA 2003, and <bpt id="p2">[</bpt>RFC 5982: The Unicode Code Points and Internationalized Domain Names for Applications<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=231877)</ept> for IDNA 2008.</source>
          <target state="translated">여기에 금지 된 문자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>RFC 3454: 준비의 다국어 문자열 ("stringprep")<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231873)</ept> IDNA 2003 및 <bpt id="p2">[</bpt>RFC 5982: The 유니코드 코드 포인트와에 대 한 다국어 도메인 이름 응용 프로그램<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=231877)</ept> IDNA 2008에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> method converts all label separators to FULL STOP (period, U+002E).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> 메서드 전체 중지 (기간, U + 002E)에 모든 레이블 구분 기호를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>If <ph id="ph1">`unicode`</ph> contains no characters outside the US-ASCII character range and no characters within the US-ASCII character range are prohibited, the method returns <ph id="ph2">`unicode`</ph> unchanged.</source>
          <target state="translated">경우 <ph id="ph1">`unicode`</ph> 외부 US-ASCII 문자를 포함 메서드가 반환 하 고 US-ASCII 문자 범위 내의 문자가 없는 문자 범위는 금지 <ph id="ph2">`unicode`</ph> 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>The following example removes the local part and the @ character from an email address, and passes the resulting domain name to the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29&gt;</ph> method to create a Punycode domain name, which is an encoded equivalent that consists of characters in the US-ASCII character range.</source>
          <target state="translated">다음 예제에서는 로컬 부분을 제거 및 @ 전자 메일 주소를 전달 하는 문자는 결과 도메인 이름에 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29&gt;</ph> 미국 ascii에서 문자로 구성 된 인코딩된 해당 하는 한 Punycode 도메인 이름을 만드는 메서드를 문자 범위입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 메서드 다음 있는 Punycode 도메인 이름을 원래 도메인 이름으로 다시 변환 하지만 원래 레이블 구분 표준 레이블 구분 기호로 대체 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="unicode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 이 <ph id="ph2">&lt;paramref name="unicode" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph> is invalid based on the <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> properties, and the IDNA standard.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> 속성과 IDNA 표준에 맞지 않는 경우</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> class supports different versions of the IDNA standard, depending on the operating system in use:</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, <ph id="ph2">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> 클래스는 서로 다른 버전의 IDNA 표준 사용 중인 운영 체제에 따라 지원:</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>When run on <ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>, it supports the 2008 version of the IDNA standard outlined by <bpt id="p1">[</bpt>RFC 5891: Internationalized Domain Names in Applications (IDNA): Protocol<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231875)</ept>.</source>
          <target state="translated">실행할 때 <ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>에 설명 된 IDNA 표준의 2008 버전 지원 <bpt id="p1">[</bpt>RFC 5891: 다국어 도메인 이름에 응용 프로그램 IDNA (): 프로토콜<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231875)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>When run on earlier versions of the Windows operating system, it supports the 2003 version of the standard outlined by <bpt id="p1">[</bpt>RFC 3490: Internationalizing Domain Names in Applications (IDNA)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=158110)</ept>.</source>
          <target state="translated">에 설명 된 표준의 2003 버전 지원에 이전 버전의 Windows 운영 체제에서 실행 되는 경우 <bpt id="p1">[</bpt>RFC 3490: 응용 프로그램 (IDNA)에서 도메인 이름을 국제화<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=158110)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
          <source>See <bpt id="p1">[</bpt>Unicode Technical Standard #46: IDNA Compatibility Processing<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=232459)</ept> for the differences in the way these standards handle particular sets of characters.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>유니코드 기술 표준 #46: IDNA 호환성 처리<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=232459)</ept> 방식에서 차이점에 대 한 이러한 표준 특정 문자 집합을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>The string to convert, which consists of one or more domain name labels delimited with label separators.</source>
          <target state="translated">변환할 문자열입니다. 레이블 구분 기호로 구분된 하나 이상의 도메인 이름으로 구성되어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>A zero-based offset into <bpt id="p1">&lt;c&gt;</bpt>unicode<ept id="p1">&lt;/c&gt;</ept> that specifies the start of the substring.</source>
          <target state="translated">0부터 시작하는 오프셋으로, <bpt id="p1">&lt;c&gt;</bpt>유니코드<ept id="p1">&lt;/c&gt;</ept>에서 부분 문자열의 시작을 지정합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>The number of characters to convert in the substring that starts at the position specified by  <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> in the <bpt id="p2">&lt;c&gt;</bpt>unicode<ept id="p2">&lt;/c&gt;</ept> string.</source>
          <target state="translated"><bpt id="p2">&lt;c&gt;</bpt>유니코드<ept id="p2">&lt;/c&gt;</ept> 문자열의 <bpt id="p1">&lt;c&gt;</bpt>인덱스<ept id="p1">&lt;/c&gt;</ept>가 지정한 위치에서 시작하는 하위 문자열 중 변환할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>Encodes the specified number of characters in a  substring of domain name labels that include Unicode characters outside the US-ASCII character range.</source>
          <target state="translated">US-ASCII 문자 범위 외부의 유니코드 문자를 포함하는 도메인 이름 레이블의 부분 문자열에 있는 지정된 수의 문자를 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>The substring is converted to a string of displayable Unicode characters in the US-ASCII character range and is formatted according to the IDNA standard.</source>
          <target state="translated">하위 문자열은 US-ASCII 문자 범위의 표시 가능한 유니코드 문자열로 변환되고 IDNA 표준에 따라 형식이 지정됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>The equivalent of the substring specified by the <ph id="ph1">&lt;paramref name="unicode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="index" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="count" /&gt;</ph> parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="count" /&gt;</ph> 매개 변수로 지정된 부분 문자열에 해당하며, US-ASCII 문자 범위(U+0020 ~ U+007E)의 표시 가능한 유니코드 문자로 구성되고, IDNA 표준에 따라 형식이 지정된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">`Unicode`</ph>, <ph id="ph2">`index`</ph>, and <ph id="ph3">`count`</ph> parameters define a substring with one or more labels that consist of valid Unicode characters.</source>
          <target state="translated"><ph id="ph1">`Unicode`</ph>, <ph id="ph2">`index`</ph>, 및 <ph id="ph3">`count`</ph> 매개 변수는 유효한 유니코드 문자로 구성 된 하나 이상의 레이블이 있는 부분 문자열을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>The labels are separated by label separators.</source>
          <target state="translated">레이블은 레이블 구분 기호로 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>The first character of the substring cannot begin with a label separator, but it can include and optionally end with a separator.</source>
          <target state="translated">부분 문자열의 첫 번째 문자는 레이블 구분으로 시작할 수 없습니다 하지만 포함 하 고 필요에 따라 구분 기호로 끝날 수 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>The label separators are FULL STOP (period, U+002E), IDEOGRAPHIC FULL STOP (U+3002), FULLWIDTH FULL STOP (U+FF0E), and HALFWIDTH IDEOGRAPHIC FULL STOP (U+FF61).</source>
          <target state="translated">레이블 구분 기호는 전체 중지 (기간, U + 002E), 표의 전체 중지 (U + 3002), 전체 중지 (U + FF0E) 전자 및 반자 표의 전체 중지 (U + FF61).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>For example, the domain name "www.adatum.com" consists of the labels, "www", "adatum", and "com", separated by periods.</source>
          <target state="translated">예를 들어 도메인 이름이 "www.adatum.com", "www", "adatum" 레이블과 마침표로 구분 하 여 "com"으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>A label cannot contain any of the following characters:</source>
          <target state="translated">레이블을는 다음 문자를 포함할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>Unicode control characters from U+0001 through U+001F, and U+007F.</source>
          <target state="translated">유니코드 U + 0001 ~ U + 001F 및 U + 007F에서에서 제어 문자.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>Unassigned Unicode characters, depending on the value of the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A&gt;</ph> property.</source>
          <target state="translated">유니코드 문자 값에 따라 할당 되지 않은 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.AllowUnassigned%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>Non-standard characters in the US-ASCII character range, such as the SPACE (U+0020), EXCLAMATION MARK (U+0021), and LOW LINE (U+005F) characters, depending on the value of the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> property.</source>
          <target state="translated">US ASCII에서 사용할 수 없는 문자가 문자 공간 등의 범위 (U + 0020), 느낌표 (U + 0021), 표시 및 값에 따라 낮은 줄 (U + 005f 인) 문자는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>Characters that are prohibited by a specific version of the IDNA standard.</source>
          <target state="translated">문자 IDNA 표준의 특정 버전에 따라 금지 됩니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>For more information about prohibited characters, see <bpt id="p1">[</bpt>RFC 3454: Preparation of Internationalized Strings ("stringprep")<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231873)</ept> for IDNA 2003, and <bpt id="p2">[</bpt>RFC 5982: The Unicode Code Points and Internationalized Domain Names for Applications<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=231877)</ept> for IDNA 2008.</source>
          <target state="translated">여기에 금지 된 문자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>RFC 3454: 준비의 다국어 문자열 ("stringprep")<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231873)</ept> IDNA 2003 및 <bpt id="p2">[</bpt>RFC 5982: The 유니코드 코드 포인트와에 대 한 다국어 도메인 이름 응용 프로그램<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=231877)</ept> IDNA 2008에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> method converts all label separators to FULL STOP (period, U+002E).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> 메서드 전체 중지 (기간, U + 002E)에 모든 레이블 구분 기호를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>If the substring contains no characters outside the US-ASCII character range, and no characters within the US-ASCII character range are prohibited, the method returns the substring unchanged.</source>
          <target state="translated">부분 문자열 US-ASCII 문자 범위를 벗어나는 문자를 포함 하는 경우 US-ASCII 문자 범위 내의 문자가 없는 금지 됩니다 메서드 변경 하지 않고 부분 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method to convert an internationalized domain name to a domain name that complies with the IDNA standard.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 다국어 도메인 이름 IDNA 표준을 준수 하는 도메인 이름으로 변환 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method then converts the standardized domain name back into the original domain name, but replaces the original label separators with the standard label separator.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 메서드 다음 표준화 된 도메인 이름을 원래 도메인 이름으로 다시 변환 하지만 원래 레이블 구분 표준 레이블 구분 기호로 대체 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="unicode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 이 <ph id="ph2">&lt;paramref name="unicode" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="unicode" /&gt;</ph> minus <ph id="ph3">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="unicode" /&gt;</ph>의 길이에서 <ph id="ph3">&lt;paramref name="count" /&gt;</ph>를 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph> is invalid based on the <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> properties, and the IDNA standard.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="unicode" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> 속성과 IDNA 표준에 맞지 않는 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> class supports different versions of the IDNA standard, depending on the operating system in use:</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, <ph id="ph2">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> 클래스는 서로 다른 버전의 IDNA 표준 사용 중인 운영 체제에 따라 지원:</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>When run on <ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>, it supports the 2008 version of the IDNA standard outlined by <bpt id="p1">[</bpt>RFC 5891: Internationalized Domain Names in Applications (IDNA): Protocol<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231875)</ept>.</source>
          <target state="translated">실행할 때 <ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph>에 설명 된 IDNA 표준의 2008 버전 지원 <bpt id="p1">[</bpt>RFC 5891: 다국어 도메인 이름에 응용 프로그램 IDNA (): 프로토콜<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=231875)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>When run on earlier versions of the Windows operating system, it supports the 2003 version of the standard outlined by <bpt id="p1">[</bpt>RFC 3490: Internationalizing Domain Names in Applications (IDNA)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=158110)</ept>.</source>
          <target state="translated">에 설명 된 표준의 2003 버전 지원에 이전 버전의 Windows 운영 체제에서 실행 되는 경우 <bpt id="p1">[</bpt>RFC 3490: 응용 프로그램 (IDNA)에서 도메인 이름을 국제화<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=158110)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
          <source>See <bpt id="p1">[</bpt>Unicode Technical Standard #46: IDNA Compatibility Processing<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=232459)</ept> for the differences in the way these standards handle particular sets of characters.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>유니코드 기술 표준 #46: IDNA 호환성 처리<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=232459)</ept> 방식에서 차이점에 대 한 이러한 표준 특정 문자 집합을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetHashCode">
          <source>Returns a hash code for this <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> 개체의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetHashCode">
          <source>One of four 32-bit signed constants derived from the properties of an <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> 개체의 속성에서 파생된 네 개의 부호 있는 32비트 상수 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetHashCode">
          <source>The return value has no special meaning and is not suitable for use in a hash code algorithm.</source>
          <target state="translated">반환 값에는 특별한 의미가 없으므로 해시 코드 알고리즘에 사용하기는 적합하지 않습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetHashCode">
          <source>Override the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetHashCode%2A&gt;</ph> method if your application needs to implement a meaningful hash code algorithm.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetHashCode%2A&gt;</ph> 메서드 응용 프로그램 코드 의미 있는 해시 알고리즘을 구현 하는 경우.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetHashCode">
          <source>The following example assumes that a single string can contain multiple email addresses separated by spaces.</source>
          <target state="translated">다음 예에서는 단일 문자열을 공백으로 구분 된 여러 전자 메일 주소를 포함할 수 있음을 가정 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetHashCode">
          <source>It removes the local part and the @ character from each email address, and passes the resulting domain name to the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method to create a Punycode domain name.</source>
          <target state="translated">로컬 부분을 제거 및 @ 각 전자 메일 주소를 전달 하는 문자는 결과 도메인 이름에 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 메서드 Punycode 도메인 이름을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetHashCode">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method then converts the Punycode domain name back into the original domain name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> 메서드는 다음 있는 Punycode 도메인 이름을 원래 도메인 이름으로 다시 변환 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="T:System.Globalization.IdnMapping">
          <source>Decodes one or more domain name labels encoded according to the IDNA standard to a string of Unicode characters.</source>
          <target state="translated">IDNA 표준에 따라 인코딩된 하나 이상의 도메인 이름 레이블을 유니코드 문자열로 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
          <source>The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</source>
          <target state="translated">디코딩할 문자열로, IDNA 표준에 따라 인코딩된 US-ASCII 문자 범위(U+0020 ~ U+007E)에 있는 하나 이상의 레이블로 구성됩니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
          <source>Decodes a string of one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</source>
          <target state="translated">IDNA 표준에 따라 인코딩된 하나 이상의 도메인 이름 레이블의 문자열을 유니코드 문자열로 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
          <source>The Unicode equivalent of the IDNA substring specified by the <ph id="ph1">&lt;paramref name="ascii" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph> 매개 변수로 지정된 IDNA 부분 문자열에 해당하는 유니코드입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
          <source>For more information about domain names, labels, and label separators, see the remarks for the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">도메인 이름, 레이블 및 레이블 구분 하는 방법에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%29&gt;</ph> method to convert an array of internationalized domain names to Punycode.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%29&gt;</ph> 메서드 배열을 internationalized domain Punycode로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29&gt;</ph> method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29&gt;</ph> 메서드 다음 있는 Punycode 도메인 이름을 원래 도메인 이름으로 다시 변환 하지만 원래 레이블 구분 표준 레이블 구분 기호로 대체 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
          <source><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
          <source><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph> is invalid based on the <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> properties, and the IDNA standard.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> 속성과 IDNA 표준에 맞지 않는 경우</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
          <source>The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</source>
          <target state="translated">디코딩할 문자열로, IDNA 표준에 따라 인코딩된 US-ASCII 문자 범위(U+0020 ~ U+007E)에 있는 하나 이상의 레이블로 구성됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
          <source>A zero-based offset into <bpt id="p1">&lt;c&gt;</bpt>ascii<ept id="p1">&lt;/c&gt;</ept> that specifies the start of the substring to decode.</source>
          <target state="translated">0부터 시작하는 오프셋으로, <bpt id="p1">&lt;c&gt;</bpt>ascii<ept id="p1">&lt;/c&gt;</ept>에서 디코딩할 부분 문자열의 시작을 지정합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
          <source>The decoding operation continues to the end of the <bpt id="p1">&lt;c&gt;</bpt>ascii<ept id="p1">&lt;/c&gt;</ept> string.</source>
          <target state="translated">디코딩 작업은 <bpt id="p1">&lt;c&gt;</bpt>ascii<ept id="p1">&lt;/c&gt;</ept> 문자열의 끝까지 수행됩니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
          <source>Decodes a substring of one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</source>
          <target state="translated">IDNA 표준에 따라 인코딩된 하나 이상의 도메인 이름 레이블의 하위 문자열을 유니코드 문자열로 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
          <source>The Unicode equivalent of the IDNA substring specified by the <ph id="ph1">&lt;paramref name="ascii" /&gt;</ph> and <ph id="ph2">&lt;paramref name="index" /&gt;</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 매개 변수로 지정된 IDNA 부분 문자열에 해당하는 유니코드입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
          <source>For more information about domain names, labels, and label separators, see the remarks for the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">도메인 이름, 레이블 및 레이블 구분 하는 방법에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="ascii" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 이 <ph id="ph2">&lt;paramref name="ascii" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph> is invalid based on the <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> properties, and the IDNA standard.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> 속성과 IDNA 표준에 맞지 않는 경우</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source>The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</source>
          <target state="translated">디코딩할 문자열로, IDNA 표준에 따라 인코딩된 US-ASCII 문자 범위(U+0020 ~ U+007E)에 있는 하나 이상의 레이블로 구성됩니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source>A zero-based offset into <bpt id="p1">&lt;c&gt;</bpt>ascii<ept id="p1">&lt;/c&gt;</ept> that specifies the start of the substring.</source>
          <target state="translated">0부터 시작하는 오프셋으로, <bpt id="p1">&lt;c&gt;</bpt>ascii<ept id="p1">&lt;/c&gt;</ept>에서 부분 문자열의 시작을 지정합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source>The number of characters to convert in the substring that starts at the position specified by <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> in the <bpt id="p2">&lt;c&gt;</bpt>ascii<ept id="p2">&lt;/c&gt;</ept> string.</source>
          <target state="translated"><bpt id="p2">&lt;c&gt;</bpt>ascii<ept id="p2">&lt;/c&gt;</ept> 문자열의 <bpt id="p1">&lt;c&gt;</bpt>인덱스<ept id="p1">&lt;/c&gt;</ept>가 지정한 위치에서 시작하는 하위 문자열 중 변환할 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source>Decodes a substring of a specified length that contains one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</source>
          <target state="translated">IDNA표준에 따라 인코딩된 하나 이상의 도메인 이름 레이블을 포함하는 지정된 길이의 부분 문자열을 유니코드 문자의 문자열로 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source>The Unicode equivalent of the IDNA substring specified by the <ph id="ph1">&lt;paramref name="ascii" /&gt;</ph>, <ph id="ph2">&lt;paramref name="index" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="count" /&gt;</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph>, <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="count" /&gt;</ph> 매개 변수로 지정된 IDNA 부분 문자열에 해당하는 유니코드입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source>For more information about domain names, labels, and label separators, see the remarks for the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">도메인 이름, 레이블 및 레이블 구분 하는 방법에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="ascii" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 이 <ph id="ph2">&lt;paramref name="ascii" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="ascii" /&gt;</ph> minus <ph id="ph3">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="ascii" /&gt;</ph>의 길이에서 <ph id="ph3">&lt;paramref name="count" /&gt;</ph>를 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph> is invalid based on the <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> properties, and the IDNA standard.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ascii" /&gt;</ph>가 <ph id="ph2">&lt;see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /&gt;</ph> 속성과 IDNA 표준에 맞지 않는 경우</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>Gets or sets a value that indicates whether standard or relaxed naming conventions are used in operations performed by members of the current <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Globalization.IdnMapping" /&gt;</ph> 개체의 멤버에서 수행한 작업에 표준 명명 규칙이 사용되었는지 또는 비표준 명명 규칙이 사용되었는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if standard naming conventions are used in operations; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">표준 명명 규칙이 작업에 사용되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>Domain names that follow standard naming rules consist of a specific subset of characters in the US-ASCII character range.</source>
          <target state="translated">표준 명명 규칙을 준수 하는 도메인 이름은 US-ASCII 문자 범위에 있는 문자의 특정 하위 집합을 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>The characters are the letters A through Z, the digits 0 through 9, the hyphen (-) character (U+002D), and the period (.) character.</source>
          <target state="translated">문자는 문자 A-Z, 0 ~ 9 숫자, 하이픈 (-) 문자 (U + 00ad) 및 마침표 (.).</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>The case of the characters is not significant.</source>
          <target state="translated">입력 한 문자의 대/소문자는 중요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>Relaxed naming conventions allow the use of a broader range of ASCII characters, including the space character (U+0020), the exclamation point character (U+0021), and the underbar character (U+005F).</source>
          <target state="translated">완화 된 명명 규칙 보다 광범위 한 ASCII 범위를 사용할 수는 공간을 포함 하 여 문자 (U + 0020), 느낌표 문자 (U + 0021), 및는 밑줄 문자 (U + 005f 인).</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>If <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> is <ph id="ph2">`true`</ph>, only standard characters can appear in a label returned by the <ph id="ph3">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> method.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, 반환한 레이블에 사용할 수 있는 표준 문자만는 <ph id="ph3">&lt;xref:System.Globalization.IdnMapping.GetAscii%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>By default, the value of the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, and an expanded subset of ASCII characters is permitted in a label.</source>
          <target state="translated">기본적으로 값은 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> 속성은 <ph id="ph2">`false`</ph>, ASCII 문자는 확장 된 하위 집합 레이블을에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.IdnMapping&gt;</ph> class prohibits the use of the nondisplayable characters U+0000 through U+001F, and U+007F in domain name labels regardless of the setting of the <ph id="ph2">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.IdnMapping&gt;</ph> 표시할 문자 U + 0000에서 U + 001F의 사용을 금지 하는 클래스 및 U + 007F 도메인 이름에는 설정에 관계 없이 레이블는 <ph id="ph2">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>This prohibition reduces the risk of security attacks such as name spoofing.</source>
          <target state="translated">이러한 금지 이름 스푸핑을 같은 보안 공격의 위험을 줄입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>The following example generates URLs that contain characters in the ASCII range from U+0000 to U+007F and passes them to the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%29&gt;</ph> method of two <ph id="ph2">&lt;xref:System.Globalization.IdnMapping&gt;</ph> objects.</source>
          <target state="translated">다음 예제에서는 ASCII 범위 U + 0000에서 U + 007f까지 문자를 포함 하는 Url을 생성 하 고 파이프라인 연산자는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.GetAscii%28System.String%29&gt;</ph> 두 방식의 <ph id="ph2">&lt;xref:System.Globalization.IdnMapping&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>One object has its <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> property set to <ph id="ph2">`true`</ph>, and the other object has it set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">하나의 개체에 해당 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> 속성이로 설정 <ph id="ph2">`true`</ph>, 다른 개체에으로 설정 하 고 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.IdnMapping.UseStd3AsciiRules">
          <source>The output displays the characters that are invalid when the <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> property is <ph id="ph2">`true`</ph> but valid when it is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">출력 문자가 유효 하지 않은 경우에 표시 됩니다는 <ph id="ph1">&lt;xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph> 되었을 때 하지만 유효한 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>