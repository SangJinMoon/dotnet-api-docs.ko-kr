<Type Name="TextInfo" FullName="System.Globalization.TextInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1036cdd46fb665a46b262b12e7da75aa12492059" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37654370" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextInfo : ICloneable, System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextInfo extends System.Object implements class System.ICloneable, class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class TextInfo&#xA;Implements ICloneable, IDeserializationCallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextInfo : ICloneable, System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type TextInfo = class&#xA;    interface ICloneable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines text properties and behaviors, such as casing, that are specific to a writing system.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 으로 쓰는 쓰기 시스템에는 스크립트 및 언어를 텍스트로 나타내는 데 필요한 직교 규칙의 컬렉션입니다. <xref:System.Globalization.TextInfo> 클래스도 쓰는 쓰기 시스템을 나타냅니다.  
  
 응용 프로그램을 사용 해야 합니다 <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> 속성을 합니다 <xref:System.Globalization.TextInfo> 특정 개체 <xref:System.Globalization.CultureInfo> 개체. 응용 프로그램 보안 결정은 문자열 비교 또는 대/소문자 변경 작업에 따라 종속 하는 경우 사용 해야 합니다 <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> 반환 하는 개체의 속성을 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 작업의 동작에 관계 없이 일치 하는지 확인 하는 속성 운영 체제 문화권 설정입니다.  
  
## <a name="overrides"></a>Overrides  
 사용자는 Windows의 현재 문화권을 사용 하 여 관련 된 값을 재정의 하려면 제어판의 국가 및 언어 옵션 부분을 사용할 수 있습니다. 예를 들어, 다른 형식으로 날짜를 표시 하려면 또는 문화권에 대 한 기본값 이외의 다른 통화를 사용 하는 사용자 수도 수 있습니다. 경우는 <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> 속성이 `true`에서 반환한 개체의 속성 값을 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>, <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType>, 및 <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> 사용자 설정의 속성을 검색할 수도 있습니다. 사용자 설정을 사용 하 여 연결 된 문화권을 사용 하 여 호환 되지 않습니다 합니다 <xref:System.Globalization.CultureInfo>, 예를 들어, 선택한 일정의 하나가 아닌 경우는 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, 메서드의 결과 속성의 값은 정의 되지 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="ANSICodePage">
      <MemberSignature Language="C#" Value="public virtual int ANSICodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ANSICodePage" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextInfo.ANSICodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ANSICodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ANSICodePage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ANSICodePage : int" Usage="System.Globalization.TextInfo.ANSICodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the American National Standards Institute (ANSI) code page used by the writing system represented by the current <see cref="T:System.Globalization.TextInfo" />.</summary>
        <value>현재 나타내는 쓰기 시스템에서 사용 하는 ANSI 코드 페이지 <see cref="T:System.Globalization.TextInfo" />합니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.TextInfo.OEMCodePage" />
        <altmember cref="P:System.Globalization.TextInfo.MacCodePage" />
        <altmember cref="P:System.Globalization.TextInfo.EBCDICCodePage" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="textInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new object that is a copy of the current <see cref="T:System.Globalization.TextInfo" /> object.</summary>
        <returns>A new instance of <see cref="T:System.Object" /> that is the memberwise clone of the current <see cref="T:System.Globalization.TextInfo" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 멤버 수준 복제본이 읽기 전용 아닙니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Globalization.TextInfo.Clone%2A> 고 <xref:System.Globalization.TextInfo.ReadOnly%2A> 메서드.  
  
 [!code-csharp[sys.glob.textinfo.clone#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.textinfo.clone/cs/ro.cs#1)]
 [!code-vb[sys.glob.textinfo.clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.textinfo.clone/vb/ro.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextInfo.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureName : string" Usage="System.Globalization.TextInfo.CultureName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the culture associated with the current <see cref="T:System.Globalization.TextInfo" /> object.</summary>
        <value>문화권의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Globalization.TextInfo> 개체는 특정 문화권에서 만들어집니다 및 <xref:System.Globalization.TextInfo.CultureName%2A> 속성 해당 문화권의 이름을 반환 합니다.  
  
 <xref:System.Globalization.TextInfo.CultureName%2A> 속성은 항상 중립 문화권을 검색 하지 않고 특정 문화권을 반영 합니다. 하는 경우 <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> 중립 문화권에 해당 값을 해당 <xref:System.Globalization.TextInfo.CultureName%2A> 값으로 동일한 언어를 사용 하는 임의의 특정 문화권에 있습니다. 예를 들어 합니다 <xref:System.Globalization.CultureInfo.Name%2A> 영어 중립 문화권에 있지만 해당 "en"을 반환 하는 속성 <xref:System.Globalization.TextInfo.CultureName%2A> 속성에는 "EN-US" 영어 (미국) 문화권에 대해 반환할 수 있습니다. 경우는 <xref:System.Globalization.TextInfo> 개체가 중립 문화권에 값 대신 특정 culture와 연결 된 해당 <xref:System.Globalization.TextInfo.CultureName%2A> 속성은 항상 동일 합니다 <xref:System.Globalization.CultureInfo.Name%2A> 연결 된 속성 값 <xref:System.Globalization.CultureInfo> 개체입니다.  
  
 마찬가지로,는 <xref:System.Globalization.TextInfo.CultureName%2A> 속성은 특정 정렬을 반영 하지 않습니다. 항상 기본 정렬 순서에 해당 합니다. 예를 들어 스페인어 (스페인)에 대 한 기본 정렬 순서는 국제 정렬 순서가입니다. 하는 경우 <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> 이면 es-es_tradnl (스페인어 전통 정렬 순서를 사용 하 여) 해당 <xref:System.Globalization.TextInfo.CultureName%2A> ES-ES (스페인어 기본 국제 정렬 순서를 사용 하 여) 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EBCDICCodePage">
      <MemberSignature Language="C#" Value="public virtual int EBCDICCodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EBCDICCodePage" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextInfo.EBCDICCodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EBCDICCodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EBCDICCodePage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EBCDICCodePage : int" Usage="System.Globalization.TextInfo.EBCDICCodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Extended Binary Coded Decimal Interchange Code (EBCDIC) code page used by the writing system represented by the current <see cref="T:System.Globalization.TextInfo" />.</summary>
        <value>현재 나타내는 쓰기 시스템에서 사용 하는 EBCDIC 코드 페이지 <see cref="T:System.Globalization.TextInfo" />합니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="P:System.Globalization.TextInfo.OEMCodePage" />
        <altmember cref="P:System.Globalization.TextInfo.MacCodePage" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="textInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare with the current <see cref="T:System.Globalization.TextInfo" />.</param>
        <summary>Determines whether the specified object represents the same writing system as the current <see cref="T:System.Globalization.TextInfo" /> object.</summary>
        <returns>
          <see langword="true" /> if <paramref name="obj" /> represents the same writing system as the current <see cref="T:System.Globalization.TextInfo" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 재정의 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="textInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serves as a hash function for the current <see cref="T:System.Globalization.TextInfo" />, suitable for hashing algorithms and data structures, such as a hash table.</summary>
        <returns>A hash code for the current <see cref="T:System.Globalization.TextInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 재정의 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>합니다.  
  
 이 메서드는 <xref:System.Globalization.TextInfo.Equals%2A> 메서드에 따라 동일한 두 개체에 대해 같은 해시 코드를 생성합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.TextInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.TextInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the current <see cref="T:System.Globalization.TextInfo" /> object is read-only.</summary>
        <value>
          <see langword="true" /> 하는 경우 현재 <see cref="T:System.Globalization.TextInfo" /> 개체는 읽기 전용 이면이 고, 그렇지 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Globalization.TextInfo.IsReadOnly%2A> 속성은 `true`, 응용 프로그램의 현재 속성을 변경할 수 없습니다 <xref:System.Globalization.TextInfo> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRightToLeft">
      <MemberSignature Language="C#" Value="public bool IsRightToLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextInfo.IsRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRightToLeft { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRightToLeft : bool" Usage="System.Globalization.TextInfo.IsRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the current <see cref="T:System.Globalization.TextInfo" /> object represents a writing system where text flows from right to left.</summary>
        <value>
          <see langword="true" /> 텍스트를 오른쪽에서 왼쪽으로 쓰면 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.TextInfo.IsRightToLeft%2A> 속성 기준으로 작성 된 텍스트 및 단추, 스크롤 막대와 같은 사용자 인터페이스 요소의 상대 위치를 나타냅니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.TextInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the culture identifier for the culture associated with the current <see cref="T:System.Globalization.TextInfo" /> object.</summary>
        <value>문화권을 식별 하는 번호 현재 <see cref="T:System.Globalization.TextInfo" /> 개체가 생성 되었습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 미리 정의 된 특정 문화권 이름과 및 식별자가이 및 다른 클래스에서 사용 되는 <xref:System.Globalization?displayProperty=nameWithType> 네임 스페이스 Windows API 뿐만 아니라 합니다. 자세한 문화권 정보에 정의 된 [Go Global 개발자 센터에서 국가별 언어 지원 (NLS) API 참조 항목](http://msdn.microsoft.com/goglobal/bb896001.aspx).  
  
 <xref:System.Globalization.TextInfo.LCID%2A> 속성은 항상 중립 문화권 식별자 대신 특정 문화권 식별자를 반영 합니다. 하는 경우 <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=nameWithType> 해당 하는 중립 문화권 식별자로 설정 됩니다 <xref:System.Globalization.TextInfo.LCID%2A> 에 해당 값으로 동일한 언어를 사용 하는 임의의 특정 문화권 식별자입니다. 예를 들어를 <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=nameWithType> 0x0009 "en" 라는 영어 중립 문화권에 대 한 속성을 반환 합니다. 그러나 해당 <xref:System.Globalization.TextInfo.LCID%2A> 속성 0x0409 EN-US 라는 영어 (미국) 문화권에 대해 반환할 수 있습니다.  
  
 마찬가지로,는 <xref:System.Globalization.TextInfo.LCID%2A> 기본 정렬 순서, 항상 해당 속성과 특정 정렬 순서를 반영 하지 않습니다. 예를 들어 스페인어 (스페인)에 대 한 기본 정렬 순서는 국제 정렬 순서가입니다. 하는 경우 <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=nameWithType> "0x040A" (전통 정렬 순서를 사용 하 여 스페인어)로 설정 된 해당 <xref:System.Globalization.TextInfo.LCID%2A> 값은 "0x0C0A" (스페인어 기본 국제 정렬 순서를 사용 하 여).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListSeparator">
      <MemberSignature Language="C#" Value="public virtual string ListSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextInfo.ListSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ListSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ListSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ListSeparator : string with get, set" Usage="System.Globalization.TextInfo.ListSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the string that separates items in a list.</summary>
        <value>목록에 있는 항목을 구분하는 문자열입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
        <exception cref="T:System.InvalidOperationException">In a set operation, the current <see cref="T:System.Globalization.TextInfo" /> object is read-only.</exception>
      </Docs>
    </Member>
    <Member MemberName="MacCodePage">
      <MemberSignature Language="C#" Value="public virtual int MacCodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MacCodePage" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextInfo.MacCodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MacCodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MacCodePage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MacCodePage : int" Usage="System.Globalization.TextInfo.MacCodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Macintosh code page used by the writing system represented by the current <see cref="T:System.Globalization.TextInfo" />.</summary>
        <value>현재가 나타내는 쓰기 시스템에서 사용 하는 Macintosh 코드 페이지 <see cref="T:System.Globalization.TextInfo" />합니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="P:System.Globalization.TextInfo.OEMCodePage" />
        <altmember cref="P:System.Globalization.TextInfo.EBCDICCodePage" />
      </Docs>
    </Member>
    <Member MemberName="OEMCodePage">
      <MemberSignature Language="C#" Value="public virtual int OEMCodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OEMCodePage" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextInfo.OEMCodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OEMCodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OEMCodePage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OEMCodePage : int" Usage="System.Globalization.TextInfo.OEMCodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the original equipment manufacturer (OEM) code page used by the writing system represented by the current <see cref="T:System.Globalization.TextInfo" />.</summary>
        <value>현재 나타내는 쓰기 시스템에서 사용 하는 OEM 코드 페이지 <see cref="T:System.Globalization.TextInfo" />합니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.TextInfo.ANSICodePage" />
        <altmember cref="P:System.Globalization.TextInfo.MacCodePage" />
        <altmember cref="P:System.Globalization.TextInfo.EBCDICCodePage" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextInfo ReadOnly (System.Globalization.TextInfo textInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextInfo ReadOnly(class System.Globalization.TextInfo textInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextInfo.ReadOnly(System.Globalization.TextInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextInfo ^ ReadOnly(System::Globalization::TextInfo ^ textInfo);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.TextInfo -&gt; System.Globalization.TextInfo" Usage="System.Globalization.TextInfo.ReadOnly textInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textInfo" Type="System.Globalization.TextInfo" />
      </Parameters>
      <Docs>
        <param name="textInfo">A <see cref="T:System.Globalization.TextInfo" /> object.</param>
        <summary>Returns a read-only version of the specified <see cref="T:System.Globalization.TextInfo" /> object.</summary>
        <returns>The <see cref="T:System.Globalization.TextInfo" /> object specified by the <paramref name="textInfo" /> parameter, if <paramref name="textInfo" /> is read-only.  -or-  A read-only memberwise clone of the <see cref="T:System.Globalization.TextInfo" /> object specified by <paramref name="textInfo" />, if <paramref name="textInfo" /> is not read-only.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 <xref:System.Globalization.TextInfo.Clone%2A> 고 <xref:System.Globalization.TextInfo.ReadOnly%2A> 메서드.  
  
 [!code-csharp[sys.glob.textinfo.clone#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.textinfo.clone/cs/ro.cs#1)]
 [!code-vb[sys.glob.textinfo.clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.textinfo.clone/vb/ro.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textInfo" /> is null.</exception>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">The source of the deserialization event.</param>
        <summary>Raises the deserialization event when deserialization is complete.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converts the specified character or string to lowercase.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public virtual char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextInfo.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char ToLower(char c);" />
      <MemberSignature Language="F#" Value="abstract member ToLower : char -&gt; char&#xA;override this.ToLower : char -&gt; char" Usage="textInfo.ToLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The character to convert to lowercase.</param>
        <summary>Converts the specified character to lowercase.</summary>
        <returns>The specified character converted to lowercase.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대/소문자 구분의 의미 체계에서 사용 하 여 문화권에 따라 달라 집니다. 고정 문화권에 대 한 대/소문자 구분 의미 체계는 문화권 구분 하지 않습니다. 특정 문화권의 대/소문자 구분 의미 체계는 문화권을 구분 합니다.  
  
 문자열 비교 또는 대/소문자 변경 작업에 종속 되는 보안 결정을 경우 응용 프로그램을 사용할지는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 동작 시스템의 문화권 설정에 관계 없이 일관 되도록 합니다. 그러나, 고정 문화권 시스템 서비스와 같이 문화권에 관계 없이 결과 필요로 하는 프로세스에 의해서만 사용 해야 합니다. 그렇지 않으면 언어가 잘못 되었거나 부적절 한 문화적으로 수 있는 결과 생성 합니다.  
  
 문화권에 대 한 자세한 내용은 참조 하세요. <xref:System.Globalization.CultureInfo>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 문화권 이름은 EN-US를 사용 하 여 영어 (미국) 문화권을 기반으로 문자열의 대/소문자를 변경 합니다.  
  
 [!code-cpp[System.Globalization.TextInfo_casing#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/CPP/textinfo_casing.cpp#1)]
 [!code-csharp[System.Globalization.TextInfo_casing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/CS/textinfo_casing.cs#1)]
 [!code-vb[System.Globalization.TextInfo_casing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/VB/textinfo_casing.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextInfo.ToUpper(System.Char)" />
        <altmember cref="M:System.Globalization.TextInfo.ToTitleCase(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public virtual string ToLower (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToLower(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextInfo.ToLower(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToLower (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToLower(System::String ^ str);" />
      <MemberSignature Language="F#" Value="abstract member ToLower : string -&gt; string&#xA;override this.ToLower : string -&gt; string" Usage="textInfo.ToLower str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string to convert to lowercase.</param>
        <summary>Converts the specified string to lowercase.</summary>
        <returns>The specified string converted to lowercase.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환된 된 문자열은 입력된 문자열의 길이가 달라질 수 있습니다. 대/소문자 구분에 대 한 자세한 내용은 유니코드 기술 보고서 #21 "대/소문자 매핑" 유니코드 컨소시엄에서 게시 참조 (http://www.unicode.org)합니다. 현재 구현에서는 문자열의 길이 유지합니다. 그러나이 동작은 보장 되지 않으며 변경할 수 나중에 구현 합니다.  
  
 대/소문자 구분의 의미 체계에서 사용 하 여 문화권에 따라 달라 집니다. 고정 문화권에 대 한 대/소문자 구분 의미 체계는 문화권 구분 하지 않습니다. 특정 문화권의 대/소문자 구분 의미 체계는 문화권을 구분 합니다.  
  
 문자열 비교 또는 대/소문자 변경 작업에 종속 되는 보안 결정을 경우 응용 프로그램을 사용할지는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 동작 시스템의 문화권 설정에 관계 없이 일관 되도록 합니다. 그러나, 고정 문화권 시스템 서비스와 같이 문화권에 관계 없이 결과 필요로 하는 프로세스에 의해서만 사용 해야 합니다. 그렇지 않으면 언어가 잘못 되었거나 부적절 한 문화적으로 수 있는 결과 생성 합니다.  
  
 문화권에 대 한 자세한 내용은 참조 하세요. <xref:System.Globalization.CultureInfo>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 문화권 이름은 EN-US를 사용 하 여 영어 (미국) 문화권을 기반으로 문자열의 대/소문자를 변경 합니다.  
  
 [!code-cpp[System.Globalization.TextInfo_casing#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/CPP/textinfo_casing.cpp#1)]
 [!code-csharp[System.Globalization.TextInfo_casing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/CS/textinfo_casing.cs#1)]
 [!code-vb[System.Globalization.TextInfo_casing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/VB/textinfo_casing.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is null.</exception>
        <altmember cref="M:System.Globalization.TextInfo.ToUpper(System.Char)" />
        <altmember cref="M:System.Globalization.TextInfo.ToTitleCase(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string that represents the current <see cref="T:System.Globalization.TextInfo" />.</summary>
        <returns>A string that represents the current <see cref="T:System.Globalization.TextInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 재정의 <xref:System.Object.ToString%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToTitleCase">
      <MemberSignature Language="C#" Value="public string ToTitleCase (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToTitleCase(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextInfo.ToTitleCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTitleCase (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToTitleCase(System::String ^ str);" />
      <MemberSignature Language="F#" Value="member this.ToTitleCase : string -&gt; string" Usage="textInfo.ToTitleCase str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string to convert to title case.</param>
        <summary>Converts the specified string to title case (except for words that are entirely in uppercase, which are considered to be acronyms).</summary>
        <returns>The specified string converted to title case.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 첫 글자를 대문자로 된 단어의 첫 번째 문자 및 나머지 문자를 소문자로 변환 합니다. 그러나이 메서드는 현재 머리글자어와 같이 전체적으로 대문자 단어를 변환 하려면 적절 한 대/소문자를 제공 하지 않습니다. 다음 표에서 여러 문자열을 렌더링 하는 방식으로 메서드를 보여 줍니다.  
  
|입력|언어|예상된 결과|실제 결과|  
|-----------|--------------|---------------------|-------------------|  
|전쟁과 평화|영어|전쟁과 평화|전쟁과 평화|  
|Anhalter durch 주사위 Galaxis 당|독일어|Anhalter durch 주사위 Galaxis 당|Anhalter Durch 주사위 Galaxis 당|  
|les naufragés d'ythaq|프랑스어|Les Naufragés d'Ythaq|Les Naufragés D'ythaq|  
  
 위에서 설명한 대로 <xref:System.Globalization.TextInfo.ToTitleCase%2A> 메서드 반드시 언어학적으로 올바른 없는 임의의 대/소문자 구분 동작을 제공 합니다. 언어학적으로 올바른 솔루션이 추가 규칙이 필요 하 고 현재 알고리즘은 다소 간단 하 고 빠르게입니다. 에서는 느린이 API를 나중에 바꿀 수 있는 권한을 보유 합니다.  
  
 현재 구현 된 <xref:System.Globalization.TextInfo.ToTitleCase%2A> 메서드는 입력 문자열과 동일한 길이 출력 문자열을 생성 합니다. 그러나이 동작은 보장 되지 않으며 향후 구현에서 변경 될 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 문화권 이름은 EN-US를 사용 하 여 영어 (미국) 문화권을 기반으로 문자열의 대/소문자를 변경 합니다.  
  
 [!code-cpp[System.Globalization.TextInfo_casing#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/CPP/textinfo_casing.cpp#1)]
 [!code-csharp[System.Globalization.TextInfo_casing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/CS/textinfo_casing.cs#1)]
 [!code-vb[System.Globalization.TextInfo_casing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/VB/textinfo_casing.vb#1)]  
  
 다음 예제에서는 배열의 각 문자열을 <xref:System.Globalization.TextInfo.ToTitleCase%2A> 메서드에 전달합니다. 문자열에는 적절한 제목 문자열과 머리글자어가 포함됩니다. 문자열은 EN-US 문화권의 규칙을 사용 하 여를 대문자로 변환 됩니다.  
  
 [!code-csharp[System.Globalization.TextInfo.ToTitleCase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.textinfo.totitlecase/cs/totitlecase2.cs#1)]
 [!code-vb[System.Globalization.TextInfo.ToTitleCase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.textinfo.totitlecase/vb/totitlecase2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.TextInfo.ToLower(System.Char)" />
        <altmember cref="M:System.Globalization.TextInfo.ToUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converts the specified character or string to uppercase.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public virtual char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextInfo.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char ToUpper(char c);" />
      <MemberSignature Language="F#" Value="abstract member ToUpper : char -&gt; char&#xA;override this.ToUpper : char -&gt; char" Usage="textInfo.ToUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The character to convert to uppercase.</param>
        <summary>Converts the specified character to uppercase.</summary>
        <returns>The specified character converted to uppercase.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대/소문자 구분의 의미 체계에서 사용 하 여 문화권에 따라 달라 집니다. 고정 문화권에 대 한 대/소문자 구분 의미 체계는 문화권 구분 하지 않습니다. 특정 문화권의 대/소문자 구분 의미 체계는 문화권을 구분 합니다.  
  
 문자열 비교 또는 대/소문자 변경 작업에 종속 되는 보안 결정을 경우 응용 프로그램을 사용할지는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 동작 시스템의 문화권 설정에 관계 없이 일관 되도록 합니다. 그러나, 고정 문화권 시스템 서비스와 같이 문화권에 관계 없이 결과 필요로 하는 프로세스에 의해서만 사용 해야 합니다. 그렇지 않으면 언어가 잘못 되었거나 부적절 한 문화적으로 수 있는 결과 생성 합니다.  
  
 문화권에 대 한 자세한 내용은 참조 하세요. <xref:System.Globalization.CultureInfo>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 문화권 이름은 EN-US를 사용 하 여 영어 (미국) 문화권을 기반으로 문자열의 대/소문자를 변경 합니다.  
  
 [!code-cpp[System.Globalization.TextInfo_casing#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/CPP/textinfo_casing.cpp#1)]
 [!code-csharp[System.Globalization.TextInfo_casing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/CS/textinfo_casing.cs#1)]
 [!code-vb[System.Globalization.TextInfo_casing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/VB/textinfo_casing.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextInfo.ToLower(System.Char)" />
        <altmember cref="M:System.Globalization.TextInfo.ToTitleCase(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public virtual string ToUpper (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToUpper(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextInfo.ToUpper(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToUpper (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToUpper(System::String ^ str);" />
      <MemberSignature Language="F#" Value="abstract member ToUpper : string -&gt; string&#xA;override this.ToUpper : string -&gt; string" Usage="textInfo.ToUpper str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string to convert to uppercase.</param>
        <summary>Converts the specified string to uppercase.</summary>
        <returns>The specified string converted to uppercase.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환된 된 문자열은 입력된 문자열의 길이가 달라질 수 있습니다. 대/소문자 구분에 대 한 자세한 내용은 유니코드 기술 보고서 #21 "대/소문자 매핑" 유니코드 컨소시엄에서 게시 참조 (http://www.unicode.org)합니다. 현재 구현에서는 문자열의 길이 유지합니다. 그러나이 동작은 보장 되지 않으며 변경할 수 나중에 구현 합니다.  
  
 대/소문자 구분의 의미 체계에서 사용 하 여 문화권에 따라 달라 집니다. 고정 문화권에 대 한 대/소문자 구분 의미 체계는 문화권 구분 하지 않습니다. 특정 문화권의 대/소문자 구분 의미 체계는 문화권을 구분 합니다.  
  
 문자열 비교 또는 대/소문자 변경 작업에 종속 되는 보안 결정을 경우 응용 프로그램을 사용할지는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 동작 시스템의 문화권 설정에 관계 없이 일관 되도록 합니다. 그러나, 고정 문화권 시스템 서비스와 같이 문화권에 관계 없이 결과 필요로 하는 프로세스에 의해서만 사용 해야 합니다. 그렇지 않으면 언어가 잘못 되었거나 부적절 한 문화적으로 수 있는 결과 생성 합니다.  
  
 문화권에 대 한 자세한 내용은 참조 하세요. <xref:System.Globalization.CultureInfo>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 문화권 이름은 EN-US를 사용 하 여 영어 (미국) 문화권을 기반으로 문자열의 대/소문자를 변경 합니다.  
  
 [!code-cpp[System.Globalization.TextInfo_casing#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/CPP/textinfo_casing.cpp#1)]
 [!code-csharp[System.Globalization.TextInfo_casing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/CS/textinfo_casing.cs#1)]
 [!code-vb[System.Globalization.TextInfo_casing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextInfo_casing/VB/textinfo_casing.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is null.</exception>
        <altmember cref="M:System.Globalization.TextInfo.ToLower(System.Char)" />
        <altmember cref="M:System.Globalization.TextInfo.ToTitleCase(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>