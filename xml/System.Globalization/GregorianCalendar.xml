<Type Name="GregorianCalendar" FullName="System.Globalization.GregorianCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ba6abff9ac3358e0aa7009f50c1159468ad2fa6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GregorianCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit GregorianCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.GregorianCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class GregorianCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class GregorianCalendar : System::Globalization::Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="57572-101">그레고리오력을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="57572-101">Represents the Gregorian calendar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-102">일반 달력에서 두 연대 인식: 기원전</span><span class="sxs-lookup"><span data-stu-id="57572-102">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="57572-103">B.C.E., 및 서 기 또는</span><span class="sxs-lookup"><span data-stu-id="57572-103">or B.C.E., and A.D.</span></span> <span data-ttu-id="57572-104">서 기 또는</span><span class="sxs-lookup"><span data-stu-id="57572-104">or C.E.</span></span> <span data-ttu-id="57572-105">이 구현에서 <xref:System.Globalization.GregorianCalendar> 클래스 현재 연대 A.D. (만 인식</span><span class="sxs-lookup"><span data-stu-id="57572-105">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="57572-106">또는 협정 세계시)입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-106">or C.E.).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="57572-107">사용 하는 방법에 대 한 내용은 <xref:System.Globalization.GregorianCalendar> 클래스 오류 코드 및 기타 달력.NET Framework의 클래스를 참조 하십시오 [달력 작업](~/docs/standard/datetime/working-with-calendars.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-107">For information about using the <xref:System.Globalization.GregorianCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="57572-108">윤년 일반 달력의 연도 나누어 경우가 아니라면 4로 균등 하 게 나눌 수는 정의 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57572-108">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by 4, unless it is divisible by 100.</span></span> <span data-ttu-id="57572-109">그러나 400으로 나눌 수 있는 년 윤년 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-109">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="57572-110">예를 들어, 1900은 윤년이 아니지만 2000은 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-110">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="57572-111">평년은 365 일이 고 윤년 수는 366 일입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-111">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="57572-112">양력 12 개월 28에서 31 일에: (31 일) 년 1 월, 년 2 월 (28 이나 29 일), (31 일) 년 3 월, 년 4 월 (30 일), 월 (31 일), 6 월 (30 일), 7 월 (31 일), (31 일) 8 월, 년 9 월 (30 일), (31 일) 년 10 월 11 월 (30 일) 를 고 12 월 (31 일)입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-112">The Gregorian calendar has 12 months with 28 to 31 days each: January (31 days), February (28 or 29 days), March (31 days), April (30 days), May (31 days), June (30 days), July (31 days), August (31 days), September (30 days), October (31 days), November (30 days), and December (31 days).</span></span> <span data-ttu-id="57572-113">2 월 29 일 윤년 평년 28에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57572-113">February has 29 days during leap years and 28 during common years.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="57572-114">기본적으로 모든 <xref:System.DateTime> 및 <xref:System.DateTimeOffset> 값 express 일반 달력에서 날짜와 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-114">By default, all <xref:System.DateTime> and <xref:System.DateTimeOffset> values express dates and times in the Gregorian calendar.</span></span>  
  
 <span data-ttu-id="57572-115">율리우스력에 대 한 대체 값으로 개발 된 일반 달력 (클래스로 표현 되는 <xref:System.Globalization.JulianCalendar> 클래스) 및 시점은 1582 년 10 월 15 일에 적은 수의 culture에 처음 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57572-115">The Gregorian calendar was developed as a replacement for the Julian calendar (which is represented by the <xref:System.Globalization.JulianCalendar> class) and was first introduced in a small number of cultures on October 15, 1582.</span></span> <span data-ttu-id="57572-116">일반 달력의 문화권의 적용 상태를 앞에 야 하는 기록 날짜를 사용할 때.NET Framework에서 사용할 수 있으면 원래 달력을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-116">When working with historic dates that precede a culture's adoption of the Gregorian calendar, you should use the original calendar if it is available in the .NET Framework.</span></span> <span data-ttu-id="57572-117">예를 들어 덴마크에서에서 변경 율리우스력 일반 달력 (율리우스력)의 2 월 19 또는 3 월 1 일 (그레고리오 력)으로 1700입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-117">For example, Denmark changed from the Julian calendar to the Gregorian calendar on February 19 (in the Julian calendar) or March 1 (in the Gregorian calendar) of 1700.</span></span> <span data-ttu-id="57572-118">이 경우에 일반 달력 채택 이전의 날짜를 율리우스력을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-118">In this case, for dates before the adoption of the Gregorian calendar, you should use the Julian calendar.</span></span> <span data-ttu-id="57572-119">그러나 문화권이 제공에 대 한 내장 지원 한다는 메모는 <xref:System.Globalization.JulianCalendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-119">However, note that no culture offers intrinsic support for the <xref:System.Globalization.JulianCalendar> class.</span></span> <span data-ttu-id="57572-120">사용 해야 합니다는 <xref:System.Globalization.JulianCalendar> 독립 실행형 달력 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-120">You must use the <xref:System.Globalization.JulianCalendar> class as a standalone calendar.</span></span> <span data-ttu-id="57572-121">자세한 내용은 다음을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="57572-121">For more information, see .</span></span>  
  
 <span data-ttu-id="57572-122">다음 예제에서는 1700 율리우스력 덴마크에서 공식적으로 사용 된 마지막 날짜를 율리우스력의 2 월 18, 1 일 이전 일반 달력의 1700 년 3 월 1, 버전 임을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="57572-122">The following example illustrates that February 18, 1700 in the Julian calendar, which is the last day the Julian calendar was officially used in Denmark, is one day earlier than March 1, 1700 in the Gregorian calendar.</span></span>  
  
 [!code-csharp[System.Globalization.GregorianCalendar.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.gregoriancalendar.class/cs/minimum1.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.gregoriancalendar.class/vb/minimum1.vb#1)]  
  
 <span data-ttu-id="57572-123">각 <xref:System.Globalization.CultureInfo> 집합 일정을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-123">Each <xref:System.Globalization.CultureInfo> supports a set of calendars.</span></span> <span data-ttu-id="57572-124"><xref:System.Globalization.CultureInfo.Calendar%2A> 문화권에 대 한 기본 일정을 반환 하는 속성 및 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> 속성 문화권에서 지원 되는 모든 달력을 포함 하는 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-124">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="57572-125">사용 하는 일정을 변경 하는 <xref:System.Globalization.CultureInfo>, 응용 프로그램을 설정할 수는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성을 새 <xref:System.Globalization.Calendar>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-125">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application can set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 <span data-ttu-id="57572-126"><xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> 경우에 약식된 연대 이름에 마침표가 무시는 <xref:System.Globalization.GregorianCalendar> 에서 선택한 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> 고 문화권이 "A.D."</span><span class="sxs-lookup"><span data-stu-id="57572-126"><xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> ignores punctuation in abbreviated era names, only if the <xref:System.Globalization.GregorianCalendar> is selected in <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> and the culture uses "A.D."</span></span> <span data-ttu-id="57572-127">즉, "A.D." 연대 이름으로</span><span class="sxs-lookup"><span data-stu-id="57572-127">as the era name, that is, "A.D."</span></span> <span data-ttu-id="57572-128">"ad"과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="57572-128">is equivalent to "AD".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57572-129">다음 코드 예제에서는 <xref:System.Globalization.DateTimeFormatInfo> 달력이 그레고리오 력이 문화권이 연대 이름 "A.D." 경우에 연대 이름에서 문장 부호를 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-129">The following code example shows that <xref:System.Globalization.DateTimeFormatInfo> ignores the punctuation in the era name, only if the calendar is Gregorian and the culture uses the era name "A.D.".</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="57572-130">
            <see cref="T:System.Globalization.GregorianCalendar" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-130">Initializes a new instance of the <see cref="T:System.Globalization.GregorianCalendar" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GregorianCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57572-131">기본 <see cref="T:System.Globalization.GregorianCalendar" /> 값을 사용하여 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-131">Initializes a new instance of the <see cref="T:System.Globalization.GregorianCalendar" /> class using the default <see cref="T:System.Globalization.GregorianCalendarTypes" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-132">기본 <xref:System.Globalization.GregorianCalendarTypes> 값은 <xref:System.Globalization.GregorianCalendarTypes.Localized>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-132">The default <xref:System.Globalization.GregorianCalendarTypes> value is <xref:System.Globalization.GregorianCalendarTypes.Localized>.</span></span> <span data-ttu-id="57572-133">경우는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Globalization.CultureInfo> 로 설정 되는 <xref:System.Globalization.GregorianCalendar> 으로이 생성자, 날짜와 시간으로에서 지역화 된 언어와 관련 된 언어는 <xref:System.Globalization.CultureInfo>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-133">If the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.CultureInfo> is set to a <xref:System.Globalization.GregorianCalendar> that is created with this constructor, the dates and times are localized in the language associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57572-134">다음 코드 예제에서는 인쇄는 <xref:System.DateTime> 를 사용 하 여는 <xref:System.Globalization.GregorianCalendar> 하는 지역화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-134">The following code example prints a <xref:System.DateTime> using a <xref:System.Globalization.GregorianCalendar> that is localized.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendarLocalized#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarLocalized/CPP/gregorianlocalized.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarLocalized#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarLocalized/CS/gregorianlocalized.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarLocalized#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarLocalized/VB/gregorianlocalized.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.GregorianCalendarTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar (System.Globalization.GregorianCalendarTypes type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Globalization.GregorianCalendarTypes type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As GregorianCalendarTypes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GregorianCalendar(System::Globalization::GregorianCalendarTypes type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Globalization.GregorianCalendarTypes" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="57572-135">만들 달력의 언어 버전을 나타내는 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-135">The <see cref="T:System.Globalization.GregorianCalendarTypes" /> value that denotes which language version of the calendar to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-136">지정된 <see cref="T:System.Globalization.GregorianCalendar" /> 값을 사용하여 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-136">Initializes a new instance of the <see cref="T:System.Globalization.GregorianCalendar" /> class using the specified <see cref="T:System.Globalization.GregorianCalendarTypes" /> value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-137">
            <paramref name="type" />가 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 열거형의 멤버가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-137">
              <paramref name="type" /> is not a member of the <see cref="T:System.Globalization.GregorianCalendarTypes" /> enumeration.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.GregorianCalendarTypes" />
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="57572-138">월을 더할 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-138">The <see cref="T:System.DateTime" /> to which to add months.</span>
          </span>
        </param>
        <param name="months">
          <span data-ttu-id="57572-139">더할 월 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-139">The number of months to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-140">지정된 <see cref="T:System.DateTime" />에서 지정된 월 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-140">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-141">지정된 <see cref="T:System.DateTime" />에 지정된 월 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-141">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-142">결과의 날짜 부분 <xref:System.DateTime> 결과 일 결과 결과 연도의 월에 유효한 날짜가 아닌 경우 영향을 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-142">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="57572-143">결과 결과 연도의 월에 유효 마지막 날짜로 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-143">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="57572-144">결과의 연도 부분 <xref:System.DateTime> 결과 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-144">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="57572-145">이 구현은 현재 연대만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-145">This implementation supports only the current era.</span></span> <span data-ttu-id="57572-146">따라서 <xref:System.ArgumentException> 결과 연도 지정 된 연대를 벗어나는 경우 throw 되 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-146">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="57572-147">결과 시간 부분은 <xref:System.DateTime> 지정 된 동일 하 게 유지 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-147">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="57572-148">예를 들어 지정된 된 월 10 월 31 일,이 경우 지정 된 날짜가 해당 월의 고 값은의 `months` 매개 변수는 6, 결과 연도 하나는 결과 월, 4 월 이며 결과 da 지정 된 연도의 더 y가 4 월의 마지막 날 30 번째 날입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-148">For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.</span></span>  
  
 <span data-ttu-id="57572-149">하는 경우의 값은 `months` 매개 변수는 음수 이면 결과 <xref:System.DateTime> 지정 된 이전 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-149">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="57572-150"><xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-150">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="57572-151">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성은 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-151">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="57572-152">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 그레고리오력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-152">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57572-153">결과 <see cref="T:System.DateTime" />이 지원되는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-153">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-154">
            <paramref name="months" />가 -120000보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-154">
              <paramref name="months" /> is less than -120000.</span>
          </span>
          <span data-ttu-id="57572-155">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-155">-or-</span>
          </span>
          <span data-ttu-id="57572-156">
            <paramref name="months" />가 120000보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-156">
              <paramref name="months" /> is greater than 120000.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="57572-157">연도를 더할 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-157">The <see cref="T:System.DateTime" /> to which to add years.</span>
          </span>
        </param>
        <param name="years">
          <span data-ttu-id="57572-158">더할 연도 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-158">The number of years to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-159">지정된 <see cref="T:System.DateTime" />에서 지정된 연도 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-159">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-160">지정된 <see cref="T:System.DateTime" />에 지정된 연도 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-160">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-161">결과의 날짜 부분 <xref:System.DateTime> 결과 일 결과 결과 연도의 월에 유효한 날짜가 아닌 경우 영향을 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-161">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="57572-162">결과 결과 연도의 월에 유효 마지막 날짜로 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-162">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="57572-163">결과의 월 부분 <xref:System.DateTime> 지정 된 동일 하 게 유지 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-163">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="57572-164">이 구현은 현재 연대만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-164">This implementation supports only the current era.</span></span> <span data-ttu-id="57572-165">따라서 <xref:System.ArgumentException> 결과 연도 지정 된 연대를 벗어나는 경우 throw 되 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-165">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="57572-166">결과 시간 부분은 <xref:System.DateTime> 지정 된 동일 하 게 유지 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-166">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="57572-167">예를 들어 2 월에 28 일 제외 하 고 29 일 할당 했을 때 윤년 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57572-167">For example, February has 28 days, except during leap years when it has 29 days.</span></span> <span data-ttu-id="57572-168">지정한 날짜가 윤년의 2 월 29 번째 날과 값 이면 `years` 1 이면 결과 날짜에는 다음 연도에 대 한 2 월 28 번째 날 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57572-168">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date will be the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="57572-169">경우 `years` 가 음수 이면 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-169">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="57572-170"><xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-170">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="57572-171">유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성은 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-171">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="57572-172">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 그레고리오력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-172">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="57572-173">결과 <see cref="T:System.DateTime" />이 지원되는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-173">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ADEra">
      <MemberSignature Language="C#" Value="public const int ADEra = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ADEra = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.GregorianCalendar.ADEra" />
      <MemberSignature Language="VB.NET" Value="Public Const ADEra As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int ADEra = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="57572-174">현재 연대를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-174">Represents the current era.</span>
          </span>
          <span data-ttu-id="57572-175">이 필드는 상수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-175">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-176">일반 달력에서 두 연대 인식: 기원전</span><span class="sxs-lookup"><span data-stu-id="57572-176">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="57572-177">B.C.E., 및 서 기 또는</span><span class="sxs-lookup"><span data-stu-id="57572-177">or B.C.E., and A.D.</span></span> <span data-ttu-id="57572-178">서 기 또는</span><span class="sxs-lookup"><span data-stu-id="57572-178">or C.E.</span></span> <span data-ttu-id="57572-179">이 구현에서 <xref:System.Globalization.GregorianCalendar> 클래스 현재 연대 A.D. (만 인식</span><span class="sxs-lookup"><span data-stu-id="57572-179">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="57572-180">또는 협정 세계시)입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-180">or C.E.).</span></span> <span data-ttu-id="57572-181">이 필드는 항상 1을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-181">This field always returns 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57572-182">현재 달력이 양력인지, 음력인지 또는 두 가지를 조합한 것인지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-182">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57572-183">항상 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-183">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57572-184">다음 예제에서는 리플렉션을 사용 하 여 각각 인스턴스화하 <xref:System.Globalization.Calendar> 형식 및.NET Framework에서 발견 된 값을 표시 해당 <xref:System.Globalization.Calendar.AlgorithmType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-184">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarType">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.GregorianCalendarTypes CalendarType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.GregorianCalendarTypes CalendarType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.CalendarType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CalendarType As GregorianCalendarTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::GregorianCalendarTypes CalendarType { System::Globalization::GregorianCalendarTypes get(); void set(System::Globalization::GregorianCalendarTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.GregorianCalendarTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57572-185">현재 <see cref="T:System.Globalization.GregorianCalendarTypes" />의 언어 버전을 나타내는 <see cref="T:System.Globalization.GregorianCalendar" /> 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-185">Gets or sets the <see cref="T:System.Globalization.GregorianCalendarTypes" /> value that denotes the language version of the current <see cref="T:System.Globalization.GregorianCalendar" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57572-186">현재 <see cref="T:System.Globalization.GregorianCalendarTypes" />의 언어 버전을 나타내는 <see cref="T:System.Globalization.GregorianCalendar" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-186">A <see cref="T:System.Globalization.GregorianCalendarTypes" /> value that denotes the language version of the current <see cref="T:System.Globalization.GregorianCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57572-187">다음 코드 예제에서는 문화권에서 지 원하는 GregorianCalendar 언어 버전을 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="57572-187">The following code example demonstrates how to determine the GregorianCalendar language version supported by the culture.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CPP/gregoriancalendartypes.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CS/gregoriancalendartypes.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/VB/gregoriancalendartypes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-188">set 작업에 지정된 값이 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 열거형의 멤버가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-188">The value specified in a set operation is not a member of the <see cref="T:System.Globalization.GregorianCalendarTypes" /> enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57572-189">set 작업에서 현재 인스턴스가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-189">In a set operation, the current instance is read-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.GregorianCalendarTypes" />
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57572-190">
            <see cref="T:System.Globalization.GregorianCalendar" />에 있는 연대의 목록을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-190">Gets the list of eras in the <see cref="T:System.Globalization.GregorianCalendar" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57572-191">
            <see cref="T:System.Globalization.GregorianCalendar" />에 있는 연대를 나타내는 정수의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-191">An array of integers that represents the eras in the <see cref="T:System.Globalization.GregorianCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-192">일반 달력에서 두 연대 인식: 기원전</span><span class="sxs-lookup"><span data-stu-id="57572-192">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="57572-193">B.C.E., 및 서 기 또는</span><span class="sxs-lookup"><span data-stu-id="57572-193">or B.C.E., and A.D.</span></span> <span data-ttu-id="57572-194">서 기 또는</span><span class="sxs-lookup"><span data-stu-id="57572-194">or C.E.</span></span> <span data-ttu-id="57572-195">이 구현에서 <xref:System.Globalization.GregorianCalendar> 클래스 현재 연대 A.D. (만 인식</span><span class="sxs-lookup"><span data-stu-id="57572-195">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="57572-196">또는 협정 세계시)입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-196">or C.E.).</span></span> <span data-ttu-id="57572-197">이 속성에는 항상 하나의 요소만 있는 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-197">This property always returns an array with only one element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="57572-198">읽을 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-198">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-199">지정된 <see cref="T:System.DateTime" />의 날짜(월 기준)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-199">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-200">
            <paramref name="time" />의 날짜(월 기준)를 나타내는 1에서 31 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-200">An integer from 1 to 31 that represents the day of the month in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57572-201">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 그레고리오력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-201">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="57572-202">읽을 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-202">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-203">지정된 <see cref="T:System.DateTime" />의 요일을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-203">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-204">
            <paramref name="time" />의 요일을 나타내는 <see cref="T:System.DayOfWeek" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-204">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-205"><xref:System.DayOfWeek> 값은 일요일, 월요일, 화요일, 수요일, 목요일, 금요일, 토요일 및 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-205">The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57572-206">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 그레고리오력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-206">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="57572-207">읽을 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-207">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-208">지정된 <see cref="T:System.DateTime" />의 날짜(연도 기준)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-208">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-209">
            <paramref name="time" />의 날짜(연도 기준)를 나타내는 1에서 366 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-209">An integer from 1 to 366 that represents the day of the year in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-210">날짜의 해당 연도의 첫 번째 날부터의 일 수로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-210">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="57572-211">예를 들어 <xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A> , 1을 반환 하는 첫 번째 월의 첫 번째 날에 대 한 및 <xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A> 해당 연도의 총 일 수를 반환 하는 지난 달의 마지막 날에 대 한 동일한 값으로 반환 되는 <xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-211">For example, <xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value returned by <xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57572-212">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 그레고리오력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-212">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="57572-213">연도를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-213">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="57572-214">월을 나타내는 1에서 12 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-214">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="57572-215">연대를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-215">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-216">지정된 연대의 지정된 연도에 있는 지정된 월의 날짜 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-216">Returns the number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-217">지정된 연대의 지정된 연도에 있는 지정된 월의 날짜 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-217">The number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-218">예를 들어이 메서드 28 이나 29 2 월 (`month` = 2) 인지 여부에 따라 `year` 윤년 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-218">For example, this method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57572-219">다음 코드 예제에서는 각 5 년에는 각 연대에서 두 번째 달 간</span><span class="sxs-lookup"><span data-stu-id="57572-219">The following code example calls GetDaysInMonth for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInMonth/CPP/gregoriancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInMonth/CS/gregoriancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInMonth/VB/gregoriancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-220">
            <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-220">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-221">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-221">-or-</span>
          </span>
          <span data-ttu-id="57572-222">
            <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-222">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-223">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-223">-or-</span>
          </span>
          <span data-ttu-id="57572-224">
            <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-224">
              <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="57572-225">연도를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-225">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="57572-226">연대를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-226">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-227">지정된 연대에 있는 지정된 연도의 날짜 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-227">Returns the number of days in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-228">지정된 연대에 있는 지정된 연도의 날짜 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-228">The number of days in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-229">365 또는 여부에 따라 366이이 메서드가 반환 하는 예를 들어 `year` 윤년 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-229">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57572-230">다음 코드 예제에서는 5 년 각 연대에 대해를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-230">The following code example calls GetDaysInYear for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInYear/CPP/gregoriancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInYear/CS/gregoriancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInYear/VB/gregoriancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-231">
            <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-231">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-232">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-232">-or-</span>
          </span>
          <span data-ttu-id="57572-233">
            <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-233">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="57572-234">읽을 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-234">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-235">지정된 <see cref="T:System.DateTime" />의 연대를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-235">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-236">
            <paramref name="time" />의 연대를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-236">An integer that represents the era in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-237">일반 달력에서 두 연대 인식: 기원전</span><span class="sxs-lookup"><span data-stu-id="57572-237">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="57572-238">B.C.E., 및 서 기 또는</span><span class="sxs-lookup"><span data-stu-id="57572-238">or B.C.E., and A.D.</span></span> <span data-ttu-id="57572-239">서 기 또는</span><span class="sxs-lookup"><span data-stu-id="57572-239">or C.E.</span></span> <span data-ttu-id="57572-240">이 구현에서 <xref:System.Globalization.GregorianCalendar> 클래스 현재 연대 A.D. (만 인식</span><span class="sxs-lookup"><span data-stu-id="57572-240">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="57572-241">또는 협정 세계시)입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-241">or C.E.).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57572-242">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 그레고리오력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-242">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="57572-243">연도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-243">A year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="57572-244">연대입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-244">An era.</span>
          </span>
          <span data-ttu-id="57572-245">
            <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> 또는 <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-245">Specify either <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> or <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-246">지정한 연도 및 연대의 윤월을 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-246">Calculates the leap month for a specified year and era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-247">그레고리오력이 윤월을 인식하지 않기 때문에 항상 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-247">Always 0 because the Gregorian calendar does not recognize leap months.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-248">
            <paramref name="year" />가 그레고리오력의 연도 1보다 작거나 그레고리오력의 연도 9999보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-248">
              <paramref name="year" /> is less than the Gregorian calendar year 1 or greater than the Gregorian calendar year 9999.</span>
          </span>
          <span data-ttu-id="57572-249">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-249">-or-</span>
          </span>
          <span data-ttu-id="57572-250">
            <paramref name="era" />이 <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> 또는 <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-250">
              <paramref name="era" /> is not <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> or <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="57572-251">읽을 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-251">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-252">지정된 <see cref="T:System.DateTime" />의 월을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-252">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-253">
            <paramref name="time" />의 월을 나타내는 1에서 12 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-253">An integer from 1 to 12 that represents the month in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57572-254">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 그레고리오력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-254">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="57572-255">연도를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-255">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="57572-256">연대를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-256">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-257">지정된 연대에 있는 지정된 연도의 월 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-257">Returns the number of months in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-258">지정된 연대에 있는 지정된 연도의 월 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-258">The number of months in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57572-259">다음 코드 예제에서는 5 년 각 연대에 대해를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-259">The following code example calls GetMonthsInYear for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetMonthsInYear/CPP/gregoriancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetMonthsInYear/CS/gregoriancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetMonthsInYear/VB/gregoriancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-260">
            <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-260">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-261">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-261">-or-</span>
          </span>
          <span data-ttu-id="57572-262">
            <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-262">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="57572-263">읽을 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-263">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-264">지정된 <see cref="T:System.DateTime" />의 연도를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-264">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-265">
            <paramref name="time" />의 연도를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-265">An integer that represents the year in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57572-266">다음 코드 예제에서는 값의 여러 구성 요소를 표시 한 <xref:System.DateTime> 그레고리오력에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-266">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="57572-267">연도를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-267">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="57572-268">월을 나타내는 1에서 12 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-268">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="57572-269">일을 나타내는 1에서 31 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-269">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="57572-270">연대를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-270">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-271">지정된 연대의 지정된 날짜가 윤일인지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-271">Determines whether the specified date in the specified era is a leap day.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-272">지정된 날짜가 윤일이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-272">
              <see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-273">일반 달력의 윤년 4로 100으로 균등 하 게 나눌 수는 연도로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-273">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="57572-274">그러나 400으로 나눌 수 있는 년 윤년 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-274">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="57572-275">예를 들어, 1900은 윤년이 아니지만 2000은 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-275">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="57572-276">평년은 365 일이 고 윤년 수는 366 일입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-276">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="57572-277">윤 일은 윤년에만 있는 일입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-277">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="57572-278">일반 달력에서 2 월 29 번째 날은 유일한 윤 일입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-278">In the Gregorian calendar, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57572-279">다음 코드 예제에서는 5 년이 각 연대에서 두 번째 달 (2 월)의 마지막 날에 대 한 IsLeapDay를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-279">The following code example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapDay/CPP/gregoriancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapDay/CS/gregoriancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapDay/VB/gregoriancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-280">
            <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-280">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-281">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-281">-or-</span>
          </span>
          <span data-ttu-id="57572-282">
            <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-282">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-283">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-283">-or-</span>
          </span>
          <span data-ttu-id="57572-284">
            <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-284">
              <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-285">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-285">-or-</span>
          </span>
          <span data-ttu-id="57572-286">
            <paramref name="day" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-286">
              <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="57572-287">연도를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-287">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="57572-288">월을 나타내는 1에서 12 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-288">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="57572-289">연대를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-289">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-290">지정된 연대의 지정된 연도에 있는 지정된 월이 윤월인지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-290">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-291">이 메서드는 파생 클래스에서 다시 정의되지 않는 한 항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-291">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-292">일반 달력의 윤년 4로 100으로 균등 하 게 나눌 수는 연도로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-292">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="57572-293">그러나 400으로 나눌 수 있는 년 윤년 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-293">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="57572-294">예를 들어, 1900은 윤년이 아니지만 2000은 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-294">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="57572-295">평년은 365 일이 고 윤년 수는 366 일입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-295">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="57572-296">윤 월은 윤년에만 있는 한 전체 월.</span><span class="sxs-lookup"><span data-stu-id="57572-296">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="57572-297">일반 달력 윤 월은 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57572-297">The Gregorian calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57572-298">다음 코드 예제에서는 모든 월 5 년이 현재 연대에 대해 간을 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-298">The following code example calls IsLeapMonth for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapMonth/CPP/gregoriancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapMonth/CS/gregoriancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapMonth/VB/gregoriancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-299">
            <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-299">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-300">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-300">-or-</span>
          </span>
          <span data-ttu-id="57572-301">
            <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-301">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-302">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-302">-or-</span>
          </span>
          <span data-ttu-id="57572-303">
            <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-303">
              <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="57572-304">연도를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-304">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="57572-305">연대를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-305">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-306">지정된 연대의 지정된 연도가 윤년인지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-306">Determines whether the specified year in the specified era is a leap year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-307">지정된 연도가 윤년이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-307">
              <see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-308">일반 달력의 윤년 4로 100으로 균등 하 게 나눌 수는 연도로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-308">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="57572-309">그러나 400으로 나눌 수 있는 년 윤년 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-309">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="57572-310">예를 들어, 1900은 윤년이 아니지만 2000은 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-310">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="57572-311">평년은 365 일이 고 윤년 수는 366 일입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-311">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57572-312">다음 코드 예제에서는 5 년에 각 연대의 IsLeapYear를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-312">The following code example calls IsLeapYear for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapYear/CPP/gregoriancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapYear/CS/gregoriancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapYear/VB/gregoriancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-313">
            <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-313">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-314">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-314">-or-</span>
          </span>
          <span data-ttu-id="57572-315">
            <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-315">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57572-316">
            <see cref="T:System.Globalization.GregorianCalendar" /> 형식에서 지원하는 마지막 날짜와 시간을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-316">Gets the latest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57572-317">날짜와 시간에서 지원 되는 <see cref="T:System.Globalization.GregorianCalendar" /> 서 기 9999 년 12 월 31 일의 마지막 순간 형식</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-317">The latest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type, which is the last moment of December 31, 9999 C.E.</span>
          </span>
          <span data-ttu-id="57572-318">와 동일 <see cref="F:System.DateTime.MaxValue" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-318">and is equivalent to <see cref="F:System.DateTime.MaxValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57572-319">다음 코드 예제는 최소값이 고 달력의 최대값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57572-319">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CPP/gregoriancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CS/gregoriancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/VB/gregoriancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57572-320">
            <see cref="T:System.Globalization.GregorianCalendar" /> 형식에서 지원하는 시작 날짜와 시간을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-320">Gets the earliest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57572-321">시작 날짜와 시간에서 지원 되는 <see cref="T:System.Globalization.GregorianCalendar" /> 서 기 0001 년 1 월 1 일의 첫 번째 순간 형식</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-321">The earliest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type, which is the first moment of January 1, 0001 C.E.</span>
          </span>
          <span data-ttu-id="57572-322">와 동일 <see cref="F:System.DateTime.MinValue" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-322">and is equivalent to <see cref="F:System.DateTime.MinValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-323">하지만의 값은 <xref:System.Globalization.GregorianCalendar.MinSupportedDateTime%2A> 속성은 서 기 0001 년 1 월 1 일의 첫 번째 순간, 일반 달력 시점은, 1582 년 10 월 15 일 때까지 도입 되지 않았기 및 느린 continent 및 전 세계 유럽 전체에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57572-323">Although the value of the <xref:System.Globalization.GregorianCalendar.MinSupportedDateTime%2A> property is the first moment of January 1, 0001 C.E., the Gregorian calendar was not introduced until October 15, 1582, and its adoption throughout the European continent and worldwide was slow.</span></span> <span data-ttu-id="57572-324">대부분의 유럽, 미국 및 오스트레일리아 대륙에 문화권 율리우스력으로 표시 된 사용 되는 일반 달력을 채택 될 때까지 <xref:System.Globalization.JulianCalendar> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-324">Until they adopted the Gregorian calendar, most cultures in the European, American, and Australian continents used the Julian calendar, which is represented by the <xref:System.Globalization.JulianCalendar> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57572-325">다음 코드 예제는 최소값이 고 달력의 최대값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="57572-325">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CPP/gregoriancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CS/gregoriancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/VB/gregoriancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="57572-326">연도를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-326">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="57572-327">월을 나타내는 1에서 12 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-327">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="57572-328">일을 나타내는 1에서 31 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-328">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="57572-329">시간을 나타내는 0에서 23 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-329">An integer from 0 to 23 that represents the hour.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="57572-330">분을 나타내는 0에서 59 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-330">An integer from 0 to 59 that represents the minute.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="57572-331">초를 나타내는 0에서 59 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-331">An integer from 0 to 59 that represents the second.</span>
          </span>
        </param>
        <param name="millisecond">
          <span data-ttu-id="57572-332">밀리초를 나타내는 0에서 999 사이의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-332">An integer from 0 to 999 that represents the millisecond.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="57572-333">연대를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-333">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-334">지정된 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-334">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-335">현재 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-335">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-336">
            <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-336">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-337">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-337">-or-</span>
          </span>
          <span data-ttu-id="57572-338">
            <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-338">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-339">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-339">-or-</span>
          </span>
          <span data-ttu-id="57572-340">
            <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-340">
              <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-341">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-341">-or-</span>
          </span>
          <span data-ttu-id="57572-342">
            <paramref name="day" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-342">
              <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="57572-343">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-343">-or-</span>
          </span>
          <span data-ttu-id="57572-344">
            <paramref name="hour" />가 0보다 작거나 23보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-344">
              <paramref name="hour" /> is less than zero or greater than 23.</span>
          </span>
          <span data-ttu-id="57572-345">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-345">-or-</span>
          </span>
          <span data-ttu-id="57572-346">
            <paramref name="minute" />가 0보다 작거나 59보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-346">
              <paramref name="minute" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="57572-347">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-347">-or-</span>
          </span>
          <span data-ttu-id="57572-348">
            <paramref name="second" />가 0보다 작거나 59보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-348">
              <paramref name="second" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="57572-349">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-349">-or-</span>
          </span>
          <span data-ttu-id="57572-350">
            <paramref name="millisecond" />가 0보다 작거나 999보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-350">
              <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="57572-351">변환할 연도를 나타내는 두 자릿수 또는 네 자릿수의 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-351">A two-digit or four-digit integer that represents the year to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57572-352">
            <see cref="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" /> 속성으로 해당 세기를 확인하여 지정된 연도를 네 자릿수 연도로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-352">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57572-353">
            <paramref name="year" />를 네 자릿수로 표시하는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-353">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-354"><xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> 두 자릿수 연도로 표시할 수 있는 100 년 범위의 마지막 연도입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-354"><xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year.</span></span> <span data-ttu-id="57572-355">세기 두 자리를 찾아 확인 `year` 100 년 간의 범위 내에서.</span><span class="sxs-lookup"><span data-stu-id="57572-355">The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range.</span></span> <span data-ttu-id="57572-356">예를 들어 경우 <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> 설정 2029로 100 년 범위의 1930에서 2029 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-356">For example, if <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="57572-357">따라서 30의 2 자리 숫자 값 2 자리 값은 29 2029로 해석 됩니다 1930으로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-357">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="57572-358"><xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A> 두 자리 연도 또는 네 자리 연도 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-358"><xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="57572-359">두 자리 연도 값 (100 미만)를 전달 하면이 메서드는 값에 따라 네 자릿수 값을 변환 하는 <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> 적절 한 네 자리 연도 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57572-359">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="57572-360">응용 프로그램에서 지원 되는 달력 사이의 범위 내에 있는 네 자리 연도 값을 제공 하는 경우 <xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A>, 메서드는 실제 입력된 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-360">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="57572-361">지원 되는 달력 범위 밖에 있는 4 자리 값을 제공 하는 응용 프로그램 또는 음수 값을 제공 하는 경우 메서드는 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-361">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-362">
            <paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-362">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57572-363">두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-363">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57572-364">두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-364">The last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57572-365">이 속성에는 2 자리 연도를를 4 자리 연도 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57572-365">This property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="57572-366">예를 들어이 속성을 2029로 설정 하는 경우는 100 년 간의 범위는 1930에서 2029 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-366">For example, if this property is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="57572-367">따라서 30의 2 자리 숫자 값 2 자리 값은 29 2029로 해석 됩니다 1930으로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-367">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="57572-368">이 속성의 초기 값은 제어판의 국가 및 언어 옵션 부분에 설정에서 파생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-368">The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="57572-369">그러나 해당 정보의 수명 동안 변경할 수는 <xref:System.AppDomain>합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-369">However, that information can change during the life of the <xref:System.AppDomain>.</span></span> <span data-ttu-id="57572-370"><xref:System.Globalization.GregorianCalendar> 클래스 시스템 설정의 변경 내용을 검색 하지 않는 자동으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-370">The <xref:System.Globalization.GregorianCalendar> class does not detect changes in the system settings automatically.</span></span>  
  
 <span data-ttu-id="57572-371">응용 프로그램을 99 2 자리 연도 문자 그대로 해석 되도록 임을 나타내려면이 값을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57572-371">The application should set this value to 99 to indicate that 2-digit years are to be taken literally.</span></span> <span data-ttu-id="57572-372">예를 들어이 속성이 99, 100 년 간의 범위는 0 (아닙니다: 대부분의 달력에 대 한 유효한 값)에서 99 사이로.</span><span class="sxs-lookup"><span data-stu-id="57572-372">For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.</span></span> <span data-ttu-id="57572-373">따라서 30의 2 자리 숫자 값은 30로 해석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57572-373">Therefore, a 2-digit value of 30 is interpreted as 30.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57572-374">set 작업에서 지정된 값이 99보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-374">The value specified in a set operation is less than 99.</span>
          </span>
          <span data-ttu-id="57572-375">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-375">-or-</span>
          </span>
          <span data-ttu-id="57572-376">set 작업에서 지정한 값이 8011 (또는 <see langword="MaxSupportedDateTime.Year" />)보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-376">The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57572-377">set 작업에서 현재 인스턴스가 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57572-377">In a set operation, the current instance is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>