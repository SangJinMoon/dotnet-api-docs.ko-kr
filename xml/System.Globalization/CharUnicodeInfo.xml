<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ccce2910a4409725858671f177b4fdfb5609d233" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36486789" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class CharUnicodeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CharUnicodeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CharUnicodeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo abstract sealed" />
  <TypeSignature Language="F#" Value="type CharUnicodeInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1382a-101">Retrieves information about a Unicode character.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1382a-101">Retrieves information about a Unicode character.</span>
      </span>
      <span data-ttu-id="1382a-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1382a-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1382a-103">[유니코드 표준](http://go.microsoft.com/fwlink/?linkid=37123) 유니코드 문자 범주 수를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-103">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a number of Unicode character categories.</span></span> <span data-ttu-id="1382a-104">예를 들어 문자는 대문자, 소문자, 10 진수 숫자, 문자 번호, 단락 구분 기호, 수학 기호 또는 통화 기호도 분류할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-104">For example, a character might be categorized as an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a paragraph separator, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="1382a-105">응용 프로그램 문자 범주를 사용 하 여 구문 분석 또는 정규식을 사용한 부분 문자열을 추출 하는 등의 문자열 기반 작업을 제어 하는 데 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-105">Your application can use the character category to govern string-based operations, such as parsing or extracting substring with regular expressions.</span></span> <span data-ttu-id="1382a-106"><xref:System.Globalization.UnicodeCategory> 열거형은 가능한 문자 범주를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-106">The <xref:System.Globalization.UnicodeCategory> enumeration defines the possible character categories.</span></span>  
  
 <span data-ttu-id="1382a-107">사용 하면는 <xref:System.Globalization.CharUnicodeInfo> 얻으려고 클래스는 <xref:System.Globalization.UnicodeCategory> 특정 문자에 대 한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-107">You use the <xref:System.Globalization.CharUnicodeInfo> class to obtain the <xref:System.Globalization.UnicodeCategory> value for a specific character.</span></span> <span data-ttu-id="1382a-108"><xref:System.Globalization.CharUnicodeInfo> 클래스 다음 유니코드 문자 값을 반환 하는 메서드를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-108">The <xref:System.Globalization.CharUnicodeInfo> class defines methods that return the following Unicode character values:</span></span>  
  
-   <span data-ttu-id="1382a-109">문자 또는 서로게이트 쌍 속해 있는 특정 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-109">The specific category to which a character or surrogate pair belongs.</span></span> <span data-ttu-id="1382a-110">반환 되는 값의 멤버인는 <xref:System.Globalization.UnicodeCategory> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-110">The value returned is a member of the <xref:System.Globalization.UnicodeCategory> enumeration.</span></span>  
  
-   <span data-ttu-id="1382a-111">숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-111">Numeric value.</span></span> <span data-ttu-id="1382a-112">분수, 아래 첨자, 위 첨자, 로마 숫자, 통화 분자, 원된 숫자, 및 스크립트 관련 숫자를 포함 하 여 숫자 문자에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-112">Applies only to numeric characters, including fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
-   <span data-ttu-id="1382a-113">숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-113">Digit value.</span></span> <span data-ttu-id="1382a-114">다른 숫자와 번호 매기기 시스템에 숫자를 나타내는 데 사용할 수 있는 숫자에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-114">Applies to numeric characters that can be combined with other numeric characters to represent a whole number in a numbering system.</span></span>  
  
-   <span data-ttu-id="1382a-115">10 진수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-115">Decimal digit value.</span></span> <span data-ttu-id="1382a-116">10 진수 (밑수 10) 시스템의 10 진수 숫자를 나타내는 문자에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-116">Applies only to characters that represent decimal digits in the decimal (base 10) system.</span></span> <span data-ttu-id="1382a-117">10 진수는 0부터 9까지 10 개의 숫자 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-117">A decimal digit can be one of ten digits, from zero through nine.</span></span> <span data-ttu-id="1382a-118">이러한 문자는의 멤버는 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-118">These characters are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="1382a-119">또한는 <xref:System.Globalization.CharUnicodeInfo> 클래스는 여러 가지 다른.NET Framework 형식 및 문자 분류를 사용 하는 방법에 의해 내부적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-119">In addition, the <xref:System.Globalization.CharUnicodeInfo> class is used internally by a number of other .NET Framework types and methods that rely on character classification.</span></span> <span data-ttu-id="1382a-120">여기에는 다음이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-120">These include:</span></span>  
  
-   <span data-ttu-id="1382a-121"><xref:System.Globalization.StringInfo> 문자열의 단일 문자 대신 텍스트 요소를 사용 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-121">The <xref:System.Globalization.StringInfo> class, which works with textual elements instead of single characters in a string.</span></span>  
  
-   <span data-ttu-id="1382a-122">오버 로드는 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드를 한 문자 또는 서로게이트 쌍이 속한 범주를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-122">The overloads of the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method, which determine the category to which a character or surrogate pair belongs.</span></span>  
  
-   <span data-ttu-id="1382a-123">[문자 클래스](~/docs/standard/base-types/character-classes-in-regular-expressions.md) 에서 인식 <xref:System.Text.RegularExpressions.Regex>,.NET Framework의 정규식 엔진입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-123">The [character classes](~/docs/standard/base-types/character-classes-in-regular-expressions.md) recognized by <xref:System.Text.RegularExpressions.Regex>, the .NET Framework's regular expression engine.</span></span>  
  
 <span data-ttu-id="1382a-124">응용 프로그램에서이 클래스를 사용 하는 경우 유지 염두에서 다음 프로그래밍 사용 시 고려 사항에서 <xref:System.Char> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-124">When using this class in your applications, keep in mind the following programming considerations for using the <xref:System.Char> type.</span></span> <span data-ttu-id="1382a-125">종류를 사용 하기 어려울 수 있습니다 및 문자열은 일반적으로 언어 콘텐츠를 나타내기 위한 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-125">The type can be difficult to use, and strings are generally preferable for representing linguistic content.</span></span>  
  
-   <span data-ttu-id="1382a-126">A <xref:System.Char> 개체는 단일 문자 항상 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-126">A <xref:System.Char> object does not always correspond to a single character.</span></span> <span data-ttu-id="1382a-127">하지만 <xref:System.Char> 일부 문자 (예: 문자 소 클러스터 및 서로게이트 쌍) 두 개 이상의 utf-16 코드 단위의 구성, 형식은 단일 16 비트 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-127">Although the <xref:System.Char> type represents a single 16-bit value, some characters (such as grapheme clusters and surrogate pairs) consist of two or more UTF-16 code units.</span></span> <span data-ttu-id="1382a-128">자세한 내용은의 "개체 및 유니코드 문자 Char" 참조의 <xref:System.String> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-128">For more information, see "Char Objects and Unicode Characters" in the <xref:System.String> class.</span></span>  
  
-   <span data-ttu-id="1382a-129">"Character"의 개념 유연한 이기도합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-129">The notion of a "character" is also flexible.</span></span> <span data-ttu-id="1382a-130">문자는 문자 모양으로 생각할 종종 하지만 많은 문자 모양 여러 코드 포인트를 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-130">A character is often thought of as a glyph, but many glyphs require multiple code points.</span></span> <span data-ttu-id="1382a-131">Ä 수 예를 들어 2로 나타낼 코드 포인트가 ("a" 및 결합 diaeresis 즉 U + 0308,), 또는 a 단일 코드 포인트 ("ä" 또는 U + 00A4).</span><span class="sxs-lookup"><span data-stu-id="1382a-131">For example, ä can be represented either by two code points ("a" plus U+0308, which is the combining diaeresis), or by a single code point ("ä" or U+00A4).</span></span> <span data-ttu-id="1382a-132">일부 언어에는 많은 문자, 문자 및 언어적 콘텐츠 표시에 혼동 될 수 있는 여러 코드 포인트를 필요로 하는 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-132">Some languages have many letters, characters, and glyphs that require multiple code points, which can cause confusion in linguistic content representation.</span></span> <span data-ttu-id="1382a-133">예를 들어 (U + 03B0, 그리스어 소문자 웁실론 dialytika 및 tonos) ΰ 있지만 해당 하는 대문자 문자가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-133">For example, there is a ΰ (U+03B0, Greek small letter upsilon with dialytika and tonos), but there is no equivalent capital letter.</span></span> <span data-ttu-id="1382a-134">원래 값을 검색 하기만 하면 이러한 값을 대문자로 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-134">Uppercasing such a value simply retrieves the original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1382a-135">다음 코드 예제에서는 다양 한 유형의 문자에 대 한 각 메서드에 의해 반환 된 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-135">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <span data-ttu-id="1382a-136">
        <para>인식된 된 문자 및 속하는 특정 범주는 유니코드 표준에서 정의 되어 있으며는 유니코드 표준의 버전 간에 변경할 수 있습니다. 특정 버전의.NET Framework의 문자 분류.NET Framework 실행 되는 기본 운영 체제에 관계 없이 유니코드 표준의 단일 버전을 기반으로 합니다. 다음 표에서.NET Framework 이후 버전의 [! INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]는 유니코드 표준의 버전 문자를 분류 하는 데 사용 합니다.  <list type="table"><listheader><term> .NET framework 버전 </term><description> 유니코드 표준의 버전 </description></listheader><item><term> [! INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] </term><description> [유니코드 표준, 버전 5.0.0] (https://www.unicode.org/versions/Unicode5.0.0/) </description></item><item><term> [! INCLUDE[net_v45](~/includes/net-v45-md.md)] </term><description> [유니코드 표준, 버전 5.0.0] (https://www.unicode.org/versions/Unicode5.0.0/) </description></item><item><term> [! INCLUDE[net_v451](~/includes/net-v451-md.md)] </term><description> [유니코드 표준, 버전 5.0.0] (https://www.unicode.org/versions/Unicode5.0.0/) </description></item><item><term> [! INCLUDE[net_v452](~/includes/net-v452-md.md)] </term><description> [유니코드 표준, 버전 5.0.0] (https://www.unicode.org/versions/Unicode5.0.0/) </description></item><item><term> [! INCLUDE[net_v46](~/includes/net-v46-md.md)] </term><description> [유니코드 표준, 버전 6.3.0] (https://www.unicode.org/versions/Unicode6.3.0/) </description></item><item><term> [! INCLUDE[net_v461](~/includes/net-v461-md.md)] </term><description> [유니코드 표준, 버전 6.3.0] (https://www.unicode.org/versions/Unicode6.3.0/) </description></item><item><term> [! INCLUDE[net_v462](~/includes/net-v462-md.md)] </term><description> [유니코드 표준을, 버전 8.0.0] (https://www.unicode.org/versions/Unicode8.0.0/) </description></item></list> 유니코드의 각 버전 표준에는 이전 버전 이후 변경 유니코드 문자 데이터베이스에 대 한 정보가 포함 됩니다.               유니코드 문자 데이터베이스에서 사용 되는 <see cref="T:System.Globalization.CharUnicodeInfo" /> 문자를 분류 하기 위한 클래스입니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="1382a-136">
          <para>Recognized characters and the specific categories to which they belong are defined by the Unicode standard and can change from one version of the Unicode Standard to another. Categorization of characters in a particular version of the  .NET Framework  is based on a single version of the Unicode Standard regardless of the underlying operating system on which the .NET Framework is running. The following table lists versions of the .NET Framework since the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and the versions of the Unicode Standard  used to classify characters.  <list type="table"><listheader><term> .NET Framework version  </term><description> Version of the Unicode Standard  </description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]  </term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  </description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]  </term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  </description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]  </term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  </description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]  </term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  </description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]  </term><description> [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  </description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]  </term><description> [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  </description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]  </term><description> [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)  </description></item></list>  Each version of the Unicode standard includes information on changes to the Unicode character database since the previous version. The Unicode character database is used by the <see cref="T:System.Globalization.CharUnicodeInfo" /> class for categorizing characters.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="N:System.Text" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetDecimalDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1382a-137">Gets the decimal digit value of a numeric Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-137">Gets the decimal digit value of a numeric Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetDecimalDigitValue : char -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDecimalDigitValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="1382a-138">The Unicode character for which to get the decimal digit value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-138">The Unicode character for which to get the decimal digit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1382a-139">Gets the decimal digit value of the specified numeric character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-139">Gets the decimal digit value of the specified numeric character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1382a-140">The decimal digit value of the specified numeric character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-140">The decimal digit value of the specified numeric character.</span>
          </span>
          <span data-ttu-id="1382a-141">-or-  -1, if the specified character is not a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-141">-or-  -1, if the specified character is not a decimal digit.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1382a-142">이 메서드는 해당 정수 값으로 10 진수 숫자를 나타내는 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-142">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="1382a-143">10 진수 숫자에는 문자는 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 범주를 10 개 숫자 0부터 9까지 시스템 번호는 10 진수 (밑수 10) 중 하나를 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-143">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="1382a-144">부터 U + 1049 (U + 0030 (숫자 0) (숫자 9), U + 0039 U + 0660 (아랍-인도어 식 숫자가 0) U + 0669 (아랍-인도어 식 숫자가 9), U + 07 C 0 NKO 자리 U + 07C 9 (NKO 자리부터 9) 및 U + 1040 (미얀마 숫자 0)를 통해 통해 등의 문자를 포함 미얀마 자리 9)입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-144">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="1382a-145">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](http://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-145">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1382a-146">다음 코드 예제에서는 다양 한 유형의 문자에 대 한 각 메서드에 의해 반환 된 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-146">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetDecimalDigitValue : string * int -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDecimalDigitValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="1382a-147">The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-147">The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1382a-148">The index of the Unicode character for which to get the decimal digit value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-148">The index of the Unicode character for which to get the decimal digit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1382a-149">Gets the decimal digit value of the numeric character at the specified index of the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-149">Gets the decimal digit value of the numeric character at the specified index of the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1382a-150">The decimal digit value of the numeric character at the specified index of the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-150">The decimal digit value of the numeric character at the specified index of the specified string.</span>
          </span>
          <span data-ttu-id="1382a-151">-or-  -1, if the character at the specified index of the specified string is not a decimal digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-151">-or-  -1, if the character at the specified index of the specified string is not a decimal digit.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1382a-152">이 메서드는 해당 정수 값으로 10 진수 숫자를 나타내는 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-152">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="1382a-153">10 진수 숫자에는 문자는 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 범주를 10 개 숫자 0부터 9까지 시스템 번호는 10 진수 (밑수 10) 중 하나를 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-153">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="1382a-154">부터 U + 1049 (U + 0030 (숫자 0) (숫자 9), U + 0039 U + 0660 (아랍-인도어 식 숫자가 0) U + 0669 (아랍-인도어 식 숫자가 9), U + 07 C 0 NKO 자리 U + 07C 9 (NKO 자리부터 9) 및 U + 1040 (미얀마 숫자 0)를 통해 통해 등의 문자를 포함 미얀마 자리 9)입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-154">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="1382a-155">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](http://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-155">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1382a-156">다음 코드 예제에서는 다양 한 유형의 문자에 대 한 각 메서드에 의해 반환 된 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-156">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1382a-157">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-157">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1382a-158">
            <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-158">
              <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1382a-159">Gets the digit value of a numeric Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-159">Gets the digit value of a numeric Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetDigitValue : char -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDigitValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="1382a-160">The Unicode character for which to get the digit value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-160">The Unicode character for which to get the digit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1382a-161">Gets the digit value of the specified numeric character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-161">Gets the digit value of the specified numeric character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1382a-162">The digit value of the specified numeric character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-162">The digit value of the specified numeric character.</span>
          </span>
          <span data-ttu-id="1382a-163">-or-  -1, if the specified character is not a digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-163">-or-  -1, if the specified character is not a digit.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1382a-164">숫자 값은 숫자 문자 자리 수로 사용할 수 있는에 적용 되는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-164">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="1382a-165">숫자는 번호 매기기 시스템에 숫자를 나타내기 위해 다른 자릿수와 결합 될 수 있는 숫자 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-165">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="1382a-166">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](http://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-166">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1382a-167">다음 코드 예제에서는 다양 한 유형의 문자에 대 한 각 메서드에 의해 반환 된 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-167">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetDigitValue : string * int -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDigitValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="1382a-168">The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-168">The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1382a-169">The index of the Unicode character for which to get the digit value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-169">The index of the Unicode character for which to get the digit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1382a-170">Gets the digit value of the numeric character at the specified index of the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-170">Gets the digit value of the numeric character at the specified index of the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1382a-171">The digit value of the numeric character at the specified index of the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-171">The digit value of the numeric character at the specified index of the specified string.</span>
          </span>
          <span data-ttu-id="1382a-172">-or-  -1, if the character at the specified index of the specified string is not a digit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-172">-or-  -1, if the character at the specified index of the specified string is not a digit.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1382a-173">숫자 값은 숫자 문자 자리 수로 사용할 수 있는에 적용 되는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-173">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="1382a-174">숫자는 번호 매기기 시스템에 숫자를 나타내기 위해 다른 자릿수와 결합 될 수 있는 숫자 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-174">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="1382a-175">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](http://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-175">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1382a-176">다음 코드 예제에서는 다양 한 유형의 문자에 대 한 각 메서드에 의해 반환 된 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-176">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1382a-177">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-177">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1382a-178">
            <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-178">
              <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1382a-179">Gets the numeric value associated with a Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-179">Gets the numeric value associated with a Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (ch As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.Globalization.CharUnicodeInfo.GetNumericValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="1382a-180">The Unicode character for which to get the numeric value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-180">The Unicode character for which to get the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1382a-181">Gets the numeric value associated with the specified character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-181">Gets the numeric value associated with the specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1382a-182">The numeric value associated with the specified character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-182">The numeric value associated with the specified character.</span>
          </span>
          <span data-ttu-id="1382a-183">-or-  -1, if the specified character is not a numeric character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-183">-or-  -1, if the specified character is not a numeric character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1382a-184">숫자 값은 분수, 아래 첨자, 위 첨자, 로마 숫자, 통화 분자, 원된 숫자, 및 스크립트 관련 숫자를 포함 하는 숫자 문자에만 적용 되는 유니코드 문자 속성.</span><span class="sxs-lookup"><span data-stu-id="1382a-184">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="1382a-185">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](http://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-185">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="1382a-186"><xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> 메서드 가정 `ch` 단일 언어 문자에 해당 하 고 해당 문자가 10 진수 이면 변환할 수 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-186">The <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method assumes that `ch` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="1382a-187">그러나 일부 유니코드 표준의 표기 하 두 <xref:System.Char> 서로게이트 쌍을 형성 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-187">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="1382a-188">예를 들어, 코드 포인트 U + 10107 ~ U + 10133 번호 지정 시스템 게 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-188">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="1382a-189">다음 예제에서는 <xref:System.Char.ConvertFromUtf32%2A> 메서드 AEGEAN 숫자 1을 나타내는 문자열을 인스턴스화합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-189">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="1382a-190">예제에서 출력으로의 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> 상위 서로게이트 또는 하위 서로게이트가 문자의 전달 되는 경우 메서드는-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-190">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="1382a-191">다음 코드 예제에서는 다양 한 유형의 문자에 대 한 각 메서드에 의해 반환 된 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-191">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.Globalization.CharUnicodeInfo.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="1382a-192">The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-192">The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1382a-193">The index of the Unicode character for which to get the numeric value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-193">The index of the Unicode character for which to get the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1382a-194">Gets the numeric value associated with the character at the specified index of the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-194">Gets the numeric value associated with the character at the specified index of the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1382a-195">The numeric value associated with the character at the specified index of the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-195">The numeric value associated with the character at the specified index of the specified string.</span>
          </span>
          <span data-ttu-id="1382a-196">-or-  -1, if the character at the specified index of the specified string is not a numeric character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-196">-or-  -1, if the character at the specified index of the specified string is not a numeric character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1382a-197">숫자 값은 분수, 아래 첨자, 위 첨자, 로마 숫자, 통화 분자, 원된 숫자, 및 스크립트 관련 숫자를 포함 하는 숫자 문자에만 적용 되는 유니코드 문자 속성.</span><span class="sxs-lookup"><span data-stu-id="1382a-197">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="1382a-198">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](http://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-198">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="1382a-199">경우는 <xref:System.Char> 개체에서 문자 위치 `index` 은 유효한 서로게이트 쌍의 첫 번째 문자는 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> 메서드 확인 여부를 서로게이트 쌍 숫자으로 구성 하 고, 그렇지 않으면 해당 숫자 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-199">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit, and, if it does, returns its numeric value.</span></span> <span data-ttu-id="1382a-200">예를 들어, 코드 포인트 U + 10107 ~ U + 10133 번호 지정 시스템 게 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-200">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="1382a-201">다음 예제에서는 <xref:System.Char.ConvertFromUtf32%2A> 메서드 Aegean 각 번호를 나타내는 문자열을 인스턴스화합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-201">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="1382a-202">예제에서 출력으로의 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> Aegean 숫자의 상위 서로게이트 전달 되는 경우 메서드는 정확한 숫자 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-202">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="1382a-203">그러나 하위 서로게이트, 전달 되는 경우에서 격리에만 하위 서로게이트 문자와-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-203">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#3)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="1382a-204">다음 코드 예제에서는 다양 한 유형의 문자에 대 한 각 메서드에 의해 반환 된 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-204">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1382a-205">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-205">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1382a-206">
            <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-206">
              <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1382a-207">Gets the Unicode category of a Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-207">Gets the Unicode category of a Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (ch As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char ch);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="1382a-208">The Unicode character for which to get the Unicode category.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-208">The Unicode character for which to get the Unicode category.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1382a-209">Gets the Unicode category of the specified character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-209">Gets the Unicode category of the specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1382a-210">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-210">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1382a-211">유니코드 문자 범주로 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-211">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="1382a-212">문자 범주는 해당 속성 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-212">A character's category is one of its properties.</span></span> <span data-ttu-id="1382a-213">예를 들어, 대문자, 소문자, 10 진수 숫자, 문자 번호, 커넥터 문장 부호, 수학 기호 또는 통화 기호는 문자 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-213">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="1382a-214"><xref:System.Globalization.UnicodeCategory> 클래스는 유니코드 문자 범주를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-214">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="1382a-215">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](http://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-215">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="1382a-216"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> 메서드 가정 `ch` 단일 언어 문자에 해당 하 고 해당 범주를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-216">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> method assumes that `ch` corresponds to a single linguistic character and returns its category.</span></span> <span data-ttu-id="1382a-217">즉, 서로게이트 쌍을 반환 <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> 서로게이트 속한 범주 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-217">This means that, for surrogate pairs, it returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> instead of the category to which the surrogate belongs.</span></span> <span data-ttu-id="1382a-218">예를 들어 Ugaritic 알파벳 코드 포인트 U + 10380 U + 1039F 차지합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-218">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="1382a-219">다음 예제에서는 <xref:System.Char.ConvertFromUtf32%2A> 메서드를 인스턴스화하는 Ugaritic 알파벳의 첫 번째 문자 UGARITIC 문자로 ALPA (U + 10380)을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-219">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="1382a-220">예제에서 출력으로의 <xref:System.Char.IsNumber%28System.Char%29> 메서드 반환 `false` 경우 상위 서로게이트 또는 하위 서로게이트가 문자의 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-220">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either the high surrogate or the low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#1)]  
  
 <span data-ttu-id="1382a-221"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> 동일한 항상 반환 하지 않는 <xref:System.Globalization.UnicodeCategory> 값는 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드 매개 변수로 특정 문자를 전달 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="1382a-221">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="1382a-222"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드는 유니코드 표준의 현재 버전을 반영 하도록 디자인 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-222">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="1382a-223">반면에 있지만 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드는 일반적으로 유니코드 표준의 현재 버전을 반영 하 고, 문자의 범주는 표준의 이전 버전에 따라 반환할 수 있습니다 또는 현재 표준에서 다른 범주를 반환할 수 있습니다 이전 버전과 호환성을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-223">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1382a-224">다음 코드 예제에서는 다양 한 유형의 문자에 대 한 각 메서드에 의해 반환 된 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-224">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (codePoint As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(int codePoint);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : int -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="1382a-225">The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-225">The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1382a-226">The index of the Unicode character for which to get the Unicode category.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-226">The index of the Unicode character for which to get the Unicode category.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1382a-227">Gets the Unicode category of the character at the specified index of the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-227">Gets the Unicode category of the character at the specified index of the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1382a-228">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-228">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1382a-229">유니코드 문자 범주로 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-229">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="1382a-230">문자 범주는 해당 속성 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-230">A character's category is one of its properties.</span></span> <span data-ttu-id="1382a-231">예를 들어, 대문자, 소문자, 10 진수 숫자, 문자 번호, 커넥터 문장 부호, 수학 기호 또는 통화 기호는 문자 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-231">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="1382a-232"><xref:System.Globalization.UnicodeCategory> 클래스는 유니코드 문자 범주를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-232">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="1382a-233">유니코드 문자에 대 한 자세한 내용은 참조는 [유니코드 표준](http://go.microsoft.com/fwlink/?linkid=37123)합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-233">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="1382a-234">경우는 <xref:System.Char> 개체에서 문자 위치 `index` 은 유효한 서로게이트 쌍의 첫 번째 문자는 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> 반환 하는 대신 서로게이트 쌍의 유니코드 범주를 반환 하는 메서드 <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-234">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns the Unicode category of the surrogate pair instead of returning <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1382a-235">예를 들어 Ugaritic 알파벳 코드 포인트 U + 10380 U + 1039F 차지합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-235">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="1382a-236">다음 예제에서는 <xref:System.Char.ConvertFromUtf32%2A> 메서드를 인스턴스화하는 Ugaritic 알파벳의 첫 번째 문자 UGARITIC 문자로 ALPA (U + 10380)을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-236">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="1382a-237">예제에서 출력으로의 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> 메서드 반환 <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> 이 문자를 나타내는 서로게이트 쌍을 고려의 high surrogate 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-237">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> if it is passed the high surrogate of this character, which indicates that it considers the surrogate pair.</span></span> <span data-ttu-id="1382a-238">그러나 하위 서로게이트, 전달 되는 경우 격리 된 상태에서 하위 서로게이트만 고려 않으며 반환 <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-238">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#2)]  
  
 <span data-ttu-id="1382a-239"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드 반환 하지 않는 경우도 동일한 <xref:System.Globalization.UnicodeCategory> 값는 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드 매개 변수로 특정 문자를 전달 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="1382a-239">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="1382a-240"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드는 유니코드 표준의 현재 버전을 반영 하도록 디자인 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-240">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="1382a-241">반면에 있지만 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 메서드는 일반적으로 유니코드 표준의 현재 버전을 반영 하 고, 문자의 범주는 표준의 이전 버전에 따라 반환할 수 있습니다 또는 현재 표준에서 다른 범주를 반환할 수 있습니다 이전 버전과 호환성을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-241">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1382a-242">다음 코드 예제에서는 다양 한 유형의 문자에 대 한 각 메서드에 의해 반환 된 값을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1382a-242">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1382a-243">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-243">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1382a-244">
            <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1382a-244">
              <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
  </Members>
</Type>