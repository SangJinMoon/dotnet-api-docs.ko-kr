<Type Name="IWrappedMember" FullName="Microsoft.JScript.IWrappedMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df886faccdc2c3cbb998da6c1b4750af55a33bbc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36663017" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWrappedMember" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWrappedMember" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IWrappedMember" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWrappedMember" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWrappedMember" />
  <TypeSignature Language="F#" Value="type IWrappedMember = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>멤버가 정의되어 있는 개체에 액세스하기 위한 메서드를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 래핑된 각 개체에는 하나의 멤버(필드, 속성 또는 메서드)에 대한 정보와 함께 멤버가 정의되어 있는 인스턴스화된 개체의 복사본이 들어 있습니다. 이렇게 하면 멤버가 들어 있지 않은 다른 개체에서도 멤버를 저장한 다음 해당 값을 고유한 값인 것처럼 반환할 수 있습니다.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Reflection.FieldInfo" />
    <altmember cref="T:System.Reflection.PropertyInfo" />
    <altmember cref="T:System.Reflection.MethodInfo" />
    <altmember cref="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)" />
  </Docs>
  <Members>
    <Member MemberName="GetWrappedObject">
      <MemberSignature Language="C#" Value="public object GetWrappedObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetWrappedObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IWrappedMember.GetWrappedObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWrappedObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetWrappedObject();" />
      <MemberSignature Language="F#" Value="abstract member GetWrappedObject : unit -&gt; obj" Usage="iWrappedMember.GetWrappedObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>클래스에서 구현되는 경우 멤버가 정의되어 있는 개체를 반환합니다.</summary>
        <returns>멤버가 정의되어 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 래핑된 각 개체에는 하나의 멤버(필드, 속성 또는 메서드)에 대한 정보와 함께 멤버가 정의되어 있는 인스턴스화된 개체의 복사본이 들어 있습니다. 이렇게 하면 멤버가 들어 있지 않은 다른 개체에서도 멤버를 저장한 다음 해당 값을 고유한 값인 것처럼 반환할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.PropertyInfo" />
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>