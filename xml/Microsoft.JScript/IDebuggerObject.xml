<Type Name="IDebuggerObject" FullName="Microsoft.JScript.IDebuggerObject">
  <TypeSignature Language="C#" Value="public interface IDebuggerObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebuggerObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebuggerObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebuggerObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebuggerObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("8E93D770-6168-4b68-B896-A71B74C7076A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bdf3a-101">디버거 개체에 대한 정보를 제공하는 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-101">Defines methods that provide information about debugger objects.</span></span> <span data-ttu-id="bdf3a-102">이 인터페이스는 디버거에서 구현한 모든 <see cref="T:System.Reflection.IReflect" /> 개체에 의해 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-102">This interface is implemented by all <see cref="T:System.Reflection.IReflect" /> objects that are implemented by the debugger.</span></span> <span data-ttu-id="bdf3a-103">현재 이 인터페이스는 스크립팅 엔진으로 이러한 개체에 플래그만 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-103">Currently, this interface serves only to flag these objects as such to the scripting engine.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.IDebugType" />
    <altmember cref="T:Microsoft.JScript.DynamicFieldInfo" />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:Microsoft.JScript.ScriptFunction" />
  </Docs>
  <Members>
    <Member MemberName="HasEnumerableMember">
      <MemberSignature Language="C#" Value="public bool HasEnumerableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasEnumerableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebuggerObject.HasEnumerableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasEnumerableMember (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasEnumerableMember(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bdf3a-104">검색할 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-104">The name of the member to search for.</span></span></param>
        <summary><span data-ttu-id="bdf3a-105">클래스에서 구현되는 경우 현재 개체에 지정된 이름이 있고 열거가 가능한 멤버가 있는지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-105">When implemented in a class, determines whether the current object has a member that has the specified name and that is enumerable.</span></span></summary>
        <returns>
          <span data-ttu-id="bdf3a-106">현재 개체에 <paramref name="name" />으로 명명된 열거 가능한 멤버가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-106"><see langword="true" /> if the current object has an enumerable member named <paramref name="name" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IDebugType" />
        <altmember cref="T:Microsoft.JScript.DynamicFieldInfo" />
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="IsCOMObject">
      <MemberSignature Language="C#" Value="public bool IsCOMObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCOMObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebuggerObject.IsCOMObject" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCOMObject () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCOMObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bdf3a-107">클래스에서 구현되는 경우 현재 개체가 관리되는 개체에 대한 프록시인지 아니면 실제 COM 개체인지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-107">When implemented in a class, determines whether the current object is a true COM object or a proxy to a managed object.</span></span></summary>
        <returns>
          <span data-ttu-id="bdf3a-108">현재 개체가 COM 개체이면 <see langword="true" />이고, 현재 개체가 관리되는 개체에 대한 프록시이면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-108"><see langword="true" /> if the current object is a COM object; <see langword="false" /> if the current object is a proxy to a managed object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IDebugType" />
        <altmember cref="T:Microsoft.JScript.DynamicFieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public bool IsEqual (Microsoft.JScript.IDebuggerObject o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEqual(class Microsoft.JScript.IDebuggerObject o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebuggerObject.IsEqual(Microsoft.JScript.IDebuggerObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEqual (o As IDebuggerObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEqual(Microsoft::JScript::IDebuggerObject ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Microsoft.JScript.IDebuggerObject" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="bdf3a-109">같은지를 테스트할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-109">The object to test for equality.</span></span></param>
        <summary><span data-ttu-id="bdf3a-110">클래스에서 구현되는 경우 현재 개체가 지정된 개체와 동일한지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-110">When implemented in a class, determines whether the current object is equal to the specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="bdf3a-111">현재 개체가 <paramref name="o" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-111"><see langword="true" /> if the current object is the same as <paramref name="o" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IDebugType" />
        <altmember cref="T:Microsoft.JScript.DynamicFieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsScriptFunction">
      <MemberSignature Language="C#" Value="public bool IsScriptFunction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsScriptFunction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebuggerObject.IsScriptFunction" />
      <MemberSignature Language="VB.NET" Value="Public Function IsScriptFunction () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsScriptFunction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bdf3a-112">클래스에서 구현되는 경우 현재 개체가 관리되는 JScript 함수에 대한 프록시인지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-112">When implemented in a class, determines whether the current object is a proxy to a managed JScript function.</span></span></summary>
        <returns>
          <span data-ttu-id="bdf3a-113">현재 개체가 관리되는 JScript 함수에 대한 프록시이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-113"><see langword="true" /> if the current object is a proxy to a managed JScript function; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IDebugType" />
        <altmember cref="T:Microsoft.JScript.DynamicFieldInfo" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.ScriptFunction" />
      </Docs>
    </Member>
    <Member MemberName="IsScriptObject">
      <MemberSignature Language="C#" Value="public bool IsScriptObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsScriptObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebuggerObject.IsScriptObject" />
      <MemberSignature Language="VB.NET" Value="Public Function IsScriptObject () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsScriptObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bdf3a-114">클래스에서 구현되는 경우 현재 개체가 관리되는 JScript 개체에 대한 프록시인지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-114">When implemented in a class, determines whether the current object is a proxy to a managed JScript object.</span></span></summary>
        <returns>
          <span data-ttu-id="bdf3a-115">현재 개체가 관리되는 JScript 개체에 대한 프록시이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bdf3a-115"><see langword="true" /> if the current object is a proxy to a managed JScript object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.IDebugType" />
        <altmember cref="T:Microsoft.JScript.DynamicFieldInfo" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.ScriptFunction" />
      </Docs>
    </Member>
  </Members>
</Type>