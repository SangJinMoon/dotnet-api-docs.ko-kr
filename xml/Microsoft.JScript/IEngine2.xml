<Type Name="IEngine2" FullName="Microsoft.JScript.IEngine2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7d53a12d0f12fa23762f4ece1c5bfba095ec85c" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52348425" /></Metadata><TypeSignature Language="C#" Value="public interface IEngine2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEngine2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IEngine2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEngine2" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEngine2" />
  <TypeSignature Language="F#" Value="type IEngine2 = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("BFF6C97F-0705-4394-88B8-A03A4B8B4CD7")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="59cd5-101">IActiveScript 호스트에서 필요한 추가 기능을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-101">Defines extra functionality that is needed by an IActiveScript host.</span></span> <span data-ttu-id="59cd5-102">구현 된 <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> 엔진입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-102">Implemented by the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> engine.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaEngine Clone (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.Vsa.IJSVsaEngine Clone(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Clone(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (domain As AppDomain) As IJSVsaEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::Vsa::IJSVsaEngine ^ Clone(AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="abstract member Clone : AppDomain -&gt; Microsoft.JScript.Vsa.IJSVsaEngine" Usage="iEngine2.Clone domain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.IJSVsaEngine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="59cd5-103">새 엔진을 만들려는 응용 프로그램 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-103">The application domain in which to create the new engine.</span></span></param>
        <summary><span data-ttu-id="59cd5-104">클래스에서 구현 하는 경우 같은 컴파일된 상태와 명명 된 항목을 사용 하 여 새 응용 프로그램 도메인에서 실행 되는 동일한 새 엔진을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-104">When implemented in a class, creates a new identical engine that runs in a new application domain, with the same compiled state and named items.</span></span> <span data-ttu-id="59cd5-105">JScript에서는 구현 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-105">This is not implemented in JScript.</span></span></summary>
        <returns><span data-ttu-id="59cd5-106">새 엔진입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-106">The new engine.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="CompileEmpty">
      <MemberSignature Language="C#" Value="public bool CompileEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompileEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.CompileEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompileEmpty();" />
      <MemberSignature Language="F#" Value="abstract member CompileEmpty : unit -&gt; bool" Usage="iEngine2.CompileEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59cd5-107">클래스에서 구현 하는 경우 현재 엔진에에서 있는 모든 상태의 컴파일을 트리거합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-107">When implemented in a class, triggers compilation of all the state currently in the engine.</span></span> <span data-ttu-id="59cd5-108">모든 참조, 코드 항목, 호스트 항목 및 리소스 컴파일러를 통해 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-108">All references, code items, host items, and resources are run through the compiler.</span></span></summary>
        <returns><span data-ttu-id="59cd5-109"><see langword="true" /> 그렇지 않은 경우에 성공 했으면 컴파일 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-109"><see langword="true" /> if the compilation was successful, otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="ConnectEvents">
      <MemberSignature Language="C#" Value="public void ConnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.ConnectEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConnectEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ConnectEvents();" />
      <MemberSignature Language="F#" Value="abstract member ConnectEvents : unit -&gt; unit" Usage="iEngine2.ConnectEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59cd5-110">클래스에서 구현 하는 경우 통신 엔진에 등록된 된 이벤트 소스를 전역 이벤트 처리기는 이벤트가 포함 된 연결할 수 있는지 합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-110">When implemented in a class, communicates to the engine that it can connect any registered event sources that have events to any global event handlers.</span></span> <span data-ttu-id="59cd5-111">JScript에서는 구현 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-111">This is not implemented in JScript.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="DisconnectEvents">
      <MemberSignature Language="C#" Value="public void DisconnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.DisconnectEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisconnectEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisconnectEvents();" />
      <MemberSignature Language="F#" Value="abstract member DisconnectEvents : unit -&gt; unit" Usage="iEngine2.DisconnectEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59cd5-112">클래스에서 구현 하는 경우에 이벤트 처리기에서 이벤트 소스를 언 후크 할 하도록 엔진에 지시 합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-112">When implemented in a class, directs the engine to unhook event sources from event handlers.</span></span> <span data-ttu-id="59cd5-113">JScript에서는 구현 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-113">This is not implemented in JScript.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetAssembly();" />
      <MemberSignature Language="F#" Value="abstract member GetAssembly : unit -&gt; System.Reflection.Assembly" Usage="iEngine2.GetAssembly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59cd5-114">클래스에서 구현 하는 경우 컴파일 단계에서 생성 되는 컴파일된 어셈블리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-114">When implemented in a class, gets the compiled assembly that is produced by the compilation step.</span></span></summary>
        <returns><span data-ttu-id="59cd5-115">컴파일된 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-115">The compiled assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.IVsaScriptScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.IVsaScriptScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As IVsaScriptScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::IVsaScriptScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalScope : unit -&gt; Microsoft.JScript.IVsaScriptScope" Usage="iEngine2.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.IVsaScriptScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59cd5-116">클래스에서 구현 하는 경우에 전역 범위 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-116">When implemented in a class, gets the global scope object.</span></span></summary>
        <returns><span data-ttu-id="59cd5-117">전역 범위 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-117">The global scope object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetModule" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule () As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ GetModule();" />
      <MemberSignature Language="F#" Value="abstract member GetModule : unit -&gt; System.Reflection.Module" Usage="iEngine2.GetModule " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59cd5-118">클래스에서 구현 하는 경우 컴파일된 어셈블리에서 코드 모듈을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-118">When implemented in a class, gets the code module from the compiled assembly.</span></span></summary>
        <returns><span data-ttu-id="59cd5-119">컴파일된 어셈블리에서 코드 모듈입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-119">The code module from the compiled assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="InitVsaEngine">
      <MemberSignature Language="C#" Value="public void InitVsaEngine (string rootMoniker, Microsoft.JScript.Vsa.IJSVsaSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitVsaEngine(string rootMoniker, class Microsoft.JScript.Vsa.IJSVsaSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitVsaEngine (rootMoniker As String, site As IJSVsaSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitVsaEngine(System::String ^ rootMoniker, Microsoft::JScript::Vsa::IJSVsaSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member InitVsaEngine : string * Microsoft.JScript.Vsa.IJSVsaSite -&gt; unit" Usage="iEngine2.InitVsaEngine (rootMoniker, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootMoniker" Type="System.String" />
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaSite" />
      </Parameters>
      <Docs>
        <param name="rootMoniker"><span data-ttu-id="59cd5-120">스크립트 엔진의 루트 모니커입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-120">The root moniker of the script engine.</span></span> <span data-ttu-id="59cd5-121">자세한 내용은 <see cref="P:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker" />을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="59cd5-121">For more information, see <see cref="P:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker" />.</span></span></param>
        <param name="site"><span data-ttu-id="59cd5-122">호스트가 구현한 <see cref="T:Microsoft.JScript.Vsa.IJSVsaSite" /> 스크립트 엔진에서 호스트와 통신 하는 데 사용 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-122">The host-implemented <see cref="T:Microsoft.JScript.Vsa.IJSVsaSite" /> object that is used by the script engine to communicate with the host.</span></span> <span data-ttu-id="59cd5-123">자세한 내용은 <see cref="P:Microsoft.JScript.Vsa.IJSVsaEngine.Site" />을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="59cd5-123">For more information, see <see cref="P:Microsoft.JScript.Vsa.IJSVsaEngine.Site" />.</span></span></param>
        <summary><span data-ttu-id="59cd5-124">클래스에서 구현 하는 경우 초기화 된 <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-124">When implemented in a class, initializes the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="InitVsaEngine">
      <MemberSignature Language="C#" Value="public void InitVsaEngine (string rootMoniker, Microsoft.Vsa.IVsaSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitVsaEngine(string rootMoniker, class Microsoft.Vsa.IVsaSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.Vsa.IVsaSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitVsaEngine (rootMoniker As String, site As IVsaSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitVsaEngine(System::String ^ rootMoniker, Microsoft::Vsa::IVsaSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member InitVsaEngine : string * Microsoft.Vsa.IVsaSite -&gt; unit" Usage="iEngine2.InitVsaEngine (rootMoniker, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootMoniker" Type="System.String" />
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaSite" />
      </Parameters>
      <Docs>
        <param name="rootMoniker"><span data-ttu-id="59cd5-125">스크립트 엔진의 루트 모니커입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-125">The root moniker of the script engine.</span></span> <span data-ttu-id="59cd5-126">자세한 내용은 <see cref="P:Microsoft.Vsa.IVsaEngine.RootMoniker" />을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="59cd5-126">For more information, see <see cref="P:Microsoft.Vsa.IVsaEngine.RootMoniker" />.</span></span></param>
        <param name="site"><span data-ttu-id="59cd5-127">호스트가 구현한 <see cref="T:Microsoft.Vsa.IVsaSite" /> 스크립트 엔진에서 호스트와 통신 하는 데 사용 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-127">The host-implemented <see cref="T:Microsoft.Vsa.IVsaSite" /> object that is used by the script engine to communicate with the host.</span></span> <span data-ttu-id="59cd5-128">자세한 내용은 <see cref="P:Microsoft.Vsa.IVsaEngine.Site" />을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="59cd5-128">For more information, see <see cref="P:Microsoft.Vsa.IVsaEngine.Site" />.</span></span></param>
        <summary><span data-ttu-id="59cd5-129">클래스에서 구현 하는 경우 초기화 된 <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-129">When implemented in a class, initializes the <see cref="T:Microsoft.JScript.Vsa.VsaEngine" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Interrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Interrupt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Interrupt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Interrupt();" />
      <MemberSignature Language="F#" Value="abstract member Interrupt : unit -&gt; unit" Usage="iEngine2.Interrupt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59cd5-130">클래스에서 구현 하는 경우 호출 <see cref="M:System.Threading.Thread.Abort" /> 스크립트 코드를 실행 하는 스레드에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-130">When implemented in a class, calls <see cref="M:System.Threading.Thread.Abort" /> on the thread that is running the script code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59cd5-131">이 메서드는 코드를 실행 하는 데 사용 되는 스레드에서 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-131">This method should not be called on the thread that is used to run code.</span></span> <span data-ttu-id="59cd5-132">이 작업을 수행 하는 경우 고유한 스레드를 중지 합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-132">If you do this, you stop your own thread.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="RegisterEventSource">
      <MemberSignature Language="C#" Value="public void RegisterEventSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterEventSource(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.RegisterEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterEventSource (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterEventSource(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member RegisterEventSource : string -&gt; unit" Usage="iEngine2.RegisterEventSource name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="59cd5-133">이벤트를 제공 하는 추가 된 항목의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-133">The name of an added item that provides events.</span></span></param>
        <summary><span data-ttu-id="59cd5-134">클래스에서 구현 하는 경우 이벤트 원본으로 표시 된 항목의 이름을 지정 하는 <see cref="M:Microsoft.JScript.IEngine2.ConnectEvents" /> 메서드 연결할 이벤트를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-134">When implemented in a class, specifies the name of an item that is marked as an event source, so that the <see cref="M:Microsoft.JScript.IEngine2.ConnectEvents" /> method can determine which events to connect.</span></span> <span data-ttu-id="59cd5-135">JScript에서는 구현 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-135">This is not implemented in JScript.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="abstract member Restart : unit -&gt; unit" Usage="iEngine2.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59cd5-136">클래스에서 구현 하는 경우이 메서드는 새 식을 계산 하기 전에 엔진 깨끗 한 상태로 다시 설정 하는 경우 디버거에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-136">When implemented in a class, this method is called by the debugger when it has to reset the engine to a clean state before evaluating a new expression.</span></span> <span data-ttu-id="59cd5-137">메서드를 다시 원래 상태로 다시 추가 된 항목과 전역 범위를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-137">The method resets the added items and the global scope back to their original state.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Run(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (domain As AppDomain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="abstract member Run : AppDomain -&gt; unit" Usage="iEngine2.Run domain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="59cd5-138">컴파일된 코드를 실행 하는 응용 프로그램 도메인입니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-138">The application domain in which to run the compiled code.</span></span></param>
        <summary><span data-ttu-id="59cd5-139">클래스에서 구현 하는 경우 지정 된 응용 프로그램 도메인에서 컴파일된 코드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-139">When implemented in a class, runs the compiled code in the specified application domain.</span></span> <span data-ttu-id="59cd5-140">관리 되는 엔진이 사용자가 제공한 응용 프로그램 도메인에서 실행 중인 코드를 지원 하지 않으므로 JScript에서는 구현 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-140">This is not implemented in JScript because managed engines do not support running code in user-provided application domains.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="RunEmpty">
      <MemberSignature Language="C#" Value="public void RunEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.RunEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunEmpty();" />
      <MemberSignature Language="F#" Value="abstract member RunEmpty : unit -&gt; unit" Usage="iEngine2.RunEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59cd5-141">클래스에서 구현 하는 경우 컴파일된 코드를 현재에서 실행 <see cref="T:System.AppDomain" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59cd5-141">When implemented in a class, runs the compiled code in the current <see cref="T:System.AppDomain" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
  </Members>
</Type>