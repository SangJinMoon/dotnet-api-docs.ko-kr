<Type Name="IActivationObject" FullName="Microsoft.JScript.IActivationObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e2803557c602c95dba10f7ffc77cdfa3e64c283" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37719234" /></Metadata><TypeSignature Language="C#" Value="public interface IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IActivationObject" />
  <TypeSignature Language="F#" Value="type IActivationObject = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ec8d7-101">범위를 확인할 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-101">Defines methods for resolving scope.</span></span> <span data-ttu-id="ec8d7-102">이 인터페이스는 범위 계층 구조에 참여한 모든 개체에 의해 구현됩니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-102">This interface is implemented by all objects that take part in a scope hierarchy.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ActivationObject" />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
    <altmember cref="T:System.Reflection.FieldInfo" />
  </Docs>
  <Members>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDefaultThisObject();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultThisObject : unit -&gt; obj" Usage="iActivationObject.GetDefaultThisObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec8d7-103">클래스에서 구현되는 경우 현재 기본 범위를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-103">When implemented in a class, gets the current default scope.</span></span> <span data-ttu-id="ec8d7-104"><see langword="with" /> 문 범위의 포함된 개체이거나 전역 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-104">Either the contained object of a <see langword="with" /> statement scope, or the global scope.</span></span></summary>
        <returns><span data-ttu-id="ec8d7-105">현재 기본 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-105">The current default scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * int -&gt; System.Reflection.FieldInfo" Usage="iActivationObject.GetField (name, lexLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec8d7-106">검색할 필드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-106">The name of the field to search for.</span></span></param>
        <param name="lexLevel"><span data-ttu-id="ec8d7-107">검색할 어휘 수준입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-107">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="ec8d7-108">클래스에서 구현되는 경우 범위 계층 구조를 검색하여 지정된 이름이 있는 필드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-108">When implemented in a class, returns a field that has the specified name by searching the scope hierarchy.</span></span> <span data-ttu-id="ec8d7-109">이 메서드는 어휘 수준으로 지정된 범위만 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-109">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="ec8d7-110">지정된 이름이 있는 <see cref="T:System.Reflection.FieldInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-110">A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec8d7-111">이 메서드는 컴파일 타임에 확인할 수 없는 필드에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-111">This method applies to fields that cannot be resolved at compile time.</span></span> <span data-ttu-id="ec8d7-112">이런 경우는 `eval` 외부 범위에 있는 필드를 참조 하는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-112">This happens when an `eval` expression refers to a field in the outer scope.</span></span> <span data-ttu-id="ec8d7-113">때문에 `eval` 식 같은 이름의 로컬 필드를 선언할 수 있으며, 외부 범위의 필드에 초기 바인딩할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-113">Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="iActivationObject.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec8d7-114">클래스에서 구현되는 경우 모듈 범위와 같은 정적 변수를 포함하는 범위를 찾을 때까지 범위 계층 구조를 검색하여 전역 범위를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-114">When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</span></span></summary>
        <returns><span data-ttu-id="ec8d7-115">전역 범위입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-115">The global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetLocalField : string -&gt; System.Reflection.FieldInfo" Usage="iActivationObject.GetLocalField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec8d7-116">@FSHO2@필드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-116">The name of the field.</span></span></param>
        <summary><span data-ttu-id="ec8d7-117">클래스에서 구현되는 경우 지정된 이름이 있는 필드의 지역 선언을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-117">When implemented in a class, gets the local declaration of a field that has the specified name.</span></span> <span data-ttu-id="ec8d7-118">이는 컴파일 타임에 오류 확인을 위해 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-118">This is used at compile time for error checking.</span></span></summary>
        <returns><span data-ttu-id="ec8d7-119">필드의 지역 선언입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-119">The local declaration of the field.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberSignature Language="F#" Value="abstract member GetMemberValue : string * int -&gt; obj" Usage="iActivationObject.GetMemberValue (name, lexlevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec8d7-120">검색할 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-120">The name of the member to search for.</span></span></param>
        <param name="lexlevel"><span data-ttu-id="ec8d7-121">검색할 어휘 수준입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-121">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="ec8d7-122">클래스에서 구현되는 경우 범위 계층 구조를 검색하여 지정된 멤버의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-122">When implemented in a class, gets the value of the specified member by searching the scope hierarchy.</span></span> <span data-ttu-id="ec8d7-123">이 메서드는 어휘 수준으로 지정된 범위만 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-123">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="ec8d7-124"><paramref name="name" /> 멤버의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-124">The value of the member <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec8d7-125">이 메서드는 컴파일 타임에 확인할 수 없는 멤버에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-125">This method applies to members that cannot be resolved at compile time.</span></span> <span data-ttu-id="ec8d7-126">이런 경우는 `eval` 식 외부 범위에 있는 멤버를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-126">This occurs when an `eval` expression refers to a member in the outer scope.</span></span> <span data-ttu-id="ec8d7-127">때문에 `eval` 식 같은 이름의 로컬 멤버를 선언할 수 있으며, 외부 범위 구성원에 게 초기 바인딩된 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ec8d7-127">Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
  </Members>
</Type>