<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ns-System.Runtime.Remoting.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef1864265d0e5e7aede8c9f0fdf5440f8e41fd05445ccb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">265d0e5e7aede8c9f0fdf5440f8e41fd05445ccb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;see cref="N:System.Runtime.Remoting" /&gt;</ph> namespace provides classes and interfaces that allow developers to create and configure distributed applications.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.Runtime.Remoting" /&gt;</ph> 네임스페이스는 개발자가 분산 응용 프로그램을 만들고 구성할 수 있게 하는 클래스와 인터페이스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Some of the more important classes of the <ph id="ph1">&lt;see cref="N:System.Runtime.Remoting" /&gt;</ph> namespace are the <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.RemotingConfiguration" /&gt;</ph> class, the <ph id="ph3">&lt;see cref="T:System.Runtime.Remoting.RemotingServices" /&gt;</ph> class, and the <ph id="ph4">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.Runtime.Remoting" /&gt;</ph> 네임스페이스의 좀 더 중요한 일부 클래스는 <ph id="ph2">&lt;see cref="T:System.Runtime.Remoting.RemotingConfiguration" /&gt;</ph> 클래스, <ph id="ph3">&lt;see cref="T:System.Runtime.Remoting.RemotingServices" /&gt;</ph> 클래스 및 <ph id="ph4">&lt;see cref="T:System.Runtime.Remoting.ObjRef" /&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingConfiguration&gt;</ph> class contains static methods for interfacing with configuration settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingConfiguration&gt;</ph> 클래스 구성 설정으로 상호 작용 하기 위한 정적 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType&gt;</ph> method allows developers to configure the remoting infrastructure through the use of XML formatted configuration files.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType&gt;</ph> 메서드를 사용 하면 개발자가 XML 형식의 구성 파일을 통해 원격 인프라를 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingConfiguration&gt;</ph> class also contains several methods for client-end and server-end registration of client and server activated objects that reside on the server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingConfiguration&gt;</ph> 클래스에는 또한 클라이언트의 클라이언트 쪽 및 서버 쪽 등록에 대 한 몇 가지 메서드가 포함 되어 및 서버에서 활성화 된 개체는 서버에 상주 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices&gt;</ph> class provides a number of methods to help in using and publishing remoted objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices&gt;</ph> 클래스는 다양 한 방법 사용 하 여 원격 개체를 게시 및을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=nameWithType&gt;</ph> method provides the functionality for storing all the relevant information required to activate and communicate with a remote object in an instance of the <ph id="ph2">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> class for later serialization and transmission to a remote location.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=nameWithType&gt;</ph> 활성화 하 고 인스턴스의 원격 개체와 통신 하는 데 필요한 모든 관련 정보를 저장 하기 위한 기능을 제공 하는 메서드는 <ph id="ph2">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 클래스 serialization을 위한 이후 원격 위치에 전송 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Unmarshal%2A?displayProperty=nameWithType&gt;</ph> method reverses this process, creating a proxy for a remote object that can be used by an application without regard for any remoting subdivisions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Unmarshal%2A?displayProperty=nameWithType&gt;</ph> 메서드 원격 창 나누기에 관계 없이 응용 프로그램에서 사용할 수 있는 원격 개체에 대 한 프록시를 만들어이 프로세스를 반대로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> class holds all the relevant information required to activate and communicate with a remote object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> 활성화 하 고 원격 개체와 통신 하는 데 필요한 모든 관련 정보를 포함 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is a serializable representation of an object that is transmitted to a remote location using a channel, where it is unmarshaled (see <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Unmarshal%2A&gt;</ph>) and can be used to create a local proxy of the remoted object.</source>
          <target state="translated">이 클래스는 마샬링된 경우 채널을 사용 하 여 원격 위치에 전송 되는 개체의 직렬화 가능 표현이 (참조 <ph id="ph1">&lt;xref:System.Runtime.Remoting.RemotingServices.Unmarshal%2A&gt;</ph>) 및 원격 개체의 로컬 프록시를 만드는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marshal-by-reference objects (MBRs) do not reside in memory forever.</source>
          <target state="translated">참조 방식 마샬링 개체 (마샬링된) 메모리에 계속 상주 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, unless the type overrides <ph id="ph1">&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType&gt;</ph> to control its own lifetime policies, each MBR has a finite lifetime before the .NET Framework remoting system begins the process of deleting it and reclaiming the memory.</source>
          <target state="translated">대신, 해당 형식 <ph id="ph1">&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType&gt;</ph> 자체 수명 정책을 제어 하려면 각 MBR에.NET Framework remoting 시스템 메모리를 확보 하 고 삭제는 프로세스를 시작 하기 전에 제한 시간입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Lifetime Leases<ept id="p1">](https://msdn.microsoft.com/library/23bk23zc.aspx)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>수명 임대<ept id="p1">](https://msdn.microsoft.com/library/23bk23zc.aspx)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>