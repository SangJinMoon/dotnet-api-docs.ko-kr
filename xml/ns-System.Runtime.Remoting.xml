<Namespace Name="System.Runtime.Remoting">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="265d0e5e7aede8c9f0fdf5440f8e41fd05445ccb" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30735447" />
  </Metadata>
  <Docs>
    <summary>
      <see cref="N:System.Runtime.Remoting" /> 네임스페이스는 개발자가 분산 응용 프로그램을 만들고 구성할 수 있게 하는 클래스와 인터페이스를 제공합니다. <see cref="N:System.Runtime.Remoting" /> 네임스페이스의 좀 더 중요한 일부 클래스는 <see cref="T:System.Runtime.Remoting.RemotingConfiguration" /> 클래스, <see cref="T:System.Runtime.Remoting.RemotingServices" /> 클래스 및 <see cref="T:System.Runtime.Remoting.ObjRef" /> 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.RemotingConfiguration> 클래스 구성 설정으로 상호 작용 하기 위한 정적 메서드를 포함 합니다. <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> 메서드를 사용 하면 개발자가 XML 형식의 구성 파일을 통해 원격 인프라를 구성할 수 있습니다. <xref:System.Runtime.Remoting.RemotingConfiguration> 클래스에는 또한 클라이언트의 클라이언트 쪽 및 서버 쪽 등록에 대 한 몇 가지 메서드가 포함 되어 및 서버에서 활성화 된 개체는 서버에 상주 합니다.  
  
 <xref:System.Runtime.Remoting.RemotingServices> 클래스는 다양 한 방법 사용 하 여 원격 개체를 게시 및을 제공 합니다. <xref:System.Runtime.Remoting.RemotingServices.Marshal%2A?displayProperty=nameWithType> 활성화 하 고 인스턴스의 원격 개체와 통신 하는 데 필요한 모든 관련 정보를 저장 하기 위한 기능을 제공 하는 메서드는 <xref:System.Runtime.Remoting.ObjRef> 클래스 serialization을 위한 이후 원격 위치에 전송 합니다. <xref:System.Runtime.Remoting.RemotingServices.Unmarshal%2A?displayProperty=nameWithType> 메서드 원격 창 나누기에 관계 없이 응용 프로그램에서 사용할 수 있는 원격 개체에 대 한 프록시를 만들어이 프로세스를 반대로 바꿉니다.  
  
 <xref:System.Runtime.Remoting.ObjRef> 활성화 하 고 원격 개체와 통신 하는 데 필요한 모든 관련 정보를 포함 하는 클래스입니다. 이 클래스는 마샬링된 경우 채널을 사용 하 여 원격 위치에 전송 되는 개체의 직렬화 가능 표현이 (참조 <xref:System.Runtime.Remoting.RemotingServices.Unmarshal%2A>) 및 원격 개체의 로컬 프록시를 만드는 데 사용할 수 있습니다.  
  
> [!NOTE]
>  참조 방식 마샬링 개체 (마샬링된) 메모리에 계속 상주 하지 않습니다. 대신, 해당 형식 <xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType> 자체 수명 정책을 제어 하려면 각 MBR에.NET Framework remoting 시스템 메모리를 확보 하 고 삭제는 프로세스를 시작 하기 전에 제한 시간입니다. 자세한 내용은 참조 [수명 임대](https://msdn.microsoft.com/library/23bk23zc.aspx)합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>