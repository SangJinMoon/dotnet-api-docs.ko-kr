<Type Name="AttachablePropertyServices" FullName="System.Xaml.AttachablePropertyServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30bcc6eb2a6ce6a7aab2a8c52e32b9d5ff5ff789" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39968639" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class AttachablePropertyServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AttachablePropertyServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AttachablePropertyServices" />
  <TypeSignature Language="VB.NET" Value="Public Class AttachablePropertyServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttachablePropertyServices abstract sealed" />
  <TypeSignature Language="F#" Value="type AttachablePropertyServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7f511-101">연결 가능한 속성에서 값 및 접근자 메서드 정보를 가져오고 연결된 속성 저장소와 함께 사용할 수 있는 정적 도우미 메서드를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7f511-101">Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f511-102">이 클래스의 대부분의 기능은 일반적으로 구현 하는 연결 된 속성 저장소를 사용 합니다 <xref:System.Xaml.IAttachedPropertyStore> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="7f511-102">Most functionality in this class relies on an attached property store, which generally implements the <xref:System.Xaml.IAttachedPropertyStore> interface.</span></span> <span data-ttu-id="7f511-103">그러나 저장소에 전달 하기 위한 매개 변수 <xref:System.Xaml.AttachablePropertyServices> 인터페이스로 형식이 아니며 및 대신 형식화 됩니다 `object`합니다.</span><span class="sxs-lookup"><span data-stu-id="7f511-103">However, parameters for passing the store into <xref:System.Xaml.AttachablePropertyServices> are not typed as the interface and are instead typed as `object`.</span></span> <span data-ttu-id="7f511-104">임의 개체를 전달할 수 있으며는 내부 기본 연결 가능한 속성 저장소는이 예제의 경우 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="7f511-104">This is because you can pass an arbitrary object, and in this case, an internal default attachable property store is used.</span></span>  
  
 <span data-ttu-id="7f511-105">임의의 개체에 대 한 모범 사례는 저장소와 연결 될 수 있는 개체를 전달할 경우</span><span class="sxs-lookup"><span data-stu-id="7f511-105">Best practice for the arbitrary object is to pass the object that would otherwise be associated with the store.</span></span> <span data-ttu-id="7f511-106">전달 하지 마세요 `null` 되지 않았는지를 나타내기 위해는 <xref:System.Xaml.IAttachedPropertyStore> 사용 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f511-106">Do not pass `null` to indicate that you do not have an <xref:System.Xaml.IAttachedPropertyStore> to use.</span></span> <span data-ttu-id="7f511-107">전달 `null` 아무 작업도 수행 하는 코드 경로 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f511-107">Passing `null` enters code paths that do nothing.</span></span> <span data-ttu-id="7f511-108">Null이 아닌 개체는 전달 되었지만로 계산 되 `null` 시도한에서 <xref:System.Xaml.IAttachedPropertyStore> 캐스팅, 기본 연결 가능한 속성 저장소를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f511-108">Passing an object that is non-null, but evaluates as `null` on an attempted <xref:System.Xaml.IAttachedPropertyStore> cast, uses the default attachable property store.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyPropertiesTo">
      <MemberSignature Language="C#" Value="public static void CopyPropertiesTo (object instance, System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,object&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyPropertiesTo(object instance, valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Xaml.AttachableMemberIdentifier, object&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyPropertiesTo (instance As Object, array As KeyValuePair(Of AttachableMemberIdentifier, Object)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyPropertiesTo(System::Object ^ instance, cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Xaml::AttachableMemberIdentifier ^, System::Object ^&gt;&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="static member CopyPropertiesTo : obj * System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier, obj&gt;[] * int -&gt; unit" Usage="System.Xaml.AttachablePropertyServices.CopyPropertiesTo (instance, array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Xaml.AttachableMemberIdentifier,System.Object&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="7f511-109">
            <see cref="T:System.Xaml.IAttachedPropertyStore" />를 구현하는 연결 가능한 특정 속성 저장소이거나, 연결 가능한 정적 기본 속성 저장소에 액세스하는 null이 아닌 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-109">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to access a static default attachable property store.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="7f511-110">대상 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-110">The destination array.</span>
          </span>
          <span data-ttu-id="7f511-111">배열은 제네릭 배열이고, 차원 없이 전달되어야 하며, <see cref="T:System.Xaml.AttachableMemberIdentifier" /> 및 <see langword="object" />의 구성 요소가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-111">The array is a generic array, should be passed undimensioned, and should have components of <see cref="T:System.Xaml.AttachableMemberIdentifier" /> and <see langword="object" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7f511-112">복사를 시작할 소스 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-112">The source index into which to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f511-113">지정된 연결 가능한 속성 저장소에 있는 모든 연결 가능한 속성-값 쌍을 대상 배열로 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-113">Copies all attachable property/value pairs from a specified attachable property store and into a destination array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f511-114">이 메서드를 호출 내부 호출 <xref:System.Collections.Generic.ICollection%601.CopyTo%2A> 이 여기에 나열 되지 않은 예외의 소스가 될 수 있는 키/값 쌍으로 제한 된 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="7f511-114">Calling this method invokes an underlying <xref:System.Collections.Generic.ICollection%601.CopyTo%2A> implementation that is constrained with a key/value pair, which might be the source of exceptions that are not listed in this topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachedPropertyCount">
      <MemberSignature Language="C#" Value="public static int GetAttachedPropertyCount (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetAttachedPropertyCount(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttachedPropertyCount (instance As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetAttachedPropertyCount(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetAttachedPropertyCount : obj -&gt; int" Usage="System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="7f511-115">
            <see cref="T:System.Xaml.IAttachedPropertyStore" />를 구현하는 연결 가능한 특정 속성 저장소이거나, 연결 가능한 정적 기본 속성 저장소에 액세스하는 null이 아닌 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-115">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to access a static default attachable property store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f511-116">지정된 저장소에 있는 연결 가능한 속성 항목의 개수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-116">Returns the count of the attachable property entries that are in the specified store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f511-117">저장소에 있는 항목의 정수 개수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-117">The integer count of entries in the store.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public static bool RemoveProperty (object instance, System.Xaml.AttachableMemberIdentifier name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RemoveProperty(object instance, class System.Xaml.AttachableMemberIdentifier name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveProperty (instance As Object, name As AttachableMemberIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RemoveProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name);" />
      <MemberSignature Language="F#" Value="static member RemoveProperty : obj * System.Xaml.AttachableMemberIdentifier -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.RemoveProperty (instance, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="7f511-118">
            <see cref="T:System.Xaml.IAttachedPropertyStore" />를 구현하는 연결 가능한 특정 속성 저장소이거나, 연결 가능한 정적 기본 속성 저장소에 액세스하는 null이 아닌 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-118">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to access a static default attachable property store.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7f511-119">저장소에서 제거할 연결 가능한 속성 항목의 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-119">The identifier for the attachable property entry to remove from the store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f511-120">지정된 저장소에서 지정된 연결 가능한 속성에 대한 항목을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-120">Removes the entry for the specified attachable property from the specified store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f511-121">
            <paramref name="name" />에 대해 연결 가능한 속성 항목을 저장소에서 발견하고 제거하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-121">
              <see langword="true" /> if an attachable property entry for <paramref name="name" /> was found in the store and removed from it; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f511-122">저장소는 인스턴스당; 따라서 저장소에에서는 `name` 값 명확 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f511-122">Stores are per instance; therefore, in a store, the `name` value should be unambiguous.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public static void SetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProperty(object instance, class System.Xaml.AttachableMemberIdentifier name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProperty (instance As Object, name As AttachableMemberIdentifier, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetProperty : obj * System.Xaml.AttachableMemberIdentifier * obj -&gt; unit" Usage="System.Xaml.AttachablePropertyServices.SetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="7f511-123">
            <see cref="T:System.Xaml.IAttachedPropertyStore" />를 구현하는 연결 가능한 특정 속성 저장소이거나, 연결 가능한 정적 기본 속성 저장소를 사용할 null이 아닌 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-123">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to use a static default attachable property store.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7f511-124">값을 설정할 연결 가능한 속성 항목의 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-124">The identifier of the attachable property entry for which to set a value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7f511-125">설정할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-125">The value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f511-126">지정한 저장소에서 지정된 연결 가능한 속성의 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-126">Sets a value for the specified attachable property in the specified store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7f511-127">저장소에서 값을 설정할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-127">A value could not be set in the store.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7f511-128">
            <paramref name="name" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-128">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty">
      <MemberSignature Language="C#" Value="public static bool TryGetProperty (object instance, System.Xaml.AttachableMemberIdentifier name, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetProperty(object instance, class System.Xaml.AttachableMemberIdentifier name, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetProperty (instance As Object, name As AttachableMemberIdentifier, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member TryGetProperty : obj * System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.TryGetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="7f511-129">
            <see cref="T:System.Xaml.IAttachedPropertyStore" />를 구현하는 연결 가능한 특정 속성 저장소이거나, 연결 가능한 정적 기본 속성 저장소를 사용할 null이 아닌 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-129">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to use a static default attachable property store.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7f511-130">값을 가져올 연결 가능한 속성 항목의 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-130">The identifier of the attachable property entry for which to get a value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7f511-131">Out 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-131">Out parameter.</span>
          </span>
          <span data-ttu-id="7f511-132">이 메서드가 반환할 때 이 매개 변수는 <c>name</c>이 저장소에 있고 값을 가지고 있을 경우 값에 대한 대상 개체를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-132">When this method returns, contains the destination object for the value if <c>name</c> exists in the store and has a value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f511-133">지정된 저장소에서 지정된 연결 가능한 속성의 값을 가져오려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-133">Attempts to get a value for the specified attachable property in the specified store.</span>
          </span>
          <span data-ttu-id="7f511-134">특정 연결 가능한 속성이 저장소에 없는 경우 예외를 throw하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-134">Does not throw an exception if the specific attachable property does not exist in the store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f511-135">
            <paramref name="name" />에 대해 연결 가능한 속성 항목이 저장소에 있고 값이 <paramref name="value" />에 게시되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-135">
              <see langword="true" /> if an attachable property entry for <paramref name="name" /> was found in the store and a value was posted to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetProperty&lt;T&gt; (object instance, System.Xaml.AttachableMemberIdentifier name, out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetProperty&lt;T&gt;(object instance, class System.Xaml.AttachableMemberIdentifier name, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetProperty(Of T) (instance As Object, name As AttachableMemberIdentifier, ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TryGetProperty(System::Object ^ instance, System::Xaml::AttachableMemberIdentifier ^ name, [Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="static member TryGetProperty : obj * System.Xaml.AttachableMemberIdentifier *  -&gt; bool" Usage="System.Xaml.AttachablePropertyServices.TryGetProperty (instance, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.Xaml.AttachableMemberIdentifier" />
        <Parameter Name="value" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="7f511-136">출력의 예상 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-136">The expected type of the output.</span>
          </span>
        </typeparam>
        <param name="instance">
          <span data-ttu-id="7f511-137">
            <see cref="T:System.Xaml.IAttachedPropertyStore" />를 구현하는 연결 가능한 특정 속성 저장소이거나, 연결 가능한 정적 기본 속성 저장소에 액세스하는 null이 아닌 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-137">A specific attachable property store that implements <see cref="T:System.Xaml.IAttachedPropertyStore" />; or any non-null object to access a static default attachable property store.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7f511-138">값을 가져올 연결 가능한 속성 항목의 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-138">The identifier of the attachable property entry for which to get a value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7f511-139">Out 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-139">Out parameter.</span>
          </span>
          <span data-ttu-id="7f511-140">이 메서드가 반환할 때 이 매개 변수는 <c>name</c>이 저장소에 있고 값을 가지고 있을 경우 값에 대한 대상 개체를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-140">When this method returns, contains the destination object for the value if <c>name</c> exists in the store and has a value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f511-141">제네릭 출력 형식을 반환하면서 지정된 저장소에서 지정된 연결 가능한 속성의 값을 가져오려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-141">Attempts to get a value for the specified attachable property in the specified store, returning a generic output form.</span>
          </span>
          <span data-ttu-id="7f511-142">특정 연결 가능한 속성이 저장소에 없는 경우 예외를 throw하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-142">Does not throw an exception if the specific attachable property does not exist in the store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f511-143">
            <paramref name="name" />에 대해 연결 가능한 속성 항목이 저장소에 있고 값이 <paramref name="value" />에 게시되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f511-143">
              <see langword="true" /> if an attachable property entry for <paramref name="name" /> was found in the store and a value was posted to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>