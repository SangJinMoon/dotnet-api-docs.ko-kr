<Type Name="XamlBackgroundReader" FullName="System.Xaml.XamlBackgroundReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f39a8f38922e86df4eb427197bfc2f4cce43516" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39986175" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlBackgroundReader : System.Xaml.XamlReader, System.Xaml.IXamlLineInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlBackgroundReader extends System.Xaml.XamlReader implements class System.Xaml.IXamlLineInfo" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlBackgroundReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlBackgroundReader&#xA;Inherits XamlReader&#xA;Implements IXamlLineInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlBackgroundReader : System::Xaml::XamlReader, System::Xaml::IXamlLineInfo" />
  <TypeSignature Language="F#" Value="type XamlBackgroundReader = class&#xA;    inherit XamlReader&#xA;    interface IXamlLineInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2da6f-101">읽기 및 쓰기를 서로 다른 스레드로 분할할 수 있는 이중 버퍼링된 <see cref="T:System.Xaml.XamlReader" />를 구현합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2da6f-101">Implements a double-buffered <see cref="T:System.Xaml.XamlReader" /> that can split reading and writing to different threads.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlBackgroundReader (System.Xaml.XamlReader wrappedReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlReader wrappedReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (wrappedReader As XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlBackgroundReader(System::Xaml::XamlReader ^ wrappedReader);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlBackgroundReader : System.Xaml.XamlReader -&gt; System.Xaml.XamlBackgroundReader" Usage="new System.Xaml.XamlBackgroundReader wrappedReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="wrappedReader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="wrappedReader">
          <span data-ttu-id="2da6f-102">이 <see cref="T:System.Xaml.XamlReader" />의 기반이 되는 <see cref="T:System.Xaml.XamlBackgroundReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-102">The <see cref="T:System.Xaml.XamlReader" /> that this <see cref="T:System.Xaml.XamlBackgroundReader" /> is based on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2da6f-103">
            <see cref="T:System.Xaml.XamlBackgroundReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-103">Initializes a new instance of the <see cref="T:System.Xaml.XamlBackgroundReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2da6f-104">
            <paramref name="wrappedReader" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-104">
              <paramref name="wrappedReader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlBackgroundReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="2da6f-105">관리되는 리소스를 해제하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-105">
              <see langword="true" /> to release managed resources; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2da6f-106">
            <see cref="T:System.Xaml.XamlBackgroundReader" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-106">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlBackgroundReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2da6f-107">기본 구현을 호출 하는 것 외에도이 `Dispose` 구현 관련된 작성자 및 이벤트 처리기를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="2da6f-107">In addition to calling the base implementation, this `Dispose` implementation disposes related writers and event handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasLineInfo : bool" Usage="System.Xaml.XamlBackgroundReader.HasLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-108">줄 정보를 사용할 수 있는지 여부를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-108">Gets a value that specifies whether line information is available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2da6f-109">줄 정보를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-109">
              <see langword="true" /> if line information is available; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public override bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEof { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEof : bool" Usage="System.Xaml.XamlBackgroundReader.IsEof" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-110">판독기 위치가 파일 끝인지 여부를 보고하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-110">Gets a value that reports whether the reader position is at end-of-file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2da6f-111">위치가 파일의 끝에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-111">
              <see langword="true" /> if the position is at end-of-file; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Xaml.XamlBackgroundReader.LineNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-112">보고할 줄 번호를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-112">Gets the line number to report.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2da6f-113">보고할 줄 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-113">The line number to report.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.IXamlLineInfo" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Xaml.XamlBackgroundReader.LinePosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-114">보고할 줄 위치를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-114">Gets the line position to report.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2da6f-115">보고할 줄 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-115">The line position to report.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.IXamlLineInfo" />
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Xaml.XamlMember" Usage="System.Xaml.XamlBackgroundReader.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-116">판독기 위치가 <see cref="F:System.Xaml.XamlNodeType.StartMember" />에 있는 경우 판독기 위치에서 현재 멤버를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-116">Gets the current member at the reader position, if the reader position is on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2da6f-117">현재 멤버이거나, 위치가 멤버에 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-117">The current member; or <see langword="null" />, if the position is not on a member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.XamlMember" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Xaml.NamespaceDeclaration" Usage="System.Xaml.XamlBackgroundReader.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-118">현재 노드에서 XAML 네임스페이스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-118">Gets the XAML namespace from the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2da6f-119">사용할 수 있으면 XAML 네임스페이스이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-119">The XAML namespace, if it is available; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xaml.XamlNodeType" Usage="System.Xaml.XamlBackgroundReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-120">현재 노드의 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-120">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2da6f-121">
            <see cref="T:System.Xaml.XamlNodeType" /> 열거형의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-121">A value of the <see cref="T:System.Xaml.XamlNodeType" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlBackgroundReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xamlBackgroundReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-122">노드를 사용할 수 있는 경우 소스에서 다음 XAML 노드를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-122">Provides the next XAML node from the source, if a node is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2da6f-123">노드를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-123">
              <see langword="true" /> if a node is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlBackgroundReader.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-124">정보 집합에 대한 스키마 컨텍스트 정보를 제공하는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-124">Gets an object that provides schema context information for the information set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2da6f-125">정보 집합에 대한 스키마 컨텍스트 정보를 제공하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-125">An object that provides schema context information for the information set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xaml.XamlXmlReader.SchemaContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="StartThread">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-126">
            <see cref="T:System.Threading.Thread" />의 명명된 스레드를 처리하는 새 <see cref="T:System.Threading.ParameterizedThreadStart" />(<see cref="T:System.Xaml.XamlReader" />에서 생성됨)를 만들고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-126">Creates and starts a new <see cref="T:System.Threading.Thread" /> (constructed from <see cref="T:System.Threading.ParameterizedThreadStart" />) that handles a named thread for the <see cref="T:System.Xaml.XamlReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartThread">
      <MemberSignature Language="C#" Value="public void StartThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlBackgroundReader.StartThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartThread();" />
      <MemberSignature Language="F#" Value="member this.StartThread : unit -&gt; unit" Usage="xamlBackgroundReader.StartThread " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-127">
            <see cref="T:System.Threading.Thread" />의 명명된 스레드를 처리하는 새 <see cref="T:System.Threading.ParameterizedThreadStart" />(<see cref="T:System.Xaml.XamlReader" />에서 생성됨)를 만들고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-127">Creates and starts a new <see cref="T:System.Threading.Thread" /> (constructed from <see cref="T:System.Threading.ParameterizedThreadStart" />) that handles a named thread for the <see cref="T:System.Xaml.XamlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2da6f-128">기본적으로 스레드 라는 `XAML reader thread`합니다.</span><span class="sxs-lookup"><span data-stu-id="2da6f-128">By default, the thread is named `XAML reader thread`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2da6f-129">스레드가 이미 시작되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-129">The thread is already started.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartThread">
      <MemberSignature Language="C#" Value="public void StartThread (string threadName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartThread(string threadName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartThread (threadName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartThread(System::String ^ threadName);" />
      <MemberSignature Language="F#" Value="member this.StartThread : string -&gt; unit" Usage="xamlBackgroundReader.StartThread threadName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="threadName">
          <span data-ttu-id="2da6f-130">스레드의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-130">The name for the thread.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2da6f-131">
            <see cref="T:System.Threading.Thread" />의 명명된 스레드를 처리하는 새 <see cref="T:System.Threading.ParameterizedThreadStart" />(<see cref="T:System.Xaml.XamlReader" />에서 생성됨)를 만들고 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-131">Creates and starts a new <see cref="T:System.Threading.Thread" /> (constructed from <see cref="T:System.Threading.ParameterizedThreadStart" />) that handles a named thread for the <see cref="T:System.Xaml.XamlReader" />.</span>
          </span>
          <span data-ttu-id="2da6f-132">스레드 이름을 매개 변수로 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-132">You specify the thread name as a parameter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2da6f-133">스레드가 이미 시작되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-133">The thread is already started.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlBackgroundReader.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-134">현재 노드의 <see cref="T:System.Xaml.XamlType" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-134">Gets the <see cref="T:System.Xaml.XamlType" /> of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2da6f-135">현재 노드의 <see cref="T:System.Xaml.XamlType" />이거나, 현재 판독기 위치가 개체에 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-135">The <see cref="T:System.Xaml.XamlType" /> of the current node; or <see langword="null" />, if the current reader position is not on an object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlBackgroundReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.XamlBackgroundReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2da6f-136">현재 노드의 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-136">Gets the value of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2da6f-137">현재 노드의 값이거나, 현재 판독기 위치가 <see cref="F:System.Xaml.XamlNodeType.Value" /> 노드 형식에 없으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2da6f-137">The value of the current node; or <see langword="null" />, if the current reader position is not on a <see cref="F:System.Xaml.XamlNodeType.Value" /> node type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>