<Type Name="XamlObjectReader" FullName="System.Xaml.XamlObjectReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e6d2eb616c907ec8dcb5ca1fc1e167372ea8047" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlObjectReader : System.Xaml.XamlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectReader extends System.Xaml.XamlReader" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectReader&#xA;Inherits XamlReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectReader : System::Xaml::XamlReader" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f48ed-101">개체 그래프를 읽고 XAML 노드 스트림을 생성하는 <see cref="T:System.Xaml.XamlReader" /> 구현을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f48ed-101">Provides a <see cref="T:System.Xaml.XamlReader" /> implementation that reads object graphs and generates a XAML node stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48ed-102">사용 하 여 <xref:System.Xaml.XamlObjectReader> 개체 그래프를 처리 하려는 시나리오에서 일반적으로 이것이 원래 XAML 소스에서 생성 되는 응용 프로그램의 개체 그래프입니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-102">Use the <xref:System.Xaml.XamlObjectReader> in scenarios where you want to process an object graph, which is typically the object graph of an application that is originally generated from a XAML source.</span></span> <span data-ttu-id="f48ed-103">사용할 수는 <xref:System.Xaml.XamlObjectReader> XAML 끝점으로 XAML 시작 점에서 라운드트립을 수행 되는 위치가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-103">You might use the <xref:System.Xaml.XamlObjectReader> where a round trip is made from a XAML start point to a XAML end point.</span></span> <span data-ttu-id="f48ed-104">실행할 수 있습니다 또는 <xref:System.Xaml.XamlObjectReader> ; 개체 그래프를 통해 중간 XAML 노드 스트림을 요청 하는 경우, Api에서 사용 하 여 처리 <xref:System.Xaml.XamlType> 및 <xref:System.Xaml.XamlMember>; 다음 사용 하 여 <xref:System.Xaml.XamlXmlWriter> XAML 노드 XML로 serialize 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-104">Or you might run a <xref:System.Xaml.XamlObjectReader> over the object graph; process the intermediate XAML node stream, if it is required, by using APIs on <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>; and then use <xref:System.Xaml.XamlXmlWriter> to serialize XAML nodes to XML.</span></span>  
  
 <span data-ttu-id="f48ed-105">더 고급 시나리오를 제공는 <xref:System.Xaml.XamlXmlWriter> override 및 특정 XAML 스키마 컨텍스트는는 <xref:System.Xaml.XamlObjectReader> 사용 하 고 다음 기록기 재정의를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-105">More advanced scenarios might supply a <xref:System.Xaml.XamlXmlWriter> override and a specific XAML schema context that the <xref:System.Xaml.XamlObjectReader> uses and then passes to the writer override.</span></span>  
  
 <span data-ttu-id="f48ed-106">사용에 대 한 일반적인 시나리오 <xref:System.Xaml.XamlObjectReader> 멤버를 호출 <xref:System.Xaml.XamlObjectReader> 구현;은 호출 또한 <xref:System.Xaml.XamlReader.Close%2A>, <xref:System.Xaml.XamlReader.ReadSubtree%2A>, 및 <xref:System.Xaml.XamlReader.Skip%2A> 에서 <xref:System.Xaml.XamlReader> 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-106">Typical scenarios for using <xref:System.Xaml.XamlObjectReader> call the members that <xref:System.Xaml.XamlObjectReader> implements; they also call <xref:System.Xaml.XamlReader.Close%2A>, <xref:System.Xaml.XamlReader.ReadSubtree%2A>, and <xref:System.Xaml.XamlReader.Skip%2A> from the <xref:System.Xaml.XamlReader> base class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f48ed-107">
            <see cref="T:System.Xaml.XamlObjectReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-107">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="f48ed-108">읽을 개체 트리/개체 그래프의 루트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-108">The root of the object tree / object graph to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f48ed-109">
            <see cref="T:System.Xaml.XamlObjectReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-109">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48ed-110">이 생성자를 사용 하 여 초기화 하는 경우는 <xref:System.Xaml.XamlObjectReader> 개체에 기본값의 초기 설정을 <xref:System.Xaml.XamlObjectReaderSettings> 개체와 기본 초기 컨텍스트 <xref:System.Xaml.XamlSchemaContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-110">If initialized with this constructor, the <xref:System.Xaml.XamlObjectReader> object has the initial settings of a default <xref:System.Xaml.XamlObjectReaderSettings> object and the initial context of a default <xref:System.Xaml.XamlSchemaContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlObjectReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlObjectReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, settings As XamlObjectReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlObjectReaderSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectReaderSettings" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="f48ed-111">읽을 개체 트리의 루트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-111">The root of the object tree to read.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="f48ed-112">설정 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-112">A settings object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f48ed-113">지정된 판독기 설정을 사용하여 <see cref="T:System.Xaml.XamlObjectReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectReader" /> class with the specified reader settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48ed-114">설정 개체는 줄 번호 처리, 오류 처리 동작 등의 판독기 작업에 대 한 규칙을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-114">The settings object specifies rules for reader operations, such as line number processing, error handling behavior, and so on.</span></span> <span data-ttu-id="f48ed-115">자세한 내용은 <xref:System.Xaml.XamlObjectReaderSettings>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f48ed-115">For more information, see <xref:System.Xaml.XamlObjectReaderSettings>.</span></span>  
  
 <span data-ttu-id="f48ed-116">이 생성자를 사용 하 여 초기화 하는 경우는 <xref:System.Xaml.XamlObjectReader> 개체에 기본값의 초기 컨텍스트 <xref:System.Xaml.XamlSchemaContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-116">If initialized with this constructor, the <xref:System.Xaml.XamlObjectReader> object has the initial context of a default <xref:System.Xaml.XamlSchemaContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="f48ed-117">읽을 개체 트리의 루트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-117">The root of the object tree to read.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="f48ed-118">사용할 판독기에 대한 스키마 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-118">The schema context for the reader to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f48ed-119">지정된 스키마 컨텍스트를 사용하여 <see cref="T:System.Xaml.XamlObjectReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectReader" /> class with the specified schema context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48ed-120">이 생성자를 사용 하 여 초기화 하는 경우는 <xref:System.Xaml.XamlObjectReader> 개체에 기본값의 초기 설정을 <xref:System.Xaml.XamlObjectReaderSettings> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-120">If initialized with this constructor, the <xref:System.Xaml.XamlObjectReader> object has the initial settings of a default <xref:System.Xaml.XamlObjectReaderSettings> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f48ed-121">
            <paramref name="schemaContext" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-121">
              <paramref name="schemaContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectReader (object instance, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object instance, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instance As Object, schemaContext As XamlSchemaContext, settings As XamlObjectReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectReader(System::Object ^ instance, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectReaderSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectReaderSettings" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="f48ed-122">읽을 개체 트리의 루트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-122">The root of the object tree to read.</span>
          </span>
        </param>
        <param name="schemaContext">
          <span data-ttu-id="f48ed-123">사용할 판독기에 대한 스키마 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-123">The schema context for the reader to use.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="f48ed-124">설정 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-124">A settings object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f48ed-125">지정된 스키마 컨텍스트 및 판독기 설정을 사용하여 <see cref="T:System.Xaml.XamlObjectReader" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-125">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectReader" /> class with the specified schema context and reader settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48ed-126">설정 개체는 줄 번호 처리 및 오류 처리 동작은 같은 판독기 작업에 대 한 규칙을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-126">The settings object specifies rules for reader operations, such as line number processing and error handling behavior.</span></span> <span data-ttu-id="f48ed-127">자세한 내용은 <xref:System.Xaml.XamlObjectReaderSettings>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="f48ed-127">For more information, see <xref:System.Xaml.XamlObjectReaderSettings>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f48ed-128">
            <paramref name="schemaContext" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-128">
              <paramref name="schemaContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public virtual object Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Instance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Instance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Instance { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48ed-129">현재 판독기 위치에서 사용할 수 있는 개체 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-129">Gets the object instance that is available at the current reader position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48ed-130">현재 판독기 위치에 있는 개체 인스턴스이며, 판독기 위치가 개체에 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-130">The object instance at the current reader position; or <see langword="null" /> if the reader position is not on an object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEof">
      <MemberSignature Language="C#" Value="public override bool IsEof { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEof" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.IsEof" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEof As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEof { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48ed-131">판독기 위치가 파일 끝인지 여부를 보고하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-131">Gets a value that reports whether the reader position is at the end of the file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48ed-132">판독기 위치가 파일의 끝이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-132">
              <see langword="true" /> if the reader position is at the end of the file; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlMember Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember Member" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Member" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Member As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlMember ^ Member { System::Xaml::XamlMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48ed-133">판독기 위치가 <see cref="T:System.Xaml.XamlMember" />에 있는 경우 판독기 위치에서 현재 <see cref="F:System.Xaml.XamlNodeType.StartMember" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-133">Gets the current <see cref="T:System.Xaml.XamlMember" /> at the reader position, if the reader position is on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48ed-134">현재 멤버이며, 판독기 위치가 멤버에 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-134">The current member; or <see langword="null" /> if the reader position is not on a member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public override System.Xaml.NamespaceDeclaration Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.NamespaceDeclaration Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Namespace As NamespaceDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::NamespaceDeclaration ^ Namespace { System::Xaml::NamespaceDeclaration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.NamespaceDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48ed-135">현재 판독기 위치에서 XAML 네임스페이스 선언을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-135">Gets the XAML namespace declaration from the current reader position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48ed-136">판독기가 <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" />에 위치해 있으면 XAML 네임스페이스 선언이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-136">The XAML namespace declaration if the reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48ed-137">경우에만 null이 아닌 결과 반환 하는이 속성은 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 현재 판독기 위치 속성은 <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>합니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-137">This property returns a non-null result only if the <xref:System.Xaml.XamlObjectReader.NodeType%2A> property of the current reader position is <xref:System.Xaml.XamlNodeType.NamespaceDeclaration>.</span></span> <span data-ttu-id="f48ed-138">해당 네임 스페이스의 개체와 같은 다른 노드 형식 컨텍스트를 기반으로 하는 네임 스페이스를 유추 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-138">It does not infer a namespace that is based on the context of other node types, such as an object in that namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.XamlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XamlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlNodeType NodeType { System::Xaml::XamlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48ed-139">현재 노드의 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-139">Gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48ed-140">현재 노드의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-140">The type of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48ed-141">사용 하는 경우는 <xref:System.Xaml.XamlObjectReader> Api, 일반적으로 체크는 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 판독기 위치를와 같은 이동 하는 모든 작업 후의 <xref:System.Xaml.XamlObjectReader.Read%2A>, <xref:System.Xaml.XamlReader.ReadSubtree%2A>, 또는 <xref:System.Xaml.XamlReader.Skip%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f48ed-141">When using the <xref:System.Xaml.XamlObjectReader> APIs, you typically check the <xref:System.Xaml.XamlObjectReader.NodeType%2A> property after every operation that potentially advances the reader position, such as the <xref:System.Xaml.XamlObjectReader.Read%2A>, <xref:System.Xaml.XamlReader.ReadSubtree%2A>, or <xref:System.Xaml.XamlReader.Skip%2A> methods.</span></span> <span data-ttu-id="f48ed-142"><xref:System.Xaml.XamlObjectReader.NodeType%2A> 다음에 호출할 메서드와 현재 판독기 위치에서 얻을 수 있는 정보를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-142"><xref:System.Xaml.XamlObjectReader.NodeType%2A> indicates the information that you can obtain from the current reader position and the methods that you call next.</span></span> <span data-ttu-id="f48ed-143">예를 들어, 액세스할 수는 <xref:System.Xaml.XamlObjectReader.Member%2A>, <xref:System.Xaml.XamlObjectReader.Type%2A>, <xref:System.Xaml.XamlObjectReader.Value%2A>, 또는 <xref:System.Xaml.XamlObjectReader.Instance%2A> 속성; 하거나 호출할 수는 <xref:System.Xaml.XamlReader.Skip%2A> 메서드 현재 노드 형식의 내용에 관심이 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="f48ed-143">For example, you might access the <xref:System.Xaml.XamlObjectReader.Member%2A>, <xref:System.Xaml.XamlObjectReader.Type%2A>, <xref:System.Xaml.XamlObjectReader.Value%2A>, or <xref:System.Xaml.XamlObjectReader.Instance%2A> properties; or you might call the <xref:System.Xaml.XamlReader.Skip%2A> method if you are not interested in the contents of the current node type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f48ed-144">노드를 사용할 수 있는 경우 소스 개체 그래프에서 다음 XAML 노드를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-144">Provides the next XAML node from the source object graph, if a node is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f48ed-145">노드를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-145">
              <see langword="true" /> if a node is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48ed-146">호출한 후의 <xref:System.Xaml.XamlObjectReader.Read%2A> 메서드 가져오고,는 `true` 결과 일반적으로 노드 속성에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-146">After you call the <xref:System.Xaml.XamlObjectReader.Read%2A> method and obtain a `true` result, you typically access the node properties.</span></span> <span data-ttu-id="f48ed-147">에 따라는 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 속성에 액세스할 수 있습니다는 <xref:System.Xaml.XamlObjectReader.Member%2A>, <xref:System.Xaml.XamlObjectReader.Type%2A>, <xref:System.Xaml.XamlObjectReader.Value%2A>, 또는 <xref:System.Xaml.XamlObjectReader.Instance%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-147">Depending on the <xref:System.Xaml.XamlObjectReader.NodeType%2A> property, you can access the <xref:System.Xaml.XamlObjectReader.Member%2A>, <xref:System.Xaml.XamlObjectReader.Type%2A>, <xref:System.Xaml.XamlObjectReader.Value%2A>, or <xref:System.Xaml.XamlObjectReader.Instance%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48ed-148">정보 집합에 대한 스키마 정보를 제공하는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-148">Gets an object that provides schema information for the information set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48ed-149">정보 집합에 대한 스키마 정보를 제공하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-149">An object that provides schema information for the information set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48ed-150">스키마 컨텍스트는 일반적인 의미에서 스키마와 특정 XAML 프로세서 (구문 분석, 읽기 및 쓰기 작업) XAML 스키마 개념의 처리 간에 개념적 매개자입니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-150">The schema context is a conceptual intermediary between a schema in the conventional sense, and the handling of XAML schema concepts by particular XAML processors (parsing, reading, and writing operations).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48ed-151">현재 판독기 위치에 있는 개체의 <see cref="T:System.Xaml.XamlType" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-151">Gets the <see cref="T:System.Xaml.XamlType" /> of the object at the current reader position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48ed-152">현재 판독기 위치에 있는 개체의 <see cref="T:System.Xaml.XamlType" />이며, 위치가 개체에 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-152">The <see cref="T:System.Xaml.XamlType" /> of the object at the current reader position; or <see langword="null" /> if the position is not on an object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48ed-153">경우에만 null이 아닌 결과 반환 하는이 속성은 <xref:System.Xaml.XamlObjectReader.NodeType%2A> 현재 판독기 위치 속성은 <xref:System.Xaml.XamlNodeType.StartObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="f48ed-153">This property returns a non-null result only if the <xref:System.Xaml.XamlObjectReader.NodeType%2A> property of the current reader position is <xref:System.Xaml.XamlNodeType.StartObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48ed-154">현재 판독기 위치에 노드의 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-154">Gets the value of the node at the current reader position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48ed-155">현재 노드의 값이며, 판독기 위치가 <see cref="F:System.Xaml.XamlNodeType.Value" /> 노드 형식에 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48ed-155">The value of the current node; or <see langword="null" />, if the reader position is not on a <see cref="F:System.Xaml.XamlNodeType.Value" /> node type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>