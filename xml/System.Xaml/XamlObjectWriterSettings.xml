<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlObjectWriterSettings.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a94fb89f28b3f761992da4505a75cc54c6b173a7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a94fb89f28b3f761992da4505a75cc54c6b173a7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Provides specific XAML writer settings for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>에 대한 특정 XAML 작성기 설정을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> can function within specified <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> 함수 수 지정 내 <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Where settings are not specified, an instance of <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph> exists that has default values for a constructed <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, and this instance can be used in merges of settings for a derived class.</source>
          <target state="translated">설정을 지정 하지 않으면, 인스턴스 <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph> 존재 생성 된 항목에 대 한 기본값을가지고 있는 <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, 파생된 클래스에 대 한의 설정 병합이 인스턴스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlObjectWriterSettings">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source>The settings instance to copy.</source>
          <target state="translated">복사할 설정 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> class that is based on the copy of an existing instance.</source>
          <target state="translated">기존 인스턴스의 복사본을 기반으로 하는 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriterSettings" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="settings" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>Gets or sets <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> permissions that the XAML writer observes.</source>
          <target state="translated">XAML 작성기가 준수하는 <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 권한을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> permissions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Permissions.XamlAccessLevel" /&gt;</ph> 권한입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
          <source>This property indicates the expected access level for non-public members, which are accessed in partial trust through a partial-trust tolerant runtime.</source>
          <target state="translated">이 속성에는 부분 신뢰 허용 런타임을 통해 부분 신뢰에서 액세스할 수 있는 public이 아닌 멤버에 대 한 예상된 액세스 수준을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> phase of the object lifetime for each created object.</source>
          <target state="translated">생성된 각 개체에 대해 개체 수명의 <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> 단계에서 XAML 작성기가 호출하는 콜백에 대한 참조를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
          <source>A callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> phase of object lifetime.</source>
          <target state="translated">개체 수명의 <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /&gt;</ph> 단계에서 XAML 작성기가 호출하는 콜백입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> phase of the object lifetime for each created object.</source>
          <target state="translated">생성된 각 개체에 대해 개체 수명의 <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> 단계에서 XAML 작성기가 호출하는 콜백에 대한 참조를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
          <source>A callback that is invoked by the XAML writer at the <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> phase of object lifetime.</source>
          <target state="translated">개체 수명의 <ph id="ph1">&lt;see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /&gt;</ph> 단계에서 XAML 작성기가 호출하는 콜백입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">생성된 각 개체에 대해 개체 수명의 post-member-write 단계에서 XAML 작성기가 호출하는 콜백에 대한 참조를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
          <source>A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.</source>
          <target state="translated">개체 수명의 post-member-write 단계에서 XAML 작성기가 호출하는 콜백입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">생성된 각 개체에 대해 개체 수명의 pre-member-write 단계에서 XAML 작성기가 호출하는 콜백에 대한 참조를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
          <source>A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.</source>
          <target state="translated">개체 수명의 pre-member-write 단계에서 XAML 작성기가 호출하는 콜백입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Gets or sets the XAML namescope to use for registering names from the XAML writer if <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>일 경우 등록 중인 이름에 사용할 XAML 네임스페이스를 XAML 작성기에서 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>The XAML namescope to use for registering names.</source>
          <target state="translated">이름을 등록할 때 사용할 XAML 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Specific contexts for a <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> might use an external XAML namescope.</source>
          <target state="translated">에 대 한 특정 컨텍스트에 <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> 외부는 XAML 이름 범위를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>WPF Usage Notes</source>
          <target state="translated">WPF 사용 정보</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>In the WPF XAML implementation, XAML writer operations that are initiated by <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph> specify a separate XAML namescope.</source>
          <target state="translated">WPF XAML 구현에서 XAML 쓰기 작업에서 시작 된 <ph id="ph1">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph> 별도 XAML 이름 범위를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>In this WPF scenario, templates should not share a XAML namescope with the root of the XAML page that defines them.</source>
          <target state="translated">이 WPF 시나리오에서 템플릿 정의 하는 XAML 페이지의 루트 XAML 이름 범위를 공유 하지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
          <source>Instead, they should process into a separate, designated XAML namescope.</source>
          <target state="translated">대신 별도 지정 된 XAML 이름 범위로 처리 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>Gets or sets a value that specifies whether the XAML writer should ignore (not call) <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementations on a <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> in type-converter situations.</source>
          <target state="translated">형식 변환기 상황에서 <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph>에 대해 XAML 작성기가 <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>을 무시하고 호출하지 않아야 하는지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the XAML writer ignores <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> implementations; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">XAML 작성기가 <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /&gt;</ph> 구현을 무시하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> class and its <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> method are part of an overall design for type conversion in the CLR.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> 클래스 및 해당 <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;</ph> CLR에서 형식 변환에 대 한 전반적인 디자인의 일부인 메서드.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>In XAML systems, you can typically assume that type-converter input is identifiable by the XAML reader, and for purposes of input, is always a string.</source>
          <target state="translated">일반적으로 XAML 시스템에서는 형식 변환기 입력 하 고 입력의 목적을 위해 XAML 판독기에서 식별할 수, 문자열은 항상 가정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>If you set this property to <ph id="ph1">`true`</ph>, you enable a mode where this assumption is codified in the XAML object writer behavior.</source>
          <target state="translated">이 속성을 설정 하는 경우 <ph id="ph1">`true`</ph>, XAML 개체 작성기 동작에서이 가정을 체계화 위치 모드를 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
          <source>This mode supports a compatibility requirement for previous versions of WPF XAML.</source>
          <target state="translated">이 모드는 이전 버전의 WPF XAML에 대 한 호환성 요구 사항을 지원합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>Gets or sets a value that determines whether to disable a default <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> feature that runs type conversion on the <ph id="ph2">&lt;paramref name="K" /&gt;</ph> component of a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> before writing the object graph representation.</source>
          <target state="translated">개체 그래프 표현을 쓰기 전에 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>의 <ph id="ph2">&lt;paramref name="K" /&gt;</ph> 구성 요소에서 형식 변환을 실행하는 기본 <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 기능을 해제할지 여부를 결정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="K" /&gt;</ph> type conversion for a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> object should be disabled.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 개체에 대한 <ph id="ph2">&lt;paramref name="K" /&gt;</ph> 형식 변환을 사용하지 않도록 설정해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고,</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if performing <ph id="ph2">&lt;paramref name="K" /&gt;</ph> type conversion for a <ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> object applies.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> 개체에 대한 <ph id="ph2">&lt;paramref name="K" /&gt;</ph> 형식 변환이 적용되면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
          <source>For more information about the <ph id="ph1">`K`</ph> type conversion feature, see Remarks in <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`K`</ph> 변환 기능을 입력에 주의 참조 하십시오 <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source>Gets or sets a value that determines whether name registration should occur against the specified <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>에 대해 이름 등록이 수행되어야 하는지 여부를 결정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if name registration should occur against the <ph id="ph2">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if name registration should occur into the parent XAML namescope.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /&gt;</ph>에 대해 이름 등록이 수행되어야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 부모 XAML 이름 범위에 이름 등록이 수행되어야 하면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>Gets or sets a preexisting root object for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> 작업에 대한 기존 루트 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>A preexisting root object for <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> operations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> 작업에 대한 기존 루트 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>If you set this value, the root object instance is used as an implicit <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> call (with object input that is direct instead of coming from the reader) that precedes the first explicit node-write call by the <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">루트 개체 인스턴스는 암시적으로 사용 되는 경우이 값을 설정 하면 <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> (입력이 포함 된 개체는 판독기에서 오는 대신 직접) 호출 하 여 첫 번째 명시적 노드 쓰기 호출 앞에 <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
          <source>Any error checking, such as verifying the XAML type of the provided root object, is deferred until that implicit <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> call, instead of being checked when you set this settings property.</source>
          <target state="translated">암시적 될 때까지 지연 되는 오류 검사, 제공 된 루트 개체의 XAML 형식을 확인 하는 등 <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</ph> 이 설정 속성을 설정 하면 검사 하는 대신 호출 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.</source>
          <target state="translated">중복 속성을 검사하는 코드 경로 확인을 XAML 작성기에서 생략할지 여부를 결정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the duplicate property check should be omitted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">중복 속성 검사를 생략해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>The specified code path checks the currently assigned properties and throws an exception if a duplicate property set of the named ambient property is attempted.</source>
          <target state="translated">지정 된 코드 경로 현재 할당 된 속성을 확인 하 고 명명된 된 앰비언트 속성의 중복 된 속성 집합을 시도 하는 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> should omit to call <ph id="ph2">&lt;see langword="ProvideValue" /&gt;</ph> on a markup extension, which is relevant when the markup extension represents the root of an object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>가 태그 확장 시 <ph id="ph2">&lt;see langword="ProvideValue" /&gt;</ph> 호출을 생략해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다. 이 호출은 태그 확장이 개체 그래프의 루트를 나타내는 경우와 관련이 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph> should omit to call <ph id="ph3">&lt;see langword="ProvideValue" /&gt;</ph> on a markup extension; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xaml.XamlObjectWriter" /&gt;</ph>가 태그 확장 시 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 호출을 생략해야 하면 <ph id="ph3">&lt;see langword="ProvideValue" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>This setting is used when the <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> processes the root node (<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, or members within the root node).</source>
          <target state="translated">이 설정을 사용 때는 <ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> 루트 노드를 처리 (<ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;</ph>, 루트 노드 내에서 멤버 또는).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
          <source>This property is relevant for template and defer-load scenarios.</source>
          <target state="translated">이 속성은 템플릿 및 지연 로드 시나리오와 관련이 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>Used in the <ph id="ph1">&lt;see langword="BeginInitHandler" /&gt;</ph> in place of the actual <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</source>
          <target state="translated">실제 <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph> 대신 <ph id="ph1">&lt;see langword="BeginInitHandler" /&gt;</ph>에서 사용합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to be used in place of the actual <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 실제 사용 하도록 할 <ph id="ph2">&lt;see langword="BaseUri" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
          <source>Used internally to provide the correct info in the handler, while keeping runtime behavior fully compatible.</source>
          <target state="translated">내부적으로 사용 완전히 호환 런타임 동작을 유지 하면서 처리기에서 올바른 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>Gets or sets the handler to use when the object writer calls into a CLR-implemented <ph id="ph1">&lt;see langword="SetValue" /&gt;</ph> for dependency properties.</source>
          <target state="translated">개체 작성기가 종속성 속성에 대해 CLR 구현된 <ph id="ph1">&lt;see langword="SetValue" /&gt;</ph>를 호출할 때 사용할 처리기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>A handler implementation that handles this case.</source>
          <target state="translated">이 경우를 처리하는 처리기 구현입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
          <source>The event handler is based on the generic <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegate that uses the <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> event data.</source>
          <target state="translated">이벤트 처리기는 제네릭 기반 <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> 대리자를 사용 하 여 <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> 이벤트 데이터입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>