<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fcab2d451e7a5dffd50523a55bea65848a0295d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36444916" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="31a94-101">앰비언트 속성 또는 앰비언트 형식에 대한 정보 항목을 형식 변환기 및 태그 확장에 반환할 수 있는 서비스를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="31a94-101">Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a94-102">이 인터페이스는 형식 변환기 및 태그 확장 id를 가져오는 앰비언트 속성 XAML 형식 시스템에 대 한 도움이 되는 서비스를 나타냅니다 (<xref:System.Xaml.XamlMember> 개체).</span><span class="sxs-lookup"><span data-stu-id="31a94-102">This interface represents the service that can help type converters and markup extensions to get the ambient property identifiers for the XAML type system (<xref:System.Xaml.XamlMember> objects).</span></span> <span data-ttu-id="31a94-103">서비스는 클래스에서 앰비언트 속성 값도 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-103">The service can also get the ambient property values from classes.</span></span> <span data-ttu-id="31a94-104">형식 앰비언트; 수도 있습니다. 모든 멤버 값으로 해당 형식을 사용 하는 앰비언트 고려 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-104">Types can also be ambient; any member that uses that type as its value should be considered ambient.</span></span>  
  
 <span data-ttu-id="31a94-105">이 서비스에 대 한 호출을 통해 일반적으로 반환 되는 <xref:System.IServiceProvider.GetService%2A>, 상황에 맞는 서비스 공급자에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-105">This service is typically returned through a call to <xref:System.IServiceProvider.GetService%2A>, which is made against a context-specific service provider.</span></span> <span data-ttu-id="31a94-106">서비스 공급자는 일반적으로 값 변환기의 실행 코드와 같이 필요로 하는 컨텍스트에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-106">The service provider is generally available to contexts that need it, such as the execution code of a value converter.</span></span> <span data-ttu-id="31a94-107">자세한 내용은 참조 [형식 변환기 및 XAML 태그 확장명](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) 및 [형식 변환기 또는 태그 확장 서비스 컨텍스트에 사용할 수 있는](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-107">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
## <a name="about-ambient-properties"></a><span data-ttu-id="31a94-108">앰비언트 속성 정보</span><span class="sxs-lookup"><span data-stu-id="31a94-108">About Ambient Properties</span></span>  
 <span data-ttu-id="31a94-109">앰비언트 속성은 속성 값 형식 변환기 또는 존재 하는 태그 확장명 사용에서 작성 하는 개체 그래프에서 XAML 노드 구조에 사용할 수 있어야 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-109">An ambient property is a property whose property value should be available to type converter and markup extension usages that exist in the XAML node structure and in the object graph created from it.</span></span> <span data-ttu-id="31a94-110">로드 경로 개체 작성 단계 또는 저장의 serialization 단계에 해당 하는 동안 XAML 프로세서에 적용 됩니다 경로.</span><span class="sxs-lookup"><span data-stu-id="31a94-110">This is relevant for a XAML processor during the object-writing phase of the load path or the serialization phase of a save path.</span></span>  
  
 <span data-ttu-id="31a94-111">로드 경로에서는 앰비언트 속성 값 개체 그래프에서 XAML 노드 구조 아래에 있는 다른 속성의 값에 영향을 줄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-111">In the load path case, the ambient property value might influence the value in the object graph of other properties that exist underneath it in a XAML node structure.</span></span> <span data-ttu-id="31a94-112">앰비언트 개념 앰비언트 속성 값 형식 변환기 또는 태그 확장에서 사용할 수 있어야 의미는 XAML 노드 스트림으로 처리 될 때 `StartObject` 를 `EndObject`합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-112">When processed as a XAML node stream, the ambient concept means the ambient property value must be available to type converters and markup extensions from `StartObject` to `EndObject`.</span></span> <span data-ttu-id="31a94-113">사용 되는 형식 변환기 마찬가지로, 저장 경로는 앰비언트 속성 및 해당 값의 지식을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-113">Similarly, a type converter that is used for the save path can use knowledge of the ambient property and its value.</span></span> <span data-ttu-id="31a94-114">따라서 생성 되는 XAML 더 나은 라운드트립 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-114">Therefore, the XAML that is produced is a better round-trip representation.</span></span>  
  
 <span data-ttu-id="31a94-115">일반적으로 멤버에 대 한 XAML 개체의 멤버를 처리 해야 하는 순서를 지정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-115">For members in general, XAML does not specify the order in which members of an object must be processed.</span></span> <span data-ttu-id="31a94-116">그러나 앰비언트 속성 값으로 처리 해야 먼저 XAML 판독기는 형식 변환기 및 태그 확장 사용 다른 속성에 포함 된 통해 액세스할 수 있도록는 <xref:System.Xaml.IAmbientProvider> 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-116">However, any ambient property value must be processed first by the XAML reader so that the type converter and markup extension usages that are contained in other properties can access it through the <xref:System.Xaml.IAmbientProvider> service.</span></span>  
  
 <span data-ttu-id="31a94-117"><xref:System.Xaml.XamlMember.DependsOn%2A> 또한 XAML 노드 처리 순서에 영향을 주는 유사한 개념입니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-117"><xref:System.Xaml.XamlMember.DependsOn%2A> is a similar concept that also influences XAML node-processing order.</span></span> <span data-ttu-id="31a94-118">그러나 <xref:System.Xaml.XamlMember.DependsOn%2A> 피어 노드 및 멤버 관계;에 사용할 수는 모든 하위 항목을 바꿀 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-118">However, <xref:System.Xaml.XamlMember.DependsOn%2A> can only be used for peer member and node relationships; it cannot influence all descendants.</span></span> <span data-ttu-id="31a94-119">또한 <xref:System.Xaml.XamlMember.DependsOn%2A> 영향을 줍니다 개체 그래프 속성 설정; 앰비언트 기술을 형식 변환기 또는 태그 확장에서 사용 하는 반면 직접 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-119">Also, <xref:System.Xaml.XamlMember.DependsOn%2A> directly influences object graph property setting; whereas the ambient technique relies on type converters or markup extensions.</span></span> <span data-ttu-id="31a94-120">앰비언트 기술에도 있어야 특정 형식 변환기 또는 태그 확장 정의 앰비언트 속성 값은 해석 및 개체에 적용 방법을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-120">In the ambient technique, there must also be a specific type converter or markup extension definition that specifies how the ambient property value should be interpreted and applied to the object.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="31a94-121">WPF 사용 정보</span><span class="sxs-lookup"><span data-stu-id="31a94-121">WPF Usage Notes</span></span>  
 <span data-ttu-id="31a94-122">에 나와 있는 앰비언트 속성 시나리오는 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 기능 집합은 <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, 다른 값에 대 한 필수 속성 이름 조회를 한정할 수는 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-122">An ambient property scenario that is illustrated in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] feature set is <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, which can qualify the necessary property name lookups for other values.</span></span> <span data-ttu-id="31a94-123">이 경우는 <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> 값 한정 된 <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> XAML 노드 아래에 있는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-123">In this case, the <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value qualifies the <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values that are located in the XAML nodes underneath it.</span></span> <span data-ttu-id="31a94-124"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 에 대 한 형식 변환기 동작을 사용 하 여 한 <xref:System.Windows.DependencyProperty>합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-124"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> uses the type converter behavior for a <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="31a94-125">이 동작은 앰비언트 액세스 <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> 쿼리하여 값 <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> 형식 변환기 및 태그 확장에 사용할 수 있는 서비스 컨텍스트를 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-125">This behavior accesses the ambient <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value by querying <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> from a service context that is available to type converters and markup extensions.</span></span>  
  
 <span data-ttu-id="31a94-126">WPF 기능 집합에 나와 있는 앰비언트 형식이 시나리오는 <xref:System.Windows.ResourceDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-126">An ambient type scenario that is illustrated in the WPF feature set is <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="31a94-127"><xref:System.Windows.ResourceDictionary> 에 <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> 다른 포함할 수 있는 속성 <xref:System.Windows.ResourceDictionary> 개체를 병합 및 의도 한 리소스 확인 순서 병합된 시나리오 충돌에 대 한 형식을 로드 되는 순서와 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-127"><xref:System.Windows.ResourceDictionary> has a <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> property that can contain other <xref:System.Windows.ResourceDictionary> objects to merge, and the intended order of resource resolution for the merged scenario clashes with the order that types are loaded.</span></span> <span data-ttu-id="31a94-128"><xref:System.Windows.ResourceDictionary> 적용 <xref:System.Windows.Markup.AmbientAttribute> XAML 프로세서에서 사용 하 여 병합 된 사전에 대 한 참조를 올바르게 처리할 수 있도록 `StaticResource` 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-128"><xref:System.Windows.ResourceDictionary> applies <xref:System.Windows.Markup.AmbientAttribute> so that a XAML processor can correctly process the references in a merged dictionary with `StaticResource` usages.</span></span> <span data-ttu-id="31a94-129">특히, `StaticResource` 은 호출 하는 태그 확장 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-129">Specifically, `StaticResource` is a markup extension, which calls <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31a94-130">요청된 범위에 대해 앰비언트 형식 또는 속성 정보 항목의 열거 가능한 집합을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-130">Returns an enumerable set of ambient type or property information items for the requested scope.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="31a94-131">앰비언트 형식 정보를 검색할 형식 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-131">The set of types from which to retrieve ambient type information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31a94-132">요청된 형식에 대해 가능한 앰비언트 형식의 열거 가능한 개체 인스턴스 집합을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-132">Returns an enumerable set of object instances of possible ambient types for the requested types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31a94-133">요청된 <see cref="T:System.Xaml.XamlType" /> 식별자 집합에 대한 값을 나타내는 개체의 열거 가능한 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-133">An enumerable set of objects that represent the values for the requested set of <see cref="T:System.Xaml.XamlType" /> identifiers.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">
          <span data-ttu-id="31a94-134">개체 그래프에서 상향 트래버스를 수행할 때 발견될 경우 평가를 중지해야 하는 형식을 하나 이상 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-134">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span>
          </span>
          <span data-ttu-id="31a94-135">이 형식에는 원하는 앰비언트 속성이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-135">This type holds the desired ambient property.</span>
          </span>
          <span data-ttu-id="31a94-136">
            <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-136">May be <see langword="null" />.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="31a94-137">앰비언트로 간주할 속성을 식별하는 속성 식별자 개체를 하나 이상 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-137">Specifies one or more property identifier objects that identify the properties to be considered ambient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31a94-138">요청된 속성 집합에 대해 앰비언트 속성 정보 항목의 열거 가능한 집합을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-138">Returns an enumerable set of ambient property information items for the requested set of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31a94-139">요청된 속성 집합에 대한 앰비언트 속성 정보 항목의 열거 가능한 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-139">An enumerable set of ambient property information items for the requested set of properties.</span>
          </span>
          <span data-ttu-id="31a94-140">반환되는 각 <see cref="T:System.Xaml.AmbientPropertyValue" />의 속성 정보는 입력 <paramref name="properties" /> 중 하나와 일치하게 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-140">The property information for each <see cref="T:System.Xaml.AmbientPropertyValue" /> that is returned will match one of the input <paramref name="properties" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a94-141">각 <xref:System.Xaml.AmbientPropertyValue> 포함 되어 반환 되는 <xref:System.Xaml.XamlMember> 식별자 및 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-141">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">
          <span data-ttu-id="31a94-142">개체 그래프에서 상향 트래버스를 수행할 때 발견될 경우 평가를 중지해야 하는 형식을 하나 이상 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-142">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span>
          </span>
          <span data-ttu-id="31a94-143">이 형식에는 원하는 앰비언트 속성이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-143">This type holds the desired ambient property.</span>
          </span>
          <span data-ttu-id="31a94-144">
            <see langword="null" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-144">May be <see langword="null" />.</span>
          </span>
        </param>
        <param name="searchLiveStackOnly">
          <span data-ttu-id="31a94-145">저장된 컨텍스트를 사용하지 않으려면 <see langword="true" />, 저장된 컨텍스트를 사용하려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-145">
              <see langword="true" /> to not use a saved context; <see langword="false" /> to use a saved context.</span>
          </span>
          <span data-ttu-id="31a94-146">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-146">The default is <see langword="false" />.</span>
          </span>
        </param>
        <param name="types">To be added.</param>
        <param name="properties">
          <span data-ttu-id="31a94-147">앰비언트로 간주할 속성을 식별하는 속성 식별자 개체를 하나 이상 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-147">Specifies one or more property identifier objects that identify the properties to be considered ambient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31a94-148">요청된 형식 및 속성 집합에 대해 앰비언트 속성 정보 항목의 열거 가능한 집합을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-148">Returns an enumerable set of ambient property information items for the requested set of types and properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31a94-149">요청된 형식 및 속성 집합에 대해 앰비언트 속성 정보 항목의 열거 가능한 집합을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-149">An enumerable set of ambient property information items for the requested set of types and properties.</span>
          </span>
          <span data-ttu-id="31a94-150">반환되는 각 <see cref="T:System.Xaml.AmbientPropertyValue" />의 속성 정보는 입력 <paramref name="types" /> 또는 <paramref name="properties" /> 중 하나와 일치하게 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-150">The property information for each <see cref="T:System.Xaml.AmbientPropertyValue" /> that is returned will match one of the input <paramref name="types" /> or <paramref name="properties" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a94-151">각 <xref:System.Xaml.AmbientPropertyValue> 포함 되어 반환 되는 <xref:System.Xaml.XamlMember> 식별자 및 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-151">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 <span data-ttu-id="31a94-152">이 특정 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> 오버 로드는 앰비언트 형식에 대 한 검색할 수 있으며 동일한 앰비언트 속성 트리를 통해 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-152">This particular <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> overload can search for ambient types and ambient properties in the same pass through a tree.</span></span> <span data-ttu-id="31a94-153">이 오버 로드를 사용 하 여 결과와 다른 반환 값에 있는 항목의 순서 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> 또는 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-153">Using this overload results in an ordering of items in the return value that is different from <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> or <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.</span></span>  
  
 <span data-ttu-id="31a94-154">이 오버 로드에는 또한 저장된 된 컨텍스트를 사용 하지 않도록 검색을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-154">This overload also permits the search to not use any saved context.</span></span> <span data-ttu-id="31a94-155"><xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> 또는 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> 오버 로드는 암시적으로 저장된 컨텍스트를 사용 가능 하다 면 (항상 처럼 동작 암시적 `searchLiveStackOnly` 매개 변수는 `false`).</span><span class="sxs-lookup"><span data-stu-id="31a94-155">The <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> or <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> overloads implicitly use a saved context if it is available (they always act as if an implicit `searchLiveStackOnly` parameter is `false`).</span></span> <span data-ttu-id="31a94-156">잠재적으로 저장된 된 컨텍스트의 개념은 특정 XAML 스키마 컨텍스트 또는 XAML을 통합 하는 프레임 워크에 의해 다르게 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-156">The concept of a saved context is potentially handled differently by particular XAML schema contexts, or by frameworks that incorporate XAML.</span></span> <span data-ttu-id="31a94-157">WPF XAML 구현에서 저장 된 컨텍스트 템플릿 확장 뿐만 아니라 다른 기능 영역에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-157">In the WPF XAML implementation, saved contexts are used for template expansion, as well as other feature areas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31a94-158">어떠한 속성이 먼저 발견되는지를 기준으로 요청된 집합에서 단일 앰비언트 형식 또는 속성 정보 항목을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-158">Returns a single ambient type or property information item from the requested set, based on which property is first encountered.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">
          <span data-ttu-id="31a94-159">앰비언트 형식 정보를 검색할 형식 집합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-159">The set of types from which to retrieve ambient type information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31a94-160">요청된 형식에 대해 가능한 앰비언트 형식인 첫 번째 일치 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-160">Returns the first matching object that is a possible ambient type for the requested types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31a94-161">요청된 집합에 대한 첫 번째 결과 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-161">The first result object for the requested set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">
          <span data-ttu-id="31a94-162">개체 그래프에서 상향 트래버스를 수행할 때 발견될 경우 평가를 중지해야 하는 형식을 하나 이상 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-162">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span>
          </span>
          <span data-ttu-id="31a94-163">이 형식에는 원하는 앰비언트 속성이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-163">This type holds the desired ambient property.</span>
          </span>
        </param>
        <param name="properties">
          <span data-ttu-id="31a94-164">앰비언트로 간주되어야 하는 속성을 식별하는 개체를 하나 이상 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-164">Specifies one or more objects that identify the properties to be considered ambient.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31a94-165">어떠한 속성이 먼저 발견되는지를 기준으로 요청된 속성 집합에서 단일 앰비언트 속성 정보 항목을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-165">Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31a94-166">발견된 <paramref name="properties" /> 목록에서 첫 번째 앰비언트 속성 값에 대한 단일 앰비언트 속성 정보 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31a94-166">A single ambient property information item for the first ambient property value from the <paramref name="properties" /> list that is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31a94-167">각 <xref:System.Xaml.AmbientPropertyValue> 포함 되어 반환 되는 <xref:System.Xaml.XamlMember> 식별자 및 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="31a94-167">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>