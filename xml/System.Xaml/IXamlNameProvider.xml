<Type Name="IXamlNameProvider" FullName="System.Xaml.IXamlNameProvider">
  <TypeSignature Language="C#" Value="public interface IXamlNameProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXamlNameProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IXamlNameProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXamlNameProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXamlNameProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6f7f3-101">저장 및 쓰기 작업 중에 개체를 입력하고 XAML 이름을 반환하는 데 사용되는 서비스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="6f7f3-101">Provides a service that is used during save and write operations to input an object and return a XAML name.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f7f3-102">이 서비스는 저장에 대 한 관련 에서만 예를 들어 경로 작업은 <xref:System.Xaml.XamlXmlWriter> 는 특성 사용된 하는 값 변환기 사용 및 형식 변환기 또는 값 직렬 변환기에서는 serialization 또는 그 반대로 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f7f3-102">This service is only relevant for a save path operation, such as when a <xref:System.Xaml.XamlXmlWriter> serializes an attributed value converter usage, and the type converter or value serializer supports serialization.</span></span> <span data-ttu-id="6f7f3-103">A <xref:System.Xaml.XamlObjectWriter> 서비스 컨텍스트에서 서비스를 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6f7f3-103">A <xref:System.Xaml.XamlObjectWriter> does not provide the service in its service context.</span></span>  
  
 <span data-ttu-id="6f7f3-104">형식 변환기 또는 값 직렬 변환기 가져와도 서비스 공급자로 사용할 수 있는 스키마 컨텍스트를 사용 하 여이 서비스에 액세스할 수는 <xref:System.Xaml.IXamlNameProvider> 이러한 맥락에서 구현 되는 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="6f7f3-104">A type converter or value serializer can access this service by using an available schema context as a service provider and then obtaining the <xref:System.Xaml.IXamlNameProvider> service that is implemented in that context.</span></span> <span data-ttu-id="6f7f3-105">자세한 내용은 참조 [형식 변환기 및 XAML 태그 확장명](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) 및 [형식 변환기 또는 태그 확장 서비스 컨텍스트에 사용할 수 있는](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6f7f3-105">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="6f7f3-106">XAML 정의 이름을 올바르게 사용 하려면 할 수도 있습니다 작동 하는 방법에 대 한 정보를 가져오는 XAML 이름 범위 및 <xref:System.Windows.Markup.INameScope> 것을 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6f7f3-106">To correctly use XAML-defined names, you may also need to obtain information about the acting XAML namescope and the <xref:System.Windows.Markup.INameScope> value that represents it.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameProvider.GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6f7f3-107">이름을 가져올 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6f7f3-107">The object to get the name for.</span></span></param>
        <summary><span data-ttu-id="6f7f3-108">지정된 개체의 XAML 이름을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="6f7f3-108">Retrieves the XAML name of the specified object.</span></span></summary>
        <returns><span data-ttu-id="6f7f3-109">요청된 개체의 XAML 이름 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6f7f3-109">The XAML name value of the requested object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f7f3-110">기본.NET Framework XAML 서비스 구현은 런타임 개체 그래프에서 사용 되 고 개체 이름을 보고할 수 있는 XAML 스키마 컨텍스트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6f7f3-110">The default .NET Framework XAML Services implementation relies on a XAML schema context that can report the object names being used in the runtime object graph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>