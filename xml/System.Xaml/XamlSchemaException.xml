<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlSchemaException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d6186938d824b16063b62fe2599486f47b8c4481.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6186938d824b16063b62fe2599486f47b8c4481</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaException">
          <source>The exception that is thrown when a binding system or another schema representation system for XAML reports an exception to the schema context.</source>
          <target state="translated">XAML 보고서의 바인딩 시스템이나 다른 스키마 표현 시스템이 스키마 컨텍스트에 대한 예외를 보고할 때 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaException">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaException&gt;</ph> is thrown by several cases in the CLR binding support classes that provide the schema context for .NET Framework XAML Services (<ph id="ph2">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>, <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, or <ph id="ph4">&lt;xref:System.Xaml.XamlServices&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlSchemaException&gt;</ph> 여러 경우.NET Framework XAML 서비스에 대 한 스키마 컨텍스트를 제공 하는 CLR 바인딩 지원 클래스에 의해 throw 됩니다 (<ph id="ph2">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>, <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Xaml.XamlServices&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaException">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaException&gt;</ph> is typically passed as the inner exception for other exceptions, such as the <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A?displayProperty=nameWithType&gt;</ph>-true property for a <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph>, so it should be uncommon to catch a <ph id="ph4">&lt;xref:System.Xaml.XamlSchemaException&gt;</ph> directly unless you are implementing a component such as a specialized object writer.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaException&gt;</ph> 은 일반적으로 변수로 전달 된 다른 예외에 대 한 내부 예외와 같은 <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A?displayProperty=nameWithType&gt;</ph>-true 속성은 <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph>catch에 공통적으로 적용 해야 하므로, 한 <ph id="ph4">&lt;xref:System.Xaml.XamlSchemaException&gt;</ph> 직접와 같은 구성 요소를 구현 하는 경우가 아니면는 특수화 된 개체가 기록기입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaException" /&gt;</ph> class with a system-supplied message that describes the error.</source>
          <target state="translated">오류를 설명하는 시스템 제공 메시지를 사용하여 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
          <source>The message that describes the exception.</source>
          <target state="translated">예외를 설명하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaException" /&gt;</ph> class with a specified message that describes the error.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaException" /&gt;</ph> 클래스의 새 인스턴스를 오류를 설명하는 지정된 메시지로 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">serialize된 개체 데이터를 보유하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">원본 또는 대상에 대한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">serialize된 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
          <source>The message that describes the exception.</source>
          <target state="translated">예외를 설명하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 아니면 현재 예외는 내부 예외를 처리하는 <ph id="ph2">&lt;see langword="catch" /&gt;</ph> 블록에서 발생합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaException" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">이전 예외의 직접적인 결과로 throw되는 예외의 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성에는 이전 예외에 대한 참조가 들어 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 속성은 생성자에 전달되는 값과 동일한 값을 반환하며, <ph id="ph2">`null`</ph> 속성이 생성자에 내부 예외 값을 제공하지 않는 경우에는 <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>을 반환합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>