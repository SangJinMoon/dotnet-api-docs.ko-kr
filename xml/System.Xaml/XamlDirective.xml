<Type Name="XamlDirective" FullName="System.Xaml.XamlDirective">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2eac5472d3696b1d538c311c8dde96426e0fb73" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlDirective : System.Xaml.XamlMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlDirective extends System.Xaml.XamlMember" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlDirective" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlDirective&#xA;Inherits XamlMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlDirective : System::Xaml::XamlMember" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="961b3-101">멤버가 XAML 지시문이기도 한 경우 멤버의 XAML 형식 시스템 식별자를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="961b3-101">Provides the XAML type system identifier for a member if the member is also a XAML directive.</span>
      </span>
      <span data-ttu-id="961b3-102">멤버 노드를 처리하는 동안 XAML 판독기 및 XAML 작성기는 <see cref="T:System.Xaml.XamlDirective" /> 식별자를 사용합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="961b3-102">XAML readers and XAML writers use the <see cref="T:System.Xaml.XamlDirective" /> identifier during processing of member nodes.</span>
      </span>
      <span data-ttu-id="961b3-103">XAML 판독기가 <see cref="F:System.Xaml.XamlNodeType.StartMember" />에 위치하고 <see cref="P:System.Xaml.XamlMember.IsDirective" />가 <see langword="true" />인 경우 식별자가 사용됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="961b3-103">The identifier is used when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" /> and <see cref="P:System.Xaml.XamlMember.IsDirective" /> is <see langword="true" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-104"><xref:System.Xaml.XamlDirective> 멤버는 XAML 지시문 때 XAML 형식 시스템에 대 한 예상 값을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-104"><xref:System.Xaml.XamlDirective> provides expected values for the XAML type system when the member is a XAML directive.</span></span> <span data-ttu-id="961b3-105">정의 XAML 지시문의 하위 집합에 대 한 동일한 결과 반환 하는 특성에는 <xref:System.Xaml.XamlMember> 모든 가능한 XAML 지시문에 대 한 속성과 동일한 XAML 형식 시스템 정보가 보고 됩니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-105">By definition, a XAML directive has characteristics that always return the same results for a subset of the <xref:System.Xaml.XamlMember> properties, and the same XAML type system information is reported for all possible XAML directives.</span></span> <span data-ttu-id="961b3-106">내부 동작을 통해 또는의 재정의 통해 수행 됩니다 지시문에만 적용 되는 XAML 형식 시스템 특성의 보고 <xref:System.Xaml.XamlMember> `Lookup*` 가상 멤버에는 <xref:System.Xaml.XamlDirective> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-106">The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <xref:System.Xaml.XamlMember> `Lookup*` virtual members in the <xref:System.Xaml.XamlDirective> class.</span></span>  
  
 <span data-ttu-id="961b3-107">다음 목록에 대 한 XAML 지시문의 반환 된 결과 보여 줍니다. <xref:System.Xaml.XamlMember> 경우는 멤버는 실제로 <xref:System.Xaml.XamlDirective>:</span><span class="sxs-lookup"><span data-stu-id="961b3-107">The following list shows the returned results of a XAML directive for <xref:System.Xaml.XamlMember> when the member is actually a <xref:System.Xaml.XamlDirective>:</span></span>  
  
-   <span data-ttu-id="961b3-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> 항상 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-108"><xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="961b3-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> 항상 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-109"><xref:System.Xaml.XamlMember.DeferringLoader%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="961b3-110"><xref:System.Xaml.XamlMember.DependsOn%2A> 항상 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-110"><xref:System.Xaml.XamlMember.DependsOn%2A> is always `null`.</span></span>  
  
-   <span data-ttu-id="961b3-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-111"><xref:System.Xaml.XamlMember.IsAmbient%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="961b3-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-112"><xref:System.Xaml.XamlMember.IsAttachable%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="961b3-113"><xref:System.Xaml.XamlMember.IsDirective%2A> 항상 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-113"><xref:System.Xaml.XamlMember.IsDirective%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="961b3-114"><xref:System.Xaml.XamlMember.IsEvent%2A> 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-114"><xref:System.Xaml.XamlMember.IsEvent%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="961b3-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> 항상 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-115"><xref:System.Xaml.XamlMember.IsReadOnly%2A> is always `false`.</span></span>  
  
-   <span data-ttu-id="961b3-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> 항상 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-116"><xref:System.Xaml.XamlMember.IsReadPublic%2A> is always `true`.</span></span>  
  
-   <span data-ttu-id="961b3-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> 항상 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-117"><xref:System.Xaml.XamlMember.IsWritePublic%2A> is always `true`.</span></span>  
  
 <span data-ttu-id="961b3-118">에 대 한 내부 지원은 또한 <xref:System.Xaml.XamlMember.DeclaringType%2A> 설정 되지 않은 상태를 유지 하 고 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-118">Also, the internal backing for <xref:System.Xaml.XamlMember.DeclaringType%2A> remains unset and returns `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="961b3-119"><xref:System.Xaml.XamlDirective> 이 <xref:System.Xaml.XamlMember> 하위 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-119"><xref:System.Xaml.XamlDirective> is a <xref:System.Xaml.XamlMember> subclass.</span></span> <span data-ttu-id="961b3-120">와 마찬가지로 <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> XAML 형식 시스템 액세스를 보고 하는 방법에 대 한 보안 고려 사항이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-120">As with <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlDirective> has security considerations regarding how the XAML type system reports access.</span></span> <span data-ttu-id="961b3-121"><xref:System.Xaml.XamlMember>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="961b3-121">See <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlMember" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="961b3-122">
            <see cref="T:System.Xaml.XamlDirective" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-122">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">
          <span data-ttu-id="961b3-123">이 <see cref="T:System.Xaml.XamlDirective" />가 있을 수 있는 기본 XAML 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-123">The primary XAML namespace where this <see cref="T:System.Xaml.XamlDirective" /> can exist.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="961b3-124">
            <see cref="T:System.Xaml.XamlDirective" />의 식별 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-124">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961b3-125">이름 및 단일 XAML 네임스페이스에 대한 값을 지정하여 <see cref="T:System.Xaml.XamlDirective" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-125">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for a name and a single XAML namespace.</span>
          </span>
          <span data-ttu-id="961b3-126">
            <see cref="P:System.Xaml.XamlMember.IsUnknown" />이 지시문에 대해 <see langword="true" />를 보고하도록 하려는 경우에만 이 시그니처를 사용하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-126">Use this signature only when you want or expect <see cref="P:System.Xaml.XamlMember.IsUnknown" /> to report <see langword="true" /> for the directive.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="961b3-127">이 생성자의이 시그니처는 지시문에 대 한 식별자는 항상 생성 여기서 <xref:System.Xaml.XamlMember.IsUnknown%2A> 보고서 `true` XAML에 대 한 시스템을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-127">This signature of the constructor always generates an identifier for the directive where <xref:System.Xaml.XamlMember.IsUnknown%2A> reports `true` for the XAML type system.</span></span> <span data-ttu-id="961b3-128">필요한 정보를 사용할 수 있는 경우 (지원 형식 및 변환에 대 한 텍스트 구문 정보 항목) 지시문을 사용 하 여 적용할 수 있는 식별자 중이 고는 <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> 생성자 서명을 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-128">If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType> constructor signature instead.</span></span>  
  
 <span data-ttu-id="961b3-129">이 서명을 사용 하는 경우는 <xref:System.Xaml.XamlDirective.AllowedLocation%2A> 값은 인스턴스가 <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; 및 <xref:System.Xaml.XamlMember.Type%2A> 값 및 <xref:System.Xaml.XamlMember.TypeConverter%2A> 값은 모두 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-129">If you use this signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>; and the <xref:System.Xaml.XamlMember.Type%2A> value and <xref:System.Xaml.XamlMember.TypeConverter%2A> value are both `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; xamlNamespaces, string name, class System.Xaml.XamlType xamlType, class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; typeConverter, valuetype System.Xaml.Schema.AllowedMemberLocations allowedLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlDirective(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ xamlNamespaces, System::String ^ name, System::Xaml::XamlType ^ xamlType, System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ typeConverter, System::Xaml::Schema::AllowedMemberLocations allowedLocation);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespaces" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
        <Parameter Name="typeConverter" Type="System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" />
        <Parameter Name="allowedLocation" Type="System.Xaml.Schema.AllowedMemberLocations" />
      </Parameters>
      <Docs>
        <param name="xamlNamespaces">
          <span data-ttu-id="961b3-130">이 <see cref="T:System.Xaml.XamlDirective" />가 있을 수 있는 XAML 네임스페이스 집합으로, 식별자 문자열의 열거 가능 집합으로 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-130">A set of XAML namespaces where this <see cref="T:System.Xaml.XamlDirective" /> can exist, passed as an enumerable set of the identifier strings.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="961b3-131">
            <see cref="T:System.Xaml.XamlDirective" />의 식별 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-131">The identifying name of the <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </param>
        <param name="xamlType">
          <span data-ttu-id="961b3-132">
            <see cref="T:System.Xaml.XamlDirective" />를 지원하는 XAML 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-132">The XAML type that backs the <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </param>
        <param name="typeConverter">
          <span data-ttu-id="961b3-133">이 <see cref="T:System.Xaml.XamlDirective" />가 텍스트 구문 변환에 사용하는 형식 변환기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-133">The type converter that this <see cref="T:System.Xaml.XamlDirective" /> uses for text syntax conversion.</span>
          </span>
        </param>
        <param name="allowedLocation">
          <span data-ttu-id="961b3-134">
            <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> 열거형의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-134">A value of the <see cref="T:System.Xaml.Schema.AllowedMemberLocations" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="961b3-135">
            <see cref="T:System.Xaml.XamlDirective" />의 가능한 각 사례 값에 대한 값을 지정하여 <see cref="T:System.Xaml.XamlDirective" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-135">Initializes a new instance of the <see cref="T:System.Xaml.XamlDirective" /> class, specifying values for each per-case value of a <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-136">생성 하려면이 생성자를 사용 해야 합니다는 <xref:System.Xaml.XamlDirective> 보고 하지 않는 <xref:System.Xaml.XamlMember.IsUnknown%2A> 으로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-136">You must use this constructor to generate a <xref:System.Xaml.XamlDirective> that does not report <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="961b3-137">
            <paramref name="xamlType" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-137">The <paramref name="xamlType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedLocation">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xaml.Schema.AllowedMemberLocations AllowedLocation" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlDirective.AllowedLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedLocation As AllowedMemberLocations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::AllowedMemberLocations AllowedLocation { System::Xaml::Schema::AllowedMemberLocations get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.AllowedMemberLocations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="961b3-138">지시문을 지정할 수 있는 XAML 노드 형식을 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-138">Gets a value that specifies the XAML node types where the directive can be specified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="961b3-139">열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-139">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="961b3-140">기본값은 열거형 기본값인 <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-140">The default is the enumeration default, which is <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-141">이 값을 설정할 수는 <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> 생성자 시그니처입니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-141">You can set this value in the <xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29> constructor signature.</span></span> <span data-ttu-id="961b3-142">사용 하 여 생성 하는 경우는 <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> 생성자 시그니처는 <xref:System.Xaml.XamlDirective.AllowedLocation%2A> 값은 인스턴스가 <xref:System.Xaml.Schema.AllowedMemberLocations.Any>합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-142">If you construct by using the <xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29> constructor signature, the <xref:System.Xaml.XamlDirective.AllowedLocation%2A> value for the instance is <xref:System.Xaml.Schema.AllowedMemberLocations.Any>.</span></span> <span data-ttu-id="961b3-143">하지만 인스턴스가 보고 항상 <xref:System.Xaml.XamlMember.IsUnknown%2A> 으로 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-143">However, the instance always reports <xref:System.Xaml.XamlMember.IsUnknown%2A> as `true`.</span></span> <span data-ttu-id="961b3-144">이 동작은 일반적으로 영향을 주며 개체 그래프를 다른 실제적의 영향을 미칩니다를 작성 하는 <xref:System.Xaml.XamlMember> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-144">This behavior typically affects attempts to write object graphs and also affects other practical uses of a <xref:System.Xaml.XamlMember> value.</span></span>  
  
 <span data-ttu-id="961b3-145">일반적으로 하지 구성 합니다. XAML 지시문의 경우 여기서 <xref:System.Xaml.XamlDirective.AllowedLocation%2A> 은 <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-145">You typically would not construct a XAML directive case where <xref:System.Xaml.XamlDirective.AllowedLocation%2A> is <xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-146">이 개체에 대한 해시 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-146">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-147">정수 해시 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-147">An integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-148">이 XAML 멤버가 있을 수 있는 XAML 네임스페이스의 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-148">Returns a list of XAML namespaces where this XAML member can exist.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-149">문자열로 제공되는 XAML 네임스페이스 식별자 목록입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-149">A list of XAML namespace identifiers, as strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-150">XAML 네임 스페이스 식별자는 일반적으로 XAML 및 XML 네임 스페이스에 대 한 일반적인 규칙에 따라 식별자 URI (Uniform Resource) 문자열 형태로 표시 되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-150">The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</span></span> <span data-ttu-id="961b3-151">목록에 둘 이상의 항목이 있으면 첫 번째 항목 집합에는 일반적으로 처리를 위해 관련 기본 XAML 네임 스페이스 및 다른 항목은 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-151">If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</span></span> <span data-ttu-id="961b3-152"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> 이 순서에 의존합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-152"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType> relies on this ordering.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-153">
            <see cref="T:System.Reflection.ICustomAttributeProvider" /> 구현을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-153">Returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span>
          </span>
          <span data-ttu-id="961b3-154">이 구현은 항상 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-154">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-155">항상 <see langword="null" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-155">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-156">XAML 지시문에서 사용자 지정 특성을 가질 수 있으므로이 구현은 항상 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-156">Because a XAML directive cannot have custom attributes, this implementation always returns `null`.</span></span> <span data-ttu-id="961b3-157"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-157"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-158">XAML 선언된 개체의 지연된 로드 시 사용되는 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-158">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used during deferred loading of XAML-declared objects.</span>
          </span>
          <span data-ttu-id="961b3-159">이 구현은 항상 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-159">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-160">항상 <see langword="null" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-160">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-161">지시문은 지연 된 로드를 가질 수 없는이 구현은 항상 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-161">Because a directive cannot have deferred loading, this implementation always returns `null`.</span></span> <span data-ttu-id="961b3-162"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-162"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-163">
            <see cref="T:System.Xaml.XamlMember" /> 개체의 목록을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-163">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span>
          </span>
          <span data-ttu-id="961b3-164">이 목록은 초기화 순서에 대한 종속성 관계가 이 <see cref="T:System.Xaml.XamlMember" />를 기준으로 존재하는 멤버를 보고합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-164">The list reports the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
          <span data-ttu-id="961b3-165">이 구현은 항상 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-165">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-166">항상 <see langword="null" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-166">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-167">XAML 지시문 초기화 순서를 가질 수 있으므로이 구현은 항상 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-167">Because a XAML directive cannot have initialization order, this implementation always returns `null`.</span></span> <span data-ttu-id="961b3-168"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-168"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-169">
            <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />와 연관된 <see cref="T:System.Xaml.XamlDirective" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-169">Returns the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with a <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-170">이 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />에 대한 <see cref="T:System.Xaml.XamlMember" /> 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-170">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-171">이 메서드를 호출 하 여 호출 될 수 있습니다 <xref:System.Xaml.XamlMember.Invoker%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-171">This method may be invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="961b3-172">이 구현은 내부 정적 <xref:System.Xaml.Schema.XamlMemberInvoker> XAML 형식 시스템에서 지시문에만 적용 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-172">This implementation returns an internal static <xref:System.Xaml.Schema.XamlMemberInvoker> value that is specific to directives in the XAML type system.</span></span> <span data-ttu-id="961b3-173"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-173"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsAmbient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-174">이 <see cref="T:System.Xaml.XamlMember" />가 앰비언트 속성으로 보고되는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-174">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-175">항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-175">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-176">이 구현은 항상 반환 XAML 지시문은 앰비언트 형식이 될 수 없으므로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-176">Because a XAML directive cannot be an ambient type, this implementation always returns `false`.</span></span> <span data-ttu-id="961b3-177"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-177"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlMember.LookupIsAmbient" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-178">이 <see cref="T:System.Xaml.XamlDirective" />가 이벤트를 나타내는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-178">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-179">항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-179">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-180"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-180"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-181">이 <see cref="T:System.Xaml.XamlDirective" />가 의도된 읽기 전용 속성을 나타내는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-181">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended read-only property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-182">항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-182">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-183">정의상 지시문을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-183">By definition, directives are settable.</span></span> <span data-ttu-id="961b3-184"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-184"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsReadPublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-185">이 <see cref="T:System.Xaml.XamlDirective" />가 public <see langword="get" /> 접근자가 있는 속성을 나타내는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-185">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="get" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-186">항상 <see langword="true" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-186">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-187"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-187"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsUnknown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-188">이 <see cref="T:System.Xaml.XamlDirective" />가 형식 및 멤버 확인에 사용되는 지원 시스템에서 확인될 수 없는 멤버를 나타내는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-188">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-189">이 <see cref="T:System.Xaml.XamlDirective" />가 확인할 수 없는 멤버를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-189">
              <see langword="true" /> if this <see cref="T:System.Xaml.XamlDirective" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-190"><xref:System.Xaml.XamlDirective> 구현만 기본를 호출 하 고 더는 아무 작업도 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-190">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="961b3-191">이 순서 대로 결과 반환 하는 기본 구현을: 결과; 내부 리플렉션 기반 또는 결과의 null 값을 확인 하는 기준으로 <xref:System.Xaml.XamlMember.UnderlyingMember%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-191">The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="961b3-192"><xref:System.Xaml.XamlDirective> 구현 하므로이 가상 멤버; 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-192">The <xref:System.Xaml.XamlDirective> implementation seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWriteOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-193">이 <see cref="T:System.Xaml.XamlDirective" />가 의도된 쓰기 전용 속성을 나타내는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-193">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents an intended write-only property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-194">항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-194">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-195"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-195"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected override sealed bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool LookupIsWritePublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-196">이 <see cref="T:System.Xaml.XamlDirective" />가 public <see langword="set" /> 접근자가 있는 속성을 나타내는지 여부를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-196">Returns whether this <see cref="T:System.Xaml.XamlDirective" /> represents a property that has a public <see langword="set" /> accessor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-197">항상 <see langword="true" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-197">Always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-198"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-198"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-199">
            <see cref="T:System.Xaml.XamlType" />가 있을 수 있는 형식의 <see cref="T:System.Xaml.XamlMember" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-199">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span>
          </span>
          <span data-ttu-id="961b3-200">이 구현은 항상 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-200">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-201">항상 <see langword="null" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-201">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-202">지시문에 대 한 대상 형식이 관련이 없으므로 따라서이 구현은 항상 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-202">Target types are not relevant for directives; therefore, this implementation always returns `null`.</span></span> <span data-ttu-id="961b3-203"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-203"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::XamlType ^ LookupType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-204">이 멤버가 사용하는 형식의 <see cref="T:System.Xaml.XamlType" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-204">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-205">이 멤버가 사용하는 형식의 <see cref="T:System.Xaml.XamlType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-205">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-206"><xref:System.Xaml.XamlDirective> 구현만 기본를 호출 하 고 더는 아무 작업도 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-206">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="961b3-207">내부 리플렉션 또는 null 값을 확인 하는 중 하나에 결과 반환 하는 기본 구현을 <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, 그 순서 대로 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-207">The base implementation returns results based either on internal reflection, or checking for a null value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span> <span data-ttu-id="961b3-208"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-208"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 <span data-ttu-id="961b3-209">설명을 참조 <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> 정보에 대 한 자세한 내용은 <xref:System.Xaml.XamlMember.Type%2A> 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-209">See Remarks in <xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType> for more information about what information <xref:System.Xaml.XamlMember.Type%2A> carries.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-210">이 <see cref="T:System.Xaml.XamlDirective" />와 연관된 형식 변환기 구현을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-210">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-211">
            <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 제약 조건이 있는 <see cref="T:System.ComponentModel.TypeConverter" /> 인스턴스이거나 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-211">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance that has <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-212"><xref:System.Xaml.XamlDirective> 구현만 기본를 호출 하 고 더는 아무 작업도 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-212">The <xref:System.Xaml.XamlDirective> implementation only calls base and does nothing more.</span></span> <span data-ttu-id="961b3-213"><xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="961b3-213">See <xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="961b3-214"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-214"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-215">이 <see cref="T:System.Xaml.XamlDirective" />와 연관된 <see langword="get" /> 접근자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-215">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
          <span data-ttu-id="961b3-216">이 구현은 항상 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-216">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-217">항상 <see langword="null" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-217">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-218"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-218"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-219">이 <see cref="T:System.Reflection.MemberInfo" />와 연관된 CLR 리플렉션 <see cref="T:System.Xaml.XamlDirective" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-219">Returns a CLR reflection <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
          <span data-ttu-id="961b3-220">이 구현은 항상 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-220">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-221">항상 <see langword="null" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-221">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-222"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-222"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-223">이 <see cref="T:System.Xaml.XamlDirective" />와 연관된 <see langword="set" /> 접근자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-223">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
          <span data-ttu-id="961b3-224">이 구현은 항상 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-224">This implementation always returns <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-225">항상 <see langword="null" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-225">Always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-226"><xref:System.Xaml.XamlDirective> 이 가상 멤버; 봉인 따라서 모든 <xref:System.Xaml.XamlDirective> 형식 및 모든 미리 정의 된 XAML 지시문이이 동작을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-226"><xref:System.Xaml.XamlDirective> seals this virtual member; therefore, all <xref:System.Xaml.XamlDirective> types and all predefined XAML directives must use this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlDirective.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="961b3-227">이 <see cref="T:System.Xaml.XamlDirective" />의 문자열 표현을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-227">Returns a string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="961b3-228">이 <see cref="T:System.Xaml.XamlDirective" />의 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="961b3-228">A string representation of this <see cref="T:System.Xaml.XamlDirective" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="961b3-229">XAML 네임 스페이스 정보를 사용할 수 있는 경우에이 구현은 문자열 조합을 <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> 및 <xref:System.Xaml.XamlMember.Name%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-229">If XAML namespace information is available, this implementation returns a string combination of <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> and <xref:System.Xaml.XamlMember.Name%2A>.</span></span> <span data-ttu-id="961b3-230">이 구현은 반환 하는 경우 XAML 네임 스페이스 정보를 사용할 수 없는 <xref:System.Xaml.XamlMember.Name%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="961b3-230">If XAML namespace information is unavailable, this implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>