<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClaimsAuthorizationManager.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fe203cb2b223a3ac68111978dbba00b7d0fb80ef.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe203cb2b223a3ac68111978dbba00b7d0fb80ef</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Defines the base implementation for a claims authorization manager.</source>
          <target state="translated">클레임 권한 부여 관리자에 대한 기본 구현을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> class provides the base implementation for a claims authorization manager.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> 클래스는 클레임 권한 부여 관리자에 대 한 기본 구현을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>A claims authorization manager can be used in the following two scenarios:</source>
          <target state="translated">클레임 권한 부여 관리자는 다음 두 가지 시나리오에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In web-based applications and services, a claims authorization manager  can be added to the processing pipeline to provide an extensibility point from which you can authorize access to a resource according to the value of incoming claims before the application code that actually implements the requested resource is called.</source>
          <target state="translated">웹 기반 응용 프로그램 및 서비스에서 클레임 권한 부여 관리자를 응용 프로그램 코드 하기 전에 들어오는 클레임 값에 따라 리소스에 대 한 액세스를 권한을 부여할 수는 확장성 지점을 제공 하기 위해 처리 파이프라인에 추가할 수 있습니다. 실제로 구현 하는 요청 된 리소스 호출 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>When you use the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> class or the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> class to perform either imperative or declarative claims-based access checks in your code, the claims authorization manager that is configured for your application is called by the system to perform the check.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> 클래스 또는 <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> 클래스 명령적 또는 선언적 클레임 기반 액세스를 수행 하는 검사 코드에서 응용 프로그램에 대해 구성 된 클레임 권한 부여 관리자 수행 하려면 시스템에 의해 호출 되는 확인 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Claims-based access checks can be performed in both web-based applications and desktop applications.</source>
          <target state="translated">웹 기반 응용 프로그램과 데스크톱 응용 프로그램에서 클레임 기반 액세스 검사를 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The default implementation provided by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> class authorizes access for each claim presented; however, you can derive from this class and override the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> method to provide your own authorization logic.</source>
          <target state="translated">하지만 기본 구현에서 제공 되는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> 클래스에 제공 된 각 클레임에 대 한 액세스 권한을 부여,이 클래스에서 파생 하 고 재정의할 수 있습니다는 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> 고유한 권한 부여 논리를 제공 하는 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The use of a claims authorization manager is optional.</source>
          <target state="translated">클레임 권한 부여 관리자의 사용은 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>You can configure your application to use a claims authorization manager either programmatically by using the <ph id="ph1">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph> class or declaratively, by specifying the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element, which is a child element of the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>identityConfiguration<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> element in your application configuration file.</source>
          <target state="translated">클레임 권한 부여 관리자를 사용 하 여 프로그래밍 방식으로 사용 하도록 응용 프로그램을 구성할 수 있습니다는 <ph id="ph1">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph> 클래스 또는 선언적으로 지정 하 여는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept>요소의 자식 요소인의 <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>identityConfiguration<ph id="ph5">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> 응용 프로그램 구성 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>If your application is a web site or a web application hosted in Internet Information Services (IIS), you must also add the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph> in the ASP.NET HTTP Modules collection.</source>
          <target state="translated">응용 프로그램 인지는 웹 사이트 또는 인터넷 정보 서비스 (IIS)에서 호스팅되는 웹 응용 프로그램을 추가 해야는 <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph> ASP.NET HTTP 모듈 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>When you use the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> class or the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> class, the claims authorization manager that is used to perform the access check is the one that is specified in the identity configuration under the <ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> 클래스 또는 <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> 클래스 액세스 검사를 수행 하는 데 사용 되는 클레임 권한 부여 관리자는 아래 id 구성에 지정 된 것은 <ph id="ph3">&lt;xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In a configuration file, it is the <ph id="ph1">`&lt;identityConfiguration&gt;`</ph> section that is referenced from the default <ph id="ph2">`&lt;federationConfiguration&gt;`</ph> element.</source>
          <target state="translated">구성 파일에는 <ph id="ph1">`&lt;identityConfiguration&gt;`</ph> 기본에서 참조 되는 섹션 <ph id="ph2">`&lt;federationConfiguration&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This is true even for Windows Communication Foundation (WCF) services and desktop applications.</source>
          <target state="translated">Windows Communication Foundation (WCF) 서비스 및 데스크톱 응용 프로그램에 대해서도 마찬가지입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> base class does not take any additional configuration; however, you can override the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> in derived classes to provide initialization of your claims authorization manager from child elements of the <ph id="ph3">`&lt;claimsAuthorizationElement&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> 재정의할 수 있습니다; 기본 클래스의 추가 구성을 사용 하지 않는 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> 파생의 자식 요소에서 클레임 권한 부여 관리자의 초기화를 제공 하는 클래스는 <ph id="ph3">`&lt;claimsAuthorizationElement&gt;`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The typical scenario is to use these child elements to specify authorization policies which determine which claim types and values are required in order to gain access to which resource.</source>
          <target state="translated">일반적인 시나리오는 리소스에 액세스 하기 위해 필요한 클레임 형식 및 값을 결정 하는 권한 부여 정책을 지정 하려면 이러한 하위 요소를 사용 하는 것입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This is not a hard requirement, though you are free to define whatever usage and syntax make sense for your implementation.</source>
          <target state="translated">그러나 어떤 사용 및 구문 확인 구현에 대 한 의미를 정의 하는 하드 요구 사항이 아닙니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The code examples that are used in the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> topics are taken from the <ph id="ph2">`Claims Based Authorization`</ph> sample.</source>
          <target state="translated">에 사용 되는 코드 예제는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> 항목에서 수행 되는 <ph id="ph2">`Claims Based Authorization`</ph> 샘플.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</source>
          <target state="translated">이 샘플 구성에 지정 된 정책에 따라 주체에 권한을 부여할 수 있는 사용자 지정 클레임 권한 부여 관리자를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The custom claims authorization manager consists of three basic components: a class derived from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> that implements the manager, the <ph id="ph2">`ResourceAction`</ph> class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</source>
          <target state="translated">사용자 지정 클레임 권한 부여 관리자를 사용 하는 세 가지 기본 구성 요소로 이루어져 있습니다: 클래스에서 파생 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> 관리자를 구현 하는 <ph id="ph2">`ResourceAction`</ph> 읽고 컴파일합니다 정책은 해당 하는 정책 판독기와 리소스와 작업을 쌍 클래스 구성 파일에 지정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</source>
          <target state="translated">이 정책 수를 컴파일한 다음 리소스에 대 한 액세스 권한을 부여 하기 위해 보안 주체를 평가 하는 클레임 권한 부여 관리자가 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Not all elements are shown for the sake of brevity.</source>
          <target state="translated">에서는 모든 요소가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>For information about this sample and other samples available for WIF and about where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">에 대 한 내용은이 샘플과 사용할 수 있는 다른 샘플 WIF 및 다운로드할 수 있는 위치에 대 한 참조 <bpt id="p1">[</bpt>WIF 코드 샘플 인덱스<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The following code shows the implementation of the custom claims authorization manager.</source>
          <target state="translated">다음 코드에는 사용자 지정 클레임 권한 부여 관리자의 구현을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method reads and compiles the policy from configuration by using the policy reader helper class (not shown) and the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> method grants or denies access based on this policy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> 메서드를 읽고 (표시 되지 않음) 정책 판독기 도우미 클래스를 사용 하 여 구성에서 정책 컴파일합니다 및 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> 메서드를 부여 하거나이 정책에 따라 액세스를 거부 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The following code shows the <ph id="ph1">`ResourceAction`</ph> class used by the custom claims manager.</source>
          <target state="translated">다음 코드는 <ph id="ph1">`ResourceAction`</ph> 사용자 지정 클레임 관리자가 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The following XML shows how to configure the claims authorization manager shown above for a web application hosted in IIS 7.5.</source>
          <target state="translated">다음 XML 클레임을 구성 하는 방법을 IIS 7.5에서 호스팅되는 웹 응용 프로그램에 대 한 위에 표시 된 권한 부여 관리자를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Only the elements specific to the configuration of the claims authorization manager are shown.</source>
          <target state="translated">클레임 권한 부여 관리자의 구성에 특정 요소만 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>Note that a reference to the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph> class must be added to the pipeline under the <ph id="ph2">`&lt;system.Webserver&gt;`</ph> element.</source>
          <target state="translated">에 대 한 참조는 <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsAuthorizationModule&gt;</ph> 클래스에서 파이프라인에 추가 되어야 합니다는 <ph id="ph2">`&lt;system.Webserver&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>For sites and applications hosted in versions of IIS prior to IIS 7 the modules can be added to the pipeline under the <ph id="ph1">`&lt;system.Web&gt;`</ph> element.</source>
          <target state="translated">사이트 및 IIS 7 이전의 IIS 버전에서 호스팅되는 응용 프로그램에 대 한 모듈에서 파이프라인에 추가할 수는 <ph id="ph1">`&lt;system.Web&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>This configuration is shown but commented out.</source>
          <target state="translated">이 구성은 표시 하지만 주석으로 처리 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>The policy used by the claims authorization manager is specified by custom <ph id="ph1">`&lt;policy&gt;`</ph> elements under the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element.</source>
          <target state="translated">사용자 지정 클레임 권한 부여 관리자가 사용 되는 정책 지정 <ph id="ph1">`&lt;policy&gt;`</ph> 아래의 요소는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</source>
          <target state="translated">첫 번째 정책에 지정된 된 리소스에 지정된 된 작업을 수행 하기 위해 지정된 된 클레임 중 하나는 보안 주체가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</source>
          <target state="translated">두 번째 정책에 지정된 된 리소스에 지정된 된 작업을 수행할 수에 대 한 두 클레임 보안 주체가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthorizationManager">
          <source>In all others, the principal is automatically granted access regardless of the claims it possesses.</source>
          <target state="translated">주 서버는 모든, 다른 가능해 클레임에 관계 없이 액세스를 자동으로 부여 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The authorization context that contains the subject, resource, and action for which authorization is to be checked.</source>
          <target state="translated">권한 부여를 확인할 주체, 리소스 및 작업이 포함된 권한 부여 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>When implemented in a derived class, checks authorization for the subject in the specified context to perform the specified action on the specified resource.</source>
          <target state="translated">파생된 클래스에서 구현된 경우 지정된 컨텍스트의 주제에 대한 권한 부여를 확인하여 지정된 리소스에 대해 지정된 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the subject is authorized to perform the specified action on the specified resource; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 리소스에 대한 지정된 작업을 수행할 수 있는 권한이 주제에 부여되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The base implementation always returns <ph id="ph1">`true`</ph>, which authorizes access.</source>
          <target state="translated">기본 구현에서는 항상 반환 <ph id="ph1">`true`</ph>, 액세스를 부여 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>You can override this method in a derived class to authorize access based on the requirements of your RP application.</source>
          <target state="translated">RP 응용 프로그램의 요구 사항에 따라 액세스 권한을 부여 하는 파생된 클래스에서이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>If this method returns <ph id="ph1">`false`</ph>, Windows Identity Foundation (WIF) returns an unauthorized error to the caller; otherwise, execution is passed to the RP application.</source>
          <target state="translated">이 메서드가 반환 하는 경우 <ph id="ph1">`false`</ph>, 호출자에 게 권한이 없는 오류를 반환 하는 Windows Identity Foundation (WIF); 그렇지 않으면 실행 RP 응용 프로그램에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The code examples that are used in the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> topics are taken from the <ph id="ph2">`Claims Based Authorization`</ph> sample.</source>
          <target state="translated">에 사용 되는 코드 예제는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> 항목에서 수행 되는 <ph id="ph2">`Claims Based Authorization`</ph> 샘플.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</source>
          <target state="translated">이 샘플 구성에 지정 된 정책에 따라 주체에 권한을 부여할 수 있는 사용자 지정 클레임 권한 부여 관리자를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The custom claims authorization manager consists of three basic components: a class derived from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> that implements the manager, the <ph id="ph2">`ResourceAction`</ph> class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</source>
          <target state="translated">사용자 지정 클레임 권한 부여 관리자를 사용 하는 세 가지 기본 구성 요소로 이루어져 있습니다: 클래스에서 파생 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> 관리자를 구현 하는 <ph id="ph2">`ResourceAction`</ph> 읽고 컴파일합니다 정책은 해당 하는 정책 판독기와 리소스와 작업을 쌍 클래스 구성 파일에 지정 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</source>
          <target state="translated">이 정책 수를 컴파일한 다음 리소스에 대 한 액세스 권한을 부여 하기 위해 보안 주체를 평가 하는 클레임 권한 부여 관리자가 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>Not all elements are shown for the sake of brevity.</source>
          <target state="translated">에서는 모든 요소가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>For information about this sample and other samples available for WIF and about where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">에 대 한 내용은이 샘플과 사용할 수 있는 다른 샘플 WIF 및 다운로드할 수 있는 위치에 대 한 참조 <bpt id="p1">[</bpt>WIF 코드 샘플 인덱스<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The following code shows the override of the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드와의 재정의 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This method grants or denies access based on a policy read and compiled from the configuration file.</source>
          <target state="translated">이 메서드는 부여 또는 읽기 및 구성 파일에서 컴파일된 정책에 따라 액세스를 거부 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The following code shows the <ph id="ph1">`ResourceAction`</ph> class used by the custom claims manager.</source>
          <target state="translated">다음 코드는 <ph id="ph1">`ResourceAction`</ph> 사용자 지정 클레임 관리자가 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>The policy used by the claims authorization manager is specified by custom <ph id="ph1">`&lt;policy&gt;`</ph> elements under the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element.</source>
          <target state="translated">사용자 지정 클레임 권한 부여 관리자가 사용 되는 정책 지정 <ph id="ph1">`&lt;policy&gt;`</ph> 아래의 요소는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>This policy is read and compiled by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">이 정책을 읽고 여 컴파일되는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</source>
          <target state="translated">첫 번째 정책에 지정된 된 리소스에 지정된 된 작업을 수행 하기 위해 지정된 된 클레임 중 하나는 보안 주체가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</source>
          <target state="translated">두 번째 정책에 지정된 된 리소스에 지정된 된 작업을 수행할 수에 대 한 두 클레임 보안 주체가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess(System.Security.Claims.AuthorizationContext)">
          <source>In all others, the principal is automatically granted access regardless of the claims it possesses.</source>
          <target state="translated">주 서버는 모든, 다른 가능해 클레임에 관계 없이 액세스를 자동으로 부여 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration elements.</source>
          <target state="translated">사용자 지정 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each node in the list is of type <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">형식 <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>의 목록에 있는 각 노드입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When overridden in a derived class, loads custom configuration from XML.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 XML에서 사용자 지정 구성을 로드합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> method is called by the configuration infrastructure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> 구성 인프라 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When this method is called, the <ph id="ph1">`nodelist`</ph> will contain the top-level child elements of the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element from the configuration file.</source>
          <target state="translated">이 메서드를 호출할 때는 <ph id="ph1">`nodelist`</ph> 의 최상위 자식 요소가 포함 됩니다는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> 구성 파일에서 요소입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</source>
          <target state="translated">특성이 나 자식 요소가 파생 된 클래스에 대해 정의한 구성 스키마에 따라 이러한 요소 들의 각각 들어 차례로 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>If no child elements appear under the <ph id="ph1">`&lt;claimsAuthorizationManager&gt;`</ph> element in the configuration file, this method is not called.</source>
          <target state="translated">아래에 자식 요소가 없는 표시 하는 경우는 <ph id="ph1">`&lt;claimsAuthorizationManager&gt;`</ph> 구성 파일의 요소를이 메서드가 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The default implementation throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated">기본 구현은 throw 한 <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Override this method in your derived class to enable initialization of your claims authorization manager from a configuration file.</source>
          <target state="translated">구성 파일에서 클레임 권한 부여 관리자의 초기화를 사용 하도록 설정 하려면 파생된 클래스에서이 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Typically, the configuration elements are used to express an authorization policy; however, you can define elements and use them in any way that makes sense based on the requirements of your application.</source>
          <target state="translated">구성 요소는 권한 부여 정책; 표현 데 일반적으로 그러나 요소를 정의 하 고 적합 한 응용 프로그램의 요구 사항에 따라 어떤 식으로든에서이 사용 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The code examples that are used in the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> topics are taken from the <ph id="ph2">`Claims Based Authorization`</ph> sample.</source>
          <target state="translated">에 사용 되는 코드 예제는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> 항목에서 수행 되는 <ph id="ph2">`Claims Based Authorization`</ph> 샘플.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This sample provides a custom claims authorization manager that can authorize subjects based on a policy that is specified in configuration.</source>
          <target state="translated">이 샘플 구성에 지정 된 정책에 따라 주체에 권한을 부여할 수 있는 사용자 지정 클레임 권한 부여 관리자를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom claims authorization manager consists of three basic components: a class derived from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> that implements the manager, the <ph id="ph2">`ResourceAction`</ph> class that pairs a resource and an action, and a policy reader that reads and compiles policy that is specified in the configuration file.</source>
          <target state="translated">사용자 지정 클레임 권한 부여 관리자를 사용 하는 세 가지 기본 구성 요소로 이루어져 있습니다: 클래스에서 파생 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> 관리자를 구현 하는 <ph id="ph2">`ResourceAction`</ph> 읽고 컴파일합니다 정책은 해당 하는 정책 판독기와 리소스와 작업을 쌍 클래스 구성 파일에 지정 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This compiled policy can then be used by the claims authorization manager to evaluate a principal in order to authorize access to resources.</source>
          <target state="translated">이 정책 수를 컴파일한 다음 리소스에 대 한 액세스 권한을 부여 하기 위해 보안 주체를 평가 하는 클레임 권한 부여 관리자가 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Not all elements are shown for the sake of brevity.</source>
          <target state="translated">에서는 모든 요소가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>For information about this sample and other samples available for WIF and about where to download them, see <bpt id="p1">[</bpt>WIF Code Sample Index<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>.</source>
          <target state="translated">에 대 한 내용은이 샘플과 사용할 수 있는 다른 샘플 WIF 및 다운로드할 수 있는 위치에 대 한 참조 <bpt id="p1">[</bpt>WIF 코드 샘플 인덱스<ept id="p1">](~/docs/framework/security/wif-code-sample-index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The following code shows the override of the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드와의 재정의 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This method uses a helper policy reader class (not shown) to read and compile authorization policies specified in the configuration file.</source>
          <target state="translated">이 메서드는 도우미 정책 판독기 클래스 (표시 되지 않음)를 사용 하 여 읽고 컴파일 권한 부여 정책 구성 파일에 지정 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Policies are added to a dictionary and are accessed by a <ph id="ph1">`ResourceAction`</ph> key object that is created from the resource and action for which they are intended.</source>
          <target state="translated">정책은 사전에 추가 되 고 액세스 하는 <ph id="ph1">`ResourceAction`</ph> 의도 한 리소스 및 작업에서 생성 하는 키 개체입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The following code shows the <ph id="ph1">`ResourceAction`</ph> class used by the custom claims manager.</source>
          <target state="translated">다음 코드는 <ph id="ph1">`ResourceAction`</ph> 사용자 지정 클레임 관리자가 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The policy used by the claims authorization manager is specified by custom <ph id="ph1">`&lt;policy&gt;`</ph> elements under the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> element.</source>
          <target state="translated">사용자 지정 클레임 권한 부여 관리자가 사용 되는 정책 지정 <ph id="ph1">`&lt;policy&gt;`</ph> 아래의 요소는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthorizationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>This policy is read and compiled by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> method.</source>
          <target state="translated">이 정책을 읽고 여 컴파일되는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>In the first policy, the principal must possess one of the specified claims in order to perform the specified action on the specified resource.</source>
          <target state="translated">첫 번째 정책에 지정된 된 리소스에 지정된 된 작업을 수행 하기 위해 지정된 된 클레임 중 하나는 보안 주체가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>In the second policy, the principal must possess both claims to be able to perform the specified action on the specified resource.</source>
          <target state="translated">두 번째 정책에 지정된 된 리소스에 지정된 된 작업을 수행할 수에 대 한 두 클레임 보안 주체가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthorizationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>In all others, the principal is automatically granted access regardless of the claims it possesses.</source>
          <target state="translated">주 서버는 모든, 다른 가능해 클레임에 관계 없이 액세스를 자동으로 부여 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>