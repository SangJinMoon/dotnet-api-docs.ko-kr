<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClaimsAuthenticationManager.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac519d0027b7a929a454eabf2814d8a208ed8f72ee0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19d0027b7a929a454eabf2814d8a208ed8f72ee0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>Defines the base implementation for a claims authentication manager.</source>
          <target state="translated">클레임 인증 관리자에 대한 기본 구현을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The claims authentication manager provides a place in the claims processing pipeline for applying processing logic (filtering, validation, extension) to the claims collection in the incoming principal before execution reaches your application code.</source>
          <target state="translated">클레임 인증 관리자는 실행이 응용 프로그램 코드에 도달하기 전에 수신 주체에서 클레임 컬렉션에 처리 로직(필터링, 유효성 검사, 확장)을 적용하기 위한 장소를 클레임 처리 파이프라인에 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The claims authentication manager provides an extensibility point in the application’s claims processing pipeline that you can use to validate, filter, modify, incoming claims or inject new claims into the set of claims presented by a <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> before the RP application code is executed.</source>
          <target state="translated">인증 관리자의 응용 프로그램의 확장 지점에는 처리 파이프라인의 유효성을 검사, 필터링, 수정 하는 데 사용할 수 있는 클레임을 제공 하는 클레임을 수신 하는 클레임 또는 로부터의 클레임 집합에 새 클레임을 삽입 한 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> RP 하기 전에 응용 프로그램 코드가 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>You can even return a custom implementation of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> if your RP application requires it.</source>
          <target state="translated">사용자 지정 구현도 반환할 수 있습니다 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> RP 응용 프로그램에서 필요한 경우.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The default implementation provided by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> class returns the claims in the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> unmodified; however, you can derive from this class and override the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph> method to modify the claims in the <ph id="ph4">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> (or to return a custom <ph id="ph5">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>).</source>
          <target state="translated">하지만 제공 하는 기본 구현을 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> 의 클레임을 반환 하는 클래스는 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> 수정 되지 않은;이 클래스에서 파생 하 고 재정의할 수 있습니다는 <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph> 의 클레임을 수정 하는 메서드는 <ph id="ph4">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> (하거나 반환 하는 사용자 지정 <ph id="ph5">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>A typical reason for creating a custom claims authentication manager is to add, remove, or transform claims based on information that is only known by or is, perhaps, better maintained by the RP application.</source>
          <target state="translated">사용자 지정 클레임 인증 관리자를 만들기 위한 일반적인 이유 추가, 제거 또는만 알려져 RP 응용 프로그램에서 더 잘 유지 관리, 또는에 따라 클레임을 변환 하기 위해서입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>For example, a history of customer purchases in a shopping cart application might be kept in a data base maintained by the RP application and then added to the claims principal returned by the claims authentication manager based on the value of a name claim found in the incoming principal.</source>
          <target state="translated">RP 응용 프로그램에 의해 유지 관리 하 고 있는 이름 클레임의 값에 따라 클레임 인증 관리자에서 반환 된 클레임 보안 주체에 다음 추가 데이터 자료에 쇼핑 카트 응용 프로그램의 고객 구매 기록을 수 유지 하는 예를 들어는 들어오는 보안 주체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>You can configure your application to use a <ph id="ph1">`ClaimsAuthenticationManager`</ph> either programmatically by using the <ph id="ph2">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph> class or in configuration through the <bpt id="p1">[</bpt><ph id="ph3">&amp;lt;</ph>claimsAuthenticationManager<ph id="ph4">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)</ept> element (which is a child element of the <bpt id="p2">[</bpt><ph id="ph5">&amp;lt;</ph>identityConfiguration<ph id="ph6">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> element).</source>
          <target state="translated">사용 하도록 응용 프로그램을 구성할 수 있습니다는 <ph id="ph1">`ClaimsAuthenticationManager`</ph> 를 사용 하 여 프로그래밍 방식으로 <ph id="ph2">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph> 클래스를 통해 구성에서 or는 <bpt id="p1">[</bpt> <ph id="ph3">&amp;lt;</ph>claimsAuthenticationManager<ph id="ph4">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)</ept> 요소 ( 자식 요소가 되는 <bpt id="p2">[</bpt> <ph id="ph5">&amp;lt;</ph>identityConfiguration<ph id="ph6">&amp;gt;</ph> <ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> 요소).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>You can override the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> method to provide processing for custom child elements of the <ph id="ph2">`&lt;claimsAuthenticationManager&gt;`</ph> element through which your custom manager can be configured.</source>
          <target state="translated">재정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> 의 사용자 지정 자식 요소에 대 한 처리를 제공 하는 메서드는 <ph id="ph2">`&lt;claimsAuthenticationManager&gt;`</ph> 요소는 사용자 지정 관리자를 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The base implementation of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> does not handle any child elements.</source>
          <target state="translated">기본 구현을 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> 모든 자식 요소를 처리 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>Configuring your application to use a claims authentication manager ensures that it will be invoked by Windows Identity Foundation (WIF) from the request pipeline.</source>
          <target state="translated">클레임 인증 관리자를 사용 하도록 응용 프로그램을 구성 하는 호출 되며 Windows Identity Foundation (WIF)으로 요청 파이프라인에서 확인 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The following code shows a simple claims authentication manager that adds a role claim to the incoming principal without performing any check on the incoming claims..</source>
          <target state="translated">다음 코드에서는 간단한 클레임 인증 들어오는 클레임에 대 한 모든 확인을 수행 하지 않고 들어오는 보안 주체에는 역할 클레임을 추가 하는 관리자를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsAuthenticationManager">
          <source>The following XML shows the <ph id="ph1">`&lt;claimsAuthenticationManager&gt;`</ph> element.</source>
          <target state="translated">에서는 다음 XML은 <ph id="ph1">`&lt;claimsAuthenticationManager&gt;`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsAuthenticationManager" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>The address of the resource that is being requested.</source>
          <target state="translated">요청 중인 리소스의 주소입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>The claims principal that represents the authenticated user that is attempting to access the resource.</source>
          <target state="translated">리소스에 액세스하려는 인증된 사용자를 나타내는 클레임 보안 주체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>When overridden in a derived class, returns a <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> object consistent with the requirements of the RP application.</source>
          <target state="translated">파생된 클래스에서 재정의된 경우 RP 응용 프로그램의 요구 사항과 일관된 <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>The default implementation does not modify the incoming <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph>.</source>
          <target state="translated">기본 구현은 들어오는 <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph>을 수정하지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>A claims principal that contains any modifications necessary for the RP application.</source>
          <target state="translated">RP 응용 프로그램에 필요한 모든 수정 사항을 포함하는 클레임 보안 주체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>The default implementation returns the incoming claims principal unmodified.</source>
          <target state="translated">기본 구현은 들어오는 클레임 보안 주체를 수정하지 않고 반환합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph> method is called from the request processing pipeline You can override this method in a derived class to filter, modify, or inject claims into the claims principal according to the policy of your RP application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph> 메서드는 필터링 하려면 파생된 클래스에서이 메서드를 재정의할 수는 요청 처리 파이프라인에서 수정 하거나, RP 응용 프로그램의 정책에 따라 클레임 보안 주체에 클레임을 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.Authenticate(System.String,System.Security.Claims.ClaimsPrincipal)">
          <source>Depending on the requirements of the RP application, you can even return a custom implementation of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>.</source>
          <target state="translated">RP 응용 프로그램의 요구에 따라 반환할 수 있습니다도의 사용자 지정 구현을 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration elements.</source>
          <target state="translated">사용자 지정 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each node in the list is of type <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">형식 <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>의 목록에 있는 각 노드입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When overridden in a derived class, loads custom configuration from XML.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 XML에서 사용자 지정 구성을 로드합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> method is called by the configuration infrastructure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> 구성 인프라 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>When this method is called, the <ph id="ph1">`nodelist`</ph> will contain the top-level child elements of the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>claimsAuthenticationManager<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)</ept> element from the configuration file.</source>
          <target state="translated">이 메서드를 호출할 때는 <ph id="ph1">`nodelist`</ph> 의 최상위 자식 요소가 포함 됩니다는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>claimsAuthenticationManager<ph id="ph3">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)</ept> 구성 파일에서 요소입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</source>
          <target state="translated">특성이 나 자식 요소가 파생 된 클래스에 대해 정의한 구성 스키마에 따라 이러한 요소 들의 각각 들어 차례로 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>If no child elements appear under the <ph id="ph1">`&lt;claimsAuthenticationManager&gt;`</ph> element in the configuration file, this method is not called.</source>
          <target state="translated">아래에 자식 요소가 없는 표시 하는 경우는 <ph id="ph1">`&lt;claimsAuthenticationManager&gt;`</ph> 구성 파일의 요소를이 메서드가 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The default implementation throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
          <target state="translated">기본 구현은 throw 한 <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Override this method in your derived class to enable initialization of your claims authentication manager from a configuration file.</source>
          <target state="translated">구성 파일에서 클레임 인증 관리자의 초기화를 사용 하도록 설정 하려면 파생된 클래스에서이 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>For example, the configuration elements might describe a policy to be followed when authenticating a claims principal; or they might be used to point to an attribute store from which additional claims are to be added to the principal.</source>
          <target state="translated">구성 요소에서 클레임 보안 주체를 인증할 때 따라야 하는 정책을 설명 하는 예를 들어 되거나 있는 주 서버에 추가할 추가 클레임은 특성 저장소를 가리키도록 사용 될 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>