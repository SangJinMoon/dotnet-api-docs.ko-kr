<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClaimsPrincipal.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59a2c844b538e9744cf3dbebf25a6ab8e73142aa5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a2c844b538e9744cf3dbebf25a6ab8e73142aa5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> implementation that supports multiple claims-based identities.</source>
          <target state="translated">여러 클레임 기반 ID를 지원하는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> 구현입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>Beginning with .NET Framework 4.5, Windows Identity Foundation (WIF) and claims-based identity have been fully integrated into the .NET Framework.</source>
          <target state="translated">.NET Framework 4.5 부터는 Windows Identity Foundation (WIF) 및 클레임 기반 id 완벽 하 게에 통합 되었으며.NET Framework입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>This means that many classes that represent a principal in the .NET Framework now derive from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> rather than simply implementing the <ph id="ph2">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph> interface.</source>
          <target state="translated">즉, 이제.NET Framework의 보안 주체를 나타내는 여러 클래스에서 파생 되는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> 단순히 구현 하는 대신는 <ph id="ph2">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>In addition to implementing the <ph id="ph1">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph> interface, <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> exposes properties and methods that are useful for working with claims.</source>
          <target state="translated">구현 외에도 <ph id="ph1">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph> 인터페이스 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> 클레임을 사용 하는 데 도움이 되는 메서드와 속성을 노출 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> exposes a collection of identities, each of which is a <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> id 각각 나타내는 컬렉션을 노출 한 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>In the common case, this collection, which is accessed through the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> property, will only have a single element.</source>
          <target state="translated">이 컬렉션을 통해 액세스할 수 있는 일반적인 경우는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> 속성, 단일 요소를 하나만 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>The introduction of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> in .NET 4.5 as the principal from which most principal classes derive does not force you to change anything in the way in which you deal with identity.</source>
          <target state="translated">도입 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> 가장 principal 클래스에서 파생 하 여 주.NET 4.5에서 강제로 적용 하지 않습니다 id로 처리 하는 방법에 아무 것도 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>It does, however open up more possibilities and offer more chances to exercise finer access control.</source>
          <target state="translated">그러나 것 않습니다, 그리고 더 많은 가능성을 열고 보다 세부적인 액세스 제어를 사용해 보기 위해 더 많은 기회를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>The application code itself can work directly with the claims contained in the current principal to drive extra authentication, authorization, and personalization tasks.</source>
          <target state="translated">응용 프로그램 코드 자체 추가 인증, 권한 부여 및 개인 설정 작업을 진행 하는 데 현재 보안 주체에 포함 된 클레임와 직접 협업할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>You can front your resources with a claims processing pipeline, which can deal with authentication requests and authorization policy even before execution reaches your code.</source>
          <target state="translated">처리 파이프라인 실행 코드에 도달 하기 전에 인증 요청 및 권한 부여 정책을 사용 하 여 처리할 수 있는 클레임 리소스를 프런트 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>For example, you can configure a web-based application or service with a custom claims authentication manager, an instance of a class that derives from the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> class.</source>
          <target state="translated">파생 되는 클래스의 인스턴스를 사용자 지정 클레임 인증 관리자와 웹 기반 응용 프로그램 또는 서비스를 구성할 수는 예를 들어는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>When so configured, the request processing pipeline invokes the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph> method on your claims authentication manager passing it a <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> that represents the context of the incoming request.</source>
          <target state="translated">적절히 구성한 경우에 요청 처리 파이프라인 호출는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph> 메서드를 전달 하 여 클레임 인증 관리자는 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> 들어오는 요청 컨텍스트를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>Your claims authentication manager can then perform authentication based on the values of the incoming claims.</source>
          <target state="translated">클레임 인증 관리자는 들어오는 클레임 값에 따라 인증을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>It can also filter, transform, or add claims to the incoming claim set.</source>
          <target state="translated">하거나 수도 있습니다 필터링, 변환, 들어오는 클레임 집합에 대 한 클레임을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>For example, it could be used to enrich the incoming claim set with new claims created from a local data source such as a local user profile</source>
          <target state="translated">예를 들어, 로컬 사용자 프로필을 같은 로컬 데이터 원본에서 만든 새 클레임을 사용 하 여 설정 들어오는 클레임을 보강 하기 위해 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>You can configure a web-based application with a custom claims authorization manager, an instance of a class that derives from the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> class.</source>
          <target state="translated">파생 되는 클래스의 인스턴스를 사용자 지정 클레임 권한 부여 관리자와 웹 기반 응용 프로그램을 구성할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>When so configured, the request processing pipeline packages the incoming <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> in an <ph id="ph2">&lt;xref:System.Security.Claims.AuthorizationContext&gt;</ph> and invokes the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> method on your claims authorization manager.</source>
          <target state="translated">요청 처리 파이프라인은 들어오는 패키지 적절히 구성한 경우 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Security.Claims.AuthorizationContext&gt;</ph> 하 고 호출에서 <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A&gt;</ph> 클레임 권한 부여 관리자에서 메서드.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>Your claims authorization manager can then enforce authorization based on the incoming claims.</source>
          <target state="translated">그러면 클레임 권한 부여 관리자는 들어오는 클레임을 기반으로 하는 권한 부여를 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>Inline claims-based code access checks can be performed by configuring your application with a custom claims authorization manager and using either the <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> class to perform imperative access checks or the <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> to perform declarative access checks.</source>
          <target state="translated">인라인 코드 클레임 기반 액세스 검사를 사용자 지정 클레임 권한 부여 관리자와 응용 프로그램을 구성 하 고 하나를 사용 하 여 수행할 수는 <ph id="ph1">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermission&gt;</ph> 명령적 액세스 검사를 수행 하는 클래스 또는 <ph id="ph2">&lt;xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute&gt;</ph> 선언적 액세스 하려면 확인합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>Claims-based code access checks are performed inline, outside of the processing pipeline, and so are available to all applications as long as a claims authorization manager is configured.</source>
          <target state="translated">코드 클레임 기반 액세스 검사를 처리 파이프라인 외부에서 수행 된 인라인와 함께 모든 응용 프로그램에 사용할 수 있는으로 클레임 권한 부여 관리자가 구성 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>You can obtain a <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> instance for the principal associated with a request in an RP application (or the principal under which a thread is executing) by casting the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>.</source>
          <target state="translated">가져올 수는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> 캐스팅 하 여 관련 RP 응용 프로그램 (또는 주 스레드를 실행 중인 서버)에서 요청 된 보안 주체에 대 한 인스턴스는 <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> 속성을 <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>The claims associated with an <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> object are available through its <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;</ph> property.</source>
          <target state="translated">연결 된 클레임은 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> 개체를 통해 사용할 수 있는 해당 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;</ph> property returns all of the claims contained by the identities associated with the principal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;</ph> 속성 모든 주 서버와 연관 된 id에 포함 된 클레임을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>In the uncommon case in which the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> contains multiple <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> instances, you can use the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> property or you can access the primary identity by using the <ph id="ph4">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt;</ph> property.</source>
          <target state="translated">일반적이 지 않은 경우에는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> 여러 개 포함 된 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> 사용할 수 있습니다 인스턴스는 <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> 속성 또는 있습니다를 사용 하 여 주 id에 액세스할 수는 <ph id="ph4">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> provides several methods through which these claims may be searched and fully supports Language Integrated Query (LINQ).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> 이러한 클레임을 검색할 수 있습니다 하는 여러 가지 방법을 제공 하 고 완벽 하 게 언어 통합 쿼리 (LINQ)를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>Identities can be added to the principal by using the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A&gt;</ph> methods.</source>
          <target state="translated">Id를 사용 하 여 보안 주체에 추가 될 수는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>To add identities to the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>, a caller must have full trust.</source>
          <target state="translated">Id를 추가 하 고 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>, 호출자가 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>By default, WIF prioritizes <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> objects when selecting the primary identity to return through the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt;</ph> property.</source>
          <target state="translated">기본적으로 WIF 우선 순위를 지정 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> 통한 반환할 주 id를 선택 하는 경우 개체는 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>You can modify this behavior by supplying a delegate through the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A&gt;</ph> property to perform the selection.</source>
          <target state="translated">통해 대리자를 제공 하 여이 동작을 수정할 수는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A&gt;</ph> 속성을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A&gt;</ph> property provides similar functionality for the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Current%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A&gt;</ph> 속성에 대 한 유사한 기능을 제공 된 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Current%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>In the claim-based model, whether a principal is in a specified role is determined by the claims presented by its underlying identities.</source>
          <target state="translated">클레임 기반 모델에 지정된 된 역할에 보안 주체 인지 해당 기본 id는 나타내는 클레임이에 의해 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A&gt;</ph> method essentially examines each identity associated with the principal to determine whether it possesses a claim with the specified role value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A&gt;</ph> 메서드는 기본적으로 지정 된 역할 값으로 클레임을가지고 있는지 여부를 결정 하는 사용자와 연결 된 각 id 검사 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>The type of the claim (represented by its <ph id="ph1">&lt;xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType&gt;</ph> property) used to determine which claims should be examined during role checks is specified on an identity through its <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">클레임의 형식을 (나타내는 해당 <ph id="ph1">&lt;xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType&gt;</ph> 속성)을 사용 하는 클레임을 검사 해야 결정 검사를 통해 id에 지정 된 역할 중 해당 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>Thus, the claims examined during role checks can be of a different type for different identities associated with the principal.</source>
          <target state="translated">따라서 주 서버와 관련 된 서로 다른 id에 대 한 다른 유형의 역할 검사 중 검사 클레임 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>The following example extracts the claims presented by a user in an HTTP request and writes them to the HTTP response.</source>
          <target state="translated">다음 예제에서는 HTTP 요청에 사용자가 있는 클레임을 추출 하 고 HTTP 응답에 씁니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>The current user is read from the <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> as a <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>.</source>
          <target state="translated">현재 사용자에서 읽기는 <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> 로 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>The claims are then read from it and then are written to the response.</source>
          <target state="translated">클레임은 그런 다음 여기에서 읽고 응답에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor">
          <source>No identities are associated with the new instance.</source>
          <target state="translated">Id가 없습니다 새 인스턴스와 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor">
          <source>(The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> collection is empty).</source>
          <target state="translated">(의 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> 컬렉션은 비어).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
          <source>The identities from which to initialize the new claims principal.</source>
          <target state="translated">새 클레임 보안 주체를 초기화할 ID입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> class using the specified claims identities.</source>
          <target state="translated">지정된 클레임 ID를 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> collection is initialized with the specified identities.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> 컬렉션은 지정한 id를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
          <source><ph id="ph1">&lt;paramref name="identities" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identities" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> pointing to a <ph id="ph2">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph>을 가리키는 <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)">
          <source>Initializes an instance of <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> with the specified <ph id="ph2">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>의 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)">
          <source>Normally, the <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> is constructed using the bytes from <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A&gt;</ph> and initialized in the same way as the <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph>.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.IO.BinaryReader&gt;</ph> 에서 바이트를 사용 하 여 생성은 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A&gt;</ph> 되 고 동일한 방식으로 초기화는 <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)">
          <source>The identity from which to initialize the new claims principal.</source>
          <target state="translated">새 클레임 보안 주체를 초기화할 ID입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> class from the specified identity.</source>
          <target state="translated">지정된 ID에서 <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)">
          <source>If the specified identity is assignable from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph>, it is used to initialize the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> collection.</source>
          <target state="translated">지정된 된 id에서 할당할 수 있는 경우 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph>, 초기화 하는 데 사용 되는 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)">
          <source>Otherwise, a <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> is created using the specified identity and is used to initialize the collection.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> 컬렉션을 초기화 하는 데 사용 되 고 지정된 된 id를 사용 하 여 만들어집니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)">
          <source>The principal from which to initialize the new claims principal.</source>
          <target state="translated">새 클레임 보안 주체를 초기화하는 보안 주체입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> class from the specified principal.</source>
          <target state="translated">지정된 보안 주체에서 <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)">
          <source>If the specified principal is assignable from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>, all of its identities are added to the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> collection.</source>
          <target state="translated">지정된 된 보안 주체에서 할당할 수 있는 경우 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>에 추가 된 모든 해당 id는 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)">
          <source>If the specified principal is not assignable from <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>, a new <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> is created from the <ph id="ph3">&lt;xref:System.Security.Principal.IIdentity&gt;</ph> in its <ph id="ph4">&lt;xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType&gt;</ph> property and added to the <ph id="ph5">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> collection.</source>
          <target state="translated">지정된 된 보안 주체에서 할당할 수 없으면 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>, 새 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> 에서 만든는 <ph id="ph3">&lt;xref:System.Security.Principal.IIdentity&gt;</ph> 에 해당 <ph id="ph4">&lt;xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType&gt;</ph> 속성에 추가 하 고는 <ph id="ph5">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)">
          <source><ph id="ph1">&lt;paramref name="principal" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="principal" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The serialized data.</source>
          <target state="translated">serialize된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The context for serialization.</source>
          <target state="translated">serialization에 대한 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> class from a serialized stream created by using <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph>을 사용하여 만든 serialize된 스트림으로부터 <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
          <source>The claims identities to add.</source>
          <target state="translated">추가할 클레임 ID입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
          <source>Adds the specified claims identities to this claims principal.</source>
          <target state="translated">이 클레임 주체에 지정된 클레임 ID를 추가합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
          <source>The identities are added to the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> collection.</source>
          <target state="translated">Id에 추가 되는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
          <source><ph id="ph1">&lt;paramref name="identities" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identities" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)">
          <source>The claims identity to add.</source>
          <target state="translated">추가할 클레임 ID입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)">
          <source>Adds the specified claims identity to this claims principal.</source>
          <target state="translated">이 클레임 보안 주체에 지정된 클레임 ID를 추가합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)">
          <source>The identity is added to the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> collection.</source>
          <target state="translated">Id에 추가 되는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Security.Claims.ClaimsPrincipal.Claims">
          <source>Gets a collection that contains all of the claims from all of the claims identities associated with this claims principal.</source>
          <target state="translated">이 클레임 보안 주체와 연결된 모든 클레임 ID의 모든 클레임을 포함하는 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Claims">
          <source>The claims associated with this principal.</source>
          <target state="translated">이 보안 주체와 연결된 클레임입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Claims">
          <source>A claims principal has a collection of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> objects that is accessible through the Identities property.</source>
          <target state="translated">클레임 보안 주체에 게 컬렉션을 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> Identities 속성을 통해 액세스할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Claims">
          <source>Each <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> in the collection contains one or more claims.</source>
          <target state="translated">각 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> 컬렉션에 있는 하나 이상의 클레임을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Claims">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;</ph> property returns all of the claims from all of the claims identities in this collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;</ph> 속성에서이 컬렉션에 클레임 id의 모든 클레임을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Claims">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;</ph> property can be examined by custom implementations of the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> class to make authentication decisions or to filter, transform, or enrich an incoming claim set; by custom implementations of the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> class to enforce authorization policy; or by application code to make authorization decisions or to customize user experience based on the claims present in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Claims%2A&gt;</ph> 의 사용자 지정 구현 속성을 검사할 수 있습니다는 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> 인증 결정을 내릴 수 나 필터링, 변환 또는 들어오는 클레임 집합; 보강 하는 클래스의 사용자 지정 구현에서 <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsAuthorizationManager&gt;</ph> 적용 하는 클래스 권한 부여 정책. 또는 응용 프로그램에 의해 코드 사용자 환경을 사용자 지정 하거나 권한 부여를 결정할 수에 따라 컬렉션에 있는 클레임이 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector">
          <source>Gets and sets the delegate used to select the claims principal returned by the <ph id="ph1">&lt;see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /&gt;</ph> 속성에 의해 반환된 클레임 주체를 선택하는 데 사용된 대리자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector">
          <source>The delegate.</source>
          <target state="translated">대리자입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector">
          <source>You can set this property to override the default behavior of the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Current%2A&gt;</ph> property.</source>
          <target state="translated">기본 동작을 재정의 하려면이 속성을 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Current%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector">
          <source>Set operation requires full trust for the immediate caller.</source>
          <target state="translated">Set 작업은 직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector">
          <source>This member cannot be set by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.Clone">
          <source>Returns a copy of this instance.</source>
          <target state="translated">이 인스턴스의 복사본을 반환합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.Clone">
          <source>A new copy of the <ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> 개체의 새 복사본입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)">
          <source>The binary reader.</source>
          <target state="translated">이진 판독기입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)">
          <source>Creates a new claims identity.</source>
          <target state="translated">새 클레임 ID를 만듭니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)">
          <source>The created claims identity.</source>
          <target state="translated">생성된 클레임 ID입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Security.Claims.ClaimsPrincipal.Current">
          <source>Gets the current claims principal.</source>
          <target state="translated">현재 클레임 주체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Current">
          <source>The current claims principal.</source>
          <target state="translated">현재 클레임 주체입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Current">
          <source>By default, <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> is returned.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Current">
          <source>You can change this behavior by setting the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A&gt;</ph> property to specify a delegate to be called to determine the current principal.</source>
          <target state="translated">설정 하 여이 동작을 변경할 수는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A&gt;</ph> 속성을 대리자 현재 보안 주체를 확인 하기 위해 호출 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Security.Claims.ClaimsPrincipal.CustomSerializationData">
          <source>Contains any additional data provided by a derived type.</source>
          <target state="translated">파생된 형식에서 제공하는 추가 데이터를 포함합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Security.Claims.ClaimsPrincipal.CustomSerializationData">
          <source>Typically set when calling <ph id="ph1">&lt;see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /&gt;</ph>.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /&gt;</ph>를 호출할 때 설정합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.CustomSerializationData">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array representing the additional serialized data.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> serialize 된 데이터는 추가 나타내는 배열입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>Retrieves all of the claims that match a specified condition.</source>
          <target state="translated">지정된 조건을 일치하는 모든 클레임을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})">
          <source>The function that performs the matching logic.</source>
          <target state="translated">일치하는 논리를 수행하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})">
          <source>Retrieves all of the claims that are matched by the specified predicate.</source>
          <target state="translated">지정된 조건자와 일치하는 클레임을 모두 검색합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})">
          <source>The matching claims.</source>
          <target state="translated">일치하는 클레임입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})">
          <source>Returns claims from all identities associated with the claims principal.</source>
          <target state="translated">클레임 보안 주체와 연결 된 모든 id에서 클레임을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)">
          <source>The claim type against which to match claims.</source>
          <target state="translated">클레임을 일치시킬 클레임 형식입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)">
          <source>Retrieves all or the claims that have the specified claim type.</source>
          <target state="translated">모든 클레임 또는 지정된 클레임 형식을 갖는 클레임을 검색합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)">
          <source>The matching claims.</source>
          <target state="translated">일치하는 클레임입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)">
          <source>Returns claims from all identities associated with the claims principal.</source>
          <target state="translated">클레임 보안 주체와 연결 된 모든 id에서 클레임을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)">
          <source>The comparison is made using Ordinal case in-sensitive on <ph id="ph1">`type`</ph>.</source>
          <target state="translated">서 수에 맞는 대/소문자를 사용 하는 비교를 수행 <ph id="ph1">`type`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>Retrieves the first claim that matches a specified condition.</source>
          <target state="translated">지정된 조건과 일치하는 첫 번째 클레임을 검색합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})">
          <source>The function that performs the matching logic.</source>
          <target state="translated">일치하는 논리를 수행하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})">
          <source>Retrieves the first claim that is matched by the specified predicate.</source>
          <target state="translated">지정된 조건자와 일치하는 첫 번째 클레임을 검색합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})">
          <source>The first matching claim or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no match is found.</source>
          <target state="translated">첫 번째 일치하는 클레임 또는 일치가 발견되지 않은 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)">
          <source>The claim type to match.</source>
          <target state="translated">일치시킬 클레임 형식입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)">
          <source>Retrieves the first claim with the specified claim type.</source>
          <target state="translated">지정된 클레임 형식을 갖는 첫 번째 클레임을 검색합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)">
          <source>The first matching claim or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no match is found.</source>
          <target state="translated">첫 번째 일치하는 클레임 또는 일치가 발견되지 않은 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object to populate with data.</source>
          <target state="translated">데이터로 채울 개체입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination for this serialization.</source>
          <target state="translated">이 serialization의 대상입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with data needed to serialize the current <ph id="ph2">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체를 serialize하는 데 필요한 데이터로 <ph id="ph2">&lt;see cref="T:System.Security.Claims.ClaimsPrincipal" /&gt;</ph>를 채웁니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="T:System.Security.Claims.ClaimsPrincipal">
          <source>Determines whether any of the claims identities associated with this claims principal contains a claim that matches specified conditions.</source>
          <target state="translated">이 클레임 보안 주체와 연결된 클레임 ID에 지정된 조건과 일치하는 클레임이 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})">
          <source>The function that performs the matching logic.</source>
          <target state="translated">일치하는 논리를 수행하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})">
          <source>Determines whether any of the claims identities associated with this claims principal contains a claim that is matched by the specified predicate.</source>
          <target state="translated">이 클레임 보안 주체와 연결된 클레임 ID에 지정된 조건자와 일치하는 클레임이 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching claim exists; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">일치하는 클레임이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})">
          <source><ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="match" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)">
          <source>The type of the claim to match.</source>
          <target state="translated">일치시킬 클레임의 형식입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)">
          <source>The value of the claim to match.</source>
          <target state="translated">일치시킬 클레임의 값입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)">
          <source>Determines whether any of the claims identities associated with this claims principal contains a claim with the specified claim type and value.</source>
          <target state="translated">이 클레임 보안 주체와 연결된 클레임 ID에 지정된 클레임 형식 및 값을 갖는 클레임이 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching claim exists; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">일치하는 클레임이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)">
          <source>Does not check the <ph id="ph1">&lt;xref:System.Security.Claims.Claim.Issuer%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Claims.Claim.OriginalIssuer%2A&gt;</ph> properties.</source>
          <target state="translated">확인 하지 않습니다는 <ph id="ph1">&lt;xref:System.Security.Claims.Claim.Issuer%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Claims.Claim.OriginalIssuer%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)">
          <source>The comparison is made using Ordinal, case sensitive on value; case in-sensitive on type.</source>
          <target state="translated">대/소문자 구분 value;에 서 수를 사용 하는 비교를 수행 형식에 맞는 사례입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <bpt id="p1">**</bpt>null<ept id="p1">**</ept>인 경우</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Security.Claims.ClaimsPrincipal.Identities">
          <source>Gets a collection that contains all of the claims identities associated with this claims principal.</source>
          <target state="translated">이 클레임 보안 주체와 연결된 모든 클레임 ID를 포함하는 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Identities">
          <source>The collection of claims identities.</source>
          <target state="translated">클레임 ID의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Identities">
          <source>In the common case, the collection contains only a single element.</source>
          <target state="translated">일반적인 경우에서는 컬렉션 요소를 하나만 포함합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Identities">
          <source>It is possible for the collection to contain some elements which are <ph id="ph1">`null`</ph>.</source>
          <target state="translated">수 있는 몇 가지 요소를 포함 하는 컬렉션에 대 한 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Security.Claims.ClaimsPrincipal.Identity">
          <source>Gets the primary claims identity associated with this claims principal.</source>
          <target state="translated">이 클레임 주체와 연결된 주 클레임 ID를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Identity">
          <source>The primary claims identity associated with this claims principal.</source>
          <target state="translated">이 클레임 주체와 연결된 주 클레임 ID입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Identity">
          <source>By default, the framework prioritizes identities of type <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> when returning the identity.</source>
          <target state="translated">기본적으로 프레임 워크의 유형 id를 지정 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> id를 반환 하는 경우.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Identity">
          <source>The first <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> found in the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> collection is returned.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> 컬렉션이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Identity">
          <source>If there is no <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> in the collection, the first identity assignable from <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> is returned.</source>
          <target state="translated">없는 경우 없는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> 첫 번째 id에서 할당할 수 있는 컬렉션에 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Identity">
          <source>If there is no <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph>, <ph id="ph2">`null`</ph> is returned.</source>
          <target state="translated">없는 경우 없는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph>, <ph id="ph2">`null`</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Identity">
          <source>If the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> collection is empty, an <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identities%2A&gt;</ph> 컬렉션이 비어는 <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.Identity">
          <source>You can change the default behavior by setting the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A&gt;</ph> property to specify a delegate to be called to determine the identity.</source>
          <target state="translated">설정 하 여 기본 동작을 변경할 수는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A&gt;</ph> 속성을 통해 id를 확인 하기 위해 호출 될 대리자를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)">
          <source>The role for which to check.</source>
          <target state="translated">확인할 역할입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)">
          <source>Returns a value that indicates whether the entity (user) represented by this claims principal is in the specified role.</source>
          <target state="translated">이 클레임 보안 주체가 나타내는 엔터티(사용자)가 지정된 역할에 속하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if claims principal is in the specified role; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클레임 보안 주체가 지정된 역할에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A&gt;</ph> method checks whether an identity that this claims principal possesses contains a claim of type <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType&gt;</ph> where the value of the claim is equal to the value specified by the <ph id="ph3">`role`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A&gt;</ph> 메서드 형식의 클레임이이 클레임 보안 주체를 소유 하는 id에 포함 되어 있는지 여부를 확인 <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType&gt;</ph> 클레임의 값은 지정 된 값과 같은 <ph id="ph3">`role`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)">
          <source>Each <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> has its own definition of the claim type that represents a role.</source>
          <target state="translated">각 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity&gt;</ph> 에 역할을 나타내는 클레임 유형의 고유 정의가 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)">
          <source>This claim type can be accessed and set through the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이 클레임 유형을 액세스 하 고를 통해 설정할 수는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector">
          <source>Gets and sets the delegate used to select the claims identity returned by the <ph id="ph1">&lt;see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /&gt;</ph> 속성이 반환하는 클레임 ID를 선택하는 데 사용되는 대리자를 가져오고 설정합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector">
          <source>The delegate.</source>
          <target state="translated">대리자입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector">
          <source>You can set this property to override the default behavior of the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt;</ph> property.</source>
          <target state="translated">기본 동작을 재정의 하려면이 속성을 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal.Identity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector">
          <source>Set operation requires full trust for the immediate caller.</source>
          <target state="translated">Set 작업은 직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector">
          <source>This member cannot be set by partially trusted or transparent code.</source>
          <target state="translated">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)">
          <source>The writer to use for data storage.</source>
          <target state="translated">데이터 저장소에 사용할 작성기입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)">
          <source>Serializes using a <ph id="ph1">&lt;see cref="T:System.IO.BinaryWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.BinaryWriter" /&gt;</ph>를 사용하여 직렬화합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])">
          <source>The writer to use for data storage.</source>
          <target state="translated">데이터 저장소에 사용할 작성기입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])">
          <source>Additional data provided by the derived type.</source>
          <target state="translated">파생된 형식에서 제공하는 추가 데이터입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])">
          <source>Serializes using a <ph id="ph1">&lt;see cref="T:System.IO.BinaryWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.BinaryWriter" /&gt;</ph>를 사용하여 직렬화합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>