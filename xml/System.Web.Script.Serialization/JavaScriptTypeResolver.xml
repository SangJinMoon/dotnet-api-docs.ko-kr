<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe8e0e840500610030d7c1d33f78c4810df879fe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="34d48-101">사용자 지정 형식 확인자를 구현하기 위한 추상 기본 클래스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="34d48-101">Provides the abstract base class for implementing a custom type resolver.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34d48-102"><xref:System.Web.Script.Serialization.JavaScriptTypeResolver> 클래스에 대 한 서비스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="34d48-102">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class provides the services for:</span></span>  
  
-   <span data-ttu-id="34d48-103">관리 되는 변환 형식 정보를 통해는 문자열 값으로는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="34d48-103">Converting managed type information to a string value through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method.</span></span>  
  
-   <span data-ttu-id="34d48-104">형식을 통해 관리 되는 문자열 값을 적절 한 해결는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="34d48-104">Resolving a string value back to the appropriate managed type through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method.</span></span>  
  
 <span data-ttu-id="34d48-105">경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 것에 포함할 수도 serialize 된 개체 JSON (JavaScript Notation) 문자열 형식 정보를 포함 하는 값, 개체 사용자 지정 형식을 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="34d48-105">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object serializes custom types, it can optionally include in the serialized JavaScript Object Notation (JSON) string a value that contains type information.</span></span> <span data-ttu-id="34d48-106">역직렬화 하는 동안 <xref:System.Web.Script.Serialization.JavaScriptSerializer> JSON 문자열로 변환 될 수 있습니다 다음이 문자열 값을 적절 한 결정을 관리 하는 참조 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="34d48-106">During deserialization, <xref:System.Web.Script.Serialization.JavaScriptSerializer> can then reference this string value to determine the appropriate managed type to which the JSON string will be converted.</span></span>  
  
 <span data-ttu-id="34d48-107">형식 확인자를 제공 하는 경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스에서, serializer가 사용 하 여는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> 및 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> 메서드 매핑할 관리 되는 형식 및 문자열 값 사이의 serialization 및 deserialization 프로세스 동안 각각.</span><span class="sxs-lookup"><span data-stu-id="34d48-107">If you provide a type resolver to the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer will use the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> and <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> methods to map between the managed type and the string value during the serialization and deserialization process, respectively.</span></span>  
  
 <span data-ttu-id="34d48-108"><xref:System.Web.Script.Serialization.JavaScriptTypeResolver> 클래스는에 대 한 기본 클래스는 <xref:System.Web.Script.Serialization.SimpleTypeResolver> 클래스의 관리 되는 형식의 어셈블리 정규화 된 이름을 사용 하는 형식 확인자는 구현을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="34d48-108">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class is the base class for the <xref:System.Web.Script.Serialization.SimpleTypeResolver> class, which provides an implementation of a type resolver that uses the managed type assembly-qualified name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="34d48-109">다음 예제에는 사용자 지정 형식 확인자를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="34d48-109">The following example demonstrates how to create a custom type resolver.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="34d48-110">반환 되는 문자열 유형 해결 프로그램을 구현 하는 경우는 <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> 문자열 값에 전달 되 면 메서드 같은 관리 되는 형식으로 다시 매핑해야는 <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> 메서드.</span>
        <span class="sxs-lookup">
          <span data-stu-id="34d48-110">When you implement a type resolver, the string that is returned by the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> method must map back to the same managed type when the string value is passed to the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> method.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="34d48-111">
            <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34d48-111">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="34d48-112">관리되는 형식의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34d48-112">The name of the managed type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34d48-113">파생 클래스에서 재정의되는 경우 지정된 형식 이름과 관련된 <see cref="T:System.Type" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34d48-113">When overridden in a derived class, returns the <see cref="T:System.Type" /> object that is associated with the specified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34d48-114">지정된 형식 이름과 관련된 <see cref="T:System.Type" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34d48-114">The <see cref="T:System.Type" /> object that is associated with the specified type name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34d48-115">유형 해결 프로그램은 연결 된 경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스에서, serializer를 사용 하는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> 메서드 관리 되는 JSON 형식은 변환할 형식 특정을 결정 하는 JSON 문자열을 반복 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="34d48-115">When a type resolver is associated with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer uses the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method when it iterates through a JSON string to determine the specific managed type to which the JSON type should be converted.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="34d48-116">지정 된 문자열 값을 한 유형 해결 프로그램 반환 해야 합니다는 <see cref="T:System.Type" /> 관리 되는 형식 해당를 나타내는 개체입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="34d48-116">Given a string value, the type resolver must return a <see cref="T:System.Type" /> object that represents the corresponding managed type.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="34d48-117">확인할 관리되는 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34d48-117">The managed type to be resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="34d48-118">파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Type" /> 개체의 형식 이름을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34d48-118">When overridden in a derived class, returns the type name for the specified <see cref="T:System.Type" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="34d48-119">지정된 관리되는 형식의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="34d48-119">The name of the specified managed type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34d48-120">경우는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> 메서드 중 하나를 반환 합니다. `null` 또는 <xref:System.String.Empty>, 다음 유형 해결 프로그램 유형을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="34d48-120">If the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method returns either `null` or <xref:System.String.Empty>, then the type resolver does not support the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>