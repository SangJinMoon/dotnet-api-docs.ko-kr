<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b63981aeb142a5efaf7d558492b84a509c56b6f" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51886617" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a01b3-101">사용자 지정 형식 변환기의 추상 기본 클래스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a01b3-101">Provides an abstract base class for a custom type converter.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a01b3-102">합니다 <xref:System.Web.Script.Serialization.JavaScriptConverter> 클래스를 사용 하면 serialization을 구현 하 여 고유 하 게 지원 되지 않는 관리 되는 형식에 대 한 프로세스를 deserialization 하는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="a01b3-103">사용할 수도 있습니다 <xref:System.Web.Script.Serialization.JavaScriptConverter> serialization 및 deserialization 프로세스를 보다 자세히 제어 해야 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="a01b3-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="a01b3-104"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> 속성 사용자 지정 변환기 변환기 서비스 제공 하는 형식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="a01b3-105">사용자 지정 변환기를 사용 해야 함을 나타내려면는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 들어 인스턴스와 변환기를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="a01b3-106">사용 중인 경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 직접 클래스를 사용 해야는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> 변환기를 등록 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="a01b3-107">그렇지 않으면 ECMAScript (JavaScript)에서 웹 메서드를 호출 하는 사용자 지정 변환기를 사용 하려는 경우 등록할 수 있습니다를 추가 하 여를 `converters` 구성 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="a01b3-108">자세한 내용은 [방법: Microsoft Ajax에서 ASP.NET 서비스 구성](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)합니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 <span data-ttu-id="a01b3-109">경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스는 형식에 등록 하는 사용자 지정 변환기가 호출 하 여 serializer 직렬화 합니다 <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a01b3-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="a01b3-110">마찬가지로, 합니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스 개체 JSON (JavaScript Notation) 문자열을 역직렬화 되 고 JSON 문자열을 내부 형식에 연결 된 serializer 호출 하 여 사용자 지정 변환기는 인식는 <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a01b3-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a01b3-111">다음 예제에 대 한 사용자 지정 변환기를 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.ListItemCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="a01b3-112">상속 하는 경우 <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, 멤버를 재정의 해야 합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="a01b3-112">When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:</span>
        </span> 
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /><span data-ttu-id="a01b3-113">
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 제공 된 <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> 의 구현자에 의해 사용 될 메서드 <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />합니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-113">
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span></span><span data-ttu-id="a01b3-114">변환기 코드 serializer에 전달 하는 사전에 포함 된 값을 사용 하도록 수 여야 하며 다음 해당 값 형식의 개체로 변환 <paramref name="T" />합니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-114">Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />.</span></span><span data-ttu-id="a01b3-115">이렇게 하려면 사용자 지정 변환 코드를 다시 구현 하지 않고 호출할 수 있습니다는 <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a01b3-115">Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</span></span></para>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">
      <span data-ttu-id="a01b3-116">ASP.NET AJAX의 웹 서비스</span>
      <span class="sxs-lookup">
        <span data-stu-id="a01b3-116">Web Services in ASP.NET AJAX</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a01b3-117">
            <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-117">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="a01b3-118">이름/값 쌍으로 저장된 속성 데이터의 <see cref="T:System.Collections.Generic.IDictionary`2" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-118">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a01b3-119">결과 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-119">The type of the resulting object.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="a01b3-120">
            <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-120">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a01b3-121">파생 클래스에서 재정의되는 경우 제공된 사전을 지정된 형식의 개체로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-121">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a01b3-122">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-122">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a01b3-123">
              <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> 메서드 값을 반복 합니다 <paramref name="dictionary" /> 에서 요청 된 형식의 인스턴스를 생성 하려면 매개 변수는 <paramref name="type" /> 매개 변수입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-123">The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter.</span>
            </span>
            <span data-ttu-id="a01b3-124">변환기에서 값을 직접 사용할 수 있지만 <paramref name="dictionary" />, 변환기 구현 자가 사용 하는 것이 좋습니다는 <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> 메서드 대신 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-124">Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead.</span>
            </span>
            <span data-ttu-id="a01b3-125">변환기가이 메서드를 호출 해야 합니다 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 에서 사용할 수 있는 인스턴스는 <paramref name="serializer" /> 매개 변수입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-125">The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.</span>
            </span>
            <span data-ttu-id="a01b3-126">합니다 <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> 에서 속성 값을 전달 하는 변환기 메서드를 사용 하면 <paramref name="dictionary" />, 하며 예상 되는 형식의 값을 반환 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-126">The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type.</span>
            </span>
            <span data-ttu-id="a01b3-127">일부 경우에는 사용자 지정 형식에 대 한 변환기 작업할 수 속성 변환기를 등록 한 자체 (예를 들어, 입력 형식 B의 속성이 및 형식 B도 사용자 지정 변환기를 사용 하 여 연결 됩니다).</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-127">In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter).</span>
            </span>
            <span data-ttu-id="a01b3-128">이 경우 호출 <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> 사용자 지정 변환기 재귀적으로 사전에 포함 된 속성 데이터에 대 한 호출 되도록 했는지 확인 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-128">In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary.</span>
            </span>
            <span data-ttu-id="a01b3-129">변환기가 사전의 모든 항목을 통해 반복 하는 경우 대상 형식의 생성 된 인스턴스를 반환 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-129">When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.</span>
            </span>
            <span data-ttu-id="a01b3-130">변환기를 역직렬화 하는 동안에 문제가 발생 하는 경우 throw 해야 합니다는 <see cref="T:System.InvalidOperationException" /> 문제를 설명 하는 오류입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-130">If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a01b3-131">serialize할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-131">The object to serialize.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="a01b3-132">serialization을 담당하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-132">The object that is responsible for the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a01b3-133">파생 클래스에서 재정의되는 경우 이름/값 쌍으로 구성된 사전을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-133">When overridden in a derived class, builds a dictionary of name/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a01b3-134">개체의 데이터를 나타내는 키/값 쌍이 들어 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-134">An object that contains key/value pairs that represent the object’s data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a01b3-135">를 사용자 지정 변환기를 등록 되는 형식을 serialize 할 때 합니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스를 호출 하는 <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a01b3-135">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a01b3-136">반환 값 <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> 이어야 합니다는 <see cref="T:System.Collections.Generic.IDictionary`2" /> JSON으로 변환할 개체의 데이터를 나타내는 0 개 이상의 이름/값 쌍을 사용 하 여 인스턴스.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-136">The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON.</span>
            </span>
            <span data-ttu-id="a01b3-137">자체 변환기를 JSON으로 데이터를 serialize 하지 않습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-137">The converter itself does not serialize data as JSON.</span>
            </span>
            <span data-ttu-id="a01b3-138">변환기가 속성 이름 (사전에 대 한 문자열 키) 및 해당 속성을 포함 하는 이름/값 쌍의 사전을 작성 하는 대신 값 (사전에 개체 값).</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-138">Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary).</span>
            </span>
            <span data-ttu-id="a01b3-139">
              <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 인스턴스 이후에 이러한 JSON으로 변환 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-139">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.</span>
            </span>
            <span data-ttu-id="a01b3-140">변환기가 예외가 발생 하는 경우 throw 해야 합니다는 <see cref="T:System.InvalidOperationException" /> 문제를 설명 하는 오류입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-140">If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a01b3-141">파생 클래스에서 재정의된 경우 지원되는 형식의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-141">When overridden in a derived class, gets a collection of the supported types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a01b3-142">변환기에서 지원하는 형식을 나타내는 <see cref="T:System.Collections.Generic.IEnumerable`1" />을 구현하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a01b3-142">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a01b3-143"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> 속성 변환기에서 지원 되는 형식을 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-143">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="a01b3-144">런타임에 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스는 해당 사용자 지정 변환기를 관리 되는 형식의 매핑을 확인 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-144">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a01b3-145">다음 예제에서는 재정의 하는 방법의 <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> 파생된 클래스에서 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-145">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="a01b3-146">이 예제에서는 변환기만 지원 합니다 <xref:System.Web.UI.WebControls.ListItemCollection> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-146">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="a01b3-147">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Script.Serialization.JavaScriptConverter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a01b3-147">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a01b3-148">
              <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> 항상 반환 해야 컬렉션 및 컬렉션에는 하나 이상의 항목이 포함 되어야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a01b3-148">
                <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>