<Type Name="ScriptIgnoreAttribute" FullName="System.Web.Script.Serialization.ScriptIgnoreAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="002c5c60dc0588ae962eddd665de19092654b143" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597292" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ScriptIgnoreAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScriptIgnoreAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ScriptIgnoreAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptIgnoreAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ScriptIgnoreAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />에서 공용 속성 또는 공용 필드를 serialize하지 않도록 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 적용 하는 경우 <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> 공용 속성 또는 다음 클래스의 public 필드 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 를 무시 또는 개체 JSON (JavaScript Notation) 형식으로 클래스의 인스턴스를 직렬화 할 때 멤버를 건너뜁니다.  
  
 <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> 경우 아무 효과도 없습니다는 <xref:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat%2A> 속성이 `Xml`합니다. XML 형식으로 직렬화 할 때 동일한 동작을 포함 하려는 경우 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 속성 또는 필드에 적용 해야 대신 합니다. 클래스를 사용 하 여 serialize 할 때문에 이것이 <xref:System.Xml.Serialization.XmlSerializer> 대신 <xref:System.Web.Script.Serialization.JavaScriptSerializer>합니다.  
  
 둘 다 적용할 수도 있습니다 <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> 및 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 속성 또는 필드에 있습니다. 이 경우, 속성 또는 필드에는 JSON 및 XML 응답 형식에 대 한 무시 됩니다.  
  
 특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/docs/standard/attributes/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 적용 하는 방법을 <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute> 에 `Comment` 필드 라는 사용자 지정 클래스에 `Group`합니다. 이렇게 하면 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 를 JSON 형식 클래스의 인스턴스를 직렬화 할 때 필드를 무시 하도록 합니다.  
  
 [!code-csharp[System.Web.Script.Serialization.ScriptIgnoreAttribute#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.ScriptIgnoreAttribute/CS/App_Code/ScriptIgnoreSample.cs#1)]
 [!code-vb[System.Web.Script.Serialization.ScriptIgnoreAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.ScriptIgnoreAttribute/VB/App_Code/ScriptIgnoreSample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptIgnoreAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.ScriptIgnoreAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptIgnoreAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyToOverrides">
      <MemberSignature Language="C#" Value="public bool ApplyToOverrides { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyToOverrides" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.ScriptIgnoreAttribute.ApplyToOverrides" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyToOverrides As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyToOverrides { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyToOverrides : bool with get, set" Usage="System.Web.Script.Serialization.ScriptIgnoreAttribute.ApplyToOverrides" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" />에서 공용 속성 또는 공용 필드의 serialization을 고려하도록 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />를 재정할지 여부를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" />를 재정의하려면  <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>