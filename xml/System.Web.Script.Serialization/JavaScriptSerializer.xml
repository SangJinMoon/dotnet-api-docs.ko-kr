<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="JavaScriptSerializer.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57d32f4b8263b0fde5028248c2a084efc30c7bca5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d32f4b8263b0fde5028248c2a084efc30c7bca5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source><bpt id="p1">[</bpt>Json.NET<ept id="p1">](http://www.newtonsoft.com/json)</ept> should be used serialization and deserialization.</source>
          <target state="translated">serialization 및 deserialization에는 <bpt id="p1">[</bpt>Json.NET<ept id="p1">](http://www.newtonsoft.com/json)</ept>이 사용되어야 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Provides serialization and deserialization functionality for AJAX-enabled applications.</source>
          <target state="translated">AJAX 사용 응용 프로그램을 위한 serialization 및 deserialization 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class is used internally by the asynchronous communication layer to serialize and deserialize the data that is passed between the browser and the Web server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 클래스 하는 데 내부적으로 비동기 통신 계층에서 브라우저와 웹 서버 간에 전달 되는 데이터 serialize 및 deserialize 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>You cannot access that instance of the serializer.</source>
          <target state="translated">Serializer의 해당 인스턴스에 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>However, this class exposes a public API.</source>
          <target state="translated">그러나이 클래스는 공용 API를 노출 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Therefore, you can use the class when you want to work with JavaScript Object Notation (JSON) in managed code.</source>
          <target state="translated">따라서 관리 코드에서 사용 하 여 JavaScript 개체 Notation (JSON)에서 실행 되도록 하려는 경우 클래스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>To serialize an object, use the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">개체를 serialize 하는 데 사용 된 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>To deserialize a JSON string, use the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A&gt;</ph> methods.</source>
          <target state="translated">JSON 문자열을 deserialize 하는 데 사용 된 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>To serialize and deserialize types that are not natively supported by <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph>, implement custom converters by using the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> class.</source>
          <target state="translated">기본적으로 지원 되지 않는 형식을 serialize 및 deserialize를 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph>, 사용 하 여 사용자 지정 변환기 구현에서 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Then register the converters by using the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A&gt;</ph> method.</source>
          <target state="translated">그런 다음 변환기를 사용 하 여 등록 된 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Mapping Between Managed Types and JSON</source>
          <target state="translated">관리 되는 형식 및 JSON 간 매핑</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>The following table shows the mapping between managed types and JSON for the serialization process.</source>
          <target state="translated">다음 표에서 serialization 프로세스에 대 한 관리 되는 형식 및 JSON 간의 매핑을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>These managed types are natively supported by <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph>.</source>
          <target state="translated">이러한 관리 되는 형식에서 기본적으로 지 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>When you are deserializing from a JSON string to a managed type, the same mapping applies.</source>
          <target state="translated">관리 되는 형식에는 JSON 문자열에서 역직렬화 하 고는 동일한 매핑이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>However, deserialization can be asymmetric; not all serializable managed types can be deserialized from JSON.</source>
          <target state="translated">그러나 역직렬화 비대칭; 수 있습니다. 모든 직렬화 가능 관리 되는 형식은 JSON에서 역직렬화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>A multidimensional array is serialized as a one-dimensional array, and you should use it as a flat array.</source>
          <target state="translated">다차원 배열은 1 차원 배열에으로 serialize 되 고 평면 배열로 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Managed type</source>
          <target state="translated">관리 되는 형식</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>JSON equivalent</source>
          <target state="translated">해당 하는 JSON</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source><ph id="ph1">&lt;xref:System.String&gt;</ph> (UTF-8 encoding only).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String&gt;</ph> (U t F-8만 인코딩)입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>String</source>
          <target state="translated">문자열</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>String</source>
          <target state="translated">문자열</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Single null char (such as, \0 )</source>
          <target state="translated">단일 null 문자 (예: \0)</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Null</source>
          <target state="translated">Null</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Boolean.</source>
          <target state="translated">부울입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Represented in JSON as <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph></source>
          <target state="translated">JSON으로 표현 <ph id="ph1">`true`</ph> 또는 <ph id="ph2">`false`</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source><ph id="ph1">`null`</ph> (<ph id="ph2">`null`</ph> object references and <ph id="ph3">&lt;xref:System.Nullable&gt;</ph> value types).</source>
          <target state="translated"><ph id="ph1">`null`</ph> (<ph id="ph2">`null`</ph> 개체에서 참조 하 고 <ph id="ph3">&lt;xref:System.Nullable&gt;</ph> 값 형식).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>A string value of null</source>
          <target state="translated">Null 문자열 값</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>A string value of null</source>
          <target state="translated">Null 문자열 값</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Primitive numeric (or numeric-compatible) types: <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph9">&lt;xref:System.Double&gt;</ph>, and <ph id="ph10">&lt;xref:System.Single&gt;</ph>.</source>
          <target state="translated">숫자 (또는 숫자 호환)에 대 한 기본 형식: <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph9">&lt;xref:System.Double&gt;</ph>, 및 <ph id="ph10">&lt;xref:System.Single&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>The culture-invariant string representation is used.</source>
          <target state="translated">고정 문화권의 문자열 표현이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Number</source>
          <target state="translated">수</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Date object, represented in JSON as "<ph id="ph1">\\</ph>/Date(number of ticks)<ph id="ph2">\\</ph>/".</source>
          <target state="translated">Date 개체를 JSON으로 표현 "<ph id="ph1">\\</ph>/Date (틱 수가)<ph id="ph2">\\</ph>/"입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>The number of ticks is a positive or negative long value that indicates the number of ticks (milliseconds) that have elapsed since midnight 01 January, 1970 UTC.</source>
          <target state="translated">틱 수 (밀리초) 01 1970 년 1 월, UTC 자정 이후 경과 된 틱 수를 나타내는 long 한 값 양수 또는 음수입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>The maximum supported date value is <ph id="ph1">&lt;xref:System.DateTime.MaxValue&gt;</ph> (12/31/9999 11:59:59 PM) and the minimum supported date value is <ph id="ph2">&lt;xref:System.DateTime.MinValue&gt;</ph> (1/1/0001 12:00:00 AM).</source>
          <target state="translated">지원 되는 최대 날짜 값은 <ph id="ph1">&lt;xref:System.DateTime.MaxValue&gt;</ph> (9999/12/31 오후 11시 59분: 59) 지원 되는 최소 날짜 값은 <ph id="ph2">&lt;xref:System.DateTime.MinValue&gt;</ph> (1/1/0001 오전 12시: 00).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Enumerations of integer type</source>
          <target state="translated">정수 형식의 열거형</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Integer equivalent of the enumeration value</source>
          <target state="translated">열거형 값의 정수</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Types that implement <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> that are not also implementations of <ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph> or <ph id="ph4">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">구현 하는 형식은 <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> 없는 구현의 <ph id="ph3">&lt;xref:System.Collections.IDictionary&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>This includes types such as <ph id="ph1">&lt;xref:System.Array&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>, and <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">에 같은 <ph id="ph1">&lt;xref:System.Array&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Array that uses JSON array syntax</source>
          <target state="translated">JSON 배열 구문을 사용 하는 배열</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Types that implement <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">구현 하는 형식은 <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>This includes types such as <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
          <target state="translated">에 같은 <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>JavaScript object that uses JSON dictionary syntax</source>
          <target state="translated">JSON 사전 구문을 사용 하는 JavaScript 개체</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Custom concrete (non-abstract) types that have public instance properties that have get accessors or public instance fields.</source>
          <target state="translated">가 있는 public 인스턴스 속성을 가진 사용자 지정 구체적인 (비추상) 형식을 접근자 또는 공용 인스턴스 필드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Note that public write-only properties, public property or public field attributes marked with <ph id="ph1">&lt;xref:System.Web.Script.Serialization.ScriptIgnoreAttribute&gt;</ph>, and public indexed properties in these types are ignored.</source>
          <target state="translated">쓰기 전용 공용 속성, 공용 속성 또는 공용 필드 특성으로 표시 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.ScriptIgnoreAttribute&gt;</ph>, 이러한 종류의 인덱싱된 속성을 공개는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>JavaScript object that uses JSON dictionary syntax.</source>
          <target state="translated">JSON 사전 구문을 사용 하는 JavaScript 개체입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>A special metadata property named "__type" is included to ensure correct deserialization.</source>
          <target state="translated">"__Type" 라는 특별 한 메타 데이터 속성이 올바른 deserialization을 위해 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Make sure that public instance properties have get and set accessors to ensure correct deserialization.</source>
          <target state="translated">Public 인스턴스 속성 get 및 set 접근자 올바른 deserialization 되도록 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>String representation of a GUID</source>
          <target state="translated">GUID의 문자열 표현</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>String representation of the return value of <ph id="ph1">&lt;xref:System.Uri.GetComponents%2A&gt;</ph></source>
          <target state="translated">반환 값의 문자열 표현 <ph id="ph1">&lt;xref:System.Uri.GetComponents%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>The first example provides a simple illustration of how to serialize and deserialize data objects.</source>
          <target state="translated">첫 번째 예제를 직렬화 하 고 데이터 개체를 역직렬화 하는 방법에 대 한 간단한 설명을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>It requires a class names Person which is shown below.</source>
          <target state="translated">클래스 이름 아래에 나와 있는 사람이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>The next example shows a more complicated and complete project that uses the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class to save and restore the state of an object by using JSON serialization.</source>
          <target state="translated">다음 예제에서는 사용 하는 복잡 하 고 전체 프로젝트는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 클래스 저장 하 고 JSON serialization을 사용 하 여 개체의 상태를 복원 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>This code uses a custom converter that is provided for the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> class.</source>
          <target state="translated">이 코드에 제공 하는 사용자 지정 변환기를 사용 하 여는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> class that has no type resolver.</source>
          <target state="translated">형식 확인자가 없는 <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor">
          <source>An instance of the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class without a type resolver does not include type metadata properties (named "__type") in the serialized JSON string.</source>
          <target state="translated">인스턴스는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 클래스 없이 형식 확인자 serialize 된 JSON 문자열의 형식 메타 데이터 속성 (이름: "__type")를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor">
          <source>A type metadata property is used by the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A&gt;</ph> methods to determine the appropriate managed type to which the JSON string will be converted.</source>
          <target state="translated">형식 메타 데이터 속성은 사용 된 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A&gt;</ph> JSON 문자열로 변환 될 적절 한 관리를 확인 하는 메서드를 입력 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor">
          <source>For information about type resolvers, see the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver&gt;</ph> class.</source>
          <target state="translated">유형 해결 프로그램에 대 한 정보를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
          <source>The custom type-resolver object.</source>
          <target state="translated">사용자 지정 형식 확인자 개체입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> class that has a custom type resolver.</source>
          <target state="translated">사용자 지정 형식 확인자가 있는 <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
          <source>When it is serializing an object, the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class uses the <ph id="ph2">`resolver`</ph> parameter to determine the appropriate value to include in the serialized JSON string for the type metadata property ("__type").</source>
          <target state="translated">개체를 직렬화 할은 때는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 클래스에서 사용 하는 <ph id="ph2">`resolver`</ph> 매개 변수를 형식 메타 데이터 속성 ("__type")에 대 한 serialize 된 JSON 문자열에 포함할 적절 한 값을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
          <source>Similarly, when the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class  is deserializing a JSON string, it resolves the type metadata property value to the appropriate managed type by using the resolver instance.</source>
          <target state="translated">마찬가지로,는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 확인자 인스턴스를 사용 하 여 적절 한 관리 되는 형식으로 형식 메타 데이터 속성 값 확인, 클래스는 JSON 문자열을 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
          <source>You can set the <ph id="ph1">`resolver`</ph> parameter to <ph id="ph2">`null`</ph>, which is equivalent to calling the <ph id="ph3">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">`resolver`</ph> 매개 변수를 <ph id="ph2">`null`</ph>,이 값은 호출 하는 <ph id="ph3">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
          <source>The instance of <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> that is used by the asynchronous communication layer for invoking Web services from client script uses a special type resolver.</source>
          <target state="translated">인스턴스 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 특별 한 유형 해결 프로그램을 사용 하 여 클라이언트 스크립트에서 웹 서비스 호출에 대 한 비동기 통신 계층에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
          <source>This type resolver restricts the types that can be deserialized to those defined in the Web service’s method signature, or the ones that have the <ph id="ph1">&lt;xref:System.Web.Script.Services.GenerateScriptTypeAttribute&gt;</ph> applied.</source>
          <target state="translated">웹 서비스의 메서드 서명에 또는 수 있는 정의 된 deserialize 할 수 있는 형식 제한 하는이 형식 확인자는 <ph id="ph1">&lt;xref:System.Web.Script.Services.GenerateScriptTypeAttribute&gt;</ph> 적용 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
          <source>You cannot modify this built-in type resolver programmatically.</source>
          <target state="translated">이 기본 제공 형식 확인자를 프로그래밍 방식으로 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
          <source>Using an instance of this object initialized with a custom type-resolver can present a security risk.</source>
          <target state="translated">사용자 지정 형식 확인자를 사용 하 여 초기화이 개체의 인스턴스를 사용 하 여 보안상 위험 해질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
          <source>Use this object only with trusted data.</source>
          <target state="translated">신뢰할 수 있는 데이터에만이 개체를 사용 하십시오.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 유효성 검사<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
          <source>The object to convert.</source>
          <target state="translated">변환할 개체입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
          <source>The type to convert the object to.</source>
          <target state="translated">개체를 변환할 대상 유형입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
          <source>Converts the specified object to the specified type.</source>
          <target state="translated">지정된 개체를 지정된 형식으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
          <source>The serialized JSON string.</source>
          <target state="translated">serialize된 JSON 문자열입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is serializing a type for which a custom converter is registered, the serializer calls the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method to obtain the dictionary of name/value pairs that will be converted to a JSON-formatted string.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 인스턴스 형식을 사용자 지정 변환기가 등록 되어 있는, serializer 호출 하 여 직렬화 되는 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> 메서드를 JSON 형식 문자열로 변환 되는 이름/값 쌍의 사전입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> method can also throw exceptions if the object graph is too complex, or if registered instances of <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> have caused converter recursion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> 메서드가 개체 그래프는 너무 복잡 하거나의 인스턴스를 등록 하는 경우 예외가 throw 될 수 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> 변환기 재귀가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
          <source>The resulting JSON-formatted string exceeds the value of <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>.</source>
          <target state="translated">결과 JSON 형식의 문자열이 <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>의 값을 초과합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> contains a circular reference.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>에 순환 참조가 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
          <source>A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</source>
          <target state="translated">순환 참조는 자식 개체와 부모 개체에서 서로를 참조하는 경우에 발생하며,</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
          <source>The recursion limit defined by <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph> was exceeded.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph>로 정의된 재귀 한계를 초과했습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>The type to which <bpt id="p1">&lt;c&gt;</bpt>obj<ept id="p1">&lt;/c&gt;</ept> will be converted.</source>
          <target state="translated">대상 형식 <bpt id="p1">&lt;c&gt;</bpt>obj<ept id="p1">&lt;/c&gt;</ept> 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>The object to convert.</source>
          <target state="translated">변환할 개체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>Converts the given object to the specified type.</source>
          <target state="translated">지정된 개체를 지정된 형식으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>The object that has been converted to the target type.</source>
          <target state="translated">대상 유형으로 변환된 개체입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A&gt;</ph> method tries to convert the object instance that is represented by <ph id="ph2">`obj`</ph> to an instance of type <ph id="ph3">`T`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A&gt;</ph> 메서드를 나타내는 개체 인스턴스를 변환 하려고 <ph id="ph2">`obj`</ph> 형식의 인스턴스로 <ph id="ph3">`T`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>During this conversion there is no guarantee that object reference equality is maintained.</source>
          <target state="translated">이 변환 하는 동안 보장이 없습니다 개체 참조 일치 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>Therefore, you cannot assume that <ph id="ph1">`obj`</ph> and <ph id="ph2">`T`</ph> refer to the same object.</source>
          <target state="translated">한다고 가정할 수 없습니다 따라서 <ph id="ph1">`obj`</ph> 및 <ph id="ph2">`T`</ph> 같은 개체를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A&gt;</ph> is intended to be used if you implement a class that derives from <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A&gt;</ph> 파생 되는 클래스를 구현 하는 경우 사용 하도록 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>Converter code must be able to take a value that is in the dictionary that the serializer passes to it, and then convert that value to an instance of type <ph id="ph1">`T`</ph>.</source>
          <target state="translated">변환기 코드 해야 serializer에 전달 하는 사전에 있는 값을 사용할 수 없으며 다음 해당 값 형식의 인스턴스로 변환 <ph id="ph1">`T`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>Instead of re-implementing the custom conversion code to perform this task, you can call the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A&gt;</ph> method from the converter code.</source>
          <target state="translated">이 작업을 수행 하는 사용자 지정 변환 코드를 다시 구현 하는 대신 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A&gt;</ph> 변환기 코드에서 메서드.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A&gt;</ph> method to obtain a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListItem&gt;</ph> object from a value in the dictionary that is passed to the converter.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A&gt;</ph> 를 얻는 메서드를 한 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListItem&gt;</ph> 변환기에 전달 되는 사전에서 값에서 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> (or a nested member of <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>) contains a "__type" property that indicates a custom type, but the type resolver that is associated with the serializer cannot find a corresponding managed type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>(또는 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>의 중첩된 멤버)에는 사용자 형식을 나타내는 "__type" 속성이 포함되지만 serializer와 연결된 형식 확인자는 해당 관리되는 형식을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> (or a nested member of <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>) contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>(또는 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>의 중첩된 멤버)에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> (or a nested member of <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>) contains a "__type" property that indicates either <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph> or a non-instantiable type (for example, an abstract type or an interface).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>의 중첩된 멤버에 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>An attempt was made to convert <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> to an array-like managed type, which is not supported for use as a deserialization target.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>를 deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>It is not possible to convert <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> to <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>를 <ph id="ph2">&lt;paramref name="T" /&gt;</ph>로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is a dictionary type and a non-string key value was encountered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> includes member definitions that are not available on type <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>에 형식 <ph id="ph2">&lt;paramref name="T" /&gt;</ph>에 사용할 수 없는 멤버 정의가 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>The JSON string to deserialize.</source>
          <target state="translated">deserialize할 JSON 문자열입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>The type of the resulting object.</source>
          <target state="translated">결과 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>Converts a JSON-formatted string to an object of the specified type.</source>
          <target state="translated">JSON 형식 문자열을 지정된 형식의 개체로 변환합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>The deserialized object.</source>
          <target state="translated">deserialize된 개체입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>This deserialization method does not try to cast the root of the object graph to a specific type, the way that the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> method does.</source>
          <target state="translated">이 deserialization 메서드는 방법은 특정 형식으로 개체 그래프의 루트를 캐스팅 하 려 하지 않습니다는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> 메서드 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>The length of <ph id="ph1">&lt;paramref name="input" /&gt;</ph> exceeds the value of <ph id="ph2">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 길이가 <ph id="ph2">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>의 값을 초과합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>The recursion limit defined by <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph> was exceeded.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph>로 정의된 재귀 한계를 초과했습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains an unexpected character sequence.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 예기치 않은 문자 시퀀스가 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is a dictionary type and a non-string key value was encountered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> includes member definitions that are not available on the target type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 대상 형식에 사용할 수 없는 멤버 정의가 있습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 사용자 지정 형식을 나타내는 “__type” 속성이 있지만 현재 serializer와 연결된 형식 확인자가 해당 관리되는 형식을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains a "__type" property that indicates either <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> or a non-instantiable type (for example, an abstract type or an interface).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</source>
          <target state="translated">JSON 배열을 JSON deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
          <source>It is not possible to convert <ph id="ph1">&lt;paramref name="input" /&gt;</ph> to the target type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>을 대상 형식으로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>The type of the resulting object.</source>
          <target state="translated">결과 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>The JSON string to be deserialized.</source>
          <target state="translated">deserialize할 JSON 문자열입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>Converts the specified JSON string to an object of type <ph id="ph1">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated">지정한 JSON 문자열을 <ph id="ph1">&lt;paramref name="T" /&gt;</ph> 형식의 개체로 변환합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>The deserialized object.</source>
          <target state="translated">deserialize된 개체입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> method is equivalent to first using the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A&gt;</ph> method to obtain an object graph and then trying to cast the result to type <ph id="ph3">`T`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> 첫 번째 사용 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A&gt;</ph> 개체 그래프를 형식으로 결과를 캐스팅 한 다음 시도 얻는 메서드를 <ph id="ph3">`T`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>During deserialization, the serializer’s current type resolver is referenced, which determines the managed type to use when converting elements that are nested inside arrays and dictionary types.</source>
          <target state="translated">역직렬화 하는 동안 배열 및 사전 형식 안에 중첩 된 요소를 변환할 때 사용할 관리 되는 형식을 결정 하는 serializer의 현재 유형 해결 프로그램 참조 됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>As a result, the deserialization process iterates through all nested elements of <ph id="ph1">`input`</ph>.</source>
          <target state="translated">Deserialization 프로세스의 모든 중첩 된 요소를 반복 결과적으로, <ph id="ph1">`input`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>For more information about type resolvers, see the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver&gt;</ph> class.</source>
          <target state="translated">유형 해결 프로그램에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptTypeResolver&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>The following example provides a simple illustration of how to serialize and deserialize data objects.</source>
          <target state="translated">다음 예제에서는 직렬화 하 고 데이터 개체를 역직렬화 하는 방법에 대 한 간단한 설명을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>It requires a class named <ph id="ph1">`Person`</ph>, which is shown in the following example.</source>
          <target state="translated">라는 클래스를 필요로 <ph id="ph1">`Person`</ph>, 다음 예제에 나와 있는 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> length exceeds the value of <ph id="ph2">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 길이가 <ph id="ph2">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>의 값을 초과합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>The recursion limit defined by <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph> was exceeded.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph>로 정의된 재귀 한계를 초과했습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains an unexpected character sequence.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 예기치 않은 문자 시퀀스가 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is a dictionary type and a non-string key value was encountered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> includes member definitions that are not available on type <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 형식 <ph id="ph2">&lt;paramref name="T" /&gt;</ph>에 사용할 수 없는 멤버 정의가 있습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains a "__type" property that indicates a custom type, but the type resolver associated with the serializer cannot find a corresponding managed type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 사용자 지정 형식을 나타내는 “__type” 속성이 있지만 serializer와 연결된 형식 확인자에서 해당 관리되는 형식을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains a "__type" property that indicates either <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> or a non-instantiable type (for example, an abstract types or an interface).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</source>
          <target state="translated">JSON 배열을 JSON deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
          <source>It is not possible to convert <ph id="ph1">&lt;paramref name="input" /&gt;</ph> to <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>를 <ph id="ph2">&lt;paramref name="T" /&gt;</ph>로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>The JSON string to be deserialized.</source>
          <target state="translated">deserialize할 JSON 문자열입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>Converts the specified JSON string to an object graph.</source>
          <target state="translated">지정한 JSON 문자열을 개체 그래프로 변환합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>The deserialized object.</source>
          <target state="translated">deserialize된 개체입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>This deserialization method does not try to cast the root of the object graph to a specific type, as with the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">이 deserialization 메서드는 특정 형식으로 개체 그래프의 루트를 캐스팅 하 려 하지 않습니다과 마찬가지로 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> length exceeds the value of <ph id="ph2">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 길이가 <ph id="ph2">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>의 값을 초과합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>The recursion limit defined by <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph> was exceeded.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph>로 정의된 재귀 한계를 초과했습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains an unexpected character sequence.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 예기치 않은 문자 시퀀스가 있습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> is a dictionary type and a non-string key value was encountered.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> includes member definitions that are not available on the target type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 대상 형식에 사용할 수 없는 멤버 정의가 있습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 사용자 지정 형식을 나타내는 “__type” 속성이 있지만 현재 serializer와 연결된 형식 확인자가 해당 관리되는 형식을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source><ph id="ph1">&lt;paramref name="input" /&gt;</ph> contains a "__type" property that indicates either <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> or a non-instantiable type (for example, an abstract type or an interface).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>에 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.</source>
          <target state="translated">JSON 배열을 JSON deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
          <source>It is not possible to convert <ph id="ph1">&lt;paramref name="input" /&gt;</ph> to the target type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph>을 대상 형식으로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength">
          <source>Gets or sets the maximum length of JSON strings that are accepted by the <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> 클래스에서 허용되는 JSON 문자열의 최대 길이를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength">
          <source>The maximum length of JSON strings.</source>
          <target state="translated">JSON 문자열의 최대 길이입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength">
          <source>The default is 2097152 characters, which is equivalent to 4 MB of Unicode string data.</source>
          <target state="translated">기본값은은 2097152 자로, 4MB의 유니코드 문자열 데이터와 같습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength">
          <source>The value of the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A&gt;</ph> property applies only when you explicitly create an instance of the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A&gt;</ph> 속성은의 인스턴스를 명시적으로 만드는 경우에 적용 됩니다.는 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength">
          <source>Use the <ph id="ph1">`jsonSerialization`</ph> element of the configuration file to set the maximum length for the internal serializer instance that is used by the asynchronous communication layer.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`jsonSerialization`</ph> 비동기 통신 계층에서 사용 되는 내부 serializer 인스턴스에 대 한 최대 길이 설정 하려면 구성 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength">
          <source>For more information about the configuration elements for serialization, see <bpt id="p1">[</bpt>How to: Configure ASP.NET Services in Microsoft Ajax<ept id="p1">](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)</ept>.</source>
          <target state="translated">Serialization에 대 한 구성 요소에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: Microsoft Ajax에서 ASP.NET 서비스 구성<ept id="p1">](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength">
          <source>The property is set to a value that is less than one.</source>
          <target state="translated">속성이 1보다 작은 값으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
          <source>Gets or sets the limit for constraining the number of object levels to process.</source>
          <target state="translated">처리할 개체 수준 수에 대한 제한을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
          <source>The number of object levels.</source>
          <target state="translated">개체 수준 수입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
          <source>The default is 100.</source>
          <target state="translated">기본값은 100입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A&gt;</ph> property refers to the number of levels in the object hierarchy that <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> will process in the following cases:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A&gt;</ph> 속성은 개체 계층의 수준 수를 참조 하는 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 다음과 같은 경우에 처리 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class is deserializing a JSON string.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 클래스는 JSON 문자열을 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class is walking an object graph during serialization.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 클래스는 직렬화 하는 동안 개체 graph를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
          <source>The value of <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A&gt;</ph> applies only when you explicitly create an instance of the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class.</source>
          <target state="translated">값 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A&gt;</ph> 의 인스턴스를 명시적으로 만드는 경우에 적용 되는 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
          <source>Use the <ph id="ph1">`jsonSerialization`</ph> element of the configuration file to set the number of object levels to process for the internal serializer instance that is used by the asynchronous communication layer.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`jsonSerialization`</ph> 비동기 통신 계층에서 사용 되는 내부 serializer 인스턴스의 처리할 개체 수준 수를 설정 하려면 구성 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
          <source>For more information about the configuration elements for serialization, see <bpt id="p1">[</bpt>How to: Configure ASP.NET Services in Microsoft Ajax<ept id="p1">](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)</ept>.</source>
          <target state="translated">Serialization에 대 한 구성 요소에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: Microsoft Ajax에서 ASP.NET 서비스 구성<ept id="p1">](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
          <source>The property is set to a value that is less than one.</source>
          <target state="translated">속성이 1보다 작은 값으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
          <source>An array that contains the custom converters to be registered.</source>
          <target state="translated">등록될 사용자 지정 변환기가 포함된 배열입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
          <source>Registers a custom converter with the <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> instance.</source>
          <target state="translated">사용자 지정 변환기를 <ph id="ph1">&lt;see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /&gt;</ph> 인스턴스에 등록합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
          <source>You can register one or more custom converters with a <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance by using the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A&gt;</ph> method.</source>
          <target state="translated">하나 이상의 사용자 지정 변환기를 등록할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 를 사용 하 여 인스턴스는 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
          <source>When custom converters are registered, <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> uses the converters both to serialize managed types and to deserialize JSON strings to managed types.</source>
          <target state="translated">사용자 지정 변환기를 등록 하는 경우 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 변환기를 사용 하 여 관리 되는 형식을 serialize 하 고 관리 되는 형식에 대 한 JSON 문자열을 deserialize 하는 데 있습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
          <source>Multiple converters can be registered with the same <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance, and these converters can indicate support for the same type.</source>
          <target state="translated">여러 변환기 동일한 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 인스턴스 및 이러한 변환기는 동일한 형식에 대 한 지원을 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
          <source>As a result, the last converter that is registered for a specific type is the one that will be used by <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> to serialize the type.</source>
          <target state="translated">결과적으로, 특정 형식에 대 한 등록 되어 있는 마지막 변환기는 사용해 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 여 형식을 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
          <source>For more information about custom converters, see the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> class.</source>
          <target state="translated">사용자 지정 변환기에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
          <source>The following example shows how to register a custom converter with a <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance.</source>
          <target state="translated">다음 예제에서는 사용자 지정 변환기를 등록 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
          <source><ph id="ph1">&lt;paramref name="converters" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="converters" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="T:System.Web.Script.Serialization.JavaScriptSerializer">
          <source>Converts an object to a JSON string.</source>
          <target state="translated">개체를 JSON 문자열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">serialize할 개체입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source>Converts an object to a JSON string.</source>
          <target state="translated">개체를 JSON 문자열로 변환합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source>The serialized JSON string.</source>
          <target state="translated">serialize된 JSON 문자열입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is serializing a type for which a custom converter is registered, the serializer calls the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 인스턴스 형식을 사용자 지정 변환기가 등록 되어 있는, serializer 호출 하 여 직렬화 되는 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> 메서드를 JSON 문자열로 변환 되는 이름/값 쌍의 사전입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> method can also throw exceptions if the object graph is too complex, or if registered instances of <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> have caused converter recursion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> 메서드가 개체 그래프는 너무 복잡 하거나의 인스턴스를 등록 하는 경우 예외가 throw 될 수 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> 변환기 재귀가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source>The following example provides a simple illustration of how to serialize and deserialize data objects.</source>
          <target state="translated">다음 예제에서는 직렬화 하 고 데이터 개체를 역직렬화 하는 방법에 대 한 간단한 설명을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source>It requires a class named <ph id="ph1">`Person`</ph>, which is shown in the following example.</source>
          <target state="translated">라는 클래스를 필요로 <ph id="ph1">`Person`</ph>, 다음 예제에 나와 있는 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source>The resulting JSON string exceeds the value of <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>.</source>
          <target state="translated">결과 JSON 문자열이 <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>의 값을 초과합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> contains a circular reference.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>에 순환 참조가 있습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source>A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</source>
          <target state="translated">순환 참조는 자식 개체와 부모 개체에서 서로를 참조하는 경우에 발생하며,</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
          <source>The recursion limit defined by <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph> was exceeded.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph>로 정의된 재귀 한계를 초과했습니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
          <source>The object to serialize.</source>
          <target state="translated">serialize할 개체입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object that is used to write the JSON string.</source>
          <target state="translated">JSON 문자열을 기록하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
          <source>Serializes an object and writes the resulting JSON string to the specified <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> object.</source>
          <target state="translated">개체를 serialize하고 결과 JSON 문자열을 지정한 <ph id="ph1">&lt;see cref="T:System.Text.StringBuilder" /&gt;</ph> 개체에 기록합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is serializing a type for which a custom converter is registered, the serializer calls the <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method to obtain the dictionary of name/value pairs that will be converted to a JSON string.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> 인스턴스 형식을 사용자 지정 변환기가 등록 되어 있는, serializer 호출 하 여 직렬화 되는 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> 메서드를 JSON 문자열로 변환 되는 이름/값 쌍의 사전입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> method can also throw exceptions if the object graph is too complex, or if registered instances of <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> have caused converter recursion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A&gt;</ph> 메서드가 개체 그래프는 너무 복잡 하거나의 인스턴스를 등록 하는 경우 예외가 throw 될 수 <ph id="ph2">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> 변환기 재귀가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
          <source>The resulting JSON string exceeds the value of <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>.</source>
          <target state="translated">결과 JSON 문자열이 <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /&gt;</ph>의 값을 초과합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> contains a circular reference.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>에 순환 참조가 있습니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
          <source>A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</source>
          <target state="translated">순환 참조는 자식 개체와 부모 개체에서 서로를 참조하는 경우에 발생하며,</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
          <source>The recursion limit defined by <ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph> was exceeded.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /&gt;</ph>로 정의된 재귀 한계를 초과했습니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
          <source><ph id="ph1">&lt;paramref name="output" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="output" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>