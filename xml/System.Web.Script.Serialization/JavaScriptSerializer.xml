<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7d32f4b8263b0fde5028248c2a084efc30c7bca5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540527" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>serialization 및 deserialization에는 [Json.NET](http://www.newtonsoft.com/json)이 사용되어야 합니다. AJAX 사용 응용 프로그램을 위한 serialization 및 deserialization 기능을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스 하는 데 내부적으로 비동기 통신 계층에서 브라우저와 웹 서버 간에 전달 되는 데이터 serialize 및 deserialize 합니다. Serializer의 해당 인스턴스에 액세스할 수 없습니다. 그러나이 클래스는 공용 API를 노출 합니다. 따라서 관리 코드에서 사용 하 여 JavaScript 개체 Notation (JSON)에서 실행 되도록 하려는 경우 클래스를 사용할 수 있습니다.  
  
 개체를 serialize 하는 데 사용 된 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> 메서드. JSON 문자열을 deserialize 하는 데 사용 된 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> 또는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> 메서드. 기본적으로 지원 되지 않는 형식을 serialize 및 deserialize를 <xref:System.Web.Script.Serialization.JavaScriptSerializer>, 사용 하 여 사용자 지정 변환기 구현에서 <xref:System.Web.Script.Serialization.JavaScriptConverter> 클래스입니다. 그런 다음 변환기를 사용 하 여 등록 된 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> 메서드.  
  
## <a name="mapping-between-managed-types-and-json"></a>관리 되는 형식 및 JSON 간 매핑  
 다음 표에서 serialization 프로세스에 대 한 관리 되는 형식 및 JSON 간의 매핑을 보여 줍니다. 이러한 관리 되는 형식에서 기본적으로 지 <xref:System.Web.Script.Serialization.JavaScriptSerializer>합니다. 관리 되는 형식에는 JSON 문자열에서 역직렬화 하 고는 동일한 매핑이 적용 됩니다. 그러나 역직렬화 비대칭; 수 있습니다. 모든 직렬화 가능 관리 되는 형식은 JSON에서 역직렬화 할 수 있습니다.  
  
> [!NOTE]
>  다차원 배열은 1 차원 배열에으로 serialize 되 고 평면 배열로 메서드를 사용 해야 합니다.  
  
|관리 되는 형식|해당 하는 JSON|  
|------------------|---------------------|  
|<xref:System.String> (U t F-8만 인코딩)입니다.|문자열|  
|<xref:System.Char>|문자열|  
|단일 null 문자 (예: \0)|Null|  
|<xref:System.Boolean>|부울입니다. JSON으로 표현 `true` 또는 `false`|  
|`null` (`null` 개체에서 참조 하 고 <xref:System.Nullable> 값 형식).|Null 문자열 값|  
|<xref:System.DBNull>|Null 문자열 값|  
|숫자 (또는 숫자 호환)에 대 한 기본 형식: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>, 및 <xref:System.Single>합니다. 고정 문화권의 문자열 표현이 사용 됩니다.|수|  
|<xref:System.DateTime>|Date 개체를 JSON으로 표현 "\\/Date (틱 수가)\\/"입니다. 틱 수 (밀리초) 01 1970 년 1 월, UTC 자정 이후 경과 된 틱 수를 나타내는 long 한 값 양수 또는 음수입니다.<br /><br /> 지원 되는 최대 날짜 값은 <xref:System.DateTime.MaxValue> (9999/12/31 오후 11시 59분: 59) 지원 되는 최소 날짜 값은 <xref:System.DateTime.MinValue> (1/1/0001 오전 12시: 00).|  
|정수 형식의 열거형|열거형 값의 정수|  
|구현 하는 형식은 <xref:System.Collections.IEnumerable> 또는 <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> 없는 구현의 <xref:System.Collections.IDictionary> 또는 <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>합니다. 에 같은 <xref:System.Array>, <xref:System.Collections.ArrayList>, 및 <xref:System.Collections.Generic.List%601>합니다.|JSON 배열 구문을 사용 하는 배열|  
|구현 하는 형식은 <xref:System.Collections.IDictionary> 또는 <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>합니다. 에 같은 <xref:System.Collections.Generic.Dictionary%602> 및 <xref:System.Collections.Hashtable>합니다.|JSON 사전 구문을 사용 하는 JavaScript 개체|  
|가 있는 public 인스턴스 속성을 가진 사용자 지정 구체적인 (비추상) 형식을 접근자 또는 공용 인스턴스 필드를 가져옵니다.<br /><br /> 쓰기 전용 공용 속성, 공용 속성 또는 공용 필드 특성으로 표시 <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, 이러한 종류의 인덱싱된 속성을 공개는 무시 됩니다.|JSON 사전 구문을 사용 하는 JavaScript 개체입니다. "__Type" 라는 특별 한 메타 데이터 속성이 올바른 deserialization을 위해 포함 됩니다. Public 인스턴스 속성 get 및 set 접근자 올바른 deserialization 되도록 있는지 확인 합니다.|  
|<xref:System.Guid>|GUID의 문자열 표현|  
|<xref:System.Uri>|반환 값의 문자열 표현 <xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 첫 번째 예제를 직렬화 하 고 데이터 개체를 역직렬화 하는 방법에 대 한 간단한 설명을 제공 합니다. 클래스 이름 아래에 나와 있는 사람이 필요 합니다.  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 다음 예제에서는 사용 하는 복잡 하 고 전체 프로젝트는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스 저장 하 고 JSON serialization을 사용 하 여 개체의 상태를 복원 합니다. 이 코드에 제공 하는 사용자 지정 변환기를 사용 하 여는 <xref:System.Web.Script.Serialization.JavaScriptConverter> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>형식 확인자가 없는 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스 없이 형식 확인자 serialize 된 JSON 문자열의 형식 메타 데이터 속성 (이름: "__type")를 포함 하지 않습니다. 형식 메타 데이터 속성은 사용 된 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> 및 <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> JSON 문자열로 변환 될 적절 한 관리를 확인 하는 메서드를 입력 합니다. 유형 해결 프로그램에 대 한 정보를 참조 하십시오.는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">사용자 지정 형식 확인자 개체입니다.</param>
        <summary>사용자 지정 형식 확인자가 있는 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체를 직렬화 할은 때는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스에서 사용 하는 `resolver` 매개 변수를 형식 메타 데이터 속성 ("__type")에 대 한 serialize 된 JSON 문자열에 포함할 적절 한 값을 확인 합니다. 마찬가지로,는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 확인자 인스턴스를 사용 하 여 적절 한 관리 되는 형식으로 형식 메타 데이터 속성 값 확인, 클래스는 JSON 문자열을 역직렬화 합니다.  
  
 설정할 수 있습니다는 `resolver` 매개 변수를 `null`,이 값은 호출 하는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> 생성자입니다.  
  
 인스턴스 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 특별 한 유형 해결 프로그램을 사용 하 여 클라이언트 스크립트에서 웹 서비스 호출에 대 한 비동기 통신 계층에서 사용 됩니다. 웹 서비스의 메서드 서명에 또는 수 있는 정의 된 deserialize 할 수 있는 형식 제한 하는이 형식 확인자는 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> 적용 합니다. 이 기본 제공 형식 확인자를 프로그래밍 방식으로 수정할 수 없습니다.  
  
> [!IMPORTANT]
>  사용자 지정 형식 확인자를 사용 하 여 초기화이 개체의 인스턴스를 사용 하 여 보안상 위험 해질 수 있습니다. 신뢰할 수 있는 데이터에만이 개체를 사용 하십시오. 자세한 내용은 참조 [데이터 유효성 검사](https://www.owasp.org/index.php/Data_Validation)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj">변환할 개체입니다.</param>
        <param name="targetType">개체를 변환할 대상 유형입니다.</param>
        <summary>지정된 개체를 지정된 형식으로 변환합니다.</summary>
        <returns>serialize된 JSON 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스 형식을 사용자 지정 변환기가 등록 되어 있는, serializer 호출 하 여 직렬화 되는 <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> 메서드를 JSON 형식 문자열로 변환 되는 이름/값 쌍의 사전입니다.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> 메서드가 개체 그래프는 너무 복잡 하거나의 인스턴스를 등록 하는 경우 예외가 throw 될 수 <xref:System.Web.Script.Serialization.JavaScriptConverter> 변환기 재귀가 발생 했습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">결과 JSON 형식의 문자열이 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
 또는  
  
 <paramref name="obj" />에 순환 참조가 있습니다. 순환 참조는 자식 개체와 부모 개체에서 서로를 참조하는 경우에 발생하며,</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">대상 형식 <c>obj</c> 변환 됩니다.</typeparam>
        <param name="obj">변환할 개체입니다.</param>
        <summary>지정된 개체를 지정된 형식으로 변환합니다.</summary>
        <returns>대상 유형으로 변환된 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 메서드를 나타내는 개체 인스턴스를 변환 하려고 `obj` 형식의 인스턴스로 `T`합니다. 이 변환 하는 동안 보장이 없습니다 개체 참조 일치 유지 됩니다. 한다고 가정할 수 없습니다 따라서 `obj` 및 `T` 같은 개체를 참조 합니다.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 파생 되는 클래스를 구현 하는 경우 사용 하도록 <xref:System.Web.Script.Serialization.JavaScriptConverter>합니다. 변환기 코드 해야 serializer에 전달 하는 사전에 있는 값을 사용할 수 없으며 다음 해당 값 형식의 인스턴스로 변환 `T`합니다. 이 작업을 수행 하는 사용자 지정 변환 코드를 다시 구현 하는 대신 호출할 수 있습니다는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 변환기 코드에서 메서드.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 를 얻는 메서드를 한 <xref:System.Web.UI.WebControls.ListItem> 변환기에 전달 되는 사전에서 값에서 개체입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스입니다.  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="obj" />(또는 <paramref name="obj" />의 중첩된 멤버)에는 사용자 형식을 나타내는 "__type" 속성이 포함되지만 serializer와 연결된 형식 확인자는 해당 관리되는 형식을 찾을 수 없습니다.  
  
 또는  
  
 <paramref name="obj" />(또는 <paramref name="obj" />의 중첩된 멤버)에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.  
  
 또는  
  
 <paramref name="obj" /> 또는 <paramref name="obj" />의 중첩된 멤버에 <see cref="T:System.Object" /> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.  
  
 또는  
  
 <paramref name="obj" />를 deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.  
  
 또는  
  
 <paramref name="obj" />를 <paramref name="T" />로 변환할 수 없습니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" />는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.  
  
 또는  
  
 <paramref name="obj" />에 형식 <paramref name="T" />에 사용할 수 없는 멤버 정의가 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="input">deserialize할 JSON 문자열입니다.</param>
        <param name="targetType">결과 개체의 형식입니다.</param>
        <summary>JSON 형식 문자열을 지정된 형식의 개체로 변환합니다.</summary>
        <returns>deserialize된 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 deserialization 메서드는 방법은 특정 형식으로 개체 그래프의 루트를 캐스팅 하 려 하지 않습니다는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> 메서드 수행 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="input" /> 길이가 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
 또는  
  
 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.  
  
 또는  
  
 <paramref name="input" />에 예기치 않은 문자 시퀀스가 있습니다.  
  
 또는  
  
 <paramref name="input" />는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.  
  
 또는  
  
 <paramref name="input" />에 대상 형식에 사용할 수 없는 멤버 정의가 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 있지만 현재 serializer와 연결된 형식 확인자가 해당 관리되는 형식을 찾을 수 없습니다.  
  
 또는  
  
 <paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.  
  
 또는  
  
 <paramref name="input" />에 <see cref="T:System.Object" /> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.  
  
 또는  
  
 JSON 배열을 JSON deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.  
  
 또는  
  
 <paramref name="input" />을 대상 형식으로 변환할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">결과 개체의 형식입니다.</typeparam>
        <param name="input">deserialize할 JSON 문자열입니다.</param>
        <summary>지정한 JSON 문자열을 <paramref name="T" /> 형식의 개체로 변환합니다.</summary>
        <returns>deserialize된 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> 첫 번째 사용 하는 메서드는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> 개체 그래프를 형식으로 결과를 캐스팅 한 다음 시도 얻는 메서드를 `T`합니다.  
  
 역직렬화 하는 동안 배열 및 사전 형식 안에 중첩 된 요소를 변환할 때 사용할 관리 되는 형식을 결정 하는 serializer의 현재 유형 해결 프로그램 참조 됩니다. Deserialization 프로세스의 모든 중첩 된 요소를 반복 결과적으로, `input`합니다. 유형 해결 프로그램에 대 한 자세한 내용은 참조는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> 클래스입니다.  
  
   
  
## Examples  
다음 예제에서는 직렬화 하 고 데이터 개체를 역직렬화 하는 방법에 대 한 간단한 설명을 제공 합니다.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

라는 클래스를 필요로 `Person`, 다음 예제에 나와 있는 합니다. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="input" /> 길이가 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
 또는  
  
 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.  
  
 또는  
  
 <paramref name="input" />에 예기치 않은 문자 시퀀스가 있습니다.  
  
 또는  
  
 <paramref name="input" />는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.  
  
 또는  
  
 <paramref name="input" />에 형식 <paramref name="T" />에 사용할 수 없는 멤버 정의가 있습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 있지만 serializer와 연결된 형식 확인자에서 해당 관리되는 형식을 찾을 수 없습니다.  
  
 또는  
  
 <paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.  
  
 또는  
  
 <paramref name="input" />에 <see cref="T:System.Object" /> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.  
  
 또는  
  
 JSON 배열을 JSON deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.  
  
 또는  
  
 <paramref name="input" />를 <paramref name="T" />로 변환할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">deserialize할 JSON 문자열입니다.</param>
        <summary>지정한 JSON 문자열을 개체 그래프로 변환합니다.</summary>
        <returns>deserialize된 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 deserialization 메서드는 특정 형식으로 개체 그래프의 루트를 캐스팅 하 려 하지 않습니다과 마찬가지로 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="input" /> 길이가 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
 또는  
  
 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.  
  
 또는  
  
 <paramref name="input" />에 예기치 않은 문자 시퀀스가 있습니다.  
  
 또는  
  
 <paramref name="input" />는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.  
  
 또는  
  
 <paramref name="input" />에 대상 형식에 사용할 수 없는 멤버 정의가 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 있지만 현재 serializer와 연결된 형식 확인자가 해당 관리되는 형식을 찾을 수 없습니다.  
  
 또는  
  
 <paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.  
  
 또는  
  
 <paramref name="input" />에 <see cref="T:System.Object" /> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.  
  
 또는  
  
 JSON 배열을 JSON deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.  
  
 또는  
  
 <paramref name="input" />을 대상 형식으로 변환할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 클래스에서 허용되는 JSON 문자열의 최대 길이를 가져오거나 설정합니다.</summary>
        <value>JSON 문자열의 최대 길이입니다. 기본값은은 2097152 자로, 4MB의 유니코드 문자열 데이터와 같습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값은 <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> 속성은의 인스턴스를 명시적으로 만드는 경우에 적용 됩니다.는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스입니다. 사용 하 여는 `jsonSerialization` 비동기 통신 계층에서 사용 되는 내부 serializer 인스턴스에 대 한 최대 길이 설정 하려면 구성 파일의 요소입니다. Serialization에 대 한 구성 요소에 대 한 자세한 내용은 참조 [하는 방법: Microsoft Ajax에서 ASP.NET 서비스 구성](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 1보다 작은 값으로 설정됩니다.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>처리할 개체 수준 수에 대한 제한을 가져오거나 설정합니다.</summary>
        <value>개체 수준 수입니다. 기본값은 100입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> 속성은 개체 계층의 수준 수를 참조 하는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 다음과 같은 경우에 처리 합니다.  
  
-   경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스는 JSON 문자열을 역직렬화 합니다.  
  
-   경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스는 직렬화 하는 동안 개체 graph를 검색 합니다.  
  
 값 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> 의 인스턴스를 명시적으로 만드는 경우에 적용 되는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스입니다. 사용 하 여는 `jsonSerialization` 비동기 통신 계층에서 사용 되는 내부 serializer 인스턴스의 처리할 개체 수준 수를 설정 하려면 구성 파일의 요소입니다. Serialization에 대 한 구성 요소에 대 한 자세한 내용은 참조 [하는 방법: Microsoft Ajax에서 ASP.NET 서비스 구성](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 1보다 작은 값으로 설정됩니다.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">등록될 사용자 지정 변환기가 포함된 배열입니다.</param>
        <summary>사용자 지정 변환기를 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 인스턴스에 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하나 이상의 사용자 지정 변환기를 등록할 수 있습니다는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 를 사용 하 여 인스턴스는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> 메서드. 사용자 지정 변환기를 등록 하는 경우 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 변환기를 사용 하 여 관리 되는 형식을 serialize 하 고 관리 되는 형식에 대 한 JSON 문자열을 deserialize 하는 데 있습니다.  
  
 여러 변환기 동일한 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스 및 이러한 변환기는 동일한 형식에 대 한 지원을 나타낼 수 있습니다. 결과적으로, 특정 형식에 대 한 등록 되어 있는 마지막 변환기는 사용해 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 여 형식을 serialize 합니다.  
  
 사용자 지정 변환기에 대 한 자세한 내용은 참조는 <xref:System.Web.Script.Serialization.JavaScriptConverter> 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 변환기를 등록 하는 방법을 보여 줍니다.는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스입니다.  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="converters" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>개체를 JSON 문자열로 변환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">serialize할 개체입니다.</param>
        <summary>개체를 JSON 문자열로 변환합니다.</summary>
        <returns>serialize된 JSON 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스 형식을 사용자 지정 변환기가 등록 되어 있는, serializer 호출 하 여 직렬화 되는 <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> 메서드를 JSON 문자열로 변환 되는 이름/값 쌍의 사전입니다.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> 메서드가 개체 그래프는 너무 복잡 하거나의 인스턴스를 등록 하는 경우 예외가 throw 될 수 <xref:System.Web.Script.Serialization.JavaScriptConverter> 변환기 재귀가 발생 했습니다.  
  
   
  
## Examples  
다음 예제에서는 직렬화 하 고 데이터 개체를 역직렬화 하는 방법에 대 한 간단한 설명을 제공 합니다.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

라는 클래스를 필요로 `Person`, 다음 예제에 나와 있는 합니다. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">결과 JSON 문자열이 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
 또는  
  
 <paramref name="obj" />에 순환 참조가 있습니다. 순환 참조는 자식 개체와 부모 개체에서 서로를 참조하는 경우에 발생하며,</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">serialize할 개체입니다.</param>
        <param name="output">JSON 문자열을 기록하는 데 사용되는 <see cref="T:System.Text.StringBuilder" /> 개체입니다.</param>
        <summary>개체를 serialize하고 결과 JSON 문자열을 지정한 <see cref="T:System.Text.StringBuilder" /> 개체에 기록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스 형식을 사용자 지정 변환기가 등록 되어 있는, serializer 호출 하 여 직렬화 되는 <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> 메서드를 JSON 문자열로 변환 되는 이름/값 쌍의 사전입니다.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> 메서드가 개체 그래프는 너무 복잡 하거나의 인스턴스를 등록 하는 경우 예외가 throw 될 수 <xref:System.Web.Script.Serialization.JavaScriptConverter> 변환기 재귀가 발생 했습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">결과 JSON 문자열이 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
 또는  
  
 <paramref name="obj" />에 순환 참조가 있습니다. 순환 참조는 자식 개체와 부모 개체에서 서로를 참조하는 경우에 발생하며,</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="output" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>