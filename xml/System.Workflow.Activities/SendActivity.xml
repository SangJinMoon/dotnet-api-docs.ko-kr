<Type Name="SendActivity" FullName="System.Workflow.Activities.SendActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2022349d77dca761388fc6cb46248a53f3b06944" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48628701" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SendActivity : System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendActivity extends System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.SendActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SendActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendActivity sealed : System::Workflow::ComponentModel::Activity" />
  <TypeSignature Language="F#" Value="type SendActivity = class&#xA;    inherit Activity" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.SendActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.SendActivity), "Design.Resources.SendActivity.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.SendActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9786f-101">WCF(Windows Communication Foundation) 서비스 작업의 동기 호출을 모델링하는 클라이언트 활동입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9786f-101">Client activity that models the synchronous invocation of a Windows Communication Foundation (WCF) service operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="9786f-102"><xref:System.Workflow.Activities.SendActivity> 활동을 사용 하면 미리 정의 된 메시지 교환 패턴을 사용 하 여 WCF 서비스를 사용 하 여 대화에 참여할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-102">The <xref:System.Workflow.Activities.SendActivity> activity enables you to participate in a conversation with a WCF service using a predefined message exchange pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9786f-103"><xref:System.Workflow.Activities.SendActivity> 활동은 활동 실행이 완료될 때까지 워크플로 실행이 차단되는 차단 활동입니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-103">The <xref:System.Workflow.Activities.SendActivity> activity is a blocking activity, meaning that workflow execution is blocked until the activity completes execution.</span></span>  
  
 <span data-ttu-id="9786f-104"><xref:System.Workflow.Activities.SendActivity> 활동에서 지원하는 메시지 교환 패턴은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-104">The message exchange patterns supported by the <xref:System.Workflow.Activities.SendActivity> activity include:</span></span>  
  
-   <span data-ttu-id="9786f-105">단방향 메시지 보내기</span><span class="sxs-lookup"><span data-stu-id="9786f-105">One-way Send Message</span></span>  
  
     <span data-ttu-id="9786f-106"><xref:System.Workflow.Activities.SendActivity> 활동에서 메시지를 보내지만 서비스로부터 응답을 기대하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-106">The <xref:System.Workflow.Activities.SendActivity> activity sends a message but does not expect a response from the service.</span></span>  
  
-   <span data-ttu-id="9786f-107">요청 보내기 - 회신 받기</span><span class="sxs-lookup"><span data-stu-id="9786f-107">Send Request - Receive Reply</span></span>  
  
     <span data-ttu-id="9786f-108"><xref:System.Workflow.Activities.SendActivity> 활동에서 메시지를 보내고 서비스로부터 응답을 받을 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-108">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response is received from the service.</span></span>  
  
-   <span data-ttu-id="9786f-109">요청 보내기 - 오류 받기</span><span class="sxs-lookup"><span data-stu-id="9786f-109">Send Request - Receive Fault</span></span>  
  
     <span data-ttu-id="9786f-110"><xref:System.Workflow.Activities.SendActivity> 활동에서 메시지를 보내고 서비스로부터 응답이나 오류를 받을 때까지 대기합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-110">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response or a fault is received from the service.</span></span> <span data-ttu-id="9786f-111">실행하는 동안 보내기 활동은 서버로부터 받은 모든 오류를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-111">During execution, the send activity throws all of the faults that were received from the server.</span></span> <span data-ttu-id="9786f-112"><xref:System.Workflow.ComponentModel.FaultHandlerActivity> 활동은 클라이언트 워크플로의 오류를 처리하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-112"><xref:System.Workflow.ComponentModel.FaultHandlerActivity> activities can be used to handle the faults in the client workflow.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9786f-113">이 작업의 일부인 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-113">This activity is part of [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span> <span data-ttu-id="9786f-114">해당 작업에 대해 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]를 참조 하세요 <xref:System.ServiceModel.Activities.Send>합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-114">For the equivalent activity in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], see <xref:System.ServiceModel.Activities.Send>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.ReceiveActivity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-115">
            <see cref="T:System.Workflow.Activities.SendActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-116">일반적으로 <xref:System.Workflow.Activities.SendActivity> 생성자는 Workflow Designer에서 만든 코드 병행 파일에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-116">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9786f-117">
            <see cref="T:System.Workflow.Activities.SendActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-117">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-118">일반적으로 <xref:System.Workflow.Activities.SendActivity> 생성자는 Workflow Designer에서 만든 코드 병행 파일에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-118">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-119">다음 예제에서는 <xref:System.Workflow.Activities.SendActivity> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-119">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  <span data-ttu-id="9786f-120">이 예제는 `Conversations` SDK 샘플에서 변형되었습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-120">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#16](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.SendActivity : string -&gt; System.Workflow.Activities.SendActivity" Usage="new System.Workflow.Activities.SendActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9786f-121">동작이 초기화될 때 <see cref="P:System.Workflow.ComponentModel.Activity.Name" />에 할당된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-121">The value assigned to <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> when the activity is initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9786f-122">지정된 <see cref="T:System.Workflow.Activities.SendActivity" /> 속성을 사용하여 <see langword="name" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-122">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class with the specified <see langword="name" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-123">일반적으로 <xref:System.Workflow.Activities.SendActivity> 생성자는 Workflow Designer에서 만든 코드 병행 파일에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-123">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-124">다음 예제에서는 <xref:System.Workflow.Activities.SendActivity> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-124">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  
  
 [!code-csharp[SendActivity#17](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponse">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.AfterResponse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterResponse As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ AfterResponse;" />
      <MemberSignature Language="F#" Value="member this.AfterResponse : EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " Usage="member this.AfterResponse : System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-125">서비스로부터 응답을 받은 후에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-125">Occurs after the response has been received from the service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-126">이 이벤트와 연결된 이 이벤트 처리기를 사용하면 호출된 서비스 작업에서 반환 값을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-126">This event handler associated with this event can be used to read the return value from the service operation invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-127">다음 예제에서는 `AfterResponse` 이벤트를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-127">The following example shows how to use the `AfterResponse` event.</span></span>  
  
 [!code-csharp[SendActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponseEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.AfterResponseEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AfterResponseEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ AfterResponseEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AfterResponseEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.AfterResponseEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-128">
            <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 이벤트를 대상으로 하는 <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" />를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-128">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-129">이 종속성 이벤트 속성을 사용하면 보내기 동작의 <xref:System.Workflow.Activities.SendActivity.AfterResponse> 이벤트를 워크플로 클래스의 공용 이벤트 처리기에 바인딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-129">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.AfterResponse> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.BeforeSend" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeSend As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ BeforeSend;" />
      <MemberSignature Language="F#" Value="member this.BeforeSend : EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " Usage="member this.BeforeSend : System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-130">
            <see cref="T:System.Workflow.Activities.SendActivity" /> 동작에서 서비스로 메시지를 보내기 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-130">Occurs before the <see cref="T:System.Workflow.Activities.SendActivity" /> activity sends the message to the service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-131">이 이벤트와 연결된 이 이벤트 처리기를 사용하면 호출할 서비스 작업에 대한 매개 변수 값을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-131">This event handler associated with this event can be used to set the parameter values for the service operation being invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9786f-132"><xref:System.Workflow.Activities.SendActivity>의 컨텍스트는 이 이벤트 처리기에서 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-132">The context of a <xref:System.Workflow.Activities.SendActivity> cannot be set in this event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-133">다음 예제에서는 `BeforeSend` 이벤트를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-133">The following example shows how to use the `BeforeSend` event.</span></span> <span data-ttu-id="9786f-134">이 예제는 `Conversations` SDK 샘플에서 변형되었습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-134">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#3](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSendEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.BeforeSendEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeforeSendEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ BeforeSendEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable BeforeSendEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.BeforeSendEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-135">
            <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 이벤트를 대상으로 하는 <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" />를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-135">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-136">이 종속성 이벤트 속성을 사용하면 보내기 동작의 <xref:System.Workflow.Activities.SendActivity.BeforeSend> 이벤트를 워크플로 클래스의 공용 이벤트 처리기에 바인딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-136">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.BeforeSend> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelToken">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ChannelToken ChannelToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.ChannelToken ChannelToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ChannelToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelToken As ChannelToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::ChannelToken ^ ChannelToken { System::Workflow::Activities::ChannelToken ^ get(); void set(System::Workflow::Activities::ChannelToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChannelToken : System.Workflow.Activities.ChannelToken with get, set" Usage="System.Workflow.Activities.SendActivity.ChannelToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ChannelToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-137">
            <see cref="T:System.Workflow.Activities.ChannelToken" />에서 클라이언트 채널에 자신을 연결하는 데 사용하는 <see cref="T:System.Workflow.Activities.SendActivity" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-137">
              <see cref="T:System.Workflow.Activities.ChannelToken" /> used by the <see cref="T:System.Workflow.Activities.SendActivity" /> to associate itself with a client channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9786f-138">
            <see cref="T:System.Workflow.Activities.ChannelToken" />에서 서비스와 통신하는 데 사용하는 클라이언트 채널을 정의하는 <see cref="T:System.Workflow.Activities.SendActivity" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-138">A <see cref="T:System.Workflow.Activities.ChannelToken" /> defining a client channel that a <see cref="T:System.Workflow.Activities.SendActivity" /> uses to communicate with a service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-139">채널 토큰에서는 채널의 이름, 채널의 범위 및 채널을 설정할 때 사용할 엔드포인트 구성 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-139">A channel token specifies the name of the channel, the scope of the channel, and the endpoint configuration name to be used in establishing the channel.</span></span> <span data-ttu-id="9786f-140">구성 파일의 엔드포인트 이름에는 <xref:System.Workflow.Activities.SendActivity> 활동에서 통신하는 서비스에 대한 주소, 바인딩 및 계약 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-140">The endpoint name in the configuration file has the address, binding, and contract information for a service that the <xref:System.Workflow.Activities.SendActivity> activity communicates with.</span></span>  
  
 <span data-ttu-id="9786f-141">또한 채널 토큰에서는 고유한 채널 이름과 토큰의 소유자 활동 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-141">The channel token also specifies a unique channel name and an owner activity name for the token.</span></span> <span data-ttu-id="9786f-142">서비스와 통신하는 데 동일한 엔드포인트를 사용하려는 여러 보내기 동작 간에 채널 토큰을 공유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-142">A channel token can be shared between multiple send activities that want to use the same endpoint to communicate with a service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-143">다음 예제에서는 `ChannelToken` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-143">The following example shows how to access the `ChannelToken` property.</span></span> <span data-ttu-id="9786f-144">이 예제는 `CalculatorClient` SDK 샘플에서 변형되었습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-144">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#7](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="System.Workflow.Activities.SendActivity.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-145">상관 관계 식별 정보 등을 포함하여 클라이언트와 서비스 간의 통신에 사용되는 컨텍스트가 포함된 사전을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-145">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9786f-146">
            <see cref="T:System.Xml.XmlQualifiedName" /> 키 및 관련된 <see cref="T:System.String" /> 값을 포함하는 사전 기반 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-146">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-147">컨텍스트 정보는 클라이언트와 서비스 간의 통신에 사용되며 상관 관계 식별 정보 등을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-147">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-148">다음 예제에서는 `Context` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-148">The following example shows how to access the `Context` property.</span></span> <span data-ttu-id="9786f-149">이 예제는 `CalculatorClient` SDK 샘플에서 변형되었습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-149">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#8](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddress">
      <MemberSignature Language="C#" Value="public string CustomAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomAddress" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.CustomAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomAddress : string with get, set" Usage="System.Workflow.Activities.SendActivity.CustomAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-150">서비스와 통신하는 데 사용되는 사용자 지정 주소를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-150">Gets or sets the custom address used to communicate with a service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9786f-151">해당 값이 서비스에서 수신 대기하는 주소인 문자열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-151">String value whose value is the address a service is listening on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-152">있는 경우 이 값은 작업의 엔드포인트 주소를 정의하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-152">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-153">다음 예제에서는 `CustomAddress` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-153">The following example shows how to access the `CustomAddress` property.</span></span> <span data-ttu-id="9786f-154">이 예제는 `CalculatorClient` SDK 샘플에서 변형되었습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-154">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#9](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddressProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.CustomAddressProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomAddressProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CustomAddressProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomAddressProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.CustomAddressProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-155">
            <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성의 <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" />를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-155">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-156">있는 경우 이 값은 작업의 엔드포인트 주소를 정의하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-156">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="sendActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-157">상관 관계 식별 정보 등을 포함하여 클라이언트와 서비스 간의 통신에 사용되는 컨텍스트가 포함된 사전을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-157">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-158">컨텍스트 정보는 클라이언트와 서비스 간의 통신에 사용되며 상관 관계 식별 정보 등을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-158">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * System.Workflow.Activities.ChannelToken * Type -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.SendActivity.GetContext (activity, endpoint, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="9786f-159">컨텍스트 정보가 필요한 활동입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-159">Activity whose context information is required.</span>
          </span>
        </param>
        <param name="endpoint">
          <span data-ttu-id="9786f-160">서비스와의 상관 관계에 대한 엔드포인트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-160">Endpoint information for correlation with a service.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="9786f-161">서비스에서 구현하는 계약의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-161">The <see cref="T:System.Type" /> of the contract implemented by a service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9786f-162">보내기 작업에 대한 컨텍스트 정보를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-162">Gets or sets the context information for a send operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9786f-163">
            <see cref="T:System.Xml.XmlQualifiedName" /> 키 및 관련된 <see cref="T:System.String" /> 값을 포함하는 사전 기반 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-163">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-164">컨텍스트 정보는 클라이언트와 서비스 간의 통신에 사용되며 상관 관계 식별 정보 등을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-164">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-165">다음 예제에서는 `GetContext` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-165">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#12](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * string * string * Type -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.SendActivity.GetContext (activity, endpointName, ownerActivityName, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="9786f-166">컨텍스트 정보가 필요한 활동입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-166">Activity whose context information is required.</span>
          </span>
        </param>
        <param name="endpointName">
          <span data-ttu-id="9786f-167">서비스와의 상관 관계에 사용된 엔드포인트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-167">Name of the endpoint used for correlation with a service.</span>
          </span>
        </param>
        <param name="ownerActivityName">
          <span data-ttu-id="9786f-168">소유자 활동의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-168">The name of the owning activity.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="9786f-169">서비스에서 구현하는 계약의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-169">The <see cref="T:System.Type" /> of the contract implemented by a service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9786f-170">활동 인스턴스가 지정된 컨텍스트 정보, 해당 활동에서 사용하는 엔드포인트 이름, 소유자 활동의 이름 및 계약의 형식을 나타내는 <see cref="T:System.Type" /> 개체를 반환하는 정적 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-170">Static method that returns context information given an activity instance, an endpoint name used by that activity, the name of the owner activity, and a <see cref="T:System.Type" /> object that represents the type of the contract.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9786f-171">
            <see cref="T:System.Xml.XmlQualifiedName" /> 키 및 관련된 <see cref="T:System.String" /> 값을 포함하는 사전 기반 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-171">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-172">컨텍스트 정보는 클라이언트와 서비스 간의 통신에 사용되며 상관 관계 식별 정보 등을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-172">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-173">다음 예제에서는 `GetContext` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-173">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="sendActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.SendActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-174">WCF(Windows Communication Foundation) 서비스의 형식 매개 변수 목록에 있는 바인딩 가능한 매개 변수의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-174">Gets the collection of bindable parameters as found in the Windows Communication Foundation (WCF) service's formal parameter list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9786f-175">바인딩할 매개 변수의 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-175">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-176"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A>를 사용하면 서비스 작업 매개 변수와 <xref:System.Workflow.Activities.SendActivity> 활동을 포함하는 워크플로의 public 필드/속성 간에 바인딩을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-176"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can be used to specify bindings between the service operation parameters and public field and properties of the workflow that contains the <xref:System.Workflow.Activities.SendActivity> activity.</span></span> <span data-ttu-id="9786f-177"><xref:System.Workflow.Activities.SendActivity> 활동이 실행되면 이 활동이 바인딩된 워크플로 속성에서 해당 매개 변수 값을 읽고 서비스 작업 매개 변수로 서비스에 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-177">When the <xref:System.Workflow.Activities.SendActivity> activity executes, the corresponding parameter values are read from the workflow properties they are bound to and are sent to the service as service operation parameters.</span></span>  
  
 <span data-ttu-id="9786f-178">또한 <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A>를 사용하여 서비스 작업에서 반환 값을 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-178"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can also be used to retrieve the return values from a service operation.</span></span>  
  
 <span data-ttu-id="9786f-179">서비스 작업의 모든 매개 변수를 바인딩해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-179">All parameters of the service operation should be bound.</span></span> <span data-ttu-id="9786f-180">바인딩되지 않은 서비스 작업 매개 변수에서는 컴파일러 경고를 생성하며 <xref:System.Workflow.Activities.SendActivity>가 호출될 때 매개 변수의 기본값을 전송합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-180">Unbound service operation parameters produce compiler warnings and the default values of the parameter are sent when the <xref:System.Workflow.Activities.SendActivity> is invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-181">다음 예제에서는 `ParameterBindings` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-181">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="9786f-182">이 예제는 `Conversations` SDK 샘플에서 변형되었습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-182">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#0](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValuePropertyName">
      <MemberSignature Language="C#" Value="public const string ReturnValuePropertyName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ReturnValuePropertyName" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Const ReturnValuePropertyName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ReturnValuePropertyName;" />
      <MemberSignature Language="F#" Value="val mutable ReturnValuePropertyName : string" Usage="System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-183">
            <see langword="SendActivity" /> 활동에서 통신하고 있는 서비스에서 보낸 반환 값에 사용되는 속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-183">Name of the property that is used for the return value sent by the service that the <see langword="SendActivity" /> activity is communicating with.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-184">이 문자열을 사용하면 <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> 이벤트 처리기의 <xref:System.Workflow.Activities.SendActivity> 동작과 연결된 <xref:System.Workflow.Activities.SendActivity.AfterResponse>에서 반환 값을 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-184">This string can be used to retrieve the return value from the <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> associated with the <xref:System.Workflow.Activities.SendActivity> activity in the <xref:System.Workflow.Activities.SendActivity.AfterResponse> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-185">다음 예제에서는 `ReturnValuePropertyName` 필드에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-185">The following example shows how to access the `ReturnValuePropertyName` field.</span></span>  
  
 [!code-csharp[SendActivity#6](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOperationInfo">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceOperationInfo As TypedOperationInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::TypedOperationInfo ^ ServiceOperationInfo { System::Workflow::Activities::TypedOperationInfo ^ get(); void set(System::Workflow::Activities::TypedOperationInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceOperationInfo : System.Workflow.Activities.TypedOperationInfo with get, set" Usage="System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.TypedOperationInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-186">
            <see langword="SendActivity" /> 활동에서 통신하는 서비스의 계약 및 작업을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-186">Defines the contract and operation of the service that the <see langword="SendActivity" /> activity communicates with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9786f-187">계약 이름, 계약 형식, 실제 메서드 이름과 다를 수 있는 작업 이름, 작업이 단방향인지 여부, 매개 변수를 포함하여 작업에 대한 메서드 정보 등이 포함된 <see cref="T:System.Workflow.Activities.TypedOperationInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-187">A <see cref="T:System.Workflow.Activities.TypedOperationInfo" /> object that contains the contract name, the contract type, the operation name, (which may be distinct from the actual method name), whether the operation is a one-way operation, and method information including parameters about the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-188"><xref:System.Workflow.Activities.SendActivity> 활동은 항상 기존 계약 및 정의된 작업을 참조합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-188">The <xref:System.Workflow.Activities.SendActivity> activity always refers to an existing contract and its defined operations.</span></span> <span data-ttu-id="9786f-189">따라서 <xref:System.Workflow.Activities.SendActivity> 동작은 계약 자체를 정의할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-189">There is no provision that allows a <xref:System.Workflow.Activities.SendActivity> activity to define a contract itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-190">다음 예제에서는 `ServiceOperationInfo` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-190">The following example shows how to access the `ServiceOperationInfo` property.</span></span> <span data-ttu-id="9786f-191">이 예제는 `Conversations` SDK 샘플에서 변형되었습니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-191">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9786f-192">
            <see cref="T:System.Workflow.Activities.SendActivity" /> 동작에 대한 컨텍스트 정보를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-192">Sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-193">컨텍스트 정보는 클라이언트와 서비스 간의 통신에 사용되며 상관 관계 식별 정보 등을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-193">Context information is used for communication between the client and the service it is communicating and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="static member SetContext : System.Workflow.ComponentModel.Activity * System.Workflow.Activities.ChannelToken * Type * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Workflow.Activities.SendActivity.SetContext (activity, endpoint, contractType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="9786f-194">컨텍스트 정보를 연결할 활동 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-194">The Activity instance to associate the context information with.</span>
          </span>
        </param>
        <param name="endpoint">
          <span data-ttu-id="9786f-195">서비스와의 상관 관계에 사용된 엔드포인트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-195">The endpoint used for correlation with a service.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="9786f-196">서비스에서 구현하는 계약의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-196">The <see cref="T:System.Type" /> of the contract implemented by a service.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="9786f-197">설정할 컨텍스트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-197">The context information to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9786f-198">활동 인스턴스가 지정된 <see cref="T:System.Workflow.Activities.SendActivity" /> 활동에 대한 컨텍스트 정보, 해당 활동에서 사용하는 엔드포인트, 계약의 형식을 나타내는 <see cref="T:System.Type" /> 개체 및 컨텍스트 정보 자체를 설정하는 정적 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-198">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint used by that activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9786f-199">컨텍스트 정보는 클라이언트와 서비스 간의 통신에 사용되며 상관 관계 식별 정보 등을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-199">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9786f-200">다음 예제에서는 `SetContext` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-200">The following example shows how to use the `SetContext` method.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="static member SetContext : System.Workflow.ComponentModel.Activity * string * string * Type * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Workflow.Activities.SendActivity.SetContext (activity, endpointName, ownerActivityName, contractType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="9786f-201">컨텍스트 정보를 연결할 활동 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-201">The Activity instance to associate the context information with.</span>
          </span>
        </param>
        <param name="endpointName">
          <span data-ttu-id="9786f-202">서비스와의 상관 관계에 사용된 엔드포인트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-202">The name of an endpoint used for correlation with a service.</span>
          </span>
        </param>
        <param name="ownerActivityName">
          <span data-ttu-id="9786f-203">소유자 활동의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-203">The name of the owning activity</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="9786f-204">서비스에서 구현하는 계약의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-204">The <see cref="T:System.Type" /> of the contract implemented by a service.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="9786f-205">설정할 컨텍스트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-205">The context information to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9786f-206">활동 인스턴스가 지정된 <see cref="T:System.Workflow.Activities.SendActivity" /> 활동에 대한 컨텍스트 정보, 해당 활동에서 사용하는 엔드포인트, 소유자 활동의 이름, 계약의 형식을 나타내는 <see cref="T:System.Type" /> 개체 및 컨텍스트 정보 자체를 설정하는 정적 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9786f-206">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint name used by that activity, the name of the owner activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9786f-207">다음 예제에서는 `SetContext` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9786f-207">The following example shows how to use the `SetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>