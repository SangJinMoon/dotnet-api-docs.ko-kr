<Type Name="ReplicatorActivity" FullName="System.Workflow.Activities.ReplicatorActivity">
  <TypeSignature Language="C#" Value="public sealed class ReplicatorActivity : System.Workflow.ComponentModel.CompositeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReplicatorActivity extends System.Workflow.ComponentModel.CompositeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.ReplicatorActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReplicatorActivity&#xA;Inherits CompositeActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReplicatorActivity sealed : System::Workflow::ComponentModel::CompositeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.CompositeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Initialized")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.ReplicatorDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ReplicatorActivity), "Resources.Replicator.png")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ReplicatorValidator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.Runtime.DebugEngine.WorkflowDebuggerStepping(System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption.Concurrent)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="56862-101">자식 활동의 여러 인스턴스를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-101">Runs multiple instances of a child activity.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="56862-102"><xref:System.Workflow.Activities.ReplicatorActivity>는 코드의 `for each` 문과 비슷합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-102">The <xref:System.Workflow.Activities.ReplicatorActivity> is similar to a `for each` statement in code.</span></span> <span data-ttu-id="56862-103">다른 여러 엔티티에 같은 함수를 반복하는 작업이 표시되면 <xref:System.Workflow.Activities.ReplicatorActivity>가 <xref:System.Workflow.Activities.WhileActivity>보다 나은 솔루션일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="56862-103">If you are presented with a task in which you repeat the same function on many different entities, <xref:System.Workflow.Activities.ReplicatorActivity> may be a better solution than <xref:System.Workflow.Activities.WhileActivity>.</span></span>  
  
 <span data-ttu-id="56862-104">기본적으로 모든 자식 인스턴스가 완료되면 <xref:System.Workflow.Activities.ReplicatorActivity>가 완료됩니다.</span><span class="sxs-lookup"><span data-stu-id="56862-104">By default, a <xref:System.Workflow.Activities.ReplicatorActivity> is completed when all child instances have completed.</span></span> <span data-ttu-id="56862-105">작업을 마쳤을 때 사용할 이 동작을 사용자 지정 조건으로 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="56862-105">You can override this behavior with a custom condition to use when the activity finishes.</span></span> <span data-ttu-id="56862-106">모든 자식 인스턴스가 완료되기 전에 이 조건이 `true`로 확인되면 실행이 완료되지 않은 자식 인스턴스는 취소됩니다.</span><span class="sxs-lookup"><span data-stu-id="56862-106">If this condition evaluates to `true` before all child instances have completed, then any running incomplete child instances are canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56862-107">다음 코드 예제에서는 <xref:System.Workflow.Activities.ReplicatorActivity> 클래스의 새 인스턴스를 만들고 <xref:System.Workflow.Activities.ReplicatorActivity.Initialized> 이벤트의 처리기를 정의하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="56862-107">The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.ReplicatorActivity> class and define a handler for the <xref:System.Workflow.Activities.ReplicatorActivity.Initialized> event.</span></span> <span data-ttu-id="56862-108">이 코드 예제는 SimpleReplicatorWorkflow.Designer.cs 파일에 있는 Replicator SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-108">This code example is part of the Replicator SDK Sample from the SimpleReplicatorWorkflow.Designer.cs file.</span></span> <span data-ttu-id="56862-109">자세한 내용은 참조 [복제기를 사용 하 여](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858)합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-109">For more information, see [Using Replicator](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858).</span></span>  
  
 [!code-csharp[wf_samples#177](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#177)]
 [!code-vb[wf_samples#177](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#177)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56862-110"><see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-110">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReplicatorActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReplicatorActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReplicatorActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56862-111"><see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-111">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56862-112">다음 코드 예제에서는 <xref:System.Workflow.Activities.ReplicatorActivity> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="56862-112">The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.ReplicatorActivity> class.</span></span>  <span data-ttu-id="56862-113">이 코드 예제는 SimpleReplicatorWorkflow.Designer.cs 파일에 있는 Replicator SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-113">This code example is part of the Replicator SDK Sample from the SimpleReplicatorWorkflow.Designer.cs file.</span></span> <span data-ttu-id="56862-114">자세한 내용은 참조 [복제기를 사용 하 여](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858)합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-114">For more information, see [Using Replicator](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858).</span></span>  
  
 [!code-csharp[wf_samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]
 [!code-vb[wf_samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReplicatorActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReplicatorActivity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="56862-115">활동의 사용자 정의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-115">The user-defined name of the activity.</span></span></param>
        <summary><span data-ttu-id="56862-116">활동 이름을 사용하여 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-116">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> class using the name of the activity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllChildrenComplete">
      <MemberSignature Language="C#" Value="public bool AllChildrenComplete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllChildrenComplete" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllChildrenComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllChildrenComplete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-117">모든 자식 인스턴스가 완료되었는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="56862-117">Gets a value that indicates whether all child instances are complete.</span></span></summary>
        <value>
          <span data-ttu-id="56862-118">모든 자식 인스턴스가 완료되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-118"><see langword="true" /> if all child instances are complete; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56862-119">이 속성은 <xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition%2A> 작성기가 자신의 컬렉션을 유지 관리하거나 동적 활동 설정을 확인하지 않고도 이 정보를 쉽게 얻을 수 있는 방법을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-119">This property allows the <xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition%2A> writer an easy way to get this information without having to maintain their own collection or evaluate over a dynamic activity set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReplicatorActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.ReplicatorChildEventArgs&gt; ChildCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.ReplicatorChildEventArgs&gt; ChildCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.ReplicatorActivity.ChildCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ChildCompleted As EventHandler(Of ReplicatorChildEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::ReplicatorChildEventArgs ^&gt; ^ ChildCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.ReplicatorChildEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-120">
          <see cref="T:System.Workflow.Activities.ReplicatorActivity" />가 자식 활동 인스턴스의 실행을 마치면 바로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-120">Occurs immediately after the <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> finishes running a child activity instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildCompletedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ChildCompletedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ChildCompletedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ChildCompletedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ChildCompletedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-121">
          <see cref="T:System.Workflow.Activities.ReplicatorActivity" />의 자식 활동 인스턴스가 완료된 후에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-121">Occurs when the child activity instance of the <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildInitialized">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.ReplicatorChildEventArgs&gt; ChildInitialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.ReplicatorChildEventArgs&gt; ChildInitialized" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.ReplicatorActivity.ChildInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ChildInitialized As EventHandler(Of ReplicatorChildEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::ReplicatorChildEventArgs ^&gt; ^ ChildInitialized;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.ReplicatorChildEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-122">자식 활동이 초기화되면 바로 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-122">Occurs immediately after a child activity is initialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56862-123">구독하는 경우에는 `Children` 컬렉션의 항목에 대해 자식 활동의 인스턴스가 만들어질 때마다 이 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-123">If subscribed to, this event is raised every time that an instance of the child activity is created for an item in the `Children` collection.</span></span> <span data-ttu-id="56862-124">`Children` 컬렉션은 <xref:System.Workflow.Activities.ReplicatorChildEventArgs> 이벤트 처리기의 <xref:System.Workflow.Activities.ReplicatorActivity.Initialized>를 통해 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="56862-124">The `Children` collection is set through the <xref:System.Workflow.Activities.ReplicatorChildEventArgs> of the <xref:System.Workflow.Activities.ReplicatorActivity.Initialized> event handler.</span></span> <span data-ttu-id="56862-125"><xref:System.Workflow.ComponentModel.Activity>가 자식의 값을 설정하도록 자식 <xref:System.Workflow.Activities.ReplicatorActivity> 인스턴스는 호출을 통해 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="56862-125">The child <xref:System.Workflow.ComponentModel.Activity> instance is passed in the call so that the <xref:System.Workflow.Activities.ReplicatorActivity> can set values on the child.</span></span> <span data-ttu-id="56862-126"><xref:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData%2A> 컬렉션의 관련 `Children` 개체도 같이 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="56862-126">The relevant <xref:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData%2A> object from the `Children` collection is also passed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56862-127">다음 코드 예제에서는 <xref:System.Workflow.Activities.ReplicatorActivity.ChildInitialized> 이벤트 값을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="56862-127">The following code example shows how to set the value of the <xref:System.Workflow.Activities.ReplicatorActivity.ChildInitialized> event.</span></span> <span data-ttu-id="56862-128">이 코드 예제는 SimpleReplicatorWorkflow.Designer.cs 파일에 있는 Replicator SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-128">This code example is part of the Replicator SDK sample from the SimpleReplicatorWorkflow.Designer.cs file.</span></span> <span data-ttu-id="56862-129">자세한 내용은 참조 [복제기를 사용 하 여](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858)합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-129">For more information, see [Using Replicator](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858).</span></span>  
  
 [!code-csharp[wf_samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]
 [!code-vb[wf_samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildInitializedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ChildInitializedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ChildInitializedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ChildInitializedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ChildInitializedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-130">
          <see cref="T:System.Workflow.Activities.ReplicatorActivity" />의 자식 활동 인스턴스가 초기화된 후에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-130">Occurs when the child activity instance of the <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> has initialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.ReplicatorActivity.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-131">
          <see cref="T:System.Workflow.Activities.ReplicatorActivity" />가 완료되면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-131">Occurs when the <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> completes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CompletedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CompletedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReplicatorActivity.CompletedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CompletedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CompletedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-132">
          <see cref="T:System.Workflow.Activities.ReplicatorActivity" />가 완료된 후에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-132">Occurs when the <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentChildData">
      <MemberSignature Language="C#" Value="public System.Collections.IList CurrentChildData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList CurrentChildData" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReplicatorActivity.CurrentChildData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentChildData As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ CurrentChildData { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-133">모든 자식 활동 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-133">Returns a list of all child activities.</span></span></summary>
        <value><span data-ttu-id="56862-134">모든 자식 활동 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-134">A list of all child activities.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentIndex">
      <MemberSignature Language="C#" Value="public int CurrentIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentIndex" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReplicatorActivity.CurrentIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-135">현재 자식 활동의 인덱스 위치를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="56862-135">Gets the index position of the current child activity.</span></span></summary>
        <value><span data-ttu-id="56862-136">현재 자식 활동의 인덱스 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-136">The index position of the current child activity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicActivities">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt; DynamicActivities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; DynamicActivities" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReplicatorActivity.DynamicActivities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicActivities As ICollection(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ DynamicActivities { System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-137">실행 중인 자식 활동 인스턴스의 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="56862-137">Gets an array of running child activity instances.</span></span></summary>
        <value><span data-ttu-id="56862-138">현재 실행 중인 자식 활동 인스턴스의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-138">An array of currently running child activity instances.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56862-139">이 속성에서 반환되는 활동 인스턴스는 <xref:System.Workflow.Activities.ReplicatorActivity> 내에 포함된 활동 형식의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-139">The activity instances returned by this property are the instances of the activity type that are contained within the <xref:System.Workflow.Activities.ReplicatorActivity>.</span></span> <span data-ttu-id="56862-140"><xref:System.Workflow.Activities.ReplicatorActivity>가 순차 모드에서 실행 중이면 배열에 활동이 하나만 포함됩니다. 병렬 모드로 실행 중이면 배열에 현재 실행 중인 인스턴스가 모두 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="56862-140">If the <xref:System.Workflow.Activities.ReplicatorActivity> is running in sequence mode, the array contains no more than one activity; if running in parallel mode the array contains all instances that are currently running.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReplicatorActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionType">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ExecutionType ExecutionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.Activities.ExecutionType ExecutionType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionType As ExecutionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::ExecutionType ExecutionType { System::Workflow::Activities::ExecutionType get(); void set(System::Workflow::Activities::ExecutionType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ExecutionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-141"><see cref="T:System.Workflow.Activities.ExecutionType" />의 <see cref="T:System.Workflow.Activities.ReplicatorActivity" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-141">Gets or sets the <see cref="T:System.Workflow.Activities.ExecutionType" /> for the <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</span></span></summary>
        <value><span data-ttu-id="56862-142">
          <see cref="T:System.Workflow.Activities.ExecutionType" />에 대한 <see cref="T:System.Workflow.Activities.ReplicatorActivity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-142">The <see cref="T:System.Workflow.Activities.ExecutionType" /> for the <see cref="T:System.Workflow.Activities.ReplicatorActivity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56862-143">다음 샘플에서는 `ExecutionType` 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="56862-143">The following sample shows setting the `ExecutionType` property.</span></span> <span data-ttu-id="56862-144">이 샘플은 Simple Replicator SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="56862-144">This sample is from the Simple Replicator SDK sample.</span></span> <span data-ttu-id="56862-145">자세한 내용은 참조 [Replicator 샘플](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858)합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-145">For more information, see [Replicator Sample](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858).</span></span>  
  
 [!code-csharp[wf_samples#180](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#180)]
 [!code-vb[wf_samples#180](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#180)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ExecutionTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ExecutionTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExecutionTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ExecutionTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-146">
          <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성을 대상으로 하는 <see cref="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="56862-146">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialChildData">
      <MemberSignature Language="C#" Value="public System.Collections.IList InitialChildData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList InitialChildData" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialChildData As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ InitialChildData { System::Collections::IList ^ get(); void set(System::Collections::IList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.BindUITypeEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-147">자식 활동 데이터 목록을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-147">Gets or sets a list of child activity data.</span></span></summary>
        <value><span data-ttu-id="56862-148">자식 활동 데이터 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-148">A list of child activity data.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialChildDataProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InitialChildDataProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InitialChildDataProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InitialChildDataProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InitialChildDataProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-149">
          <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성을 대상으로 하는 <see cref="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="56862-149">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.ReplicatorActivity.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Initialized;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-150"><see cref="T:System.Workflow.Activities.ReplicatorActivity" />가 실행을 시작하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-150">Occurs when the <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> begins to execute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56862-151">다음 코드 예제에서는 <xref:System.Workflow.Activities.ReplicatorActivity.Initialized> 이벤트 값을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="56862-151">The following code example shows how to set the value of the <xref:System.Workflow.Activities.ReplicatorActivity.Initialized> event.</span></span> <span data-ttu-id="56862-152">이 코드 예제는 SimpleReplicatorWorkflow.Designer.cs 파일에 있는 Replicator SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-152">This code example is part of the Replicator SDK sample from the SimpleReplicatorWorkflow.Designer.cs file.</span></span> <span data-ttu-id="56862-153">자세한 내용은 참조 [복제기를 사용 하 여](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858)합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-153">For more information, see [Using Replicator](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858).</span></span>  
  
 [!code-csharp[wf_samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]
 [!code-vb[wf_samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InitializedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InitializedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReplicatorActivity.InitializedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InitializedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InitializedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-154">
          <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 이벤트를 대상으로 하는 <see cref="E:System.Workflow.Activities.ReplicatorActivity.Initialized" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="56862-154">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.ReplicatorActivity.Initialized" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExecuting">
      <MemberSignature Language="C#" Value="public bool IsExecuting (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsExecuting(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsExecuting (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsExecuting(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="56862-155">자식 활동의 인덱스 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-155">The index position of the child activity.</span></span></param>
        <summary><span data-ttu-id="56862-156">지정한 자식 활동이 현재 실행 중인지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="56862-156">Indicates whether the specified child activity is currently executing.</span></span></summary>
        <returns>
          <span data-ttu-id="56862-157">자식 활동이 실행 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-157"><see langword="true" /> if the child activity is executing; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReplicatorActivity.OnClosed(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed(IServiceProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UntilCondition">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.ActivityCondition UntilCondition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.ActivityCondition UntilCondition" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition" />
      <MemberSignature Language="VB.NET" Value="Public Property UntilCondition As ActivityCondition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::ActivityCondition ^ UntilCondition { System::Workflow::ComponentModel::ActivityCondition ^ get(); void set(System::Workflow::ComponentModel::ActivityCondition ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityCondition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-158"><see cref="T:System.Workflow.Activities.ReplicatorActivity" />가 완료되어야 하는 시기를 나타내는 완료 조건을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-158">Gets or sets a completion condition that indicates when the <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> should finish.</span></span></summary>
        <value><span data-ttu-id="56862-159"><see cref="T:System.Workflow.ComponentModel.ActivityCondition" />가 완료되었는지 여부를 확인하는 <see cref="T:System.Workflow.Activities.ReplicatorActivity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-159">An <see cref="T:System.Workflow.ComponentModel.ActivityCondition" /> that determines whether the <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> is finished.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56862-160">이 기본 조건은 <xref:System.Workflow.Activities.ReplicatorActivity>를 완료하려면 모든 자식 인스턴스가 완료되어야 한다는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-160">This default condition is that all child instances must complete for the <xref:System.Workflow.Activities.ReplicatorActivity> to be completed.</span></span>  
  
 <span data-ttu-id="56862-161"><xref:System.Workflow.Activities.ConditionedActivityGroup>과 마찬가지로 규칙 조건 또는 코드 조건을 사용하여 완료 조건을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="56862-161">As with a <xref:System.Workflow.Activities.ConditionedActivityGroup>, you can specify the completion condition using a rule condition or code condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56862-162">다음 코드 예제에서는 <xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition%2A> 속성 값을 `null`로 설정하여 `ReplicatorActivity`가 종료되지 않도록 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="56862-162">The following code example shows how to set the value of the <xref:System.Workflow.Activities.ReplicatorActivity.UntilCondition%2A> property to `null`, which means the `ReplicatorActivity` never closes.</span></span> <span data-ttu-id="56862-163">이 코드 예제는 SimpleReplicatorWorkflow.Designer.cs 파일에 있는 Replicator SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="56862-163">This code example is part of the Replicator SDK Sample from the SimpleReplicatorWorkflow.Designer.cs file.</span></span> <span data-ttu-id="56862-164">자세한 내용은 참조 [복제기를 사용 하 여](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858)합니다.</span><span class="sxs-lookup"><span data-stu-id="56862-164">For more information, see [Using Replicator](http://msdn.microsoft.com/library/4e35f26b-cf12-4c04-9d25-9ceb958f2858).</span></span>  
  
 [!code-csharp[wf_samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]
 [!code-vb[wf_samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UntilConditionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty UntilConditionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty UntilConditionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UntilConditionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ UntilConditionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56862-165">
          <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성을 대상으로 하는 <see cref="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="56862-165">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>