<Type Name="ReceiveActivity" FullName="System.Workflow.Activities.ReceiveActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5df424222e006d526164965b455239b2ac789f8c" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55404455" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReceiveActivity : System.Workflow.Activities.SequenceActivity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ReceiveActivity extends System.Workflow.Activities.SequenceActivity implements class System.Workflow.Activities.IEventActivity, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.ReceiveActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReceiveActivity&#xA;Inherits SequenceActivity&#xA;Implements IActivityEventListener(Of QueueEventArgs), IEventActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReceiveActivity sealed : System::Workflow::Activities::SequenceActivity, System::Workflow::Activities::IEventActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;" />
  <TypeSignature Language="F#" Value="type ReceiveActivity = class&#xA;    inherit SequenceActivity&#xA;    interface IEventActivity&#xA;    interface IActivityEventListener&lt;QueueEventArgs&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.SequenceActivity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Activities.IEventActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.ReceiveActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ReceiveActivity), "Design.Resources.ReceiveActivity.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ReceiveActivityValidator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0a0fd-101">WCF(Windows Communication Foundation) 서비스 계약에 정의된 작업을 구현하는 서비스 활동입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-101">Service activity that implements an operation defined by a Windows Communication Foundation (WCF) service contract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="0a0fd-102"><xref:System.Workflow.Activities.ReceiveActivity> 워크플로 WCF 서비스 계약에 정의 된 작업을 구현 하는 경우 활동을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-102">The <xref:System.Workflow.Activities.ReceiveActivity> activity is used when a workflow implements an operation defined in a WCF service contract.</span></span> <span data-ttu-id="0a0fd-103"><xref:System.Workflow.Activities.ReceiveActivity>는 이미 정의된 서비스 계약의 작업을 구현하거나 워크플로 자체 내에 서비스 계약 및 작업을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-103">The <xref:System.Workflow.Activities.ReceiveActivity> can implement an operation from an already defined service contract or can define the service contract and operation within the workflow itself.</span></span> <span data-ttu-id="0a0fd-104">후자를 워크플로 중심 계약이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-104">The latter is known as a workflow-first contract.</span></span>  
  
 <span data-ttu-id="0a0fd-105"><xref:System.Workflow.Activities.ReceiveActivity> 활동에서는 미리 정의된 메시지 교환 패턴을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-105">The <xref:System.Workflow.Activities.ReceiveActivity> activity supports a set of predefined message exchange patterns.</span></span> <span data-ttu-id="0a0fd-106">이러한 패턴은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-106">These patterns include:</span></span>  
  
-   <span data-ttu-id="0a0fd-107">단방향 받기</span><span class="sxs-lookup"><span data-stu-id="0a0fd-107">One-way receive</span></span>  
  
     <span data-ttu-id="0a0fd-108">메시지를 보내는 클라이언트에서 서비스의 응답 전송을 기대하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-108">The client that sends the message does not expect the service to send a response.</span></span> <span data-ttu-id="0a0fd-109">계약 작업의 반환 형식은 void여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-109">The contract operation should have a void return type.</span></span>  
  
-   <span data-ttu-id="0a0fd-110">요청 받기 - 응답 보내기</span><span class="sxs-lookup"><span data-stu-id="0a0fd-110">Receive request - Send response</span></span>  
  
     <span data-ttu-id="0a0fd-111"><xref:System.Workflow.Activities.ReceiveActivity> 활동에서 메시지를 받고 처리한 후 응답을 클라이언트로 다시 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-111">After a message is received and processed by the <xref:System.Workflow.Activities.ReceiveActivity> activity, a response is sent back to the client.</span></span> <span data-ttu-id="0a0fd-112">계약 작업의 반환 형식이 void인 경우 확인 메시지가 보내기 활동으로 발송됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-112">When the contract operation has a void return type, an acknowledgement is sent back to the send activity.</span></span>  
  
-   <span data-ttu-id="0a0fd-113">요청 받기 - 오류 보내기</span><span class="sxs-lookup"><span data-stu-id="0a0fd-113">Receive request - Send fault</span></span>  
  
     <span data-ttu-id="0a0fd-114"><xref:System.Workflow.Activities.ReceiveActivity> 활동에서 메시지를 받고 처리한 후 응답이나 오류를 클라이언트로 다시 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-114">After a message is received and processed by the <xref:System.Workflow.Activities.ReceiveActivity> activity, a response or a fault is sent back to the client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a0fd-115">지속성이 제대로 수행되고 임시 메시지가 유지되지 않도록 하려면 <xref:System.Workflow.Activities.ReceiveActivity>의 자식 활동이 유지되지 않도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-115">To ensure that persistence performs properly and does not persist transient messages, make sure that child activities of the <xref:System.Workflow.Activities.ReceiveActivity> do not persist by themselves.</span></span> <span data-ttu-id="0a0fd-116">이는 예를 들어 `UnloadOnIdle`을 `true`로 설정하여 지속성 제공자를 만든 경우 자식 활동이 유휴 상태일 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-116">This can occur if the child activities go idle when a persistence provider was created with `UnloadOnIdle` set to `true`, for instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a0fd-117">이 작업의 일부인 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-117">This activity is part of [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span> <span data-ttu-id="0a0fd-118">해당 작업에 대해 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]를 참조 하세요 <xref:System.ServiceModel.Activities.Receive>합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-118">For the equivalent activity in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], see <xref:System.ServiceModel.Activities.Receive>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.SendActivity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a0fd-119"><see cref="T:System.Workflow.Activities.ReceiveActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-119">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-120">일반적으로 <xref:System.Workflow.Activities.ReceiveActivity> 생성자는 워크플로 디자이너에서 만든 코드 병행 파일에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-120">The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReceiveActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReceiveActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a0fd-121"><see cref="T:System.Workflow.Activities.ReceiveActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-121">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-122">일반적으로 <xref:System.Workflow.Activities.ReceiveActivity> 생성자는 워크플로 디자이너에서 만든 코드 병행 파일에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-122">The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-123">다음 예제에서는 <xref:System.Workflow.Activities.ReceiveActivity> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-123">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.</span></span>  <span data-ttu-id="0a0fd-124">이 코드는 `Conversations` 파일의 `ShipperWorkflow.designer.cs` SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-124">This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.</span></span>  
  
 [!code-csharp[ReceiveActivity#11](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReceiveActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReceiveActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ReceiveActivity : string -&gt; System.Workflow.Activities.ReceiveActivity" Usage="new System.Workflow.Activities.ReceiveActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0a0fd-125">활동 인스턴스에 할당할 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-125">The name to assign to the activity instance.</span></span></param>
        <summary><span data-ttu-id="0a0fd-126"><see cref="T:System.Workflow.Activities.ReceiveActivity" /> 클래스의 새 인스턴스를 초기화하여 해당 <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> 속성을 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-126">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> class, initializing its <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-127">일반적으로 <xref:System.Workflow.Activities.ReceiveActivity> 생성자는 워크플로 디자이너에서 만든 코드 병행 파일에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-127">The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-128">다음 예제에서는 <xref:System.Workflow.Activities.ReceiveActivity> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-128">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.</span></span>  
  
 [!code-csharp[ReceiveActivity#12](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Cancel : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="receiveActivity.Cancel executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateInstance">
      <MemberSignature Language="C#" Value="public bool CanCreateInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCreateInstance" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.CanCreateInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property CanCreateInstance As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCreateInstance { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanCreateInstance : bool with get, set" Usage="System.Workflow.Activities.ReceiveActivity.CanCreateInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a0fd-129">작업을 수행하면 새 워크플로 서비스 인스턴스가 만들어지는지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-129">Gets or sets whether the operation causes a new workflow service instance to be created.</span></span></summary>
        <value><span data-ttu-id="0a0fd-130">새 워크플로 인스턴스가 만들어지면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-130"><see langword="true" /> if a new workflow instance is created; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-131"><xref:System.Workflow.Activities.ReceiveActivity>가 <xref:System.Workflow.Activities.ReceiveActivity.CanCreateInstance%2A>로 설정된 `true` 활동은 대화에 포함되지 않아도 서비스 클라이언트에서 호출하면 서비스 워크플로의 새 인스턴스를 만드는 서비스 작업을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-131">A <xref:System.Workflow.Activities.ReceiveActivity> activity that has <xref:System.Workflow.Activities.ReceiveActivity.CanCreateInstance%2A> set to `true` represents a service operation that, when invoked by a service client without being part of a conversation, causes a new instance of the service workflow to be created.</span></span>  
  
 <span data-ttu-id="0a0fd-132"><xref:System.Workflow.Activities.ReceiveActivity>가 <xref:System.Workflow.Activities.ReceiveActivity.CanCreateInstance%2A>로 설정된 `true` 동작이 없는 서비스 워크플로는 클라이언트에서 서비스 작업 호출을 사용하여 인스턴스화할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-132">Service workflows that do not have a <xref:System.Workflow.Activities.ReceiveActivity> activity with <xref:System.Workflow.Activities.ReceiveActivity.CanCreateInstance%2A> set to `true` cannot be instantiated by a client using a service operation invocation.</span></span> <span data-ttu-id="0a0fd-133">이러한 워크플로는 연결된 <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> 개체의 <xref:System.Workflow.Runtime.WorkflowRuntime> 메서드를 사용하여 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-133">Such workflows can be created using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method of the associated <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 <span data-ttu-id="0a0fd-134">이 속성의 기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-134">The default value for this property is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-135">다음 예제에서는 `CanCreateInstance` 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-135">The following example shows how to set the `CanCreateInstance` property.</span></span> <span data-ttu-id="0a0fd-136">이 코드는 `Conversations` 파일의 `ShipperWorkflow.designer.cs` SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-136">This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.</span></span>  
  
 [!code-csharp[ReceiveActivity#0](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a0fd-137">이 동작에 대한 컨텍스트 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-137">Gets the context information for this activity.</span></span></summary>
        <value><span data-ttu-id="0a0fd-138">이 활동의 컨텍스트 정보가 포함된 <see cref="T:System.Collections.Generic.IDictionary`2" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-138">A <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains context information for this activity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-139">컨텍스트 정보는 클라이언트와 서비스 간의 통신에 사용되며 상관 관계 식별 정보 등을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-139">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-140">다음 예제에서는 `Context` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-140">The following example shows how to access the `Context` property.</span></span>  
  
 [!code-csharp[ReceiveActivity#17](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextToken">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ContextToken ContextToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.ContextToken ContextToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.ContextToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextToken As ContextToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::ContextToken ^ ContextToken { System::Workflow::Activities::ContextToken ^ get(); void set(System::Workflow::Activities::ContextToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextToken : System.Workflow.Activities.ContextToken with get, set" Usage="System.Workflow.Activities.ReceiveActivity.ContextToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.ContextTokenTypeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ContextToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a0fd-141"><see cref="T:System.Workflow.Activities.ReceiveActivity" /> 동작과 해당 동작이 통신하고 있는 클라이언트 간의 교환을 상호 관련시키는 데 사용해야 할 컨텍스트를 지정할 때 사용할 수 있는 토큰을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-141">Represents a token that can be used to specify the context that should be used to correlate the exchange between a <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity and the client that the activity is communicating with.</span></span></summary>
        <value><span data-ttu-id="0a0fd-142">상관 관계에 사용할 수 있는 <see cref="T:System.Workflow.Activities.ContextToken" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-142">A <see cref="T:System.Workflow.Activities.ContextToken" /> that can be used for correlation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-143">각 <xref:System.Workflow.Activities.ReceiveActivity.ContextToken%2A>은 소유자 활동의 범위 내에 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-143">Each <xref:System.Workflow.Activities.ReceiveActivity.ContextToken%2A> is defined within the scope of an owner activity.</span></span> <span data-ttu-id="0a0fd-144">사용자는 이름은 같지만 소유자 범위가 다른 두 개의 다른 컨텍스트 토큰을 모델링할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-144">Users can model two distinct context tokens with the same name but different owner scopes.</span></span> <span data-ttu-id="0a0fd-145">이러한 컨텍스트 토큰과 연결된 컨텍스트의 값은 런타임에 달라집니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-145">The value of the contexts associated with these context tokens are different at runtime.</span></span>  
  
 <span data-ttu-id="0a0fd-146">기본적으로 각 워크플로에는 루트 활동 수준으로 범위가 지정된 암시적인 루트 컨텍스트 토큰이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-146">By default, each workflow has an implicit root context token, scoped at the root activity level.</span></span> <span data-ttu-id="0a0fd-147">루트 컨텍스트 토큰의 이름은 '(RootContext)'이고 <xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A>은 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-147">The name of the root context token is '(RootContext)' and the <xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A> is `null`.</span></span> <span data-ttu-id="0a0fd-148"><xref:System.Workflow.Activities.ReceiveActivity> 활동에 연결된 <xref:System.Workflow.Activities.ReceiveActivity.ContextToken%2A>이 없으면 루트 컨텍스트 토큰이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-148">If a <xref:System.Workflow.Activities.ReceiveActivity> activity does not have a <xref:System.Workflow.Activities.ReceiveActivity.ContextToken%2A> associated with it, the root context token is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-149">다음 코드 예제에서는 `ContextToken` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-149">The following code example shows how to access the `ContextToken` property.</span></span> <span data-ttu-id="0a0fd-150">이 코드 예제는 `Conversations` 파일의 `SupplierWorkflow.Designer.cs` SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-150">This code example is adapted from the `Conversations` SDK sample, from the `SupplierWorkflow.Designer.cs` file.</span></span>  
  
 [!code-csharp[ReceiveActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="receiveActivity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="receiveActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultMessage">
      <MemberSignature Language="C#" Value="public System.ServiceModel.FaultException FaultMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.FaultException FaultMessage" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.FaultMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property FaultMessage As FaultException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::FaultException ^ FaultMessage { System::ServiceModel::FaultException ^ get(); void set(System::ServiceModel::FaultException ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FaultMessage : System.ServiceModel.FaultException with get, set" Usage="System.Workflow.Activities.ReceiveActivity.FaultMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.FaultException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a0fd-151">받기 동작의 실행이 완료될 때 반환되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-151">The exception that is returned when a receive activity completes execution.</span></span></summary>
        <value><span data-ttu-id="0a0fd-152">오류 메시지 텍스트와 정보가 포함된 <see cref="T:System.ServiceModel.FaultException" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-152">A <see cref="T:System.ServiceModel.FaultException" /> object that contains the fault message text and details.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-153"><xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> 속성이 <xref:System.ServiceModel.FaultException> 형식의 인스턴스로 설정되어 있으면 완료될 때 오류가 클라이언트에 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-153">If the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property is set to an instance of type <xref:System.ServiceModel.FaultException>, the fault is returned to the client upon completion.</span></span>  
  
 <span data-ttu-id="0a0fd-154">활동 실행 중에 예외가 throw되고 <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> 속성이 설정되어 있으면 지정된 오류가 클라이언트에 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-154">If an exception is thrown during the activity execution and the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property is set, then the specified fault is returned to the client.</span></span> <span data-ttu-id="0a0fd-155">활동 실행 중에 예외가 throw되고 <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> 속성이 설정되어 있으며 연결된 작업에 <xref:System.ServiceModel.FaultContractAttribute> 속성의 해당 형식과 일치하는 오류 형식을 지정하는 <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>가 있으면 채널에 오류가 발생하여 클라이언트가 서버와 통신할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-155">If an exception is thrown during the activity execution and the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property is set, and the associated operation has a <xref:System.ServiceModel.FaultContractAttribute> attribute that specifies a fault type that matches that of the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property, then the channel is not faulted and the client can still communicate to the server.</span></span> <span data-ttu-id="0a0fd-156"><xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> 속성이 설정되어 있지 않으면 throw된 예외가 오류로 클라이언트에 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-156">If the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property is not set, the thrown exception is returned as a fault to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-157">다음 코드 샘플에서는 `FaultMessage` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-157">The following code sample shows how to access the `FaultMessage` property.</span></span>  
  
 [!code-csharp[ReceiveActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultMessageProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty FaultMessageProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty FaultMessageProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReceiveActivity.FaultMessageProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FaultMessageProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ FaultMessageProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FaultMessageProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.ReceiveActivity.FaultMessageProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a0fd-158"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성을 대상으로 하는 <see cref="P:System.Workflow.Activities.ReceiveActivity.FaultMessage" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-158">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.ReceiveActivity.FaultMessage" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-159">이 종속성 속성을 사용하면 받기 동작의 <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> 속성과 <xref:System.ServiceModel.FaultException> 형식의 워크플로 public 속성/필드나 형식이 같은 다른 동작의 public 속성/필드 간에 바인딩을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-159">This dependency property can be used to set up a binding between the receive activity's <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property and a public workflow property/field of type <xref:System.ServiceModel.FaultException> or another activity's public property/field of the same type.</span></span>  
  
 <span data-ttu-id="0a0fd-160">또한 이 종속성 속성을 사용하여 <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> 활동의 <xref:System.Workflow.Activities.ReceiveActivity> 속성과 연결된 값을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-160">This dependency property can also be used to set the value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of a <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span>  
  
 <span data-ttu-id="0a0fd-161">이 종속성 속성을 사용하여 <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> 활동의 <xref:System.Workflow.Activities.ReceiveActivity> 속성과 연결된 바인딩이나 값을 가져올 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-161">This dependency property can also be used to get the binding or value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a0fd-162">클라이언트와 워크플로 서비스 간의 통신에 사용되는 컨텍스트 정보가 포함된 사전을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-162">Returns a dictionary that contains the context information used for communication between a client and the workflow service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-163">컨텍스트 정보는 클라이언트와 서비스 간의 통신에 사용되며 상관 관계 식별 정보 등을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-163">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ContextToken contextToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ContextToken contextToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ContextToken ^ contextToken);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * System.Workflow.Activities.ContextToken -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.GetContext (activity, contextToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="contextToken" Type="System.Workflow.Activities.ContextToken" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="0a0fd-164">컨텍스트 정보가 요청되는 활동 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-164">Activity instance that context information is requested for.</span></span></param>
        <param name="contextToken"><span data-ttu-id="0a0fd-165">활동에서 사용하는 컨텍스트 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-165">The context token used by the activity.</span></span></param>
        <summary><span data-ttu-id="0a0fd-166">활동 인스턴스 및 컨텍스트 토큰이 지정된 컨텍스트 정보를 반환하는 정적 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-166">Static method that returns context information given an activity instance and context token.</span></span></summary>
        <returns><span data-ttu-id="0a0fd-167"><see cref="T:System.Xml.XmlQualifiedName" /> 키 및 관련된 <see cref="T:System.String" /> 값을 포함하는 사전 기반 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-167">A dictionary based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-168">컨텍스트 정보는 클라이언트와 서비스 간의 통신에 사용되며 상관 관계 식별 정보 등을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-168">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-169">다음 예제에서는 `GetContext` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-169">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[ReceiveActivity#13](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, string contextName, string ownerActivityName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, string contextName, string ownerActivityName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ contextName, System::String ^ ownerActivityName);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * string * string -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.GetContext (activity, contextName, ownerActivityName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="contextName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="0a0fd-170">컨텍스트 정보가 요청되는 활동 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-170">Activity instance that context information is requested for.</span></span></param>
        <param name="contextName"><span data-ttu-id="0a0fd-171">활동에서 사용하는 컨텍스트 토큰의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-171">Name of the context token used by the activity.</span></span></param>
        <param name="ownerActivityName"><span data-ttu-id="0a0fd-172">소유자 활동의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-172">The name of the owning activity name.</span></span></param>
        <summary><span data-ttu-id="0a0fd-173">활동 인스턴스 및 컨텍스트 토큰이 지정된 컨텍스트 정보를 반환하는 정적 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-173">Static method that returns context information given an activity instance and context token.</span></span></summary>
        <returns><span data-ttu-id="0a0fd-174"><see cref="T:System.Xml.XmlQualifiedName" /> 키 및 관련된 <see cref="T:System.String" /> 값을 포함하는 사전 기반 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-174">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-175">컨텍스트 정보는 클라이언트와 서비스 간의 통신에 사용되며 상관 관계 식별 정보 등을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-175">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-176">다음 예제에서는 `GetContext` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-176">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[ReceiveActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetRootContext (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetRootContext(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetRootContext(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetRootContext : System.Workflow.ComponentModel.Activity -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.GetRootContext activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="0a0fd-177">자식 활동 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-177">The child activity instance.</span></span></param>
        <summary><span data-ttu-id="0a0fd-178">지정된 동작 인스턴스와 연결된 루트 컨텍스트에 대한 컨텍스트 정보를 반환하는 정적 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-178">Static method that returns context information for the root context associated with a given activity instance.</span></span> <span data-ttu-id="0a0fd-179">컨텍스트 정보는 워크플로 서비스와 호스트 애플리케이션 간의 통신에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-179">Context information is used for communication between a host application and the workflow service.</span></span></summary>
        <returns><span data-ttu-id="0a0fd-180">루트 컨텍스트에 대한 컨텍스트 정보를 나타내는 <see cref="T:System.Xml.XmlQualifiedName" /> 키 및 관련된 <see cref="T:System.String" /> 값을 포함하는 사전 기반 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-180">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values that represent context information for a root context.</span></span> <span data-ttu-id="0a0fd-181">사용자 지정 인스턴스 생성 논리를 제외하고 새 인스턴스 생성을 트리거하는 메시지는 루트 컨텍스트에서 수신됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-181">Barring custom instance creation logic, the message that triggers creation of a new instance is received in the root context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-182">컨텍스트 정보는 클라이언트와 서비스 간의 통신에 사용되며 상관 관계 식별 정보 등을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-182">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-183">다음 예제에서는 `GetRootContext` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-183">The following example shows how to use the `GetRootContext` method.</span></span>  
  
 [!code-csharp[ReceiveActivity#16](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowServiceAttributes">
      <MemberSignature Language="C#" Value="public static object GetWorkflowServiceAttributes (object dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetWorkflowServiceAttributes(object dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWorkflowServiceAttributes (dependencyObject As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetWorkflowServiceAttributes(System::Object ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetWorkflowServiceAttributes : obj -&gt; obj" Usage="System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="0a0fd-184">서비스 특성을 검색할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-184">The object to retrieve the service attributes from.</span></span></param>
        <summary><span data-ttu-id="0a0fd-185"><see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> 활동으로 구현된 서비스의 <see cref="T:System.Workflow.Activities.ReceiveActivity" /> 특성을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-185">Returns the <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> attributes for the service implemented by the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity.</span></span> <span data-ttu-id="0a0fd-186">이러한 특성에는 <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />, <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />, <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults" /> 및 <see cref="T:System.Workflow.Activities.ReceiveActivity" /> 활동에서 반환되는 오류에 예외 정보를 포함할지 여부와 같은 항목이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-186">These attributes include items like the <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />, the <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />, the <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults" />, and whether to include exception details in any faults that are returned from the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity.</span></span></summary>
        <returns><span data-ttu-id="0a0fd-187">서비스 특성 데이터가 포함된 <see cref="T:System.Object" /> 개체를 나타내는 <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-187">A <see cref="T:System.Object" /> that represents a <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> object that contains service attribute data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-188"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> 속성은 <xref:System.Workflow.Activities.ReceiveActivity> 활동으로 정의되는 연결된 종속성 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-188">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span> <span data-ttu-id="0a0fd-189">이 종속성 속성은 디자인 타임에 <xref:System.Workflow.Activities.ReceiveActivity> 메서드 호출을 사용하여 <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> 활동이 포함된 루트 워크플로에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-189">This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time.</span></span>  
  
 <span data-ttu-id="0a0fd-190"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> 속성은 워크플로 서비스가 시작될 때 해당 워크플로 서비스에 적용되는 서비스 수준 동작 특성을 정의하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-190">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts.</span></span> <span data-ttu-id="0a0fd-191">이러한 속성은 런타임에 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-191">These cannot be modified at runtime.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a0fd-192">현재 워크플로에서 <xref:System.Workflow.Activities.InvokeWorkflowActivity> 활동을 사용하여 다른 워크플로를 시작하면 호출된 워크플로는 호출하는 워크플로의 서비스 특성을 상속하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-192">If the current workflow starts another workflow using an <xref:System.Workflow.Activities.InvokeWorkflowActivity> activity, the invoked workflow does not inherit the invoking workflow's service attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a0fd-193">서비스 특성이 사용자 지정 활동에 대해 설정되어 있는 경우 해당 활동이 워크플로에 포함되어 있으면 해당 서비스 특성이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-193">If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes are used.</span></span> <span data-ttu-id="0a0fd-194">서비스 특성은 사용자 지정 활동 자체가 워크플로로 실행되는 경우에만 사용자 지정 활동에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-194">Service attributes are only used for custom activities if the custom activity itself is run as a workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-195">다음 예제에서는 `GetWorkflowServiceAttributes` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-195">The following example shows how to use the `GetWorkflowServiceAttributes` method.</span></span>  
  
 [!code-csharp[ReceiveActivity#5](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="override this.HandleFault : System.Workflow.ComponentModel.ActivityExecutionContext * Exception -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="receiveActivity.HandleFault (executionContext, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Initialize : IServiceProvider -&gt; unit" Usage="receiveActivity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="receiveActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSequenceComplete">
      <MemberSignature Language="C#" Value="protected override void OnSequenceComplete (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSequenceComplete(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSequenceComplete (executionContext As ActivityExecutionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSequenceComplete(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.OnSequenceComplete : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; unit" Usage="receiveActivity.OnSequenceComplete executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationValidation">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt; OperationValidation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.OperationValidationEventArgs&gt; OperationValidation" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OperationValidation As EventHandler(Of OperationValidationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::OperationValidationEventArgs ^&gt; ^ OperationValidation;" />
      <MemberSignature Language="F#" Value="member this.OperationValidation : EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt; " Usage="member this.OperationValidation : System.EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.SRCategory("Handlers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a0fd-196">작업에 대한 메시지를 받고 유효성 검사가 필요할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-196">Occurs when a message is received for an operation and validation is required.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-197"><xref:System.Workflow.Activities.ReceiveActivity> 활동에서 메시지를 받으려고 할 때 실행되는 선택적인 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-197">This is an optional event handler that is fired when the <xref:System.Workflow.Activities.ReceiveActivity> activity is about to receive a message.</span></span> <span data-ttu-id="0a0fd-198">연결된 처리기를 사용하면 ClaimSet 기반 보안 검사를 수행하여 <xref:System.Workflow.Activities.ReceiveActivity> 동작으로 구현된 서비스 작업의 클라이언트 호출을 인증할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-198">The associated handler can be used to perform ClaimSet-based security checks to authorize client invocation of the service operation implemented by the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span>  
  
 <span data-ttu-id="0a0fd-199">이벤트 처리기에서 <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=nameWithType>를 `false`로 설정하면 서비스 작업 호출이 거부되고 클라이언트에서 <xref:System.ServiceModel.FaultException>을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-199">Setting <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=nameWithType> to `false` in the event handler rejects the service operation invocation and the client receives a <xref:System.ServiceModel.FaultException>.</span></span> <span data-ttu-id="0a0fd-200"><xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=nameWithType>가 `true`로 설정되어 있으면 서비스 작업 호출이 성공하고 <xref:System.Workflow.Activities.ReceiveActivity> 동작에서 메시지를 받아 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-200">If <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=nameWithType> is set to `true`, then the service operation invocation succeeds and the <xref:System.Workflow.Activities.ReceiveActivity> activity receives and processes the message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-201">다음 예제에서는 `OperationValidation` 이벤트를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-201">The following example shows how to use the `OperationValidation` event.</span></span>  
  
 [!code-csharp[ReceiveActivity#7](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationValidationEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty OperationValidationEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty OperationValidationEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReceiveActivity.OperationValidationEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OperationValidationEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ OperationValidationEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable OperationValidationEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.ReceiveActivity.OperationValidationEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a0fd-202"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 이벤트를 대상으로 하는 <see cref="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-202">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-203">이 종속성 이벤트 속성을 사용하면 받기 활동의 <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation> 이벤트를 워크플로 클래스의 공용 이벤트 처리기에 바인딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-203">This dependency event property can be used to bind the receive activity's <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.ReceiveActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a0fd-204">서비스의 형식 매개 변수 목록에 있는 바인딩 가능한 매개 변수의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-204">Gets the collection of bindable parameters as found in the service's formal parameter list.</span></span></summary>
        <value><span data-ttu-id="0a0fd-205">바인딩할 매개 변수의 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-205">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-206"><xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A>를 사용하면 서비스 작업 매개 변수와 <xref:System.Workflow.Activities.ReceiveActivity> 활동을 포함하는 워크플로의 public 필드/속성 간에 바인딩을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-206"><xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> can be used to specify a binding between the service operation parameters and public field/properties of the workflow that contain the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span> <span data-ttu-id="0a0fd-207">클라이언트에서 작업을 호출하면 해당 매개 변수 값은 받기 활동이 실행되는 동안 바인딩된 워크플로 속성에 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-207">When a client invokes the operation, the corresponding parameter values are written to bound workflow properties during the receive activity's execution.</span></span>  
  
 <span data-ttu-id="0a0fd-208">또한 받기 활동의 자식 활동에서 <xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A>를 사용하면 클라이언트 호출에 의해 전달된 매개 변수 값을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-208"><xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> can also be used by the receive activity's child activities to read the parameter values passed in by client invocation.</span></span> <span data-ttu-id="0a0fd-209">자식 활동에서는 <xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> 컬렉션을 사용하여 부모 <xref:System.Workflow.Activities.ReceiveActivity> 활동의 반환 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-209">Child activities can use the <xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> collection to set the return value of the parent <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span>  
  
 <span data-ttu-id="0a0fd-210">서비스 계약의 모든 매개 변수는 `ParameterBindings` 속성에 포함되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-210">All parameters of the service contract should be included in the `ParameterBindings` property.</span></span> <span data-ttu-id="0a0fd-211">바인딩되지 않은 매개 변수는 컴파일할 때 컴파일러 경고를 생성하며 <xref:System.Workflow.Activities.ReceiveActivity>에서 이 메시지를 클라이언트에 다시 반환할 때 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-211">Unbound parameters cause compiler warnings upon compilation and an exception can occur when the <xref:System.Workflow.Activities.ReceiveActivity> returns this message back to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-212">다음 예제에서는 `ParameterBindings` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-212">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="0a0fd-213">이 코드는 `Conversations` 파일의 `ShipperWorkflow.designer.cs` SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-213">This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.</span></span>  
  
 [!code-csharp[ReceiveActivity#3](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOperationInfo">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.OperationInfoBase ServiceOperationInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.OperationInfoBase ServiceOperationInfo" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceOperationInfo As OperationInfoBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::OperationInfoBase ^ ServiceOperationInfo { System::Workflow::Activities::OperationInfoBase ^ get(); void set(System::Workflow::Activities::OperationInfoBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceOperationInfo : System.Workflow.Activities.OperationInfoBase with get, set" Usage="System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.OperationInfoBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a0fd-214"><see cref="T:System.Workflow.Activities.ReceiveActivity" /> 동작에서 구현하는 계약 및 서비스 작업을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-214">Defines the contract and service operation that the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity implements.</span></span></summary>
        <value><span data-ttu-id="0a0fd-215">계약 이름, 계약 형식, 메서드 이름과 다를 수 있는 작업 이름, 작업이 단방향인지 여부, 매개 변수를 포함하여 작업에 대한 메서드 정보 등이 포함된 <see cref="T:System.Workflow.Activities.OperationInfoBase" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-215">An <see cref="T:System.Workflow.Activities.OperationInfoBase" /> object that contains the contract name, the contract type, the operation name, (which could be distinct from method name), whether the operation is a one-way operation, and method information including parameters about the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-216"><xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo%2A> 속성은 <xref:System.Workflow.Activities.TypedOperationInfo> 또는 <xref:System.Workflow.Activities.OperationInfo> 형식의 인스턴스로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-216">The <xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo%2A> property can be set to an instance of type <xref:System.Workflow.Activities.TypedOperationInfo> or <xref:System.Workflow.Activities.OperationInfo>.</span></span> <span data-ttu-id="0a0fd-217"><xref:System.Workflow.Activities.TypedOperationInfo> 기존 Windows Communication Foundation (WCF) 서비스 계약을 사용 하 여 수신 작업을 구성 하려면 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-217"><xref:System.Workflow.Activities.TypedOperationInfo> can be used to configure a receive activity using an existing Windows Communication Foundation (WCF) service contract.</span></span>  
  
 <span data-ttu-id="0a0fd-218"><xref:System.Workflow.Activities.OperationInfo> 인스턴스를 사용하면 워크플로 중심 계약 시나리오에 적합한 받기 동작을 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-218">An instance of <xref:System.Workflow.Activities.OperationInfo> can be used to configure a receive activity for the workflow-first contract scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-219">다음 예제에서는 `ServiceOperationInfo` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-219">The following example shows how to access the `ServiceOperationInfo` property.</span></span> <span data-ttu-id="0a0fd-220">이 코드는 `Conversations` 파일의 `ShipperWorkflow.designer.cs` SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-220">This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.</span></span>  
  
 [!code-csharp[ReceiveActivity#4](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorkflowServiceAttributes">
      <MemberSignature Language="C#" Value="public static void SetWorkflowServiceAttributes (object dependencyObject, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWorkflowServiceAttributes(object dependencyObject, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWorkflowServiceAttributes (dependencyObject As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWorkflowServiceAttributes(System::Object ^ dependencyObject, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetWorkflowServiceAttributes : obj * obj -&gt; unit" Usage="System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes (dependencyObject, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="0a0fd-221">서비스 특성을 적용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-221">The object to apply the service attributes to.</span></span></param>
        <param name="value"><span data-ttu-id="0a0fd-222">적용할 서비스 특성 데이터가 포함된 <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-222">The <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> object that contains the service attribute data to apply.</span></span></param>
        <summary><span data-ttu-id="0a0fd-223"><see cref="T:System.Workflow.Activities.ReceiveActivity" /> 동작으로 구현된 서비스의 특성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-223">Sets the attributes for the service implemented by the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity.</span></span> <span data-ttu-id="0a0fd-224">이러한 특성에는 <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />, <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" /> 및 <see cref="T:System.Workflow.Activities.ReceiveActivity" /> 활동에서 반환되는 오류에 예외 정보를 포함할지 여부와 같은 항목이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-224">These attributes include items like the <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />, the <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />, and whether to include exception details in any faults that are returned from the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-225"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> 속성은 <xref:System.Workflow.Activities.ReceiveActivity> 활동으로 정의되는 연결된 종속성 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-225">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span> <span data-ttu-id="0a0fd-226">이 종속성 속성은 디자인 타임에 <xref:System.Workflow.Activities.ReceiveActivity> 메서드 호출을 사용하여 <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> 활동이 포함된 루트 워크플로에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-226">This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time.</span></span>  
  
 <span data-ttu-id="0a0fd-227"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> 속성은 워크플로 서비스가 시작될 때 해당 워크플로 서비스에 적용되는 서비스 수준 동작 특성을 정의하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-227">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts.</span></span> <span data-ttu-id="0a0fd-228">이러한 속성은 런타임에 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-228">These cannot be modified at runtime.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a0fd-229">현재 워크플로에서 <xref:System.Workflow.Activities.InvokeWorkflowActivity> 활동을 사용하여 다른 워크플로를 시작하면 호출된 워크플로는 호출하는 워크플로의 서비스 특성을 상속하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-229">If the current workflow starts another workflow using a <xref:System.Workflow.Activities.InvokeWorkflowActivity> activity, the invoked workflow does not inherit the invoking workflow's service attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a0fd-230">서비스 특성이 사용자 지정 활동에 대해 설정되어 있는 경우 해당 활동이 워크플로에 포함되어 있으면 해당 서비스 특성이 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-230">If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes is not used.</span></span> <span data-ttu-id="0a0fd-231">서비스 특성은 사용자 지정 활동 자체가 워크플로로 실행되는 경우에만 사용자 지정 활동에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-231">Service attributes are only used in custom activities if the custom activity itself is run as a workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a0fd-232">다음 예제에서는 `SetWorkflowServiceAttributes` 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-232">The following example shows how to use the `SetWorkflowServiceAttributes` method.</span></span>  
  
 [!code-csharp[ReceiveActivity#6](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.QueueName">
      <MemberSignature Language="C#" Value="IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property QueueName As IComparable Implements IEventActivity.QueueName" />
      <MemberSignature Language="C++ CLI" Value="property IComparable ^ System::Workflow::Activities::IEventActivity::QueueName { IComparable ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.Activities.IEventActivity.QueueName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a0fd-233">이 활동이 데이터 도착을 기다리는 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-233">Gets the name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span></span></summary>
        <value><span data-ttu-id="0a0fd-234">이 활동이 데이터 도착을 기다리는 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-234">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Subscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Subscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Subscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Subscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Subscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Subscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="0a0fd-235"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 활동의 실행 환경을 나타내는 <see cref="T:System.Workflow.Activities.ReceiveActivity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-235">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="0a0fd-236">이벤트를 처리하는 <see cref="T:System.EventHandler" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-236">The <see cref="T:System.EventHandler" /> that handles the event.</span></span> <span data-ttu-id="0a0fd-237">이 이벤트 처리기는 부모 활동에서 소유합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-237">This event handler is owned by the parent activity.</span></span></param>
        <summary><span data-ttu-id="0a0fd-238">이벤트에 대한 <see cref="T:System.Workflow.Activities.ReceiveActivity" /> 활동의 구독을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-238">Creates the subscription of the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity to an event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Unsubscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Unsubscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Unsubscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Unsubscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Unsubscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Unsubscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="0a0fd-239"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 활동의 실행 환경을 나타내는 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-239">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> activity.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="0a0fd-240">이벤트를 처리하는 <see cref="T:System.EventHandler" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-240">The <see cref="T:System.EventHandler" /> that handles the event.</span></span> <span data-ttu-id="0a0fd-241">이 이벤트 처리기는 부모 활동에서 소유합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-241">This event handler is owned by the parent activity.</span></span></param>
        <summary><span data-ttu-id="0a0fd-242">이벤트에 대한 <see cref="T:System.Workflow.ComponentModel.Activity" />의 구독을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-242">Cancels the subscription of a <see cref="T:System.Workflow.ComponentModel.Activity" /> to an event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;QueueEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.QueueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#QueueEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As QueueEventArgs) Implements IActivityEventListener(Of QueueEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::QueueEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;::OnEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.QueueEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="0a0fd-243">이벤트를 발생시킨 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-243">The object that raised the event.</span></span></param>
        <param name="e"><span data-ttu-id="0a0fd-244">이전에 입력된 이벤트 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-244">The previously-typed event arguments.</span></span></param>
        <summary><span data-ttu-id="0a0fd-245">구독 대상 이벤트가 발생할 때의 처리 절차를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-245">Defines the processing procedure when the subscribed-to event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowServiceAttributesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty WorkflowServiceAttributesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty WorkflowServiceAttributesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WorkflowServiceAttributesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ WorkflowServiceAttributesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WorkflowServiceAttributesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a0fd-246"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성을 대상으로 하는 <see cref="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-246">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a0fd-247"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> 속성은 <xref:System.Workflow.Activities.ReceiveActivity> 활동으로 정의되는 연결된 종속성 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-247">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span> <span data-ttu-id="0a0fd-248">이 종속성 속성은 디자인 타임에 <xref:System.Workflow.Activities.ReceiveActivity> 메서드 호출을 사용하여 <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> 활동이 포함된 루트 워크플로에 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-248">This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time.</span></span>  
  
 <span data-ttu-id="0a0fd-249"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> 속성은 워크플로 서비스가 시작될 때 해당 워크플로 서비스에 적용되는 서비스 수준 동작 특성을 정의하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-249">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts.</span></span> <span data-ttu-id="0a0fd-250">이러한 속성은 런타임에 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a0fd-250">These cannot be modified at runtime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>