<Type Name="CallExternalMethodActivity" FullName="System.Workflow.Activities.CallExternalMethodActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="58148e123f1ce00659fac5e3bf7ca097750412e1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55353846" /></Metadata><TypeSignature Language="C#" Value="public class CallExternalMethodActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallExternalMethodActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.CallExternalMethodActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class CallExternalMethodActivity&#xA;Inherits Activity&#xA;Implements IDynamicPropertyTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallExternalMethodActivity : System::Workflow::ComponentModel::Activity, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <TypeSignature Language="F#" Value="type CallExternalMethodActivity = class&#xA;    inherit Activity&#xA;    interface IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MethodInvoking")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.CallExternalMethodActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ded90-101">로컬 서비스의 메서드를 호출하는 데 사용되는 워크플로 통신 활동을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-101">Defines a workflow communication activity that is used to call a method on a local service.</span></span> <span data-ttu-id="ded90-102">이 활동은 로컬 서비스를 통해 워크플로에서 호스트로 데이터를 보내는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-102">This activity is used to send data from the workflow to the host through the local service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="ded90-103">로컬 서비스는 로컬 서비스 인터페이스(<xref:System.Workflow.Activities.ExternalDataExchangeAttribute>로 표시된 인터페이스)를 구현하는 클래스이며 <xref:System.Workflow.Activities.ExternalDataExchangeService>에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-103">A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ded90-104">외부 메서드를 호출할 때 해당 메서드의 모든 매개 변수가 복제됩니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-104">When the external method is called all parameters of the method are cloned.</span></span> <span data-ttu-id="ded90-105">매개 변수 형식에서 <xref:System.ICloneable>을 구현하는 경우 `Clone` 메서드가 호출되거나 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>를 사용하여 해당 매개 변수 형식이 serialize 또는 deserialize됩니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-105">If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ded90-106">다음 코드 예제에서는 사용자 지정 활동에서 <xref:System.Workflow.Activities.CallExternalMethodActivity>를 사용하여 외부 메서드를 호출하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-106">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity> in a custom activity to call an external method.</span></span> <span data-ttu-id="ded90-107">이 코드 예제는 PurchaseOrderWorkflow.Designer.cs 파일에 있는 Listen SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-107">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="ded90-108">자세한 내용은 [수신 샘플](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-108">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#213](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#213)]
 [!code-vb[wf_samples#213](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#213)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-109">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-109">Using the CallExternalMethod Activity</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ded90-110"><see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-110">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ded90-111">다음 예제에서는 `CallExternalMethodActivity` 클래스의 인스턴스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-111">The following example shows how to create an instance of the `CallExternalMethodActivity` class.</span></span>  <span data-ttu-id="ded90-112">이 예제는 DocumentApprovalWorkflow.designer.cs 파일에 있는 PersistenceHost SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-112">This example is from the PersistenceHost SDK sample, from the DocumentApprovalWorkflow.designer.cs file.</span></span> <span data-ttu-id="ded90-113">자세한 내용은 [Persistence Host 샘플](https://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251)합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-113">For more information, see [Persistence Host Sample](https://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251).</span></span>  
  
 [!code-csharp[wf_samples#278](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#278)]
 [!code-vb[wf_samples#278](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#278)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-114">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-114">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ded90-115"><see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ded90-116">다음 코드 예제에서는 <xref:System.Workflow.Activities.CallExternalMethodActivity>의 새 인스턴스를 초기화하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-116">The following code example shows how initialize a new instance of the <xref:System.Workflow.Activities.CallExternalMethodActivity>.</span></span> <span data-ttu-id="ded90-117">이 코드는 <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> 및 <xref:System.Workflow.Activities.CodeActivity> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-117">The code also initializes new instances of the <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> and <xref:System.Workflow.Activities.CodeActivity> classes.</span></span> <span data-ttu-id="ded90-118">이 코드 예제는 PurchaseOrderWorkflow.Designer.cs 파일에 있는 Listen SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-118">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="ded90-119">자세한 내용은 [수신 샘플](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-119">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#214](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#214)]
 [!code-vb[wf_samples#214](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#214)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.CallExternalMethodActivity : string -&gt; System.Workflow.Activities.CallExternalMethodActivity" Usage="new System.Workflow.Activities.CallExternalMethodActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ded90-120">활동 이름 속성을 초기화하는 데 사용되는 활동의 사용자 정의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-120">The user-defined name of the activity, used to initialize the activity name property.</span></span></param>
        <summary><span data-ttu-id="ded90-121">활동 이름을 사용하여 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-121">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class using the name of the activity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationToken">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.CorrelationToken CorrelationToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CorrelationToken As CorrelationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Workflow::Runtime::CorrelationToken ^ CorrelationToken { System::Workflow::Runtime::CorrelationToken ^ get(); void set(System::Workflow::Runtime::CorrelationToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationToken : System.Workflow.Runtime.CorrelationToken with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.CorrelationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded90-122">외부 메서드의 <see cref="T:System.Workflow.Runtime.CorrelationToken" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-122">Gets or sets the <see cref="T:System.Workflow.Runtime.CorrelationToken" /> for the external method.</span></span></summary>
        <value><span data-ttu-id="ded90-123">외부 메서드의 상관 관계 토큰입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-123">The correlation token for the external method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded90-124">이 속성은 제공된 외부 메서드 호출을 가져온 특정 <xref:System.Workflow.Activities.CallExternalMethodActivity> 활동을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-124">This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from.</span></span> <span data-ttu-id="ded90-125">이 값을 로컬 통신 서비스 이벤트의 페이로드에 사용하여 해당 이벤트를 올바른 <xref:System.Workflow.Activities.HandleExternalEventActivity> 활동에 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-125">This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span>  
  
 <span data-ttu-id="ded90-126">상관 관계의 예에 대 한 참조를 [로컬 서비스 샘플 상관 관계가 지정 된](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-126">For an example of correlation, see the [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ded90-127">다음 샘플에서는 `CorrelationToken` 개체의 `CallExternalMethodActivity` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-127">The following sample shows how to access the `CorrelationToken` property of a `CallExternalMethodActivity` object.</span></span> <span data-ttu-id="ded90-128">이 샘플은 CorrelatedLocalServiceWorkflow.designer.cs 파일에 있는 Correlated Local Service SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-128">This sample is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="ded90-129">자세한 내용은 [상관 관계가 지정 된 로컬 서비스 샘플](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-129">For more information, see [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#200](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#200)]
 [!code-vb[wf_samples#200](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-130">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-130">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CorrelationTokenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CorrelationTokenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CorrelationTokenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CorrelationTokenProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded90-131"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성을 대상으로 하는 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-131">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-132">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-132">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="callExternalMethodActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="ded90-133"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />를 실행할 실행 환경이 포함된 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-133">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that contains the execution environment in which to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span></span></param>
        <summary><span data-ttu-id="ded90-134">지정된 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />로 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-134">Tries to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> with the specified <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span></span></summary>
        <returns><span data-ttu-id="ded90-135"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-135">One of the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ded90-136">이 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="ded90-136">This <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ded90-137"><paramref name="executionContext" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="ded90-137"><paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ded90-138"><paramref name="executionContext" />에 대한 서비스 개체가 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="ded90-138">The service object for the <paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-139">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-139">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="callExternalMethodActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ded90-140">종속성 속성에 대한 초기화를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-140">Performs initialization on dependency properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded90-141">이 메서드는 <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> 속성을 초기화하고, <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> 및 <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> 속성이 설정되었는지 확인하고, <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> 속성에서 참조되는 이벤트를 <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> 속성에서 참조되는 인터페이스에서 찾을 수 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-141">This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-142">CallExternalMethodActivity 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-142">Using the CallExternalMethodActivity Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public virtual Type InterfaceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ InterfaceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded90-143"><see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />가 있는 외부 메서드의 선언 인터페이스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-143">Gets or sets an external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></summary>
        <value><span data-ttu-id="ded90-144"><see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />가 있는 외부 메서드의 선언 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-144">The external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ded90-145">다음 코드 예제에서는 <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-145">The following code example shows how to set the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span> <span data-ttu-id="ded90-146">인터페이스 형식은 <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>로 지정되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-146">The interface type must be attributed with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span> <span data-ttu-id="ded90-147">이 코드 예제는 PurchaseOrderWorkflow.Designer.cs 파일에 있는 Listen SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-147">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="ded90-148">자세한 내용은 [수신 샘플](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-148">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-149">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-149">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InterfaceTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InterfaceTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InterfaceTypeProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded90-150"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성을 대상으로 하는 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-150">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded90-151"><xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> 속성은 <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>로 표시된 인터페이스의 이름에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-151">The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-152">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-152">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodInvoking">
      <MemberSignature Language="C#" Value="public event EventHandler MethodInvoking;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MethodInvoking" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MethodInvoking As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MethodInvoking;" />
      <MemberSignature Language="F#" Value="member this.MethodInvoking : EventHandler " Usage="member this.MethodInvoking : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded90-153">메서드를 호출하기 전에 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-153">Occurs before invoking the method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ded90-154">다음 코드 예제에서는 <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> 이벤트를 사용하여 외부 메서드를 호출하기 전에 호출할 메서드를 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-154">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event to set the method to call before invoking the external method.</span></span> <span data-ttu-id="ded90-155">이 코드 예제는 PurchaseOrderWorkflow.Designer.cs 파일에 있는 Listen SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-155">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="ded90-156">자세한 내용은 [수신 샘플](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-156">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-157">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-157">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodInvokingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodInvokingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodInvokingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MethodInvokingEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded90-158"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 이벤트를 대상으로 하는 <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-158">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded90-159"><xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> 이벤트는 활동이 로컬 서비스의 외부 메서드를 호출하기 전에 실행되는 이벤트 대리자를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-159">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-160">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-160">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public virtual string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded90-161"><see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />로 등록된 로컬 서비스에서 호출할 메서드의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-161">Gets or sets the name of the method to be called on the local service registered with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</span></span></summary>
        <value><span data-ttu-id="ded90-162"><see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 인터페이스의 메서드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-162">The method name of the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ded90-163">다음 코드 예제에서는 <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> 속성을 사용하여 외부 메서드의 메서드 이름을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-163">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property to set the method name of the external method.</span></span> <span data-ttu-id="ded90-164">이 코드 예제는 PurchaseOrderWorkflow.Designer.cs 파일에 있는 Listen SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-164">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="ded90-165">자세한 내용은 [수신 샘플](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90))합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-165">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-166">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-166">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MethodNameProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded90-167"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성을 대상으로 하는 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-167">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded90-168"><xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> 속성은 <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>로 표시된 인터페이스에 포함된 메서드의 이름에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-168">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-169">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-169">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoked">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoked (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoked(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoked (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoked(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMethodInvoked : EventArgs -&gt; unit&#xA;override this.OnMethodInvoked : EventArgs -&gt; unit" Usage="callExternalMethodActivity.OnMethodInvoked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ded90-170"><see cref="T:System.EventArgs" /> 이벤트에 대한 데이터가 들어 있는 <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-170">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></param>
        <summary><span data-ttu-id="ded90-171">추출할 파생된 클래스에 대한 후크 및 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />의 반환 값을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-171">Provides a hook for derived classes to extract out and return values from the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span></span> <span data-ttu-id="ded90-172">이 메서드는 외부 메서드가 실행된 후에 바로 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-172">This method is called just after the external method is run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ded90-173">다음 예제에서는 `OnMethodInvoked` 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-173">The following example shows an implementation of the `OnMethodInvoked` method.</span></span>  
  
 [!code-csharp[wf_samples#1](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#1)]
 [!code-vb[wf_samples#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-174">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-174">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoking">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoking (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoking(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoking (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoking(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMethodInvoking : EventArgs -&gt; unit&#xA;override this.OnMethodInvoking : EventArgs -&gt; unit" Usage="callExternalMethodActivity.OnMethodInvoking e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ded90-175"><see cref="T:System.EventArgs" /> 이벤트에 대한 데이터가 들어 있는 <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-175">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></param>
        <summary><span data-ttu-id="ded90-176"><see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />를 설정할 파생 클래스에 대한 후크를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-176">Provides a hook for derived classes to set <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span></span> <span data-ttu-id="ded90-177">이 메서드는 외부 메서드가 실행되기 전에 바로 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-177">This method is called just before the external method is run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ded90-178">다음 예제에서는 `OnMethodInvoking` 메서드의 구현 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-178">The following example demonstrates an implementation of the `OnMethodInvoking` method.</span></span> <span data-ttu-id="ded90-179">이 예제는 CreateTask.cs 파일에 있는 Correlated Local Service SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-179">This example is from the Correlated Local Service SDK sample, from the CreateTask.cs file.</span></span> <span data-ttu-id="ded90-180">자세한 내용은 [상관 관계가 지정 된 로컬 서비스 샘플](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-180">For more information, see [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#207](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#207)]
 [!code-vb[wf_samples#207](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#207)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-181">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-181">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded90-182">외부 메서드의 형식 매개 변수 목록에 있는 바인딩 가능한 매개 변수의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-182">Gets the collection of bindable parameters as found in the external method's formal parameter list.</span></span></summary>
        <value><span data-ttu-id="ded90-183">바인딩할 매개 변수의 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-183">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ded90-184">다음 예제에서는 매개 변수 바인딩을 매개 변수 바인딩 컬렉션에 추가하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-184">The following example shows how to add a parameter binding to the parameter bindings collection.</span></span> <span data-ttu-id="ded90-185">이 예제는 VotingServiceWorkflow.designer.cs 파일에 있는 Host Communication SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-185">This example is from the Host Communication SDK sample, from the VotingServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="ded90-186">자세한 내용은 [Host Communication 샘플](https://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f)합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-186">For more information, see [Host Communication Sample](https://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).</span></span>  
  
 [!code-csharp[WF_Samples#301](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#301)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-187">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-187">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterBindingsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ParameterBindingsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParameterBindingsProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded90-188"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성을 대상으로 하는 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-188">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="ded90-189">CallExternalMethod 활동 사용</span><span class="sxs-lookup"><span data-stu-id="ded90-189">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="ded90-190">디자인 타임 서비스가 필요할 때 액세스할 수 있도록 <see cref="T:System.IServiceProvider" />를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-190">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="ded90-191">속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-191">The name of the property.</span></span></param>
        <summary><span data-ttu-id="ded90-192">지정된 속성의 액세스 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-192">Returns the access type for the specified property.</span></span></summary>
        <returns><span data-ttu-id="ded90-193">속성의 액세스 수준을 나타내는 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-193">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denotes the access level of the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded90-194">속성이 서로 올바르게 바인딩되어 있는지 여부를 검사하기 위해 컴파일 시 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-194">Used at compile time to validate whether the properties are correctly bound to one another.</span></span> <span data-ttu-id="ded90-195">이 인터페이스가 없는 경우 이 정보는 속성 getter/setter에서 직접 유추됩니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-195">Without this interface this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="ded90-196">디자인 타임 서비스가 필요할 때 액세스할 수 있도록 <see cref="T:System.IServiceProvider" />를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-196">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="ded90-197">속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-197">The name of the property.</span></span></param>
        <summary><span data-ttu-id="ded90-198">지정된 속성의 <see cref="T:System.Type" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-198">Returns the <see cref="T:System.Type" /> of the specified property.</span></span></summary>
        <returns><span data-ttu-id="ded90-199">이름이 <paramref name="propertyName" /> 매개 변수로 전달되는 속성의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-199">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded90-200">속성이 서로 올바르게 바인딩되어 있는지 여부를 검사하기 위해 컴파일 시 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ded90-200">Used at compile time to validate whether the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>