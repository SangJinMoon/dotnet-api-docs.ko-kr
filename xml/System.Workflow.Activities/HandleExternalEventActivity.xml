<Type Name="HandleExternalEventActivity" FullName="System.Workflow.Activities.HandleExternalEventActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c2ebb70c26b4d2756a9ab4c302fcea173eed5d4" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53296386" /></Metadata><TypeSignature Language="C#" Value="public class HandleExternalEventActivity : System.Workflow.ComponentModel.Activity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HandleExternalEventActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.Activities.IEventActivity, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt;, class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.HandleExternalEventActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class HandleExternalEventActivity&#xA;Inherits Activity&#xA;Implements IActivityEventListener(Of QueueEventArgs), IDynamicPropertyTypeProvider, IEventActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class HandleExternalEventActivity : System::Workflow::ComponentModel::Activity, System::Workflow::Activities::IEventActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <TypeSignature Language="F#" Value="type HandleExternalEventActivity = class&#xA;    inherit Activity&#xA;    interface IEventActivity&#xA;    interface IActivityEventListener&lt;QueueEventArgs&gt;&#xA;    interface IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Activities.IEventActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Invoked")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.HandleExternalEventActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.HandleExternalEventActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dcc1f-101">로컬 서비스에서 발생한 이벤트를 처리하는 데 사용되는 워크플로 통신 활동을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-101">Defines a workflow communication activity that is used to handle an event that is raised by a local service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="dcc1f-102">로컬 서비스는 로컬 서비스 인터페이스(<xref:System.Workflow.Activities.ExternalDataExchangeAttribute>로 표시된 인터페이스)를 구현하는 클래스이며 <xref:System.Workflow.Activities.ExternalDataExchangeService>에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-102">A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span></span>  
  
 <span data-ttu-id="dcc1f-103"><xref:System.Workflow.Activities.HandleExternalEventActivity>에서는 <xref:System.Workflow.Activities.ExternalDataExchangeService> 서비스가 <xref:System.Workflow.Activities.ExternalDataEventArgs>에서 파생된 이벤트 데이터로 이벤트를 발생시키면 데이터를 받습니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-103">The <xref:System.Workflow.Activities.HandleExternalEventActivity> receives data when the <xref:System.Workflow.Activities.ExternalDataExchangeService> service raises an event with event data derived from <xref:System.Workflow.Activities.ExternalDataEventArgs>.</span></span>  
  
 <span data-ttu-id="dcc1f-104"><xref:System.Workflow.Activities.HandleExternalEventActivity>는 차단 활동입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-104">The <xref:System.Workflow.Activities.HandleExternalEventActivity> is a blocking activity.</span></span>  
  
 <span data-ttu-id="dcc1f-105"><xref:System.Workflow.Activities.HandleExternalEventActivity>에서 파생되는 클래스는 <xref:System.Workflow.ComponentModel.IActivityEventListener%601> 인터페이스를 구현하지 않아야 합니다. 그렇지 않으면 파생 클래스가 올바로 실행되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-105">Classes that derive from <xref:System.Workflow.Activities.HandleExternalEventActivity> should not implement the <xref:System.Workflow.ComponentModel.IActivityEventListener%601> interface because the derived class does not execute correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc1f-106">다음 코드 예제에서는 <xref:System.Workflow.Activities.HandleExternalEventActivity> 클래스에 대한 값을 만들고 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-106">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="dcc1f-107">이 코드 예제는 DocumentApprovalWorkflow.cs 파일에 있는 RaiseEventToLoadWorkflow SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-107">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="dcc1f-108">자세한 내용은 [부하에 이벤트를 발생 시킬 워크플로](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80)합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-108">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-109">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-109">Using the HandleExternalEvent Activity</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcc1f-110"><see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-110">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class.</span></span></summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-111">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-111">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleExternalEventActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleExternalEventActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcc1f-112"><see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-112">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dcc1f-113">다음 코드 예제에서는 <xref:System.Workflow.Activities.HandleExternalEventActivity> 클래스에 대한 값을 만들고 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-113">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span> <span data-ttu-id="dcc1f-114">이 코드 예제는 DocumentApprovalWorkflow.cs 파일에 있는 RaiseEventToLoadWorkflow SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-114">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="dcc1f-115">자세한 내용은 [부하에 이벤트를 발생 시킬 워크플로](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80)합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-115">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-116">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-116">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleExternalEventActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleExternalEventActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.HandleExternalEventActivity : string -&gt; System.Workflow.Activities.HandleExternalEventActivity" Usage="new System.Workflow.Activities.HandleExternalEventActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dcc1f-117">활동의 사용자 정의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-117">The user-defined name of the activity.</span></span></param>
        <summary><span data-ttu-id="dcc1f-118">활동 이름을 사용하여 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-118">Initializes a new instance of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> class using the name of the activity.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-119">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-119">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Cancel : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="handleExternalEventActivity.Cancel executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="dcc1f-120"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />의 실행 환경을 나타내는 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-120">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="dcc1f-121">이벤트 처리를 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-121">Cancels the handling of the event.</span></span></summary>
        <returns><span data-ttu-id="dcc1f-122">요청한 작업 끝에 있는 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />의 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-122">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> at the end of the requested operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-123">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-123">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CorrelationToken">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.CorrelationToken CorrelationToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CorrelationToken As CorrelationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Workflow::Runtime::CorrelationToken ^ CorrelationToken { System::Workflow::Runtime::CorrelationToken ^ get(); void set(System::Workflow::Runtime::CorrelationToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationToken : System.Workflow.Runtime.CorrelationToken with get, set" Usage="System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.CorrelationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-124"><see cref="T:System.Workflow.Runtime.CorrelationToken" />에 바인딩을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-124">Gets or sets the binding to a <see cref="T:System.Workflow.Runtime.CorrelationToken" />.</span></span></summary>
        <value><span data-ttu-id="dcc1f-125">이 속성은 이벤트의 페이로드에 따라 <see cref="T:System.Workflow.Activities.IEventActivity" />에서 상속한 올바른 활동에 이벤트를 상호 연결하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-125">This property is used to correlate an event to the correct <see cref="T:System.Workflow.Activities.IEventActivity" />-inherited activity based on the payload of the event.</span></span> <span data-ttu-id="dcc1f-126">예를 들어 단일 워크플로 인스턴스가 같은 이벤트의 여러 인스턴스를 동시에 수신 대기하는 경우 <see langword="CorrelationToken" /> 속성은 해당 워크플로 인스턴스의 적절한 활동으로 이벤트를 라우트하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-126">For example, when a single workflow instance is listening for multiple instances of the same event at the same time, the <see langword="CorrelationToken" /> property is used to route the event to the proper activity in that workflow instance.</span></span>  
  
<span data-ttu-id="dcc1f-127">이러한 상관 관계를 올바른 워크플로 인스턴스와 이벤트의 상호 연결과 혼동해서는 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-127">This correlation should not be confused with correlating an event to the correct workflow instance.</span></span> <span data-ttu-id="dcc1f-128">올바른 워크플로 인스턴스의 상관 관계는 이벤트를 명시적 워크플로 인스턴스로 보내고 올바른 워크플로 인스턴스를 제대로 식별하도록 <see cref="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" /> 속성을 사용하여 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-128">The correlation to the correct workflow instance is done by sending the event to an explicit workflow instance and using the <see cref="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" /> property to properly identify the correct workflow instance.</span></span>  
  
<span data-ttu-id="dcc1f-129">상관 관계의 예에 대 한 참조를 [로컬 서비스 샘플 상관 관계가 지정 된](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-129">For an example of correlation, see the [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dcc1f-130">다음 예제에서는 `CorrelationToken`의 `HandleExternalEventActivity` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-130">The following example shows how to access the `CorrelationToken` property of a `HandleExternalEventActivity`.</span></span> <span data-ttu-id="dcc1f-131">이 예제는 CorrelatedLocalServiceWorkflow.designer.cs 파일에 있는 Correlated Local Service SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-131">This example is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="dcc1f-132">자세한 내용은 [상관 관계가 지정 된 로컬 서비스 샘플](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-132">For more information, see [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[Wf_samples#198](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#198)]
 [!code-vb[Wf_samples#198](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#198)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-133">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-133">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CorrelationTokenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CorrelationTokenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CorrelationTokenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CorrelationTokenProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-134"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성을 대상으로 하는 <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-134">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-135">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-135">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public virtual string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EventName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EventName : string with get, set" Usage="System.Workflow.Activities.HandleExternalEventActivity.EventName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-136">발생한 이벤트의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-136">Gets the name of the raised event.</span></span> <span data-ttu-id="dcc1f-137">이 속성을 설정해야 로컬 통신이 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-137">This property must be set before local communication can occur.</span></span></summary>
        <value><span data-ttu-id="dcc1f-138">발생한 이벤트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-138">The name of the raised event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dcc1f-139">다음 코드 예제에서는 <xref:System.Workflow.Activities.HandleExternalEventActivity> 클래스에 대한 값을 만들고 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-139">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="dcc1f-140">이 코드 예제는 DocumentApprovalWorkflow.cs 파일에 있는 RaiseEventToLoadWorkflow SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-140">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="dcc1f-141">자세한 내용은 [부하에 이벤트를 발생 시킬 워크플로](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80)합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-141">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-142">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-142">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EventNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty EventNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty EventNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EventNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ EventNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EventNameProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-143"><see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />로 표시된 인터페이스에 정의된 이벤트의 이름에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-143">Corresponds to the name of an event that is defined in an interface that was marked with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-144">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-144">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="handleExternalEventActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="dcc1f-145"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />와 연결된 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-145">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> associated with the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span></span></param>
        <summary><span data-ttu-id="dcc1f-146"><see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />와 연결된 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />를 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-146">Tries to run the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> associated with the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span></span></summary>
        <returns><span data-ttu-id="dcc1f-147">요청한 작업 끝에 있는 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />의 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-147">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> at the end of the requested operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-148">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-148">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="override this.HandleFault : System.Workflow.ComponentModel.ActivityExecutionContext * Exception -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="handleExternalEventActivity.HandleFault (executionContext, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="dcc1f-149">이 인스턴스에 대한 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-149">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this instance.</span></span></param>
        <param name="exception"><span data-ttu-id="dcc1f-150">이 오류를 발생시킨 <see cref="T:System.Exception" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-150">The <see cref="T:System.Exception" /> that caused this fault.</span></span></param>
        <summary><span data-ttu-id="dcc1f-151">이 인스턴스의 실행 컨텍스트 내에서 예외가 발생할 때 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-151">Called when an exception is raised within the context of the execution of this instance.</span></span></summary>
        <returns><span data-ttu-id="dcc1f-152">이 인스턴스를 취소할 때 발생하는 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-152">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> that results from an attempt to cancel this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcc1f-153"><paramref name="executionContext" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="dcc1f-153"><paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>

<span data-ttu-id="dcc1f-154">또는</span><span class="sxs-lookup"><span data-stu-id="dcc1f-154">-or-</span></span>

<span data-ttu-id="dcc1f-155"><paramref name="exception" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="dcc1f-155"><paramref name="exception" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override sealed void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Initialize : IServiceProvider -&gt; unit" Usage="handleExternalEventActivity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="dcc1f-156">클래스에 대해 사용자 지정 지원을 제공하는 <see cref="T:System.IServiceProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-156">The <see cref="T:System.IServiceProvider" /> that provides custom support to the class.</span></span></param>
        <summary><span data-ttu-id="dcc1f-157">서비스 공급자로 이벤트를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-157">Initializes the event with the service provider.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcc1f-158"><paramref name="provider" />가 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우, 서비스 제공자 유형이 null 참조(<see langword="Nothing" />)인 경우 또는 서비스 제공자에 대한 프록시가 null 참조(<see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="dcc1f-158"><paramref name="provider" /> is a null reference (<see langword="Nothing" /> in Visual Basic), the type of the service provider is a null reference (<see langword="Nothing" />), or the proxy for the service provider is a null reference (<see langword="Nothing" />).</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-159">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-159">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="handleExternalEventActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcc1f-160">종속성 속성에 대한 초기화를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-160">Performs initialization on dependency properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc1f-161">이 메서드는 <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A> 속성을 초기화하고, <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> 및 <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> 속성이 설정되었는지 확인하고, <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> 속성에서 참조되는 이벤트를 <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> 속성에서 참조되는 인터페이스에서 찾을 수 있는지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-161">This method initializes the <xref:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.EventName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public virtual Type InterfaceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ InterfaceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type with get, set" Usage="System.Workflow.Activities.HandleExternalEventActivity.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-162">이벤트를 처리하는 로컬 서비스의 <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> 특성이 지정된 인터페이스 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-162">Gets or sets the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> attributed interface type of the local service whose event is handled.</span></span> <span data-ttu-id="dcc1f-163">이 속성을 설정해야 로컬 통신이 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-163">This property must be set before local communication can occur.</span></span></summary>
        <value><span data-ttu-id="dcc1f-164">이벤트를 처리하는 서비스의 인터페이스 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-164">The interface type of the local service whose event is handled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dcc1f-165">다음 코드 예제에서는 <xref:System.Workflow.Activities.HandleExternalEventActivity> 클래스에 대한 값을 만들고 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-165">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="dcc1f-166">이 코드 예제는 DocumentApprovalWorkflow.cs 파일에 있는 RaiseEventToLoadWorkflow SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-166">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="dcc1f-167">자세한 내용은 [부하에 이벤트를 발생 시킬 워크플로](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80)합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-167">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-168">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-168">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InterfaceTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InterfaceTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InterfaceTypeProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-169"><see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />로 표시된 인터페이스의 이름에 해당합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-169">Corresponds to the name of the interface that was marked with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-170">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-170">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Invoked">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt; Invoked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.ExternalDataEventArgs&gt; Invoked" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Invoked As EventHandler(Of ExternalDataEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::ExternalDataEventArgs ^&gt; ^ Invoked;" />
      <MemberSignature Language="F#" Value="member this.Invoked : EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt; " Usage="member this.Invoked : System.EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.ExternalDataEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-171">외부 이벤트를 받을 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-171">Occurs when the external event is received.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dcc1f-172">다음 코드 예제에서는 <xref:System.Workflow.Activities.HandleExternalEventActivity> 클래스에 대한 값을 만들고 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-172">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="dcc1f-173">이 코드 예제는 DocumentApprovalWorkflow.cs 파일에 있는 RaiseEventToLoadWorkflow SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-173">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="dcc1f-174">자세한 내용은 [부하에 이벤트를 발생 시킬 워크플로](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80)합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-174">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-175">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-175">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InvokedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InvokedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InvokedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvokedEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InvokedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvokedEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-176">활동이 로컬 서비스에서 예상된 이벤트를 받으면 실행되는 이벤트 대리자를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-176">Defines an event delegate that is executed after the activity receives the expected event from the local service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-177">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-177">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.OnClosed : IServiceProvider -&gt; unit" Usage="handleExternalEventActivity.OnClosed provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="dcc1f-178">서비스를 제공하는 <see cref="T:System.IServiceProvider" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-178">The <see cref="T:System.IServiceProvider" /> that provides the service.</span></span></param>
        <summary><span data-ttu-id="dcc1f-179">활동이 <see langword="Closed" /> 상태로 전환되는 과정의 일부로 워크플로 런타임에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-179">Called by the workflow runtime as part of the activity's transition to the <see langword="Closed" /> state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc1f-180">이 메서드는 실행 중에 사용된 리소스를 정리할 수 있는 기회를 활동에 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-180">This method provides the activity with an opportunity to clean up resources utilized during its execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInvoked">
      <MemberSignature Language="C#" Value="protected virtual void OnInvoked (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInvoked(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInvoked (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInvoked(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInvoked : EventArgs -&gt; unit&#xA;override this.OnInvoked : EventArgs -&gt; unit" Usage="handleExternalEventActivity.OnInvoked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dcc1f-181">방금 받은 외부 이벤트에서 받은 <see cref="T:System.EventArgs" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-181">The <see cref="T:System.EventArgs" /> that are received from the external event that was just received.</span></span></param>
        <summary><span data-ttu-id="dcc1f-182">활동이 종료되기 전에 파생 클래스에서 인바운드 <see cref="T:System.EventArgs" />를 처리할 수 있도록 외부 이벤트를 받으면 바로 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-182">Called just after the external event is received to allow derived classes to process the inbound <see cref="T:System.EventArgs" /> before the activity closes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc1f-183">파생 클래스에서 <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A> 메서드는 파생 클래스 활동의 public 속성 값을 설정하기 위해 받은 <xref:System.EventArgs>에서 멤버를 추출하기 위해 가장 일반적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-183">The most common use of the <xref:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked%2A> method in derived classes is to extract members from the received <xref:System.EventArgs> to set the values of the derived-classed activity's public properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc1f-184">다음 예제에서는 `OnInvoked` 메서드의 구현을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-184">The following example shows an implementation of the `OnInvoked` method.</span></span> <span data-ttu-id="dcc1f-185">이 예제는 TaskCompleted.cs 파일에 있는 Correlated Local Service SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-185">This example is from the Correlated Local Service SDK sample, from the TaskCompleted.cs file.</span></span> <span data-ttu-id="dcc1f-186">자세한 내용은 [상관 관계가 지정 된 로컬 서비스 샘플](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-186">For more information, see [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[Wf_samples#223](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#223)]
 [!code-vb[Wf_samples#223](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#223)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-187">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-187">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-188">매개 변수 바인딩의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-188">Gets the collection of parameter bindings.</span></span></summary>
        <value><span data-ttu-id="dcc1f-189">매개 변수 바인딩의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-189">The collection of parameter bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dcc1f-190">다음 예제에서는 `ParameterBindings` 속성에 액세스하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-190">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="dcc1f-191">이 예제는 SampleWorkflow.designer.cs 파일에 있는 Ordering State Machine SDK 샘플에 포함되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-191">This example is from the Ordering State Machine SDK sample, from the SampleWorkflow.designer.cs file.</span></span>  <span data-ttu-id="dcc1f-192">자세한 내용은 [Ordering State Machine 샘플](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-192">For more information, see [Ordering State Machine Sample](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[wf_samples#125](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#125)]
 [!code-vb[wf_samples#125](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#125)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-193">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-193">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterBindingsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ParameterBindingsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParameterBindingsProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-194"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 속성을 대상으로 하는 <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" />를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-194">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-195">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-195">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Roles">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.WorkflowRoleCollection Roles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.WorkflowRoleCollection Roles" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.Roles" />
      <MemberSignature Language="VB.NET" Value="Public Property Roles As WorkflowRoleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::WorkflowRoleCollection ^ Roles { System::Workflow::Activities::WorkflowRoleCollection ^ get(); void set(System::Workflow::Activities::WorkflowRoleCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Roles : System.Workflow.Activities.WorkflowRoleCollection with get, set" Usage="System.Workflow.Activities.HandleExternalEventActivity.Roles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.BindUITypeEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.WorkflowRoleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-196">워크플로 역할 컬렉션에 대한 참조를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-196">Gets or sets a reference to a workflow role collection.</span></span></summary>
        <value><span data-ttu-id="dcc1f-197">워크플로 역할의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-197">A collection of a workflow role.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc1f-198"><xref:System.Workflow.Activities.WorkflowRoleCollection>은 <xref:System.Workflow.Activities.HandleExternalEventActivity> 활동을 통해 워크플로 인스턴스에 메시지를 보낼 수 있는 사용자 집합을 제한합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-198">The <xref:System.Workflow.Activities.WorkflowRoleCollection> limits the set of users who can send messages to a workflow instance through a <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcc1f-199">다음 코드 예제에서는 <xref:System.Workflow.Activities.HandleExternalEventActivity> 클래스에 대한 값을 만들고 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-199">The following code example shows how to create and set values for the <xref:System.Workflow.Activities.HandleExternalEventActivity> class.</span></span>  <span data-ttu-id="dcc1f-200">이 코드 예제는 DocumentApprovalWorkflow.cs 파일에 있는 RaiseEventToLoadWorkflow SDK 샘플의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-200">This code example is part of the RaiseEventToLoadWorkflow SDK sample from the DocumentApprovalWorkflow.cs file.</span></span> <span data-ttu-id="dcc1f-201">자세한 내용은 [부하에 이벤트를 발생 시킬 워크플로](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80)합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-201">For more information, see [Raise Event To Load Workflow](https://msdn.microsoft.com/library/71330ada-adcd-42a9-8b38-468d8a0cfb80).</span></span>  
  
 [!code-csharp[wf_samples#160](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#160)]
 [!code-vb[wf_samples#160](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-202">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-202">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RolesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty RolesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty RolesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RolesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ RolesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RolesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.HandleExternalEventActivity.RolesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-203">호스트에서 이 활동으로 메시지를 보낼 수 있는 유효한 사용자 역할을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-203">Identifies the valid user roles that are allowed to send messages from the host to this activity.</span></span> <span data-ttu-id="dcc1f-204">지원되는 두 가지 역할 유형은 Active Directory와 ASP.NET입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-204">The two types of supported roles are Active Directory and ASP.NET.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-205">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-205">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.QueueName">
      <MemberSignature Language="C#" Value="IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property QueueName As IComparable Implements IEventActivity.QueueName" />
      <MemberSignature Language="C++ CLI" Value="property IComparable ^ System::Workflow::Activities::IEventActivity::QueueName { IComparable ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.Activities.IEventActivity.QueueName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcc1f-206">이 활동이 데이터 도착을 기다리는 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-206">Gets the name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span></span></summary>
        <value><span data-ttu-id="dcc1f-207">이 활동이 데이터 도착을 기다리는 <see cref="T:System.Workflow.Runtime.WorkflowQueue" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-207">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Subscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Subscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Subscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Subscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Subscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Subscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="dcc1f-208"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />의 실행 환경을 나타내는 <see cref="T:System.Workflow.ComponentModel.Activity" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-208">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="dcc1f-209">부모 이벤트에 대한 <see cref="T:System.EventHandler" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-209">The <see cref="T:System.EventHandler" /> for the parent event.</span></span></param>
        <summary><span data-ttu-id="dcc1f-210">이벤트에 대한 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 활동의 구독을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-210">Creates the subscription of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> activity to an event.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-211">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-211">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Unsubscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Unsubscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Unsubscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Unsubscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Unsubscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Unsubscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="dcc1f-212">활동의 실행 환경을 나타내는 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-212">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the activity.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="dcc1f-213">부모 이벤트에 대한 <see cref="T:System.EventHandler" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-213">The <see cref="T:System.EventHandler" /> for the parent event.</span></span></param>
        <summary><span data-ttu-id="dcc1f-214">이벤트에 대한 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 활동의 구독을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-214">Cancels the subscription of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> activity to an event.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734592(v=vs.90)"><span data-ttu-id="dcc1f-215">HandleExternalEvent 활동 사용</span><span class="sxs-lookup"><span data-stu-id="dcc1f-215">Using the HandleExternalEvent Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;QueueEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.QueueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#QueueEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As QueueEventArgs) Implements IActivityEventListener(Of QueueEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::QueueEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;::OnEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.QueueEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="dcc1f-216">이벤트를 발생시킨 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-216">The object that raised the event.</span></span></param>
        <param name="e"><span data-ttu-id="dcc1f-217">이전에 입력된 이벤트 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-217">The previously typed event arguments.</span></span></param>
        <summary><span data-ttu-id="dcc1f-218">구독 대상 이벤트가 발생할 때의 처리 절차를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-218">Defines the processing procedure when the subscribed-to event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="dcc1f-219">디자인 타임 서비스가 필요할 때 액세스할 수 있도록 <see cref="T:System.IServiceProvider" />를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-219">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="dcc1f-220">속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-220">The name of the property.</span></span></param>
        <summary><span data-ttu-id="dcc1f-221">지정된 속성의 액세스 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-221">Returns the access type for the specified property.</span></span></summary>
        <returns><span data-ttu-id="dcc1f-222">속성의 액세스 수준을 나타내는 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-222">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denote the access level of the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc1f-223">속성이 서로 올바르게 바인딩되어 있는지 여부를 검사하기 위해 컴파일 시 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-223">Used at compile time to validate whether the properties are correctly bound to one other.</span></span> <span data-ttu-id="dcc1f-224">이 인터페이스가 없는 경우 이 정보는 속성 getter/setter에서 직접 유추됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-224">Without this interface, this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="dcc1f-225">디자인 타임 서비스가 필요할 때 액세스할 수 있도록 <see cref="T:System.IServiceProvider" />를 구현하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-225">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="dcc1f-226">속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-226">The name of the property.</span></span></param>
        <summary><span data-ttu-id="dcc1f-227">지정된 속성의 <see cref="T:System.Type" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-227">Returns the <see cref="T:System.Type" /> of the specified property.</span></span></summary>
        <returns><span data-ttu-id="dcc1f-228">이름이 <paramref name="propertyName" /> 매개 변수로 전달되는 속성의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-228">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcc1f-229">속성이 서로 올바르게 바인딩되어 있는지 여부를 검사하기 위해 컴파일 시 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcc1f-229">Used at compile time to validate whether the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>