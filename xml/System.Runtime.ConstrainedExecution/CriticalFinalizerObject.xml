<Type Name="CriticalFinalizerObject" FullName="System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f1d2facb08d43ad654cb2b085fefa826d0c99cd7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CriticalFinalizerObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CriticalFinalizerObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CriticalFinalizerObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CriticalFinalizerObject abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1f55b-101">파생 클래스의 모든 종료 코드가 결정적인 것으로 표시되도록 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f55b-101">Ensures that all finalization code in derived classes is marked as critical.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f55b-102">클래스에서 파생 되는 <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> 클래스 제약이 있는 실행 영역 (CER)로 암시적으로 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-102">Classes deriving from the <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> class are implicitly treated as a constrained execution region (CER).</span></span>  <span data-ttu-id="1f55b-103">이 코드에만 강력한 안정성 계약을 사용 하 여 코드를 호출 하면 종료 자가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-103">This requires code in the finalizer to only call code with a strong reliability contract.</span></span> <span data-ttu-id="1f55b-104">Cer에 대 한 자세한 내용은 참조는 <xref:System.Runtime.ConstrainedExecution> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-104">For more information about CERs, see the <xref:System.Runtime.ConstrainedExecution> namespace.</span></span>  
  
 <span data-ttu-id="1f55b-105">파생 된 클래스에는 <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> 모든 중요 한 종료 코드 지정 것을 수 있는 기회를, 종료자 상황 에서도 CER에 대 한 규칙을 따릅니다. 제공 된 클래스, 공용 언어 런타임 (CLR) 보장 있는 CLR 강제로 응용 프로그램 도메인을 언로드합니다 또는 스레드를 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-105">In classes derived from the <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> class, the common language runtime (CLR) guarantees that all critical finalization code will be given the opportunity to execute, provided the finalizer follows the rules for a CER, even in situations where the CLR forcibly unloads an application domain or aborts a thread.</span></span> <span data-ttu-id="1f55b-106">종료자 CER에 대 한 규칙을 위반 하면 것 하지 성공적으로 실행 될 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-106">If a finalizer violates the rules for a CER, it might not successfully execute.</span></span> <span data-ttu-id="1f55b-107">또한 CLR와 중요 한 종료자 간에 약한 순서를 설정: 하지 동시에 가비지 수집에서 회수 된 개체에 대해 이전에 중요 한 종료 자가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-107">In addition, the CLR establishes a weak ordering among normal and critical finalizers: for objects reclaimed by garbage collection at the same time, all the noncritical finalizers are called before any of the critical finalizers.</span></span> <span data-ttu-id="1f55b-108">예를 들어와 같은 클래스 <xref:System.IO.FileStream>의 데이터가 들어 있는 <xref:System.Runtime.InteropServices.SafeHandle> 클래스에서 파생 된 <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>, 버퍼링 된 기존 데이터를 플러시할 수 표준 종료자를 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-108">For example, a class such as <xref:System.IO.FileStream>, which holds data in the <xref:System.Runtime.InteropServices.SafeHandle> class that is derived from <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject>, can run a standard finalizer to flush out existing buffered data.</span></span>  
  
 <span data-ttu-id="1f55b-109">대부분의 경우에서 않아도에서 파생 되는 클래스를 작성 하는 <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-109">In most cases, you do not need to write classes that derive from the <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> class.</span></span> <span data-ttu-id="1f55b-110">.NET Framework 클래스 라이브러리는 두 개의 클래스를 제공 <xref:System.Runtime.InteropServices.SafeHandle> 및 <xref:System.Runtime.InteropServices.CriticalHandle>, 핸들 리소스에 대 한 중요 한 종료 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-110">The .NET Framework class library provides two classes, <xref:System.Runtime.InteropServices.SafeHandle> and <xref:System.Runtime.InteropServices.CriticalHandle>, that provide critical finalization functionality for handle resources.</span></span> <span data-ttu-id="1f55b-111">.NET Framework에서 파생 된 미리 작성 된 클래스의 집합을 제공 하는 또한는 <xref:System.Runtime.InteropServices.SafeHandle> 집합과이 집합에는 <xref:Microsoft.Win32.SafeHandles> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-111">Furthermore, the .NET Framework provides a set of prewritten classes derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, and this set is located in the <xref:Microsoft.Win32.SafeHandles> namespace.</span></span> <span data-ttu-id="1f55b-112">이러한 클래스는 파일 및 운영 체제 핸들을 지원 하기 위한 공통 기능을 제공 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-112">These classes are designed to provide common functionality for supporting file and operating system handles.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f55b-113">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> 표준 입력 및 출력 스트림에 대 한 중요 한 종료를 제공 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-113">The following code example shows the use of the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class to provide critical finalization for the standard input and output streams.</span></span> <span data-ttu-id="1f55b-114"><xref:Microsoft.Win32.SafeHandles.SafeFileHandle>에서 파생 된는 <xref:System.Runtime.InteropServices.SafeHandle> 클래스, 파일 스트림에 전달 되는 <xref:System.IO.FileStream> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-114">The <xref:Microsoft.Win32.SafeHandles.SafeFileHandle>, derived from the <xref:System.Runtime.InteropServices.SafeHandle> class, is passed to the file stream in the <xref:System.IO.FileStream> constructor.</span></span>  
  
 [!code-csharp[SafeHandle.SafeFileHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/SafeHandle.SafeFileHandle/CS/program.cs#1)]
 [!code-vb[SafeHandle.SafeFileHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SafeHandle.SafeFileHandle/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="1f55b-115">관리 되지 않는 코드를 호출할 수 있는 권한입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f55b-115">for permission to call unmanaged code.</span>
      </span>
      <span data-ttu-id="1f55b-116">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f55b-116">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
      </span>
      <span data-ttu-id="1f55b-117">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="1f55b-117">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="1f55b-118">상속자에 대 한 완전 신뢰 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f55b-118">for full trust for inheritors.</span>
      </span>
      <span data-ttu-id="1f55b-119">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f55b-119">This class cannot be used by partially trusted code.</span>
      </span>
    </permission>
    <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
    <altmember cref="N:Microsoft.Win32.SafeHandles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CriticalFinalizerObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CriticalFinalizerObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f55b-120">
            <see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f55b-120">Initializes a new instance of the <see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1f55b-121">관리 되지 않는 코드를 호출할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f55b-121">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="1f55b-122">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f55b-122">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="1f55b-123">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1f55b-123">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="1f55b-124">상속자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f55b-124">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="1f55b-125">이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f55b-125">This class cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CriticalFinalizerObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CriticalFinalizerObject ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f55b-126">
            <see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> 클래스에서 사용하는 리소스를 모두 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f55b-126">Releases all the resources used by the <see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f55b-127">파생 된 모든 형식에 대 한 종료자 <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> 제공할지 기회를 실행 하 고 되지 중단 되며 종료자 올바르게 제약이 있는 실행 영역 (CER)에 대 한 규칙을 따르는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1f55b-127">The finalizer for any types deriving from <xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject> is given the opportunity to execute and will not be aborted, assuming the finalizer correctly follows the rules for a constrained execution region (CER).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>