<Namespace Name="System.Messaging">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eab5ed0569927572b94947f95901b3f05d70f785" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30734697" />
  </Metadata>
  <Docs>
    <summary>
      <span data-ttu-id="fb727-101">
        <see cref="N:System.Messaging" /> 네임스페이스는 네트워크에서 메시지 큐에 연결, 모니터링 및 관리하고 메시지를 보내고 받거나 피크(peek)할 수 있는 클래스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fb727-101">The <see cref="N:System.Messaging" /> namespace provides classes that allow you to connect to, monitor, and administer message queues on the network and send, receive, or peek messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb727-102">멤버는 <xref:System.Messaging.MessageQueue> 읽고 큐에 메시지를 작성 하기 위해 다음 메서드를 포함 하는 클래스:</span><span class="sxs-lookup"><span data-stu-id="fb727-102">Members of the <xref:System.Messaging.MessageQueue> class include the following methods for reading and writing messages to the queue:</span></span>  
  
-   <span data-ttu-id="fb727-103"><xref:System.Messaging.MessageQueue.Send%2A> 메서드를 사용 하면 응용 프로그램을 큐에 메시지를 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-103">The <xref:System.Messaging.MessageQueue.Send%2A> method enables your application to write messages to the queue.</span></span> <span data-ttu-id="fb727-104">메서드의 오버 로드를 사용 하면 사용 하 여 메시지를 보낼 것인지를 지정할 수는 <xref:System.Messaging.Message> (제공 하는 사용자가 전송한 정보에 대 한 제어 정식) 또는 다른 관리 되는 개체를 응용 프로그램 관련 클래스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-104">Overloads of the method enable you to specify whether to send your message using a <xref:System.Messaging.Message> (which provides detailed control over the information you send) or any other managed object, including application-specific classes.</span></span> <span data-ttu-id="fb727-105">메서드는 또한 트랜잭션의 일부로 보내는 메시지를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-105">The method also supports sending messages as part of a transaction.</span></span>  
  
-   <span data-ttu-id="fb727-106"><xref:System.Messaging.MessageQueue.Receive%2A>, <xref:System.Messaging.MessageQueue.ReceiveById%2A>, 및 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A> 메서드는 큐에서 메시지 읽기에 대 한 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-106">The <xref:System.Messaging.MessageQueue.Receive%2A>, <xref:System.Messaging.MessageQueue.ReceiveById%2A>, and <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A> methods provide functionality for reading messages from a queue.</span></span> <span data-ttu-id="fb727-107">마찬가지로 <xref:System.Messaging.MessageQueue.Send%2A> 메서드를 이러한 메서드에 트랜잭션 큐 처리를 지 원하는 오버 로드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-107">Like the <xref:System.Messaging.MessageQueue.Send%2A> method, these methods provide overloads that support transactional queue processing.</span></span> <span data-ttu-id="fb727-108">이러한 메서드는 또한 제한 시간을 오버 로드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-108">These methods also provide overloads with time-out.</span></span>  
  
     <span data-ttu-id="fb727-109">Out 매개 변수는 큐가 비어 있는지를 사용 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-109">Out parameters that enable processing to continue if the queue is empty.</span></span> <span data-ttu-id="fb727-110">이러한 메서드는 일종의 동기 처리를 하기 때문에 있을 때까지 메시지를 제한 시간을 지정 하지 않으면 현재 스레드를 중단 시킬 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-110">Because these methods are examples of synchronous processing, they interrupt the current thread until a message is available, unless you specify a time-out.</span></span>  
  
-   <span data-ttu-id="fb727-111"><xref:System.Messaging.MessageQueue.Peek%2A> 메서드는 <xref:System.Messaging.MessageQueue.Receive%2A>, 하지만 읽을 때 큐에서 제거할 메시지를 발생 하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-111">The <xref:System.Messaging.MessageQueue.Peek%2A> method is similar to <xref:System.Messaging.MessageQueue.Receive%2A>, but it does not cause a message to be removed from the queue when it is read.</span></span> <span data-ttu-id="fb727-112">때문에 <xref:System.Messaging.MessageQueue.Peek%2A> 큐 내용을 바뀌지 않으면 트랜잭션 처리를 지원 하기 위해 오버 로드가 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-112">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not change the queue contents, there are no overloads to support transactional processing.</span></span> <span data-ttu-id="fb727-113">그러나 때문에 <xref:System.Messaging.MessageQueue.Peek%2A>처럼 <xref:System.Messaging.MessageQueue.Receive%2A>, 큐에서 메시지를 동기적으로 읽습니다, 스레드가 무기한 대기 하지 않도록 하기 위해 제한 시간을 지정 메서드의 오버 로드 지원지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-113">However, because <xref:System.Messaging.MessageQueue.Peek%2A>, like <xref:System.Messaging.MessageQueue.Receive%2A>, reads messages synchronously from the queue, overloads of the method do support specifying a time-out in order to prevent the thread from waiting indefinitely.</span></span>  
  
-   <span data-ttu-id="fb727-114"><xref:System.Messaging.MessageQueue.BeginPeek%2A>, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>, <xref:System.Messaging.MessageQueue.BeginReceive%2A>, 및 <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 메서드를 큐에서 메시지를 비동기적으로 읽은 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-114">The <xref:System.Messaging.MessageQueue.BeginPeek%2A>, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>, <xref:System.Messaging.MessageQueue.BeginReceive%2A>, and <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> methods provide ways to asynchronously read messages from the queue.</span></span> <span data-ttu-id="fb727-115">메시지가 큐에 도착할 때까지 대기 하는 동안 현재 스레드를 중단 하지 않는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-115">They do not interrupt the current thread while waiting for a message to arrive in the queue.</span></span>  
  
 <span data-ttu-id="fb727-116">다음 메서드는 <xref:System.Messaging.MessageQueue> 클래스를 지정 된 조건으로 큐 목록을 검색 하 고 특정 큐가 있는지 확인 하는 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-116">The following methods of the <xref:System.Messaging.MessageQueue> class provide functionality for retrieving lists of queues by specified criteria and determining if specific queues exist:</span></span>  
  
-   <span data-ttu-id="fb727-117"><xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> 컴퓨터의 개인 큐를 검색할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-117"><xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> enables the retrieval of the private queues on a computer.</span></span>  
  
-   <span data-ttu-id="fb727-118"><xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29><xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, 및 <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> common criteria로 공개 큐를 검색 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-118"><xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, and <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> provide ways to retrieve public queues by common criteria.</span></span> <span data-ttu-id="fb727-119">오버 로드 <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 다양 한 검색 조건에 따라 큐를 선택 하기 위한도 더 자세하게 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-119">An overload of <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> provides even finer detail for selecting queues based on a number of search criteria.</span></span>  
  
 <span data-ttu-id="fb727-120">다른 방법으로는 <xref:System.Messaging.MessageQueue> 클래스는 다음 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-120">Other methods of the <xref:System.Messaging.MessageQueue> class provide the following functionality:</span></span>  
  
-   <span data-ttu-id="fb727-121">페이지를 만들고 메시지 큐에서 큐를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-121">Creating and deleting Message Queueing queues.</span></span>  
  
-   <span data-ttu-id="fb727-122">메시지 열거자를 사용 하 여 큐에서 메시지를 단계별로 실행 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-122">Using a message enumerator to step through the messages in a queue.</span></span>  
  
-   <span data-ttu-id="fb727-123">큐 열거자를 사용 하 여 시스템에 있는 큐를 반복 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-123">Using a queue enumerator for iterating through the queues on the system.</span></span>  
  
-   <span data-ttu-id="fb727-124">ACL 기준 액세스 권한을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-124">Setting ACL-based access rights.</span></span>  
  
-   <span data-ttu-id="fb727-125">연결 캐시를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-125">Working with the connection cache.</span></span>  
  
 <span data-ttu-id="fb727-126"><xref:System.Messaging.Message> 클래스 상세하게 제어할 수는 큐로 보내는 정보를 제공 하며 큐에서 메시지를 받거나 때 개체가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-126">The <xref:System.Messaging.Message> class provides detailed control over the information you send to a queue, and is the object used when receiving or peeking messages from a queue.</span></span> <span data-ttu-id="fb727-127">메시지 본문의 속성 외에도 <xref:System.Messaging.Message> 승인, 설정, 포맷터 선택, 식별, 인증 및 암호화 정보, 타임 스탬프, 추적, 서버 저널링을 사용 하 여에 대 한 표시가 클래스를 포함 하 고 배달 못 한 편지 큐 및 트랜잭션 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-127">Besides the message body, the properties of the <xref:System.Messaging.Message> class include acknowledgment settings, formatter selection, identification, authentication and encryption information, timestamps, indications about using tracing, server journaling, and dead-letter queues, and transaction data.</span></span>  
  
 <span data-ttu-id="fb727-128"><xref:System.Messaging.MessageQueue> serialize 및 deserialize 보내고 큐에서 받은 메시지 수 있게 해 주는 다음과 같은 세 가지 포맷터와 연결 된 구성 요소:</span><span class="sxs-lookup"><span data-stu-id="fb727-128">The <xref:System.Messaging.MessageQueue> component is associated with the following three formatters, which enable you to serialize and deserialize messages sent and received from queues:</span></span>  
  
-   <span data-ttu-id="fb727-129"><xref:System.Messaging.XmlMessageFormatter> 느슨하게 결합 된 메시징, 독립 된 버전 관리 서버와 클라이언트에서 serialize 된 형식의 활성화를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-129">The <xref:System.Messaging.XmlMessageFormatter> provides loosely coupled messaging, enabling independent versioning of serialized types on the client and server.</span></span>  
  
-   <span data-ttu-id="fb727-130"><xref:System.Messaging.ActiveXMessageFormatter> MSMQ COM 컨트롤와 호환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-130">The <xref:System.Messaging.ActiveXMessageFormatter> is compatible with the MSMQ COM control.</span></span> <span data-ttu-id="fb727-131">컨트롤에서 받을 수 있는 유형을 전송 하 고 컨트롤에서 보낸 형식을 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-131">It allows you to send types that can be received by the control and to receive types that were sent by the control.</span></span>  
  
-   <span data-ttu-id="fb727-132"><xref:System.Messaging.BinaryMessageFormatter> 빠르게 제공는 <xref:System.Messaging.XmlMessageFormatter>, 느슨하게 결합 된 메시징 활용 하지 않고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-132">The <xref:System.Messaging.BinaryMessageFormatter> provides a faster alternative to the <xref:System.Messaging.XmlMessageFormatter>, but without the benefit of loosely coupled messaging.</span></span>  
  
 <span data-ttu-id="fb727-133">다른 클래스는 `Messaging` 네임 스페이스 지원 코드 액세스 및 보안 ACL 기반 필터링 <xref:System.Messaging.Message> 메시지를 보내고 받을 때 트랜잭션을 사용 하 여 및 큐에서 메시지를 읽을 때 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fb727-133">Other classes in the `Messaging` namespace support code-access and ACL-based security, filtering <xref:System.Messaging.Message> properties when reading messages from a queue, and using transactions when sending and receiving messages.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>