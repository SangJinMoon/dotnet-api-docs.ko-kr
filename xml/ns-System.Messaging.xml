<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ns-System.Messaging.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef1864eab5ed0569927572b94947f95901b3f05d70f785.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eab5ed0569927572b94947f95901b3f05d70f785</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;see cref="N:System.Messaging" /&gt;</ph> namespace provides classes that allow you to connect to, monitor, and administer message queues on the network and send, receive, or peek messages.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.Messaging" /&gt;</ph> 네임스페이스는 네트워크에서 메시지 큐에 연결, 모니터링 및 관리하고 메시지를 보내고 받거나 피크(peek)할 수 있는 클래스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Members of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class include the following methods for reading and writing messages to the queue:</source>
          <target state="translated">멤버는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 읽고 큐에 메시지를 작성 하기 위해 다음 메서드를 포함 하는 클래스:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method enables your application to write messages to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> 메서드를 사용 하면 응용 프로그램을 큐에 메시지를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of the method enable you to specify whether to send your message using a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> (which provides detailed control over the information you send) or any other managed object, including application-specific classes.</source>
          <target state="translated">메서드의 오버 로드를 사용 하면 사용 하 여 메시지를 보낼 것인지를 지정할 수는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> (제공 하는 사용자가 전송한 정보에 대 한 제어 정식) 또는 다른 관리 되는 개체를 응용 프로그램 관련 클래스를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method also supports sending messages as part of a transaction.</source>
          <target state="translated">메서드는 또한 트랜잭션의 일부로 보내는 메시지를 지원합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A&gt;</ph> methods provide functionality for reading messages from a queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A&gt;</ph> 메서드는 큐에서 메시지 읽기에 대 한 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Like the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method, these methods provide overloads that support transactional queue processing.</source>
          <target state="translated">마찬가지로 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> 메서드를 이러한 메서드에 트랜잭션 큐 처리를 지 원하는 오버 로드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods also provide overloads with time-out.</source>
          <target state="translated">이러한 메서드는 또한 제한 시간을 오버 로드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Out parameters that enable processing to continue if the queue is empty.</source>
          <target state="translated">Out 매개 변수는 큐가 비어 있는지를 사용 하는 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because these methods are examples of synchronous processing, they interrupt the current thread until a message is available, unless you specify a time-out.</source>
          <target state="translated">이러한 메서드는 일종의 동기 처리를 하기 때문에 있을 때까지 메시지를 제한 시간을 지정 하지 않으면 현재 스레드를 중단 시킬 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method is similar to <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, but it does not cause a message to be removed from the queue when it is read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, 하지만 읽을 때 큐에서 제거할 메시지를 발생 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not change the queue contents, there are no overloads to support transactional processing.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 큐 내용을 바뀌지 않으면 트랜잭션 처리를 지원 하기 위해 오버 로드가 없는 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>, like <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, reads messages synchronously from the queue, overloads of the method do support specifying a time-out in order to prevent the thread from waiting indefinitely.</source>
          <target state="translated">그러나 때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>처럼 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, 큐에서 메시지를 동기적으로 읽습니다, 스레드가 무기한 대기 하지 않도록 하기 위해 제한 시간을 지정 메서드의 오버 로드 지원지 않습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> methods provide ways to asynchronously read messages from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 메서드를 큐에서 메시지를 비동기적으로 읽은 하는 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>They do not interrupt the current thread while waiting for a message to arrive in the queue.</source>
          <target state="translated">메시지가 큐에 도착할 때까지 대기 하는 동안 현재 스레드를 중단 하지 않는 것입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following methods of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class provide functionality for retrieving lists of queues by specified criteria and determining if specific queues exist:</source>
          <target state="translated">다음 메서드는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 클래스를 지정 된 조건으로 큐 목록을 검색 하 고 특정 큐가 있는지 확인 하는 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph> enables the retrieval of the private queues on a computer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph> 컴퓨터의 개인 큐를 검색할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph> provide ways to retrieve public queues by common criteria.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph><ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph> common criteria로 공개 큐를 검색 하는 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>An overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> provides even finer detail for selecting queues based on a number of search criteria.</source>
          <target state="translated">오버 로드 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> 다양 한 검색 조건에 따라 큐를 선택 하기 위한도 더 자세하게 제공 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other methods of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class provide the following functionality:</source>
          <target state="translated">다른 방법으로는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 클래스는 다음 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating and deleting Message Queueing queues.</source>
          <target state="translated">페이지를 만들고 메시지 큐에서 큐를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a message enumerator to step through the messages in a queue.</source>
          <target state="translated">메시지 열거자를 사용 하 여 큐에서 메시지를 단계별로 실행 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a queue enumerator for iterating through the queues on the system.</source>
          <target state="translated">큐 열거자를 사용 하 여 시스템에 있는 큐를 반복 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting ACL-based access rights.</source>
          <target state="translated">ACL 기준 액세스 권한을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Working with the connection cache.</source>
          <target state="translated">연결 캐시를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> class provides detailed control over the information you send to a queue, and is the object used when receiving or peeking messages from a queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> 클래스 상세하게 제어할 수는 큐로 보내는 정보를 제공 하며 큐에서 메시지를 받거나 때 개체가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Besides the message body, the properties of the <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> class include acknowledgment settings, formatter selection, identification, authentication and encryption information, timestamps, indications about using tracing, server journaling, and dead-letter queues, and transaction data.</source>
          <target state="translated">메시지 본문의 속성 외에도 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> 승인, 설정, 포맷터 선택, 식별, 인증 및 암호화 정보, 타임 스탬프, 추적, 서버 저널링을 사용 하 여에 대 한 표시가 클래스를 포함 하 고 배달 못 한 편지 큐 및 트랜잭션 데이터입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> component is associated with the following three formatters, which enable you to serialize and deserialize messages sent and received from queues:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> serialize 및 deserialize 보내고 큐에서 받은 메시지 수 있게 해 주는 다음과 같은 세 가지 포맷터와 연결 된 구성 요소:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> provides loosely coupled messaging, enabling independent versioning of serialized types on the client and server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> 느슨하게 결합 된 메시징, 독립 된 버전 관리 서버와 클라이언트에서 serialize 된 형식의 활성화를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is compatible with the MSMQ COM control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> MSMQ COM 컨트롤와 호환 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>It allows you to send types that can be received by the control and to receive types that were sent by the control.</source>
          <target state="translated">컨트롤에서 받을 수 있는 유형을 전송 하 고 컨트롤에서 보낸 형식을 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> provides a faster alternative to the <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>, but without the benefit of loosely coupled messaging.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> 빠르게 제공는 <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>, 느슨하게 결합 된 메시징 활용 하지 않고 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other classes in the <ph id="ph1">`Messaging`</ph> namespace support code-access and ACL-based security, filtering <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> properties when reading messages from a queue, and using transactions when sending and receiving messages.</source>
          <target state="translated">다른 클래스는 <ph id="ph1">`Messaging`</ph> 네임 스페이스 지원 코드 액세스 및 보안 ACL 기반 필터링 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 메시지를 보내고 받을 때 트랜잭션을 사용 하 여 및 큐에서 메시지를 읽을 때 속성입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>