<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="925c62c41e322e116fd365bf090d9efd2a63835d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36730220" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <TypeSignature Language="F#" Value="type SqlContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> 및 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체에 대한 액세스를 제공하는 호출자 컨텍스트의 추상화를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlContext> 개체는 트리거 컨텍스트 (트리거 내에서 실행 되는 코드)와 파이프 개체 (사용 가능한 경우와 같은 저장된 프로시저에서)를 가져오는 데 사용할 수 있습니다. 가져올 때도 사용 수는 <xref:System.Security.Principal.WindowsIdentity> 통합 인증을 사용 하 여 서버와 클라이언트를 인증 하는 경우에 호출 클라이언트의 Microsoft Windows id를 나타내는 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 새 <xref:Microsoft.SqlServer.Server.SqlDataRecord> 및 해당 <xref:Microsoft.SqlServer.Server.SqlMetaData>합니다. 이 예제에서는 결과 사용 하 여 집합의 시작을 표시 한 다음는 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> 메서드를 사용 하 여 클라이언트에 다시 예제 데이터로 레코드를 보냅니다는 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> 메서드를 사용 하 여 결과의 끝 설정 표시는 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> 메서드.  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호출 코드가 SQL Server 내에서 실행되고 있는지와 컨텍스트 연결에 액세스할 수 있는지 여부를 지정합니다.</summary>
        <value>컨텍스트 연결을 사용할 수 있고 다른 <see cref="T:Microsoft.SqlServer.Server.SqlContext" /> 멤버에 액세스할 수 있으면 <see langword="True" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성이 반환 false, 다른 모든 <xref:Microsoft.SqlServer.Server.SqlContext> 멤버를 throw 한 <xref:System.InvalidOperationException> 사용 하는 경우.  
  
 이 속성이 false를 반환 하는 경우 시도 된 연결 개체를 "컨텍스트 연결 = true" 연결 문자열에는 실패 합니다.  
  
 이 속성은 읽기 전용입니다.  
  
 (공용 언어 런타임 통합을 사용 하 여) SQL Server 내부와 SQL Server 외부 코드의 일부로 실행 될 수 있습니다 하는 경우 데이터 액세스에 대 한 ADO.NET에서는 컨텍스트 연결을 사용할 수 있는지 여부를 확인 하려면이 속성을 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pipe : Microsoft.SqlServer.Server.SqlPipe" Usage="Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호출자가 결과 집합, 메시지 및 명령 실행 결과를 클라이언트에게 다시 보낼 수 있도록 하는 파이프 개체를 가져옵니다.</summary>
        <value>파이프를 사용할 수 있으면 <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />의 인스턴스이고, 사용자 정의 함수에서와 같이 파이프를 사용할 수 없는 컨텍스트에서 호출되면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL Server 외부에서 호출 하는 경우는 <xref:System.NotSupportedException> throw 됩니다.  
  
 이 속성은 읽기 전용입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerContext : Microsoft.SqlServer.Server.SqlTriggerContext" Usage="Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리거를 발생시킨 작업에 대한 정보와 업데이트된 열의 맵을 호출자에 제공하는 데 사용되는 트리거 컨텍스트를 가져옵니다.</summary>
        <value>트리거 컨텍스트를 사용할 수 있으면 <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />의 인스턴스이고, 트리거 호출 외부에서 호출되면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlTriggerContext> 개체 공용 언어 런타임 트리거에서 검색할 수 있습니다.  
  
 경우는 <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> 속성에서 SQL Server, 외부 액세스는 <xref:System.NotSupportedException> throw 됩니다.  
  
 이 속성은 읽기 전용입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호출자의 Microsoft Windows ID입니다.</summary>
        <value>호출자의 Windows ID를 나타내는 <see cref="T:System.Security.Principal.WindowsIdentity" /> 인스턴스이거나, 클라이언트가 SQL Server 인증을 사용하여 인증된 경우 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL Server 내부 공용 언어 런타임 (CLR) 코드는 항상 프로세스 계정의 컨텍스트에서 호출 됩니다. SQL Server 프로세스 id 대신 호출 사용자의 id를 사용 하 여 작업을 수행 하려면 코드에 대 한 필요한 경우 가장 토큰이이 속성을 통해 얻어야 합니다. <xref:System.Security.Principal.WindowsIdentity> 개체를 가져온 후 호출자는 클라이언트 계정을 가장하고 클라이언트를 대신해 작업을 수행할 수 있습니다.  
  
 SQL Server 외부에서 호출 하는 경우는 <xref:System.NotSupportedException> throw 됩니다.  
  
 이 속성에는 `EXTERNAL_ACCESS` 또는 `UNSAFE` 권한으로 표시된 어셈블리만 액세스할 수 있습니다.  
  
 이 속성은 읽기 전용입니다.  
  
   
  
## Examples  
 다음 예제에서는 호출 클라이언트의 Windows id를 가져오고 클라이언트를 가장 하는 방법을 보여 줍니다. "가장 예제" SQL Server 온라인 설명서의 가장을 사용 하는 예제에 대 한 참조는 <xref:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity%2A> 속성입니다.  
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>