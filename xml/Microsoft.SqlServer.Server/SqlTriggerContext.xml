<Type Name="SqlTriggerContext" FullName="Microsoft.SqlServer.Server.SqlTriggerContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="143e9584233a39a7dd01915e9d96960c5e11cf62" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlTriggerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTriggerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlTriggerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTriggerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTriggerContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="61782-101">발생한 트리거에 대한 컨텍스트 정보를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61782-101">Provides contextual information about the trigger that was fired.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61782-102">제공 된 컨텍스트 정보는 업데이트 작업으로 수정 된 열에서 트리거를 발생 시킨 동작의 유형을 포함 하 고 데이터 정의 경우 언어 (DDL) 트리거, EventData 구조 (SQL Server 설명서의 "TRANSACT-SQL 참조" 온라인 참조) 트리거 작업을 설명 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="61782-102">The contextual information provided includes the type of action that caused the trigger to fire, which columns were modified in an UPDATE operation, and, in the case of a data definition language (DDL) trigger, an XML EventData structure (see "Transact-SQL Reference" in SQL Server Books Online) that describes the triggering operation.</span></span>  
  
 <span data-ttu-id="61782-103">인스턴스 <xref:Microsoft.SqlServer.Server.SqlTriggerContext> 에서 사용할 수는 <xref:Microsoft.SqlServer.Server.SqlContext> 클래스를 통해 트리거 내에서 코드가 실행 되는 <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61782-103">An instance of <xref:Microsoft.SqlServer.Server.SqlTriggerContext> is available from the <xref:Microsoft.SqlServer.Server.SqlContext> class, when the code is running inside a trigger through the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61782-104">다음 예제에서는 한 <xref:Microsoft.SqlServer.Server.SqlTriggerContext> 여부를 확인 하는 데 사용 되 고 개체는 <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> 동작이 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="61782-104">The following example shows a <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object being used to determine if an <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> action occurred.</span></span> <span data-ttu-id="61782-105">행에 삽입 된 경우는 `user`의 테이블, 사용자 이름 및 실제 이름이 삽입된 된 행에서 검색 되어 다음에 추가 된 **UserNameAudit** 테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="61782-105">If a row was inserted into the `user`'s table, the user name and real name are retrieved from the inserted row and then added to the **UserNameAudit** table.</span></span>  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61782-106">트리거에 바인딩된 데이터 테이블에 포함된 열의 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61782-106">Gets the number of columns contained by the data table bound to the trigger.</span>
          </span>
          <span data-ttu-id="61782-107">이 속성은 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61782-107">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61782-108">트리거에 바인딩된 데이터 테이블에 포함된 열의 수(정수)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61782-108">The number of columns contained by the data table bound to the trigger, as an integer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61782-109"><xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A> 속성은 최대 서 수를 결정 하는 데 유용 하 <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> 지정 된 트리거 호출을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="61782-109"><xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A> property is useful to determine the maximum ordinal that <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> allows for a given trigger invocation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventData">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlXml EventData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlTypes.SqlXml EventData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.EventData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventData As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlXml ^ EventData { System::Data::SqlTypes::SqlXml ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61782-110">트리거를 발생시킨 작업과 관련된 이벤트 데이터를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61782-110">Gets the event data specific to the action that fired the trigger.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61782-111">자세한 정보를 사용할 수 있는 경우 트리거를 발생시킨 작업과 관련된 이벤트 데이터인 <see cref="T:System.Data.SqlTypes.SqlXml" />이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61782-111">The event data specific to the action that fired the trigger as a <see cref="T:System.Data.SqlTypes.SqlXml" /> if more information is available; <see langword="null" /> otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61782-112">이 정보는 데이터 정의 언어 (DDL) 트리거를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61782-112">This information is available for data definition language (DDL) triggers.</span></span> <span data-ttu-id="61782-113">데이터 조작 언어 (DML) 트리거에 대 한이 속성을 통해 비워진 ´ ù.</span><span class="sxs-lookup"><span data-stu-id="61782-113">No information is available through this property for data manipulation language (DML) triggers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatedColumn">
      <MemberSignature Language="C#" Value="public bool IsUpdatedColumn (int columnOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUpdatedColumn(int32 columnOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpdatedColumn (columnOrdinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpdatedColumn(int columnOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnOrdinal">
          <span data-ttu-id="61782-114">열의 0부터 시작하는 서수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61782-114">The zero-based ordinal of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61782-115">열이 INSERT 또는 UPDATE 문의 영향을 받았으면 <see langword="true" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61782-115">Returns <see langword="true" /> if a column was affected by an INSERT or UPDATE statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61782-116">열이 INSERT 또는 UPDATE 작업의 영향을 받았으면 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61782-116">
              <see langword="true" /> if the column was affected by an INSERT or UPDATE operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61782-117">
            <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> 속성 값이 <see langword="Insert" /> 또는 <see langword="Update" />가 아닌 트리거 컨텍스트에서 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="61782-117">Called in the context of a trigger where the value of the <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> property is not <see langword="Insert" /> or <see langword="Update" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerAction">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.TriggerAction TriggerAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.TriggerAction TriggerAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TriggerAction As TriggerAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::TriggerAction TriggerAction { Microsoft::SqlServer::Server::TriggerAction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.TriggerAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61782-118">트리거를 발생시킨 작업을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61782-118">Indicates what action fired the trigger.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61782-119">트리거를 발생시킨 작업인 <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61782-119">The action that fired the trigger as a <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61782-120">다음 예제에서는 감사 트리거를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61782-120">The following example shows an auditing trigger.</span></span> <span data-ttu-id="61782-121">경우는 <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> 또는 <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> 동작이 발생 한 INSERTED 및 DELETED 테이블에서 영향을 받는 행이 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61782-121">If an <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> or <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> action occurred, the affected rows are retrieved from the INSERTED and DELETED tables.</span></span>  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#2)]
 [!code-vb[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>