<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5cdac326672d175a2dba7e191c1395d8db66b27" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52912600" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>사용한 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> 고 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> 사용자 정의 형식 (UDT) 또는 집계의 serialization 형식을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용한 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> 고 <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> 사용자 정의 형식 (UDT) 또는 집계의 serialization 형식을 나타냅니다.  
  
   
  
## Examples  
 다음 예제는 `UserDefinedType` Point UDT 특성입니다.  UDT가 바이트 정렬 된, "Point" 라는, "Point" 라는 유효성 검사 메서드 및 네이티브 직렬화 형식을 사용 합니다.  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <see langword="Native" /> 직렬화 형식은 UDT의 효율적인 표현을 디스크에 저장 하려면 SQL Server를 사용 하도록 설정 하는 매우 간단한 알고리즘을 사용 합니다. 형식에 대 한 표시 <see langword="Native" /> serialization 멤버로 값 형식 (구조체의 Microsoft Visual C#) 및 Microsoft Visual Basic.NET의 구조를 하나만 사용할 수 있습니다. 참조 형식의 멤버 (예: 클래스 Visual C# 및 Visual Basic) 또는 프레임 워크의 기존 사용자 정의 하거나 (같은 <see cref="T:System.String" />)를 사용할 수 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 형식에 대 한 요구 사항은 다음과 같습니다.  
  
-   `StructLayout.LayoutKindSequential` 특성 집계에 적용 되어야 합니다 또는 UDT 구조체가 아니라 클래스에 정의 된 경우. 이 데이터 필드의 실제 레이아웃을 제어 하며 멤버를 순서 대로 순차적으로 배치 하는 데 사용 됩니다. SQL Server는 여러 필드를 사용 하 여 Udt에 대 한 필드 순서를 결정 하려면이 특성을 사용 합니다.  
  
-   형식 멤버를 하나 이상 있어야 합니다. (serialize 된 값의 크기가 0 바이트 수 없음).  
  
-   집계의 모든 필드가 있어야 *blittable*, 즉, 공통 된 표현을 관리 및 관리 되지 않는 메모리에서 해야 하며 하며 interop 마샬러의 특별 한 처리가 필요 하지 있습니다.  
  
-   UDT의 모든 필드는 serialize 할 수 있는 다음 형식 중 하나 여야 합니다: `bool`, `byte`, `sbyte`, `short`, `ushort`를 `int`, `uint`를 `long`를 `ulong`, `float` `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>를 <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>를 <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, 또는 사용자가 정의한 중 필드가 포함 된 다른 값 형식 형식입니다.  
  
-   집계에 대 한 값을 지정 해서는 안 `MaxByteSize`합니다.  
  
-   집계 [NonSerialized] 필드에 없어야 합니다.  
  
-   명시적 레이아웃으로 필드를 표시 되어야 합니다 (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Serialization 형식을 알려진 아닙니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <see langword="UserDefined" /> 개발자 전체 컨트롤을 통해 이진 형식에 대해 serialization 형식 제공 합니다 <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> 하 고 <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" /> 메서드.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 집계에 대 한 값을 지정 해야 `MaxByteSize`합니다.  
  
 지정 된 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> 특성의 속성입니다. 기본값은 false입니다.  
  
 필드를 생략 하는 경우는 <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> 또는 <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> 메서드를 해당 필드의 상태가 serialize 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>