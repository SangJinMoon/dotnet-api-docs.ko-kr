<Type Name="SqlPipe" FullName="Microsoft.SqlServer.Server.SqlPipe">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f715fd742165d7d4ffbc7cb2e9be3f2dfa6d157e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37715750" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlPipe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlPipe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlPipe" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlPipe" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPipe sealed" />
  <TypeSignature Language="F#" Value="type SqlPipe = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b0478-101">SQL Server 데이터베이스에서 in-process 실행 중인 관리되는 저장 프로시저가 호출자에 결과를 다시 반환할 수 있도록 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0478-101">Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</span>
      </span>
      <span data-ttu-id="b0478-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0478-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0478-103">이 클래스의 인스턴스를 통해 관리 되는 저장된 프로시저를 사용할 수는 <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> 의 속성을 <xref:Microsoft.SqlServer.Server.SqlContext> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-103">An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0478-104">다음 예제에서는 <xref:System.Data.SqlClient.SqlConnection> 고 <xref:System.Data.SqlClient.SqlCommand> 저장된 프로시저에서 데이터 원본에서 행을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-104">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="b0478-105">이 예제에서는 다음 사용을 <xref:Microsoft.SqlServer.Server.SqlPipe> 명령을 실행 하 여 결과를 클라이언트로 다시 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-105">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAndSend">
      <MemberSignature Language="C#" Value="public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAndSend(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAndSend (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAndSend(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAndSend : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlPipe.ExecuteAndSend command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="b0478-106">실행할 <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-106">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0478-107">매개 변수로 전달된 명령을 실행하고 결과를 클라이언트로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-107">Executes the command passed as a parameter and sends the results to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0478-108">실제 결과 외에도 다른 메시지와 오류도 클라이언트에 직접 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-108">In addition to any actual results, other messages and errors are also sent directly to the client.</span></span>  
  
 <span data-ttu-id="b0478-109">출력 매개 변수 및 반환 값이 클라이언트에 보내지지 않습니다. 이러한 명령 개체의 매개 변수 컬렉션을 호출자에 게 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-109">Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</span></span>  
  
 <span data-ttu-id="b0478-110">명령 프로세스에 연결, 바인딩되지 않은 경우는 <xref:System.InvalidOperationException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-110">If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="b0478-111">이 메서드는 out-of-process 연결에 바인딩된 명령에 대해 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-111">This method is not supported on commands bound to out-of-process connections.</span></span>  
  
 <span data-ttu-id="b0478-112">에 오류가 있는 경우는 <xref:System.Data.SqlClient.SqlCommand> 개체 전송 된 예외를 파이프로 전송 됩니다 있지만 복사본 호출 관리 코드에도 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-112">If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</span></span> <span data-ttu-id="b0478-113">호출 코드에서 예외를 catch 하지 않습니다 하는 경우 TRANSACT-SQL 코드를 스택으로 전파 하 고 출력에 두 번 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-113">If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</span></span> <span data-ttu-id="b0478-114">호출 코드에서 예외를 catch 하는 경우 파이프 소비자는 오류를 표시 되지만 중복 오류를 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-114">If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0478-115">다음 예제에서는 <xref:System.Data.SqlClient.SqlConnection> 고 <xref:System.Data.SqlClient.SqlCommand> 저장된 프로시저에서 데이터 원본에서 행을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-115">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="b0478-116">이 예제에서는 다음 사용을 <xref:Microsoft.SqlServer.Server.SqlPipe> 명령을 실행 하 여 결과를 클라이언트로 다시 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-116">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0478-117">
            <paramref name="command" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-117">The <paramref name="command" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0478-118">이 메서드는 out-of-process 연결에 바인딩된 명령에 대해 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-118">This method is not supported on commands bound to out-of-process connections.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSendingResults">
      <MemberSignature Language="C#" Value="public bool IsSendingResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSendingResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSendingResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSendingResults { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSendingResults : bool" Usage="Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0478-119">
            <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />가 단일 결과 집합을 클라이언트로 다시 보내는 모드에 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-119">Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client.</span>
          </span>
          <span data-ttu-id="b0478-120">이 속성은 읽기 전용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-120">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0478-121">
            <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 메서드가 호출되었고 <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />가 단일 결과 집합을 클라이언트로 다시 보내는 모드에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-121">
              <see langword="true" /> if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0478-122">클라이언트 또는 현재 출력 소비자에게 직접 결과를 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-122">Sends results directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0478-123">합니다 **보낼** 메서드는 클라이언트 또는 호출자에 게 직접 데이터를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-123">The **Send** method sends data straight to the client or caller.</span></span> <span data-ttu-id="b0478-124">일반적으로 출력을 사용 하는 클라이언트는 **파이프** 메서드, 중첩 된 CLR의 경우 하지만 저장 프로시저 출력 소비자 수도 저장된 프로시저일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-124">It is usually the client that consumes the output from the **Pipe** method, but in the case of nested CLR stored procedures the output consumer can also be a stored procedure.</span></span> <span data-ttu-id="b0478-125">예를 들어 Procedure1 호출 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 명령 텍스트 "EXEC Procedure2"를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-125">For example, Procedure1 calls <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the command text "EXEC Procedure2".</span></span> <span data-ttu-id="b0478-126">Procedure2 관리 되는 저장된 프로시저도 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-126">Procedure2 is also a managed stored procedure.</span></span> <span data-ttu-id="b0478-127">이제 Procedure2를 호출 하는 경우 <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, 행을 클라이언트로 Procedure1의 판독기로 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-127">If Procedure2 now calls <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, the row is sent to Procedure1's reader, not to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.Send : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.Send record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="b0478-128">클라이언트로 보낼 단일 행 결과 집합인 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-128">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0478-129">클라이언트나 현재 출력 소비자에게 직접 단일 행 결과 집합을 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-129">Sends a single-row result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0478-130">
            <paramref name="record" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-130">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Data.SqlClient.SqlDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Data.SqlClient.SqlDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (reader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Data::SqlClient::SqlDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Data.SqlClient.SqlDataReader -&gt; unit" Usage="sqlPipe.Send reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b0478-131">클라이언트로 보낼 다중 행 결과 집합인 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-131">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0478-132">클라이언트나 현재 출력 소비자에게 직접 다중 행 결과 집합을 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-132">Sends a multirow result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0478-133">경우는 <xref:System.Data.SqlClient.SqlDataReader> 개체가 전달 된 매개 변수 열이 숨김으로, 해당 열을 클라이언트로 보낼 결과 집합에 전파 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-133">If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0478-134">
            <paramref name="reader" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-134">The <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; unit" Usage="sqlPipe.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b0478-135">클라이언트로 보낼 메시지 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-135">The message string to be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0478-136">클라이언트 또는 현재 출력 소비자에게 직접 문자열 메시지를 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-136">Sends a string message directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0478-137">메시지 문자열은 클라이언트에 게 정보 메시지로 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-137">The message string is sent as an informational message to the client.</span></span> <span data-ttu-id="b0478-138">클라이언트 응용 프로그램은 데이터 액세스 응용 프로그래밍 인터페이스 (API) 사용 하는 따라 서로 다른 메커니즘을 통해 메시지를 수신할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-138">Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</span></span> <span data-ttu-id="b0478-139">예를 들어, 클라이언트가 ADO.NET을 사용 하는 경우 메시지를 통해 전송할는 <xref:System.Data.SqlClient.SqlConnection.InfoMessage> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-139">For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0478-140">다음 예제에서는 <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> 클라이언트에 직접 메시지 문자열을 보내는 방법.</span><span class="sxs-lookup"><span data-stu-id="b0478-140">The following example uses the <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> method to send a message string directly to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.Send#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.Send#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0478-141">
            <paramref name="message" />가 4,000자를 넘습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-141">The <paramref name="message" /> is greater than 4,000 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0478-142">
            <paramref name="message" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-142">The <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendResultsEnd">
      <MemberSignature Language="C#" Value="public void SendResultsEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsEnd();" />
      <MemberSignature Language="F#" Value="member this.SendResultsEnd : unit -&gt; unit" Usage="sqlPipe.SendResultsEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0478-143">결과 집합의 끝 부분을 표시하고 <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> 인스턴스를 초기 상태로 되돌립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-143">Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0478-144">관리 되는 저장된 프로시저 구현 하지 않는 클라이언트에 결과 집합을 보낼 수 있습니다는 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-144">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="b0478-145">이 메서드를 함께 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> 고 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, 저장된 프로시저에서 사용자 지정 결과 집합을 클라이언트로 보낼 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-145">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0478-146">다음 예제에서는 새 <xref:Microsoft.SqlServer.Server.SqlDataRecord> 고 <xref:Microsoft.SqlServer.Server.SqlMetaData>입니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-146">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="b0478-147">예제는 다음 결과 사용 하 여 집합의 시작을 표시 합니다 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> 메서드를 사용 하 여 클라이언트에 다시 예제 데이터를 사용 하 여 레코드를 보냅니다 합니다 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> 메서드를 사용 하 여 결과의 끝 설정 표시를 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0478-147">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0478-148">
            <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 메서드가 이전에 호출되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-148">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsRow">
      <MemberSignature Language="C#" Value="public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsRow(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsRow (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsRow(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsRow : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsRow record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="b0478-149">클라이언트로 보낼 행에 대한 열 값이 있는 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client.</span>
          </span>
          <span data-ttu-id="b0478-150">이 레코드의 스키마는 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 메서드에 전달된 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />의 메타데이터가 설명하는 스키마와 일치해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-150">The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0478-151">데이터의 단일 행을 클라이언트로 다시 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-151">Sends a single row of data back to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0478-152">관리 되는 저장된 프로시저 구현 하지 않는 클라이언트에 결과 집합을 보낼 수 있습니다는 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-152">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="b0478-153">이 메서드를 함께 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> 고 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, 저장된 프로시저에서 사용자 지정 결과 집합을 클라이언트로 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-153">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="b0478-154"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> 메서드는 단일 데이터 행을 클라이언트로 다시 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-154">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method sends a single row of data back to the client.</span></span> <span data-ttu-id="b0478-155">행 수를 호출 하 여 이후에 호출자에 게 반환 하는 수 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, 보내는 각 행에 대해 한 번입니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-155">Rows can subsequently be returned to the caller by calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, one time for each row being sent.</span></span> <span data-ttu-id="b0478-156">모든 행을 보낸 후에 대 한 호출을 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> 메서드는 결과 집합의 끝을 표시 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-156">After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0478-157">다음 예제에서는 새 <xref:Microsoft.SqlServer.Server.SqlDataRecord> 고 <xref:Microsoft.SqlServer.Server.SqlMetaData>입니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-157">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="b0478-158">예제는 다음 결과 사용 하 여 집합의 시작을 표시 합니다 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> 메서드를 사용 하 여 클라이언트에 다시 예제 데이터를 사용 하 여 레코드를 보냅니다 합니다 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> 메서드를 사용 하 여 결과의 끝 설정 표시를 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0478-158">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0478-159">
            <paramref name="record" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-159">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0478-160">
            <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 메서드가 이전에 호출되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-160">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsStart">
      <MemberSignature Language="C#" Value="public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsStart(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsStart (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsStart(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsStart : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsStart record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="b0478-161">메타데이터가 추출되고 결과 집합을 설명하는 데 사용되는 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0478-162">클라이언트로 다시 보낼 결과 집합의 시작 부분을 표시하고 레코드 매개 변수를 사용하여 결과 집합을 설명하는 메타데이터를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-162">Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0478-163">관리 되는 저장된 프로시저 구현 하지 않는 클라이언트에 결과 집합을 보낼 수 있습니다는 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-163">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="b0478-164">이 메서드를 함께 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> 고 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, 저장된 프로시저에서 사용자 지정 결과 집합을 클라이언트로 보낼 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-164">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="b0478-165"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> 메서드 결과 집합의 시작을 표시 하 고 레코드 매개 변수를 사용 하 여 결과 집합을 설명 하는 메타 데이터를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-165">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</span></span> <span data-ttu-id="b0478-166">사용 하 여 보낸 모든 후속 행을는 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> 메서드를 해당 메타 데이터 정의와 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-166">All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.</span></span>  
  
 <span data-ttu-id="b0478-167">이후 호출 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>만 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> 고 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-167">Note that after calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called.</span></span> <span data-ttu-id="b0478-168">같은 인스턴스의 다른 메서드 <xref:Microsoft.SqlServer.Server.SqlPipe> throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-168">Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="b0478-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> 설정 <xref:Microsoft.SqlServer.Server.SqlPipe> 다른 메서드를 호출할 수 있는 초기 상태로 돌아갑니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.</span></span>  
  
 <span data-ttu-id="b0478-170">CLR 실행에서 TRANSACT-SQL로 컨트롤이 반환 된 후 CLR 메모리 초기화 되는 정적 또는 지역 변수를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="b0478-170">After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</span></span> <span data-ttu-id="b0478-171">예를 들어, 예를 들어에 프로세스의 인스턴스 클래스를 저장 하지 `SQLDataRecord`, CLR에서 컨트롤이 반환 된 후 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-171">For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR.</span></span> <span data-ttu-id="b0478-172">한 가지 예외는 `SQLMetaData` process 클래스에서.</span><span class="sxs-lookup"><span data-stu-id="b0478-172">One exception is the `SQLMetaData` in process class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0478-173">다음 예제에서는 새 <xref:Microsoft.SqlServer.Server.SqlDataRecord> 고 <xref:Microsoft.SqlServer.Server.SqlMetaData>입니다.</span><span class="sxs-lookup"><span data-stu-id="b0478-173">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="b0478-174">예제는 다음 결과 사용 하 여 집합의 시작을 표시 합니다 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> 메서드를 사용 하 여 클라이언트에 다시 예제 데이터를 사용 하 여 레코드를 보냅니다 합니다 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> 메서드를 사용 하 여 결과의 끝 설정 표시를 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b0478-174">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0478-175">
            <paramref name="record" />이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-175">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0478-176">
            <paramref name="record" />에 열이 없거나 이 레코드가 초기화되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-176">The <paramref name="record" /> has no columns or has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0478-177">
            <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> 메서드 다음에 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> 또는 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 이외의 메서드가 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0478-177">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
  </Members>
</Type>