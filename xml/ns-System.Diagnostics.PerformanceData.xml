<Namespace Name="System.Diagnostics.PerformanceData">
  <Docs>
    <summary><span data-ttu-id="a6e77-101">이 네임스페이스의 클래스를 사용하여 카운터 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-101">Use the classes in this namespace to provide counter data.</span></span> <span data-ttu-id="a6e77-102">카운터는 성능 모니터와 같은 성능 메트릭을 소비자에게 노출하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-102">The counters are used to expose performance metrics to consumers such as the Performance Monitor.</span></span> <span data-ttu-id="a6e77-103">네임스페이스는 카운터 데이터를 사용하기 위한 클래스를 포함하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-103">The namespace does not contain classes for consuming the counter data.</span></span> <span data-ttu-id="a6e77-104">성능 카운터 아키텍처에 대한 전체 설명을 보려면 <see href="https://msdn.microsoft.com/library/windows/desktop/aa373083\(v=vs.85\">성능 카운터</see>.aspx)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="a6e77-104">For a complete description of the performance counters architecture, see <see href="https://msdn.microsoft.com/library/windows/desktop/aa373083\(v=vs.85\">Performance Counters</see>.aspx).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6e77-105">이 네임 스페이스의 클래스는 Windows Vista에 도입 된 성능 카운터에 대 한 새로운 아키텍처 (버전 2.0)을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-105">The classes in this namespace support the new architecture (version 2.0) for performance counters that was introduced in Windows Vista.</span></span> <span data-ttu-id="a6e77-106">새 아키텍처에서 공급자를 직접 소비자의 요청에 응답 하지 않습니다 하지만 대신 단순히 카운터 데이터를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-106">In the new architecture, the provider no longer responds to consumer requests directly, but instead simply maintains the counter data.</span></span> <span data-ttu-id="a6e77-107">시스템은 공급자 카운터 집합;의 인스턴스를 만들 때 공급자의 프로세스에는 스레드를 삽입 스레드는 소비자의 요청을 처리 하는 일을 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-107">The system injects a thread into the provider's process when the provider creates an instance of the counter set; the thread is responsible for handling consumer requests.</span></span>  
  
 <span data-ttu-id="a6e77-108">다음 단계에서는 카운터 공급자를 작성 하기 위한 프로세스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-108">The following steps show the process for writing a counters provider.</span></span>  
  
1.  <span data-ttu-id="a6e77-109">공급자가 제공 하는 카운터가 XML 기반 매니페스트에서 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-109">The counters that the provider provides is defined in an XML-based manifest.</span></span> <span data-ttu-id="a6e77-110">카운터는 논리적 카운터 집합으로 그룹화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-110">The counters are logically grouped into counter sets.</span></span> <span data-ttu-id="a6e77-111">카운터 집합 내 카운터에서 카운터 집합 내에서 고유한 숫자 식별자로 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-111">The counters within a counter set are identified by a numeric identifier that is unique within the counter set.</span></span> <span data-ttu-id="a6e77-112">공급자는 하나 이상의 카운터 집합을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-112">A provider can define one or more counter sets.</span></span> <span data-ttu-id="a6e77-113">카운터 집합은 공급자에 고유한 Guid로 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-113">A counter set is identified by a Guid that is unique to a provider.</span></span> <span data-ttu-id="a6e77-114">이러한 클래스를 사용 하 여 공급자를 작성 하는 note:</span><span class="sxs-lookup"><span data-stu-id="a6e77-114">Note that if you use these classes to write your provider:</span></span>  
  
    -   <span data-ttu-id="a6e77-115">공급자 요소의 콜백 특성은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-115">The callback attribute of the provider element is ignored.</span></span>  
  
    -   <span data-ttu-id="a6e77-116">CounterAttribute 요소의 name 특성에 대 한 참조 값이 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-116">The reference value for the name attribute of the counterAttribute element is ignored.</span></span>  
  
     <span data-ttu-id="a6e77-117">매니페스트 작성 방법에 대 한 자세한 내용은 참조 하십시오. [성능 카운터 스키마](https://msdn.microsoft.com/library/windows/desktop/aa373092\(v=vs.85\).aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-117">For details on writing the manifest, see [Performance Counters Schema](https://msdn.microsoft.com/library/windows/desktop/aa373092\(v=vs.85\).aspx).</span></span>  
  
2.  <span data-ttu-id="a6e77-118">매니페스트를 작성 한 후 사용 하 여는 [CTRPP](https://msdn.microsoft.com/library/windows/desktop/aa372128\(v=vs.85\).aspx) 매니페스트 (ctrpp provider.man) 컴파일하려면 도구입니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-118">After writing your manifest, use the [CTRPP](https://msdn.microsoft.com/library/windows/desktop/aa372128\(v=vs.85\).aspx) tool to compile the manifest (ctrpp provider.man).</span></span> <span data-ttu-id="a6e77-119">4 개의 파일을 생성 하는 도구:.h,.c,.rc, 및 \* _r.h 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-119">The tool generates four files: .h, .c, .rc, and \*_r.h.</span></span> <span data-ttu-id="a6e77-120">.H 및.c 파일을 무시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-120">You can ignore the .h and .c files.</span></span> <span data-ttu-id="a6e77-121">.Rc 파일 매니페스트에 정의 된 지역화 된 문자열을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-121">The .rc file contains the localized strings defined in your manifest.</span></span> <span data-ttu-id="a6e77-122">프로젝트에 포함 하는 컴파일된 리소스 파일 (.res)을 만들려면.rc 파일과 \* _r.h를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-122">You use the .rc and \*_r.h files to create the compiled resource file (.res) that you include in your project.</span></span> <span data-ttu-id="a6e77-123">다음 호출 되는 리소스 파일을 컴파일하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-123">The following call shows how to compile the resource file:</span></span>  
  
    ```  
    rc /r /i "c:\Program Files\Microsoft SDKs\Windows\v6.0\Include" provider.rc  
    ```  
  
     <span data-ttu-id="a6e77-124">Microsoft Visual Studio에서 sal.h 파일을 복사 sal.h 참조 하는 오류가 발생할 경우에 Visual C /i 스위치에 대 한 지정한 디렉터리에 디렉터리를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-124">If you get an error that references sal.h, copy the sal.h file from your Microsoft Visual Studio, Visual C include directory to the directory you specify for the /i switch.</span></span>  
  
     <span data-ttu-id="a6e77-125">프로젝트의 응용 프로그램 속성 페이지에 컴파일된 리소스 파일 (.res)에 대 한 경로 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-125">Add a path to the compiled resource file (.res) to your project's Application property page.</span></span>  
  
3.  <span data-ttu-id="a6e77-126">공급자를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-126">Write your provider.</span></span> <span data-ttu-id="a6e77-127">다음 단계 공급자에 의해 수행 된 호출을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-127">The following steps show the calls made by a provider:</span></span>  
  
    1.  <span data-ttu-id="a6e77-128">호출 된 <xref:System.Diagnostics.PerformanceData.CounterSet.%23ctor%2A?displayProperty=nameWithType> 카운터 집합을 정의 하는 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-128">Call the <xref:System.Diagnostics.PerformanceData.CounterSet.%23ctor%2A?displayProperty=nameWithType> constructor to define the counter set.</span></span> <span data-ttu-id="a6e77-129">각 카운터는 매니페스트에서 정의 된 집합에 대 한이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-129">Call this method for each counter set defined in the manifest.</span></span>  
  
    2.  <span data-ttu-id="a6e77-130">각 카운터 집합에 대 한 호출 중 하나는 <xref:System.Diagnostics.PerformanceData.CounterSet.AddCounter%2A?displayProperty=nameWithType> 카운터 집합에 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-130">For each counter set, call one of the <xref:System.Diagnostics.PerformanceData.CounterSet.AddCounter%2A?displayProperty=nameWithType> methods to add the counters to the set.</span></span> <span data-ttu-id="a6e77-131">카운터 집합에 정의 된 각 카운터에 대해이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-131">Call this method for each counter defined in the counter set.</span></span>  
  
    3.  <span data-ttu-id="a6e77-132">호출 된 <xref:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance%2A?displayProperty=nameWithType> 메서드 (인스턴스 카운터 데이터를 포함 하는 데 사용) 카운터 집합의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-132">Call the <xref:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance%2A?displayProperty=nameWithType> method to create an instance of the counter set (an instance contains the counter data).</span></span> <span data-ttu-id="a6e77-133">단일 인스턴스 카운터 집합에 대 한이 메서드를 한 번 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-133">For single instance counter sets, call this method one time.</span></span> <span data-ttu-id="a6e77-134">여러 인스턴스 카운터 집합에 대 한 카운터 데이터 (각 인스턴스에 대 한 고유한 이름을 사용)를 제공 해야 하는 각 인스턴스에 대해이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-134">For multiple instance counter sets, call this method for each instance for which you need to provide counter data (use a unique name for each instance).</span></span>  
  
    4.  <span data-ttu-id="a6e77-135">사용 하 여는 <xref:System.Diagnostics.PerformanceData.CounterSetInstance.Counters%2A?displayProperty=nameWithType> 속성을 액세스 및 카운터에 대 한 카운터 데이터를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-135">Use the <xref:System.Diagnostics.PerformanceData.CounterSetInstance.Counters%2A?displayProperty=nameWithType> property to access and set the counter data for the counter.</span></span>  
  
4.  <span data-ttu-id="a6e77-136">공급자를 완료 한 후 컴퓨터에서 카운터를 등록 하려면 LodCtr 도구를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-136">After you finish your provider, use the LodCtr tool to register the counters on the computer.</span></span> <span data-ttu-id="a6e77-137">예를 들어 개체에 적용된</span><span class="sxs-lookup"><span data-stu-id="a6e77-137">For example,</span></span>  
  
    ```  
    lodctr /m:provider.man  
    ```  
  
     <span data-ttu-id="a6e77-138">이 예제에서는 매니페스트를 가정 및 실행 파일은 현재 디렉터리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-138">The example assumes the manifest and executable file are in the current directory.</span></span> <span data-ttu-id="a6e77-139">LodCtr를 사용 하 여 대 한 자세한 내용은 참조 하십시오. [Microsoft Technet](Http://Go.Microsoft.Com/FWLink/?LinkId=84000)합니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-139">For complete details on using the LodCtr, see [Microsoft Technet](Http://Go.Microsoft.Com/FWLink/?LinkId=84000).</span></span>  
  
 <span data-ttu-id="a6e77-140">Windows Vista 이상의 운영 체제를 실행 하는 컴퓨터에이 네임 스페이스의 클래스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-140">You can use the classes in this namespace on computers that run the Windows Vista and later operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6e77-141">다음은 간단한 매니페스트입니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-141">The following shows a simple manifest:</span></span>  
  
```  
<!-- <?xml version="1.0" encoding="UTF-16"?> -->  
<instrumentationManifest xsi:schemaLocation="http://schemas.microsoft.com/win/2004/08/events eventman.xsd"   
     xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events"   
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
     xmlns:xs="http://www.w3.org/2001/XMLSchema"   
     xmlns:trace=http://schemas.microsoft.com/win/2004/08/events/trace>  
  
    <instrumentation>  
  
        <counters xmlns=http://schemas.microsoft.com/win/2005/12/counters>  
  
            <provider  
              applicationIdentity = "provider1.exe"  
              providerType = "userMode"  
              providerGuid = "{51D1685C-35ED-45be-99FE-17261A4F27F3}">  
  
               <counterSet guid = "{582803C9-AACD-45e5-8C30-571141A22092}"  
                  uri = "Microsoft.Windows.System.PerfCounters.Typing"  
                  name = "$(string.CounterSet1.Name)"   
                  description = "$(string.CounterSet1.Description)"   
                  instances = "single">  
  
                    <counter id = "1"  
                      uri = "Microsoft.Windows.System.PerfCounters.Typing.TotalWords"  
                      name = "$(string.CS1.Counter1.Name)"  
                      description = "$(string.CS1.Counter1.Description)"  
                      type = "perf_counter_rawcount"  
                      detailLevel = "standard"/>  
  
                    <counter id = "2"  
                      uri = "Microsoft.Windows.System.PerfCounters.Typing.WordsInInterval"  
                      name = "$(string.CS1.Counter2.Name)"  
                      description = "$(string.CS1.Counter2.Description)"  
                      type = "perf_counter_delta"  
                      detailLevel = "standard"/>  
  
                    <counter id = "3"  
                      uri = "Microsoft.Windows.System.PerfCounters.Typing.LetterAPressed"  
                      name = "$(string.CS1.Counter3.Name)"  
                      description = "$(string.CS1.Counter3.Description)"  
                      type = "perf_counter_rawcount"  
                      detailLevel = "standard"/>  
  
                    <counter id = "4"  
                      uri = "Microsoft.Windows.System.PerfCounters.Typing.WordsContainingLetterA"  
                      name = "$(string.CS1.Counter4.Name)"   
                      description = "$(string.CS1.Counter4.Description)"   
                      type = "perf_counter_rawcount"  
                      detailLevel = "standard"/>  
  
                    <counter id = "5"  
                      uri = "Microsoft.Windows.System.PerfCounters.Typing.PercentOfWordsContainingLetterA"  
                      name = "$(string.CS1.Counter5.Name)"   
                      description = "$(string.CS1.Counter5.Description)"   
                      type = "perf_sample_fraction"  
                      baseID = "6"  
                      detailLevel = "standard">  
                      <counterAttributes>  
                          <counterAttribute name = "displayAsReal" />  
                      </counterAttributes>  
                    </counter>  
  
                    <counter id = "6"  
                      uri = "Microsoft.Windows.System.PerfCounters.Typing.PercentBase"  
                      type = "perf_sample_base"  
                      detailLevel = "standard">  
                      <counterAttributes>  
                          <counterAttribute name = "noDisplay" />  
                      </counterAttributes>  
                    </counter>  
  
                </counterSet>  
            </provider>  
        </counters>  
    </instrumentation>  
  
    <localization>  
        <resources culture="en-US">  
            <stringTable>  
  
                <string id="CounterSet1.Name" value="Typing"/>  
                <string id="CounterSet1.Description" value="Captures simple typing metrics."/>  
                <string id="CS1.Counter1.Name" value="Total Words Typed"/>   
                <string id="CS1.Counter1.Description" value="The total number of words typed."/>  
                <string id="CS1.Counter2.Name" value="Words Typed In Interval"/>   
                <string id="CS1.Counter2.Description" value="The total number of words typed in the interval."/>  
                <string id="CS1.Counter3.Name" value="Letter A Pressed"/>   
                <string id="CS1.Counter3.Description" value="The number of times that the letter A is pressed."/>  
                <string id="CS1.Counter4.Name" value="Words Containing A"/>   
                <string id="CS1.Counter4.Description" value="The number of words that contain the letter A."/>  
                <string id="CS1.Counter5.Name" value="Percent of Words Containing A"/>   
                <string id="CS1.Counter5.Description" value="The percent of words that contain the letter A in the last interval."/>  
  
            </stringTable>  
        </resources>  
    </localization>  
</instrumentationManifest>  
```  
  
 <span data-ttu-id="a6e77-142">다음은 매니페스트에 대 한 간단한 공급자 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="a6e77-142">The following shows a simple provider implementation for the manifest:</span></span>  
  
```  
using System.Diagnostics.PerformanceData;  
  
        private static Guid providerId = new Guid("{51D1685C-35ED-45be-99FE-17261A4F27F3}");  
        private static Guid typingCounterSetId = new Guid("{582803C9-AACD-45e5-8C30-571141A22092}");  
  
        private static CounterSet typingCounterSet;         // Defines the counter set  
        private static CounterSetInstance typingCsInstance; // Instance of the counter set  
  
        private static int numberOfLetterAInWord = 0;  
  
        . . .  
  
            // Create the 'Typing' counter set.  
            typingCounterSet = new CounterSet(providerId, typingCounterSetId, CounterSetInstanceType.Single);  
  
            // Add the counters to the counter set definition.  
            typingCounterSet.AddCounter(1, CounterType.RawData32, "Total Word Count");  
            typingCounterSet.AddCounter(2, CounterType.Delta32, "Words Typed In Interval");  
            typingCounterSet.AddCounter(3, CounterType.RawData32, "A Key Pressed");  
            typingCounterSet.AddCounter(4, CounterType.RawData32, "Words Containing A");  
            typingCounterSet.AddCounter(5, CounterType.SampleFraction, "Percent of Words Containg A");  
            typingCounterSet.AddCounter(6, CounterType.SampleBase, "Percent Base");  
  
            // Create an instance of the counter set (contains the counter data).  
            typingCsInstance = typingCounterSet.CreateCounterSetInstance("Typing Instance");  
            typingCsInstance.Counters[1].Value = 0;  
            typingCsInstance.Counters[2].Value = 0;  
            typingCsInstance.Counters[3].Value = 0;  
            typingCsInstance.Counters[4].Value = 0;  
            typingCsInstance.Counters[5].Value = 0;  
            typingCsInstance.Counters[6].Value = 0;  
  
        . . .  
  
        private void Form1_FormClosing(object sender, FormClosingEventArgs e)  
        {  
            typingCounterSet.Dispose();  
        }  
  
        // Simple effort to capture letter A key press and words typed.  
        private void textInput_KeyDown(object sender, KeyEventArgs e)  
        {  
            Keys keyData = e.KeyData;  
  
            switch (e.KeyData)  
            {  
                case Keys.A :  
                    // In the .NET 3.5 Framework, you had to use the  
                    // Value property to set and increment the counter   
                    // value. Beginning with the .NET 4.0 Framework,   
                    // the Value property is safe to use in a multi-  
                    // threaded application.  
                    typingCsInstance.Counters["A Key Pressed"].Value++;  
                    numberOfLetterAInWord++;  
  
                    break;  
  
                case Keys.Enter:  
                case Keys.Space:  
                case Keys.Tab:  
  
                    if (numberOfLetterAInWord > 0)  
                    {  
                        // Beginning with the .NET 4.0 Framework, you   
                        // can use the Increment method to increment   
                        // the counter value by 1. The Increment method   
                        // is safe to use in a multi-threaded   
                        // application.  
                        typingCsInstance.Counters["Words Containing A"].Increment();  
                        typingCsInstance.Counters["Percent of Words Containg A"].Increment();  
                        numberOfLetterAInWord = 0;  
                    }  
  
                    typingCsInstance.Counters["Percent Base"].Increment();  
                    typingCsInstance.Counters["Total Word Count"].Increment();  
                    typingCsInstance.Counters["Words Typed In Interval"].Increment();  
  
                    break;  
            }  
        }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>