<Type Name="HwndHost" FullName="System.Windows.Interop.HwndHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd565933d14b6f23aa8c789d653f9f5a5791d2b2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30660597" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HwndHost : System.Windows.FrameworkElement, IDisposable, System.Windows.Interop.IKeyboardInputSink, System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract HwndHost extends System.Windows.FrameworkElement implements class System.IDisposable, class System.Windows.Interop.IKeyboardInputSink, class System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndHost" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HwndHost&#xA;Inherits FrameworkElement&#xA;Implements IDisposable, IKeyboardInputSink, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class HwndHost abstract : System::Windows::FrameworkElement, IDisposable, System::Windows::Interop::IKeyboardInputSink, System::Windows::Interop::IWin32Window" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IKeyboardInputSink</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="9f2f3-101">Win32 창을 WPF(Windows Presentation Foundation) 콘텐츠 내의 요소로 호스트합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f2f3-101">Hosts a Win32 window as an element within Windows Presentation Foundation (WPF) content.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2f3-102">호스트에는 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 창에서 파생 되는 클래스를 만듭니다 <xref:System.Windows.Interop.HwndHost>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-102">To host a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window, create a class that derives from <xref:System.Windows.Interop.HwndHost>.</span></span> <span data-ttu-id="9f2f3-103">재정의 <xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A> 메서드를 만들고 여 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 메서드에 전달 되는 부모 창의 자식 창.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-103">Override the <xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A> method and create your [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window as a child of the parent window that is passed into the method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-104">하지만 <xref:System.Windows.Interop.HwndHost> 에서 파생 <xref:System.Windows.FrameworkElement>, 다양 한 속성을 <xref:System.Windows.Interop.HwndHost> 에서 제공 하 <xref:System.Windows.FrameworkElement> 및와 같은 다른 중간 클래스 <xref:System.Windows.UIElement> 일반적으로 가능한에 매핑되지 않은 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-104">Although <xref:System.Windows.Interop.HwndHost> derives from <xref:System.Windows.FrameworkElement>, various properties of <xref:System.Windows.Interop.HwndHost> that come from <xref:System.Windows.FrameworkElement> and other intermediate classes such as <xref:System.Windows.UIElement> are not generally mapped to possible [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] equivalents.</span></span> <span data-ttu-id="9f2f3-105">또한 일부 <xref:System.Windows.FrameworkElement>  /  <xref:System.Windows.UIElement> 상호 운용 경계에서 이벤트 전송을 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-105">Also, not all <xref:System.Windows.FrameworkElement> / <xref:System.Windows.UIElement> input events transfer across the interoperation boundary.</span></span> <span data-ttu-id="9f2f3-106"><xref:System.Windows.Interop.HwndHost> 파생 <xref:System.Windows.FrameworkElement> 에 <xref:System.Windows.Interop.HwndHost> 인스턴스 다양 한 가능한 콘텐츠 모델에 삽입할 수 있고 또한 기본값 <xref:System.Windows.FrameworkElement> 레이아웃 특성을 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-106"><xref:System.Windows.Interop.HwndHost> derives from <xref:System.Windows.FrameworkElement> primarily so that an <xref:System.Windows.Interop.HwndHost> instance can be inserted into the widest variety of possible content models, and so that default <xref:System.Windows.FrameworkElement> layout characteristics can apply.</span></span> <span data-ttu-id="9f2f3-107">에 대 한 자세한 내용은 <xref:System.Windows.Interop.HwndHost>, 참조 [WPF 및 Win32 상호 운용](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-107">For more details on <xref:System.Windows.Interop.HwndHost>, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HwndHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HwndHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-108">
            <see cref="T:System.Windows.Interop.HwndHost" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-108">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndHost" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-109">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-109">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildWindowCore">
      <MemberSignature Language="C#" Value="protected abstract System.Runtime.InteropServices.HandleRef BuildWindowCore (System.Runtime.InteropServices.HandleRef hwndParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype System.Runtime.InteropServices.HandleRef hwndParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function BuildWindowCore (hwndParent As HandleRef) As HandleRef" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Runtime::InteropServices::HandleRef BuildWindowCore(System::Runtime::InteropServices::HandleRef hwndParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.HandleRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndParent" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="hwndParent">
          <span data-ttu-id="9f2f3-110">부모 창의 창 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-110">The window handle of the parent window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-111">파생 클래스에서 재정의되는 경우 호스팅할 창을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-111">When overridden in a derived class, creates the window to be hosted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-112">만들 자식 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 창에 대한 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-112">The handle to the child [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window to create.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2f3-113">이 메서드의 구현은의 내부 구현 내에서 호출 <xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-113">This method's implementation is called from within the internal implementation of <xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A>.</span></span>  
  
 <span data-ttu-id="9f2f3-114">자식 창에는 호출 스레드에서 창을 소유 하는 경우에 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-114">The child window will be created only if the window is owned by the calling thread.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9f2f3-115">호스트 되는 창을 작성 하려면이 메서드를 재정의 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9f2f3-115">Override this method to build the window being hosted.</span>
            </span>
            <span data-ttu-id="9f2f3-116">사용자가 반환 하는 창에서 지정 된 창의 자식 이어야 합니다. <paramref name="hwndParent" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9f2f3-116">The window that you return must be a child of the window specified by <paramref name="hwndParent" />.</span>
            </span>
            <span data-ttu-id="9f2f3-117">또한 자식 창은 만들어집니다 호출 스레드에서 창을 소유 하는 경우.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9f2f3-117">In addition, the child window will only be created if the window is owned by the calling thread.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DestroyWindowCore">
      <MemberSignature Language="C#" Value="protected abstract void DestroyWindowCore (System.Runtime.InteropServices.HandleRef hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DestroyWindowCore(valuetype System.Runtime.InteropServices.HandleRef hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DestroyWindowCore (hwnd As HandleRef)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DestroyWindowCore(System::Runtime::InteropServices::HandleRef hwnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="9f2f3-118">창 핸들을 포함하는 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-118">A structure that contains the window handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-119">파생 클래스에서 재정의하면 호스팅된 창이 소멸됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-119">When overridden in a derived class, destroys the hosted window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-120">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-120">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9f2f3-121">이 메서드를 통해 만들어진 호스팅된 창을 소멸 재정의 <see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9f2f3-121">Override this method to destroy the hosted window as created by <see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />.</span>
            </span>
            <span data-ttu-id="9f2f3-122">
              <paramref name="hwnd" /> 매개 변수에서 반환 된 핸들 이어야 합니다 <see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9f2f3-122">The <paramref name="hwnd" /> parameter should be the handle as returned by <see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-123">개체가 보유하고 있는 시스템 리소스를 즉시 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-123">Immediately frees any system resources that the object might hold.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-124">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-124">This type or member is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="9f2f3-125">이 메서드를 재정의 하는 파생 된 클래스 수 (여는 <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> 서명) 추가 정리 작업을 수행 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-125">Derived classes can override this method (by the <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> signature) if they need to do additional cleanup.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-126">개체가 보유하고 있는 시스템 리소스를 즉시 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-126">Immediately frees any system resources that the object might hold.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-127">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-127">This type or member is not available in the Internet security zone.</span></span>  
>   
>  <span data-ttu-id="9f2f3-128">이 메서드를 재정의할 수 있지만이 서명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-128">This method can be overridden, but not by this signature.</span></span> <span data-ttu-id="9f2f3-129">참조 <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> overridable 서명에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-129">See <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> for the overridable signature.</span></span> <span data-ttu-id="9f2f3-130">이 매개 변수가 없는 서명을 인터페이스 계약에 필요한 이며 효과적으로 활성 호출 <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> 구현을 `disposing` 되 고 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-130">This parameterless signature is the one required by the interface contract, and it effectively calls the active <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> implementation with `disposing` being `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="9f2f3-131">명시적 처리기에서 호출하면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-131">Set to <see langword="true" /> if called from an explicit disposer and <see langword="false" /> otherwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-132">개체가 보유하고 있는 시스템 리소스를 즉시 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-132">Immediately frees any system resources that the object might hold.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-133">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-133">This type or member is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="9f2f3-134">파생된 클래스는 추가 정리 작업을 수행 하는 경우이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-134">Derived classes can override this method if they need to do additional cleanup.</span></span> <span data-ttu-id="9f2f3-135">그러나 모든 리소스가 해제 되 고 있는지 확인 하는 기본 구현을 호출 또한 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-135">However, they should also call the base implementation to ensure that all resources are freed.</span></span> <span data-ttu-id="9f2f3-136">기본 구현에서는 실제적인 작업 기본 클래스에 알려진 리소스를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-136">The base implementation does fairly substantial work to free resources that are known to the base class.</span></span>  
  
 <span data-ttu-id="9f2f3-137">창이 호스팅 중 이라면 소멸 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-137">If a window is being hosted, it will be destroyed.</span></span>  
  
 <span data-ttu-id="9f2f3-138">호출 스레드가 발송자과 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-138">The calling thread must be the same as the dispatcher.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndHost.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-139">HwndHost가 표시되는 화면 DPI가 변경된 후에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-139">Occurs after the DPI of the screen on which the HwndHost is displayed changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DpiChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DpiChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Interop.HwndHost.DpiChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DpiChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DpiChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-140">HwndHost 화면 DPI가 변경 중일 때의 <see cref="T:System.Windows.RoutedEvent" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-140">A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the HwndHost is on changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~HwndHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!HwndHost ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-141">가비지 수집기에서 개체를 소멸하기 전에 최종 정리 작업을 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-141">Performs the final cleanup before the garbage collector destroys the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2f3-142">대부분이 호출 `Dispose(false)`합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-142">Like most finalizers, this calls `Dispose(false)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndHost.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-143">호스팅된 창의 창 핸들을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-143">Gets the window handle  of the hosted window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f2f3-144">창 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-144">The window handle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9f2f3-145">가져올이 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-145">to get this object.</span>
          </span>
          <span data-ttu-id="9f2f3-146">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-146">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="HasFocusWithinCore">
      <MemberSignature Language="C#" Value="protected virtual bool HasFocusWithinCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HasFocusWithinCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.HasFocusWithinCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasFocusWithinCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HasFocusWithinCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-147">싱크 또는 싱크에 포함된 구성 요소 중 하나에 포커스가 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-147">Gets a value that indicates whether the sink or one of its contained components has focus.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-148">싱크 또는 싱크에 포함된 구성 요소 중 하나에 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-148">
              <see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">
          <span data-ttu-id="9f2f3-149">
            <see cref="T:System.Windows.Interop.HwndHost" /> 개체의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-149">The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-150">레이아웃 엔진 작업에서 요청한 대로 <see cref="T:System.Windows.Interop.HwndHost" /> 개체로 표현된 창의 크기를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-150">Returns the size of the window represented by the <see cref="T:System.Windows.Interop.HwndHost" /> object, as requested by layout engine operations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-151">
            <see cref="T:System.Windows.Interop.HwndHost" /> 개체의 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-151">The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-152">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-152">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9f2f3-153">레이아웃을 조정 하기 위해 (레이아웃 엔진을 포함 하면 호스팅된 영역에 사용 될).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-153">in order to adjust the layout (by having the layout engine act upon the hosted region).</span>
          </span>
          <span data-ttu-id="9f2f3-154">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-154">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9f2f3-155">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)], 창 레이아웃 창을 만든 시간에서 요청한 크기로 사용할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9f2f3-155">In [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)], a window is expected to be the size requested by layout at the time the window is created.</span>
            </span>
            <span data-ttu-id="9f2f3-156">파생된 클래스는 필요한 창 크기에 대 한 추가 정보가 있는 경우에이 메서드를 재정의 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9f2f3-156">Derived classes should override this method only if they have additional information regarding required window size.</span>
            </span>
            <span data-ttu-id="9f2f3-157">여기에 특정 구현을 이미 재정의 <see cref="T:System.Windows.FrameworkElement" /> 창 핸들에 대 한 크기 제약 조건을 기반 하 고 하나 이상의 차원에 비-제약 조건으로 값이 0에서 처리 하는 가상 멤버입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9f2f3-157">The specific implementation here is already an override of the <see cref="T:System.Windows.FrameworkElement" /> virtual member, which bases size constraints on the window handle and treats a zero value in one or more dimensions as a non-constraint.</span>
            </span>
            <span data-ttu-id="9f2f3-158">
              <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 클래스도 재정의 <see cref="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)" /> 클립 폼의 크기가 너무 커서 경우 발생 하는 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9f2f3-158">The <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> class also overrides a <see cref="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)" /> implementation that will result in a clip of the form if it is too large.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MessageHook">
      <MemberSignature Language="C#" Value="public event System.Windows.Interop.HwndSourceHook MessageHook;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Interop.HwndSourceHook MessageHook" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndHost.MessageHook" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MessageHook As HwndSourceHook " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Interop::HwndSourceHook ^ MessageHook;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSourceHook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-159">호스팅된 창에서 받는 처리되지 않은 각 메시지에 대해 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-159">Occurs for each unhandled message that is received by the hosted window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-160">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-160">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9f2f3-161">추가 하거나이 이벤트의 처리기를 제거 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-161">to add or remove handlers of this event.</span>
          </span>
          <span data-ttu-id="9f2f3-162">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-162">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-163">
            <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />에 대한 <see cref="T:System.Windows.Interop.HwndHost" />를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-163">Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for <see cref="T:System.Windows.Interop.HwndHost" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-164">형식별 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-164">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2f3-165">이 메서드의 구현은 특정 생성자를 호출 하는 일반적으로 <xref:System.Windows.Automation.Peers.AutomationPeer> 구현 하 고 반환 값으로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-165">The implementation of this method is typically to call the constructor of a specific <xref:System.Windows.Automation.Peers.AutomationPeer> implementation, and return it as the return value.</span></span> <span data-ttu-id="9f2f3-166"><xref:System.Windows.Interop.HwndHost> 구현의 <xref:System.Windows.Interop.HwndHost.OnCreateAutomationPeer%2A> 내부 클래스를 반환 하는 자동화 피어 이지만이 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-166">The <xref:System.Windows.Interop.HwndHost> implementation of <xref:System.Windows.Interop.HwndHost.OnCreateAutomationPeer%2A> does this, but the automation peer that it returns is an internal class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Peers.AutomationPeer" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="oldDpi">
          <span data-ttu-id="9f2f3-167">원래 DPI 배율 설정입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-167">The original DPI scale setting.</span>
          </span>
        </param>
        <param name="newDpi">
          <span data-ttu-id="9f2f3-168">새 DPI 배율 설정입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-168">The new DPI scale setting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-169">이 HwndHost가 렌더링되는 DPI가 변경될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-169">Called when the DPI at which this HwndHost is rendered changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9f2f3-170">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-170">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-171">호스트된 창이 [WM_KEYDOWN](http://go.microsoft.com/fwlink/?LinkId=161282) 메시지를 받을 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-171">Called when the hosted window receives a [WM_KEYDOWN](http://go.microsoft.com/fwlink/?LinkId=161282) message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-172">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-172">This type or member is not available in the Internet security zone.</span></span>  
>   
>  <span data-ttu-id="9f2f3-173">이 클래스 처리기를 재정의 하는 <xref:System.Windows.UIElement.OnKeyDown%2A> 변환 동작을 제공 하 고는 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 메시지는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 이벤트를 처리 되므로 필요에 따라 이벤트를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-173">This is an override of the class handler <xref:System.Windows.UIElement.OnKeyDown%2A> and provides the behavior of translating the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] message into a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event, marking the event as handled whenever appropriate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9f2f3-174">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-174">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-175">호스트된 창이 [WM_KEYUP](http://go.microsoft.com/fwlink/?LinkId=161283) 메시지를 받을 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-175">Called when the hosted window receives a [WM_KEYUP](http://go.microsoft.com/fwlink/?LinkId=161283) message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-176">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-176">This type or member is not available in the Internet security zone.</span></span>  
>   
>  <span data-ttu-id="9f2f3-177">이 클래스 처리기를 재정의 하는 <xref:System.Windows.UIElement.OnKeyUp%2A> 변환 동작을 제공 하 고는 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 메시지는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 이벤트를 처리 되므로 필요에 따라 이벤트를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-177">This is an override of the class handler <xref:System.Windows.UIElement.OnKeyUp%2A> and provides the behavior of translating the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] message into a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event, marking the event as handled whenever appropriate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMnemonicCore">
      <MemberSignature Language="C#" Value="protected virtual bool OnMnemonicCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMnemonicCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMnemonicCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnMnemonicCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="9f2f3-178">니모닉 및 연결된 데이터에 대한 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-178">The message for the mnemonic and associated data.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="9f2f3-179">보조키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-179">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-180">이 싱크에 대한 니모닉(선택키) 중 하나가 호출될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-180">Called when one of the mnemonics (access keys) for this sink is invoked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-181">항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-181">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnWindowPositionChanged (System.Windows.Rect rcBoundingBox);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWindowPositionChanged(valuetype System.Windows.Rect rcBoundingBox) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWindowPositionChanged (rcBoundingBox As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWindowPositionChanged(System::Windows::Rect rcBoundingBox);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rcBoundingBox" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rcBoundingBox">
          <span data-ttu-id="9f2f3-182">창의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-182">The window's position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-183">호스팅된 창의 위치가 바뀌면 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-183">Called when the hosted window's position changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-184">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-184">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9f2f3-185">하위 클래스의 제공 된 크기에 따라 창 크기를 조정 하려면이 메서드를 재정의할 수 <paramref name="rcBoundingBox" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9f2f3-185">Subclasses can override this method to resize the window based on the provided dimensions of <paramref name="rcBoundingBox" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSinkCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RegisterKeyboardInputSinkCore (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSinkCore(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">
          <span data-ttu-id="9f2f3-186">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 싱크입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-186">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-187">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 인터페이스를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-187">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-188">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 사이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-188">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Function HasFocusWithin () As Boolean Implements IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() = System::Windows::Interop::IKeyboardInputSink::HasFocusWithin;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-189">이 멤버에 대한 설명은 <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-189">For a description of this member, see <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-190">싱크 또는 싱크에 포함된 구성 요소 중 하나에 포커스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-190">
              <see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2f3-191">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9f2f3-191">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f2f3-192"><xref:System.Windows.Interop.HwndHost> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-192">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value=" Property KeyboardInputSite As IKeyboardInputSite Implements IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-193">이 멤버에 대한 설명은 <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-193">For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f2f3-194">컨테이너의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 인터페이스에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-194">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2f3-195">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9f2f3-195">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f2f3-196"><xref:System.Windows.Interop.HwndHost> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-196">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9f2f3-197">이 메서드를 호출 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-197">to call this method.</span>
          </span>
          <span data-ttu-id="9f2f3-198">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-198">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.OnMnemonic">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.OnMnemonic" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::OnMnemonic;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="9f2f3-199">니모닉 및 연결된 데이터에 대한 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-199">The message for the mnemonic and associated data.</span>
          </span>
          <span data-ttu-id="9f2f3-200">이 메시지 구조체를 수정하지 마십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-200">Do not modify this message structure.</span>
          </span>
          <span data-ttu-id="9f2f3-201">성능상의 이유로 이 구조체는 참조로만 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-201">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="9f2f3-202">보조키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-202">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-203">이 멤버에 대한 설명은 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-203">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-204">메시지가 처리되었으면 <see langword="true" />이고, 처리되지 않았으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-204">
              <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2f3-205">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9f2f3-205">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f2f3-206"><xref:System.Windows.Interop.HwndHost> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-206">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite IKeyboardInputSink.RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite Implements IKeyboardInputSink.RegisterKeyboardInputSink" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink) = System::Windows::Interop::IKeyboardInputSink::RegisterKeyboardInputSink;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">
          <span data-ttu-id="9f2f3-207">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 싱크입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-207">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-208">이 멤버에 대한 설명은 <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-208">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-209">포함된 구성 요소의 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 사이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-209">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2f3-210">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9f2f3-210">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f2f3-211"><xref:System.Windows.Interop.HwndHost> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-211">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9f2f3-212">이 메서드를 호출 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-212">to call this method.</span>
          </span>
          <span data-ttu-id="9f2f3-213">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-213">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TabInto">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Function TabInto (request As TraversalRequest) As Boolean Implements IKeyboardInputSink.TabInto" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TabInto(System::Windows::Input::TraversalRequest ^ request) = System::Windows::Interop::IKeyboardInputSink::TabInto;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="9f2f3-214">포커스를 첫 번째 또는 마지막 탭 정지로 설정해야 하는지 여부를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-214">Specifies whether focus should be set to the first or the last tab stop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-215">이 멤버에 대한 설명은 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-215">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-216">포커스가 요청대로 설정되었으면 <see langword="true" />이고, 탭 정지가 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-216">
              <see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2f3-217">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9f2f3-217">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f2f3-218"><xref:System.Windows.Interop.HwndHost> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-218">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9f2f3-219">이 메서드를 호출 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-219">to call this method.</span>
          </span>
          <span data-ttu-id="9f2f3-220">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-220">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateAccelerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateAccelerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="9f2f3-221">메시지 및 연결된 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-221">The message and associated data.</span>
          </span>
          <span data-ttu-id="9f2f3-222">이 구조체를 수정하지 마십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-222">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="9f2f3-223">성능상의 이유로 이 구조체는 참조로만 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-223">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="9f2f3-224">보조키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-224">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-225">이 멤버에 대한 설명은 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-225">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-226">메서드 구현에서 메시지가 처리되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-226">
              <see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2f3-227">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9f2f3-227">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f2f3-228"><xref:System.Windows.Interop.HwndHost> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-228">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9f2f3-229">이 메서드를 호출 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-229">to call this method.</span>
          </span>
          <span data-ttu-id="9f2f3-230">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-230">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateChar">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateChar;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="9f2f3-231">메시지 및 연결된 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-231">The message and associated data.</span>
          </span>
          <span data-ttu-id="9f2f3-232">이 구조체를 수정하지 마십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-232">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="9f2f3-233">성능상의 이유로 이 구조체는 참조로만 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-233">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="9f2f3-234">보조키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-234">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-235">이 멤버에 대한 설명은 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-235">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-236">메시지가 처리되었고 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />을 호출하지 않아야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-236">
              <see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f2f3-237">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="9f2f3-237">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9f2f3-238"><xref:System.Windows.Interop.HwndHost> 인스턴스가 <xref:System.Windows.Interop.IKeyboardInputSink> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9f2f3-238">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected virtual bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TabIntoCore(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="9f2f3-239">포커스를 첫 번째 또는 마지막 탭 정지로 설정해야 하는지 여부를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-239">Specifies whether focus should be set to the first or the last tab stop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-240">싱크의 첫 번째 또는 마지막 탭 정지에 포커스를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-240">Sets focus on either the first tab stop or the last tab stop of the sink.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-241">항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-241">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateAcceleratorCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateAcceleratorCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateAcceleratorCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateAcceleratorCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="9f2f3-242">메시지 및 연결된 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-242">The message and associated data.</span>
          </span>
          <span data-ttu-id="9f2f3-243">이 구조체를 수정하지 마십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-243">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="9f2f3-244">성능상의 이유로 이 구조체는 참조로만 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-244">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="9f2f3-245">보조키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-245">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-246">keydown 메시지 수준에서 키보드 입력을 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-246">Processes keyboard input at the keydown message level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-247">항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-247">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateCharCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateCharCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateCharCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateCharCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateCharCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="9f2f3-248">메시지 및 연결된 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-248">The message and associated data.</span>
          </span>
          <span data-ttu-id="9f2f3-249">이 구조체를 수정하지 마십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-249">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="9f2f3-250">성능상의 이유로 이 구조체는 참조로만 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-250">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="9f2f3-251">보조키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-251">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-252">
            <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> 메서드가 호출되기 전에 WM_CHAR, WM_SYSCHAR, WM_DEADCHAR 및 WM_SYSDEADCHAR 입력 메시지를 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-252">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-253">항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-253">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateWindowPos">
      <MemberSignature Language="C#" Value="public void UpdateWindowPos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateWindowPos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.UpdateWindowPos" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateWindowPos ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateWindowPos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9f2f3-254">요소의 현재 상태를 반영하도록 자식 창의 크기, 표시 여부 및 위치를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-254">Updates the child window's size, visibility, and position to reflect the current state of the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-255">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-255">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr WndProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int WndProc(native int hwnd, int32 msg, native int wParam, native int lParam, bool&amp; handled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function WndProc (hwnd As IntPtr, msg As Integer, wParam As IntPtr, lParam As IntPtr, ByRef handled As Boolean) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, bool % handled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wParam" Type="System.IntPtr" />
        <Parameter Name="lParam" Type="System.IntPtr" />
        <Parameter Name="handled" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="9f2f3-256">호스팅된 창의 창 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-256">The window handle of the hosted window.</span>
          </span>
        </param>
        <param name="msg">
          <span data-ttu-id="9f2f3-257">수행 대상이 되는 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-257">The message to act upon.</span>
          </span>
        </param>
        <param name="wParam">
          <span data-ttu-id="9f2f3-258">메시지 처리에 관련된 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-258">Information that may be relevant to handling the message.</span>
          </span>
          <span data-ttu-id="9f2f3-259">이 정보는 일반적으로 플래그와 같이 소량의 정보를 저장하는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-259">This is typically used to store small pieces of information, such as flags.</span>
          </span>
        </param>
        <param name="lParam">
          <span data-ttu-id="9f2f3-260">메시지 처리에 관련된 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-260">Information that may be relevant to handling the message.</span>
          </span>
          <span data-ttu-id="9f2f3-261">이 정보는 일반적으로 개체를 참조하는 데 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-261">This is typically used to reference an object.</span>
          </span>
        </param>
        <param name="handled">
          <span data-ttu-id="9f2f3-262">이벤트 결과가 처리된 것으로 표시되는지 여부입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-262">Whether events resulting should be marked handled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f2f3-263">파생 클래스에서 재정의할 때 호스팅된 자식 창의 창 프로세스(핸들)에 액세스합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-263">When overridden in a derived class, accesses the window process (handle) of the hosted child window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f2f3-264">자식 창의 창 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-264">The window handle of the child window.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f2f3-265">이 형식 또는 멤버 사용할 수 없는 경우 인터넷 보안 영역에서</span><span class="sxs-lookup"><span data-stu-id="9f2f3-265">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9f2f3-266">이 메서드를 호출 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-266">to call this method.</span>
          </span>
          <span data-ttu-id="9f2f3-267">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9f2f3-267">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9f2f3-268">기본 구현에서는 <see cref="T:System.Windows.Interop.HwndHost" /> 실제 프로세스를 반환 하지 않지만 돌아갑니다 <c>IntPtr.Zero</c> 안전한 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9f2f3-268">The base implementation in <see cref="T:System.Windows.Interop.HwndHost" /> does not return a practical process, but will return <c>IntPtr.Zero</c> as a failsafe.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>