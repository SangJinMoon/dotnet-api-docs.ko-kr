<Type Name="HwndSourceParameters" FullName="System.Windows.Interop.HwndSourceParameters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fd39fbaa3cffbc1fbaa025d41e437b867e0fd33" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36503972" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct HwndSourceParameters" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HwndSourceParameters extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndSourceParameters" />
  <TypeSignature Language="VB.NET" Value="Public Structure HwndSourceParameters" />
  <TypeSignature Language="C++ CLI" Value="public value class HwndSourceParameters" />
  <TypeSignature Language="F#" Value="type HwndSourceParameters = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains the parameters that are used to create an <see cref="T:System.Windows.Interop.HwndSource" /> object using the <see cref="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" /> constructor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구조에만 사용 됩니다는 <xref:System.Windows.Interop.HwndSource> 개체 생성자 호출 합니다.  
  
 해당 값이이 구조에서 설정한 속성에 직접 노출 되지 않으므로 <xref:System.Windows.Interop.HwndSource> 경우 인스턴스는 <xref:System.Windows.Interop.HwndSource> 생성 됩니다. 그러나의 값은 <xref:System.Windows.Interop.HwndSourceParameters> 구조 일반적으로 영향을 일반 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 특정 호스팅된 개체에 존재할 수 있는 "너비" 및 "높이"와 같은 속성 및 해당 [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]합니다.  
  
> [!IMPORTANT]
>  기본 (매개 변수가 없는) 생성자를 사용 하 여이 구조체의 인스턴스를 생성 하지 마십시오. <xref:System.Windows.Interop.HwndSourceParameters> 에 결과 기본 생성자가 만든 인스턴스입니다 <xref:System.Windows.Interop.HwndSourceParameters> 할당할 수 없습니다는 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (경우에는 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> 속성에서 설정할 수 있는 것 같음). 에 대 한 매개 변수로 이러한 인스턴스가 적용 되었는지는 <xref:System.Windows.Interop.HwndSource> 결과 생성자 <xref:System.Windows.Interop.HwndSource> 창을 표시할 수 없습니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class. Do not use the default constructor for <see cref="T:System.Windows.Interop.HwndSourceParameters" />; see Remarks.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  기본 (매개 변수가 없는) 생성자를 사용 하 여이 구조체의 인스턴스를 생성 하지 마십시오. <xref:System.Windows.Interop.HwndSourceParameters> 에 결과 기본 생성자가 만든 인스턴스입니다 <xref:System.Windows.Interop.HwndSourceParameters> 할당할 수 없습니다는 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (경우에는 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> 속성에서 설정할 수 있는 것 같음). 에 대 한 매개 변수로 이러한 인스턴스가 적용 되었는지는 <xref:System.Windows.Interop.HwndSource> 결과 생성자 <xref:System.Windows.Interop.HwndSource> 창을 표시할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSourceParameters (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSourceParameters(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSourceParameters : string -&gt; System.Windows.Interop.HwndSourceParameters" Usage="new System.Windows.Interop.HwndSourceParameters name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The window's name.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class with a specified window name.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSourceParameters (string name, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSourceParameters(System::String ^ name, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSourceParameters : string * int * int -&gt; System.Windows.Interop.HwndSourceParameters" Usage="new System.Windows.Interop.HwndSourceParameters (name, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">The window's name.</param>
        <param name="width">The window's width, in pixels.</param>
        <param name="height">The window's height, in pixels.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class with a specified window name and initial size.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 0 (영)를 통과 하지 못한는 `width` 또는 `height` 매개 변수입니다. 하지만 메서드가 최종적으로 성공, 0을 전달 하는 경우에에 성능이 크게 저하 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="AcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public bool AcquireHwndFocusInMenuMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcquireHwndFocusInMenuMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcquireHwndFocusInMenuMode : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value that determines whether to acquire Win32 focus for the WPF containing window when an <see cref="T:System.Windows.Interop.HwndSource" /> is created.</summary>
        <value>사용자가 메뉴를 조작하는 경우 창이 포함된 WPF에 대해 Win32 포커스를 가져오려면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다. <see cref="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />의 값을 사용하려면 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustSizingForNonClientArea">
      <MemberSignature Language="C#" Value="public bool AdjustSizingForNonClientArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustSizingForNonClientArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.AdjustSizingForNonClientArea" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustSizingForNonClientArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustSizingForNonClientArea { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AdjustSizingForNonClientArea : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.AdjustSizingForNonClientArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether to include the nonclient area for sizing.</summary>
        <value>레이아웃 관리자 크기 조정 논리에 비클라이언트 영역을 포함하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Window> 이 매개 변수를 설정 하는 클래스 `true` 의 일부로이 구조를 내부적으로 사용 하는 경우 해당 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 창 만들기 프로세스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.PositionX" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.PositionY" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determines whether this structure is equal to a specified structure.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="hwndSourceParameters.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The objects to be tested for equality.</param>
        <summary>Determines whether this structure is equal to a specified object.</summary>
        <returns>
          <see langword="true" /> if the comparison is equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현은 정확한 값이 동일한 구조를 모두의 모든 멤버 (공용 및 개인)을 확인합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Interop.HwndSourceParameters obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Interop.HwndSourceParameters obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Interop::HwndSourceParameters obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Interop.HwndSourceParameters -&gt; bool" Usage="hwndSourceParameters.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="obj">The structure to be tested for equality.</param>
        <summary>Determines whether this structure is equal to a specified <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</summary>
        <returns>
          <see langword="true" /> if the structures are equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현은 정확한 값이 동일한 구조를 모두의 모든 멤버 (공용 및 개인)을 확인합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedWindowStyle">
      <MemberSignature Language="C#" Value="public int ExtendedWindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExtendedWindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.ExtendedWindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedWindowStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExtendedWindowStyle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedWindowStyle : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.ExtendedWindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the extended [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] styles for the window.</summary>
        <value>확장 창 스타일입니다. [CreateWindowEx]를 참조 하십시오. (http://go.microsoft.com/fwlink/?LinkId=98462) 이러한 스타일의 목록에 대 한 합니다. 기본값은 0(확장된 창 스타일 없음)입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="hwndSourceParameters.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this <see cref="T:System.Windows.Interop.HwndSourceParameters" /> instance.</summary>
        <returns>A 32-bit signed integer hash code.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현은 GetHashCode의 개체 구현을 사용합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAssignedSize">
      <MemberSignature Language="C#" Value="public bool HasAssignedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAssignedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.HasAssignedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAssignedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAssignedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAssignedSize : bool" Usage="System.Windows.Interop.HwndSourceParameters.HasAssignedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether a size was assigned.</summary>
        <value>창 크기가 할당되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />이며, 제공된 높이와 너비를 사용하여 구조체를 만들지 않은 경우 값은 <see langword="true" />가 됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 크기를 할당 하지 않은 경우 창에 기본 크기입니다.  
  
 에 대 한 호출이 <xref:System.Windows.Interop.HwndSourceParameters.SetSize%2A> 또는 설정 <xref:System.Windows.Interop.HwndSourceParameters.Width%2A> 또는 <xref:System.Windows.Interop.HwndSourceParameters.Height%2A> 모든 생성 되 고이 속성에서 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates the height of the window.</summary>
        <value>창의 높이(장치 픽셀)입니다. 기본값은 1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직사각형 화면 측정값을 사용 하는 대부분의 메서드와 달리 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], 일반적인 장치 독립적 단위 장치 픽셀 단위의이 창 크기를 지정 합니다. 해당 내용에 창 크기를 조정 해야 할 경우 설정 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 를 `true`합니다.  
  
 설정 하지 않으면 <xref:System.Windows.Interop.HwndSourceParameters.Height%2A> 를 0 (영)입니다. 이렇게 렌더링에 성능이 크게 저하를 발생 시킵니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HwndSourceHook">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.HwndSourceHook HwndSourceHook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.HwndSourceHook HwndSourceHook" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.HwndSourceHook" />
      <MemberSignature Language="VB.NET" Value="Public Property HwndSourceHook As HwndSourceHook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::HwndSourceHook ^ HwndSourceHook { System::Windows::Interop::HwndSourceHook ^ get(); void set(System::Windows::Interop::HwndSourceHook ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HwndSourceHook : System.Windows.Interop.HwndSourceHook with get, set" Usage="System.Windows.Interop.HwndSourceParameters.HwndSourceHook" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSourceHook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the message hook for the window.</summary>
        <value>창의 메시지 후크입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메시지 후크 하기 전에 설정 되어 `CreateWindow` 모든 창 만들기 메시지를 받을 수 있도록 라고 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Interop.HwndSourceParameters a, System.Windows.Interop.HwndSourceParameters b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Interop.HwndSourceParameters a, valuetype System.Windows.Interop.HwndSourceParameters b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.op_Equality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As HwndSourceParameters, b As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Interop::HwndSourceParameters a, System::Windows::Interop::HwndSourceParameters b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Interop.HwndSourceParameters * System.Windows.Interop.HwndSourceParameters -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Interop.HwndSourceParameters" />
        <Parameter Name="b" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="a">The first <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</param>
        <param name="b">The second <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</param>
        <summary>Determines whether an <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure is equal to another <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</summary>
        <returns>
          <see langword="true" /> if the structures are equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현에서는 호출에서 <xref:System.Windows.Interop.HwndSourceParameters.Equals%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Interop.HwndSourceParameters a, System.Windows.Interop.HwndSourceParameters b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Interop.HwndSourceParameters a, valuetype System.Windows.Interop.HwndSourceParameters b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.op_Inequality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As HwndSourceParameters, b As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Interop::HwndSourceParameters a, System::Windows::Interop::HwndSourceParameters b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Interop.HwndSourceParameters * System.Windows.Interop.HwndSourceParameters -&gt; bool" Usage="System.Windows.Interop.HwndSourceParameters.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Interop.HwndSourceParameters" />
        <Parameter Name="b" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="a">The first <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</param>
        <param name="b">The second <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</param>
        <summary>Determines whether an <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure is not equal to another <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</summary>
        <returns>
          <see langword="true" /> if the structures are not equal; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현에서는 호출에서 <xref:System.Windows.Interop.HwndSourceParameters.Equals%2A> 메서드 결과 반전 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindow">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.ParentWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindow As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindow { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindow : nativeint with get, set" Usage="System.Windows.Interop.HwndSourceParameters.ParentWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the window handle (HWND) of the parent for the created window.</summary>
        <value>부모 창의 HWND입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="PositionX">
      <MemberSignature Language="C#" Value="public int PositionX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.PositionX" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionX As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionX { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PositionX : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.PositionX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the left-edge position of the window.</summary>
        <value>창의 왼쪽 가장자리 위치입니다. 기본값은에 의해 처리 되는 CW_USEDEFAULT <c>CreateWindow</c>합니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="PositionY">
      <MemberSignature Language="C#" Value="public int PositionY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.PositionY" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionY As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionY { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PositionY : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.PositionY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the upper-edge position of the window.</summary>
        <value>창의 위쪽 가장자리 위치입니다. 기본값은에 의해 처리 되는 CW_USEDEFAULT <c>CreateWindow</c>합니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="RestoreFocusMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.RestoreFocusMode RestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.RestoreFocusMode RestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::RestoreFocusMode RestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberSignature Language="F#" Value="member this.RestoreFocusMode : System.Windows.Input.RestoreFocusMode with get, set" Usage="System.Windows.Interop.HwndSourceParameters.RestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets how WPF handles restoring focus to the window.</summary>
        <value>WPF에서 창으로의 포커스 복원을 처리하는 방법을 지정하는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WPF는 자동으로 하지 않는 한 창에 포커스를 복원 하려고 <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A> 로 설정 된 <xref:System.Windows.Input.RestoreFocusMode.None>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPosition">
      <MemberSignature Language="C#" Value="public void SetPosition (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPosition(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPosition (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPosition(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.SetPosition : int * int -&gt; unit" Usage="hwndSourceParameters.SetPosition (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">The position of the left edge of the window.</param>
        <param name="y">The position of the upper edge of the window.</param>
        <summary>Sets the values that are used for the screen position of the window for the <see cref="T:System.Windows.Interop.HwndSource" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="SetSize">
      <MemberSignature Language="C#" Value="public void SetSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSize(int width, int height);" />
      <MemberSignature Language="F#" Value="member this.SetSize : int * int -&gt; unit" Usage="hwndSourceParameters.SetSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">The width of the window, in device pixels.</param>
        <param name="height">The height of the window, in device pixels.</param>
        <summary>Sets the values that are used for the window size of the <see cref="T:System.Windows.Interop.HwndSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직사각형 화면 측정값을 사용 하는 대부분의 메서드와 달리 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]을 장치 픽셀에, 일반적인 장치 독립적 단위에 없는이 창 크기를 지정 합니다. 해당 내용에 창 크기를 조정 해야 할 경우 설정 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 를 `true`합니다.  
  
 에 대 한 0 (영)를 통과 하지 못한는 `width` 또는 `height` 매개 변수입니다. 메서드가 0을 전달 하는 경우에 결국 성공 하지만는 성능이 저하 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.Height" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.Width" />
      </Docs>
    </Member>
    <Member MemberName="TreatAncestorsAsNonClientArea">
      <MemberSignature Language="C#" Value="public bool TreatAncestorsAsNonClientArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatAncestorsAsNonClientArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.TreatAncestorsAsNonClientArea" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatAncestorsAsNonClientArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatAncestorsAsNonClientArea { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatAncestorsAsNonClientArea : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.TreatAncestorsAsNonClientArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the parent windows of the <see cref="T:System.Windows.Interop.HwndSource" /> should be considered the non-client area of the window during layout passes.</summary>
        <value>
          <see cref="T:System.Windows.Interop.HwndSource" />의 부모 창이 레이아웃 과정 중에 창의 비클라이언트 영역으로 간주되어야 하면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TreatAsInputRoot">
      <MemberSignature Language="C#" Value="public bool TreatAsInputRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatAsInputRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.TreatAsInputRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatAsInputRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatAsInputRoot { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatAsInputRoot : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.TreatAsInputRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Interop.HwndSource" /> should receive window messages raised by the message pump via the <see cref="T:System.Windows.Interop.ComponentDispatcher" />.</summary>
        <value>
          <see cref="T:System.Windows.Interop.HwndSource" />에서 <see cref="T:System.Windows.Interop.ComponentDispatcher" />를 통해 메시지 펌프가 발생시킨 창 메시지를 받아야 하는 경우 <see langword="true" />이고, 그렇지 않으면, <see langword="false" />입니다.  <see cref="T:System.Windows.Interop.HwndSource" />가 최상위 창에 해당하는 경우 기본값이<see langword="true" />이며, 그렇지 않으면 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelOpacity">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesPerPixelOpacity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelOpacity { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsesPerPixelOpacity : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that declares whether the per-pixel opacity of the source window content is respected.</summary>
        <value>픽셀별 불투명도를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 픽셀 별 불투명도 사용 하 여 시스템 더 이상 비클라이언트 영역을 그립니다.  
  
 불투명도 창을 바탕 화면에서 그릴 때 사용 됩니다 (최종 렌더링 단계를 나타내며와 같은 속성 값에 검토자도 표시 되지 않습니다 <xref:System.Windows.UIElement.Opacity%2A>).  
  
 <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> 최상위 창에만 적용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelTransparency">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesPerPixelTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsesPerPixelTransparency : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.UsesPerPixelTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that declares whether the per-pixel transparency of the source window content is respected.</summary>
        <value>픽셀당 투명도를 사용하면 <see langword="true" />, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates the width of the window.</summary>
        <value>창 너비(장치 픽셀)입니다. 기본값은 1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사각형 화면 측정값을 사용 하는 대부분의 메서드와 달리 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]을 장치 픽셀에, 일반적인 장치 독립적 단위에 없는이 창의 크기를 지정 합니다. 해당 내용에 창 크기를 조정 해야 할 경우 설정 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> 를 `true`합니다.  
  
 설정 하지 않으면 <xref:System.Windows.Interop.HwndSourceParameters.Width%2A> 를 0 (영)입니다. 이렇게 하면 성능이 저하 렌더링을 사용 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WindowClassStyle">
      <MemberSignature Language="C#" Value="public int WindowClassStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowClassStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowClassStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowClassStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowClassStyle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowClassStyle : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.WindowClassStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] class style for the window.</summary>
        <value>창 클래스 스타일입니다. [창 클래스 스타일]를 참조 하십시오. (http://go.microsoft.com/fwlink/?LinkId=178417) 자세한 정보에 대 한 합니다. 기본값은 0(창 클래스 스타일 없음)입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="WindowName">
      <MemberSignature Language="C#" Value="public string WindowName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WindowName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowName" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WindowName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WindowName : string with get, set" Usage="System.Windows.Interop.HwndSourceParameters.WindowName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the window.</summary>
        <value>창 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  기본 (매개 변수가 없는) 생성자를 사용 하 여이 구조체의 인스턴스를 생성 하지 마십시오. <xref:System.Windows.Interop.HwndSourceParameters> 에 결과 기본 생성자가 만든 인스턴스입니다 <xref:System.Windows.Interop.HwndSourceParameters> 할당할 수 없습니다는 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (경우에는 <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> 속성에서 설정할 수 있는 것 같음). 에 대 한 매개 변수로 이러한 인스턴스가 적용 되었는지는 <xref:System.Windows.Interop.HwndSource> 결과 생성자 <xref:System.Windows.Interop.HwndSource> 창을 표시할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public int WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowStyle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the style for the window.</summary>
        <value>창 스타일입니다. [CreateWindowEx]를 참조 하십시오. (http://go.microsoft.com/fwlink/?LinkId=98462) 스타일 비트의 전체 목록은 대 한 함수입니다. 기본값: WS_VISIBLE, WS_CAPTION, WS_SYSMENU, WS_THICKFRAME, WS_MINIMIZEBOX, WS_MAXIMIZEBOX, WS_CLIPCHILDREN</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 구조를 만들 때 다음 비트가 설정 된: WS_VISIBLE; WS_CAPTION; WS_SYSMENU; WS_THICKFRAME; WS_MINIMIZEBOX; WS_MAXIMIZEBOX; WS_CLIPCHILDREN 합니다.  
  
 표준 창에 대 한 WS_CLIPCHILDREN 비트를 설정 해야 합니다. 이 스타일 비트; 자체 코드에 적용 됩니다. 이 플래그를 설정할 경우, WPF 제공 하는 값에 추가 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
  </Members>
</Type>