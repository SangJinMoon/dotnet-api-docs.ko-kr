<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ComponentDispatcher.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58c067685c2dbbcf8aa6b9cb1639c9f41d07b7466.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c067685c2dbbcf8aa6b9cb1639c9f41d07b7466</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.</source>
          <target state="translated">상호 운용 시나리오에서 Win32와 WPF 간에 메시지 펌프의 공유 제어를 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>Although the class itself is static, all members of <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher&gt;</ph> are specific to a particular thread.</source>
          <target state="translated">클래스 자체는 정적 이지만의 모든 구성원 <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher&gt;</ph> 특정 스레드에 해당 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>For example, if you examine the value of <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A&gt;</ph> on two different threads, you might get different values.</source>
          <target state="translated">값을 검사 하는 경우 등 <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A&gt;</ph> 두 개의 서로 다른 스레드에서 값이 다른 표시 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>The methods are static but they are backed by per-thread data structures.</source>
          <target state="translated">메서드는 정적 하지만 스레드별 데이터 구조에 의해 백업 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>The static methods allow singleton access but the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher&gt;</ph> is sorting out the appropriate per-thread operations.</source>
          <target state="translated">정적 메서드는 singleton 액세스를 허용 하지만 <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher&gt;</ph> 적절 한 스레드 작업을 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>The owner of the message pump is defined by the code that calls the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> function  <bpt id="p1">[</bpt>GetMessage<ept id="p1">](http://msdn.microsoft.com/library/ms644936.aspx)</ept>.</source>
          <target state="translated">메시지 펌프의 소유자는 호출 하는 코드에 의해 정의 됩니다는 <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> 함수 <bpt id="p1">[</bpt>GetMessage<ept id="p1">](http://msdn.microsoft.com/library/ms644936.aspx)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>The owner calls <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A&gt;</ph> for every keyboard message.</source>
          <target state="translated">소유자 호출 <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A&gt;</ph> 모든 키보드 메시지에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&gt;</ph> event with the messages contained in the event data.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&gt;</ph> 이벤트 메시지와 함께 데이터 이벤트를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>If that event is not handled, the owner raises the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&gt;</ph> event with the messages contained in the event argument.</source>
          <target state="translated">해당 이벤트가 처리 되지 않은 경우에 소유자 발생는 <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&gt;</ph> 이벤트 메시지와 함께 이벤트에 포함 된 인수입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>Only keyboard messages are supported.</source>
          <target state="translated">키보드 메시지에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>to access any member of this class.</source>
          <target state="translated">이 클래스의 모든 멤버에 액세스할 수</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ComponentDispatcher">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
          <source>Gets the last message that was raised.</source>
          <target state="translated">마지막으로 발생한 메시지를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
          <source>The last message.</source>
          <target state="translated">마지막 메시지입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
          <source>to access any member of this class.</source>
          <target state="translated">이 클래스의 모든 멤버에 액세스할 수</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
          <source>Occurs when a thread becomes modal.</source>
          <target state="translated">스레드가 모달이 될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
          <source>to access any member of this class.</source>
          <target state="translated">이 클래스의 모든 멤버에 액세스할 수</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
          <source>Gets a value that indicates whether the thread is modal.</source>
          <target state="translated">스레드가 모달인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the thread is modal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스레드가 모달이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
          <source>to access any member of this class.</source>
          <target state="translated">이 클래스의 모든 멤버에 액세스할 수</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
          <source>Occurs when a modal thread becomes nonmodal.</source>
          <target state="translated">모달 스레드가 모달이 아닌 스레드가 될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
          <source>to access any member of this class.</source>
          <target state="translated">이 클래스의 모든 멤버에 액세스할 수</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.PopModal">
          <source>Called to indicate that a modal thread is no longer modal.</source>
          <target state="translated">모달 스레드가 더 이상 모달이 아님을 나타내기 위해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.PopModal">
          <source>to access any member of this class.</source>
          <target state="translated">이 클래스의 모든 멤버에 액세스할 수</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.PopModal">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.PushModal">
          <source>Called to indicate that the thread is modal.</source>
          <target state="translated">스레드가 모달임을 나타내기 위해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.PushModal">
          <source>All members of this class require <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph> permission.</source>
          <target state="translated">이 클래스의 모든 구성원이 필요한 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph> 권한.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
          <source>Called to indicate that a thread is idle.</source>
          <target state="translated">스레드가 유휴 상태임을 나타내기 위해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
          <source>to access any member of this class.</source>
          <target state="translated">이 클래스의 모든 멤버에 액세스할 수</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>The message and its associated data.</source>
          <target state="translated">메시지 및 관련 데이터입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>Indicates that a new message is available for possible handling.</source>
          <target state="translated">새 메시지를 가능한 처리에 사용할 수 있음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if one of the modules listening to the message loop processed the message.</source>
          <target state="translated">메시지 루프를 수신 대기하는 모듈 중 하나에서 메시지가 처리된 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>The owner of the message loop should ignore the message.</source>
          <target state="translated">메시지 루프의 소유자는 메시지를 무시해야 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph>, if the message was not processed.</source>
          <target state="translated">메시지가 처리되지 않았으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>In this case, the owner of the message pump should call the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> function <bpt id="p1">[</bpt>TranslateMessage<ept id="p1">](http://msdn.microsoft.com/library/ms644955.aspx)</ept> followed by <bpt id="p2">[</bpt>DispatchMessage<ept id="p2">](http://msdn.microsoft.com/library/ms644934.aspx)</ept>.</source>
          <target state="translated">이 경우 메시지 펌프의 소유자는 <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> 함수 <bpt id="p1">[</bpt>TranslateMessage<ept id="p1">](http://msdn.microsoft.com/library/ms644955.aspx)</ept>와 <bpt id="p2">[</bpt>DispatchMessage<ept id="p2">](http://msdn.microsoft.com/library/ms644934.aspx)</ept>를 차례로 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>The owner of the message pump should call this method for every keyboard message.</source>
          <target state="translated">메시지 펌프의 소유자는 모든 키보드 메시지에 대해이 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>to access any member of this class.</source>
          <target state="translated">이 클래스의 모든 멤버에 액세스할 수</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
          <source>Occurs when the message pump receives a keyboard message.</source>
          <target state="translated">메시지 펌프가 키보드 메시지를 받을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
          <source>to access any member of this class.</source>
          <target state="translated">이 클래스의 모든 멤버에 액세스할 수</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
          <source>Occurs when the thread is idle.</source>
          <target state="translated">스레드가 유휴 상태일 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
          <source>If there are no messages in the queue, then the idle state announced by the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle&gt;</ph> event is an efficient time to do processing.</source>
          <target state="translated">큐에 메시지가 없는 경우 유휴 상태에서이 알릴는 <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle&gt;</ph> 이벤트에서 효율적으로 처리를 수행할 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
          <source>to access any member of this class.</source>
          <target state="translated">이 클래스의 모든 멤버에 액세스할 수</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
          <source>Occurs when the message pump receives a keyboard message.</source>
          <target state="translated">메시지 펌프가 키보드 메시지를 받을 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
          <source>This event should be raised after <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&gt;</ph>, if that event is not handled.</source>
          <target state="translated">이 이벤트가 발생 한 후 <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&gt;</ph>해당 이벤트가 처리 되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
          <source>to access any member of this class.</source>
          <target state="translated">이 클래스의 모든 멤버에 액세스할 수</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>