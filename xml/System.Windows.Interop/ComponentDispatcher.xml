<Type Name="ComponentDispatcher" FullName="System.Windows.Interop.ComponentDispatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c067685c2dbbcf8aa6b9cb1639c9f41d07b7466" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30658077" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ComponentDispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed ComponentDispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.ComponentDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentDispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentDispatcher abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6ad8d-101">상호 운용 시나리오에서 Win32와 WPF 간에 메시지 펌프의 공유 제어를 사용하도록 설정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ad8d-101">Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ad8d-102">클래스 자체는 정적 이지만의 모든 구성원 <xref:System.Windows.Interop.ComponentDispatcher> 특정 스레드에 해당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-102">Although the class itself is static, all members of <xref:System.Windows.Interop.ComponentDispatcher> are specific to a particular thread.</span></span> <span data-ttu-id="6ad8d-103">값을 검사 하는 경우 등 <xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A> 두 개의 서로 다른 스레드에서 값이 다른 표시 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-103">For example, if you examine the value of <xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A> on two different threads, you might get different values.</span></span>  
  
 <span data-ttu-id="6ad8d-104">메서드는 정적 하지만 스레드별 데이터 구조에 의해 백업 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-104">The methods are static but they are backed by per-thread data structures.</span></span>  <span data-ttu-id="6ad8d-105">정적 메서드는 singleton 액세스를 허용 하지만 <xref:System.Windows.Interop.ComponentDispatcher> 적절 한 스레드 작업을 정렬 합니다.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-105">The static methods allow singleton access but the <xref:System.Windows.Interop.ComponentDispatcher> is sorting out the appropriate per-thread operations.</span></span>  
  
 <span data-ttu-id="6ad8d-106">메시지 펌프의 소유자는 호출 하는 코드에 의해 정의 됩니다는 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 함수 [GetMessage](http://msdn.microsoft.com/library/ms644936.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-106">The owner of the message pump is defined by the code that calls the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] function  [GetMessage](http://msdn.microsoft.com/library/ms644936.aspx).</span></span> <span data-ttu-id="6ad8d-107">소유자 호출 <xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A> 모든 키보드 메시지에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-107">The owner calls <xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A> for every keyboard message.</span></span> <span data-ttu-id="6ad8d-108">이 메서드는 <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage> 이벤트 메시지와 함께 데이터 이벤트를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-108">This method raises the <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage> event with the messages contained in the event data.</span></span> <span data-ttu-id="6ad8d-109">해당 이벤트가 처리 되지 않은 경우에 소유자 발생는 <xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage> 이벤트 메시지와 함께 이벤트에 포함 된 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-109">If that event is not handled, the owner raises the <xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage> event with the messages contained in the event argument.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ad8d-110">키보드 메시지에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-110">Only keyboard messages are supported.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="6ad8d-111">이 클래스의 모든 멤버에 액세스할 수</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ad8d-111">to access any member of this class.</span>
      </span>
      <span data-ttu-id="6ad8d-112">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="6ad8d-112">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      </span>
    </permission>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
  </Docs>
  <Members>
    <Member MemberName="CurrentKeyboardMessage">
      <MemberSignature Language="C#" Value="public static System.Windows.Interop.MSG CurrentKeyboardMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Interop.MSG CurrentKeyboardMessage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentKeyboardMessage As MSG" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Interop::MSG CurrentKeyboardMessage { System::Windows::Interop::MSG get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.MSG</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ad8d-113">마지막으로 발생한 메시지를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-113">Gets the last message that was raised.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ad8d-114">마지막 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-114">The last message.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ad8d-115">이 클래스의 모든 멤버에 액세스할 수</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-115">to access any member of this class.</span>
          </span>
          <span data-ttu-id="6ad8d-116">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
      </Docs>
    </Member>
    <Member MemberName="EnterThreadModal">
      <MemberSignature Language="C#" Value="public static event EventHandler EnterThreadModal;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnterThreadModal" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event EnterThreadModal As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ EnterThreadModal;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ad8d-117">스레드가 모달이 될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-117">Occurs when a thread becomes modal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ad8d-118">이 클래스의 모든 멤버에 액세스할 수</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-118">to access any member of this class.</span>
          </span>
          <span data-ttu-id="6ad8d-119">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-119">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadModal">
      <MemberSignature Language="C#" Value="public static bool IsThreadModal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsThreadModal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsThreadModal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsThreadModal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ad8d-120">스레드가 모달인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-120">Gets a value that indicates whether the thread is modal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ad8d-121">스레드가 모달이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-121">
              <see langword="true" /> if the thread is modal; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ad8d-122">이 클래스의 모든 멤버에 액세스할 수</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-122">to access any member of this class.</span>
          </span>
          <span data-ttu-id="6ad8d-123">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-123">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="LeaveThreadModal">
      <MemberSignature Language="C#" Value="public static event EventHandler LeaveThreadModal;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LeaveThreadModal" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LeaveThreadModal As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ LeaveThreadModal;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ad8d-124">모달 스레드가 모달이 아닌 스레드가 될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-124">Occurs when a modal thread becomes nonmodal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ad8d-125">이 클래스의 모든 멤버에 액세스할 수</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-125">to access any member of this class.</span>
          </span>
          <span data-ttu-id="6ad8d-126">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-126">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="PopModal">
      <MemberSignature Language="C#" Value="public static void PopModal ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PopModal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PopModal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PopModal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ad8d-127">모달 스레드가 더 이상 모달이 아님을 나타내기 위해 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-127">Called to indicate that a modal thread is no longer modal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ad8d-128">이 클래스의 모든 멤버에 액세스할 수</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-128">to access any member of this class.</span>
          </span>
          <span data-ttu-id="6ad8d-129">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-129">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal" />
      </Docs>
    </Member>
    <Member MemberName="PushModal">
      <MemberSignature Language="C#" Value="public static void PushModal ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushModal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushModal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushModal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ad8d-130">스레드가 모달임을 나타내기 위해 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-130">Called to indicate that the thread is modal.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ad8d-131">이 클래스의 모든 구성원이 필요한 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 권한.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-131">All members of this class require <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permission.</span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal" />
      </Docs>
    </Member>
    <Member MemberName="RaiseIdle">
      <MemberSignature Language="C#" Value="public static void RaiseIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RaiseIdle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseIdle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ad8d-132">스레드가 유휴 상태임을 나타내기 위해 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-132">Called to indicate that a thread is idle.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ad8d-133">이 클래스의 모든 멤버에 액세스할 수</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-133">to access any member of this class.</span>
          </span>
          <span data-ttu-id="6ad8d-134">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-134">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle" />
      </Docs>
    </Member>
    <Member MemberName="RaiseThreadMessage">
      <MemberSignature Language="C#" Value="public static bool RaiseThreadMessage (ref System.Windows.Interop.MSG msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RaiseThreadMessage(valuetype System.Windows.Interop.MSG&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RaiseThreadMessage (ByRef msg As MSG) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RaiseThreadMessage(System::Windows::Interop::MSG % msg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="6ad8d-135">메시지 및 관련 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-135">The message and its associated data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ad8d-136">새 메시지를 가능한 처리에 사용할 수 있음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-136">Indicates that a new message is available for possible handling.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ad8d-137">메시지 루프를 수신 대기하는 모듈 중 하나에서 메시지가 처리된 경우 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-137">
              <see langword="true" />, if one of the modules listening to the message loop processed the message.</span>
          </span>
          <span data-ttu-id="6ad8d-138">메시지 루프의 소유자는 메시지를 무시해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-138">The owner of the message loop should ignore the message.</span>
          </span>
          <span data-ttu-id="6ad8d-139">메시지가 처리되지 않았으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-139">
              <see langword="false" />, if the message was not processed.</span>
          </span>
          <span data-ttu-id="6ad8d-140">이 경우 메시지 펌프의 소유자는 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 함수 [TranslateMessage](http://msdn.microsoft.com/library/ms644955.aspx)와 [DispatchMessage](http://msdn.microsoft.com/library/ms644934.aspx)를 차례로 호출해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-140">In this case, the owner of the message pump should call the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] function [TranslateMessage](http://msdn.microsoft.com/library/ms644955.aspx) followed by [DispatchMessage](http://msdn.microsoft.com/library/ms644934.aspx).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ad8d-141">메시지 펌프의 소유자는 모든 키보드 메시지에 대해이 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-141">The owner of the message pump should call this method for every keyboard message.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ad8d-142">이 클래스의 모든 멤버에 액세스할 수</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-142">to access any member of this class.</span>
          </span>
          <span data-ttu-id="6ad8d-143">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-143">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      </Docs>
    </Member>
    <Member MemberName="ThreadFilterMessage">
      <MemberSignature Language="C#" Value="public static event System.Windows.Interop.ThreadMessageEventHandler ThreadFilterMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Interop.ThreadMessageEventHandler ThreadFilterMessage" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadFilterMessage As ThreadMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Interop::ThreadMessageEventHandler ^ ThreadFilterMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.ThreadMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ad8d-144">메시지 펌프가 키보드 메시지를 받을 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-144">Occurs when the message pump receives a keyboard message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ad8d-145">이 클래스의 모든 멤버에 액세스할 수</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-145">to access any member of this class.</span>
          </span>
          <span data-ttu-id="6ad8d-146">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-146">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      </Docs>
    </Member>
    <Member MemberName="ThreadIdle">
      <MemberSignature Language="C#" Value="public static event EventHandler ThreadIdle;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadIdle" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadIdle As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ ThreadIdle;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ad8d-147">스레드가 유휴 상태일 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-147">Occurs when the thread is idle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ad8d-148">큐에 메시지가 없는 경우 유휴 상태에서이 알릴는 <xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle> 이벤트에서 효율적으로 처리를 수행할 수는 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-148">If there are no messages in the queue, then the idle state announced by the <xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle> event is an efficient time to do processing.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ad8d-149">이 클래스의 모든 멤버에 액세스할 수</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-149">to access any member of this class.</span>
          </span>
          <span data-ttu-id="6ad8d-150">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-150">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle" />
      </Docs>
    </Member>
    <Member MemberName="ThreadPreprocessMessage">
      <MemberSignature Language="C#" Value="public static event System.Windows.Interop.ThreadMessageEventHandler ThreadPreprocessMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Interop.ThreadMessageEventHandler ThreadPreprocessMessage" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadPreprocessMessage As ThreadMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Interop::ThreadMessageEventHandler ^ ThreadPreprocessMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.ThreadMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ad8d-151">메시지 펌프가 키보드 메시지를 받을 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-151">Occurs when the message pump receives a keyboard message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ad8d-152">이 이벤트가 발생 한 후 <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>해당 이벤트가 처리 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="6ad8d-152">This event should be raised after <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>, if that event is not handled.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="6ad8d-153">이 클래스의 모든 멤버에 액세스할 수</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-153">to access any member of this class.</span>
          </span>
          <span data-ttu-id="6ad8d-154">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ad8d-154">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />
      </Docs>
    </Member>
  </Members>
</Type>