<Type Name="HtmlInputHidden" FullName="System.Web.UI.HtmlControls.HtmlInputHidden">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3914b2e387e791eae21665574ed41fd4d8397f16" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36389242" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputHidden : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputHidden extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputHidden" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputHidden&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputHidden : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackDataHandler" />
  <TypeSignature Language="F#" Value="type HtmlInputHidden = class&#xA;    inherit HtmlInputControl&#xA;    interface IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>서버의 HTML <see langword="&lt;input type=hidden&gt;" /> 요소에 프로그래밍 방식으로 액세스할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 컨트롤 내에서 사용자에 게 서 숨겨진 정보를 포함 하는 `<form>` 요소입니다. 이 정보는 웹 페이지는 서버에 다시 게시 될 때 전송 됩니다. <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 컨트롤은 제공는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange> 이벤트는 발생 시기는 <xref:System.Web.UI.HtmlControls.HtmlInputControl.Value%2A> 속성 서버에 게시 하는 값을 변경 합니다. 이 지침 집합이 사용자 지정 이벤트가 발생할 때마다 수행 하는 이벤트 처리기를 만들 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 제어 서버에 다시 게시 하는 기본 제공 방법을 제공 하지 않습니다. 와 같은 서버에 게시 지 원하는 웹 페이지에 있는 다른 컨트롤을 제공 해야 합니다는 <xref:System.Web.UI.HtmlControls.HtmlButton> 컨트롤을 컨트롤의 값을 서버에 다시 보내려고 합니다.  
  
> [!NOTE]
>  이 HTML 기능을 사용 하 여 자동으로 로드 하 고 페이지에 서버 컨트롤의 뷰 상태를 유지 하는 ASP.NET 페이지 프레임 워크입니다.  
  
 인스턴스에 대 한 초기 속성 값 목록은 <xref:System.Web.UI.HtmlControls.HtmlInputHidden>, 참조는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 컨트롤을 서버에 게시 하는 웹 페이지에 정보를 저장 합니다.  
  
 [!code-aspx-csharp[Classic HtmlInputHidden Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputHidden Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputHidden Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputHidden Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputHidden ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputHidden.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputHidden();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 클래스입니다.  
  
 다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Web.UI.HtmlControls.HtmlInputHidden>합니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|"Hidden" 리터럴 문자열입니다.|  
  
   
  
## Examples  
 다음 코드 예제에서는의 새 인스턴스를 만드는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 제어 하 고 웹 페이지에 배치 합니다.  
  
 [!code-aspx-csharp[HtmlInputHiddenCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputHiddenCtor/CS/htmlinputhiddenctorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputHiddenCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputHiddenCtor/VB/htmlinputhiddenctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputHidden.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="htmlInputHidden.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">컨트롤의 키 식별자입니다.</param>
        <param name="postCollection">들어오는 모든 이름 값의 컬렉션입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> 컨트롤의 포스트백 데이터를 처리합니다.</summary>
        <returns>포스트백을 실행한 후에 <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> 컨트롤의 상태가 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.LoadPostData%2A> 메서드를 확인 하는지 여부를의 포스트백 값은 <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 제어 이전 값과에서 다른 이며이 경우 반환 `true`합니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.LoadPostData%2A> 메서드의 기능을 확장 하는 컨트롤 개발자가 주로 사용 되는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputHidden.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlInputHidden.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.OnPreRender%2A> 메서드 렌더링 하기 바로 전에 호출 됩니다는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 제어 합니다. <xref:System.Web.UI.HtmlControls.HtmlInputHidden.OnPreRender%2A> 메서드의 기능을 확장 하는 컨트롤 개발자가 주로 사용 되는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.OnPreRender%2A> 메서드는 사용자 지정에서 입력된 값에 HTML 인코딩 적용 하도록 <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 서버 컨트롤입니다.  
  
 [!code-aspx-csharp[CustomHtmlInputHiddenOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputHiddenOnPreRender/CS/custom_htmlinputhidden_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputHiddenOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputHiddenOnPreRender/VB/custom_htmlinputhidden_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputHiddenOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputHiddenOnPreRender/CS/custom_htmlinputhidden_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputHiddenOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputHiddenOnPreRender/VB/custom_htmlinputhidden_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerChange(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnServerChange : EventArgs -&gt; unit&#xA;override this.OnServerChange : EventArgs -&gt; unit" Usage="htmlInputHidden.OnServerChange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange" /> 이벤트를 발생시킵니다. 이 메서드를 사용하여 이벤트를 직접 처리할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange> 이벤트가 발생할 때는 <xref:System.Web.UI.HtmlControls.HtmlInputControl.Value%2A> 서버에서 속성이 변경 될 합니다.  
  
> [!NOTE]
>  컨트롤 뷰 상태에 사용할 수 있어야 합니다.는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange> 제대로 작동 하는 이벤트입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputHidden.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="htmlInputHidden.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange(System.EventArgs)" /> 메서드를 호출하여 컨트롤의 상태가 변경되었음을 <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> 컨트롤에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.RaisePostDataChangedEvent%2A> 메서드는 주로 컨트롤 개발자가의 기능을 확장 하는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputHidden.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlInputHidden.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에서 렌더링할 출력 스트림이 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> 컨트롤의 특성을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerChange As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerChange;" />
      <MemberSignature Language="F#" Value="member this.ServerChange : EventHandler " Usage="member this.ServerChange : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에서 <see cref="P:System.Web.UI.HtmlControls.HtmlInputControl.Value" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange> 이벤트가 때는 <xref:System.Web.UI.HtmlControls.HtmlInputControl.Value%2A> 간에 서버에 대 한 게시 속성을 변경 합니다.  
  
> [!NOTE]
>  컨트롤 뷰 상태에 사용할 수 있어야 합니다.는 <xref:System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange> 제대로 작동 하는 이벤트입니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputHidden.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">컨트롤의 키 식별자입니다.</param>
        <param name="postCollection">들어오는 모든 이름 값의 컬렉션입니다.</param>
        <summary>
          <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> 메서드를 호출하여 <see cref="M:System.Web.UI.HtmlControls.HtmlInputHidden.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> 인터페이스 메서드를 구현합니다.</summary>
        <returns>포스트백을 실행한 후에 <see cref="T:System.Web.UI.HtmlControls.HtmlInputHidden" /> 컨트롤의 상태가 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputHidden.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> 메서드를 호출하여 <see cref="M:System.Web.UI.HtmlControls.HtmlInputHidden.RaisePostDataChangedEvent" /> 인터페이스 메서드를 구현합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>