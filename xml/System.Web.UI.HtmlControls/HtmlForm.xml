<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9269c871537e84afc2061b0e882b63e40aa2716" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590957" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>서버의 HTML <see langword="&lt;form&gt;" /> 요소에 프로그래밍 방식으로 액세스할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm> 컨트롤은 Web Forms 페이지에 서버 컨트롤에 대 한 컨테이너입니다. 여는 태그와 닫는 태그 사이 서버에 다시 게시 하는 모든 서버 컨트롤을 배치 해야 합니다는 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 합니다.  
  
> [!NOTE]
>  ASP.NET을 사용 하면 단일 <xref:System.Web.UI.HtmlControls.HtmlForm> 컨트롤을 Web Forms 페이지에 활성 상태 여야 합니다. 둘 이상 있는 경우 활성 <xref:System.Web.UI.HtmlControls.HtmlForm> 공용 언어 런타임 Web Forms 페이지에 컨트롤을 throw 합니다는 <xref:System.Web.HttpException?displayProperty=nameWithType> 페이지를 요청 하는 동안 예외가 발생 했습니다. 그러나 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.MultiView> 위치를 제어 각 <xref:System.Web.UI.WebControls.View> 개체 하나에 포함 되어 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 하기 때문에 하나만 <xref:System.Web.UI.WebControls.View> 주어진된 시간에 활성화 됩니다.  
  
 동작을 제어할 수는 <xref:System.Web.UI.HtmlControls.HtmlForm> 해당 속성을 설정 하 여 제어 합니다. 폼의 데이터에 대 한 인코딩 유형을 지정 하려면는 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> 속성입니다. 메서드 (`GET` 또는 `POST`) 설정 하 여 지정 처리에 대해 서버에 양식 데이터를 게시 하는 브라우저를 사용 하 여 <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> 속성입니다.  
  
> [!CAUTION]
>  기본적으로 <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> 속성은 `POST`로 설정됩니다. 이 속성의 값을 수정할 수 `GET`, 하지만이 기본 제공 상태를 중단 하 고 ASP.NET 페이지 프레임 워크에서 제공 하는 서비스를 다시 게시 될 수 있습니다.  
  
 구현 하는 컨트롤을 구성할 수는 <xref:System.Web.UI.WebControls.IButtonControl> 인터페이스를 다른 대상 페이지에 게시 합니다. 이 페이지 간 게시 라고 합니다. 자세한 내용은 참조 [ASP.NET Web Forms의 게시 페이지 간](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)합니다.  
  
 인스턴스에 대 한 초기 속성 값 목록은 <xref:System.Web.UI.HtmlControls.HtmlForm>, 참조는 <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlForm> 간단한 양식을 만드는 클래스입니다.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.HtmlControls.HtmlForm> 클래스입니다.  
  
 다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Web.UI.HtmlControls.HtmlForm>합니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"형식의" 리터럴 문자열입니다.|  
  
   
  
## Examples  
 다음 코드 예제에서는의 새 인스턴스를 만드는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 하 고 웹 페이지에 배치 합니다.  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTML 폼의 action 특성을 가져오거나 설정합니다.</summary>
        <value>HTML 폼의 action 특성입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> 속성의 원래 요청 URL을 다시 작성 하면서 HTML 폼의 작업 특성에 대 한 원래 URL을 유지 하려는 경우. 설정의 <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> 속성을 유지 하려면 URL의 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]이 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤에 대해 생성한 컨트롤 식별자를 가져옵니다.</summary>
        <value>에 의해 생성 된 컨트롤 식별자 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 에 대 한는 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 제어 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 방지 하기 위해 컨트롤의 여러 인스턴스를 렌더링할 때 이름 충돌 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 고유한를 자동으로 생성 <xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> 페이지에 있는 각 컨트롤에 대 한 값입니다. 자세한 내용은 <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType> 속성을 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ControlCollection" /> 컨트롤에 대한 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컬렉션을 새로 만듭니다.</summary>
        <returns>
          <see cref="T:System.Web.UI.ControlCollection" /> 컨트롤의 자식 서버 컨트롤을 포함하는 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enter 키를 누르면 다시 게시를 발생시키는 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤의 자식 컨트롤을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Web.UI.Control.ID" />이 로드될 때 기본 단추로 표시되는 단추 컨트롤의 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 속성을 사용 하면 사용자가 입력된 컨트롤 (예: 텍스트 상자) 형식에서에 ENTER 키를 눌러 포스트백을 발생 수를 지정할 수 있습니다. 파생 된 모든 컨트롤을 기본 단추로 지정할 수는 <xref:System.Web.UI.WebControls.IButtonControl> 제외 하 고 인터페이스는 <xref:System.Web.UI.WebControls.LinkButton> 제어 합니다. 경우 컨트롤에서 참조 하는 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 속성에서 파생 되지 않은 <xref:System.Web.UI.WebControls.IButtonControl>, <xref:System.InvalidOperationException> 예외가 throw 됩니다.  
  
 설정한 마스터 페이지를 사용 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 콘텐츠 페이지를 사용 하 여 속성은 <xref:System.Web.UI.Control.UniqueID%2A> 의 속성은 <xref:System.Web.UI.WebControls.IButtonControl> 단추입니다. 마스터 페이지에 대 한 자세한 내용은 참조 [ASP.NET 마스터 페이지](http://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b)합니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 속성 다음과 같은 시나리오에서 포스트백을 발생할 수 있습니다.  
  
-   폼의 입력된 컨트롤 외부에 포커스가 있을 때 enter 키를 누릅니다. 기본 다시 게시 작업으로 트리거될 보장 되지 않습니다.  
  
-   여러 줄 텍스트 상자 내에 포커스가 있을 때 enter 키를 누릅니다. 여러 줄 텍스트 상자에 예상 되는 동작은 ENTER 키를 눌러 텍스트 상자에 새 줄 만듭니다. 일부 브라우저에서 ENTER 키를 눌러 여러 줄 텍스트 상자 트리거 내의 다시 게시 합니다. 이 경우 새 줄을 대신 만들어야 하는 입력 하려는 경우 JavaScript 함수를 입력된 컨트롤에 연결할 수 있습니다. 스크립트에서 ENTER 키를 캡처하고 하 고 다시 게시를 중지 해야 합니다. 예를 들어, 사용할 수는 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> 속성 컬렉션에 대 한 클라이언트 스크립트를 추가 하는 `onKeyPress` 이벤트입니다.  
  
-   지정 하는 <xref:System.Web.UI.WebControls.LinkButton> 컨트롤을 기본 단추로 합니다. 만 <xref:System.Web.UI.WebControls.Button> 및 <xref:System.Web.UI.WebControls.ImageButton> 컨트롤이 지원 됩니다.  
  
-   변경 된 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 비동기 포스트백 도중 프로그래밍 방식으로 속성입니다. 비동기 포스트백 하나 이상 추가 하 여 페이지에서 사용할 수 있습니다 <xref:System.Web.UI.UpdatePanel> 페이지 컨트롤입니다. 자세한 내용은 참조 [UpdatePanel 컨트롤 개요](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) 및 [부분 페이지 렌더링 개요](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)합니다.  
  
   
  
## Examples  
 설정 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 속성을 기본 컨트롤에서 포스트백을 설정 합니다.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">기본 단추로 참조되는 컨트롤이 <see cref="T:System.Web.UI.WebControls.IButtonControl" /> 형식이 아닌 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤이 로드될 때 입력 포커스가 있는 컨트롤로 표시할 폼의 컨트롤을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Web.UI.Control.ClientID" />이 로드될 때 입력 포커스가 있는 컨트롤로 표시할 폼의 컨트롤에 대한 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 속성을 입력으로 컨트롤로 표시 하려면 폼에서 컨트롤에 액세스할 때 포커스는 <xref:System.Web.UI.HtmlControls.HtmlForm> 컨트롤이 로드 합니다. 선택할 수 있는 컨트롤이 포커스를가지고 있는지를 나타내는 시각적으로 표시 됩니다. 예를 들어 한 <xref:System.Web.UI.WebControls.TextBox> 포커스가 있는 컨트롤 안에 배치 되 고 삽입 지점은 표시 됩니다.  
  
 사용 하 여 포커스가 있는 컨트롤 설정할 수도 있습니다는 <xref:System.Web.UI.Control.Focus%2A> 또는 <xref:System.Web.UI.Page.SetFocus%2A> 메서드. 이러한 방법 보다 우선 순위가 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 속성입니다. 이러한 방법 중 하나를 사용 하 여 컨트롤을 설정 하려면 호출 초점을 맞추고의 값은 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 속성은 무시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 속성 폼을 로드할 때 입력된 포커스가 있는 컨트롤을 폼에 지정 된 컨트롤을 표시 하도록 합니다. 때 `Form1` 렌더링에 삽입점을 배치 하는 것을 알 `TextBox1`한다는 표시 이므로 `TextBox1` 포커스가 있는 컨트롤입니다.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에 폼 데이터를 게시할 때 브라우저에서 사용되는 인코딩 형식을 가져오거나 설정합니다.</summary>
        <value>인코딩 형식을 포함하는 문자열입니다. 기본값은 브라우저의 기본 내용 형식이 사용됨을 나타내는 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> 데이터 서버에 다시 게시 하는 브라우저는 인코딩 형식을 지정 하는 속성을 사용 합니다.  
  
 다음 표에서 일반적인 인코딩 형식을 보여 줍니다.  
  
|인코딩 유형|설명|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|양식 데이터는 이름/값 쌍으로 인코딩됩니다. 표준 인코딩 형식입니다.|  
|multipart/form-data|양식 데이터 페이지에 있는 각 컨트롤에 대 한 별도 부분에 포함 된 메시지를 바이트로 인코딩됩니다.|  
|text/plain|양식 데이터는 일반 텍스트로 제어 또는 서식 문자 없이 인코딩됩니다.|  
  
 인코딩 형식에 대 한 자세한 내용은 참조는 [World Wide Web Consortium (W3C 웹 사이트](http://go.microsoft.com/fwlink/?linkid=37125)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> 서버에 데이터를 사용 하 여 속성을 통해 브라우저는 인코딩 형식을 지정 합니다.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>브라우저에서 처리를 위해 서버에 폼 데이터를 게시하는 방법을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>브라우저에서 서버에 폼 데이터를 게시하는 방법을 나타내는 문자열입니다. 기본값은 <see langword="POST" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 브라우저 처리를 위해 서버에 양식 데이터를 보내는 방법을 지정 하려면이 속성을 사용 합니다. 모든 브라우저에서 지 원하는 두 개의 공용 메서드는 `GET` 및 `POST`합니다.  
  
> [!CAUTION]
>  이 속성의 기본값을 재정의할 수 있습니다는 `GET` 메서드 대신 `POST`합니다. 그러나 때문에 `GET` 요청은 제한 된 데이터의 양이 포함할 수 있기를 사용 하는 `GET` 메서드 발생할 수 있습니다, 경우에 따라 ASP.NET 페이지 프레임 워크에서 제공 하는 게시 및 상태 관리 기능 실패 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> 속성 폼 데이터가 서버에 다시 게시 됩니다.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤의 식별자 이름을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />의 식별자 이름을 포함하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> 속성에 대 한 고유 식별자 이름을 확인 하는 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 합니다. 이 구현에서의 값을 반환이 속성은 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 속성입니다. 그러나 속성을 설정를 할당 하지 않습니다 값을 속성입니다. 속성을 설정가 할당 하지 값이이 속성에는 <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> 속성으로 동일한 값이 있어야 합니다.는 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 속성입니다.  
  
> [!NOTE]
>  `name` XHTML 호환 특성이 아니므로 특성과 관계 없이 ASP.NET에서 렌더링 되지 않습니다는 `xhtmlConformance` 설정 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> 컨트롤에 대해 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 알림을 받을 때는 <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> 메서드를 웹 서버 컨트롤을 만들고 인스턴스를 설정 하는 데 필요한 초기화 단계를 수행 해야 합니다. 이 서버 컨트롤의 수명 주기이 단계에서 컨트롤의 뷰 상태가 아직 채울 수 있습니다. 또한 자식 또는이 컨트롤에 부모 인지에 관계 없이이 메서드를 호출할 때 다른 서버 컨트롤을 액세스할 수 없습니다. 다른 서버 컨트롤 생성 하 고 액세스할 준비가 되도록 보장 되지 않습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> 메서드의 기능을 확장 하는 컨트롤 개발자가 주로 사용 되는 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우는 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> 파생된 클래스에서 메서드를 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다. 기본 클래스를 호출 또한 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> 메서드를 사용 하면는 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤은 제대로 폼으로 설정 된 웹 페이지 및 페이지의 뷰 상태가 유지 됩니다.</para>
        </block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> 컨트롤에 대해 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> 메서드 렌더링 하기 바로 전에 호출 됩니다는 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 합니다. 경우는 <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> 속성이 `true`, <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> 메서드를 렌더링 스마트 탐색 스크립트 파일 참조를 등록 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> 말합니다 asp.net 버전 2.0.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">렌더링된 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> 메서드는 HTML 렌더링 `<iframe>` 요소 경우는 <xref:System.Web.UI.Page.SmartNavigation%2A> 속성이 `true`합니다. <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> 메서드 호출 기본 <xref:System.Web.UI.Control.Render%2A> 메서드.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> 메서드의 기능을 확장 하는 컨트롤 개발자가 주로 사용 되는 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤이 <see cref="T:System.Web.UI.Page" /> 인스턴스에 대한 참조 없이 렌더링되지 않는 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우는 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> 파생된 클래스에서 메서드를 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> 메서드 있도록는 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤의 자식 컨트롤이 올바르게 렌더링 합니다.</para>
        </block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">렌더링된 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤의 특성을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> 메서드는 <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> 확인 하는 <xref:System.Web.UI.HtmlControls.HtmlForm> 컨트롤의 특성을 여는 태그에서 렌더링할 수 확인는 `<form>` HTML 요소입니다.  
  
 또한는 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> 메서드 렌더링은 `method`, `action`, 및 `onsubmit` 의 특성은 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 합니다. 경우에 설정 된 컨트롤 ID는 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> 속성을 구현 하지 않습니다는 <xref:System.Web.UI.WebControls.IButtonControl> 인터페이스는 <xref:System.InvalidOperationException> 예외가 throw 됩니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> 메서드의 기능을 확장 하는 컨트롤 개발자가 주로 사용 되는 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" /> 속성에 설정된 컨트롤 ID가 <see cref="T:System.Web.UI.WebControls.IButtonControl" /> 형식이 아닌 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우는 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> 파생된 클래스에서 메서드를 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> 메서드 있도록는 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤의 특성을 올바르게 렌더링 됩니다.</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">렌더링된 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤의 자식 컨트롤을 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A> 브라우저 포커스에 지정 된 컨트롤에 설정 되어 있는지 확인 하는 클라이언트 스크립트를 렌더링 하는 메서드는 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 속성입니다.  
  
> [!NOTE]
>  로 지정 된 컨트롤의 <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType> 속성에서 지정 된 컨트롤에 우선는 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">웹 페이지에 두 개 이상의 서버측 <see langword="&lt;form&gt;" /> 태그가 있는 경우</exception>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우는 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 파생된 클래스에서 메서드를 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 메서드 있도록는 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤의 자식 컨트롤이 올바르게 렌더링 합니다.</para>
        </block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">폼 컨트롤 내용을 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링합니다.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우는 <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" /> 파생된 클래스에서 메서드를 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> 메서드 있도록는 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤이 올바르게 렌더링 됩니다.</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>강제로 클라이언트에 비활성화되어 있는 컨트롤이 해당 값을 전송하도록 하여 페이지가 서버에 다시 게시된 후에도 해당 값을 유지할 수 있도록 할지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</summary>
        <value>
          클라이언트에 비활성화되어 있는 컨트롤이 강제로 값을 전송하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> 속성을 통해 페이지가 다시 게시 하는 경우 값을 전송 하는 클라이언트를 사용 하지 않도록 설정 하는 컨트롤 강제 전환할지 여부를 지정 합니다. 이렇게 하면 페이지가 서버에 다시 게시 된 후 해당 값을 유지 하기 위해 사용할 수 없는 컨트롤입니다. 경우는 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> 속성이 `false`, 클라이언트 스크립트를 사용 하 여 해제 된 양식에서 컨트롤 되지 제출할 서버에 다음에 페이지 다시 게시 합니다. 결과적으로, 비활성화 된 컨트롤에서 저장 된 모든 값은 손실 됩니다. 페이지가 서버에 다시 게시 된 후 해당 값을 유지 하기 위해 사용할 수 없는 컨트롤을 허용 하려면 설정는 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> 속성을 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> 속성 폼에 `true` 페이지가 서버에 다시 게시 된 후 해당 값을 유지 하기 위해 클라이언트 스크립트에서 사용 하지 않도록 설정 하는 컨트롤을 합니다. 이 예제에서는 설정 하는 경우에 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> 속성을 `false` 클릭 하 고는 **다시 게시** 단추 HTML 텍스트 상자에 텍스트 손실 되 고 HTML 확인란 옵션을 선택 하지 합니다.  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에 게시한 정보의 결과를 렌더링할 프레임이나 창을 가져오거나 설정합니다.</summary>
        <value>서버에 게시한 정보의 결과를 표시하는 브라우저 창이나 프레임입니다. 기본값은 빈 문자열("")이며 이 경우 포커스가 있는 창이나 프레임이 새로 고쳐집니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> 서버에 게시 되는 정보의 결과 표시 하는 속성을 지정 대상 창 또는 프레임입니다. 결과 리디렉션하는 서버에 게시 정보는 고급 작업입니다. 이 속성을 사용 하 여 단순히 게시를 위해 권장 되지 않습니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> 속성으로 렌더링 한 `target` 특성입니다. `target` 특성을 `form` 요소 XHTML 1.1에서 허용 되지 않습니다. 따라서 경우 렌더링 된 태그 XHTML 표준 이나 내게 필요한 옵션 표준 설정 하지 마십시오는 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> 속성입니다. 자세한 내용은 참조 [XHTML 표준 Visual Studio 및 ASP.NET에서](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) 및 [Visual Studio 및 ASP.NET의 내게 필요한 옵션](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)합니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> 값 Z (소문자) 다음과 같은 특수 한 값을 제외 하 고는 밑줄로 시작 하는 범위 문자로 시작 해야 합니다.  
  
|대상 값|설명|  
|------------------|-----------------|  
|`_blank`|콘텐츠를 프레임이 없는 새 창에 렌더링합니다.|  
|`_parent`|콘텐츠를 직접 실행 프레임셋 부모에 렌더링합니다.|  
|`_search`|콘텐츠를 검색 창에 렌더링합니다.|  
|`_self`|콘텐츠를 포커스가 있는 프레임에 렌더링합니다.|  
|`_top`|콘텐츠를 프레임이 없는 전체 창에 렌더링합니다.|  
  
> [!NOTE]
>  `_search` 값이 지원되는지 여부를 확인하려면 브라우저 설명서를 참조하십시오.  예를 들어, Microsoft Internet Explorer 5.0 이상에서는 `_search` 대상 값을 지원합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> 속성 결과 정보를 표시 하는 새 프레임이 없는 창 지정을 서버에 다시 게시 합니다.  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤에 할당된 고유 프로그래밍 ID를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 컨트롤에 할당된 고유 프로그래밍 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 에 할당 된 고유한 프로그래밍 id를 가져올 속성의 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 합니다. 이 속성을 컨트롤에 포함 된 상수 값을 반환 하는 기본 구현을 재정의 <xref:System.Web.UI.INamingContainer>-사용자 지정 서버 컨트롤과 같이 페이지 이외의 개체를 구현 합니다. 명명 컨테이너는 페이지의 값은 경우는 <xref:System.Web.UI.HtmlControls.HtmlForm> 컨트롤의 <xref:System.Web.UI.Control.ID%2A> 속성이 반환 됩니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 속성 및 <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> 속성은 항상 동일한 값을 반환 합니다. 이 때 유용는 <xref:System.Web.UI.HtmlControls.HtmlForm> 컨트롤이 요구 하는 브라우저에서 렌더링 되는 <xref:System.Web.UI.HtmlControls.HtmlForm> 컨트롤의 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 및 <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> 속성 동일 하 게 합니다. 이러한 속성을 동기화 된 상태로 유지 하는 <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> 속성의 값은 항상 반환는 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 속성입니다.  
  
> [!NOTE]
>  `name` 특성은 XHTML 호환 특성이 있고 기본적으로 렌더링 되지 않습니다 ASP.NET에서 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> 속성에 대 한 고유 식별자를 검색 하는 <xref:System.Web.UI.HtmlControls.HtmlForm> 제어 합니다.  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      </Docs>
    </Member>
  </Members>
</Type>