<Type Name="HtmlInputPassword" FullName="System.Web.UI.HtmlControls.HtmlInputPassword">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ace2c6372b83f28c4046e9e30fb277fecac31a78" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36389325" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputPassword : System.Web.UI.HtmlControls.HtmlInputText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputPassword extends System.Web.UI.HtmlControls.HtmlInputText implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputPassword&#xA;Inherits HtmlInputText" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputPassword : System::Web::UI::HtmlControls::HtmlInputText" />
  <TypeSignature Language="F#" Value="type HtmlInputPassword = class&#xA;    inherit HtmlInputText&#xA;    interface IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputText</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>서버의 HTML <see langword="&lt;input type= password&gt;" /> 요소에 프로그래밍 방식으로 액세스할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputPassword> 클래스에서 파생 된는 <xref:System.Web.UI.HtmlControls.HtmlInputText> 클래스 및 사용자 암호를 입력할 수 있게 하는 한 줄 텍스트 상자를 만드는 데 사용 됩니다. 사용 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlInputPassword> 컨트롤의 <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> 속성 폼이 전송 될 때마다 서버에 게시 됩니다. <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> 속성에 대 한는 <xref:System.Web.UI.HtmlControls.HtmlInputPassword> 뷰 상태에 컨트롤이 유지 되지 않습니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> 속성 텍스트 상자에 입력할 수 있는 문자의 최대 수를 지정 합니다. <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> 속성을 사용 하면 입력란의 너비를 지정할 수 있습니다. 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> 속성 텍스트 상자에 사용자가 입력 값을 결정 합니다. <xref:System.Web.UI.HtmlControls.HtmlInputPassword> 컨트롤은 제공는 <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> 이벤트는 발생 시기는 <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> 속성 서버에 게시 하는 값을 변경 합니다. 이 지침 집합이 사용자 지정 이벤트가 발생할 때마다 수행 하는 이벤트 처리기를 만들 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputPassword> 제어 서버에 다시 게시 하는 기본 제공 방법을 제공 하지 않습니다. 와 같은 서버에 다시 게시 지 원하는 웹 페이지에 있는 다른 컨트롤을 제공 해야 합니다는 <xref:System.Web.UI.HtmlControls.HtmlButton> 또는 <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> 제어 합니다.  
  
 인스턴스에 대 한 초기 속성 값 목록은 <xref:System.Web.UI.HtmlControls.HtmlInputPassword>, 참조는 <xref:System.Web.UI.HtmlControls.HtmlInputPassword.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 `<input type=text>`, `<input type=password>`, 및 `<input type=submit>` Web Forms 페이지에 선언적으로 HTML 컨트롤입니다.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/CS/htmlinputcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/VB/htmlinputvb.aspx#1)]  
  
 다음 코드 예제를 호출 하는 동안 동일한 HTML 컨트롤을 프로그래밍 방식으로 추가 하는 방법을 보여 줍니다는 `Page_Load` 메서드.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputText" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTextArea" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputPassword();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>기본값을 사용하여 <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.HtmlControls.HtmlInputPassword> 기본값을 사용 하 여 제어 합니다. 생성 된 `password` 텍스트 상자 컨트롤을 입력 합니다.  
  
 다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Web.UI.HtmlControls.HtmlInputPassword>합니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|"Password" 리터럴 문자열입니다.|  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 추가 하는 방법을 보여 줍니다. <xref:System.Web.UI.HtmlControls.HtmlInputText>, <xref:System.Web.UI.HtmlControls.HtmlInputPassword>, 및 <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> 컨트롤을 Web Forms 페이지 기본 생성자를 사용 하 여 간단한 로그인 화면을 만듭니다.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlInputPassword.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">렌더링된 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> 개체에 <see cref="T:System.Web.UI.HtmlTextWriter" /> 컨트롤의 특성을 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes%2A> 메서드 제거는 `Value` 렌더링 되지 않도록 방지 하기 위해 뷰 상태 컬렉션에서 특성이 기본 클래스의 다음 호출 <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>