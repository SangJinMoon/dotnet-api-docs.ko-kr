<Type Name="HtmlSelectBuilder" FullName="System.Web.UI.HtmlControls.HtmlSelectBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5e94cd4906fcd80a0eab1ce67d44fe3a7d47b79" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30556257" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlSelectBuilder : System.Web.UI.ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlSelectBuilder extends System.Web.UI.ControlBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlSelectBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlSelectBuilder&#xA;Inherits ControlBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlSelectBuilder : System::Web::UI::ControlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ControlBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤을 빌드할 파서와 상호 작용합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder> 컨트롤을 빌드할 페이지 파서와와 상호 작용 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다. 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder> 컨트롤의 구문 분석 하는 사용자 지정 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.AllowWhitespaceLiterals%2A> 속성이 `false` 공백은 항상 무시 되도록 합니다. 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType%2A> 의 형식을 확인 하는 메서드는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤의 자식 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 사용자 지정을 만드는 방법을 보여 줍니다 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder> 두 가지 유형의 정의 하는 컨트롤이 `<option>` 사용자 지정의 자식 요소 <xref:System.Web.UI.HtmlControls.HtmlSelect> 각각 다르게 입력 제어 및 프로세스입니다.  
  
 [!code-aspx-csharp[HtmlSelectBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectBuilder/cs/source.aspx#1)]
 [!code-aspx-vb[HtmlSelectBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectBuilder/vb/source.aspx#1)]  
  
 [!code-csharp[HtmlSelectBuilder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectBuilder/cs/source.cs#2)]
 [!code-vb[HtmlSelectBuilder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectBuilder/vb/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>에 대 한 사용자 지정 컨트롤 작성기를 만들려면 프로그램 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤을이 클래스에서 상속 해야 합니다.</para>
    </block>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
    <altmember cref="T:System.Web.UI.ControlBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlSelectBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlSelectBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlSelectBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 생성자는 페이지를 구문 분석할 때 ASP.NET에서 사용 하 고 컨트롤 계층 구조를 만드는 합니다. 사용자 코드에 사용할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
      </Docs>
    </Member>
    <Member MemberName="AllowWhitespaceLiterals">
      <MemberSignature Language="C#" Value="public override bool AllowWhitespaceLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AllowWhitespaceLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.AllowWhitespaceLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AllowWhitespaceLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool AllowWhitespaceLiterals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 공백 리터럴이 처리되는지 아니면 무시되는지 여부를 확인합니다.</summary>
        <returns>이 메서드는 항상  <see langword="false" />를 반환하며, 이는 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에서 공백이 무시됨을 나타냅니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 재정의 <xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A?displayProperty=nameWithType> 항상에 있는 공백을 무시 하는 메서드는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
      </Docs>
    </Member>
    <Member MemberName="GetChildControlType">
      <MemberSignature Language="C#" Value="public override Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetChildControlType(string tagName, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChildControlType (tagName As String, attribs As IDictionary) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetChildControlType(System::String ^ tagName, System::Collections::IDictionary ^ attribs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="tagName">자식 컨트롤의 태그 이름입니다.</param>
        <param name="attribs">자식 컨트롤에 포함된 특성의 배열입니다.</param>
        <summary>
          <see cref="T:System.Type" /> 컨트롤의 자식 컨트롤에 대한 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />을 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Type" /> 컨트롤의 지정된 자식 컨트롤에 대한 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType%2A> 반환 하는 메서드는 <xref:System.Type> 에서 지정 된 자식 컨트롤의는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType%2A> 사용자 지정 하위 컨트롤 형식에 대 한 검사 하도록 합니다. 작동 하는 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder> 클래스 개요 항목입니다.  
  
 [!code-csharp[HtmlSelectBuilder#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectBuilder/cs/source.cs#3)]
 [!code-vb[HtmlSelectBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectBuilder/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
      </Docs>
    </Member>
  </Members>
</Type>