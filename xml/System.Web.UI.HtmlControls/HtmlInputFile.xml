<Type Name="HtmlInputFile" FullName="System.Web.UI.HtmlControls.HtmlInputFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7cc6a5794a0a1dfaae0abb38194dd6ca4ad85b50" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590387" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputFile : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputFile extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputFile" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputFile&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputFile : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>서버의 HTML <see langword="&lt;input type= file&gt;" /> 요소에 프로그래밍 방식으로 액세스할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 업로드 이진 또는 텍스트 브라우저 클라이언트에서 서버에 파일을 처리 하는 서버 컨트롤입니다. 파일 업로드 Microsoft Internet Explorer 3.02 이후 버전에서 작동합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputFile> 컨트롤 부분 페이지 렌더링 하는 동안 비동기 포스트백 시나리오 아니라 포스트백 시나리오에만 사용할 수 있도록 설계 됩니다. 사용 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 컨트롤 내부는 <xref:System.Web.UI.UpdatePanel> 컨트롤에 있는 컨트롤을 사용 하 여 파일을 업로드 해야 합니다는 <xref:System.Web.UI.PostBackTrigger> 패널에 대 한 개체입니다. <xref:System.Web.UI.UpdatePanel> 컨트롤이는 포스트백을 통해 전체 페이지를 업데이트 하는 대신 페이지의 선택한 영역을 업데이트 하는 데 사용 됩니다. 자세한 내용은 참조 [UpdatePanel 컨트롤 개요](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) 및 [부분 페이지 렌더링 개요](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)합니다.  
  
 업로드할 파일을 지정 하려면 컨트롤의 텍스트 상자에 파일 (예: "C:\MyFiles\Test.txt")의 전체 경로 입력 합니다. 클릭 하 여 파일을 선택할 수도 있습니다는 **찾아보기** 단추 하 고 다음에서 찾는 **파일 선택** 대화 상자.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> 속성은 <xref:System.Web.UI.HtmlControls.HtmlForm> "multipart/양식-데이터" 제대로 작동 하려면이 컨트롤에 컨트롤을 설정 해야 합니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 컨트롤에는 서버에 다시 게시 하는 기본 제공 방법을 합니다. 사용 하 여 서버에 파일을 업로드 하는 <xref:System.Web.HttpPostedFile.SaveAs%2A> 의 메서드는 <xref:System.Web.HttpPostedFile?displayProperty=nameWithType> 에 포함 된 개체는 <xref:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile%2A> 속성입니다. 이 작업은 일반적으로 이벤트 처리 메서드에서 수행 됩니다. 예: 단추를 클릭 합니다.  
  
> [!NOTE]
>  사용 하는 경우는 <xref:System.Web.HttpPostedFile.SaveAs%2A> 의 메서드는 <xref:System.Web.HttpPostedFile> 클래스, 루트 경로 (예: "C:\MyFiles\Test.txt")을 지정 해야 합니다. 동작은 <xref:System.Web.HttpPostedFile.SaveAs%2A> 에 메서드를 지정할 수 있습니다는 [) (httpRuntime Element (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) 사용 구성 섹션은 `requireRootedSaveAsPath` 특성입니다. 이 특성의 기본값은 `true`입니다. 이 특성을 설정 하는 경우 `false`를 사용 하 여는 <xref:System.Web.HttpPostedFile.SaveAs%2A> 지정 된 경로가 없는 메서드는에 파일을 저장 하려고는 `systemroot` \system32\inetsrv 디렉터리입니다. 기본적으로이 디렉터리는 쓰기 가능한; 따라서는 파일 수을 저장할 수 있습니다. ASP.NET에서 사용 되는 디렉터리에 대 한 파일을 저장 하려면 계정에 대 한 쓰기 권한이 있는지 확인 합니다.  
  
 사용 하 여 큰 파일을 업로드할 때는 `maxRequestLength` 특성에는 [) (httpRuntime Element (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) 최대 허용 파일 크기를 늘리려면 요소입니다. 파일이 지정된 된 크기를 초과 하는 경우 브라우저에서 DNS 오류가 생성 됩니다. 큰 파일을 업로드 하는 경우에 다음과 같은 오류 메시지가 나타날 수 있습니다.  
  
 aspnet_wp.exe (PID: 1520)가 재생 되었습니다 메모리 소비가 460 MB (사용 가능한 RAM의 60%)을 초과 했습니다.  
  
 이 오류 메시지가 발생 하는 경우의 값 늘리기는 `memoryLimit` 특성에 [processModel 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/4b8fe20e-74c8-4566-b72c-ce5f83c8e32d) Machine.config 파일의 요소입니다.  
  
 인스턴스에 대 한 초기 속성 값 목록은 <xref:System.Web.UI.HtmlControls.HtmlInputFile>, 참조는 <xref:System.Web.UI.HtmlControls.HtmlInputFile.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 간단한 파일 업로드 시나리오를 만들 수 있습니다. 이 예제가 제대로 작동 하려면 라는 디렉터리를 만들어야 할 `Temp` 에서 컴퓨터의 C 드라이브입니다.  
  
 [!code-aspx-csharp[Classic HtmlInputFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpPostedFile" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputFile();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 클래스입니다.  
  
 다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Web.UI.HtmlControls.HtmlInputFile>합니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|리터럴 문자열 "file"입니다.|  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다. 이 예제가 제대로 작동 하려면 라는 디렉터리를 만들어야 할 `Temp` 에서 컴퓨터의 C 드라이브입니다.  
  
 [!code-aspx-csharp[HtmlInputFileCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputFileCtor/CS/htmlinputfilectorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputFileCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputFileCtor/VB/htmlinputfilectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public string Accept { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Accept" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Accept" />
      <MemberSignature Language="VB.NET" Value="Public Property Accept As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Accept { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 선택할 수 있는 파일 형식을 제한하는 데 사용되는 쉼표로 구분된 MIME 인코딩 목록을 가져오거나 설정합니다.</summary>
        <value>쉼표로 구분된 MIME 인코딩 목록입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 서버에 업로드할 수 있는 파일 형식을 지정할 수 있습니다. 예를 들어 이미지 하 고 선택 영역을 제한 하려면이 속성을 설정 "이미지 / *"입니다.  
  
> [!NOTE]
>  이 속성에 대 한 지원은 브라우저에 따라 다릅니다. 이 속성을 지원 하는지 여부를 확인 하려면 브라우저를 확인 합니다. 예상 되는 형식의 파일 인지 확인 하는 서버 쪽 코드를 사용 하는 것이 좋습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlInputFile.Accept%2A> 에서 이미지 파일을 제외한 모든 파일을 선택 하 여 사용자를 제한 하는 속성입니다. 이 예제가 제대로 작동 하려면 라는 디렉터리를 만들어야 할 `Temp` 에서 컴퓨터의 C 드라이브입니다. 때문에 대 한 지원의 <xref:System.Web.UI.HtmlControls.HtmlInputFile.Accept%2A> 속성은 브라우저 별로 다르며, 이미지만 업로드할 수 있도록 서버 쪽 검사를 수행 합니다. 업로드 된 파일은으로 읽을 수 없는 경우 예외가 throw 되는 <xref:System.Drawing.Image> 유형입니다.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.Accept Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.Accept Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.Accept Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.Accept Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">컨트롤의 키 식별자입니다.</param>
        <param name="postCollection">들어오는 모든 이름 값의 컬렉션입니다.</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> 컨트롤의 포스트백 데이터를 처리합니다.</summary>
        <returns>이 메서드는 항상 <see langword="false" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 구현 제어는 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스 메서드가 있는: <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=nameWithType> 및 <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType>합니다. <xref:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData%2A> 메서드는 <xref:System.Web.UI.HtmlControls.HtmlInputFile.System%23Web%23UI%23IPostBackDataHandler%23RaisePostDataChangedEvent%2A> 메서드와 항상 반환 `false`한다는 표시 이므로 하는 <xref:System.Web.UI.HtmlControls.HtmlInputFile> ASP.NET 페이지 프레임 워크에서 컨트롤의 상태를 관리 되지 않습니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData%2A> 메서드의 기능을 확장 하는 컨트롤 개발자가 주로 사용 되는 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트 컴퓨터에서 업로드할 파일 경로의 최대 길이를 가져오거나 설정합니다.</summary>
        <value>파일 경로의 최대 길이입니다. 기본값은 -1로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 업로드할 파일을 경로 대해 입력할 수 있는 문자 수에 대 한 제한을 지정할 수 있습니다.  
  
> [!NOTE]
>  이 속성에 대 한 지원은 브라우저에 따라 다릅니다. 이 속성을 지원 하는지 여부를 확인 하려면 브라우저를 확인 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.Size" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> 컨트롤에 대해 <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 인코딩이 지정 되지 않은 웹 페이지에 대 한 <xref:System.Web.UI.HtmlControls.HtmlForm> 컨트롤의 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> 속성을 "multipart/폼 데이터"로 설정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender%2A> 메서드 있도록는 `Title` 각 사용자 지정 특성은 항상 추가 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 제어 합니다. 이 예제가 제대로 작동 하려면 라는 디렉터리를 만들어야 할 `Temp` 에서 컴퓨터의 C 드라이브입니다.  
  
 [!code-aspx-csharp[CustomHtmlInputFileOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/CS/custom_htmlinputfile_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputFileOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/VB/custom_htmlinputfile_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputFileOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/CS/custom_htmlinputfile_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputFileOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/VB/custom_htmlinputfile_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트에서 지정한 업로드된 파일에 대한 액세스 권한을 가져옵니다.</summary>
        <value>업로드할 파일에 액세스하는 <see cref="T:System.Web.HttpPostedFile" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 브라우저 보안 제한에서 여러 요청에 대해 유지 되 고이 값을 방지 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile%2A> 속성을 서버에 파일을 전송 하는 유틸리티를 시작 합니다. 바이트에 업로드 된 파일의 크기의 값을 초과 하는 경우는 <xref:System.Web.HttpPostedFile.ContentLength%2A> 속성, 파일 업로드 되지 않습니다. 이 예제가 제대로 작동 하려면 라는 디렉터리를 만들어야 할 `Temp` 에서 컴퓨터의 C 드라이브입니다.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.PostedFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.PostedFile Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.PostedFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.PostedFile Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> 컨트롤의 상태가 변경되었음을 해당 컨트롤이 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 구현 제어는 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스 메서드가 있는: <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=nameWithType> 및 <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType>합니다. <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType> 메서드의 처리에 참여 하지 않습니다는 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 제어 하 고 인터페이스 구현 완료를 위해 포함 되었습니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent%2A> 메서드는 주로 컨트롤 개발자가의 기능을 확장 하는 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파일 경로가 입력되는 입력란의 너비를 가져오거나 설정합니다.</summary>
        <value>파일 경로 입력란의 너비입니다. 기본값은 -1로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 파일 경로 입력할 수 있는 입력란의 너비를 지정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlInputFile.Size%2A> 속성을 통해 사용자는 파일 경로 입력 하는 입력란의 너비를 지정 합니다. 이 예제가 제대로 작동 하려면 라는 디렉터리를 만들어야 할 `Temp` 에서 컴퓨터의 C 드라이브입니다.  
  
 [!code-aspx-csharp[Classic HtmlInputFile.Size Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.Size Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlInputFile.Size Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.Size Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">컨트롤의 키 식별자입니다.</param>
        <param name="postCollection">들어오는 모든 이름 값의 컬렉션입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />를 참조하세요.</summary>
        <returns>
          포스트백을 실행한 후에 <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> 컨트롤의 상태가 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.HtmlControls.HtmlInputFile> 인스턴스가 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />를 참조하세요.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.HtmlControls.HtmlInputFile> 인스턴스가 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트 컴퓨터에 있는 파일의 전체 경로를 가져옵니다.</summary>
        <value>클라이언트 파일의 전체 경로입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> 속성 (예: "C:\MyFiles\Test.txt")는 클라이언트 컴퓨터에 있는 파일의 전체 경로 검색 합니다. 알아야 할 파일의 파일을 전송한 컴퓨터에 저장 되어 있는 경우에 유용 합니다. 이 속성은 원래 파일 이름을 확인 하려면 일반적으로 사용 됩니다. 원래 파일 이름을 가져오려면이 속성의 값을 구문 분석 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> 속성은 읽기 전용입니다. 이 속성에 값을 할당 하려고 하면는 <xref:System.NotSupportedException?displayProperty=nameWithType> throw 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A> 속성을 클라이언트 컴퓨터에 있는 파일의 전체 경로 표시 합니다. 이 예제가 제대로 작동 하려면 라는 디렉터리를 만들어야 할 `Temp` 에서 컴퓨터의 C 드라이브입니다.  
  
 [!code-aspx-csharp[HtmlInputFileValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputFileValue/CS/htmlinputfilevaluecs.aspx#1)]
 [!code-aspx-vb[HtmlInputFileValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputFileValue/VB/htmlinputfilevaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">이 속성에 값을 할당하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputControl.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
        <altmember cref="T:System.NotSupportedException" />
      </Docs>
    </Member>
  </Members>
</Type>