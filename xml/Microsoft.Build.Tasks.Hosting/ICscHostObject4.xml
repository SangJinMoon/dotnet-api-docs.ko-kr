<Type Name="ICscHostObject4" FullName="Microsoft.Build.Tasks.Hosting.ICscHostObject4">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="77e14b2e663ce3e1ebe6e696a01fe69f030e9e36" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30330347" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICscHostObject4 : Microsoft.Build.Framework.ITaskHost, Microsoft.Build.Tasks.Hosting.ICscHostObject3" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICscHostObject4 implements class Microsoft.Build.Framework.ITaskHost, class Microsoft.Build.Tasks.Hosting.ICscHostObject, class Microsoft.Build.Tasks.Hosting.ICscHostObject2, class Microsoft.Build.Tasks.Hosting.ICscHostObject3" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Hosting.ICscHostObject4" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICscHostObject4&#xA;Implements ICscHostObject3, ITaskHost" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICscHostObject4 : Microsoft::Build::Framework::ITaskHost, Microsoft::Build::Tasks::Hosting::ICscHostObject3" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskHost</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Tasks.Hosting.ICscHostObject3</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0DDB496F-C93C-492C-87F1-90B6FDBAA833")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Csc 호스트 컴파일러를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Csc 작업 Visual Studio IDE와 통신할 수에 대 한 인터페이스를 정의 합니다. 특히, Csc 작업은 명령줄 컴파일러를 셸 프로세스 보다는 IDE에 실제 컴파일을 위임 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetHighEntropyVA">
      <MemberSignature Language="C#" Value="public bool SetHighEntropyVA (bool highEntropyVA);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetHighEntropyVA(bool highEntropyVA) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetHighEntropyVA(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetHighEntropyVA (highEntropyVA As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetHighEntropyVA(bool highEntropyVA);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highEntropyVA" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="highEntropyVA">
          <c>/ highentropyva</c>가 높은 엔트로피 ASLR(Address Space Layout Randomization) 지원을 표시하도록 설정하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</param>
        <summary>
          <c>/highentropyva</c> 값을 지정된 대로 설정합니다.</summary>
        <returns>메서드가 성공적으로 수행되었으면 <see langword="True" />을 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPlatformWith32BitPreference">
      <MemberSignature Language="C#" Value="public bool SetPlatformWith32BitPreference (string platformWith32BitPreference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPlatformWith32BitPreference(string platformWith32BitPreference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetPlatformWith32BitPreference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPlatformWith32BitPreference (platformWith32BitPreference As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetPlatformWith32BitPreference(System::String ^ platformWith32BitPreference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="platformWith32BitPreference" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="platformWith32BitPreference">
          <c>/platform</c> 값을 <see langword="AnyCPU32BitPreferred" />로 설정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>
          <c>/platform</c> 값을 <see langword="AnyCPU32BitPreferred" />로 설정합니다.</summary>
        <returns>
          메서드가 성공하면 <see langword="true" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:Microsoft.Build.Tasks.ManagedCompiler.Prefer32Bit%2A> 속성은 프로젝트에 설정 <xref:Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetPlatformWith32BitPreference%2A> 변경은 `/platform` 에서 값 `AnyCPU` 또는 기본값 (`null` 또는 "")를 `AnyCPU32BitPreferred`합니다. 자세한 내용은 [/platform(C# 컴파일러 옵션)](~/docs/csharp/language-reference/compiler-options/platform-compiler-option.md)을 참조하세요.  
  
 경우는 `/platform` 값으로 설정 되어 `AnyCPU` (`/platform:AnyCPU`), 응용 프로그램 가능 하면 64 비트 프로세스로 실행 되 고 다시 32 비트 시스템용 32 비트 전용입니다. 그러나 응용 프로그램을 64 비트 응용 프로그램에서 더 많은 메모리를 사용할 수 있습니다 때문에 32 비트 프로세스로 실행할 수도 있습니다. `AnyCPU32BitPreferred` 설정을 비슷합니다 `AnyCPU`한다는 점을 제외 하는 기본 작업은 시스템에서 지 원하는 모드나 32 비트 모드에서 응용 프로그램을 실행 합니다.  이 설정은 32 비트 모드를 변경 하지 않을 수 있습니다 향후 프로세서를 수용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSubsystemVersion">
      <MemberSignature Language="C#" Value="public bool SetSubsystemVersion (string subsystemVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSubsystemVersion(string subsystemVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject4.SetSubsystemVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetSubsystemVersion (subsystemVersion As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetSubsystemVersion(System::String ^ subsystemVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subsystemVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subsystemVersion">하위 시스템 버전입니다.</param>
        <summary>하위 시스템 버전 플래그에 지정된 대로 설정합니다.</summary>
        <returns>메서드가 성공하면 <see langword="true" />를 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>