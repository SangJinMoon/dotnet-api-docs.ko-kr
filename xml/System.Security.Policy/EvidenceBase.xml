<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EvidenceBase.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac530988f127b8beebe5e7b7b9805d6772b11052a91.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30988f127b8beebe5e7b7b9805d6772b11052a91</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Policy.EvidenceBase">
          <source>Provides a base class from which all objects to be used as evidence must derive.</source>
          <target state="translated">증명 정보로 사용할 모든 개체가 파생되어야 하는 기본 클래스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.EvidenceBase">
          <source>Before the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, almost any object could be used as an evidence object if the hosting code wanted to apply it as evidence.</source>
          <target state="translated">전에 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, 호스팅 코드를 증거로 적용 하려는 경우 증명 개체로 거의 모든 개체를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.EvidenceBase">
          <source>For example, some .NET Framework code recognized <ph id="ph1">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> objects as evidence.</source>
          <target state="translated">예를 들어 일부.NET Framework 코드 인식 <ph id="ph1">&lt;xref:System.Uri?displayProperty=nameWithType&gt;</ph> 증명 정보로 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.EvidenceBase">
          <source>The common language runtime (CLR) considered evidence objects as <ph id="ph1">&lt;xref:System.Object?displayProperty=nameWithType&gt;</ph> references, and did not apply any type safety to them.</source>
          <target state="translated">공용 언어 런타임 (CLR) 증거 개체 변수로 간주 <ph id="ph1">&lt;xref:System.Object?displayProperty=nameWithType&gt;</ph> 를 참조 하 고 모든 형식 안전성에 적용 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.EvidenceBase">
          <source>This presented a problem because there were implicit restrictions on which types could be used as evidence objects.</source>
          <target state="translated">에 있는 형식으로 사용 될 수 증거 개체 암시적 제한이 있기 때문에 이런 문제가 나타납니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.EvidenceBase">
          <source>Specifically, any object used as evidence had to be serializable and could not be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">특히, 증명 정보로 사용 되는 모든 개체 직렬화가 가능 해야 및 수 없는 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.EvidenceBase">
          <source>If these requirements were not met, the CLR threw an exception whenever an operation that required one of these assumptions was performed.</source>
          <target state="translated">이러한 요구 사항을 충족 되지 않은 경우 이러한 가정을 중 하나 필요로 하는 작업을 수행할 때마다 CLR에서 예외가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.EvidenceBase">
          <source>The <ph id="ph1">&lt;xref:System.Security.Policy.EvidenceBase&gt;</ph> class, which all evidence objects must derive from, was introduced in the <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> to enable constraints on the types of objects that can be used as evidence and to provide the ability to add new features and requirements to all evidence objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.EvidenceBase&gt;</ph> 에 도입 된 모든 증거 개체에서 파생 되어야 합니다는 클래스는 <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 증명 정보로 사용할 수 있는 개체의 형식에 대 한 제약 조건을 사용 하 고 모든 증거에 새 기능 및 요구 사항을 추가 하는 기능 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.EvidenceBase">
          <source>The <ph id="ph1">&lt;xref:System.Security.Policy.EvidenceBase&gt;</ph> class ensures, upon instantiation, that the evidence object is serializable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.EvidenceBase&gt;</ph> 클래스를 사용 하면, 인스턴스화하면, evidence 개체가 직렬화 가능 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.EvidenceBase">
          <source>In addition, it enables new evidence requirements to be created by adding new default implementations to the base class.</source>
          <target state="translated">또한 새 증거 요구 사항을 새 기본 구현을 기본 클래스에 추가 하 여 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.EvidenceBase">
          <source>All the types used by the CLR as evidence objects have been updated in the <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> to derive from <ph id="ph2">&lt;xref:System.Security.Policy.EvidenceBase&gt;</ph>.</source>
          <target state="translated">증거 개체에서 업데이트 될 때 CLR에 사용 되는 모든 형식에서 <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 를 파생할 <ph id="ph2">&lt;xref:System.Security.Policy.EvidenceBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.EvidenceBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Policy.EvidenceBase" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Policy.EvidenceBase" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.EvidenceBase.#ctor">
          <source>All objects to be used as evidence must be serializable.</source>
          <target state="translated">증명 정보로 사용할 수 있는 모든 개체는 직렬화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.EvidenceBase.#ctor">
          <source>You must mark any derived types as serializable, because the serializable attribute does not propagate to derived classes.</source>
          <target state="translated">파생된 클래스 serializable 특성 전파 되지 않기 때문에 다른 파생된 형식으로 직렬화를 표시 해야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.EvidenceBase.#ctor">
          <source>An object to be used as evidence is not serializable.</source>
          <target state="translated">증명 정보로 사용할 개체는 직렬화되지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.EvidenceBase.Clone">
          <source>Creates a new object that is a complete copy of the current instance.</source>
          <target state="translated">현재 인스턴스의 전체 복사본인 새 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.EvidenceBase.Clone">
          <source>A duplicate copy of this evidence object.</source>
          <target state="translated">이 증명 정보 개체의 복사본입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.EvidenceBase.Clone">
          <source>The duplicate copy is a complete copy that includes all the evidence objects in the collection.</source>
          <target state="translated">중복 복사본은 컬렉션의 모든 증거 개체를 포함 하는 전체 복사본입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>