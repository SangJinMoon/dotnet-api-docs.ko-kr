<Type Name="ApplicationSecurityManager" FullName="System.Security.Policy.ApplicationSecurityManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7a7f60d8e30df0fb6c51d11697bde3474d60fedb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30497697" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ApplicationSecurityManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ApplicationSecurityManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.ApplicationSecurityManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationSecurityManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSecurityManager abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>매니페스트 활성 응용 프로그램에 대한 신뢰 결정을 관리합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.ApplicationSecurityManager> 클래스 매니페스트 기반 응용 프로그램의 실행에 대 한 필수 정보를 제공 합니다. <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> 속성을 식별 하려면 신뢰 관리자 응용 프로그램은 신뢰할 수 있는지 여부를 결정 합니다. <xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A> 메서드 호출 응용 프로그램 신뢰 관리자를 신뢰할 수 있는 응용 프로그램 인지 확인 합니다. <xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A> 속성 사용자에 대 한 캐시 된 신뢰 결정을 포함 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationTrustManager">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.IApplicationTrustManager ApplicationTrustManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Policy.IApplicationTrustManager ApplicationTrustManager" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationTrustManager As IApplicationTrustManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Policy::IApplicationTrustManager ^ ApplicationTrustManager { System::Security::Policy::IApplicationTrustManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.IApplicationTrustManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 응용 프로그램 트러스트 관리자를 가져옵니다.</summary>
        <value>현재 트러스트 관리자를 나타내는 <see cref="T:System.Security.Policy.IApplicationTrustManager" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 릴리스에서 사용자 지정 구현 될 수 있는 하나의 신뢰 관리자의는 <xref:System.Security.Policy.IApplicationTrustManager> 인터페이스입니다. 기본 트러스트 관리자 구현 메시지를 응용 프로그램을 설치 하 여 응용 프로그램에 부여 된 권한 상승을 사용 권한에 대해 사용자를 표시 합니다. 다른 신뢰 관리자 구현에서는 사용자 환경이 있을 수 있습니다. 예를 들어는 구현에는 해당 정보에 대 한 사용자에 게 확인 하는 것이 아니라 신뢰할 수 있는 응용 프로그램에 대 한 엔터프라이즈 목록을 확인할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Policy.PolicyException">이 응용 프로그램에 대한 정책에 트러스트 관리자가 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">보고 하 여 정책을 수정할 수 있습니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DetermineApplicationTrust">
      <MemberSignature Language="C#" Value="public static bool DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DetermineApplicationTrust(class System.ActivationContext activationContext, class System.Security.Policy.TrustManagerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DetermineApplicationTrust(ActivationContext ^ activationContext, System::Security::Policy::TrustManagerContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="context" Type="System.Security.Policy.TrustManagerContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">응용 프로그램의 활성화 컨텍스트를 식별하는 <see cref="T:System.ActivationContext" />입니다.</param>
        <param name="context">응용 프로그램의 트러스트 관리자 컨텍스트를 식별하는 <see cref="T:System.Security.Policy.TrustManagerContext" />입니다.</param>
        <summary>지정된 응용 프로그램을 요청된 권한 집합으로 실행하도록 사용자가 허용하는지 여부를 확인합니다.</summary>
        <returns>
          지정된 응용 프로그램을 실행하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A> 사용 하 여 구성 된 <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> 권한 요청 된 응용 프로그램 매니페스트에 집합으로 지정된 된 응용 프로그램의 실행을 허용할지 여부를 결정 하는 속성입니다. 트러스트 관리자 동작은 트러스트 관리자 구현에 따라 달라 집니다. 및 전달 된 정보는 `context` 매개 변수입니다. 트러스트 관리자의 기본 동작은 사용자의 승인을 확인 하려면 사용자 인터페이스 (UI) 대화 상자를 설정 하는 것입니다. 그러나 신뢰 관리자는 회사 데이터베이스에서 제공 하는 결정 등의 다른 조건에 따라 응용 프로그램의 신뢰 상태를 결정할 수도 있습니다. 신뢰 결정을 내리도록 지속 가능에 따라는 `context` 매개 변수 속성 및 트러스트 관리자 구현 합니다. 미래에 대 한 호출이 사용자 대화 상자에 따라 결정에 대 한 응용 프로그램에 대 한 트러스트 지속 되 면는 <xref:System.Security.Policy.ApplicationSecurityManager> 해당 응용 프로그램에 대 한 모든 요청에 대 한 UI 대화 상자를 표시 하지 것입니다. <xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A> 매니페스트를 하지만 로컬 시스템에 응용 프로그램 다운로드 되기 전에 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activationContext" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="UserApplicationTrusts">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.ApplicationTrustCollection UserApplicationTrusts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Policy.ApplicationTrustCollection UserApplicationTrusts" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserApplicationTrusts As ApplicationTrustCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Policy::ApplicationTrustCollection ^ UserApplicationTrusts { System::Security::Policy::ApplicationTrustCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrustCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자에 대해 캐시된 신뢰 결정이 들어 있는 응용 프로그램 트러스트 컬렉션을 가져옵니다.</summary>
        <value>사용자에 대해 캐시된 신뢰 결정이 들어 있는 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션에서 신뢰 결정 같은 컬렉션의 메서드를 사용 하 여 유지 관리 되는 <xref:System.Security.Policy.ApplicationTrustCollection.Add%2A> 메서드 또는 <xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">보고 하 여 정책을 수정할 수 있습니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>