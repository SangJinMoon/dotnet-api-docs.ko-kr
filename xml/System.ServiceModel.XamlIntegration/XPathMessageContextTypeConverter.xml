<Type Name="XPathMessageContextTypeConverter" FullName="System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25d710d0a75e4495c3f6b46e5a42f541cae6687b" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53482889" /></Metadata><TypeSignature Language="C#" Value="public class XPathMessageContextTypeConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XPathMessageContextTypeConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class XPathMessageContextTypeConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathMessageContextTypeConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type XPathMessageContextTypeConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="060f2-101"><see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />를 XAML로 serialize할 수 있는 형식으로 변환하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-101">Provides a way to convert an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> to a format that can be serialized as XAML.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="060f2-102"><xref:System.ServiceModel.Dispatcher.XPathMessageContext>는 XAML로 serialize할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-102">The <xref:System.ServiceModel.Dispatcher.XPathMessageContext> cannot be serialized as XAML.</span></span> <span data-ttu-id="060f2-103">이 문제를 해결하려면 <xref:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter>를 사용하여 <xref:System.ServiceModel.Dispatcher.XPathMessageContext> 클래스의 인스턴스를 <xref:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension>의 인스턴스로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-103">To solve this problem, use the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter> to convert an instance of the <xref:System.ServiceModel.Dispatcher.XPathMessageContext> class to an instance of the <xref:System.ServiceModel.XamlIntegration.XPathMessageContextMarkupExtension>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageContextTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageContextTypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="060f2-104"><see cref="T:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-104">Initializes a new instance of the <see cref="T:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="xPathMessageContextTypeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="060f2-105">형식 컨텍스트를 제공하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-105">A type that provides the format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="060f2-106">변환할 원본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-106">The type to convert from.</span></span></param>
        <summary><span data-ttu-id="060f2-107">컨텍스트를 한 형식에서 이 변환기의 형식으로 변환할 수 있는지 여부를 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-107">Tests whether a context can be converted from one type to the type of this converter.</span></span></summary>
        <returns><span data-ttu-id="060f2-108">형식을 변환할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-108"><see langword="true" /> if the type can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="xPathMessageContextTypeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="060f2-109">형식 컨텍스트를 제공하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-109">A type that provides the format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="060f2-110">형식 컨텍스트를 제공하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-110">A type that provides the format context.</span></span></param>
        <summary><span data-ttu-id="060f2-111">형식을 대상 형식으로 변환할 수 있는지 여부를 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-111">Tests whether a type can be converted into a target type.</span></span></summary>
        <returns><span data-ttu-id="060f2-112">변환을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-112"><see langword="true" /> if the conversion can be performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="xPathMessageContextTypeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="060f2-113">형식 컨텍스트를 제공하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-113">A type that provides the format context.</span></span></param>
        <param name="culture"><span data-ttu-id="060f2-114">달력 및 숫자 서식과 같은 특정 문화권에 대한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-114">The information about a specific culture, such as calendars, and number formats.</span></span></param>
        <param name="value"><span data-ttu-id="060f2-115">변환할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-115">The object to convert.</span></span></param>
        <summary><span data-ttu-id="060f2-116">지정된 컨텍스트 및 문화권 정보를 사용하여 제공된 컨텍스트 개체를 XAML로 serialize할 수 있는 이 변환기의 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-116">Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="060f2-117">변환 프로세스의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-117">The result of the conversion process.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="xPathMessageContextTypeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="060f2-118">형식 컨텍스트를 제공하는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-118">A type that provides the format context.</span></span></param>
        <param name="culture"><span data-ttu-id="060f2-119">달력 및 숫자 서식과 같은 특정 문화권에 대한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-119">The information about a specific culture, such as calendars, and number formats.</span></span></param>
        <param name="value"><span data-ttu-id="060f2-120">변환할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-120">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="060f2-121"><paramref name="value" /> 인수를 변환할 대상 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-121">The type to convert the <paramref name="value" /> argument to.</span></span></param>
        <summary><span data-ttu-id="060f2-122">지정된 컨텍스트 및 문화권 정보를 사용하여 제공된 컨텍스트 개체를 XAML로 serialize할 수 있는 이 변환기의 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-122">Converts the provided context object into the XAML-serializable type of this converter, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="060f2-123">변환된 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="060f2-123">The converted context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>