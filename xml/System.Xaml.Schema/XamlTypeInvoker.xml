<Type Name="XamlTypeInvoker" FullName="System.Xaml.Schema.XamlTypeInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="504f5574033cb4de7a3c6a42e6208306d4dd86e5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlTypeInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="05161-101">리플렉션 및 생성자 외의 다른 기술을 통해 XAML 형식의 인스턴스를 생성할 수 있는 확장 지점을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="05161-101">Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05161-102">목적은 <xref:System.Xaml.Schema.XamlTypeInvoker> extensible XAML 형식 시스템, 스키마 및 CLR 특성을 통해 리플렉션 정보 등의 CLR 기능에 완벽 하 게 의존 하지 않는 런타임에 작업을 사용 하도록 설정 하는 것 <xref:System.Type> 및 <xref:System.Reflection.MemberInfo>등입니다.</span><span class="sxs-lookup"><span data-stu-id="05161-102">The purpose of <xref:System.Xaml.Schema.XamlTypeInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="05161-103">서브 클래스 <xref:System.Xaml.Schema.XamlTypeInvoker> 같은 XAML 스키마 클래스의 다른 생성자에 대 한 입력된 매개 변수로 사용 됩니다 <xref:System.Xaml.XamlType>합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-103">Subclasses of <xref:System.Xaml.Schema.XamlTypeInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="05161-104">서브 클래스를 만들 <xref:System.Xaml.XamlType> 전달는 <xref:System.Xaml.Schema.XamlTypeInvoker> 를 통해 기본 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="05161-104">You subclass <xref:System.Xaml.XamlType> and pass the <xref:System.Xaml.Schema.XamlTypeInvoker> through to the base constructor.</span></span> <span data-ttu-id="05161-105">정의한는 <xref:System.Xaml.Schema.XamlTypeInvoker> 생성자에 대 한도 제공 해야에 대 한 재정의 이상 중 일부는 `Lookup` 방식의 <xref:System.Xaml.XamlType>합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-105">Along with defining a <xref:System.Xaml.Schema.XamlTypeInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlType>.</span></span>  
  
 <span data-ttu-id="05161-106"><xref:System.Xaml.Schema.XamlTypeInvoker> 기본 구현이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="05161-106"><xref:System.Xaml.Schema.XamlTypeInvoker> has a default implementation.</span></span> <span data-ttu-id="05161-107">기본 구현에서는 XAML 스키마 형식의 기본 구현에 비슷한 모델을 따르는 <xref:System.Xaml.XamlType> 및 <xref:System.Xaml.XamlMember>: 인스턴스화, 값 및 CLR 특성을 사용 하는 등, 조회에 대 한 CLR 형식 시스템을 사용 하는 <xref:System.Type> 및 <xref:System.Reflection.MemberInfo>등입니다.</span><span class="sxs-lookup"><span data-stu-id="05161-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="05161-108"><xref:System.Xaml.Schema.XamlTypeInvoker> 기본 인스턴스화에 대 한 메서드를 제공 (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) 및 형식에 대 한 관련 되는 메서드와 위치는 <xref:System.Xaml.XamlType> 컬렉션, 사전 또는 배열 나타냅니다 (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span><span class="sxs-lookup"><span data-stu-id="05161-108"><xref:System.Xaml.Schema.XamlTypeInvoker> provides methods for basic instantiation (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) and methods that are relevant for types where the <xref:System.Xaml.XamlType> represents a collection, dictionary or array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="05161-109">
            <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-109">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlTypeInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlTypeInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05161-110">
            <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-110">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05161-111">기본 구현에서는 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="05161-111">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="05161-112">에 대 한 값을 제공 하려면이 생성자는 내부적으로 호출 <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-112">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="05161-113">에 대 한는 <xref:System.Xaml.Schema.XamlTypeInvoker> 하위 클래스 중 하나를 사용 하는 것으로 예상는 <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> 생성에 대 한 서명 하거나 호출 하는 재정의 제공 <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-113">For a <xref:System.Xaml.Schema.XamlTypeInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> as base.</span></span> <span data-ttu-id="05161-114">제공 하는 <xref:System.Xaml.XamlType> 기본은 구현 패턴 where <xref:System.Xaml.Schema.XamlTypeInvoker> 는 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="05161-114">Providing the <xref:System.Xaml.XamlType> implements a default pattern where <xref:System.Xaml.Schema.XamlTypeInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeInvoker (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeInvoker(System::Xaml::XamlType ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="05161-115">이 <see cref="T:System.Xaml.XamlType" />와 관련된 특정 XAML 형식에 대한 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-115">The <see cref="T:System.Xaml.XamlType" /> value for the specific XAML type relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05161-116">제공된 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />을 기반으로 <see cref="T:System.Xaml.XamlType" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-116">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05161-117">이 생성자를 기반으로 내부적으로 호출 됩니다는 <xref:System.Xaml.XamlType> 여기서는 <xref:System.Xaml.Schema.XamlTypeInvoker> 생성에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-117">This constructor is called internally based on the <xref:System.Xaml.XamlType> where the <xref:System.Xaml.Schema.XamlTypeInvoker> is used for construction.</span></span> <span data-ttu-id="05161-118">`type` 에 대 한 다른 모든 메서드 호출 여기에 관련이 제공 <xref:System.Xaml.Schema.XamlTypeInvoker>합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-118">The `type` provided here is relevant to all other method calls for <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="05161-119">
            <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-119">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual void AddToCollection (object instance, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollection(object instance, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollection (instance As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollection(System::Object ^ instance, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="05161-120">이 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />를 생성하는 데 사용되는 <see cref="T:System.Xaml.XamlType" />으로 지정된 형식의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-120">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="05161-121">추가할 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-121">The item to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05161-122">제공된 항목을 이 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />와 관련된 형식의 인스턴스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-122">Adds the provided item to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05161-123">에이 메서드를 호출 해야는 <xref:System.Xaml.XamlType> 컬렉션을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="05161-123">You should only call this method on a <xref:System.Xaml.XamlType> that represents a collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="05161-124">알 수 없는 <see cref="T:System.Xaml.XamlType" />을 기준으로 하는 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />에 대해 이 메서드를 호출한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-124">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="05161-125">** 또는 **</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-125">**-or-**</span>
          </span>
          <span data-ttu-id="05161-126">관련 형식이 컬렉션이 아닌 경우 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />에 대해 이 메서드를 호출한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="05161-127">
            <paramref name="instance" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-127">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="05161-128">이 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />에 대한 <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />가 <see langword="null" />을 반환하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-128">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05161-129">기본 구현 내부 도우미에 대 한 호출에 포함 <c>ThrowIfUnknown</c>합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-129">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="05161-130">이 도우미는 항상 사례에 대 한 throw 여기서는 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 알 수에 따라 <see cref="T:System.Xaml.XamlType" />는 경우는 <see cref="P:System.Xaml.XamlType.UnderlyingType" /> 의 <see cref="T:System.Xaml.XamlType" /> 은 <see langword="null" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-130">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="05161-131">내부적으로 기본 구현 호출 <see cref="P:System.Xaml.XamlType.IsCollection" />, 결과 경우 throw <see langword="false" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-131">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsCollection" />, and throws if the result is <see langword="false" />.</span>
            </span>
            <span data-ttu-id="05161-132">기본 구현을 사용 하지 않는 반드시 자체 <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-132">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span>
            </span>
            <span data-ttu-id="05161-133">먼저, 캐스팅 <paramref name="instance" /> 를 <see cref="T:System.Collections.IList" /> 시도 됩니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-133">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IList" /> is attempted.</span>
            </span>
            <span data-ttu-id="05161-134">성공 하면이에 대 한 호출, <see cref="M:System.Collections.IList.Add(System.Object)" /> 이루어집니다 메서드가 반환 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-134">If this succeeds, a call to <see cref="M:System.Collections.IList.Add(System.Object)" /> is made and the method returns.</span>
            </span>
            <span data-ttu-id="05161-135">기본 구현에서는 CLR을 사용 하는 그렇지 않은 경우 <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> 호출할 내부 <see langword="Add" /> 메서드를 호출에서 가져온 대로 <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> 이 <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-135">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            </span>
            <span data-ttu-id="05161-136">기본 구현에서 예외가 발생 하지 이면이 수준에서 <paramref name="item" /> 은 <see langword="null" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-136">In the base implementation no exception is raised at this level if <paramref name="item" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="05161-137">여전히 수 있는 내부 <see langword="Add" /> 메서드로 호출할 때 예외가 발생 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-137">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span>
            </span>
            <span data-ttu-id="05161-138">다른 런타임 예외는 가능한 경우 <see cref="P:System.Xaml.XamlType.ItemType" /> 유효한 결과 반환 하지 않습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-138">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddToDictionary">
      <MemberSignature Language="C#" Value="public virtual void AddToDictionary (object instance, object key, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToDictionary(object instance, object key, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToDictionary (instance As Object, key As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToDictionary(System::Object ^ instance, System::Object ^ key, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="05161-139">이 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />를 생성하는 데 사용되는 <see cref="T:System.Xaml.XamlType" />으로 지정된 형식의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-139">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="05161-140">추가할 항목에 대한 사전 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-140">Dictionary key for the item to add.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="05161-141">추가할 항목 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-141">The item value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05161-142">제공된 키 및 항목 값을 이 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />와 관련된 형식의 인스턴스에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-142">Adds the provided key and item value to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05161-143">에이 메서드를 호출 해야는 <xref:System.Xaml.XamlType> 사전을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="05161-143">You should only call this method on a <xref:System.Xaml.XamlType> that represents a dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="05161-144">알 수 없는 <see cref="T:System.Xaml.XamlType" />을 기준으로 하는 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />에 대해 이 메서드를 호출한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-144">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="05161-145">** 또는 **</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-145">**-or-**</span>
          </span>
          <span data-ttu-id="05161-146">관련 형식이 사전이 아닌 경우 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />에 대해 이 메서드를 호출한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-146">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="05161-147">
            <paramref name="instance" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-147">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="05161-148">이 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />에 대한 <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />가 <see langword="null" />을 반환하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-148">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05161-149">기본 구현 내부 도우미에 대 한 호출에 포함 <c>ThrowIfUnknown</c>합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-149">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="05161-150">이 도우미는 항상 사례에 대 한 throw 여기서는 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 알 수에 따라 <see cref="T:System.Xaml.XamlType" />는 경우는 <see cref="P:System.Xaml.XamlType.UnderlyingType" /> 의 <see cref="T:System.Xaml.XamlType" /> 은 <see langword="null" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-150">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="05161-151">내부적으로 기본 구현 호출 <see cref="P:System.Xaml.XamlType.IsDictionary" />, 결과 경우 throw <see langword="false" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-151">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsDictionary" />, and throws if the result is <see langword="false" />.</span>
            </span>
            <span data-ttu-id="05161-152">기본 구현을 사용 하지 않는 반드시 자체 <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-152">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span>
            </span>
            <span data-ttu-id="05161-153">먼저, 캐스팅 <paramref name="instance" /> 를 <see cref="T:System.Collections.IDictionary" /> 시도 됩니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-153">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IDictionary" /> is attempted.</span>
            </span>
            <span data-ttu-id="05161-154">성공 하면이에 대 한 호출, <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> 이루어집니다 메서드가 반환 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-154">If this succeeds, a call to <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> is made and the method returns.</span>
            </span>
            <span data-ttu-id="05161-155">기본 구현에서는 CLR을 사용 하는 그렇지 않은 경우 <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> 호출할 내부 <see langword="Add" /> 메서드를 호출에서 가져온 대로 <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> 이 <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-155">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            </span>
            <span data-ttu-id="05161-156">기본 구현에서 예외가 발생 하지 이면이 수준에서 <paramref name="item" /> 또는 <paramref name="key" /> 는 <see langword="null" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-156">In the base implementation no exception is raised at this level if <paramref name="item" /> or <paramref name="key" /> are <see langword="null" />.</span>
            </span>
            <span data-ttu-id="05161-157">여전히 수 있는 내부 <see langword="Add" /> 메서드로 호출할 때 예외가 발생 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-157">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span>
            </span>
            <span data-ttu-id="05161-158">다른 런타임 예외는 가능한 경우 <see cref="P:System.Xaml.XamlType.ItemType" /> 유효한 결과 반환 하지 않습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-158">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="05161-159">인스턴스에 대해 <see langword="x:ConstructorArgs" />를 제공하는 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-159">An array of objects that supply the <see langword="x:ConstructorArgs" /> for the instance.</span>
          </span>
          <span data-ttu-id="05161-160">
            <see langword="null" />를 필요로 하지 않거나 사용하지 않는 형식의 경우 <see langword="x:ConstructorArgs" />일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-160">May be <see langword="null" /> for types that do not require or use <see langword="x:ConstructorArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05161-161">이 <see cref="T:System.Xaml.XamlType" />에 대해 생성자가 시작한 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />을 기반으로 개체 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-161">Creates an object instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05161-162">이 <see cref="T:System.Xaml.XamlType" />에 대해 생성자가 시작한 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />을 기반으로 만들어진 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-162">The created instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="05161-163">생성자를 확인할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-163">Could not resolve a constructor.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05161-164">기본 구현 내부 도우미에 대 한 호출에 포함 <c>ThrowIfUnknown</c>합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-164">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="05161-165">이 도우미는 항상 사례에 대 한 throw 여기서는 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 알 수에 따라 <see cref="T:System.Xaml.XamlType" />는 경우는 <see cref="P:System.Xaml.XamlType.UnderlyingType" /> 의 <see cref="T:System.Xaml.XamlType" /> 은 <see langword="null" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-165">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(class System.Xaml.XamlType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddMethod (contentType As XamlType) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetAddMethod(System::Xaml::XamlType ^ contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="contentType">
          <span data-ttu-id="05161-166">
            <see langword="Add" /> 메서드가 사용하는 항목 형식에 대한 <see cref="T:System.Xaml.XamlType" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-166">
              <see cref="T:System.Xaml.XamlType" /> for the item type that is used by the <see langword="Add" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05161-167">컬렉션 또는 사전과 관련된 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />에 대해 관련 <see langword="Add" /> 메서드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-167">Returns the relevant <see langword="Add" /> method for a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is relevant to a collection or dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05161-168">
            <see langword="Add" /> 메서드에 대한 CLR <see cref="T:System.Reflection.MethodInfo" /> 정보이거나 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-168">CLR <see cref="T:System.Reflection.MethodInfo" /> information for the <see langword="Add" /> method, or null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05161-169">이 메서드에서 반환 해야 `null` 경우 여기서는 <xref:System.Xaml.XamlType> 이 <xref:System.Xaml.Schema.XamlTypeInvoker> 쓰기 가능한 컬렉션 또는 사전 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="05161-169">This method should return `null` for cases where the <xref:System.Xaml.XamlType> for this <xref:System.Xaml.Schema.XamlTypeInvoker> is not a writeable collection or dictionary.</span></span> <span data-ttu-id="05161-170">특히 반환 해야 `null` 경우 여기서 <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> 반환 `None`합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-170">Specifically, should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="05161-171">완전히 신뢰할 수 있는 XAML 형식 시스템을 액세스 하지 않는 경우이 메서드는 보고서 false로 <xref:System.Reflection.MethodInfo> 호출자에 게 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="05161-171">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="05161-172">
            <paramref name="contentType" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-172">
              <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05161-173">기본 구현은 반환 <see langword="null" /> 사례에 대 한 여기서는 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 알 수에 따라 <see cref="T:System.Xaml.XamlType" />는 경우는 <see cref="P:System.Xaml.XamlType.UnderlyingType" /> 의 <see cref="T:System.Xaml.XamlType" /> 은 <see langword="null" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-173">The base implementation returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="05161-174">또한 반환 <see langword="null" /> 경우 <see cref="P:System.Xaml.XamlType.ItemType" /> 은 <see langword="null" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-174">It also returns <see langword="null" /> if <see cref="P:System.Xaml.XamlType.ItemType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="05161-175">XAML 컬렉션 잠재적으로 두 개 이상을 가질 <see langword="Add" /> 메서드를 XAML 컬렉션에 둘 이상의 내용 유형을 지원 잠재적으로 하기 때문에 (참조 <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, 참조 또는 <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> 이 개념 WPF에의 한 구현에 대 한 정보에 대 한).</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-175">XAML collections potentially have more than one <see langword="Add" /> method, because a XAML collection can potentially support more than one content type (see <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, or see <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> for information about one implementation of this concept in WPF).</span>
            </span>
            <span data-ttu-id="05161-176">기본 구현은 내부 논리를 사용 하 여 서명 및 제공 된 형식에 따라 가장 일치 하는 반환 <paramref name="contentType" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-176">The default implementation uses internal logic to return the best match based on the signatures and the type of the supplied <paramref name="contentType" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetEnumeratorMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumeratorMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetEnumeratorMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="05161-177">항목을 열거할 수 있는 메서드를 나타내는 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-177">Returns an object representing a method that can enumerate over items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05161-178">열거자 메서드에 대한 <see cref="T:System.Reflection.MethodInfo" />이거나 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-178">
              <see cref="T:System.Reflection.MethodInfo" /> for an enumerator method, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05161-179">반환 해야 `null` 경우 여기서 <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> 반환 `None`합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-179">Should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="05161-180">완전히 신뢰할 수 있는 XAML 형식 시스템을 액세스 하지 않는 경우이 메서드는 보고서 false로 <xref:System.Reflection.MethodInfo> 호출자에 게 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="05161-180">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05161-181">기본 구현 내부 도우미 메서드를 호출합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-181">The base implementation calls an internal helper method.</span>
            </span>
            <span data-ttu-id="05161-182">해당 도우미 반환 <see langword="null" /> 사례에 대 한 여기서는 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 알 수에 따라 <see cref="T:System.Xaml.XamlType" />는 경우는 <see cref="P:System.Xaml.XamlType.UnderlyingType" /> 의 <see cref="T:System.Xaml.XamlType" /> 은 <see langword="null" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-182">That helper returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="05161-183">또한 반환 <see langword="null" /> 사례에 대 한 여기서 <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> 반환 <see langword="None" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-183">It also returns <see langword="null" /> for cases where <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> returns <see langword="None" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetItems (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetItems(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems (instance As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetItems(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="05161-184">이 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />를 생성하는 데 사용되는 <see cref="T:System.Xaml.XamlType" />으로 지정된 형식의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-184">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="05161-185">항목 집합을 나타내는 <see cref="T:System.Collections.IEnumerator" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-185">Returns an <see cref="T:System.Collections.IEnumerator" /> object representing the set of items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="05161-186">
            <see cref="T:System.Collections.IEnumerator" /> 개체이거나 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-186">An <see cref="T:System.Collections.IEnumerator" /> object, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="05161-187">알 수 없는 <see cref="T:System.Xaml.XamlType" />을 기준으로 하는 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />에 대해 이 메서드를 호출한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-187">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="05161-188">** 또는 **</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-188">**-or-**</span>
          </span>
          <span data-ttu-id="05161-189">관련 형식이 컬렉션 또는 사전이 아닌 경우 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />에 이 메서드를 호출했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-189">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection or dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="05161-190">
            <paramref name="instance" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-190">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05161-191">기본 구현 내부 도우미에 대 한 호출에 포함 <c>ThrowIfUnknown</c>합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-191">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="05161-192">이 도우미는 항상 사례에 대 한 throw 여기서는 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 알 수에 따라 <see cref="T:System.Xaml.XamlType" />는 경우는 <see cref="P:System.Xaml.XamlType.UnderlyingType" /> 의 <see cref="T:System.Xaml.XamlType" /> 은 <see langword="null" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-192">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="05161-193">기본 구현을 사용 하지 않는 반드시 자체 <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-193">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementation.</span>
            </span>
            <span data-ttu-id="05161-194">먼저, 캐스팅 <paramref name="instance" /> 를 <see cref="T:System.Collections.IEnumerable" /> 시도 됩니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-194">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IEnumerable" /> is attempted.</span>
            </span>
            <span data-ttu-id="05161-195">성공 하면이에 대 한 호출, <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 이루어집니다 값을 반환 하는 메서드에 반환 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-195">If this succeeds, a call to <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> is made and the method returns that return value.</span>
            </span>
            <span data-ttu-id="05161-196">기본 구현에서는 CLR을 사용 하는 그렇지 않은 경우 <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> 호출할 내부 <see langword="GetEnumerator" /> 메서드를 호출에서 가져온 대로 <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> 이 <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="05161-196">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="GetEnumerator" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ SetMarkupExtensionHandler { EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05161-197">
            <see cref="T:System.Xaml.XamlObjectWriter" />가 구현된 <see cref="T:System.Windows.Markup.MarkupExtension" />을 호출할 때 사용할 처리기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-197">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into an implemented <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05161-198">이 경우를 처리하는 처리기 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-198">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05161-199">이벤트 처리기는 기반 <xref:System.EventHandler%601> 의 제약을 받는 <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> 이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="05161-199">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="05161-200">호출 반환 되는 값은 <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> 의 동작은 <xref:System.Xaml.XamlType> 하는 <xref:System.Xaml.Schema.XamlTypeInvoker> 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-200">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="05161-201">반환 값은 `null` 에 대 한는 <xref:System.Xaml.Schema.XamlTypeInvoker> 알 수를 기반으로 하는 <xref:System.Xaml.XamlType>합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-201">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConverterHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ SetTypeConverterHandler { EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05161-202">
            <see cref="T:System.Xaml.XamlObjectWriter" />가 CLR 구현된 <see cref="T:System.ComponentModel.TypeConverter" />를 호출할 때 사용할 처리기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-202">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into a CLR-implemented <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05161-203">이 경우를 처리하는 처리기 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-203">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05161-204">이벤트 처리기는 기반 <xref:System.EventHandler%601> 의 제약을 받는 <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> 이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="05161-204">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="05161-205">호출 반환 되는 값은 <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> 의 동작은 <xref:System.Xaml.XamlType> 하는 <xref:System.Xaml.Schema.XamlTypeInvoker> 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-205">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="05161-206">반환 값은 `null` 에 대 한는 <xref:System.Xaml.Schema.XamlTypeInvoker> 알 수를 기반으로 하는 <xref:System.Xaml.XamlType>합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-206">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlTypeInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlTypeInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="05161-207">알 수 없으며 완전히 구현되지 않은 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />를 나타내는 정적 값을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-207">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="05161-208">알 수 없으며 완전히 구현되지 않은 <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />를 나타내는 정적 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="05161-208">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05161-209">이 값을 제공 하는 <xref:System.Xaml.Schema.XamlTypeInvoker> System.Xaml의 매개 변수 정의 API 호출된 된 코드가 예외를 throw 하면 일반적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="05161-209">Supplying this value for a <xref:System.Xaml.Schema.XamlTypeInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>