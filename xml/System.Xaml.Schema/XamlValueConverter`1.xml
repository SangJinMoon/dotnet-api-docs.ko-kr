<Type Name="XamlValueConverter&lt;TConverterBase&gt;" FullName="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;">
  <TypeSignature Language="C#" Value="public class XamlValueConverter&lt;TConverterBase&gt; : IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt; where TConverterBase : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlValueConverter`1&lt;class TConverterBase&gt; extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlValueConverter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlValueConverter(Of TConverterBase)&#xA;Implements IEquatable(Of XamlValueConverter(Of TConverterBase))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : classpublic ref class XamlValueConverter : IEquatable&lt;System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TConverterBase">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TConverterBase"><span data-ttu-id="e9da9-101">이 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />이 나타내는 특정 변환기에 대한 CLR 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-101">The CLR base class for the particular converter that this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> represents.</span></span> <span data-ttu-id="e9da9-102">일반적으로 <see cref="T:System.ComponentModel.TypeConverter" />, <see cref="T:System.Windows.Markup.MarkupExtension" />, <see cref="T:System.Windows.Markup.ValueSerializer" /> 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-102">Typically this is one of the following: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />;</span></span></typeparam>
    <summary><span data-ttu-id="e9da9-103">최종 대상 형식이 아닌 입력을 기준으로 XAML의 초기화 값이나 serialization 값을 생성하는 기술에 대해 공통 API 영역을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-103">Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type.</span></span> <span data-ttu-id="e9da9-104">여기에는 태그 확장과 형식 변환기가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-104">This includes markup extensions and type converters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9da9-105">이러한 유형의 인스턴스의 같은 API XAML 스키마의 메서드에 의해 반환 된 <xref:System.Xaml.XamlType.LookupTypeConverter%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-105">Instances of this type are returned by methods of the XAML schema API such as <xref:System.Xaml.XamlType.LookupTypeConverter%2A>.</span></span> <span data-ttu-id="e9da9-106">제네릭 구현을 <xref:System.Xaml.Schema.XamlValueConverter%601> 기본 XAML 스키마 및 형식 시스템에서 일반적으로 다른 구현에는 변환 기술 다른 값에 대 한 종속성을 사용 하지 않도록 System.Xaml 어셈블리에 대 한 간접 참조를 제공 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-106">The generic implementation of <xref:System.Xaml.Schema.XamlValueConverter%601> provides indirection for the System.Xaml assembly so that the basic XAML schema and type system does not have to take dependencies on different value conversion techniques that are typically implementations in other assemblies.</span></span>  
  
 <span data-ttu-id="e9da9-107">A <xref:System.Xaml.Schema.XamlValueConverter%601> null 구현 형식 이지만 등으로 구성 될 수는 <xref:System.Xaml.Schema.XamlValueConverter%601> 돌아갑니다 `null` 에 대 한 <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-107">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="e9da9-108">에 대 한 생성자 서명을 <xref:System.Xaml.Schema.XamlValueConverter%601> 사용는 `converterType` 변환 동작을 구현 하는 특정 형식을 참조 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-108">Constructor signatures for <xref:System.Xaml.Schema.XamlValueConverter%601> use a `converterType` parameter that references the specific type that implements the conversion behavior.</span></span> <span data-ttu-id="e9da9-109">제대로 작동을 위해 <xref:System.Xaml.Schema.XamlValueConverter%601> (null이 아닌 하나 <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>), `converterType` 종류를 캐스팅할 수 있는 것으로 예상 되는 `TConverterBase` 제약 조건입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-109">For a properly functioning <xref:System.Xaml.Schema.XamlValueConverter%601> (one that has a nonnull <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>), the `converterType` type is expected to be castable to the `TConverterBase` constraint.</span></span> <span data-ttu-id="e9da9-110">일치 하지 않습니다 조건을 생성자에서 적용 되지 않지만 생성할 수 있습니다는 <xref:System.InvalidCastException> 런타임 시.</span><span class="sxs-lookup"><span data-stu-id="e9da9-110">A mismatch condition is not enforced by constructors, but might produce an <xref:System.InvalidCastException> at run time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9da9-111"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-111">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="converterType"><span data-ttu-id="e9da9-112">변환기 동작을 구현하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-112">The <see cref="T:System.Type" /> that implements the converter behavior.</span></span></param>
        <param name="targetType"><span data-ttu-id="e9da9-113"><see cref="T:System.Xaml.XamlType" />의 대상 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-113">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></param>
        <summary><span data-ttu-id="e9da9-114"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" />을 구현하는 변환기와 <see cref="T:System.Type" />의 대상 형식을 기반으로 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-114">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> and the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="converterType"><span data-ttu-id="e9da9-115">변환기 동작을 구현하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-115">The <see cref="T:System.Type" /> that implements the converter behavior.</span></span></param>
        <param name="targetType"><span data-ttu-id="e9da9-116"><see cref="T:System.Xaml.XamlType" />의 대상 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-116">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></param>
        <param name="name"><span data-ttu-id="e9da9-117">문자열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-117">The string name.</span></span></param>
        <summary><span data-ttu-id="e9da9-118"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" />을 구현하는 변환기, <see cref="T:System.Type" />의 대상 형식 및 문자열 이름을 기반으로 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-118">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, and a string name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9da9-119">경우 `name` 으로 제공 `null`, 하나에 따라 기본 이름이 생성 `converterType` 또는 `targetType`합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-119">If `name` is provided as `null`, a default name is generated based on either `converterType` or `targetType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e9da9-120">매개 변수 셋 모두 <see langword="null" />입니다. 적어도 하나는 null이 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-120">All three parameters are <see langword="null" /> (at least one is required to be non-null).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConverterInstance">
      <MemberSignature Language="C#" Value="public TConverterBase ConverterInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TConverterBase ConverterInstance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterInstance As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TConverterBase ConverterInstance { TConverterBase get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9da9-121">변환기 구현의 생성된 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-121">Gets a created instance of the converter implementation.</span></span></summary>
        <value><span data-ttu-id="e9da9-122">변환기 구현의 생성된 인스턴스이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-122">A created instance of the converter implementation, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9da9-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> 보호 되는 기본 구현을 호출 <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> 은 값을 가져올 (하는 경우 저장 된 값에 액세스할 수 있는 및 <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> 가 이미 한 번 호출이 <xref:System.Xaml.Schema.XamlValueConverter%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> calls the protected default implementation of <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> to get its value (and might be accessing a stored value if <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> was already called once on this <xref:System.Xaml.Schema.XamlValueConverter%601>.</span></span>  
  
 <span data-ttu-id="e9da9-124">A <xref:System.Xaml.Schema.XamlValueConverter%601> null 구현 형식 이지만 등으로 구성 될 수는 <xref:System.Xaml.Schema.XamlValueConverter%601> 돌아갑니다 `null` 에 대 한 <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-124">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterType">
      <MemberSignature Language="C#" Value="public Type ConverterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ConverterType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ConverterType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9da9-125">변환기 동작을 구현하는 클래스에 대한 <see cref="T:System.Type" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-125">Gets the <see cref="T:System.Type" /> for the class that implements the converter behavior.</span></span></summary>
        <value><span data-ttu-id="e9da9-126">변환기 동작을 구현하는 클래스에 대한 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-126">The <see cref="T:System.Type" /> for the class that implements the converter behavior.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual TConverterBase CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TConverterBase CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TConverterBase CreateInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9da9-127">변환기 구현의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-127">Returns an instance of the converter implementation.</span></span></summary>
        <returns><span data-ttu-id="e9da9-128">변환기 구현의 인스턴스이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-128">An instance of the converter implementation, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9da9-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> 보호 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> is protected.</span></span> <span data-ttu-id="e9da9-130">값을 가져올 공용 API 사용 하 여 변환기 인스턴스를 가져오려면 <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-130">To get a converter instance with a public API, get the value of <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 <span data-ttu-id="e9da9-131">A <xref:System.Xaml.Schema.XamlValueConverter%601> null 구현 형식 이지만 등으로 구성 될 수는 <xref:System.Xaml.Schema.XamlValueConverter%601> 돌아갑니다 `null` 에 대 한 <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-131">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlSchemaException"><span data-ttu-id="e9da9-132">변환기가 올바른 기본 형식을 구현하지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-132">Converter did not implement the correct base type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9da9-133"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" />의 이 인스턴스와 개체의 값이 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-133">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and an object have the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e9da9-134">비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-134">The object to compare.</span></span></param>
        <summary><span data-ttu-id="e9da9-135"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" />의 이 인스턴스와 지정한 개체의 값이 같은지 여부를 확인합니다. 이 개체는 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />이기도 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-135">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and a specified object, which must also be a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="e9da9-136"><see langword="true" />가 <paramref name="obj" />이고 이 인스턴스와 같은 값을 가지면 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-136"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="e9da9-137">비교할 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-137">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> to compare.</span></span></param>
        <summary><span data-ttu-id="e9da9-138"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" />의 이 인스턴스와 다른 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 개체의 값이 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-138">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and another <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="e9da9-139"><see langword="true" />가 <paramref name="other" />이고 이 인스턴스와 같은 값을 가지면 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-139"><see langword="true" /> if <paramref name="other" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9da9-140">이 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-140">Returns the hash code for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <returns><span data-ttu-id="e9da9-141">정수 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-141">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9da9-142">이 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />의 문자열 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-142">Gets a string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <value><span data-ttu-id="e9da9-143">이 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />의 문자열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-143">A string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9da9-144">이 속성의 값은 다음 중 하나에 의해 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-144">The value of this property is established by one of the following:</span></span>  
  
-   <span data-ttu-id="e9da9-145">생성자 매개 변수 (참조 <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="e9da9-145">A constructor parameter (see <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>).</span></span>  
  
-   <span data-ttu-id="e9da9-146">다른 생성자 입력을 처리 하는 문자열을 구성 하는 내부 논리입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-146">Internal logic that processes other constructor inputs and forms a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1"><span data-ttu-id="e9da9-147"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-147">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <param name="converter2"><span data-ttu-id="e9da9-148"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-148">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e9da9-149">지정된 두 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 개체의 값이 같은지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-149">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="e9da9-150"><see langword="true" />의 값이 <paramref name="converter1" />의 값과 같으면 <paramref name="converter2" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-150"><see langword="true" /> if the value of <paramref name="converter1" /> is the same as the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1"><span data-ttu-id="e9da9-151"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-151">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <param name="converter2"><span data-ttu-id="e9da9-152"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 또는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-152">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e9da9-153">지정된 두 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> 개체의 값이 다른지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-153">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have different values.</span></span></summary>
        <returns>
          <span data-ttu-id="e9da9-154"><paramref name="converter1" />의 값이 <paramref name="converter2" />의 값과 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-154"><see langword="true" /> if the value of <paramref name="converter1" /> is different than the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9da9-155"><see cref="T:System.Xaml.XamlType" />의 대상 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-155">Gets the target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <value><span data-ttu-id="e9da9-156"><see cref="T:System.Xaml.XamlType" />의 대상 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-156">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9da9-157">이 <see cref="T:System.String" />을 나타내는 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-157">Returns a <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <returns><span data-ttu-id="e9da9-158">이 <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />를 나타내는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-158">A <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9da9-159"><xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> 값은 기반 <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="e9da9-159">The <xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> value is based on <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>