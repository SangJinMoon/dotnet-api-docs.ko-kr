<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4ebf4-101">리플렉션이 아닌 다른 기술을 통해 XAML 멤버의 멤버 특성에 액세스할 수 있는 확장 지점을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-101">Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ebf4-102">목적은 <xref:System.Xaml.Schema.XamlMemberInvoker> extensible XAML 형식 시스템, 스키마 및 CLR 특성을 통해 리플렉션 정보 등의 CLR 기능에 완벽 하 게 의존 하지 않는 런타임에 작업을 사용 하도록 설정 하는 것 <xref:System.Type> 및 <xref:System.Reflection.MemberInfo>등입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-102">The purpose of <xref:System.Xaml.Schema.XamlMemberInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="4ebf4-103">서브 클래스 <xref:System.Xaml.Schema.XamlMemberInvoker> 같은 XAML 스키마 클래스의 다른 생성자에 대 한 입력된 매개 변수로 사용 됩니다 <xref:System.Xaml.XamlMember>합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-103">Subclasses of <xref:System.Xaml.Schema.XamlMemberInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="4ebf4-104">서브 클래스를 만들 <xref:System.Xaml.XamlMember> 전달는 <xref:System.Xaml.Schema.XamlMemberInvoker> 를 통해 기본 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-104">You subclass <xref:System.Xaml.XamlMember> and pass the <xref:System.Xaml.Schema.XamlMemberInvoker> through to the base constructor.</span></span> <span data-ttu-id="4ebf4-105">정의한는 <xref:System.Xaml.Schema.XamlMemberInvoker> 생성자에 대 한도 제공 해야에 대 한 재정의 이상 중 일부는 `Lookup` 방식의 <xref:System.Xaml.XamlMember>합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-105">Along with defining a <xref:System.Xaml.Schema.XamlMemberInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlMember>.</span></span>  
  
 <span data-ttu-id="4ebf4-106"><xref:System.Xaml.Schema.XamlMemberInvoker> 기본 구현이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-106"><xref:System.Xaml.Schema.XamlMemberInvoker> has a default implementation.</span></span> <span data-ttu-id="4ebf4-107">기본 구현에서는 XAML 스키마 형식의 기본 구현에 비슷한 모델을 따르는 <xref:System.Xaml.XamlType> 및 <xref:System.Xaml.XamlMember>: 인스턴스화, 값 및 CLR 특성을 사용 하는 등, 조회에 대 한 CLR 형식 시스템을 사용 하는 <xref:System.Type> 및 <xref:System.Reflection.MemberInfo>등입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="4ebf4-108"><xref:System.Xaml.Schema.XamlMemberInvoker> 기본 get 및 set 작업에 대 한 메서드를 제공 합니다. (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span><span class="sxs-lookup"><span data-stu-id="4ebf4-108"><xref:System.Xaml.Schema.XamlMemberInvoker> provides methods for basic get and set operations (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span></span> <span data-ttu-id="4ebf4-109">또한 속성 제공 <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> 및 <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, 하지만 가상이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-109">It also provides the properties <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> and <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, but these are not virtual.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4ebf4-110">가져올 수 있습니다는 <xref:System.Xaml.Schema.XamlMemberInvoker> System.Xaml 구현에서 개인 클래스로 구현 되는 XAML 지시문을 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-110">It may be possible to obtain a <xref:System.Xaml.Schema.XamlMemberInvoker> value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</span></span> <span data-ttu-id="4ebf4-111">호출 하려고 하면 <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> 또는 <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> 이 호출자에 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-111">If you attempt to call <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> or <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> on this invoker, an exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4ebf4-112"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-112">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ebf4-113"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-113">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ebf4-114">기본 구현에서는 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-114">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="4ebf4-115">에 대 한 값을 제공 하려면이 생성자는 내부적으로 호출 <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-115">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="4ebf4-116">에 대 한는 <xref:System.Xaml.Schema.XamlMemberInvoker> 하위 클래스 중 하나를 사용 하는 것으로 예상는 <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> 생성에 대 한 서명 하거나 호출 하는 재정의 제공 <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-116">For a <xref:System.Xaml.Schema.XamlMemberInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> as base.</span></span> <span data-ttu-id="4ebf4-117">제공 하는 <xref:System.Xaml.XamlMember> 기본은 구현 패턴 where <xref:System.Xaml.Schema.XamlMemberInvoker> 는 변경할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-117">Providing the <xref:System.Xaml.XamlMember> implements a default pattern where <xref:System.Xaml.Schema.XamlMemberInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="4ebf4-118">이 <see cref="T:System.Xaml.XamlMember" />와 관련된 특정 XAML 멤버에 대한 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-118">The <see cref="T:System.Xaml.XamlMember" /> value for the specific XAML member relevant to this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></param>
        <summary><span data-ttu-id="4ebf4-119">제공된 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />을 기반으로 <see cref="T:System.Xaml.XamlMember" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-119">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ebf4-120">이 생성자를 기반으로 내부적으로 호출 됩니다는 <xref:System.Xaml.XamlMember> 여기서는 <xref:System.Xaml.Schema.XamlMemberInvoker> 생성에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-120">This constructor is called internally based on the <xref:System.Xaml.XamlMember> where the <xref:System.Xaml.Schema.XamlMemberInvoker> is used for construction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ebf4-121"><paramref name="member" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4ebf4-121"><paramref name="member" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="4ebf4-122">멤버에 대한 소유자 형식의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-122">An instance of the owner type for the member.</span></span></param>
        <summary><span data-ttu-id="4ebf4-123">인스턴스에서 관련 속성의 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-123">Gets a value of the relevant property from an instance.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-124">요청된 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-124">The requested property value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ebf4-125"><paramref name="instance" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4ebf4-125"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4ebf4-126">알 수 없는 <see cref="T:System.Xaml.XamlMember" />을 기준으로 하는 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />에 대해 이 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="4ebf4-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span></span>  
  
 <span data-ttu-id="4ebf4-127">** 또는 **</span><span class="sxs-lookup"><span data-stu-id="4ebf4-127">**-or-**</span></span>  
  
 <span data-ttu-id="4ebf4-128">쓰기 전용 멤버에 이 메서드를 호출했습니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-128">Invoked this method on a write-only member.</span></span>  
  
 <span data-ttu-id="4ebf4-129">** 또는 **</span><span class="sxs-lookup"><span data-stu-id="4ebf4-129">**-or-**</span></span>  
  
 <span data-ttu-id="4ebf4-130"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4ebf4-130"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4ebf4-131">기본 구현 내부 도우미에 대 한 호출에 포함 <c>ThrowIfUnknown</c>합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-131">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="4ebf4-132">이 도우미는 항상 사례에 대 한 throw 여기서는 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 알 수에 따라 <see cref="T:System.Xaml.XamlMember" />는 경우는 <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> 의 <see cref="T:System.Xaml.XamlMember" /> 은 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-132">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="4ebf4-133">기본 구현 하는 경우 throw <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> 은 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-133">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="4ebf4-134">정적 속성에 대 한 (<see cref="P:System.Reflection.MethodBase.IsStatic" /> 은 <see langword="true" /> 당 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />)는 기본 구현 호출 <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> 에 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> 전달 <see langword="null" /> 첫 번째 매개 변수로 및 패키지 <paramref name="instance" /> 두 번째에서입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-134">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passing <see langword="null" /> as the first parameter and packaged <paramref name="instance" /> in the second.</span></span> <span data-ttu-id="4ebf4-135">비정적 속성에 대 한 호출 <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> 전달는 <paramref name="instance" /> 첫 번째 매개 변수 및 두 번째 매개 변수로 빈 패키지 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-135">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards the <paramref name="instance" /> as the first parameter and an empty package as the second parameter.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="4ebf4-136">멤버에 대한 소유자 형식의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-136">An instance of the owner type for the member.</span></span></param>
        <param name="value"><span data-ttu-id="4ebf4-137">설정할 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-137">The property value to set.</span></span></param>
        <summary><span data-ttu-id="4ebf4-138">인스턴스에 관련 속성의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-138">Sets a value of the relevant property on an instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ebf4-139"><paramref name="instance" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4ebf4-139"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4ebf4-140">알 수 없는 <see cref="T:System.Xaml.XamlMember" />을 기준으로 하는 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />에 대해 이 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="4ebf4-140">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span></span>  
  
 <span data-ttu-id="4ebf4-141">** 또는 **</span><span class="sxs-lookup"><span data-stu-id="4ebf4-141">**-or-**</span></span>  
  
 <span data-ttu-id="4ebf4-142">읽기 전용 멤버에 이 메서드를 호출했습니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-142">Invoked this method on a read-only member.</span></span>  
  
 <span data-ttu-id="4ebf4-143">** 또는 **</span><span class="sxs-lookup"><span data-stu-id="4ebf4-143">**-or-**</span></span>  
  
 <span data-ttu-id="4ebf4-144"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4ebf4-144"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4ebf4-145">기본 구현 내부 도우미에 대 한 호출에 포함 <c>ThrowIfUnknown</c>합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-145">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="4ebf4-146">이 도우미는 항상 사례에 대 한 throw 여기서는 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 알 수에 따라 <see cref="T:System.Xaml.XamlMember" />는 경우는 <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> 의 <see cref="T:System.Xaml.XamlMember" /> 은 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-146">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="4ebf4-147">기본 구현 하는 경우 throw <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> 은 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-147">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="4ebf4-148">정적 속성에 대 한 (<see cref="P:System.Reflection.MethodBase.IsStatic" /> 은 <see langword="true" /> 당 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />)는 기본 구현 호출 <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> 에 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> 전달 <see langword="null" /> 첫 번째 매개 변수 및 패키징 <paramref name="instance" /> 및 <paramref name="value" /> 으로 두 번째 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-148">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passing <see langword="null" /> as the first parameter and packaging <paramref name="instance" /> and <paramref name="value" /> as the second parameter.</span></span> <span data-ttu-id="4ebf4-149">비정적 속성에 대 한 호출 <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> 전달 <paramref name="instance" /> 첫 번째 매개 변수로 및 <paramref name="value" /> 두 번째 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-149">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards <paramref name="instance" /> as first parameter and <paramref name="value" /> as second parameter.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="4ebf4-150">지속성을 검사할 속성이 포함된 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-150">The instance with the property to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="4ebf4-151">serialization 프로세스에서 값을 지속시켜야 하는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-151">Indicates whether the value needs to be persisted by serialization processes.</span></span></summary>
        <returns><span data-ttu-id="4ebf4-152">열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-152">A value of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ebf4-153">기본 구현에서는 반환 <xref:System.Xaml.Schema.ShouldSerializeResult.Default> XAML 멤버 자체를 하는 경우 <xref:System.Xaml.XamlMember.IsUnknown%2A>, 경우 CLR-리플렉션이 관련 또는 `ShouldSerialize` 메서드를 통해 기본 리플렉션 내부 멤버에서 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-153">The default implementation returns <xref:System.Xaml.Schema.ShouldSerializeResult.Default> if the XAML member itself is <xref:System.Xaml.XamlMember.IsUnknown%2A>, or if no CLR-reflection relevant `ShouldSerialize` method is found on the underlying member through default reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ebf4-154">이 <see cref="T:System.Reflection.MethodInfo" />와 관련된 속성의 값을 가져오는 CLR 메서드에 대한 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-154">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="4ebf4-155">이 <see cref="T:System.Reflection.MethodInfo" />와 관련된 속성의 값을 가져오는 CLR 메서드에 대한 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-155">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ebf4-156">호출에서이 속성은 <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> 의 생성에 <xref:System.Xaml.XamlMember>합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-156">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="4ebf4-157">알 수에 대 한 <xref:System.Xaml.XamlMember>, 경우 여기서 <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> 반환 `null`,이 속성은 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-157">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ebf4-158">이 <see cref="T:System.Reflection.MethodInfo" />와 관련된 속성의 값을 설정하는 CLR 메서드에 대한 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-158">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="4ebf4-159">이 <see cref="T:System.Reflection.MethodInfo" />와 관련된 속성의 값을 설정하는 CLR 메서드에 대한 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />이거나 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-159">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ebf4-160">호출에서이 속성은 <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> 의 생성에 <xref:System.Xaml.XamlMember>합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-160">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="4ebf4-161">알 수에 대 한 <xref:System.Xaml.XamlMember>, 경우 여기서 <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> 반환 `null`,이 속성은 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-161">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ebf4-162">알 수 없으며 완전히 구현되지 않은 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />를 나타내는 정적 값을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-162">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="4ebf4-163">알 수 없으며 완전히 구현되지 않은 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />를 나타내는 정적 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-163">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ebf4-164">이 값을 제공 하는 <xref:System.Xaml.Schema.XamlMemberInvoker> System.Xaml의 매개 변수 정의 API 호출된 된 코드가 예외를 throw 하면 일반적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ebf4-164">Supplying this value for a <xref:System.Xaml.Schema.XamlMemberInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>