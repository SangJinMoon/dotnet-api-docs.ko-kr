<Type Name="EnumDataTypeAttribute" FullName="System.ComponentModel.DataAnnotations.EnumDataTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c2b6e91f4dbc568c3de0f3e61aa2d6fb0d9c931" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36710427" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EnumDataTypeAttribute : System.ComponentModel.DataAnnotations.DataTypeAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EnumDataTypeAttribute extends System.ComponentModel.DataAnnotations.DataTypeAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EnumDataTypeAttribute&#xA;Inherits DataTypeAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumDataTypeAttribute sealed : System::ComponentModel::DataAnnotations::DataTypeAttribute" />
  <TypeSignature Language="F#" Value="type EnumDataTypeAttribute = class&#xA;    inherit DataTypeAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.DataAnnotations.DataTypeAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>.NET Framework 열거형을 데이터 열에 매핑할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스를 사용 하면 열거형 상수 이름을 해당 내부 값 열에 매핑할 수 있습니다. 이 데이터베이스 값에 해당 하는 설명이 포함 된 값을 포함 하는 열거형을 정의 하 고 그런 다음 데이터가 표시 되 면 열거형 상수 이름을 데이터베이스 값 대신 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 해당 선언으로 열거형의 숫자 값을 대체 하는 방법을 보여 줍니다.  
  
```csharp  
public enum eReorderLvl {  
        zero = 0,  
        five = 5,  
        ten=10,  
        fifteen=15,  
        twenty=20,  
        twenty_five=25,  
        thirty=30  
    }  
    [MetadataType(typeof(Product_MD))]  
    public partial class Product {  
        public class Product_MD {  
            [EnumDataType(typeof(eReorderLvl))]  
            public object ReorderLevel { get; set; }  
        }  
    }  
```  
  
```vb  
Imports Public Enum eReorderLvl  
    zero = 0  
    five = 5  
    ten = 10  
    fifteen = 15  
    twenty = 20  
    twenty_five = 25  
    thirty = 30  
End Enum  
<MetadataType(GetType(Product_MD))>  _  
Public Class Product  
    Public Class Product_MD  
        <EnumDataType(GetType(eReorderLvl))>  _  
        Public Property ReorderLevel As Object  
        End Property  
    End Class  
End Class  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumDataTypeAttribute (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enumType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumDataTypeAttribute(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.EnumDataTypeAttribute : Type -&gt; System.ComponentModel.DataAnnotations.EnumDataTypeAttribute" Usage="new System.ComponentModel.DataAnnotations.EnumDataTypeAttribute enumType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType">열거형의 유형입니다.</param>
        <summary>
          <see cref="T:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumType">
      <MemberSignature Language="C#" Value="public Type EnumType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EnumType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.EnumType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnumType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EnumType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnumType : Type" Usage="System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.EnumType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열거형 형식을 가져오거나 설정합니다.</summary>
        <value>열거형 형식입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.IsValid : obj -&gt; bool" Usage="enumDataTypeAttribute.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">유효성을 검사할 데이터 필드 값입니다.</param>
        <summary>데이터 필드 값이 유효한지 확인합니다.</summary>
        <returns>데이터 필드 값이 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>