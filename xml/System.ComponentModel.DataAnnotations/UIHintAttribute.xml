<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UIHintAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac599ca08bd46ee242016659901d279f9fbf4d51e92.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99ca08bd46ee242016659901d279f9fbf4d51e92</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
          <source>Specifies the template or user control that Dynamic Data uses to display a data field.</source>
          <target state="translated">동적 데이터에서 데이터 필드를 표시하기 위해 사용하는 템플릿 또는 사용자 정의 컨트롤을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
          <source>MVC uses the <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> class to associate a model with a data field.</source>
          <target state="translated">MVC를 사용 하 여는 <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> 모델을 데이터 필드와 연결 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
          <source>Dynamic Data uses the <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> class to associate a user control with a data field.</source>
          <target state="translated">동적 데이터에서 사용 하는 <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> 데이터 필드와 사용자 정의 컨트롤을 연결 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
          <source>Dynamic Data uses the <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> property to determine which user control to use in order to display a data field.</source>
          <target state="translated">동적 데이터에서 사용 하는 <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> 속성을 데이터 필드를 표시 하기 위해 사용 하는 사용자 정의 컨트롤을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
          <source>For more information about how to use attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>특성<ept id="p1">](~/docs/standard/attributes/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> attribute to specify the name of a custom field template that will handle the display and editing of a data field.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> 디스플레이 처리 하는 사용자 지정 필드 템플릿의 이름 및 데이터 필드를 편집할 지정 하는 특성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
          <source>For a complete example, see <bpt id="p1">[</bpt>How to: Customize Data Field Display in the Data Model<ept id="p1">](http://msdn.microsoft.com/library/33c2e908-bb52-4656-ba7a-ba55fb04beb2)</ept>.</source>
          <target state="translated">전체 예제를 참조 하십시오. <bpt id="p1">[</bpt>하는 방법: 데이터 모델의 데이터 필드 표시를 사용자 지정<ept id="p1">](http://msdn.microsoft.com/library/33c2e908-bb52-4656-ba7a-ba55fb04beb2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DataAnnotations.UIHintAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
          <source>The user control to use to display the data field.</source>
          <target state="translated">데이터 필드를 표시하는 데 사용할 사용자 정의 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /&gt;</ph> class by using a specified user control.</source>
          <target state="translated">지정된 사용자 정의 컨트롤을 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> object that is created with this constructor is initialized using the specified <ph id="ph2">`uiHint`</ph>, which specifies the user control (field template) to use in order to display the data field.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> 이 생성자를 사용 하 여 만든 개체를 사용 하 여 인스턴스화될 <ph id="ph2">`uiHint`</ph>, 데이터 필드를 표시 하기 위해 사용 하는 사용자 정의 컨트롤 (필드 템플릿)을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
          <source>ASP.NET Dynamic Data provides field templates, page templates, and data controls to render data fields in a data model.</source>
          <target state="translated">ASP.NET Dynamic Data 필드 템플릿, 페이지 서식 파일 및 데이터 모델의 데이터 필드를 렌더링 하는 데이터 컨트롤을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
          <source>You can modify these templates and controls to customize them, or you can create a custom user control.</source>
          <target state="translated">이러한 서식 파일 및 사용자를 지정 하는 컨트롤을 수정할 수 있습니다 또는 사용자 정의 컨트롤을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)">
          <source>If you create a custom user control, you use the <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> property to specify the user control to use to display a data field.</source>
          <target state="translated">사용자 정의 컨트롤을 만들 경우 사용 된 <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> 속성을 통해 데이터 필드를 표시 하는 데 사용자 정의 컨트롤을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
          <source>The user control (field template) to use to display the data field.</source>
          <target state="translated">데이터 필드를 표시하는 데 사용할 사용자 정의 컨트롤(필드 템플릿)입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
          <source>The presentation layer that uses the class.</source>
          <target state="translated">클래스를 사용하는 프레젠테이션 계층입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
          <source>Can be set to "HTML", "Silverlight", "WPF", or "WinForms".</source>
          <target state="translated">"HTML", "Silverlight", "WPF" 또는 "WinForms"으로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /&gt;</ph> class using the specified user control and specified presentation layer.</source>
          <target state="translated">지정된 사용자 컨트롤과 지정된 프레젠테이션 레이어를 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
          <source>The user control (field template) to use to display the data field.</source>
          <target state="translated">데이터 필드를 표시하는 데 사용할 사용자 정의 컨트롤(필드 템플릿)입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
          <source>The presentation layer that uses the class.</source>
          <target state="translated">클래스를 사용하는 프레젠테이션 계층입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
          <source>Can be set to "HTML", "Silverlight", "WPF", or "WinForms".</source>
          <target state="translated">"HTML", "Silverlight", "WPF" 또는 "WinForms"으로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
          <source>The object to use to retrieve values from any data sources.</source>
          <target state="translated">데이터 소스의 값을 검색하는 데 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /&gt;</ph> class by using the specified user control, presentation layer, and control parameters.</source>
          <target state="translated">지정된 사용자 컨트롤, 프레젠테이션 레이어 및 컨트롤 매개 변수를 사용하여 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or it is a constraint key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 제약 조건 키인 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])">
          <source>The value of <ph id="ph1">&lt;see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /&gt;</ph> is not a string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters" /&gt;</ph>의 값은 문자열이 아닙니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.DynamicControlParameter" /&gt;</ph> object to use to retrieve values from any data source.</source>
          <target state="translated">데이터 소스의 값을 검색하는 데 사용할 <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.DynamicControlParameter" /&gt;</ph> 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
          <source>A collection of key/value pairs.</source>
          <target state="translated">키/값 쌍의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters%2A&gt;</ph> property lets you retrieve data from a data model, tracks updates to the data model, and notifies the model of any changes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters%2A&gt;</ph> 속성 데이터 모델에서 데이터를 검색 하면 데이터 모델에 업데이트를 추적 하 고 변경 내용을 모델에 알립니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)">
          <source>The object to compare with this instance, or a <ph id="ph1">&lt;see langword="null" /&gt;</ph> reference.</source>
          <target state="translated">이 인스턴스와 비교할 개체이거나 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 참조입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)">
          <source>Gets a value that indicates whether this instance is equal to the specified object.</source>
          <target state="translated">이 인스턴스가 지정된 개체와 같은지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to this instance; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 개체가 이 인스턴스와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode">
          <source>Gets the hash code for the current instance of the attribute.</source>
          <target state="translated">특성의 현재 인스턴스에 대한 해시 코드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode">
          <source>The attribute instance hash code.</source>
          <target state="translated">특성 인스턴스의 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
          <source>Gets or sets the presentation layer that uses the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /&gt;</ph> 클래스를 사용하는 프레젠테이션 계층을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
          <source>The presentation layer that is used by this class.</source>
          <target state="translated">이 클래스에서 사용하는 프레젠테이션 레이어입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
          <source>This property represents the presentation layer that uses the <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> class.</source>
          <target state="translated">이 속성을 사용 하는 표시 계층은 나타냅니다는 <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer">
          <source>This property can be set to "HTML", "Silverlight", "WPF", or "WinForms".</source>
          <target state="translated">이 속성은 "HTML", "Silverlight", "WPF" 또는 "WinForms"를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.TypeId">
          <source>Gets the unique identifier for the attribute.</source>
          <target state="translated">특성의 고유 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.TypeId">
          <source>The unique identifier for the attribute.</source>
          <target state="translated">특성에 대한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
          <source>Gets or sets the name of the field template to use to display the data field.</source>
          <target state="translated">데이터 필드를 표시하는 데 사용할 필드 템플릿의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
          <source>The name of the field template that displays the data field.</source>
          <target state="translated">데이터 필드를 표시하는 필드 템플릿의 이름입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
          <source>ASP.NET Dynamic Data provides field templates and page templates for rendering data fields in a data model.</source>
          <target state="translated">ASP.NET Dynamic Data 데이터 모델의 데이터 필드를 렌더링 하기 위한 서식 파일 필드 및 페이지 서식 파일을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
          <source>Field templates are user controls (.ascx files) that are mapped to data fields in the model.</source>
          <target state="translated">필드 템플릿은 모델의 데이터 필드에 매핑되는 사용자 정의 컨트롤 (.ascx 파일)입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
          <source>You can modify the default user controls that Dynamic Data provides, or you can create a custom user controls to use as field template.</source>
          <target state="translated">동적 데이터에서 제공 하는 기본 사용자 정의 컨트롤을 수정할 수 있습니다 또는 사용자 지정 필드 템플릿으로 사용할 컨트롤을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
          <source>If you create a custom user control, you use the <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> property on a property so that the property is rendered using the custom user control.</source>
          <target state="translated">사용자 정의 컨트롤을 만들 경우 사용 된 <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> 속성에 속성 속성이 사용자 정의 컨트롤을 사용 하 여 렌더링 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> property specifies which field template to use when a specific column is rendered.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> 속성 필드를 특정 열의 렌더링할 때 사용할 템플릿을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> property can point to one of the templates provided in Dynamic Data or to a custom template.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> 속성 사용자 지정 서식 파일 또는 동적 데이터에서 제공 하는 템플릿 중 하나를 가리킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
          <source>For example, you can create a custom field template named RedText_Edit.ascx, and then use the <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> property to specify that the RedText_Edit.ascx control should be used to render a specified data field instead of the default Text_Edit.ascx template that is provided in Dynamic Data.</source>
          <target state="translated">예를 들어 있습니다 수 RedText_Edit.ascx, 명명 된 사용자 지정 템플릿을 만들고 사용 하 여는 <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> 속성을 통해 RedText_Edit.ascx 제어 하는 데 사용 해야 함을 지정 하는 기본 Text_Edit.ascx 서식 파일 대신 지정 된 데이터 필드를 렌더링 동적 데이터에 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint">
          <source>The following example shows how to specify that the UnitsInStock column in a database will be rendered by using the specified custom field template.</source>
          <target state="translated">다음 예제에서는 사용자 지정 필드를 지정 된 템플릿을 사용 하 여 데이터베이스에 있는 UnitsInStock 열의 렌더링할 지정 하는 방법을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>