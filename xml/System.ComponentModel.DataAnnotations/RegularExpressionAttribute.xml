<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RegularExpressionAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aca8e466fa480d9f0150271f476a9937c201f2a5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aca8e466fa480d9f0150271f476a9937c201f2a5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
          <source>Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.</source>
          <target state="translated">ASP.NET Dynamic Data에 있는 데이터 필드 값이 지정된 정규식과 일치해야 한다고 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
          <source>You apply the RegularExpressionAttribute attribute to a property when you need to validate values for the property against a regular expression.</source>
          <target state="translated">정규식에 대 한 속성에 대 한 값의 유효성을 검사 해야 할 때 속성에 RegularExpressionAttribute 특성을 적용 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
          <source>The regular expression enables you to specify very precisely the format of valid values.</source>
          <target state="translated">정규식을 사용 하면 매우 정확 하 게 유효한 값의 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
          <source>The Pattern property contains the regular expression.If the value of the property is null or an empty string (""), the value automatically passes validation for the RegularExpressionAttribute attribute.</source>
          <target state="translated">패턴 속성 정규식을 포함합니다. 속성의 값이 null 또는 빈 문자열 (""), 값은 자동으로 RegularExpressionAttribute 특성에 대 한 유효성 검사를 통과 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
          <source>To validate that the value is not <ph id="ph1">`null`</ph> or an empty string, use the <bpt id="p1">**</bpt>RequiredAttribute<ept id="p1">**</ept> attribute.</source>
          <target state="translated">유효성을 검사 하는 값이 <ph id="ph1">`null`</ph> 또는 빈 문자열을 사용 하 여는 <bpt id="p1">**</bpt>RequiredAttribute<ept id="p1">**</ept> 특성입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&gt;</ph> attribute to validate the FirstName and LastName data fields.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&gt;</ph> FirstName 및 LastName 데이터 필드의 유효성을 검사 하는 특성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
          <source>The regular expression allows up to 40 uppercase and lowercase characters.</source>
          <target state="translated">정규식에는 최대 40 개의 대문자 및 소문자 자를 허용합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
          <source>The example performs the following tasks:</source>
          <target state="translated">이 예제에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
          <source>Implements a metadata partial class and the associated metadata class.</source>
          <target state="translated">메타 데이터의 partial 클래스 및 관련된 메타 데이터 클래스를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
          <source>In the associated metadata class, applies the <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&gt;</ph> attribute to the FirstName and LastName data fields, specifying the pattern and custom error messages.</source>
          <target state="translated">연결 된 메타 데이터 클래스에 적용 됩니다.는 <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&gt;</ph> 특성을 FirstName 및 LastName 데이터 필드에 패턴 및 사용자 정의 오류 메시지를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
          <source>The regular expression that is used to validate the data field value.</source>
          <target state="translated">데이터 필드 값의 유효성을 검사하는 데 사용되는 정규식입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
          <source>The following example shows how to apply the <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&gt;</ph> to a data field.</source>
          <target state="translated">적용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute&gt;</ph> 데이터 필드에 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
          <source>If validation fails, the code in the example displays the validation error message that is provided by Dynamic Data.</source>
          <target state="translated">유효성 검사에 실패할 경우 예제에서 코드는 동적 데이터에서 제공 되는 유효성 검사 오류 메시지를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="pattern" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pattern" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
          <source>The name of the field that caused the validation failure.</source>
          <target state="translated">유효성 검사 오류를 발생시킨 필드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
          <source>Formats the error message to display if the regular expression validation fails.</source>
          <target state="translated">정규식 유효성 검사에 실패할 경우 표시할 오류 메시지의 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
          <source>The formatted error message.</source>
          <target state="translated">형식이 지정된 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A&gt;</ph> creates the error message by using the name of the data field that caused the validation failure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A&gt;</ph> 유효성 검사 실패를 유발한 데이터 필드의 이름을 사용 하 여 오류 메시지를 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)">
          <source>You can override this method in custom validation attributes to customize how errors are created or to provide a more complex message that contains parameters that you evaluate at run time.</source>
          <target state="translated">사용자 지정 유효성 검사 오류를 만드는 방법을 사용자 지정 하거나 특성을 런타임에 평가 하는 매개 변수가 포함 된 보다 복잡 한 메시지를 제공 합니다.이 메서드를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
          <source>The data field value to validate.</source>
          <target state="translated">유효성을 검사할 데이터 필드 값입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
          <source>Checks whether the value entered by the user matches the regular expression pattern.</source>
          <target state="translated">사용자가 입력한 값이 정규식 패턴과 일치하는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if validation is successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">유효성 검사가 성공하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>, 아닌 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)">
          <source>The data field value did not match the regular expression pattern.</source>
          <target state="translated">데이터 필드 값이 정규식 패턴과 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
          <source>Gets or set the amount of time in milliseconds to execute a single matching operation before the operation times out.</source>
          <target state="translated">작업의 제한 시간이 초과되기 전에 단일 일치 작업을 실행하는 총 시간(밀리초)을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds">
          <source>The amount of time in milliseconds to execute a single matching operation.</source>
          <target state="translated">단일 일치 작업을 실행하는 총 시간(밀리초)입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
          <source>Gets the regular expression pattern.</source>
          <target state="translated">정규식 패턴을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern">
          <source>The pattern to match.</source>
          <target state="translated">일치시킬 패턴입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>