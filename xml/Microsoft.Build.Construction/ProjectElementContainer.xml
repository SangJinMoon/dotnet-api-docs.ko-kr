<Type Name="ProjectElementContainer" FullName="Microsoft.Build.Construction.ProjectElementContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9a6b5b20bf5655f4da4ab482393dc854edc7e21" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30326930" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ProjectElementContainer : Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectElementContainer extends Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectElementContainer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectElementContainer&#xA;Inherits ProjectElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectElementContainer abstract : Microsoft::Build::Construction::ProjectElement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Construction.ProjectElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b1a11-101">프로젝트 요소의 추상 컨테이너 클래스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b1a11-101">Provides an abstract container class for project elements.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllChildren">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; AllChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; AllChildren" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.AllChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllChildren As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ AllChildren { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1a11-102">모든 자식 요소에 대한 재귀적 깊이 우선 열거자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-102">Gets a recursive depth-first enumerator over all child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1a11-103">모든 자식 요소에 대한 재귀적 깊이 우선 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-103">Returns a recursive depth-first enumerator over all child elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a11-104">재귀 없기 때문에 프로젝트 요소 컨테이너 자식으로 프로젝트 요소 컨테이너가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b1a11-104">Recursion is possible because project element containers may contain children that are themselves project element containers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public void AppendChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="b1a11-105">추가할 프로젝트 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-105">The project element to be appended.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1a11-106">
            <paramref name="child" /> 요소를 이 프로젝트 컨테이너의 마지막 자식으로 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-106">Appends the <paramref name="child" /> element as the last child of this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a11-107">이 프로젝트 컨테이너 부모로 지정 되어 있지 않거나 경우 예외를 throw는 `child` 요소에 이미 부모가 지정 되어 있거나는 `child` 요소가 다른에서 만들어졌으면 <xref:Microsoft.Build.Construction.ProjectRootElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="b1a11-107">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ Children { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1a11-108">모든 자식 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-108">Gets all child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1a11-109">모든 자식 요소를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-109">Returns all child elements.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenReversed">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildrenReversed As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ ChildrenReversed { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1a11-110">모든 자식 요소를 가져옵니다(마지막 자식부터 시작).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-110">Gets all child elements, starting from the last child.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1a11-111">모든 자식 요소를 반환합니다(마지막 자식부터 시작).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-111">Returns all child elements, starting from the last child.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1a11-112">자식 요소 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-112">Gets the number of child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1a11-113">자식 요소 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-113">Returns the number of child elements.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement FirstChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ FirstChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1a11-114">첫 번째 자식 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-114">Gets the first child element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1a11-115">첫 번째 자식 요소를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-115">Returns the first child element.</span>
          </span>
          <span data-ttu-id="b1a11-116">자식 요소가 없으면 null을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-116">Returns null if no child element exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a11-117">사용 하 여 <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> 이 속성을 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="b1a11-117">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfterChild">
      <MemberSignature Language="C#" Value="public void InsertAfterChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAfterChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAfterChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAfterChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="b1a11-118">삽입할 프로젝트 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-118">The project element to be inserted.</span>
          </span>
        </param>
        <param name="reference">
          <span data-ttu-id="b1a11-119">해당 위치 뒤에 요소를 삽입할 프로젝트 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-119">The project element to be inserted after.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1a11-120">
            <paramref name="child" /> 요소를 <paramref name="reference" /> 요소 뒤에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-120">Inserts the <paramref name="child" /> element after the <paramref name="reference" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a11-121">경우는 `reference` 요소 null 이면이 메서드는 <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b1a11-121">If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>.</span></span>  
  
 <span data-ttu-id="b1a11-122">이 프로젝트 컨테이너 부모로 지정 되어 있지 않거나 경우 예외를 throw는 `child` 요소에 이미 부모가 지정 되어 또는 경우에는 `child` 요소가 다른에서 만들어졌으면 <xref:Microsoft.Build.Construction.ProjectRootElement>, 또는 경우에는 `reference` 요소가 프로젝트 컨테이너의 자식이 아닙니다. .</span><span class="sxs-lookup"><span data-stu-id="b1a11-122">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBeforeChild">
      <MemberSignature Language="C#" Value="public void InsertBeforeChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertBeforeChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBeforeChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertBeforeChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="b1a11-123">삽입할 프로젝트 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-123">The project element to be inserted.</span>
          </span>
        </param>
        <param name="reference">
          <span data-ttu-id="b1a11-124">해당 위치 앞에 요소를 삽입할 프로젝트 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-124">The project element to be inserted before.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1a11-125">
            <paramref name="child" /> 요소를 <paramref name="reference" /> 요소 앞에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-125">Inserts the <paramref name="child" /> element before the <paramref name="reference" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a11-126">경우는 `reference` 요소 null 이면이 메서드는 <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b1a11-126">If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>.</span></span>  
  
 <span data-ttu-id="b1a11-127">이 프로젝트 컨테이너 부모로 지정 되어 있지 않거나 경우 예외를 throw는 `child` 요소에 이미 부모가 지정 되어 또는 경우에는 `child` 요소가 다른에서 만들어졌으면 <xref:Microsoft.Build.Construction.ProjectRootElement>, 또는 경우에는 `reference` 요소가 프로젝트 컨테이너의 자식이 아닙니다. .</span><span class="sxs-lookup"><span data-stu-id="b1a11-127">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement LastChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ LastChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1a11-128">마지막 자식 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-128">Gets the last child element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1a11-129">마지막 자식 요소를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-129">Returns the last child element.</span>
          </span>
          <span data-ttu-id="b1a11-130">자식 요소가 없으면 null을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-130">Returns null if no child element exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a11-131">사용 하 여 <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> 이 속성을 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="b1a11-131">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public void PrependChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrependChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrependChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrependChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="b1a11-132">추가할 프로젝트 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-132">The project element to be prepended.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1a11-133">
            <paramref name="child" /> 요소를 이 프로젝트 컨테이너의 첫 번째 자식으로 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-133">Prepends the <paramref name="child" /> element as the first child of this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a11-134">이 프로젝트 컨테이너 부모로 지정 되어 있지 않거나 경우 예외를 throw는 `child` 요소에 이미 부모가 지정 되어 있거나는 `child` 요소가 다른에서 만들어졌으면 <xref:Microsoft.Build.Construction.ProjectRootElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="b1a11-134">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllChildren">
      <MemberSignature Language="C#" Value="public void RemoveAllChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllChildren ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b1a11-135">이 프로젝트 컨테이너에 자식이 있는 경우 모두 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-135">Removes all the children, if any, from this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a11-136">이러한 방식으로 자식을 열거 하는 동안 수정할 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="b1a11-136">It is safe to modify the children in this way during enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="b1a11-137">제거할 프로젝트 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-137">The project element to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1a11-138">이 프로젝트 컨테이너에서 <paramref name="child" /> 요소를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1a11-138">Removes a <paramref name="child" /> element from this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1a11-139">자식 요소가 현재이 프로젝트 컨테이너에 의해 부모로 되지 않은 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b1a11-139">Throws an exception if the child element is not currently parented by this project container.</span></span> <span data-ttu-id="b1a11-140">자식을 이러한 방식으로 열거 하는 동안 제거할 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="b1a11-140">It is safe to remove a child this way during enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>