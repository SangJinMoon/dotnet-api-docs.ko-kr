<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NegotiateStream.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c14dd401696189bb315395ed828de5f1c0c89ba3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c14dd401696189bb315395ed828de5f1c0c89ba3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</source>
          <target state="translated">클라이언트-서버 통신에서 협상 보안 프로토콜을 사용하여 클라이언트를 인증하고 선택적으로 서버를 인증하는 스트림을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class for authentication and to help secure information transmitted between a client and a server.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 인증에 대 한 정보를 보호 하려면 클래스는 클라이언트와 서버 간에 전송 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Using <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>, you can do the following.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>, 다음을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Send the client's credentials to the server for Impersonation or Delegation.</source>
          <target state="translated">가장 또는 위임에 대 한 서버에 클라이언트의 자격 증명을 보냅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Request server authentication.</source>
          <target state="translated">서버 인증을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Encrypt and/or sign data before transmitting it.</source>
          <target state="translated">암호화 및/또는 전송 하기 전에 데이터에 서명</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Authentication must be performed before transmitting information.</source>
          <target state="translated">인증 정보를 전송 하기 전에 수행 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Clients request authentication using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> methods, which block until the authentication completes, or the asynchronous <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph> methods, which do not block while waiting for the authentication to complete.</source>
          <target state="translated">클라이언트가 동기를 사용 하 여 인증을 요청할 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> 인증 완료할 때까지 차단 하는 메서드 또는 비동기 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph> 메서드 인증이 완료 되기를 기다리는 동안 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Servers request authentication using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> or asynchronous <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">서버 인증을 사용 하 여 동기 요청 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> 또는 비동기 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The client, and optionally the server, is authenticated using the Negotiate security protocol.</source>
          <target state="translated">클라이언트 및 필요에 따라 서버에 보안 협상 프로토콜을 사용 하 여 인증 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</source>
          <target state="translated">Windows 95/98 시스템에서 Windows NT LAN Manager (NTLM) 인증에 사용 되는 프로토콜입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</source>
          <target state="translated">다른 플랫폼 Kerberos 프로토콜이 인증에 사용 되 클라이언트와 서버 모두에서 지 원하는 경우; 그렇지 않으면 NTLM이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</source>
          <target state="translated">대 한 이러한 프로토콜의 자세한 설명은 MSDN Platform SDK 설명서를 msdn.microsoft.com/library/에서 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class performs the authentication using the Security Support Provider Interface (SSPI).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스 보안 지원 공급자 인터페이스 (SSPI)를 사용 하 여 인증을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services will be used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> to help secure your data during transmission.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 보안 서비스를 확인 하려면 속성에서 사용할는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 을 전송 하는 동안 데이터를 보호 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>You can get information about the remote client or server using the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A&gt;</ph> property.</source>
          <target state="translated">원격 클라이언트 또는 사용 하 여 서버에 대 한 정보를 읽을 수는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>If the authentication fails, you will receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or a <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">인증에 실패 하는 경우 표시 됩니다는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>You send data using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph> or asynchronous <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginWrite%2A&gt;</ph> methods.</source>
          <target state="translated">동기 버전을 사용 하 여 데이터를 보내는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph> 또는 비동기 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginWrite%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>You receive data using the synchronous <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> or asynchronous <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph> methods.</source>
          <target state="translated">동기 버전을 사용 하 여 데이터를 수신 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> 또는 비동기 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>If security services such as encryption or signing are enabled, these are automatically applied to your data by the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">암호화 또는 서명이 설정 되어 같은 보안 서비스를 이러한 자동 적용 됩니다 하 여 데이터에는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> transmits data using a stream that you supply when creating the <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 만들 때 제공 하는 스트림을 사용 하 여 데이터를 전송에서 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>When you supply this underlying stream, you have the option to specify whether closing the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> also closes the underlying stream.</source>
          <target state="translated">지정 하는 옵션이 있는이 내부 스트림을 제공 하는 경우 여부는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 내부 스트림도 닫힙니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The following code example demonstrates the client side of a client-server connection that uses the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 클라이언트 서버 연결의 클라이언트 쪽에서 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The client authenticates and sends a message to the server asynchronously.</source>
          <target state="translated">클라이언트를 인증 하 고 서버에 메시지를 비동기적으로 보냅니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The following code example demonstrates the server side of a client-server connection that uses the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> to authenticate the client and read a message sent by the client.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 클라이언트 서버 연결의 서버 쪽에서 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클라이언트 인증을 받고 클라이언트에서 보낸 메시지를 읽습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>To prevent the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> from closing the stream that you supply, use the <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">방지 하기 위해는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 에서 제공 하는 스트림을 닫는 사용 하 여는 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>에서 데이터를 보내고 받는 데 사용하는 <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used by the <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> for sending and receiving data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>에서 데이터를 보내고 받는 데 사용하는 <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that closing this <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> has no effect on <bpt id="p1">&lt;c&gt;</bpt>innerstream<ept id="p1">&lt;/c&gt;</ept>; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to indicate that closing this <ph id="ph4">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> also closes <bpt id="p2">&lt;c&gt;</bpt>innerStream<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph>을 닫아도 <bpt id="p1">&lt;c&gt;</bpt>innerstream<ept id="p1">&lt;/c&gt;</ept>에 영향을 주지 않으려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 이 <ph id="ph4">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph>을 닫을 때 <bpt id="p2">&lt;c&gt;</bpt>innerStream<ept id="p2">&lt;/c&gt;</ept>도 함께 닫으려면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> and stream closure behavior.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph>과 스트림 닫기 동작을 사용해서 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>When you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`leaveStreamOpen`</ph> parameter, closing the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> has no effect on the <ph id="ph4">`innerStream`</ph> stream; you must explicitly close <ph id="ph5">`innerStream`</ph> when you no longer need it.</source>
          <target state="translated">지정 하는 경우 <ph id="ph1">`true`</ph> 에 대 한는 <ph id="ph2">`leaveStreamOpen`</ph> 닫는 매개 변수는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 영향을 주지 않습니다는 <ph id="ph4">`innerStream`</ph> 스트림; 명시적으로 닫아야 <ph id="ph5">`innerStream`</ph> 더 이상 필요할 때.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>The following code example demonstrates calling this constructor.</source>
          <target state="translated">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph> is equal to <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="innerStream" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.IO.Stream.Null" /&gt;</ph>와 같은 경우</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>The authentication uses the client's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">클라이언트를 사용 하는 인증 <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, 상호 인증을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The authentication process uses the specified client credential.</source>
          <target state="translated">인증 프로세스에는 지정된 클라이언트 자격 증명이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, 상호 인증을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication process uses the specified client credential and the channel binding.</source>
          <target state="translated">인증 프로세스에는 지정된 클라이언트 자격 증명과 채널 바인딩이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, 상호 인증을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> used for extended protection that is passed to this method in the <ph id="ph2">`binding`</ph> parameter would be retrieved by an application from <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> property on the associated <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> 이 메서드에 전달 되는 확장 된 보호에 사용 되는 <ph id="ph2">`binding`</ph> 매개 변수에서 응용 프로그램에 의해 검색 되 <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> 속성은 관련 <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified credentials and authentication options.</source>
          <target state="translated">인증 프로세스에는 지정된 자격 증명과 인증 옵션이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`requiredProtectionLevel`</ph> 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">인증이 성공 보장 하지 않습니다는 요청 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> 승인 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">확인 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> is not a valid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph>은(는) 올바른 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified credential, authentication options, and channel binding.</source>
          <target state="translated">인증 프로세스에는 지정된 자격 증명, 인증 옵션 및 채널 바인딩이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`requiredProtectionLevel`</ph> 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">인증이 성공 보장 하지 않습니다는 요청 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> 승인 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">확인 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> used for extended protection that is passed to this method in the <ph id="ph2">`binding`</ph> parameter would be retrieved by an application from <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> property on the associated <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> 이 메서드에 전달 되는 확장 된 보호에 사용 되는 <ph id="ph2">`binding`</ph> 매개 변수에서 응용 프로그램에 의해 검색 되 <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> 속성은 관련 <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> is not a valid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph>은(는) 올바른 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The authentication uses the client's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">클라이언트를 사용 하는 인증 <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, 상호 인증을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The authentication process uses the specified client credential.</source>
          <target state="translated">인증 프로세스에는 지정된 클라이언트 자격 증명이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, 상호 인증을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication process uses the specified client credential and the channel binding.</source>
          <target state="translated">인증 프로세스에는 지정된 클라이언트 자격 증명과 채널 바인딩이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, and mutual authentication is requested.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>, 상호 인증을 요청 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> used for extended protection that is passed to this method in the <ph id="ph2">`binding`</ph> parameter would be retrieved by an application from <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> property on the associated <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> 이 메서드에 전달 되는 확장 된 보호에 사용 되는 <ph id="ph2">`binding`</ph> 매개 변수에서 응용 프로그램에 의해 검색 되 <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> 속성은 관련 <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified credentials and authentication options.</source>
          <target state="translated">인증 프로세스에는 지정된 자격 증명과 인증 옵션이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`requiredProtectionLevel`</ph> 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">인증이 성공 보장 하지 않습니다는 요청 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> 승인 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">확인 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> is not a valid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph>은(는) 올바른 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified credential, authentication options, and channel binding.</source>
          <target state="translated">인증 프로세스에는 지정된 자격 증명, 인증 옵션 및 채널 바인딩이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`requiredProtectionLevel`</ph> 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">인증이 성공 보장 하지 않습니다는 요청 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> 승인 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">확인 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> used for extended protection that is passed to this method in the <ph id="ph2">`binding`</ph> parameter would be retrieved by an application from <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> property on the associated <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ChannelBinding&gt;</ph> 이 메서드에 전달 되는 확장 된 보호에 사용 되는 <ph id="ph2">`binding`</ph> 매개 변수에서 응용 프로그램에 의해 검색 되 <ph id="ph3">&lt;xref:System.Net.Security.SslStream.TransportContext%2A&gt;</ph> 속성은 관련 <ph id="ph4">&lt;xref:System.Net.Security.SslStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph> is not a valid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="allowedImpersonationLevel" /&gt;</ph>은(는) 올바른 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Handles the server side of an authentication for a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결의 서버측 인증을 처리합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>These methods block while the authentication is in progress.</source>
          <target state="translated">이러한 메서드는 인증 진행 중인 동안 차단 합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>To prevent the application from blocking while waiting for the authentication to complete, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 응용 프로그램을 완료 하기 위한 인증 될 때까지 기다리는 동안 차단 하지 않으려면는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">인증 서버를 사용 하 여 <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, and the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>To prevent blocking until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단를 방지 하려면 중 하나를 사용는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication process uses the specified extended protection policy.</source>
          <target state="translated">인증 프로세스에는 지정된 확장 보호 정책이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">인증 서버를 사용 하 여 <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, and the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`policy`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 확장된 보호 정책은 사용 된 <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> 로 설정 <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>To prevent blocking until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단를 방지 하려면 중 하나를 사용는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph>와 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 매개 변수에서 전달된, 확장된 보호 정책 상의 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 모두 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>로 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the server.</source>
          <target state="translated">서버의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified server credentials and authentication options.</source>
          <target state="translated">인증 프로세스에는 지정된 서버 자격 증명과 인증 옵션이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>To prevent blocking until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단를 방지 하려면 중 하나를 사용는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>이어야 하는 경우</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to try to r-authenticate.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified server credentials, authentication options, and extended protection policy.</source>
          <target state="translated">인증 프로세스에는 지정된 서버 자격 증명, 인증 옵션 및 확장 보호 정책이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`policy`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 확장된 보호 정책은 사용 된 <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> 로 설정 <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>To prevent blocking until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단를 방지 하려면 중 하나를 사용는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph>와 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 매개 변수에서 전달된, 확장된 보호 정책 상의 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 모두 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>이어야 하는 경우</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to try to r-authenticate.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>로 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Handles the server side of an authentication for a client-server connection as an asynchronous operation.</source>
          <target state="translated">클라이언트-서버 연결의 서버 측 인증을 비동기 작업으로 처리합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">인증 서버를 사용 하 여 <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, and the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication process uses the specified extended protection policy.</source>
          <target state="translated">인증 프로세스에는 지정된 확장 보호 정책이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">인증 서버를 사용 하 여 <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, and the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`policy`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 확장된 보호 정책은 사용 된 <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> 로 설정 <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph>와 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 매개 변수에서 전달된, 확장된 보호 정책 상의 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 모두 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>로 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the server.</source>
          <target state="translated">서버의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified server credentials and authentication options.</source>
          <target state="translated">인증 프로세스에는 지정된 서버 자격 증명과 인증 옵션이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>이어야 하는 경우</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to try to r-authenticate.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication process uses the specified server credentials, authentication options, and extended protection policy.</source>
          <target state="translated">인증 프로세스에는 지정된 서버 자격 증명, 인증 옵션 및 확장 보호 정책이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`policy`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 확장된 보호 정책은 사용 된 <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> 로 설정 <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph>와 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 매개 변수에서 전달된, 확장된 보호 정책 상의 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 모두 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>이어야 하는 경우</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to try to r-authenticate.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>로 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Begins an asynchronous operation to authenticate the client side of a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결의 클라이언트측을 인증하는 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The overloads of this method do not block while authentication is in progress.</source>
          <target state="translated">인증이 진행 중인 동안이 메서드의 오버 로드를 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>To block while waiting for the authentication to complete, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> methods.</source>
          <target state="translated">인증이 완료 되기를 기다리는 동안 차단 중 하나를 사용는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">인증이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the operation.</source>
          <target state="translated">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">이 메서드는 차단되지 않습니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The authentication uses the client's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">클라이언트를 사용 하는 인증 <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, and the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class will construct the SPN used for mutual authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 비동기 인증 작업을 완료 해야는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</source>
          <target state="translated">다음 코드 예제에서는 클라이언트에 대 한 비동기 인증을 시작 하려면이 메서드를 호출 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">인증이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified credentials.</source>
          <target state="translated">인증 프로세스에는 지정된 자격 증명이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">이 메서드는 차단되지 않습니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 비동기 인증 작업을 완료 해야는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">인증이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified credentials and channel binding.</source>
          <target state="translated">인증 프로세스에는 지정된 자격 증명과 채널 바인딩이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">이 메서드는 차단되지 않습니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 비동기 인증 작업을 완료 해야는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">인증이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified credentials and authentication options.</source>
          <target state="translated">인증 프로세스에는 지정된 자격 증명과 인증 옵션이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">이 메서드는 차단되지 않습니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`requiredProtectionLevel`</ph> 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">인증이 성공 보장 하지 않습니다는 요청 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> 승인 합니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">확인 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 비동기 인증 작업을 완료 해야는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</source>
          <target state="translated">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">인증이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified credentials, authentication options, and channel binding.</source>
          <target state="translated">인증 프로세스에는 지정된 자격 증명, 인증 옵션 및 채널 바인딩이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">이 메서드는 차단되지 않습니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`requiredProtectionLevel`</ph> 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Successful authentication does not guarantee that the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">인증이 성공 보장 하지 않습니다는 요청 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> 승인 합니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">확인 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 비동기 인증 작업을 완료 해야는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the server.</source>
          <target state="translated">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the client.</source>
          <target state="translated">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="T:System.Net.Security.NegotiateStream">
          <source>Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결의 서버 측 인증을 처리하는 비동기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>The overloads of this method do not block while the authentication is in progress.</source>
          <target state="translated">인증이 진행 중인 동안이 메서드의 오버 로드를 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Security.NegotiateStream">
          <source>To block while waiting for the authentication to complete, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">인증이 완료 되기를 기다리는 동안 차단 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">인증이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the operation.</source>
          <target state="translated">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">이 메서드는 차단되지 않습니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">인증 서버를 사용 하 여 <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">인증이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified extended protection policy.</source>
          <target state="translated">인증 프로세스에는 지정된 확장 보호 정책이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">이 메서드는 차단되지 않습니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The authentication uses the server's <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>.</source>
          <target state="translated">인증 서버를 사용 하 여 <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>No Service Principal Name (SPN) is specified for the server.</source>
          <target state="translated">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The impersonation level is <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, the security level is <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>.</source>
          <target state="translated">가장 수준이 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph>, 보안 수준이 <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`policy`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 확장된 보호 정책은 사용 된 <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> 로 설정 <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph>와 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 매개 변수에서 전달된, 확장된 보호 정책 상의 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 모두 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>로 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">인증이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the operation.</source>
          <target state="translated">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified server credentials and authentication options.</source>
          <target state="translated">인증 프로세스에는 지정된 서버 자격 증명과 인증 옵션이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">이 메서드는 차단되지 않습니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`requiredProtectionLevel`</ph> 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Successful authentication does not guarantee that, the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">인증이 성공 요청 된 보장 하지 않습니다 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> 승인 합니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">확인 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 비동기 인증 작업을 완료 해야는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>이어야 하는 경우</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>to use the explicit <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>.</source>
          <target state="translated">명시적 사용 하려면 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph> that is used to establish the identity of the client.</source>
          <target state="translated">클라이언트의 ID를 설정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.NetworkCredential" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that is used for extended protection.</source>
          <target state="translated">확장 보호에 사용되는 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values, indicating the security services for the stream.</source>
          <target state="translated">스트림의 보안 서비스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values, indicating how the server can use the client's credentials to access resources.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">인증이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</source>
          <target state="translated">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 서버에서 호출합니다.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication process uses the specified server credentials, authentication options, and extended protection policy.</source>
          <target state="translated">인증 프로세스에는 지정된 서버 자격 증명, 인증 옵션 및 확장 보호 정책이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method does not block.</source>
          <target state="translated">이 메서드는 차단되지 않습니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">`requiredProtectionLevel`</ph> parameter to request security services for data transmitted using the authenticated stream.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`requiredProtectionLevel`</ph> 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For example, to have the data encrypted and signed, specify the <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> value.</source>
          <target state="translated">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Successful authentication does not guarantee that, the requested <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> has been granted.</source>
          <target state="translated">인증이 성공 요청 된 보장 하지 않습니다 <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel&gt;</ph> 승인 합니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">확인 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>If the <ph id="ph1">`policy`</ph> parameter is <ph id="ph2">`null`</ph>, then an extended protection policy is used that has <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">`policy`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 확장된 보호 정책은 사용 된 <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> 로 설정 <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The asynchronous authentication operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 비동기 인증 작업을 완료 해야는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> on the extended protection policy passed in the <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> parameter are both <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph>와 <ph id="ph3">&lt;paramref name="policy" /&gt;</ph> 매개 변수에서 전달된, 확장된 보호 정책 상의 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /&gt;</ph> 모두 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="credential" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="credential" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph> must be <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requiredImpersonationLevel" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" /&gt;</ph>이어야 하는 경우</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Authentication has already occurred.</source>
          <target state="translated">인증이 이미 발생한 경우</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This stream was used previously to attempt authentication as the client.</source>
          <target state="translated">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>You cannot use the stream to retry authentication as the server.</source>
          <target state="translated">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>Windows 95 and Windows 98 are not supported.</source>
          <target state="translated">Windows 95 및 Windows 98이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>로 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that receives the bytes read from the stream.</source>
          <target state="translated">스트림에서 읽은 바이트를 받는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from this stream.</source>
          <target state="translated">이 스트림에서 읽은 데이터를 저장하기 시작하는 <bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept> 내의 위치(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to read from the stream.</source>
          <target state="translated">스트림에서 읽을 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the read operation is complete.</source>
          <target state="translated">읽기 작업이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the read operation.</source>
          <target state="translated">읽기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</source>
          <target state="translated">스트림에서 데이터를 읽어 지정된 배열에 저장하는 비동기 읽기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</source>
          <target state="translated">암호화, 서명 또는 암호화 및 서명에 사용 되는 경우 읽기 작업 기본 스트림에서 데이터를 읽고, 데이터의 무결성을 확인 및 암호를 해독 합니다.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</source>
          <target state="translated">보안 데이터 암호화 또는 서명 사용 중인 같은 서비스를 하는 경우이 메서드는 내부 스트림에서 비동기 읽기 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">작업이 완료 될 때까지 차단 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous read operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndRead%2A&gt;</ph> method.</source>
          <target state="translated">비동기 읽기 작업을 호출 하 여 완료 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndRead%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class does not support multiple simultaneous read operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스는 여러 개의 읽기 작업을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If you attempt to start a read operation while another read operation is already executing on the same stream, a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception will be thrown.</source>
          <target state="translated">동안 다른 작업은 동일한 스트림을에 실행 하는 읽기 작업을 시작 하려고 하면 한 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">인증 중 하나를 호출는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates starting an asynchronous read operation.</source>
          <target state="translated">다음 코드 예제에서는 비동기 읽기 작업을 시작 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 이 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is greater than the length of <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>과 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>의 합이 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph>의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The read operation failed.</source>
          <target state="translated">읽기 작업이 실패한 경우</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Encryption is in use, but the data could not be decrypted.</source>
          <target state="translated">암호화를 사용 중이지만 데이터를 해독할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>There is already a read operation in progress.</source>
          <target state="translated">읽기 작업을 진행 중인 경우</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Authentication has not occurred.</source>
          <target state="translated">인증이 수행되지 않은 경우</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that supplies the bytes to be written to the stream.</source>
          <target state="translated">스트림에 쓸 바이트를 제공하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin reading bytes to be written to the stream.</source>
          <target state="translated">스트림에 쓸 바이트를 읽기 시작하는 <bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept> 내의 위치(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the number of bytes to read from <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept>에서 읽을 바이트 수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the write operation is complete.</source>
          <target state="translated">쓰기 작업이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the write operation.</source>
          <target state="translated">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>asyncCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write operation that writes <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>s from the specified buffer to the stream.</source>
          <target state="translated">지정된 버퍼에서 스트림에 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>를 쓰는 비동기 쓰기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object indicating the status of the asynchronous operation.</source>
          <target state="translated">비동기 작업의 상태를 나타내는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</source>
          <target state="translated">암호화, 서명 또는 암호화 및 서명에 사용 되는 경우이 메서드 버퍼에서 데이터를 읽을, 암호화, 서명, 또는 암호화 하 고, 서명 및 기본 스트림을 사용 하 여 전송 합니다.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</source>
          <target state="translated">보안 데이터 암호화 또는 서명 사용 중인 같은 서비스를 하는 경우이 메서드는 내부 스트림의 비동기 쓰기 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method is asynchronous and does not block while the operation completes.</source>
          <target state="translated">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">작업이 완료 될 때까지 차단 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous read operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndWrite%2A&gt;</ph> method.</source>
          <target state="translated">비동기 읽기 작업을 호출 하 여 완료 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.EndWrite%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class does not support multiple simultaneous write operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스가 여러 동시 쓰기 작업을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If you attempt to start a write operation while another write operation is already executing on the same stream, a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception will be thrown.</source>
          <target state="translated">또 다른 쓰기 작업은 동일한 스트림의을 실행 하는 동안 작업을 시작 하려고 하면 한 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">인증 중 하나를 호출는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates beginning an asynchronous write operation.</source>
          <target state="translated">다음 코드 예제에서는 비동기 쓰기 작업을 시작 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following method is called when the operation completes.</source>
          <target state="translated">다음 메서드는 작업이 완료 될 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset is less than 0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset is less than 0" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 이 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus count is greater than the length of <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>과 count의 합이 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The write operation failed.</source>
          <target state="translated">쓰기 작업이 실패했습니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Encryption is in use, but the data could not be encrypted.</source>
          <target state="translated">암호화를 사용 중이지만 데이터를 암호화할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>There is already a write operation in progress.</source>
          <target state="translated">쓰기 작업을 진행 중인 경우</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Authentication has not occurred.</source>
          <target state="translated">인증이 수행되지 않은 경우</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.CanRead">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream is readable.</source>
          <target state="translated">내부 스트림을 읽을 수 있는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if authentication has occurred and the underlying stream is readable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인증이 수행되고 내부 스트림을 읽을 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanRead">
          <source>If successful authentication has occurred, this property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.CanRead%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">이 속성이 호출에서 반환 된 값을 반환 정상적으로 인증 수행 되 면는 <ph id="ph1">&lt;xref:System.IO.Stream.CanRead%2A&gt;</ph> 내부 스트림의 속성입니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanRead">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">인스턴스를 만들 때 지정 하 고 내부 스트림이 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanRead">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.CanSeek">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream is seekable.</source>
          <target state="translated">내부 스트림을 검색할 수 있는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanSeek">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 속성은 항상 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanSeek">
          <source>You should not attempt to set the position of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> object or its underlying stream.</source>
          <target state="translated">위치를 설정 하려고 해서는 안는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 개체 또는 해당 하는 내부 스트림의 합니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanSeek">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">인스턴스를 만들 때 지정 하 고 내부 스트림이 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanSeek">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.CanTimeout">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream supports time-outs.</source>
          <target state="translated">내부 스트림에 제한 시간을 설정할 수 있는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanTimeout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the underlying stream supports time-outs; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">내부 스트림이 제한 시간을 지원하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanTimeout">
          <source>This property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.CanTimeout%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">호출에서 반환 된 값을 반환 하는이 속성은 <ph id="ph1">&lt;xref:System.IO.Stream.CanTimeout%2A&gt;</ph> 내부 스트림의 속성입니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanTimeout">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">인스턴스를 만들 때 지정 하 고 내부 스트림이 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanTimeout">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.CanWrite">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the underlying stream is writable.</source>
          <target state="translated">내부 스트림에 쓸 수 있는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if authentication has occurred and the underlying stream is writable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인증이 수행되고 내부 스트림에 쓸 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanWrite">
          <source>If successful authentication has occurred, this property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">이 속성이 호출에서 반환 된 값을 반환 정상적으로 인증 수행 되 면는 <ph id="ph1">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph> 내부 스트림의 속성입니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanWrite">
          <source>The underlying stream is specified when you create an instance of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class.</source>
          <target state="translated">인스턴스를 만들 때 지정 하 고 내부 스트림이 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.CanWrite">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 참조 합니다.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose()`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>를 호출했을 때 반환되는 <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>Ends a pending asynchronous client authentication operation that was started with a call to <ph id="ph1">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph>를 호출하여 시작한 보류 상태의 비동기 클라이언트 인증 작업을 끝냅니다.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>When the authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>To perform this operation synchronously, use one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> method.</source>
          <target state="translated">이 작업을 동기적으로 수행 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not created by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /&gt;</ph>를 호출했지만 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 만들어지지 않은 경우</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
          <source>There is no pending client authentication to complete.</source>
          <target state="translated">완료할 보류 상태의 클라이언트 인증이 없는 경우</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>를 호출했을 때 반환되는 <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>Ends a pending asynchronous client authentication operation that was started with a call to <ph id="ph1">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph>를 호출하여 시작한 보류 상태의 비동기 클라이언트 인증 작업을 끝냅니다.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>When authentication succeeds, you must check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">인증이 성공 하면, 체크는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsEncrypted%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.IsSigned%2A&gt;</ph> 속성을 확인 보안 서비스에서 사용 되는 <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>Check the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.</source>
          <target state="translated">확인 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A&gt;</ph> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>If the authentication fails, you receive an <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> or an <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>.</source>
          <target state="translated">수신 인증에 실패 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Authentication.InvalidCredentialException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>In this case, you can retry the authentication with a different credential.</source>
          <target state="translated">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> method.</source>
          <target state="translated">이 작업을 동기적으로 수행 하려면는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not created by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /&gt;</ph>를 호출했지만 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 만들어지지 않은 경우</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>The authentication failed.</source>
          <target state="translated">인증이 실패한 경우.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>You can use this object to retry the authentication.</source>
          <target state="translated">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
          <source>There is no pending authentication to complete.</source>
          <target state="translated">완료할 보류 상태의 인증이 없는 경우</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>를 호출했을 때 반환되는 <ph id="ph2">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>Ends an asynchronous read operation that was started with a call to <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>를 호출하여 시작한 비동기 읽기 작업을 끝냅니다.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the number of bytes read from the underlying stream.</source>
          <target state="translated">내부 스트림에서 읽은 바이트 수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">이 작업을 동기적으로 수행 하려면는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Read%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">인증 중 하나를 호출는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>The following code example demonstrates ending an asynchronous read operation.</source>
          <target state="translated">다음 코드 예제에서는 읽기는 비동기 종료 작업을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>For an example that demonstrates starting the operation, see <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">작업을 시작 하는 방법을 보여 주는 예제를 보려면 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>The asyncResult was not created by a call to <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>를 호출했지만 asyncResult가 만들어지지 않은 경우</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>Authentication has not occurred.</source>
          <target state="translated">인증이 수행되지 않은 경우</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
          <source>The read operation failed.</source>
          <target state="translated">읽기 작업이 실패한 경우</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> instance returned by a call to <ph id="ph2">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>를 호출했을 때 반환되는 <ph id="ph2">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>Ends an asynchronous write operation that was started with a call to <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>를 호출하여 시작한 비동기 쓰기 작업을 끝냅니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">인증 중 하나를 호출는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph> method.</source>
          <target state="translated">이 작업을 동기적으로 수행 하려면는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>The following code example demonstrates a method that is called to complete the asynchronous write operation.</source>
          <target state="translated">다음 코드 예제에서는 비동기 쓰기 작업을 완료 하기 위해 호출 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>For an example that demonstrates starting the operation, see <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated">작업을 시작 하는 방법을 보여 주는 예제를 보려면 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginWrite%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>The asyncResult was not created by a call to <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>를 호출했지만 asyncResult가 만들어지지 않은 경우</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>Authentication has not occurred.</source>
          <target state="translated">인증이 수행되지 않은 경우</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
          <source>The write operation failed.</source>
          <target state="translated">쓰기 작업이 실패했습니다.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Flush">
          <source>Causes any buffered data to be written to the underlying device.</source>
          <target state="translated">버퍼링된 모든 데이터를 내부 장치에 씁니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Flush">
          <source>This method invokes <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">이 메서드를 호출 <ph id="ph1">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph> 내부 스트림의 합니다.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Flush">
          <source>The following code example demonstrates flushing the stream.</source>
          <target state="translated">다음 코드 예제에서는 스트림을 플러시하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>Gets a value that indicates how the server can use the client's credentials.</source>
          <target state="translated">서버에서 클라이언트의 자격 증명을 사용하는 방법을 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Principal.TokenImpersonationLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>You must successfully authenticate before calling this method.</source>
          <target state="translated">이 메서드를 호출 하기 전에 성공적으로 인증 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>Clients specify the impersonation level when they request authentication by calling one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph> methods.</source>
          <target state="translated">중 하나를 호출 하 여 인증을 요청할 때 클라이언트를 가장 수준이 지정 된 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>If you authenticate without specifying a <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> , <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph> is used.</source>
          <target state="translated">지정 하지 않고 인증 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> , <ph id="ph2">&lt;xref:System.Security.Principal.TokenImpersonationLevel.Identification&gt;</ph> 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
          <source>Authentication failed or has not occurred.</source>
          <target state="translated">인증이 실패하거나 수행되지 않은 경우</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.IsAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether authentication was successful.</source>
          <target state="translated">인증이 성공했는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if successful authentication occurred; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">인증이 성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsAuthenticated">
          <source>Clients authenticate by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph> methods.</source>
          <target state="translated">호출 하 여 클라이언트 인증의 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsAuthenticated">
          <source>Servers authenticate by calling the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">호출 하 여 서버 인증의 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.IsEncrypted">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether this <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> uses data encryption.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>에서 데이터 암호화를 사용하는지 여부를 나타내는 <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsEncrypted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">네트워크를 통해 전송하기 전에 데이터를 암호화하고 원격 끝점에 도달한 후 해독하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsEncrypted">
          <source>Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</source>
          <target state="translated">암호화가 데이터의 개인 정보를 보호 하는 즉,는 데이터가 전송 되는 동안 해독할 수 없으므로 제 3 자가 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsEncrypted">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether both the server and the client have been authenticated.</source>
          <target state="translated">서버와 클라이언트 모두 인증되었는지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the server has been authenticated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서버가 인증되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</source>
          <target state="translated">클라이언트가 서버를 인증에 대 한 자격 증명을 제공 하는 경우 클라이언트에서 상호 인증을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>By default, clients request mutual authentication.</source>
          <target state="translated">기본적으로 클라이언트는 상호 인증을 요청합니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</source>
          <target state="translated">협상 프로토콜은 클라이언트와 서버에서 지 원하는 보안 프로토콜에 따라 NTLM 이나 Kerberos를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>NTLM does not support mutual authentication.</source>
          <target state="translated">NTLM 상호 인증을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.IsServer">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the local side of the connection used by this <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> was authenticated as the server.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>에서 사용하는 연결의 로컬측이 서버로 인증되었는지 여부를 나타내는 <ph id="ph2">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsServer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">로컬 끝점이 인증된 연결의 서버측으로 인증되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsServer">
          <source>If authentication failed or did not occur, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 속성을 반환 하는 경우 인증이 실패 하거나 발생 하지 않은, <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsServer">
          <source>To authenticate as the server, call the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">서버로 인증 하려면 호출는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsServer">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.IsSigned">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the data sent using this stream is signed.</source>
          <target state="translated">이 스트림을 사용하여 보내는 데이터에 서명할지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsSigned">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data is signed before being transmitted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">데이터를 전송하기 전에 서명하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsSigned">
          <source>Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</source>
          <target state="translated">데이터의 무결성을 보호 하는 데 도움이 데이터 서명 즉, 수신자가 데이터가 전송 중에 있는 훼손 되었는지 여부를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.IsSigned">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>Gets the length of the underlying stream.</source>
          <target state="translated">내부 스트림의 길이를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that specifies the length of the underlying stream.</source>
          <target state="translated">내부 스트림의 길이를 지정하는 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>This property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">호출에서 반환 된 값을 반환 하는이 속성은 <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A&gt;</ph> 내부 스트림의 속성입니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>If the underlying stream is not seekable, this property will typically throw an exception.</source>
          <target state="translated">내부 스트림을 검색할 수 없는 경우이 속성 일반적으로 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</source>
          <target state="translated">내부 스트림의 런타임 형식에 throw 되는 예외의 런타임 형식이 결정 합니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Length">
          <source>Getting the value of this property is not supported when the underlying stream is a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">내부 스트림이 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>일 때 이 속성의 값을 가져올 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>Gets or sets the current position in the underlying stream.</source>
          <target state="translated">내부 스트림 내의 현재 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that specifies the current position in the underlying stream.</source>
          <target state="translated">내부 스트림 내의 현재 위치를 지정하는 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>This property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.Position%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">호출에서 반환 된 값을 반환 하는이 속성은 <ph id="ph1">&lt;xref:System.IO.Stream.Position%2A&gt;</ph> 내부 스트림의 속성입니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>If the underlying stream is not seekable, this property will typically throw an exception.</source>
          <target state="translated">내부 스트림을 검색할 수 없는 경우이 속성 일반적으로 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</source>
          <target state="translated">내부 스트림의 런타임 형식에 throw 되는 예외의 런타임 형식이 결정 합니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>Setting this property is not supported.</source>
          <target state="translated">이 속성 설정이 지원되지 않는 경우</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Position">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.Position">
          <source>Getting the value of this property is not supported when the underlying stream is a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">내부 스트림이 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>일 때 이 속성의 값을 가져올 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that receives the bytes read from the stream.</source>
          <target state="translated">스트림에서 읽은 바이트를 받는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from this stream.</source>
          <target state="translated">이 스트림에서 읽은 데이터를 저장하기 시작하는 <bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept> 내의 위치(0부터 시작)가 포함된 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the maximum number of bytes to read from the stream.</source>
          <target state="translated">스트림에서 읽을 최대 바이트 수가 포함된 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads data from this stream and stores it in the specified array.</source>
          <target state="translated">이 스트림에서 데이터를 읽어 지정된 배열에 저장합니다.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that specifies the number of bytes read from the underlying stream.</source>
          <target state="translated">내부 스트림에서 읽은 바이트 수를 지정하는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When there is no more data to be read, returns 0.</source>
          <target state="translated">읽을 데이터가 더 이상 없으면 0이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The method reads a maximum of <ph id="ph1">`count`</ph> bytes from the current stream and stores them in <ph id="ph2">`buffer`</ph> beginning at <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">메서드는 최대 읽고 <ph id="ph1">`count`</ph> 바이트 스트림 및에 저장 합니다 <ph id="ph2">`buffer`</ph> 부터 <ph id="ph3">`offset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">인증 중 하나를 호출는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>To perform this operation asynchronously, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph> method.</source>
          <target state="translated">이 작업을 비동기적으로 수행 하려면는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.BeginRead%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example demonstrates reading from a <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서 읽기는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The read operation failed.</source>
          <target state="translated">읽기 작업이 실패한 경우</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Authentication has not occurred.</source>
          <target state="translated">인증이 수행되지 않은 경우</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> operation is already in progress.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 작업이 이미 진행 중인 경우</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>Gets or sets the amount of time a read operation blocks waiting for data.</source>
          <target state="translated">읽기 작업에서 데이터 대기를 차단하는 시간을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that specifies the amount of time that will elapse before a read operation fails.</source>
          <target state="translated">읽기 작업이 실패할 때까지 걸리는 시간을 지정하는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>This property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">호출에서 반환 된 값을 반환 하는이 속성은 <ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> 내부 스트림의 속성입니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>When you set this property, the <ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> value on the underlying stream is set to the specified value.</source>
          <target state="translated">이 속성을 설정 하는 경우는 <ph id="ph1">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> 내부 스트림의 값이 지정된 된 값으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>If the underlying stream is a <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.ReadTimeout%2A&gt;</ph> is in milliseconds and is set to <ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> by default so that read operations do not time out.</source>
          <target state="translated">기본 스트림이 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.ReadTimeout%2A&gt;</ph> 밀리초 이며로 설정 되어 <ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> 작업 제한 시간이 초과 되지 않는 읽기를 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.ReadTimeout">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>Gets information about the identity of the remote party sharing this authenticated stream.</source>
          <target state="translated">인증된 이 스트림을 공유하는 원격 대상의 ID 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> object that describes the identity of the remote endpoint.</source>
          <target state="translated">원격 끝점의 ID를 설명하는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>When accessed by the client, this property returns a <ph id="ph1">&lt;xref:System.Security.Principal.GenericIdentity&gt;</ph> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</source>
          <target state="translated">이 속성은 반환 클라이언트에서 액세스 하는 <ph id="ph1">&lt;xref:System.Security.Principal.GenericIdentity&gt;</ph> 는 이름 SPN (서비스 사용자)는 서버와 사용 되는 인증 프로토콜을 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>When accessed by the server, this property returns a <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> that describes the client.</source>
          <target state="translated">이 속성을 반환 하 여 서버에 액세스 하는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> 클라이언트를 설명 하는 합니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>If the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> is not available, client information is returned to the server in a <ph id="ph2">&lt;xref:System.Security.Principal.GenericIdentity&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> 은 사용할 수 없는 클라이언트 정보에 서버에 반환 되는 <ph id="ph2">&lt;xref:System.Security.Principal.GenericIdentity&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.RemoteIdentity">
          <source>Authentication failed or has not occurred.</source>
          <target state="translated">인증이 실패하거나 수행되지 않은 경우</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This value is ignored.</source>
          <target state="translated">이 값은 무시됩니다.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This value is ignored.</source>
          <target state="translated">이 값은 무시됩니다.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Throws <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>을 throw합니다.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Do not call this method.</source>
          <target state="translated">이 메서드를 호출 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>It is inherited, but is not supported by <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">를 상속 하지만에서 지원 되지 않습니다 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking is not supported on <ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Security.NegotiateStream" /&gt;</ph>에서 검색을 지원하지 않는 경우</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> value that specifies the length of the stream.</source>
          <target state="translated">스트림의 길이를 지정하는 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
          <source>Sets the length of the underlying stream.</source>
          <target state="translated">내부 스트림의 길이를 설정합니다.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that supplies the bytes written to the stream.</source>
          <target state="translated">스트림에 쓸 바이트를 제공하는 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the zero-based location in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin reading bytes to be written to the stream.</source>
          <target state="translated">스트림에 쓸 바이트를 읽기 시작하는 <bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept> 내의 위치(0부터 시작)가 포함된 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the number of bytes to read from <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept>에서 읽을 바이트 수가 포함된 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Write the specified number of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>s to the underlying stream using the specified buffer and offset.</source>
          <target state="translated">지정된 버퍼와 오프셋을 사용하여 지정된 수의 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>를 내부 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</source>
          <target state="translated">암호화, 서명 또는 암호화 및 서명에 사용 되는 경우이 메서드 버퍼에서 데이터를 읽을, 암호화, 서명, 또는 암호화 하 고, 서명 및 기본 스트림을 사용 하 여 전송 합니다.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If no security services such as data encryption or signing are in use, this method invokes <ph id="ph1">&lt;xref:System.IO.Stream.Write%2A&gt;</ph> on the underlying stream.</source>
          <target state="translated">이 메서드를 호출 하는 경우 보안 데이터 암호화 또는 서명 사용 중인 같은 서비스를 <ph id="ph1">&lt;xref:System.IO.Stream.Write%2A&gt;</ph> 내부 스트림의 합니다.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This method blocks while the write operation completes.</source>
          <target state="translated">이 메서드는 쓰기 작업이 완료 될 때 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>To prevent blocking while the operation completes, use the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph> method.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하지 않으려면을 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.Write%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>To authenticate, call one of the <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.</source>
          <target state="translated">인증 중 하나를 호출는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> class does not support multiple simultaneous write operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph> 클래스가 여러 동시 쓰기 작업을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If you attempt to start a write operation while another write operation is already executing on the same stream, a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception will be thrown.</source>
          <target state="translated">또 다른 쓰기 작업은 동일한 스트림의을 실행 하는 동안 작업을 시작 하려고 하면 한 <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The following code example demonstrates writing to a <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에 쓰기는 <ph id="ph1">&lt;xref:System.Net.Security.NegotiateStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset is less than 0" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset is less than 0" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 이 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus count is greater than the length of <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>과 count의 합이 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The write operation failed.</source>
          <target state="translated">쓰기 작업이 실패했습니다.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Encryption is in use, but the data could not be encrypted.</source>
          <target state="translated">암호화를 사용 중이지만 데이터를 암호화할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>There is already a write operation in progress.</source>
          <target state="translated">쓰기 작업을 진행 중인 경우</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This object has been closed.</source>
          <target state="translated">이 개체가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Authentication has not occurred.</source>
          <target state="translated">인증이 수행되지 않은 경우</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>Gets or sets the amount of time a write operation blocks waiting for data.</source>
          <target state="translated">쓰기 작업에서 데이터 대기를 차단하는 시간을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that specifies the amount of time that will elapse before a write operation fails.</source>
          <target state="translated">쓰기 작업이 실패할 때까지 걸리는 시간을 지정하는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>This property returns the value returned by invoking the <ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> property on the underlying stream.</source>
          <target state="translated">호출에서 반환 된 값을 반환 하는이 속성은 <ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> 내부 스트림의 속성입니다.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>For set operations, the specified value sets the <ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> value on the underlying stream.</source>
          <target state="translated">집합 작업에 대 한 지정 된 값이 설정의 <ph id="ph1">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> 내부 스트림의 값.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>If the underlying stream is a <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.WriteTimeout%2A&gt;</ph> is in milliseconds and is set to <ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> by default so that write operations do not time out.</source>
          <target state="translated">기본 스트림이 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Security.NegotiateStream.WriteTimeout%2A&gt;</ph> 밀리초 이며로 설정 되어 <ph id="ph3">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> 기본적으로 쓰기에 작업 제한 시간이 초과 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Security.NegotiateStream.WriteTimeout">
          <source>The following code example demonstrates displaying the value of this property.</source>
          <target state="translated">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>