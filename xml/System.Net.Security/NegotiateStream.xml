<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c14dd401696189bb315395ed828de5f1c0c89ba3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30461137" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cba23-101">클라이언트-서버 통신에서 협상 보안 프로토콜을 사용하여 클라이언트를 인증하고 선택적으로 서버를 인증하는 스트림을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cba23-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-102">사용 하 여는 <xref:System.Net.Security.NegotiateStream> 인증에 대 한 정보를 보호 하려면 클래스는 클라이언트와 서버 간에 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="cba23-103">사용 하 여 <xref:System.Net.Security.NegotiateStream>, 다음을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="cba23-104">가장 또는 위임에 대 한 서버에 클라이언트의 자격 증명을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="cba23-105">서버 인증을 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="cba23-106">암호화 및/또는 전송 하기 전에 데이터에 서명</span><span class="sxs-lookup"><span data-stu-id="cba23-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="cba23-107">인증 정보를 전송 하기 전에 수행 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="cba23-108">클라이언트가 동기를 사용 하 여 인증을 요청할 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 인증 완료할 때까지 차단 하는 메서드 또는 비동기 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> 메서드 인증이 완료 되기를 기다리는 동안 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="cba23-109">서버 인증을 사용 하 여 동기 요청 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 또는 비동기 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="cba23-110">클라이언트 및 필요에 따라 서버에 보안 협상 프로토콜을 사용 하 여 인증 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="cba23-111">Windows 95/98 시스템에서 Windows NT LAN Manager (NTLM) 인증에 사용 되는 프로토콜입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="cba23-112">다른 플랫폼 Kerberos 프로토콜이 인증에 사용 되 클라이언트와 서버 모두에서 지 원하는 경우; 그렇지 않으면 NTLM이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="cba23-113">대 한 이러한 프로토콜의 자세한 설명은 MSDN Platform SDK 설명서를 msdn.microsoft.com/library/에서 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="cba23-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="cba23-114"><xref:System.Net.Security.NegotiateStream> 클래스 보안 지원 공급자 인터페이스 (SSPI)를 사용 하 여 인증을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="cba23-115">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 보안 서비스를 확인 하려면 속성에서 사용할는 <xref:System.Net.Security.NegotiateStream> 을 전송 하는 동안 데이터를 보호 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="cba23-116">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="cba23-117">원격 클라이언트 또는 사용 하 여 서버에 대 한 정보를 읽을 수는 <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="cba23-118">인증에 실패 하는 경우 표시 됩니다는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-119">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="cba23-120">동기 버전을 사용 하 여 데이터를 보내는 <xref:System.Net.Security.NegotiateStream.Write%2A> 또는 비동기 <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="cba23-121">동기 버전을 사용 하 여 데이터를 수신 <xref:System.Net.Security.NegotiateStream.Read%2A> 또는 비동기 <xref:System.Net.Security.NegotiateStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="cba23-122">암호화 또는 서명이 설정 되어 같은 보안 서비스를 이러한 자동 적용 됩니다 하 여 데이터에는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="cba23-123"><xref:System.Net.Security.NegotiateStream> 만들 때 제공 하는 스트림을 사용 하 여 데이터를 전송에서 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-124">지정 하는 옵션이 있는이 내부 스트림을 제공 하는 경우 여부는 <xref:System.Net.Security.NegotiateStream> 내부 스트림도 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-125">다음 코드 예제에서는 사용 하는 클라이언트 서버 연결의 클라이언트 쪽에서 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-126">클라이언트를 인증 하 고 서버에 메시지를 비동기적으로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="cba23-127">다음 코드 예제에서는 사용 하는 클라이언트 서버 연결의 서버 쪽에서 <xref:System.Net.Security.NegotiateStream> 클라이언트 인증을 받고 클라이언트에서 보낸 메시지를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-128">
            <see cref="T:System.Net.Security.NegotiateStream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-129">방지 하기 위해는 <xref:System.Net.Security.NegotiateStream> 에서 제공 하는 스트림을 닫는 사용 하 여는 <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-129">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="cba23-130">
            <see cref="T:System.IO.Stream" />에서 데이터를 보내고 받는 데 사용하는 <see cref="T:System.Net.Security.NegotiateStream" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-131">지정된 <see cref="T:System.Net.Security.NegotiateStream" />를 사용하여 <see cref="T:System.IO.Stream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cba23-132">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-132">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="cba23-133">
            <see cref="T:System.IO.Stream" />에서 데이터를 보내고 받는 데 사용하는 <see cref="T:System.Net.Security.NegotiateStream" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="cba23-134">이 <see cref="T:System.Net.Security.NegotiateStream" />을 닫아도 <c>innerstream</c>에 영향을 주지 않으려면 <see langword="true" />로 설정하고, 이 <see cref="T:System.Net.Security.NegotiateStream" />을 닫을 때 <c>innerStream</c>도 함께 닫으려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-134">
              <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-135">지정된 <see cref="T:System.Net.Security.NegotiateStream" />과 스트림 닫기 동작을 사용해서 <see cref="T:System.IO.Stream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-136">지정 하는 경우 `true` 에 대 한는 `leaveStreamOpen` 닫는 매개 변수는 <xref:System.Net.Security.NegotiateStream> 영향을 주지 않습니다는 `innerStream` 스트림; 명시적으로 닫아야 `innerStream` 더 이상 필요할 때.</span><span class="sxs-lookup"><span data-stu-id="cba23-136">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-137">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-137">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="cba23-138">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-138">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-139">
            <paramref name="innerStream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-139">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cba23-140">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-140">\- or -</span>
          </span>
          <span data-ttu-id="cba23-141">
            <paramref name="innerStream" />가 <see cref="F:System.IO.Stream.Null" />와 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-141">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-142">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cba23-143">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-144">클라이언트를 사용 하는 인증 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-144">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="cba23-145">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-145">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="cba23-146">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증을 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-146">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="cba23-147"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-147">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="cba23-148">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-148">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-149">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-149">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-150">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-150">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-151">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-151">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-152">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-152">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-153">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-153">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-154">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-154">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-155">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-155">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-156">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-156">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-157">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-157">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-158">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-158">\- or -</span>
          </span>
          <span data-ttu-id="cba23-159">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-159">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-160">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-160">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-161">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-161">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-162">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-162">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-163">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-163">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-164">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-164">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-165">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-165">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-166">인증 프로세스에는 지정된 클라이언트 자격 증명이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-166">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-167">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증을 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-167">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="cba23-168"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-168">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="cba23-169">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-169">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-170">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-170">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-171">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-171">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-172">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-172">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-173">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-173">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-174">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-174">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-175">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-175">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-176">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-176">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-177">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-177">\- or -</span>
          </span>
          <span data-ttu-id="cba23-178">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-178">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-179">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-179">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-180">
            <paramref name="targetName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-180">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-181">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-181">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-182">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-183">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-183">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="cba23-184">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-184">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-185">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-185">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-186">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-186">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-187">인증 프로세스에는 지정된 클라이언트 자격 증명과 채널 바인딩이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-187">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-188">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증을 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-188">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="cba23-189"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-189">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="cba23-190"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 이 메서드에 전달 되는 확장 된 보호에 사용 되는 `binding` 매개 변수에서 응용 프로그램에 의해 검색 되 <xref:System.Net.Security.SslStream.TransportContext%2A> 속성은 관련 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-190">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="cba23-191">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-191">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-192">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-192">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-193">
            <paramref name="targetName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-193">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cba23-194">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-194">\- or -</span>
          </span>
          <span data-ttu-id="cba23-195">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-195">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-196">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-196">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-197">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-197">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-198">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-198">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-199">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-199">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-200">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-200">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-201">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-201">\- or -</span>
          </span>
          <span data-ttu-id="cba23-202">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-202">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-203">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-203">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-204">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-204">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-205">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-205">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-206">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-206">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-207">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-207">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="cba23-208">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-208">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-209">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-209">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-210">인증 프로세스에는 지정된 자격 증명과 인증 옵션이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-210">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-211">사용 하 여는 `requiredProtectionLevel` 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-211">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="cba23-212">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-212">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="cba23-213">인증이 성공 보장 하지 않습니다는 요청 된 <xref:System.Net.Security.ProtectionLevel> 승인 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-213">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="cba23-214">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-214">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="cba23-215">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-215">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-216">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-216">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cba23-217">
            <paramref name="allowedImpersonationLevel" />은(는) 올바른 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-217">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-218">
            <paramref name="targetName" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-218">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-219">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-219">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-220">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-220">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-221">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-221">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-222">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-222">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-223">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-223">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-224">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-224">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-225">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-225">\- or -</span>
          </span>
          <span data-ttu-id="cba23-226">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-226">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-227">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-227">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-228">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-228">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-229">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-229">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-230">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-230">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="cba23-231">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-231">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-232">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-232">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-233">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-233">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="cba23-234">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-234">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-235">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-235">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-236">인증 프로세스에는 지정된 자격 증명, 인증 옵션 및 채널 바인딩이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-236">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-237">사용 하 여는 `requiredProtectionLevel` 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-237">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="cba23-238">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-238">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="cba23-239">인증이 성공 보장 하지 않습니다는 요청 된 <xref:System.Net.Security.ProtectionLevel> 승인 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-239">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="cba23-240">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-240">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="cba23-241"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 이 메서드에 전달 되는 확장 된 보호에 사용 되는 `binding` 매개 변수에서 응용 프로그램에 의해 검색 되 <xref:System.Net.Security.SslStream.TransportContext%2A> 속성은 관련 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-241">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="cba23-242">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-242">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-243">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-243">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-244">
            <paramref name="targetName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-244">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cba23-245">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-245">\- or -</span>
          </span>
          <span data-ttu-id="cba23-246">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-246">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cba23-247">
            <paramref name="allowedImpersonationLevel" />은(는) 올바른 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-247">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-248">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-248">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-249">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-249">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-250">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-250">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-251">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-251">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-252">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-252">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-253">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-253">\- or -</span>
          </span>
          <span data-ttu-id="cba23-254">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-254">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-255">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-255">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-256">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-256">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-257">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-257">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cba23-258">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-258">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-259">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-259">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="cba23-260">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-260">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-261">클라이언트를 사용 하는 인증 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-261">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="cba23-262">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-262">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="cba23-263">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증을 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-263">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="cba23-264"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-264">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="cba23-265">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-265">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-266">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-266">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-267">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-267">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-268">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-268">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-269">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-269">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-270">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-270">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-271">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-271">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-272">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-272">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-273">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-273">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-274">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-274">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-275">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-275">\- or -</span>
          </span>
          <span data-ttu-id="cba23-276">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-276">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-277">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-277">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-278">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-278">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-279">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-279">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-280">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-280">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-281">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-281">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-282">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-282">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="cba23-283">인증 프로세스에는 지정된 클라이언트 자격 증명이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-283">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-284">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-284">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="cba23-285">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-285">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-286">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증을 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-286">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="cba23-287"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-287">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="cba23-288">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-288">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-289">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-289">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-290">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-290">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-291">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-291">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-292">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-292">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-293">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-293">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-294">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-294">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-295">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-295">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-296">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-296">\- or -</span>
          </span>
          <span data-ttu-id="cba23-297">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-297">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-298">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-298">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-299">
            <paramref name="targetName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-299">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-300">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-300">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-301">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-301">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-302">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-302">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="cba23-303">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-303">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-304">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-304">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-305">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-305">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="cba23-306">인증 프로세스에는 지정된 클라이언트 자격 증명과 채널 바인딩이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-306">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-307">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-307">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="cba23-308">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-308">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-309">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증을 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-309">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="cba23-310"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-310">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="cba23-311"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 이 메서드에 전달 되는 확장 된 보호에 사용 되는 `binding` 매개 변수에서 응용 프로그램에 의해 검색 되 <xref:System.Net.Security.SslStream.TransportContext%2A> 속성은 관련 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-311">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="cba23-312">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-312">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-313">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-313">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-314">
            <paramref name="targetName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-314">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cba23-315">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-315">\- or -</span>
          </span>
          <span data-ttu-id="cba23-316">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-316">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-317">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-317">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-318">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-318">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-319">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-319">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-320">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-320">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-321">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-321">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-322">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-322">\- or -</span>
          </span>
          <span data-ttu-id="cba23-323">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-323">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-324">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-324">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-325">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-325">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-326">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-326">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-327">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-327">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-328">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-328">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="cba23-329">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-329">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-330">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-330">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="cba23-331">인증 프로세스에는 지정된 자격 증명과 인증 옵션이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-331">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-332">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-332">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="cba23-333">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-333">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-334">사용 하 여는 `requiredProtectionLevel` 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-334">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="cba23-335">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-335">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="cba23-336">인증이 성공 보장 하지 않습니다는 요청 된 <xref:System.Net.Security.ProtectionLevel> 승인 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-336">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="cba23-337">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-337">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="cba23-338">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-338">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-339">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-339">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cba23-340">
            <paramref name="allowedImpersonationLevel" />은(는) 올바른 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-340">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-341">
            <paramref name="targetName" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-341">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-342">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-342">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-343">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-343">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-344">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-344">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-345">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-345">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-346">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-346">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-347">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-347">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-348">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-348">\- or -</span>
          </span>
          <span data-ttu-id="cba23-349">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-349">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-350">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-350">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-351">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-351">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-352">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-352">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-353">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-353">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="cba23-354">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-354">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-355">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-355">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-356">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-356">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="cba23-357">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-357">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-358">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 클라이언트에 의해 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-358">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="cba23-359">인증 프로세스에는 지정된 자격 증명, 인증 옵션 및 채널 바인딩이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-359">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-360">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-360">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="cba23-361">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-361">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-362">사용 하 여는 `requiredProtectionLevel` 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-362">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="cba23-363">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-363">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="cba23-364">인증이 성공 보장 하지 않습니다는 요청 된 <xref:System.Net.Security.ProtectionLevel> 승인 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-364">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="cba23-365">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-365">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="cba23-366"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 이 메서드에 전달 되는 확장 된 보호에 사용 되는 `binding` 매개 변수에서 응용 프로그램에 의해 검색 되 <xref:System.Net.Security.SslStream.TransportContext%2A> 속성은 관련 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-366">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="cba23-367">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-367">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-368">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-368">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-369">
            <paramref name="targetName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-369">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cba23-370">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-370">\- or -</span>
          </span>
          <span data-ttu-id="cba23-371">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-371">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cba23-372">
            <paramref name="allowedImpersonationLevel" />은(는) 올바른 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-372">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-373">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-373">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-374">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-374">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-375">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-375">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-376">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-376">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-377">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-377">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-378">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-378">\- or -</span>
          </span>
          <span data-ttu-id="cba23-379">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-379">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-380">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-380">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-381">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-381">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-382">클라이언트-서버 연결의 서버측 인증을 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-382">Handles the server side of an authentication for a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-383">이러한 메서드는 인증 진행 중인 동안 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-383">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="cba23-384">사용 하 여 응용 프로그램을 완료 하기 위한 인증 될 때까지 기다리는 동안 차단 하지 않으려면는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-384">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cba23-385">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-385">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-386">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="cba23-387">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="cba23-388">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="cba23-389">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-389">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-390">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-390">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-391">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-391">This method blocks until the operation completes.</span></span> <span data-ttu-id="cba23-392">작업이 완료 될 때까지 차단를 방지 하려면 중 하나를 사용는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-392">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-393">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-393">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-394">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-394">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-395">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-395">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-396">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-396">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-397">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-397">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-398">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-398">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-399">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-399">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-400">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-400">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-401">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-401">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-402">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-402">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="cba23-403">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-403">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-404">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-404">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-405">인증 프로세스에는 지정된 확장 보호 정책이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-405">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-406">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-406">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="cba23-407">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-407">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="cba23-408">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-408">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="cba23-409">경우는 `policy` 매개 변수는 `null`, 확장된 보호 정책은 사용 된 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 설정 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-409">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="cba23-410">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-410">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-411">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-411">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-412">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-412">This method blocks until the operation completes.</span></span> <span data-ttu-id="cba23-413">작업이 완료 될 때까지 차단를 방지 하려면 중 하나를 사용는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-413">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-414">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-414">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-415">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-415">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-416">
            <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" />와 <paramref name="policy" /> 매개 변수에서 전달된, 확장된 보호 정책 상의 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 모두 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-416">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-417">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-417">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-418">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-418">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-419">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-419">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-420">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-420">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-421">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-421">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-422">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-422">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cba23-423">
            <paramref name="policy" /> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />로 설정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-423">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-424">서버의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-424">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-425">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-425">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="cba23-426">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-426">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-427">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-427">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-428">인증 프로세스에는 지정된 서버 자격 증명과 인증 옵션이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-428">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-429">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-429">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-430">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-430">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-431">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-431">This method blocks until the operation completes.</span></span> <span data-ttu-id="cba23-432">작업이 완료 될 때까지 차단를 방지 하려면 중 하나를 사용는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-432">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-433">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-433">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-434">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-434">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-435">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-435">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cba23-436">
            <paramref name="requiredImpersonationLevel" />이 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 또는 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />이어야 하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-436">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-437">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-437">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-438">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-438">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-439">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-439">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-440">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-440">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-441">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-441">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-442">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-442">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-443">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-443">\- or -</span>
          </span>
          <span data-ttu-id="cba23-444">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-444">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="cba23-445">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-445">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-446">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-446">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-447">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-447">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-448">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-448">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-449">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-449">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="cba23-450">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-450">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-451">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-451">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="cba23-452">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-452">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-453">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하기 위해 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-453">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-454">인증 프로세스에는 지정된 서버 자격 증명, 인증 옵션 및 확장 보호 정책이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-454">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-455">경우는 `policy` 매개 변수는 `null`, 확장된 보호 정책은 사용 된 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 설정 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-455">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="cba23-456">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-456">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-457">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-457">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-458">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-458">This method blocks until the operation completes.</span></span> <span data-ttu-id="cba23-459">작업이 완료 될 때까지 차단를 방지 하려면 중 하나를 사용는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-459">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-460">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-460">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-461">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-461">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-462">
            <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" />와 <paramref name="policy" /> 매개 변수에서 전달된, 확장된 보호 정책 상의 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 모두 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-462">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-463">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-463">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cba23-464">
            <paramref name="requiredImpersonationLevel" />이 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 또는 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />이어야 하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-464">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-465">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-465">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-466">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-466">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-467">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-467">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-468">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-468">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-469">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-469">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-470">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-470">\- or -</span>
          </span>
          <span data-ttu-id="cba23-471">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-471">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="cba23-472">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-472">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-473">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-473">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-474">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-474">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cba23-475">
            <paramref name="policy" /> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />로 설정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-475">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-476">클라이언트-서버 연결의 서버 측 인증을 비동기 작업으로 처리합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-476">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cba23-477">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-477">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-478">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-478">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="cba23-479">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-479">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-480">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-480">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="cba23-481">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-481">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="cba23-482">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-482">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="cba23-483">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-483">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-484">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-484">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-485">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-485">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-486">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-486">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-487">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-487">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-488">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-488">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-489">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-489">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-490">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-490">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-491">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-491">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-492">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-492">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-493">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-493">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-494">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-494">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="cba23-495">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-495">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-496">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-496">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="cba23-497">인증 프로세스에는 지정된 확장 보호 정책이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-497">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-498">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-498">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="cba23-499">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-499">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-500">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-500">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="cba23-501">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-501">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="cba23-502">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-502">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="cba23-503">경우는 `policy` 매개 변수는 `null`, 확장된 보호 정책은 사용 된 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 설정 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-503">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="cba23-504">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-504">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-505">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-505">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-506">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-506">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-507">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-507">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-508">
            <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" />와 <paramref name="policy" /> 매개 변수에서 전달된, 확장된 보호 정책 상의 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 모두 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-508">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-509">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-509">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-510">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-510">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-511">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-511">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-512">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-512">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-513">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-513">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-514">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-514">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cba23-515">
            <paramref name="policy" /> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />로 설정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-515">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-516">서버의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-516">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-517">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="cba23-518">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-519">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="cba23-520">인증 프로세스에는 지정된 서버 자격 증명과 인증 옵션이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-520">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-521">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-521">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="cba23-522">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-522">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-523">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-524">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-525">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-526">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-527">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-527">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cba23-528">
            <paramref name="requiredImpersonationLevel" />이 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 또는 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />이어야 하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-528">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-529">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-529">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-530">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-530">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-531">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-531">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-532">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-532">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-533">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-533">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-534">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-534">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-535">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-535">\- or -</span>
          </span>
          <span data-ttu-id="cba23-536">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-536">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="cba23-537">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-537">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-538">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-538">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-539">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-539">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-540">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-540">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-541">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-541">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="cba23-542">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-542">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-543">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-543">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="cba23-544">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-544">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-545">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업으로 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-545">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="cba23-546">인증 프로세스에는 지정된 서버 자격 증명, 인증 옵션 및 확장 보호 정책이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-546">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-547">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-547">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="cba23-548">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-548">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-549">경우는 `policy` 매개 변수는 `null`, 확장된 보호 정책은 사용 된 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 설정 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-549">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="cba23-550">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-550">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-551">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-551">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-552">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-552">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-553">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-553">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-554">
            <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" />와 <paramref name="policy" /> 매개 변수에서 전달된, 확장된 보호 정책 상의 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 모두 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-554">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-555">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-555">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cba23-556">
            <paramref name="requiredImpersonationLevel" />이 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 또는 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />이어야 하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-556">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-557">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-557">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-558">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-558">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-559">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-559">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-560">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-560">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-561">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-561">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-562">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-562">\- or -</span>
          </span>
          <span data-ttu-id="cba23-563">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-563">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="cba23-564">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-564">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-565">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-565">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-566">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-566">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cba23-567">
            <paramref name="policy" /> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />로 설정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-567">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-568">클라이언트-서버 연결의 클라이언트측을 인증하는 비동기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-568">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-569">인증이 진행 중인 동안이 메서드의 오버 로드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-569">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="cba23-570">인증이 완료 되기를 기다리는 동안 차단 중 하나를 사용는 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-570">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="cba23-571">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-571">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="cba23-572">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-572">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="cba23-573">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-573">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-574">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-574">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-575">이 메서드는 차단되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-575">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-576">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-576">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-577">클라이언트를 사용 하는 인증 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-577">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="cba23-578">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-578">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="cba23-579">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-579">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="cba23-580"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-580">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="cba23-581">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-581">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="cba23-582">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-582">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-583">호출 하 여 비동기 인증 작업을 완료 해야는 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-583">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="cba23-584">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-584">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="cba23-585">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="cba23-585">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="cba23-586">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-586">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-587">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-587">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-588">다음 코드 예제에서는 클라이언트에 대 한 비동기 인증을 시작 하려면이 메서드를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-588">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-589">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-589">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-590">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-590">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-591">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-591">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-592">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-592">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-593">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-593">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-594">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-594">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-595">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-595">\- or -</span>
          </span>
          <span data-ttu-id="cba23-596">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-596">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-597">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-597">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-598">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-598">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-599">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-599">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-600">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-600">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-601">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="cba23-602">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="cba23-603">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-603">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="cba23-604">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-605">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-606">인증 프로세스에는 지정된 자격 증명이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-606">The authentication process uses the specified credentials.</span>
          </span>
          <span data-ttu-id="cba23-607">이 메서드는 차단되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-607">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-608">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-609">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="cba23-610">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-611">호출 하 여 비동기 인증 작업을 완료 해야는 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="cba23-612">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="cba23-613">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="cba23-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="cba23-614">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-615">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-616">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-616">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cba23-617">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-617">\- or -</span>
          </span>
          <span data-ttu-id="cba23-618">
            <paramref name="targetName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-618">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-619">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-619">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-620">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-620">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-621">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-621">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-622">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-622">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-623">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-623">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-624">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-624">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-625">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-625">\- or -</span>
          </span>
          <span data-ttu-id="cba23-626">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-626">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-627">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-627">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-628">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-628">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-629">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-629">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-630">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-630">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="cba23-631">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-631">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-632">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-632">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="cba23-633">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-633">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="cba23-634">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-634">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="cba23-635">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-635">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-636">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-636">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-637">인증 프로세스에는 지정된 자격 증명과 채널 바인딩이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-637">The authentication process uses the specified credentials and channel binding.</span>
          </span>
          <span data-ttu-id="cba23-638">이 메서드는 차단되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-638">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-639">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-639">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-640">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-640">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="cba23-641">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-641">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-642">호출 하 여 비동기 인증 작업을 완료 해야는 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-642">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="cba23-643">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-643">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="cba23-644">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="cba23-644">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="cba23-645">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-645">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-646">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-646">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-647">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-647">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cba23-648">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-648">\- or -</span>
          </span>
          <span data-ttu-id="cba23-649">
            <paramref name="targetName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-649">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-650">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-650">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-651">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-651">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-652">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-652">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-653">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-653">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-654">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-654">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-655">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-655">\- or -</span>
          </span>
          <span data-ttu-id="cba23-656">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-656">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-657">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-657">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-658">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-658">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-659">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-659">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-660">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-660">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-661">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-661">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="cba23-662">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-662">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="cba23-663">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-663">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="cba23-664">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-664">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="cba23-665">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-665">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-666">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-666">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-667">인증 프로세스에는 지정된 자격 증명과 인증 옵션이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-667">The authentication process uses the specified credentials and authentication options.</span>
          </span>
          <span data-ttu-id="cba23-668">이 메서드는 차단되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-668">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-669">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-669">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-670">사용 하 여는 `requiredProtectionLevel` 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-670">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="cba23-671">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-671">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="cba23-672">인증이 성공 보장 하지 않습니다는 요청 된 <xref:System.Net.Security.ProtectionLevel> 승인 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-672">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="cba23-673">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-673">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="cba23-674">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-674">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="cba23-675">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-675">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-676">호출 하 여 비동기 인증 작업을 완료 해야는 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-676">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="cba23-677">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-677">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="cba23-678">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="cba23-678">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="cba23-679">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-679">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-680">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-680">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-681">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-681">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cba23-682">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-682">\- or -</span>
          </span>
          <span data-ttu-id="cba23-683">
            <paramref name="targetName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-683">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-684">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-684">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-685">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-685">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-686">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-686">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-687">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-687">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-688">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-688">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-689">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-689">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-690">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-690">\- or -</span>
          </span>
          <span data-ttu-id="cba23-691">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-691">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-692">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-692">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-693">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-693">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-694">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-694">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-695">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-695">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="cba23-696">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-696">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="cba23-697">인증할 서버를 고유하게 식별하는 SPN(서비스 사용자 이름)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-697">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-698">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-698">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="cba23-699">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-699">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="cba23-700">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-700">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="cba23-701">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-701">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="cba23-702">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-702">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-703">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-703">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-704">인증 프로세스에는 지정된 자격 증명, 인증 옵션 및 채널 바인딩이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-704">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          </span>
          <span data-ttu-id="cba23-705">이 메서드는 차단되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-705">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-706">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-706">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-707">사용 하 여는 `requiredProtectionLevel` 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-707">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="cba23-708">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-708">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="cba23-709">인증이 성공 보장 하지 않습니다는 요청 된 <xref:System.Net.Security.ProtectionLevel> 승인 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-709">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="cba23-710">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-710">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="cba23-711">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-711">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="cba23-712">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-712">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-713">호출 하 여 비동기 인증 작업을 완료 해야는 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-713">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="cba23-714">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-714">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="cba23-715">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="cba23-715">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="cba23-716">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-716">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-717">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-717">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-718">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-718">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cba23-719">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-719">\- or -</span>
          </span>
          <span data-ttu-id="cba23-720">
            <paramref name="targetName" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-720">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-721">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-721">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-722">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-722">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-723">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-723">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-724">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-724">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-725">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-725">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-726">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-726">\- or -</span>
          </span>
          <span data-ttu-id="cba23-727">이전에 이 스트림을 사용하여 서버로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-727">This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="cba23-728">해당 스트림을 사용하여 클라이언트로 인증을 다시 시도할 수는 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-728">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-729">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-729">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-730">클라이언트-서버 연결의 서버 측 인증을 처리하는 비동기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-730">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-731">인증이 진행 중인 동안이 메서드의 오버 로드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-731">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="cba23-732">인증이 완료 되기를 기다리는 동안 차단 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-732">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="cba23-733">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-733">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="cba23-734">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-734">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="cba23-735">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-735">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-736">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-736">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-737">이 메서드는 차단되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-737">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-738">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-738">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-739">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-739">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="cba23-740">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-740">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="cba23-741">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-741">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="cba23-742">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-742">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-743">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-743">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-744">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-744">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-745">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-745">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-746">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-746">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-747">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-747">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-748">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-748">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-749">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-749">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-750">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-750">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-751">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-751">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-752">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-752">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-753">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-753">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-754">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-754">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="cba23-755">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-755">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="cba23-756">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-756">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="cba23-757">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-757">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="cba23-758">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-758">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-759">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-759">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-760">인증 프로세스에는 지정된 확장 보호 정책이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-760">The authentication process uses the specified extended protection policy.</span>
          </span>
          <span data-ttu-id="cba23-761">이 메서드는 차단되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-761">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-762">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-762">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-763">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-763">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="cba23-764">없음 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-764">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="cba23-765">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-765">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="cba23-766">경우는 `policy` 매개 변수는 `null`, 확장된 보호 정책은 사용 된 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 설정 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-766">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="cba23-767">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-767">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-768">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-768">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-769">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-769">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-770">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-770">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-771">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-771">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-772">
            <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" />와 <paramref name="policy" /> 매개 변수에서 전달된, 확장된 보호 정책 상의 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 모두 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-772">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-773">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-773">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-774">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-774">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-775">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-775">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-776">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-776">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-777">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-777">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-778">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-778">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cba23-779">
            <paramref name="policy" /> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />로 설정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-779">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-780">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-780">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-781">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-781">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="cba23-782">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-782">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="cba23-783">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-783">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="cba23-784">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-784">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="cba23-785">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-785">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-786">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-786">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-787">인증 프로세스에는 지정된 서버 자격 증명과 인증 옵션이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-787">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
          <span data-ttu-id="cba23-788">이 메서드는 차단되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-788">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-789">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-789">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-790">사용 하 여는 `requiredProtectionLevel` 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-790">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="cba23-791">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-791">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="cba23-792">인증이 성공 요청 된 보장 하지 않습니다 <xref:System.Net.Security.ProtectionLevel> 승인 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-792">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="cba23-793">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-793">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="cba23-794">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-794">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="cba23-795">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-795">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-796">호출 하 여 비동기 인증 작업을 완료 해야는 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-796">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="cba23-797">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-797">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="cba23-798">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="cba23-798">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="cba23-799">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-799">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-800">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-800">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-801">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-801">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cba23-802">
            <paramref name="requiredImpersonationLevel" />이 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 또는 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />이어야 하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-802">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-803">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-803">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-804">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-804">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-805">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-805">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-806">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-806">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-807">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-807">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-808">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-808">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-809">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-809">\- or -</span>
          </span>
          <span data-ttu-id="cba23-810">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-810">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="cba23-811">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-811">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-812">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-812">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="cba23-813">명시적 사용 하려면 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-813">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="cba23-814">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-814">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="cba23-815">클라이언트의 ID를 설정하는 데 사용되는 <see cref="T:System.Net.NetworkCredential" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-815">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="cba23-816">확장 보호에 사용되는 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-816">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="cba23-817">스트림의 보안 서비스를 나타내는 <see cref="T:System.Net.Security.ProtectionLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-817">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="cba23-818">서버에서 클라이언트의 자격 증명을 사용하여 리소스에 액세스하는 방법을 나타내는 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-818">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="cba23-819">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-819">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="cba23-820">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-820">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="cba23-821">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-821">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-822">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-822">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="cba23-823">인증 프로세스에는 지정된 서버 자격 증명, 인증 옵션 및 확장 보호 정책이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-823">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
          <span data-ttu-id="cba23-824">이 메서드는 차단되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-824">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-825">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-825">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-826">사용 하 여는 `requiredProtectionLevel` 매개 변수를 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 보안 서비스를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-826">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="cba23-827">예를 들어 데이터를 암호화 및 서명이 수행 하려면, 지정 된 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-827">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="cba23-828">인증이 성공 요청 된 보장 하지 않습니다 <xref:System.Net.Security.ProtectionLevel> 승인 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-828">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="cba23-829">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-829">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="cba23-830">경우는 `policy` 매개 변수는 `null`, 확장된 보호 정책은 사용 된 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 설정 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-830">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="cba23-831">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-831">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="cba23-832">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-832">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="cba23-833">호출 하 여 비동기 인증 작업을 완료 해야는 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-833">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="cba23-834">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-834">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="cba23-835">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="cba23-835">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="cba23-836">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-836">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-837">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-837">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-838">
            <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" />와 <paramref name="policy" /> 매개 변수에서 전달된, 확장된 보호 정책 상의 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 모두 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-838">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-839">
            <paramref name="credential" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-839">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="cba23-840">
            <paramref name="requiredImpersonationLevel" />이 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 또는 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />이어야 하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-840">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-841">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-841">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-842">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-842">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-843">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-843">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-844">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-844">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-845">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-845">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="cba23-846">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-846">\- or -</span>
          </span>
          <span data-ttu-id="cba23-847">이전에 이 스트림을 사용하여 클라이언트로 인증을 시도한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-847">This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="cba23-848">서버로 인증을 다시 시도하는 데 스트림을 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-848">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-849">Windows 95 및 Windows 98이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-849">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-850">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-850">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cba23-851">
            <paramref name="policy" /> 매개 변수는 확장된 보호를 지원하지 않는 플랫폼에서 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />로 설정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-851">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="cba23-852">스트림에서 읽은 바이트를 받는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-852">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="cba23-853">이 스트림에서 읽은 데이터를 저장하기 시작하는 <c>버퍼</c> 내의 위치(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-853">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="cba23-854">스트림에서 읽을 최대 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-854">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="cba23-855">읽기 작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-855">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="cba23-856">읽기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-856">A user-defined object containing information about the read operation.</span>
          </span>
          <span data-ttu-id="cba23-857">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-857">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-858">스트림에서 데이터를 읽어 지정된 배열에 저장하는 비동기 읽기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-858">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-859">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-859">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-860">암호화, 서명 또는 암호화 및 서명에 사용 되는 경우 읽기 작업 기본 스트림에서 데이터를 읽고, 데이터의 무결성을 확인 및 암호를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-860">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="cba23-861">보안 데이터 암호화 또는 서명 사용 중인 같은 서비스를 하는 경우이 메서드는 내부 스트림에서 비동기 읽기 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-861">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="cba23-862">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-862">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="cba23-863">작업이 완료 될 때까지 차단 된 <xref:System.Net.Security.NegotiateStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-863">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="cba23-864">비동기 읽기 작업을 호출 하 여 완료 해야 합니다는 <xref:System.Net.Security.NegotiateStream.EndRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-864">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="cba23-865">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-865">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="cba23-866">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="cba23-866">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="cba23-867"><xref:System.Net.Security.NegotiateStream> 클래스는 여러 개의 읽기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-867">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="cba23-868">동안 다른 작업은 동일한 스트림을에 실행 하는 읽기 작업을 시작 하려고 하면 한 <xref:System.NotSupportedException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-868">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="cba23-869">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-869">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="cba23-870">인증 중 하나를 호출는 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-870">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-871">다음 코드 예제에서는 비동기 읽기 작업을 시작 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-871">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="cba23-872">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-872">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-873">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-873">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-874">
            <paramref name="offset" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-874">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="cba23-875">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-875">\- or -</span>
          </span>
          <span data-ttu-id="cba23-876">
            <paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-876">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="cba23-877">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-877">\- or -</span>
          </span>
          <span data-ttu-id="cba23-878">
            <paramref name="offset" />과 <paramref name="count" />의 합이 <paramref name="buffer" />의 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-878">
              <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cba23-879">읽기 작업이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-879">The read operation failed.</span>
          </span>
          <span data-ttu-id="cba23-880">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-880">\- or -</span>
          </span>
          <span data-ttu-id="cba23-881">암호화를 사용 중이지만 데이터를 해독할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-881">Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-882">읽기 작업을 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-882">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-883">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-883">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-884">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-884">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="cba23-885">스트림에 쓸 바이트를 제공하는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-885">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="cba23-886">스트림에 쓸 바이트를 읽기 시작하는 <c>버퍼</c> 내의 위치(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-886">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="cba23-887">
            <c>버퍼</c>에서 읽을 바이트 수를 지정하는 <see cref="T:System.Int32" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-887">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="cba23-888">쓰기 작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-888">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="cba23-889">쓰기 작업에 대한 정보가 포함된 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-889">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="cba23-890">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-890">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-891">지정된 버퍼에서 스트림에 <see cref="T:System.Byte" />를 쓰는 비동기 쓰기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-891">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-892">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-892">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-893">암호화, 서명 또는 암호화 및 서명에 사용 되는 경우이 메서드 버퍼에서 데이터를 읽을, 암호화, 서명, 또는 암호화 하 고, 서명 및 기본 스트림을 사용 하 여 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-893">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="cba23-894">보안 데이터 암호화 또는 서명 사용 중인 같은 서비스를 하는 경우이 메서드는 내부 스트림의 비동기 쓰기 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-894">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="cba23-895">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-895">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="cba23-896">작업이 완료 될 때까지 차단 된 <xref:System.Net.Security.NegotiateStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-896">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="cba23-897">비동기 읽기 작업을 호출 하 여 완료 해야 합니다는 <xref:System.Net.Security.NegotiateStream.EndWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-897">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="cba23-898">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-898">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="cba23-899">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="cba23-899">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="cba23-900"><xref:System.Net.Security.NegotiateStream> 클래스가 여러 동시 쓰기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-900">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="cba23-901">또 다른 쓰기 작업은 동일한 스트림의을 실행 하는 동안 작업을 시작 하려고 하면 한 <xref:System.NotSupportedException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-901">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="cba23-902">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-902">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="cba23-903">인증 중 하나를 호출는 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-903">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-904">다음 코드 예제에서는 비동기 쓰기 작업을 시작 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-904">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="cba23-905">다음 메서드는 작업이 완료 될 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-905">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-906">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-906">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-907">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-907">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="cba23-908">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-908">\- or -</span>
          </span>
          <span data-ttu-id="cba23-909">
            <paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-909">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="cba23-910">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-910">\- or -</span>
          </span>
          <span data-ttu-id="cba23-911">
            <paramref name="offset" />과 count의 합이 <paramref name="buffer" />의 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-911">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cba23-912">쓰기 작업이 실패했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-912">The write operation failed.</span>
          </span>
          <span data-ttu-id="cba23-913">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-913">\- or -</span>
          </span>
          <span data-ttu-id="cba23-914">암호화를 사용 중이지만 데이터를 암호화할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-914">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-915">쓰기 작업을 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-915">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-916">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-916">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-917">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-917">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-918">내부 스트림을 읽을 수 있는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-918">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-919">인증이 수행되고 내부 스트림을 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-919">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-920">이 속성이 호출에서 반환 된 값을 반환 정상적으로 인증 수행 되 면는 <xref:System.IO.Stream.CanRead%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-920">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="cba23-921">인스턴스를 만들 때 지정 하 고 내부 스트림이 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-921">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-922">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-922">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-923">내부 스트림을 검색할 수 있는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-923">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-924">이 속성은 항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-924">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-925">위치를 설정 하려고 해서는 안는 <xref:System.Net.Security.NegotiateStream> 개체 또는 해당 하는 내부 스트림의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-925">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="cba23-926">인스턴스를 만들 때 지정 하 고 내부 스트림이 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-926">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-927">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-927">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-928">내부 스트림에 제한 시간을 설정할 수 있는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-928">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-929">내부 스트림이 제한 시간을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-929">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-930">호출에서 반환 된 값을 반환 하는이 속성은 <xref:System.IO.Stream.CanTimeout%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-930">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="cba23-931">인스턴스를 만들 때 지정 하 고 내부 스트림이 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-931">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-932">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-932">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-933">내부 스트림에 쓸 수 있는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-933">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-934">인증이 수행되고 내부 스트림에 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-934">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-935">이 속성이 호출에서 반환 된 값을 반환 정상적으로 인증 수행 되 면는 <xref:System.IO.Stream.CanWrite%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-935">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="cba23-936">인스턴스를 만들 때 지정 하 고 내부 스트림이 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-936">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-937">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-937">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="cba23-938">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-938">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-939">
            <see cref="T:System.Net.Security.NegotiateStream" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-939">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-940">이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-940">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="cba23-941">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-941">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="cba23-942"><xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-942"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="cba23-943">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Net.Security.NegotiateStream> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-943">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="cba23-944">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-944">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="cba23-945">
              <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="cba23-945">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="cba23-946">재정의 하는 경우 <see langword="Dispose(Boolean)" /> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <see langword="Dispose" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="cba23-946">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="cba23-947">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="cba23-947">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="cba23-948">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="cba23-948">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="cba23-949">
            <see cref="T:System.IAsyncResult" />를 호출했을 때 반환되는 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-949">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-950">
            <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />를 호출하여 시작한 보류 상태의 비동기 클라이언트 인증 작업을 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-950">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-951">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-951">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="cba23-952">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-952">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-953">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-953">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-954">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-954">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-955">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-955">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="cba23-956">이 작업을 동기적으로 수행 하려면 중 사용 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-956">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-957">
            <paramref name="asyncResult" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-957">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-958">
            <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />를 호출했지만 <paramref name="asyncResult" />가 만들어지지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-958">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-959">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-959">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-960">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-960">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-961">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-961">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-962">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-962">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-963">완료할 보류 상태의 클라이언트 인증이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-963">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="cba23-964">
            <see cref="T:System.IAsyncResult" />를 호출했을 때 반환되는 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-964">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-965">
            <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />를 호출하여 시작한 보류 상태의 비동기 클라이언트 인증 작업을 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-965">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-966">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-966">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="cba23-967">인증이 성공 하면, 체크는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 속성을 확인 보안 서비스에서 사용 되는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-967">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="cba23-968">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-968">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="cba23-969">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-969">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="cba23-970">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-970">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="cba23-971">이 작업을 동기적으로 수행 하려면는 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-971">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-972">
            <paramref name="asyncResult" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-972">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-973">
            <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />를 호출했지만 <paramref name="asyncResult" />가 만들어지지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-973">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="cba23-974">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-974">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-975">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-975">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="cba23-976">인증이 실패한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-976">The authentication failed.</span>
          </span>
          <span data-ttu-id="cba23-977">이 개체를 사용하여 인증을 다시 시도할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-977">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-978">완료할 보류 상태의 인증이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-978">There is no pending authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="cba23-979">
            <see cref="T:System.IAsyncResult" />를 호출했을 때 반환되는 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-979">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-980">
            <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />를 호출하여 시작한 비동기 읽기 작업을 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-980">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-981">내부 스트림에서 읽은 바이트 수를 지정하는 <see cref="T:System.Int32" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-981">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-982">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-982">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="cba23-983">이 작업을 동기적으로 수행 하려면는 <xref:System.Net.Security.NegotiateStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-983">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="cba23-984">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-984">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="cba23-985">인증 중 하나를 호출는 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-985">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-986">다음 코드 예제에서는 읽기는 비동기 종료 작업을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-986">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="cba23-987">작업을 시작 하는 방법을 보여 주는 예제를 보려면 <xref:System.Net.Security.NegotiateStream.BeginRead%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-987">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-988">
            <paramref name="asyncResult" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-988">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-989">
            <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />를 호출했지만 asyncResult가 만들어지지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-989">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-990">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-990">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cba23-991">읽기 작업이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-991">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="cba23-992">
            <see cref="T:System.IAsyncResult" />를 호출했을 때 반환되는 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-992">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-993">
            <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />를 호출하여 시작한 비동기 쓰기 작업을 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-993">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-994">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-994">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="cba23-995">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-995">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="cba23-996">인증 중 하나를 호출는 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-996">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="cba23-997">이 작업을 동기적으로 수행 하려면는 <xref:System.Net.Security.NegotiateStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-997">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-998">다음 코드 예제에서는 비동기 쓰기 작업을 완료 하기 위해 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-998">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="cba23-999">작업을 시작 하는 방법을 보여 주는 예제를 보려면 <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-999">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-1000">
            <paramref name="asyncResult" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1000">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-1001">
            <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />를 호출했지만 asyncResult가 만들어지지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1001">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-1002">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1002">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cba23-1003">쓰기 작업이 실패했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1003">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1004">버퍼링된 모든 데이터를 내부 장치에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1004">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1005">이 메서드를 호출 <xref:System.IO.Stream.Flush%2A> 내부 스트림의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1005">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1006">다음 코드 예제에서는 스트림을 플러시하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1006">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1007">서버에서 클라이언트의 자격 증명을 사용하는 방법을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1007">Gets a value that indicates how the server can use the client's credentials.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-1008">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1008">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1009">이 메서드를 호출 하기 전에 성공적으로 인증 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1009">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="cba23-1010">중 하나를 호출 하 여 인증을 요청할 때 클라이언트를 가장 수준이 지정 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-1010">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="cba23-1011">지정 하지 않고 인증 하는 경우는 <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1011">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1012">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1012">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-1013">인증이 실패하거나 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1013">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1014">인증이 성공했는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1014">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-1015">인증이 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1015">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1016">호출 하 여 클라이언트 인증의 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-1016">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="cba23-1017">호출 하 여 서버 인증의 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-1017">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1018">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1018">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1019">이 <see cref="T:System.Boolean" />에서 데이터 암호화를 사용하는지 여부를 나타내는 <see cref="T:System.Net.Security.NegotiateStream" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1019">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-1020">네트워크를 통해 전송하기 전에 데이터를 암호화하고 원격 끝점에 도달한 후 해독하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1020">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1021">암호화가 데이터의 개인 정보를 보호 하는 즉,는 데이터가 전송 되는 동안 해독할 수 없으므로 제 3 자가 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1021">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1022">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1022">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1023">서버와 클라이언트 모두 인증되었는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1023">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-1024">서버가 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1024">
              <see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1025">클라이언트가 서버를 인증에 대 한 자격 증명을 제공 하는 경우 클라이언트에서 상호 인증을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1025">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="cba23-1026">기본적으로 클라이언트는 상호 인증을 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1026">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="cba23-1027">협상 프로토콜은 클라이언트와 서버에서 지 원하는 보안 프로토콜에 따라 NTLM 이나 Kerberos를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1027">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="cba23-1028">NTLM 상호 인증을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1028">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1029">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1029">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1030">이 <see cref="T:System.Boolean" />에서 사용하는 연결의 로컬측이 서버로 인증되었는지 여부를 나타내는 <see cref="T:System.Net.Security.NegotiateStream" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1030">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-1031">로컬 끝점이 인증된 연결의 서버측으로 인증되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1031">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1032">이 속성을 반환 하는 경우 인증이 실패 하거나 발생 하지 않은, `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1032">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="cba23-1033">서버로 인증 하려면 호출는 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-1033">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1034">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1034">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1035">이 스트림을 사용하여 보내는 데이터에 서명할지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1035">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-1036">데이터를 전송하기 전에 서명하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1036">
              <see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1037">데이터의 무결성을 보호 하는 데 도움이 데이터 서명 즉, 수신자가 데이터가 전송 중에 있는 훼손 되었는지 여부를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1037">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1038">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1038">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1039">내부 스트림의 길이를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1039">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-1040">내부 스트림의 길이를 지정하는 <see cref="T:System.Int64" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1040">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1041">호출에서 반환 된 값을 반환 하는이 속성은 <xref:System.IO.Stream.Length%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1041">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="cba23-1042">내부 스트림을 검색할 수 없는 경우이 속성 일반적으로 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1042">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="cba23-1043">내부 스트림의 런타임 형식에 throw 되는 예외의 런타임 형식이 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1043">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1044">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1044">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-1045">내부 스트림이 <see cref="T:System.Net.Sockets.NetworkStream" />일 때 이 속성의 값을 가져올 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1045">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1046">내부 스트림 내의 현재 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1046">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-1047">내부 스트림 내의 현재 위치를 지정하는 <see cref="T:System.Int64" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1047">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1048">호출에서 반환 된 값을 반환 하는이 속성은 <xref:System.IO.Stream.Position%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1048">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="cba23-1049">내부 스트림을 검색할 수 없는 경우이 속성 일반적으로 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1049">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="cba23-1050">내부 스트림의 런타임 형식에 throw 되는 예외의 런타임 형식이 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1050">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-1051">이 속성 설정이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1051">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="cba23-1052">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1052">\- or -</span>
          </span>
          <span data-ttu-id="cba23-1053">내부 스트림이 <see cref="T:System.Net.Sockets.NetworkStream" />일 때 이 속성의 값을 가져올 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1053">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="cba23-1054">스트림에서 읽은 바이트를 받는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1054">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="cba23-1055">이 스트림에서 읽은 데이터를 저장하기 시작하는 <c>버퍼</c> 내의 위치(0부터 시작)가 포함된 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1055">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="cba23-1056">스트림에서 읽을 최대 바이트 수가 포함된 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1056">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-1057">이 스트림에서 데이터를 읽어 지정된 배열에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1057">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-1058">내부 스트림에서 읽은 바이트 수를 지정하는 <see cref="T:System.Int32" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1058">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
          <span data-ttu-id="cba23-1059">읽을 데이터가 더 이상 없으면 0이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1059">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1060">메서드는 최대 읽고 `count` 바이트 스트림 및에 저장 합니다 `buffer` 부터 `offset`합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1060">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="cba23-1061">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1061">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="cba23-1062">인증 중 하나를 호출는 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-1062">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="cba23-1063">이 작업을 비동기적으로 수행 하려면는 <xref:System.Net.Security.NegotiateStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-1063">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1064">다음 코드 예제에서 읽기는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1064">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cba23-1065">읽기 작업이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1065">The read operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-1066">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1066">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-1067">
            <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 작업이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1067">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1068">읽기 작업에서 데이터 대기를 차단하는 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1068">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-1069">읽기 작업이 실패할 때까지 걸리는 시간을 지정하는 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1069">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1070">호출에서 반환 된 값을 반환 하는이 속성은 <xref:System.IO.Stream.ReadTimeout%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1070">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="cba23-1071">이 속성을 설정 하는 경우는 <xref:System.IO.Stream.ReadTimeout%2A> 내부 스트림의 값이 지정된 된 값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1071">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="cba23-1072">기본 스트림이 <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> 밀리초 이며로 설정 되어 <xref:System.Threading.Timeout.Infinite> 작업 제한 시간이 초과 되지 않는 읽기를 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1072">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1073">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1073">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1074">인증된 이 스트림을 공유하는 원격 대상의 ID 정보를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1074">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-1075">원격 끝점의 ID를 설명하는 <see cref="T:System.Security.Principal.IIdentity" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1075">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1076">이 속성은 반환 클라이언트에서 액세스 하는 <xref:System.Security.Principal.GenericIdentity> 는 이름 SPN (서비스 사용자)는 서버와 사용 되는 인증 프로토콜을 포함 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1076">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="cba23-1077">이 속성을 반환 하 여 서버에 액세스 하는 <xref:System.Security.Principal.WindowsIdentity> 클라이언트를 설명 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1077">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="cba23-1078">경우는 <xref:System.Security.Principal.WindowsIdentity> 은 사용할 수 없는 클라이언트 정보에 서버에 반환 되는 <xref:System.Security.Principal.GenericIdentity>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1078">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1079">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1079">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-1080">인증이 실패하거나 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1080">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="cba23-1081">이 값은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1081">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="cba23-1082">이 값은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1082">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-1083">
            <see cref="T:System.NotSupportedException" />을 throw합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1083">Throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cba23-1084">항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1084">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1085">이 메서드를 호출 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="cba23-1085">Do not call this method.</span></span> <span data-ttu-id="cba23-1086">를 상속 하지만에서 지원 되지 않습니다 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1086">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-1087">
            <see cref="T:System.Net.Security.NegotiateStream" />에서 검색을 지원하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1087">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="cba23-1088">스트림의 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1088">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-1089">내부 스트림의 길이를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1089">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="cba23-1090">스트림에 쓸 바이트를 제공하는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1090">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="cba23-1091">스트림에 쓸 바이트를 읽기 시작하는 <c>버퍼</c> 내의 위치(0부터 시작)가 포함된 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1091">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="cba23-1092">
            <c>버퍼</c>에서 읽을 바이트 수가 포함된 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1092">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cba23-1093">지정된 버퍼와 오프셋을 사용하여 지정된 수의 <see cref="T:System.Byte" />를 내부 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1093">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1094">암호화, 서명 또는 암호화 및 서명에 사용 되는 경우이 메서드 버퍼에서 데이터를 읽을, 암호화, 서명, 또는 암호화 하 고, 서명 및 기본 스트림을 사용 하 여 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1094">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="cba23-1095">이 메서드를 호출 하는 경우 보안 데이터 암호화 또는 서명 사용 중인 같은 서비스를 <xref:System.IO.Stream.Write%2A> 내부 스트림의 합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1095">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="cba23-1096">이 메서드는 쓰기 작업이 완료 될 때 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1096">This method blocks while the write operation completes.</span></span> <span data-ttu-id="cba23-1097">작업이 완료 될 때까지 차단 하지 않으려면을 사용 하 여는 <xref:System.Net.Security.NegotiateStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-1097">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="cba23-1098">성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1098">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="cba23-1099">인증 중 하나를 호출는 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cba23-1099">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="cba23-1100"><xref:System.Net.Security.NegotiateStream> 클래스가 여러 동시 쓰기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1100">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="cba23-1101">또 다른 쓰기 작업은 동일한 스트림의을 실행 하는 동안 작업을 시작 하려고 하면 한 <xref:System.NotSupportedException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1101">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1102">다음 코드 예제에 쓰기는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1102">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cba23-1103">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1103">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cba23-1104">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1104">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="cba23-1105">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1105">\- or -</span>
          </span>
          <span data-ttu-id="cba23-1106">
            <paramref name="offset" /> 이 <paramref name="buffer" />의 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1106">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="cba23-1107">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1107">\- or -</span>
          </span>
          <span data-ttu-id="cba23-1108">
            <paramref name="offset" />과 count의 합이 <paramref name="buffer" />의 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1108">
              <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="cba23-1109">쓰기 작업이 실패했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1109">The write operation failed.</span>
          </span>
          <span data-ttu-id="cba23-1110">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1110">\- or -</span>
          </span>
          <span data-ttu-id="cba23-1111">암호화를 사용 중이지만 데이터를 암호화할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1111">Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cba23-1112">쓰기 작업을 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1112">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="cba23-1113">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1113">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cba23-1114">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1114">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cba23-1115">쓰기 작업에서 데이터 대기를 차단하는 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1115">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cba23-1116">쓰기 작업이 실패할 때까지 걸리는 시간을 지정하는 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cba23-1116">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cba23-1117">호출에서 반환 된 값을 반환 하는이 속성은 <xref:System.IO.Stream.WriteTimeout%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1117">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="cba23-1118">집합 작업에 대 한 지정 된 값이 설정의 <xref:System.IO.Stream.WriteTimeout%2A> 내부 스트림의 값.</span><span class="sxs-lookup"><span data-stu-id="cba23-1118">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="cba23-1119">기본 스트림이 <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> 밀리초 이며로 설정 되어 <xref:System.Threading.Timeout.Infinite> 기본적으로 쓰기에 작업 제한 시간이 초과 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1119">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cba23-1120">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="cba23-1120">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>