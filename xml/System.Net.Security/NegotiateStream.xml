<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a91049778a482fee3308bf1cf44c8c630042c15e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37478078" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="61887-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      <span class="sxs-lookup">
        <span data-stu-id="61887-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-102">사용 된 <xref:System.Net.Security.NegotiateStream> 클라이언트와 서버 간에 전송 되는 인증에 대 한 정보를 보호 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="61887-103">사용 하 여 <xref:System.Net.Security.NegotiateStream>, 다음을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="61887-104">가장 또는 위임에 대 한 서버에 클라이언트의 자격 증명을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="61887-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="61887-105">서버 인증을 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="61887-106">암호화 및/또는 전송 하기 전에 데이터에 서명</span><span class="sxs-lookup"><span data-stu-id="61887-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="61887-107">인증 정보를 전송 하기 전에 수행 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="61887-108">클라이언트 요청 인증을 사용 하 여 동기 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 인증 완료 될 때까지 차단 하는 메서드 또는 비동기 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> 메서드는 인증이 완료 되기를 기다리는 동안 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="61887-109">서버에서 동기를 사용 하 여 인증을 요청할 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 비동기적인지 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="61887-110">클라이언트와 서버를 필요에 따라 보안 협상 프로토콜을 사용 하 여 인증 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="61887-111">Windows 95/98 시스템에서 Windows NT LAN Manager (NTLM) 인증에 사용 되는 프로토콜입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="61887-112">다른 플랫폼 Kerberos 프로토콜은 인증에 대 한 클라이언트와 서버 모두에서 지 원하는 경우; 그렇지 않으면 NTLM이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="61887-113">에 대 한 자세한 설명은 이러한 프로토콜을 msdn.microsoft.com/library/에 MSDN의 Platform SDK 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="61887-114"><xref:System.Net.Security.NegotiateStream> 클래스 보안 지원 공급자 인터페이스 (SSPI)를 사용 하 여 인증을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="61887-115">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용할 보안 서비스를 결정 하는 속성은 <xref:System.Net.Security.NegotiateStream> 전송 중 데이터를 보호 하기 위해.</span><span class="sxs-lookup"><span data-stu-id="61887-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="61887-116">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="61887-117">원격 클라이언트를 사용 하 여 서버에 대 한 정보를 얻을 수는 <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="61887-118">인증에 실패 하는 경우 받게를 <xref:System.Security.Authentication.AuthenticationException> 또는 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-119">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="61887-120">동기 버전을 사용 하 여 데이터를 보낼 <xref:System.Net.Security.NegotiateStream.Write%2A> 비동기적인지 <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="61887-121">동기 버전을 사용 하 여 데이터를 수신할 <xref:System.Net.Security.NegotiateStream.Read%2A> 비동기적인지 <xref:System.Net.Security.NegotiateStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="61887-122">보안에는 암호화 또는 서명 사용 하도록 설정 같은 서비스를 이러한는 자동으로 적용 하 여 데이터를 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="61887-123">합니다 <xref:System.Net.Security.NegotiateStream> 를 만들 때 제공 하는 스트림을 사용 하 여 데이터를 전송 합니다 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-124">지정 하는 옵션이 있는이 내부 스트림을 입력 하면 닫는 지 여부를 <xref:System.Net.Security.NegotiateStream> 기본 스트림도 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="61887-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-125">다음 코드 예제에서는 사용 하는 클라이언트-서버 연결의 클라이언트측을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-126">클라이언트를 인증 하 고 서버로 메시지를 비동기적으로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="61887-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="61887-127">다음 코드 예제에서는 사용 하는 클라이언트-서버 연결의 서버 쪽의 <xref:System.Net.Security.NegotiateStream> 클라이언트에서 보낸 메시지를 읽고 클라이언트를 인증 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61887-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-128">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-129">방지 하기 위해 합니다 <xref:System.Net.Security.NegotiateStream> 에서 제공 하는 스트림을 닫는 사용 하 여는 <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-129">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="61887-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-130">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-131">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61887-132">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-132">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="61887-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-133">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="61887-134">
            <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-134">
              <see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <c>innerstream</c>; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <c>innerStream</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-135">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-136">지정 하는 경우 `true` 에 대 한는 `leaveStreamOpen` 매개 변수를 닫는 합니다 <xref:System.Net.Security.NegotiateStream> 영향을 주지 않습니다를 `innerStream` 스트림이 명시적으로 닫아야 `innerStream` 이상 필요할 때.</span><span class="sxs-lookup"><span data-stu-id="61887-136">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-137">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-137">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="61887-138">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-138">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-139">
            <paramref name="innerStream" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-139">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="61887-140">\- or -  <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-140">\- or -  <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61887-141">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-141">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61887-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-142">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-143">인증을 사용 하 여 클라이언트의 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-143">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="61887-144">없는 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-144">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="61887-145">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증이 요청 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-145">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="61887-146"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-146">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="61887-147">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-147">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-148">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-148">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-149">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-149">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-150">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-150">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-151">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-151">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-152">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-152">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-153">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-153">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-154">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-154">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-155">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-155">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-156">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-156">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-157">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-157">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-158">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-158">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-159">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-159">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-160">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-160">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-161">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-161">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-162">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-162">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-163">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-163">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-164">The authentication process uses the specified client credential.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-164">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-165">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증이 요청 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-165">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="61887-166"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-166">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="61887-167">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-167">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-168">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-168">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-169">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-169">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-170">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-170">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-171">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-171">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-172">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-172">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-173">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-173">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-174">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-174">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-175">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-175">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-176">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-176">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-177">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-177">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-178">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-178">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-179">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-179">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-180">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-180">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="61887-181">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-181">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-182">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-182">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-183">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-183">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-184">The authentication process uses the specified client credential and the channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-184">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-185">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증이 요청 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-185">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="61887-186"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-186">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="61887-187"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 이 메서드에 전달 되는 확장 된 보호에 사용 합니다 `binding` 매개 변수에서 응용 프로그램에 의해 검색 되 <xref:System.Net.Security.SslStream.TransportContext%2A> 연결 된 속성 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-187">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="61887-188">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-188">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-189">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-189">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-190">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-190">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="61887-191">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-191">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-192">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-192">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-193">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-193">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-194">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-194">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-195">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-195">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-196">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-196">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-197">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-197">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-198">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-198">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-199">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-199">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-200">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-200">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-201">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-201">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-202">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-202">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="61887-203">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-203">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-204">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-204">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-205">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-205">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-206">사용 된 `requiredProtectionLevel` 보안 서비스 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 요청 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-206">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="61887-207">예를 들어, 데이터 암호화 및 서명이 수행 하도록 지정 합니다 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-207">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="61887-208">인증 성공 보장 하지 않습니다 하는 요청 된 <xref:System.Net.Security.ProtectionLevel> 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-208">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="61887-209">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-209">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="61887-210">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-210">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-211">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-211">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61887-212">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-212">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-213">
            <paramref name="targetName" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-213">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-214">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-214">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-215">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-215">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-216">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-216">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-217">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-217">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-218">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-218">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-219">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-219">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-220">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-220">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-221">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-221">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-222">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-222">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-223">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-223">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-224">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-224">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="61887-225">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-225">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-226">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-226">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-227">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-227">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="61887-228">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-228">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-229">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-229">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-230">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-230">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-231">사용 된 `requiredProtectionLevel` 보안 서비스 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 요청 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-231">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="61887-232">예를 들어, 데이터 암호화 및 서명이 수행 하도록 지정 합니다 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-232">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="61887-233">인증 성공 보장 하지 않습니다 하는 요청 된 <xref:System.Net.Security.ProtectionLevel> 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-233">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="61887-234">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-234">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="61887-235"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 이 메서드에 전달 되는 확장 된 보호에 사용 합니다 `binding` 매개 변수에서 응용 프로그램에 의해 검색 되 <xref:System.Net.Security.SslStream.TransportContext%2A> 연결 된 속성 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-235">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="61887-236">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-236">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-237">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-237">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-238">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-238">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="61887-239">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-239">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61887-240">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-240">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-241">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-241">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-242">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-242">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-243">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-243">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-244">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-244">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-245">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-245">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-246">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-246">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-247">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-247">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-248">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-248">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61887-249">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-249">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61887-250">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-250">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-251">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-251">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-252">인증을 사용 하 여 클라이언트의 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-252">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="61887-253">없는 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-253">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="61887-254">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증이 요청 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-254">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="61887-255"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-255">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="61887-256">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-256">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-257">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-257">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-258">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-258">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-259">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-259">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-260">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-260">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-261">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-261">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-262">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-262">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-263">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-263">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-264">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-264">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-265">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-265">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-266">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-266">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-267">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-267">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-268">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-268">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-269">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-269">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-270">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-270">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-271">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-271">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-272">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-272">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="61887-273">The authentication process uses the specified client credential.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-273">The authentication process uses the specified client credential.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-274">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-274">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-275">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증이 요청 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-275">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="61887-276"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-276">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="61887-277">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-277">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-278">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-278">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-279">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-279">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-280">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-280">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-281">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-281">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-282">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-282">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-283">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-283">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-284">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-284">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-285">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-285">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-286">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-286">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-287">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-287">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-288">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-288">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-289">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-289">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-290">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-290">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="61887-291">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-291">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-292">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-292">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-293">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-293">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="61887-294">The authentication process uses the specified client credential and the channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-294">The authentication process uses the specified client credential and the channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-295">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-295">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-296">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, 상호 인증이 요청 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-296">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="61887-297"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-297">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="61887-298"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 이 메서드에 전달 되는 확장 된 보호에 사용 합니다 `binding` 매개 변수에서 응용 프로그램에 의해 검색 되 <xref:System.Net.Security.SslStream.TransportContext%2A> 연결 된 속성 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-298">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="61887-299">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-299">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-300">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-300">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-301">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-301">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="61887-302">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-302">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-303">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-303">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-304">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-304">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-305">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-305">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-306">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-306">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-307">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-307">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-308">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-308">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-309">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-309">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-310">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-310">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-311">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-311">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-312">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-312">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-313">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-313">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="61887-314">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-314">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-315">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-315">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="61887-316">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-316">The authentication process uses the specified credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-317">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-317">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-318">사용 된 `requiredProtectionLevel` 보안 서비스 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 요청 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-318">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="61887-319">예를 들어, 데이터 암호화 및 서명이 수행 하도록 지정 합니다 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-319">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="61887-320">인증 성공 보장 하지 않습니다 하는 요청 된 <xref:System.Net.Security.ProtectionLevel> 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-320">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="61887-321">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-321">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="61887-322">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-322">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-323">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-323">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61887-324">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-324">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-325">
            <paramref name="targetName" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-325">
              <paramref name="targetName" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-326">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-326">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-327">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-327">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-328">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-328">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-329">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-329">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-330">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-330">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-331">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-331">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-332">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-332">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-333">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-333">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-334">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-334">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-335">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-335">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-336">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-336">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="61887-337">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-337">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-338">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-338">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-339">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-339">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="61887-340">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-340">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-341">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-341">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="61887-342">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-342">The authentication process uses the specified credential, authentication options, and channel binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-343">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-343">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-344">사용 된 `requiredProtectionLevel` 보안 서비스 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 요청 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-344">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="61887-345">예를 들어, 데이터 암호화 및 서명이 수행 하도록 지정 합니다 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-345">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="61887-346">인증 성공 보장 하지 않습니다 하는 요청 된 <xref:System.Net.Security.ProtectionLevel> 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-346">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="61887-347">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-347">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="61887-348"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 이 메서드에 전달 되는 확장 된 보호에 사용 합니다 `binding` 매개 변수에서 응용 프로그램에 의해 검색 되 <xref:System.Net.Security.SslStream.TransportContext%2A> 연결 된 속성 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-348">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="61887-349">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-349">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-350">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-350">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-351">
            <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-351">
              <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="61887-352">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-352">\- or -  <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61887-353">
            <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-353">
              <paramref name="allowedImpersonationLevel" /> is not a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-354">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-354">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-355">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-355">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-356">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-356">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-357">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-357">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-358">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-358">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-359">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-359">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-360">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-360">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-361">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-361">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61887-362">Handles the server side of an authentication for a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-362">Handles the server side of an authentication for a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-363">이러한 메서드는 인증이 진행에서 되는 동안 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-363">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="61887-364">인증이 완료 되기를 기다리는 동안 차단에서 응용 프로그램을 방지 하려면 사용 된 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-364">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61887-365">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-365">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-366">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-366">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="61887-367">없는 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-367">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="61887-368">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준을 이며 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-368">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="61887-369">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-369">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-370">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-370">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-371">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-371">This method blocks until the operation completes.</span></span> <span data-ttu-id="61887-372">작업이 완료 될 때까지 차단 사용 하지 않으려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-372">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-373">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-373">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-374">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-374">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-375">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-375">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-376">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-376">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-377">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-377">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-378">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-378">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-379">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-379">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-380">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-380">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-381">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-381">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-382">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-382">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="61887-383">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-383">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-384">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-384">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-385">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-385">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-386">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="61887-387">없는 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="61887-388">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준을 이며 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="61887-389">경우는 `policy` 매개 변수는 `null`에 있는 확장된 된 보호 정책이 사용 됩니다 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-389">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="61887-390">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-390">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-391">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-391">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-392">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-392">This method blocks until the operation completes.</span></span> <span data-ttu-id="61887-393">작업이 완료 될 때까지 차단 사용 하지 않으려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-393">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-394">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-394">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-395">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-395">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-396">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-396">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-397">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-397">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-398">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-398">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-399">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-399">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-400">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-400">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-401">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-401">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-402">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-402">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61887-403">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-403">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-404">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-404">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-405">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-405">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="61887-406">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-406">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-407">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-407">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-408">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-408">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-409">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-409">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-410">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-410">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-411">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-411">This method blocks until the operation completes.</span></span> <span data-ttu-id="61887-412">작업이 완료 될 때까지 차단 사용 하지 않으려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-412">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-413">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-413">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-414">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-414">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-415">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-415">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61887-416">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-416">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-417">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-417">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-418">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-418">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-419">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-419">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-420">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-420">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-421">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-421">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-422">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-422">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-423">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-423">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="61887-424">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-424">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-425">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-425">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-426">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-426">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-427">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-427">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-428">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-428">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="61887-429">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-429">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-430">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-430">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="61887-431">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-431">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-432">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-432">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-433">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-433">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-434">경우는 `policy` 매개 변수는 `null`에 있는 확장된 된 보호 정책이 사용 됩니다 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-434">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="61887-435">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-435">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-436">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-436">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-437">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-437">This method blocks until the operation completes.</span></span> <span data-ttu-id="61887-438">작업이 완료 될 때까지 차단 사용 하지 않으려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-438">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-439">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-439">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-440">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-440">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-441">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-441">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-442">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-442">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61887-443">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-443">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-444">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-444">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-445">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-445">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-446">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-446">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-447">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-447">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-448">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-448">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-449">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-449">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="61887-450">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-450">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-451">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-451">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-452">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-452">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61887-453">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-453">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61887-454">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-454">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61887-455">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-455">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-456">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-456">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-457">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-457">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="61887-458">없는 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-458">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="61887-459">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준을 이며 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-459">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="61887-460">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-460">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-461">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-461">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-462">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-462">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-463">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-463">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-464">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-464">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-465">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-465">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-466">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-466">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-467">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-467">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-468">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-468">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-469">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-469">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-470">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-470">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-471">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-471">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="61887-472">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-472">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-473">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-473">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="61887-474">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-474">The authentication process uses the specified extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-475">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-475">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-476">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-476">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="61887-477">없는 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-477">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="61887-478">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준을 이며 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-478">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="61887-479">경우는 `policy` 매개 변수는 `null`에 있는 확장된 된 보호 정책이 사용 됩니다 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-479">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="61887-480">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-480">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-481">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-481">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-482">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-482">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-483">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-483">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-484">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-484">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-485">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-485">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-486">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-486">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-487">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-487">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-488">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-488">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-489">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-489">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-490">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-490">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61887-491">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-491">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-492">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-492">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-493">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-493">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="61887-494">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-494">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-495">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-495">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="61887-496">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-496">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-497">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-497">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-498">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-498">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-499">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-499">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-500">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-500">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-501">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-501">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-502">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-502">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61887-503">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-503">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-504">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-504">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-505">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-505">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-506">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-506">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-507">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-507">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-508">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-508">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-509">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-509">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-510">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-510">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="61887-511">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-511">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-512">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-512">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-513">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-513">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-514">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-514">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-515">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-515">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="61887-516">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-516">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-517">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="61887-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-518">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-519">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="61887-520">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-520">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-521">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-521">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-522">경우는 `policy` 매개 변수는 `null`에 있는 확장된 된 보호 정책이 사용 됩니다 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-522">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="61887-523">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-524">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-525">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-526">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-527">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-527">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-528">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-528">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61887-529">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-529">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-530">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-530">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-531">You can use this object to try to r-authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-531">You can use this object to try to r-authenticate.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-532">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-532">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-533">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-533">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-534">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-534">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-535">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-535">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="61887-536">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-536">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-537">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-537">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-538">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-538">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61887-539">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-539">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61887-540">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-540">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-541">인증 진행 중인 동안이 메서드의 오버 로드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-541">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="61887-542">인증이 완료 되기를 기다리는 동안 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-542">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="61887-543">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-543">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="61887-544">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-544">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="61887-545">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-545">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-546">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-546">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-547">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-547">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-548">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-548">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-549">인증을 사용 하 여 클라이언트의 <xref:System.Net.CredentialCache.DefaultCredentials%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-549">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="61887-550">없는 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-550">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="61887-551">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준을 이며 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-551">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="61887-552"><xref:System.Net.Security.NegotiateStream> 클래스 상호 인증에 사용 되는 SPN을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-552">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="61887-553">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-553">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="61887-554">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-554">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-555">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-555">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="61887-556">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-556">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="61887-557">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="61887-557">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="61887-558">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-558">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-559">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-559">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-560">다음 코드 예제에서는 클라이언트에 대 한 비동기 인증 하려면이 메서드를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-560">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-561">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-561">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-562">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-562">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-563">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-563">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-564">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-564">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-565">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-565">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-566">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-566">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-567">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-567">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-568">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-568">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-569">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-569">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-570">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-570">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-571">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-571">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-572">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-572">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="61887-573">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-573">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="61887-574">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-574">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="61887-575">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-575">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-576">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-576">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-577">The authentication process uses the specified credentials.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-577">The authentication process uses the specified credentials.</span>
          </span>
          <span data-ttu-id="61887-578">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-578">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-579">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-579">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-580">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-580">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="61887-581">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-581">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-582">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-582">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="61887-583">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-583">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="61887-584">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="61887-584">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="61887-585">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-585">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-586">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-586">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-587">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-587">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="61887-588">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-588">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-589">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-589">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-590">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-590">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-591">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-591">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-592">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-592">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-593">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-593">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-594">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-594">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-595">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-595">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-596">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-596">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-597">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-597">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-598">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-598">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-599">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-599">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="61887-600">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-600">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="61887-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="61887-603">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-603">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="61887-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-604">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-606">The authentication process uses the specified credentials and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-606">The authentication process uses the specified credentials and channel binding.</span>
          </span>
          <span data-ttu-id="61887-607">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-607">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-609">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="61887-610">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-611">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="61887-612">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="61887-613">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="61887-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="61887-614">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-615">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-616">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-616">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="61887-617">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-617">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-618">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-618">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-619">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-619">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-620">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-620">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-621">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-621">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-622">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-622">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-623">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-623">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-624">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-624">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-625">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-625">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-626">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-626">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-627">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-627">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-628">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-628">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="61887-629">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-629">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="61887-630">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-630">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="61887-631">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-631">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="61887-632">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-632">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-633">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-633">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-634">The authentication process uses the specified credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-634">The authentication process uses the specified credentials and authentication options.</span>
          </span>
          <span data-ttu-id="61887-635">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-635">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-636">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-636">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-637">사용 된 `requiredProtectionLevel` 보안 서비스 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 요청 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-637">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="61887-638">예를 들어, 데이터 암호화 및 서명이 수행 하도록 지정 합니다 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-638">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="61887-639">인증 성공 보장 하지 않습니다 하는 요청 된 <xref:System.Net.Security.ProtectionLevel> 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-639">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="61887-640">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-640">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="61887-641">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-641">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="61887-642">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-642">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-643">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-643">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="61887-644">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-644">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="61887-645">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="61887-645">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="61887-646">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-646">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-647">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-647">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-648">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-648">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="61887-649">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-649">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-650">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-650">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-651">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-651">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-652">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-652">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-653">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-653">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-654">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-654">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-655">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-655">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-656">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-656">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-657">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-657">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-658">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-658">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-659">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-659">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="61887-661">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-661">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="targetName">
          <span data-ttu-id="61887-662">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-662">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-663">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-663">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="allowedImpersonationLevel">
          <span data-ttu-id="61887-664">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-664">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="61887-665">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-665">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="61887-666">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-666">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="61887-667">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-667">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-668">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-668">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-669">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-669">The authentication process uses the specified credentials, authentication options, and channel binding.</span>
          </span>
          <span data-ttu-id="61887-670">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-670">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-671">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-671">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-672">사용 된 `requiredProtectionLevel` 보안 서비스 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 요청 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-672">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="61887-673">예를 들어, 데이터 암호화 및 서명이 수행 하도록 지정 합니다 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-673">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="61887-674">인증 성공 보장 하지 않습니다 하는 요청 된 <xref:System.Net.Security.ProtectionLevel> 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-674">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="61887-675">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-675">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="61887-676">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-676">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="61887-677">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-677">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-678">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-678">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="61887-679">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-679">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="61887-680">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="61887-680">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="61887-681">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-681">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-682">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-682">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-683">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-683">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="61887-684">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-684">\- or -  <paramref name="targetName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-685">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-685">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-686">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-686">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-687">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-687">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-688">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-688">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-689">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-689">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-690">\- or -  This stream was used previously to attempt authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-690">\- or -  This stream was used previously to attempt authentication as the server.</span>
          </span>
          <span data-ttu-id="61887-691">You cannot use the stream to retry authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-691">You cannot use the stream to retry authentication as the client.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-692">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-692">This object has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61887-693">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-693">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-694">인증 진행 중인 동안이 메서드의 오버 로드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-694">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="61887-695">인증이 완료 되기를 기다리는 동안 차단 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-695">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="asyncCallback">
          <span data-ttu-id="61887-696">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-696">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="61887-697">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-697">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="61887-698">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-698">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-699">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-699">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-700">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-700">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-701">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-701">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-702">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-702">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="61887-703">없는 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-703">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="61887-704">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-704">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="61887-705">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-705">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-706">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-706">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-707">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-707">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-708">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-708">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-709">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-709">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-710">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-710">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-711">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-711">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-712">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-712">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-713">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-713">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-714">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-714">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-715">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-715">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-716">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-716">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-717">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-717">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="policy">
          <span data-ttu-id="61887-718">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-718">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="61887-719">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-719">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="61887-720">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-720">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="61887-721">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-721">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-722">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-722">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-723">The authentication process uses the specified extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-723">The authentication process uses the specified extended protection policy.</span>
          </span>
          <span data-ttu-id="61887-724">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-724">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-725">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-725">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-726">인증 서버를 사용 하 여 <xref:System.Net.CredentialCache.DefaultCredentials%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-726">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="61887-727">없는 이름 SPN (서비스 사용자)는 서버에 대해 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-727">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="61887-728">가장 수준이 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, 보안 수준이 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-728">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="61887-729">경우는 `policy` 매개 변수는 `null`에 있는 확장된 된 보호 정책이 사용 됩니다 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-729">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="61887-730">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-730">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-731">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-731">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-732">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-732">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-733">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-733">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-734">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-734">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-735">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-735">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-736">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-736">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-737">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-737">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-738">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-738">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-739">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-739">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-740">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-740">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-741">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-741">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61887-742">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-742">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-743">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-743">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-744">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-744">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="61887-745">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-745">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="61887-746">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-746">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="61887-747">A user-defined object containing information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-747">A user-defined object containing information about the operation.</span>
          </span>
          <span data-ttu-id="61887-748">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-748">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-749">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-749">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-750">The authentication process uses the specified server credentials and authentication options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-750">The authentication process uses the specified server credentials and authentication options.</span>
          </span>
          <span data-ttu-id="61887-751">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-751">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-752">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-752">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-753">사용 된 `requiredProtectionLevel` 보안 서비스 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 요청 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-753">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="61887-754">예를 들어, 데이터 암호화 및 서명이 수행 하도록 지정 합니다 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-754">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="61887-755">성공적으로 인증 요청 된 보장 하지 않습니다 <xref:System.Net.Security.ProtectionLevel> 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-755">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="61887-756">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-756">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="61887-757">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-757">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="61887-758">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-758">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-759">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-759">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="61887-760">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-760">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="61887-761">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="61887-761">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="61887-762">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-762">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-763">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-763">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-764">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-764">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61887-765">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-765">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-766">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-766">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-767">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-767">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-768">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-768">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-769">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-769">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-770">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-770">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-771">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-771">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-772">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-772">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="61887-773">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-773">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-774">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-774">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="61887-775">명시적 데 <see cref="T:System.Net.NetworkCredential" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-775">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span>
          </span>
          <span data-ttu-id="61887-776">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-776">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="credential">
          <span data-ttu-id="61887-777">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-777">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="61887-778">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-778">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span>
          </span>
        </param>
        <param name="requiredProtectionLevel">
          <span data-ttu-id="61887-779">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-779">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span>
          </span>
        </param>
        <param name="requiredImpersonationLevel">
          <span data-ttu-id="61887-780">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-780">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="61887-781">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-781">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="61887-782">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-782">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="61887-783">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-783">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-784">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-784">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span>
          </span>
          <span data-ttu-id="61887-785">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-785">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span>
          </span>
          <span data-ttu-id="61887-786">This method does not block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-786">This method does not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-787">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-787">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-788">사용 된 `requiredProtectionLevel` 보안 서비스 인증 된 스트림을 사용 하 여 전송 되는 데이터에 대 한 요청 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-788">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="61887-789">예를 들어, 데이터 암호화 및 서명이 수행 하도록 지정 합니다 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-789">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="61887-790">성공적으로 인증 요청 된 보장 하지 않습니다 <xref:System.Net.Security.ProtectionLevel> 권한이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-790">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="61887-791">확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-791">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="61887-792">경우는 `policy` 매개 변수는 `null`에 있는 확장된 된 보호 정책이 사용 됩니다 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 로 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-792">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="61887-793">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-793">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="61887-794">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-794">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="61887-795">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-795">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="61887-796">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-796">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="61887-797">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="61887-797">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="61887-798">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-798">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-799">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-799">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-800">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-800">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-801">
            <paramref name="credential" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-801">
              <paramref name="credential" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61887-802">
            <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-802">
              <paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-803">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-803">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-804">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-804">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-805">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-805">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-806">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-806">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-807">Authentication has already occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-807">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="61887-808">\- or -  This stream was used previously to attempt authentication as the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-808">\- or -  This stream was used previously to attempt authentication as the client.</span>
          </span>
          <span data-ttu-id="61887-809">You cannot use the stream to retry authentication as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-809">You cannot use the stream to retry authentication as the server.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-810">Windows 95 and Windows 98 are not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-810">Windows 95 and Windows 98 are not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-811">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-811">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="61887-812">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-812">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="61887-813">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-813">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="61887-814">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-814">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="61887-815">The maximum number of bytes to read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-815">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="61887-816">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-816">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="61887-817">A user-defined object containing information about the read operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-817">A user-defined object containing information about the read operation.</span>
          </span>
          <span data-ttu-id="61887-818">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-818">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-819">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-819">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-820">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-820">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-821">암호화, 서명 또는 암호화 및 서명를 사용 하는 경우 읽기 작업 내부 스트림에서 데이터를 읽고, 데이터의 무결성을 검사 및 암호를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-821">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="61887-822">보안 없이 사용 중인 데이터 암호화 또는 서명 같은 서비스를 하는 경우이 메서드는 기본 스트림의 비동기 읽기 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-822">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="61887-823">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-823">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="61887-824">작업이 완료 될 때까지 차단 합니다 <xref:System.Net.Security.NegotiateStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-824">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="61887-825">호출 하 여 비동기 읽기 작업을 완료 해야 합니다는 <xref:System.Net.Security.NegotiateStream.EndRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-825">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="61887-826">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-826">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="61887-827">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="61887-827">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="61887-828"><xref:System.Net.Security.NegotiateStream> 클래스가 여러 동시 읽기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-828">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="61887-829">읽는 동안 다른 작업 같은 스트림에서 실행 하는 작업을 시작 하려는 경우는 <xref:System.NotSupportedException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-829">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="61887-830">사용자가 성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-830">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="61887-831">인증 중 하나를 호출 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>를 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-831">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-832">다음 코드 예제에서는 비동기 읽기 작업을 시작 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-832">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="61887-833">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-833">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-834">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-834">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-835">
            <paramref name="offset" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-835">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="61887-836">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-836">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="61887-837">\- or -  <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-837">\- or -  <paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61887-838">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-838">The read operation failed.</span>
          </span>
          <span data-ttu-id="61887-839">\- or -  Encryption is in use, but the data could not be decrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-839">\- or -  Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-840">There is already a read operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-840">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-841">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-841">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-842">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-842">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="61887-843">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-843">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="61887-844">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-844">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="61887-845">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-845">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="61887-846">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-846">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="61887-847">A user-defined object containing information about the write operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-847">A user-defined object containing information about the write operation.</span>
          </span>
          <span data-ttu-id="61887-848">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-848">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-849">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-849">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-850">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-850">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-851">암호화, 서명 또는 암호화 및 서명를 사용 하는 경우이 메서드 버퍼에서 데이터를 읽고, 암호화, 서명, 또는 암호화, 서명 및 기본 스트림을 사용 하 여 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-851">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="61887-852">보안 없이 사용 중인 데이터 암호화 또는 서명 같은 서비스를 하는 경우이 메서드는 기본 스트림의 비동기 쓰기 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-852">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="61887-853">이 메서드는 비동기적 이며 작업이 완료 될 때 차단 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-853">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="61887-854">작업이 완료 될 때까지 차단 합니다 <xref:System.Net.Security.NegotiateStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-854">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="61887-855">호출 하 여 비동기 읽기 작업을 완료 해야 합니다는 <xref:System.Net.Security.NegotiateStream.EndWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-855">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="61887-856">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-856">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="61887-857">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="61887-857">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="61887-858"><xref:System.Net.Security.NegotiateStream> 클래스가 여러 동시 쓰기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-858">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="61887-859">같은 스트림에서 다른 쓰기 작업이 이미 실행 되는 동안 작업을 시작 하려는 경우는 <xref:System.NotSupportedException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-859">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="61887-860">사용자가 성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-860">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="61887-861">인증 중 하나를 호출 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>를 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-861">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-862">다음 코드 예제에서는 비동기 쓰기 작업을 시작 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-862">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="61887-863">다음 메서드는 작업이 완료 될 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-863">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-864">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-864">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-865">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-865">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="61887-866">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-866">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="61887-867">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-867">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61887-868">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-868">The write operation failed.</span>
          </span>
          <span data-ttu-id="61887-869">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-869">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-870">There is already a write operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-870">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-871">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-871">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-872">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-872">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-873">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-873">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-874">
            <see langword="true" /> 인증이 수행 되 고 내부 스트림이 읽을 수 있는; 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-874">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-875">인증이 성공적으로 수행 되 면이 속성 호출에서 반환 된 값을 반환 합니다 <xref:System.IO.Stream.CanRead%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-875">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="61887-876">인스턴스를 만들 때 기본 스트림을 지정 된 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-876">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-877">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-877">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-878">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-878">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-879">이 속성은 항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-879">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-880">위치를 설정 하지 않아야 합니다 <xref:System.Net.Security.NegotiateStream> 개체 또는 해당 기본 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-880">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="61887-881">인스턴스를 만들 때 기본 스트림을 지정 된 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-881">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-882">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-882">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-883">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-883">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-884">
            <see langword="true" /> 내부 스트림에 제한 시간을 지원 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-884">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-885">호출에서 반환 된 값을 반환 하는이 속성은 <xref:System.IO.Stream.CanTimeout%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-885">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="61887-886">인스턴스를 만들 때 기본 스트림을 지정 된 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-886">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-887">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-887">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-888">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-888">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-889">
            <see langword="true" /> 인증이 수행 되 고 내부 스트림이 쓰기 가능한; 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-889">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-890">인증이 성공적으로 수행 되 면이 속성 호출에서 반환 된 값을 반환 합니다 <xref:System.IO.Stream.CanWrite%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-890">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="61887-891">인스턴스를 만들 때 기본 스트림을 지정 된 <xref:System.Net.Security.NegotiateStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-891">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-892">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-892">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="61887-893">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-893">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-894">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-894">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-895">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-895">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="61887-896">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-896">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="61887-897"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-897"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="61887-898">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.Net.Security.NegotiateStream> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-898">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="61887-899">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-899">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="61887-900">
            <para>
              <see langword="Dispose" /> 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [삭제 Method](~/docs/standard/garbage-collection/implementing-dispose.md) 구현 합니다.  에 대 한 자세한 내용은 <see langword="Dispose" /> 하 고 <see cref="M:System.Object.Finalize" />를 참조 하세요 [관리 되지 않는 Resources](~/docs/standard/garbage-collection/unmanaged.md) 정리 하 고 [Finalize 메서드 재정의] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-900">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="61887-901">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-901">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-902">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-902">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-903">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-903">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="61887-904">때 인증에 성공 하면 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-904">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-905">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-905">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-906">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-906">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-907">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-907">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="61887-908">이 작업을 동기적으로 수행 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-908">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-909">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-909">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-910">
            <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-910">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-911">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-911">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-912">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-912">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-913">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-913">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-914">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-914">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-915">There is no pending client authentication to complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-915">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="61887-916">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-916">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-917">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-917">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-918">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-918">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="61887-919">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 및 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.NegotiateStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-919">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="61887-920">확인 된 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-920">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="61887-921">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException> 요소나 <xref:System.Security.Authentication.InvalidCredentialException>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-921">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="61887-922">이 경우 다른 자격 증명을 사용 하 여 인증을 다시 시도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-922">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="61887-923">이 작업을 동기적으로 수행 하려면 사용 된 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-923">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-924">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-924">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-925">
            <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-925">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="61887-926">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-926">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-927">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-927">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException">
          <span data-ttu-id="61887-928">The authentication failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-928">The authentication failed.</span>
          </span>
          <span data-ttu-id="61887-929">You can use this object to retry the authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-929">You can use this object to retry the authentication.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-930">There is no pending authentication to complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-930">There is no pending authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="61887-931">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-931">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-932">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-932">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-933">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-933">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-934">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-934">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="61887-935">이 작업을 동기적으로 수행 하려면 사용 된 <xref:System.Net.Security.NegotiateStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-935">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="61887-936">사용자가 성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-936">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="61887-937">인증 중 하나를 호출 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>를 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-937">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-938">다음 코드 예제에서는 읽기 작업을 비동기 종료 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-938">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="61887-939">작업을 시작 하는 방법을 보여 주는 예제를 참조 하세요. <xref:System.Net.Security.NegotiateStream.BeginRead%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-939">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-940">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-940">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-941">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-941">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-942">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-942">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61887-943">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-943">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="61887-944">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-944">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-945">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-945">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-946">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-946">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="61887-947">사용자가 성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-947">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="61887-948">인증 중 하나를 호출 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>를 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-948">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="61887-949">이 작업을 동기적으로 수행 하려면 사용 된 <xref:System.Net.Security.NegotiateStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-949">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-950">다음 코드 예제에서는 비동기 쓰기 작업을 완료 하기 위해 호출 되는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-950">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="61887-951">작업을 시작 하는 방법을 보여 주는 예제를 참조 하세요. <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-951">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-952">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-952">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-953">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-953">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-954">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-954">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61887-955">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-955">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61887-956">Causes any buffered data to be written to the underlying device.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-956">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-957">이 메서드를 호출 <xref:System.IO.Stream.Flush%2A> 내부 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-957">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-958">다음 코드 예제에서는 스트림을 플러시하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-958">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-959">Gets a value that indicates how the server can use the client's credentials.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-959">Gets a value that indicates how the server can use the client's credentials.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-960">
            <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-960">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-961">이 메서드를 호출 하기 전에 성공적으로 인증 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-961">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="61887-962">클라이언트 중 하나를 호출 하 여 인증을 요청할 때 가장 수준을 지정 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-962">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="61887-963">지정 하지 않고 인증 하는 경우는 <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-963">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-964">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-964">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-965">Authentication failed or has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-965">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-966">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-966">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-967">
            <see langword="true" /> 인증이 성공 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-967">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-968">호출 하 여 클라이언트를 인증 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-968">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="61887-969">서버를 호출 하 여 인증 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-969">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-970">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-970">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-971">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-971">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-972">
            <see langword="true" /> 데이터는 네트워크를 통해 전송 되기 전에 암호화 및 해독 하는 경우에 도달한 경우에 원격 끝점 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-972">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-973">암호화 된 데이터의 개인 정보를 보호할 수 있습니다. 즉,는 전송 중에 데이터를 해독할 수 없으므로 제 3 자에서 확인 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-973">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-974">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-974">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-975">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-975">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-976">
            <see langword="true" /> 서버가 인증 되었으면 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-976">
              <see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-977">클라이언트 인증에 대 한 자격 증명을 제공 하도록 서버를 원하는 경우 클라이언트에서 상호 인증을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-977">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="61887-978">기본적으로 클라이언트는 상호 인증을 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-978">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="61887-979">협상 프로토콜은 클라이언트와 서버에서 지 원하는 보안 프로토콜에 따라 NTLM 이나 Kerberos를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-979">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="61887-980">NTLM 상호 인증을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-980">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-981">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-981">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-982">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-982">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-983">
            <see langword="true" /> 로컬 끝점이 인증 된 연결의 서버측으로 인증 되 면 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-983">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-984">이 속성을 반환 하는 경우 인증이 실패 하거나 발생 하지 않은, `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-984">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="61887-985">서버를 인증 하려면 호출을 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-985">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-986">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-986">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-987">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-987">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-988">
            <see langword="true" /> 데이터를 전송 하기 전에 서명 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-988">
              <see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-989">데이터의 무결성을 보호 하는 데 도움이 데이터 서명 즉, 수신자가 데이터 전송 중에 사용 하 여 훼손 되었는지 여부를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-989">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-990">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-990">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-991">Gets the length of the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-991">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-992">
            <see cref="T:System.Int64" /> 는 내부 스트림의 길이 지정 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-992">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-993">호출에서 반환 된 값을 반환 하는이 속성은 <xref:System.IO.Stream.Length%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-993">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="61887-994">내부 스트림을 검색할 수 없는 경우이 속성은 일반적으로 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-994">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="61887-995">기본 스트림의 런타임 형식을 throw 되는 예외의 런타임 형식이 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-995">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-996">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-996">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-997">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-997">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-998">Gets or sets the current position in the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-998">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-999">
            <see cref="T:System.Int64" /> 내부 스트림 내의 현재 위치를 지정 하 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-999">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-1000">호출에서 반환 된 값을 반환 하는이 속성은 <xref:System.IO.Stream.Position%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1000">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="61887-1001">내부 스트림을 검색할 수 없는 경우이 속성은 일반적으로 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1001">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="61887-1002">기본 스트림의 런타임 형식을 throw 되는 예외의 런타임 형식이 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1002">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-1003">Setting this property is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1003">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="61887-1004">\- or -  Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1004">\- or -  Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="61887-1005">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1005">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="61887-1006">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1006">A <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="61887-1007">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1007">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-1008">Reads data from this stream and stores it in the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1008">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-1009">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1009">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
          <span data-ttu-id="61887-1010">When there is no more data to be read, returns 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1010">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-1011">메서드는 최대 읽습니다 `count` 현재에서는 바이트 스트림 및에 저장 합니다 `buffer` 부터 `offset`합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1011">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="61887-1012">사용자가 성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1012">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="61887-1013">인증 중 하나를 호출 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>를 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-1013">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="61887-1014">이 작업을 비동기적으로 수행 하려면 사용 된 <xref:System.Net.Security.NegotiateStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-1014">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-1015">다음 코드 예제에서 읽는 방법을 보여 줍니다는 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1015">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61887-1016">The read operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1016">The read operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-1017">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1017">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-1018">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1018">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-1019">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1019">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-1020">
            <see cref="T:System.Int32" /> 읽기 작업이 실패할 때까지 걸리는 시간을 지정 하는 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1020">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-1021">호출에서 반환 된 값을 반환 하는이 속성은 <xref:System.IO.Stream.ReadTimeout%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1021">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="61887-1022">이 속성을 설정 하는 경우는 <xref:System.IO.Stream.ReadTimeout%2A> 내부 스트림의 값이 지정된 된 값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1022">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="61887-1023">내부 스트림이 경우는 <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> 밀리초에서 이며로 설정 된 <xref:System.Threading.Timeout.Infinite> 는 읽기 작업 시간 초과 되지 않습니다 있도록 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1023">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-1024">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1024">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-1025">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1025">Gets information about the identity of the remote party sharing this authenticated stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-1026">
            <see cref="T:System.Security.Principal.IIdentity" /> 원격 끝점의 id를 설명 하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1026">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-1027">클라이언트에서 액세스 하는 경우 반환을 <xref:System.Security.Principal.GenericIdentity> 주체 이름 SPN (서비스) 서버 및 사용 하는 인증 프로토콜을 포함 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1027">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="61887-1028">서버에서 액세스 하는 경우 반환을 <xref:System.Security.Principal.WindowsIdentity> 는 클라이언트에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1028">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="61887-1029">경우는 <xref:System.Security.Principal.WindowsIdentity> 는 사용할 수 없는 클라이언트 정보를 서버에 반환 됩니다는 <xref:System.Security.Principal.GenericIdentity>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1029">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-1030">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1030">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-1031">Authentication failed or has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1031">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="61887-1032">This value is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1032">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="61887-1033">This value is ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1033">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-1034">Throws <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1034">Throws <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61887-1035">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1035">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-1036">이 메서드를 호출 하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="61887-1036">Do not call this method.</span></span> <span data-ttu-id="61887-1037">이 상속 되지만 지원 되지 않습니다 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1037">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-1038">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1038">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61887-1039">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1039">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-1040">Sets the length of the underlying stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1040">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="61887-1041">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1041">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="61887-1042">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1042">An <see cref="T:System.Int32" /> containing the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="61887-1043">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1043">A <see cref="T:System.Int32" /> containing the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61887-1044">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1044">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-1045">암호화, 서명 또는 암호화 및 서명를 사용 하는 경우이 메서드 버퍼에서 데이터를 읽고, 암호화, 서명, 또는 암호화, 서명 및 기본 스트림을 사용 하 여 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1045">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="61887-1046">이 메서드를 호출 하는 경우 보안 없이 사용 중인 데이터 암호화 또는 서명 같은 서비스를 <xref:System.IO.Stream.Write%2A> 내부 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1046">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="61887-1047">이 메서드는 쓰기 작업이 완료 될 때 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1047">This method blocks while the write operation completes.</span></span> <span data-ttu-id="61887-1048">작업이 완료 될 때까지 차단 하지 않으려면, 사용 된 <xref:System.Net.Security.NegotiateStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-1048">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="61887-1049">사용자가 성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1049">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="61887-1050">인증 중 하나를 호출 합니다 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>를 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, 또는 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="61887-1050">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="61887-1051"><xref:System.Net.Security.NegotiateStream> 클래스가 여러 동시 쓰기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1051">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="61887-1052">같은 스트림에서 다른 쓰기 작업이 이미 실행 되는 동안 작업을 시작 하려는 경우는 <xref:System.NotSupportedException> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1052">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-1053">다음 코드 예제에서는 쓸은 <xref:System.Net.Security.NegotiateStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1053">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61887-1054">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1054">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="61887-1055">
            <paramref name="offset is less than 0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1055">
              <paramref name="offset is less than 0" />.</span>
          </span>
          <span data-ttu-id="61887-1056">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1056">\- or -  <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="61887-1057">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1057">\- or -  <paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="61887-1058">The write operation failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1058">The write operation failed.</span>
          </span>
          <span data-ttu-id="61887-1059">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1059">\- or -  Encryption is in use, but the data could not be encrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="61887-1060">There is already a write operation in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1060">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="61887-1061">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1061">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="61887-1062">Authentication has not occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1062">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61887-1063">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1063">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61887-1064">
            <see cref="T:System.Int32" /> 쓰기 작업이 실패할 때까지 걸리는 시간을 지정 하는 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="61887-1064">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61887-1065">호출에서 반환 된 값을 반환 하는이 속성은 <xref:System.IO.Stream.WriteTimeout%2A> 내부 스트림의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1065">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="61887-1066">집합 작업에 대 한 지정 된 값을 설정 합니다 <xref:System.IO.Stream.WriteTimeout%2A> 내부 스트림의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1066">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="61887-1067">기본 스트림이 <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> 밀리초에서 이며로 설정 되어 <xref:System.Threading.Timeout.Infinite> 기본적으로 쓰기 작업 시간이 초과 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1067">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61887-1068">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="61887-1068">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>