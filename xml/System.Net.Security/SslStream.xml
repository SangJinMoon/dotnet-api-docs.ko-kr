<Type Name="SslStream" FullName="System.Net.Security.SslStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff5471e2a0db730f16a6c1bc27b7f24b1e5c3b0c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39726371" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SslStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SslStream extends System.Net.Security.AuthenticatedStream implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslStream" />
  <TypeSignature Language="VB.NET" Value="Public Class SslStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type SslStream = class&#xA;    inherit AuthenticatedStream&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6d5f0-101">SSL(Secure Socket Layer) 보안 프로토콜을 사용하여 서버 및 필요에 따라 클라이언트를 인증하는 클라이언트-서버 통신에 사용되는 스트림을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6d5f0-101">Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-102">SSL 프로토콜 기밀성 및 무결성 검사를 사용 하 여 전송 된 메시지를 제공 하는 데 도움이 되는 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-102">SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-103">제공 하는 SSL 연결을 <xref:System.Net.Security.SslStream>커뮤니케이션 해야 할 경우에 사용 되는 클라이언트와 서버 간에 중요 한 정보, 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-103">An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server.</span></span> <span data-ttu-id="6d5f0-104">사용 하는 <xref:System.Net.Security.SslStream> 읽고 네트워크에서 전송 되는 동안 정보를 변조 하지 못하도록 하는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-104">Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.</span></span>  
  
 <span data-ttu-id="6d5f0-105"><xref:System.Net.Security.SslStream> 인스턴스를 만들 때 제공 하는 스트림을 사용 하 여 데이터를 전송 합니다 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-105">An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-106">지정 하는 옵션이 있는이 내부 스트림을 입력 하면 닫는 지 여부를 <xref:System.Net.Security.SslStream> 기본 스트림도 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-106">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream.</span></span> <span data-ttu-id="6d5f0-107">일반적으로 <xref:System.Net.Security.SslStream> 클래스를 사용 합니다 <xref:System.Net.Sockets.TcpClient> 및 <xref:System.Net.Sockets.TcpListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-107">Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes.</span></span> <span data-ttu-id="6d5f0-108">합니다 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드는 제공을 <xref:System.Net.Sockets.NetworkStream> 사용 하기 적합 한를 <xref:System.Net.Security.SslStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-108">The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 <span data-ttu-id="6d5f0-109">만든 후는 <xref:System.Net.Security.SslStream>, 서버 및 필요에 따라 클라이언트를 인증 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-109">After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated.</span></span> <span data-ttu-id="6d5f0-110">서버에서 X509를 제공 해야 인증서 id를 증명 하는 클라이언트 에서도 수행할 요청할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-110">The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so.</span></span> <span data-ttu-id="6d5f0-111">사용 하 여 정보를 전송 하기 전에 인증이 수행 되어야 합니다는 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-111">Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-112">클라이언트는 동기 버전을 사용 하 여 인증을 시작 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> 인증 완료 될 때까지 차단 하는 메서드 또는 비동기 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> 메서드 완료에 대 한 인증에 대 한 대기를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-112">Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete.</span></span> <span data-ttu-id="6d5f0-113">동기 버전을 사용 하 여 인증을 시작 하는 서버 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> 비동기적인지 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-113">Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="6d5f0-114">클라이언트 및 서버 인증을 시작 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-114">Both client and server must initiate the authentication.</span></span>  
  
 <span data-ttu-id="6d5f0-115">인증 보안 지원 공급자 (SSPI) 채널 공급자에 의해 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-115">The authentication is handled by the Security Support Provider (SSPI) channel provider.</span></span> <span data-ttu-id="6d5f0-116">클라이언트 지정 하 여 서버 인증서의 유효성 검사를 제어 하려면 선택할은 <xref:System.Net.Security.RemoteCertificateValidationCallback> 만들면 대리자는 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-116">The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-117">서버 유효성 검사를 제공 하 여 제어할 수도 있습니다는 <xref:System.Net.Security.RemoteCertificateValidationCallback> 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-117">The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate.</span></span> <span data-ttu-id="6d5f0-118">대리자가 참조 하는 메서드는 원격 상대방의 인증서 및 인증서의 유효성을 검사 하는 동안 발생 하는 SSPI 오류를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-118">The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate.</span></span> <span data-ttu-id="6d5f0-119">서버에서 대리자를 지정 하는 경우 서버에서 클라이언트 인증을 요청 하는 여부에 관계 없이 대리자의 메서드가 호출 되는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-119">Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication.</span></span> <span data-ttu-id="6d5f0-120">서버에서 클라이언트 인증, 요청 되지 않은 경우 서버의 대리자 메서드는 null 인증서 및 인증서 오류의 빈 배열을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-120">If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.</span></span>  
  
 <span data-ttu-id="6d5f0-121">서버에 클라이언트 인증이 필요한 경우 클라이언트 인증에 대 한 하나 이상의 인증서를 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-121">If the server requires client authentication, the client must specify one or more certificates for authentication.</span></span> <span data-ttu-id="6d5f0-122">클라이언트에 둘 이상의 인증서가 하는 경우 클라이언트 제공할 수는 <xref:System.Net.Security.LocalCertificateSelectionCallback> 서버에 대 한 올바른 인증서를 선택 하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-122">If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server.</span></span> <span data-ttu-id="6d5f0-123">클라이언트의 인증서는 현재 사용자의 "My" 인증서 저장소에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-123">The client's certificates must be located in the current user's "My" certificate store.</span></span> <span data-ttu-id="6d5f0-124">클라이언트 인증 인증서를 통해 지원 되지 않습니다는 <xref:System.Security.Authentication.SslProtocols.Ssl2> 프로토콜 (SSL 버전 2).</span><span class="sxs-lookup"><span data-stu-id="6d5f0-124">Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.</span></span>  
  
 <span data-ttu-id="6d5f0-125">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>, 및 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-125">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-126">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-126">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="6d5f0-127">SSL 핸드셰이크 라고도 하는 인증 프로세스가 성공 하면 서버 (및 필요에 따라 클라이언트)의 id가 설정 되 고 <xref:System.Net.Security.SslStream> 메시지를 교환 하는 클라이언트와 서버에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-127">When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages.</span></span> <span data-ttu-id="6d5f0-128">보내거나 정보를 수신 하기 전에 클라이언트 및 서버를 확인 해야 제공한 수준과 보안 서비스는 <xref:System.Net.Security.SslStream> 프로토콜, 알고리즘 및 선택한 장점을 무결성에 대 한 요구 사항을 충족 하는지 확인 하려면 및 기밀성입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-128">Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality.</span></span> <span data-ttu-id="6d5f0-129">현재 설정을 충분 하지 않으면, 스트림을 닫아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-129">If the current settings are not sufficient, the stream should be closed.</span></span> <span data-ttu-id="6d5f0-130">제공 하는 보안 서비스를 확인할 수 있습니다는 <xref:System.Net.Security.SslStream> 를 사용 하는 <xref:System.Net.Security.SslStream.IsEncrypted%2A> 및 <xref:System.Net.Security.SslStream.IsSigned%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-130">You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties.</span></span> <span data-ttu-id="6d5f0-131">다음 표에서 인증, 암호화 및 서명 하는 데이터에 사용 되는 암호화 설정을 보고 하는 요소를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-131">The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.</span></span>  
  
|<span data-ttu-id="6d5f0-132">요소</span><span class="sxs-lookup"><span data-stu-id="6d5f0-132">Element</span></span>|<span data-ttu-id="6d5f0-133">멤버</span><span class="sxs-lookup"><span data-stu-id="6d5f0-133">Members</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="6d5f0-134">서버 및 필요에 따라 클라이언트를 인증 하는 데 사용 하는 보안 프로토콜입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-134">The security protocol used to authenticate the server and, optionally, the client.</span></span>|<span data-ttu-id="6d5f0-135">합니다 <xref:System.Net.Security.SslStream.SslProtocol%2A> 속성과 연결 된 <xref:System.Security.Authentication.SslProtocols> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-135">The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration.</span></span>|  
|<span data-ttu-id="6d5f0-136">키 교환 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-136">The key exchange algorithm.</span></span>|<span data-ttu-id="6d5f0-137">합니다 <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> 속성과 연결 된 <xref:System.Security.Authentication.ExchangeAlgorithmType> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-137">The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="6d5f0-138">메시지 무결성 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-138">The message integrity algorithm.</span></span>|<span data-ttu-id="6d5f0-139">합니다 <xref:System.Net.Security.SslStream.HashAlgorithm%2A> 속성과 연결 된 <xref:System.Security.Authentication.HashAlgorithmType> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-139">The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="6d5f0-140">메시지 기밀성 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-140">The message confidentiality algorithm.</span></span>|<span data-ttu-id="6d5f0-141">합니다 <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> 속성과 연결 된 <xref:System.Security.Authentication.CipherAlgorithmType> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-141">The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="6d5f0-142">선택한 알고리즘의 장점입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-142">The strengths of the selected algorithms.</span></span>|<span data-ttu-id="6d5f0-143">합니다 <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, 및 <xref:System.Net.Security.SslStream.CipherStrength%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-143">The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties.</span></span>|  
  
 <span data-ttu-id="6d5f0-144">인증에 성공 하면 동기를 사용 하 여 데이터를 보낼 수 있습니다 <xref:System.Net.Security.SslStream.Write%2A> 비동기적인지 <xref:System.Net.Security.SslStream.BeginWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-144">After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="6d5f0-145">동기 버전을 사용 하 여 데이터를 받을 수 있습니다 <xref:System.Net.Security.SslStream.Read%2A> 비동기적인지 <xref:System.Net.Security.SslStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-145">You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.</span></span>  
  
 <span data-ttu-id="6d5f0-146">지정 하는 경우는 <xref:System.Net.Security.SslStream.%23ctor%2A> 내부 스트림을 열어 두어야에 완료 되 면 해당 스트림을 닫는 책임이 있습니다 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-146">If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d5f0-147">만들고 있는 응용 프로그램을 <xref:System.Net.Security.SslStream> 일반 사용자의 자격 증명을 사용 하 여 실행 개체, 응용 프로그램 권한을 명시적으로 부여 되어 사용자에 게 이렇게 하려면 로컬 컴퓨터 저장소에 설치 된 인증서에 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-147">If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
 <span data-ttu-id="6d5f0-148"><xref:System.Net.Security.SslStream> 가정 다른 시간 초과 <xref:System.IO.IOException> 내부 스트림의 경우 throw 되는 수는 심각한 예외로 간주 해당 호출자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-148"><xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller.</span></span> <span data-ttu-id="6d5f0-149">재사용을 <xref:System.Net.Security.SslStream> 인스턴스 후 시간 초과 가비지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-149">Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage.</span></span> <span data-ttu-id="6d5f0-150">응용 프로그램 해야 <xref:System.IO.Stream.Close%2A> 는 <xref:System.Net.Security.SslStream> 이러한 경우 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-150">An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.</span></span>  
  
 <span data-ttu-id="6d5f0-151">.NET Framework 4.6에는 안전 하지 않은 암호화 및 해시 알고리즘에 대 한 연결을 차단 하는 새로운 보안 기능이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-151">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="6d5f0-152">응용 프로그램 및 HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream 등 Api 통해 TLS/SSL을 사용 하 여.NET Framework 4.6을 대상으로 하는 기본적으로는 더 안전한 동작을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-152">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="6d5f0-153">개발자는 RC4 서비스를 지 원하는 기존 SSL3 서비스 또는 TLS와의 상호 운용성을 유지 하기 위해이 동작을 옵트아웃 하려면 원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-153">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="6d5f0-154">[이 문서에서는](https://support.microsoft.com/kb/3069494) 새 동작 사용 되지 않도록 코드를 수정 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-154">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
 <span data-ttu-id="6d5f0-155">TLS 버전을 지정 하지 않고 대신에 시스템 기본값으로 정의 된 TLS 버전을 사용 하는 SslStreams를 인증 하는 방법에 대 한 새 오버 로드를 추가 하는.NET Framework 4.7 [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-155">The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx).</span></span> <span data-ttu-id="6d5f0-156">앱에서 이러한 메서드를 사용 하 여 나중에 TLS 버전 모범 사례 변경 내용을 시간이 지남에 따라 기본값을 수정 하려면 수 하는 방법으로 다시 작성 하 고 앱을 다시 배포 하지 않고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-156">Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.</span></span>

 <span data-ttu-id="6d5f0-157">도 참조 하세요 [전송 계층 보안 (TLS).NET Framework를 사용 하 여 최선의](~/docs/framework/network-programming/tls.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-157">Also see [Transport Layer Security (TLS) best practices with the .NET Framework](~/docs/framework/network-programming/tls.md).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-158">다음 코드 예제를 만드는 방법을 보여는 <xref:System.Net.Sockets.TcpListener> 를 사용 하는 <xref:System.Net.Security.SslStream> 클라이언트와 통신 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-158">The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the <xref:System.Net.Security.SslStream> class to communicate with clients.</span></span>  
  
 [!code-cpp[NclSslServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#0)]
 [!code-csharp[NclSslServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#0)]  
  
 <span data-ttu-id="6d5f0-159">다음 코드 예제를 만드는 방법을 보여는 <xref:System.Net.Sockets.TcpClient> 를 사용 하는 <xref:System.Net.Security.SslStream> 서버와 통신 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-159">The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the <xref:System.Net.Security.SslStream> class to communicate with a server.</span></span>  
  
 [!code-cpp[NclSslClientSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#0)]
 [!code-csharp[NclSslClientSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Security.NegotiateStream" />
    <altmember cref="T:System.Net.Security.AuthenticatedStream" />
    <altmember cref="T:System.IO.IOException" />
    <altmember cref="T:System.IO.Stream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-160">
            <see cref="T:System.Net.Security.SslStream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-160">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-161">방지 하기 위해 합니다 <xref:System.Net.Security.SslStream> 에서 제공 하는 스트림을 닫는 사용 하 여는 <xref:System.Net.Security.SslStream.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-161">To prevent the <xref:System.Net.Security.SslStream> from closing the stream that you supply, use the <xref:System.Net.Security.SslStream.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="6d5f0-162">
            <see cref="T:System.IO.Stream" />에서 데이터를 보내고 받는 데 사용하는 <see cref="T:System.Net.Security.SslStream" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-162">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-163">지정된 <see cref="T:System.Net.Security.SslStream" />를 사용하여 <see cref="T:System.IO.Stream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-163">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-164">Encryptionpolicy에 대 한 구성 파일에서 값을 지정 하지 않으면 합니다 <xref:System.Net.Security.EncryptionPolicy> 기본값으로 <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> 에 대 한는 <xref:System.Net.Security.SslStream> 생성 된 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-164">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="6d5f0-165">암호화 정책으로 설정 된 경우 Null 암호화를 사용 하 여 반드시 <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-165">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-166">
            <paramref name="innerStream" />을 읽을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-166">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="6d5f0-167">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-167">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-168">
            <paramref name="innerStream" />에 쓸 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-168">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-169">
            <paramref name="innerStream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-169">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6d5f0-170">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-170">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-171">
            <paramref name="innerStream" />가 <see cref="F:System.IO.Stream.Null" />와 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-171">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="6d5f0-172">
            <see cref="T:System.IO.Stream" />에서 데이터를 보내고 받는 데 사용하는 <see cref="T:System.Net.Security.SslStream" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-172">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="6d5f0-173">데이터를 보내고 받기 위해 <see cref="T:System.IO.Stream" />에서 사용하는 <see cref="T:System.Net.Security.SslStream" /> 개체의 닫기 동작을 나타내는 부울 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-173">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="6d5f0-174">이 매개 변수는 내부 스트림이 계속 열려 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-174">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-175">지정된 <see cref="T:System.Net.Security.SslStream" />과 스트림 닫기 동작을 사용해서 <see cref="T:System.IO.Stream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-175">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-176">지정 하는 경우 `true` 에 대 한는 `leaveStreamOpen` 매개 변수를 닫는 합니다 <xref:System.Net.Security.SslStream> 영향을 주지 않습니다를 `innerStream` 스트림이 명시적으로 닫아야 `innerStream` 이상 필요할 때.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-176">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="6d5f0-177">Encryptionpolicy에 대 한 구성 파일에서 값을 지정 하지 않으면 합니다 <xref:System.Net.Security.EncryptionPolicy> 기본값으로 <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> 에 대 한는 <xref:System.Net.Security.SslStream> 생성 된 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-177">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="6d5f0-178">암호화 정책으로 설정 된 경우 Null 암호화를 사용 하 여 반드시 <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-178">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-179">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-179">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-180">
            <paramref name="innerStream" />을 읽을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-180">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="6d5f0-181">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-181">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-182">
            <paramref name="innerStream" />에 쓸 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-182">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-183">
            <paramref name="innerStream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-183">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6d5f0-184">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-184">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-185">
            <paramref name="innerStream" />가 <see cref="F:System.IO.Stream.Null" />와 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-185">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="6d5f0-186">
            <see cref="T:System.IO.Stream" />에서 데이터를 보내고 받는 데 사용하는 <see cref="T:System.Net.Security.SslStream" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-186">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="6d5f0-187">데이터를 보내고 받기 위해 <see cref="T:System.IO.Stream" />에서 사용하는 <see cref="T:System.Net.Security.SslStream" /> 개체의 닫기 동작을 나타내는 부울 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-187">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="6d5f0-188">이 매개 변수는 내부 스트림이 계속 열려 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-188">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="6d5f0-189">원격 대상에서 제공한 인증서의 유효성을 검사하는 <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-189">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-190">지정된 <see cref="T:System.Net.Security.SslStream" />, 스트림 닫기 동작 및 인증서 유효성 검사 대리자를 사용하여 <see cref="T:System.IO.Stream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-190">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior and certificate validation delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-191">지정 하는 경우 `true` 에 대 한는 `leaveStreamOpen` 매개 변수를 닫는 합니다 <xref:System.Net.Security.SslStream> 영향을 주지 않습니다를 `innerStream` 스트림이 명시적으로 닫아야 `innerStream` 이상 필요할 때.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-191">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="6d5f0-192">합니다 `userCertificateValidationCallback` 대리자의 `certificateErrors` 인수 채널 보안 지원 공급자 인터페이스 (SSPI)에서 반환한 Windows 오류 코드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-192">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="6d5f0-193">호출한 메서드의 반환 값은 `userCertificateValidationCallback` 대리자 인증의 성공 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-193">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="6d5f0-194">보안 프로토콜 및 암호화 알고리즘은 이미 경우 선택 된 `userCertificateValidationCallback` 대리자의 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-194">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="6d5f0-195">선택한 암호화 알고리즘 및 길이의 응용 프로그램에 충분 한지 확인 하려면 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-195">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="6d5f0-196">그렇지 않으면 메서드는 반환 해야 하는 경우 `false` 방지 하기 위해는 <xref:System.Net.Security.SslStream> 만들어지지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-196">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="6d5f0-197">Encryptionpolicy에 대 한 구성 파일에서 값을 지정 하지 않으면 합니다 <xref:System.Net.Security.EncryptionPolicy> 기본값으로 <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> 에 대 한는 <xref:System.Net.Security.SslStream> 생성 된 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-197">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="6d5f0-198">암호화 정책으로 설정 된 경우 Null 암호화를 사용 하 여 반드시 <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-198">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d5f0-199">프레임 워크를 만들 때 SSL 세션을 캐시 하 고 가능한 경우 새 요청에 대 한 캐시 된 세션을 사용 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-199">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="6d5f0-200">SSL 세션을 다시 사용 하려고 시도할 때, 프레임 워크의 첫 번째 요소를 사용 하는 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (있는 경우 하나) 하는 경우에 익명 세션을 다시 사용 하려고 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-200">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d5f0-201">클라이언트 인증서는 SSL 버전 2 프로토콜에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-201">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-202">다음 코드 예제는 <xref:System.Net.Security.SslStream> 인증의 클라이언트 부분을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-202">The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.</span></span>  
  
 [!code-cpp[NclSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]
 [!code-csharp[NclSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-203">
            <paramref name="innerStream" />을 읽을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-203">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="6d5f0-204">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-204">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-205">
            <paramref name="innerStream" />에 쓸 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-205">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-206">
            <paramref name="innerStream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-206">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6d5f0-207">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-207">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-208">
            <paramref name="innerStream" />가 <see cref="F:System.IO.Stream.Null" />와 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-208">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback, userCertificateSelectionCallback As LocalCertificateSelectionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="6d5f0-209">
            <see cref="T:System.IO.Stream" />에서 데이터를 보내고 받는 데 사용하는 <see cref="T:System.Net.Security.SslStream" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-209">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="6d5f0-210">데이터를 보내고 받기 위해 <see cref="T:System.IO.Stream" />에서 사용하는 <see cref="T:System.Net.Security.SslStream" /> 개체의 닫기 동작을 나타내는 부울 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-210">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="6d5f0-211">이 매개 변수는 내부 스트림이 계속 열려 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-211">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="6d5f0-212">원격 대상에서 제공한 인증서의 유효성을 검사하는 <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-212">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <param name="userCertificateSelectionCallback">
          <span data-ttu-id="6d5f0-213">인증에 사용할 인증서를 선택하는 <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-213">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-214">지정된 <see cref="T:System.Net.Security.SslStream" />, 스트림 닫기 동작, 인증서 유효성 검사 대리자 및 인증서 선택 대리자를 사용하여 <see cref="T:System.IO.Stream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-214">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior, certificate validation delegate and certificate selection delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-215">지정 하는 경우 `true` 에 대 한는 `leaveStreamOpen` 매개 변수를 닫는 합니다 <xref:System.Net.Security.SslStream> 영향을 주지 않습니다를 `innerStream` 스트림이 명시적으로 닫아야 `innerStream` 이상 필요할 때.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-215">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="6d5f0-216">합니다 `userCertificateValidationCallback` 대리자의 `certificateErrors` 인수 채널 보안 지원 공급자 인터페이스 (SSPI)에서 반환한 Windows 오류 코드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-216">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="6d5f0-217">호출한 메서드의 반환 값은 `userCertificateValidationCallback` 대리자 인증의 성공 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-217">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="6d5f0-218">보안 프로토콜 및 암호화 알고리즘은 이미 경우 선택 된 `userCertificateValidationCallback` 대리자의 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-218">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="6d5f0-219">선택한 암호화 알고리즘 및 길이의 응용 프로그램에 충분 한지 확인 하려면 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-219">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="6d5f0-220">그렇지 않으면 메서드는 반환 해야 하는 경우 `false` 방지 하기 위해는 <xref:System.Net.Security.SslStream> 만들어지지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-220">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="6d5f0-221">`userCertificateSelectionCallback` 대리자는 응용 프로그램 인증서가 여러 개 및 인증서를 동적으로 선택 해야 하는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-221">The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate.</span></span> <span data-ttu-id="6d5f0-222">"MY" 저장소에서 인증서는 대리자가 호출 되는 메서드로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-222">Certificates in the "MY" store are passed to the method invoked by the delegate.</span></span>  
  
 <span data-ttu-id="6d5f0-223">Encryptionpolicy에 대 한 구성 파일에서 값을 지정 하지 않으면 합니다 <xref:System.Net.Security.EncryptionPolicy> 기본값으로 <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> 에 대 한는 <xref:System.Net.Security.SslStream> 생성 된 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-223">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="6d5f0-224">암호화 정책으로 설정 된 경우 Null 암호화를 사용 하 여 반드시 <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-224">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d5f0-225">프레임 워크를 만들 때 SSL 세션을 캐시 하 고 가능한 경우 새 요청에 대 한 캐시 된 세션을 사용 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-225">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="6d5f0-226">프레임 워크 P:System.Net.HttpWebRequest.ClientCertificates (있는 경우), 첫 번째 요소를 사용 하 여 SSL 세션을 다시 사용 하려고 시도할 때, 또는 빈 P:System.Net.HttpWebRequest.ClientCertificates 경우 익명는 세션을 다시 사용 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-226">When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-227">다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-227">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="6d5f0-228">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Net.Security.SslStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-228">This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 [!code-cpp[NclSslClientAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#6)]
 [!code-csharp[NclSslClientAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-229">
            <paramref name="innerStream" />을 읽을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-229">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="6d5f0-230">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-230">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-231">
            <paramref name="innerStream" />에 쓸 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-231">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-232">
            <paramref name="innerStream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-232">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6d5f0-233">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-233">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-234">
            <paramref name="innerStream" />가 <see cref="F:System.IO.Stream.Null" />와 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-234">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, valuetype System.Net.Security.EncryptionPolicy encryptionPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback, System::Net::Security::EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback * System.Net.Security.EncryptionPolicy -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback, encryptionPolicy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoLimitation("encryptionPolicy is ignored")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
        <Parameter Name="encryptionPolicy" Type="System.Net.Security.EncryptionPolicy" />
      </Parameters>
      <Docs>
        <param name="innerStream">
          <span data-ttu-id="6d5f0-235">
            <see cref="T:System.IO.Stream" />에서 데이터를 보내고 받는 데 사용하는 <see cref="T:System.Net.Security.SslStream" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-235">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
        </param>
        <param name="leaveInnerStreamOpen">
          <span data-ttu-id="6d5f0-236">데이터를 보내고 받기 위해 <see cref="T:System.IO.Stream" />에서 사용하는 <see cref="T:System.Net.Security.SslStream" /> 개체의 닫기 동작을 나타내는 부울 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-236">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span>
          </span>
          <span data-ttu-id="6d5f0-237">이 매개 변수는 내부 스트림이 계속 열려 있는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-237">This parameter indicates if the inner stream is left open.</span>
          </span>
        </param>
        <param name="userCertificateValidationCallback">
          <span data-ttu-id="6d5f0-238">원격 대상에서 제공한 인증서의 유효성을 검사하는 <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-238">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span>
          </span>
        </param>
        <param name="userCertificateSelectionCallback">
          <span data-ttu-id="6d5f0-239">인증에 사용할 인증서를 선택하는 <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-239">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span>
          </span>
        </param>
        <param name="encryptionPolicy">
          <span data-ttu-id="6d5f0-240">사용할 <see cref="T:System.Net.Security.EncryptionPolicy" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-240">The <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-241">지정된 <see cref="T:System.Net.Security.SslStream" />을 사용하여 <see cref="T:System.IO.Stream" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-241">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /></span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-242">Null 암호화를 사용 하 여가 필요 합니다 `encryptionPolicy` 매개 변수는 설정 <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-242">The use of the Null cipher is required when the `encryptionPolicy` parameter is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-243">
            <paramref name="innerStream" />을 읽을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-243">
              <paramref name="innerStream" /> is not readable.</span>
          </span>
          <span data-ttu-id="6d5f0-244">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-244">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-245">
            <paramref name="innerStream" />에 쓸 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-245">
              <paramref name="innerStream" /> is not writable.</span>
          </span>
          <span data-ttu-id="6d5f0-246">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-246">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-247">
            <paramref name="encryptionPolicy" />가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-247">
              <paramref name="encryptionPolicy" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-248">
            <paramref name="innerStream" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-248">
              <paramref name="innerStream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6d5f0-249">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-249">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-250">
            <paramref name="innerStream" />가 <see cref="F:System.IO.Stream.Null" />와 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-250">
              <paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-251">클라이언트-서버 연결의 클라이언트측을 인증합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-251">Authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string -&gt; unit&#xA;override this.AuthenticateAsClient : string -&gt; unit" Usage="sslStream.AuthenticateAsClient targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="6d5f0-252">이 <see cref="T:System.Net.Security.SslStream" />을 공유하는 서버의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-252">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-253">클라이언트-서버 연결에서 서버 및 필요에 따라 클라이언트를 인증하기 위해 클라이언트에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-253">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="6d5f0-254"> 클라이언트 인증서 인증에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-254"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="6d5f0-255">인증 하는 동안 인증서 해지 목록 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-255">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="6d5f0-256">지정 된 값 `targetHost` 서버 인증서의 이름과 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-256">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="6d5f0-257">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.SslStream.IsEncrypted%2A> 및 <xref:System.Net.Security.SslStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.SslStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-257">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-258">확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-258">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6d5f0-259">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-259">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-260">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-260">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-261">
            <paramref name="targetHost" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-261">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-262">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-262">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-263">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-263">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-264">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-264">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-265">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 서버 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-265">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-266">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-266">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-267">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-267">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-268">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-268">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="6d5f0-269">이 <see cref="T:System.Net.Security.SslStream" />을 공유할 서버의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-269">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="6d5f0-270">클라이언트 자격 증명이 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-270">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-271">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-271">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-272">클라이언트-서버 연결에서 서버 및 필요에 따라 클라이언트를 인증하기 위해 클라이언트에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-272">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
          <span data-ttu-id="6d5f0-273">인증 프로세스에서는 지정된 인증서 컬렉션과 시스템 기본 SSL 프로토콜을 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-273">The authentication process uses the specified certificate collection, and the system default SSL protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-274">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.SslStream.IsEncrypted%2A> 및 <xref:System.Net.Security.SslStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.SslStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-274">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-275">확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-275">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6d5f0-276">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-276">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-277">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-277">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d5f0-278">클라이언트 인증서는 SSL 버전 2 프로토콜에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-278">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="6d5f0-279">이 <see cref="T:System.Net.Security.SslStream" />을 공유할 서버의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-279">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="6d5f0-280">클라이언트 자격 증명이 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-280">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="6d5f0-281">인증에 사용되는 프로토콜을 나타내는 <see cref="T:System.Security.Authentication.SslProtocols" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-281">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-282">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-282">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-283">클라이언트-서버 연결에서 서버 및 필요에 따라 클라이언트를 인증하기 위해 클라이언트에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-283">Called by clients to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
          <span data-ttu-id="6d5f0-284">인증 프로세스에는 지정된 인증서 컬렉션과 SSL 프로토콜이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-284">The authentication process uses the specified certificate collection and SSL protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-285">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.SslStream.IsEncrypted%2A> 및 <xref:System.Net.Security.SslStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.SslStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-285">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-286">확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-286">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6d5f0-287">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-287">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-288">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-288">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d5f0-289">클라이언트 인증서는 SSL 버전 2 프로토콜에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-289">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-290">클라이언트-서버 연결의 클라이언트측을 비동기 작업으로 인증합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-290">Authenticate the client side of a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="6d5f0-291">이 <see cref="T:System.Net.Security.SslStream" />을 공유하는 서버의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-291">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-292">클라이언트-서버 연결에서 비동기 작업으로 서버 및 필요에 따라 클라이언트를 인증하기 위해 클라이언트에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-292">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-293">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-293">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6d5f0-294">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-294">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="6d5f0-295"> 클라이언트 인증서 인증에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-295"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="6d5f0-296">인증 하는 동안 인증서 해지 목록 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-296">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="6d5f0-297">지정 된 값 `targetHost` 서버 인증서의 이름과 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-297">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="6d5f0-298">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.SslStream.IsEncrypted%2A> 및 <xref:System.Net.Security.SslStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.SslStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-298">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-299">확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-299">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6d5f0-300">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-300">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-301">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-301">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-302">
            <paramref name="targetHost" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-302">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-303">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-303">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-304">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-304">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-305">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-305">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-306">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 서버 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-306">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-307">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-307">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-308">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-308">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-309">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-309">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.Net.Security.SslClientAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::Security::SslClientAuthenticationOptions ^ sslClientAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsClientAsync : System.Net.Security.SslClientAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (sslClientAuthenticationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslClientAuthenticationOptions" Type="System.Net.Security.SslClientAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslClientAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="6d5f0-310">이 <see cref="T:System.Net.Security.SslStream" />을 공유할 서버의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-310">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="6d5f0-311">클라이언트 자격 증명이 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-311">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-312">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-312">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-313">클라이언트-서버 연결에서 비동기 작업으로 서버 및 필요에 따라 클라이언트를 인증하기 위해 클라이언트에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-313">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="6d5f0-314">인증 프로세스에서는 지정된 인증서 컬렉션과 시스템 기본 SSL 프로토콜을 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-314">The authentication process uses the specified certificate collection and the system default SSL protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-315">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-315">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-316">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.SslStream.IsEncrypted%2A> 및 <xref:System.Net.Security.SslStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.SslStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-316">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-317">확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-317">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6d5f0-318">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-318">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-319">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-319">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d5f0-320">클라이언트 인증서는 SSL 버전 2 프로토콜에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-320">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="6d5f0-321">이 <see cref="T:System.Net.Security.SslStream" />을 공유할 서버의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-321">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="6d5f0-322">클라이언트 자격 증명이 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-322">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="6d5f0-323">인증에 사용되는 프로토콜을 나타내는 <see cref="T:System.Security.Authentication.SslProtocols" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-323">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-324">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-324">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-325">클라이언트-서버 연결에서 비동기 작업으로 서버 및 필요에 따라 클라이언트를 인증하기 위해 클라이언트에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-325">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
          <span data-ttu-id="6d5f0-326">인증 프로세스에는 지정된 인증서 컬렉션과 SSL 프로토콜이 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-326">The authentication process uses the specified certificate collection and SSL protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-327">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-327">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6d5f0-328">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-328">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-329">인증이 성공 하면, 확인 해야 합니다는 <xref:System.Net.Security.SslStream.IsEncrypted%2A> 및 <xref:System.Net.Security.SslStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.SslStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-329">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-330">확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-330">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6d5f0-331">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-331">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-332">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-332">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d5f0-333">클라이언트 인증서는 SSL 버전 2 프로토콜에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-333">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-334">클라이언트-서버 연결에서 서버를 인증하고 선택적으로 클라이언트를 인증하기 위해 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-334">Called by servers to authenticate the server and optionally the client in a client-server connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit" Usage="sslStream.AuthenticateAsServer serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="6d5f0-335">서버를 인증하는 데 사용되는 인증서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-335">The certificate used to authenticate the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-336">클라이언트-서버 연결에서 지정된 인증서를 사용하여 서버를 인증하고 선택적으로 클라이언트를 인증하기 위해 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-336">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="6d5f0-337"> 인증 하는 동안 인증서 해지 목록 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-337"> The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="6d5f0-338">클라이언트 인증용 인증서를 제공할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-338">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="6d5f0-339">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-339">This method blocks until the operation completes.</span></span> <span data-ttu-id="6d5f0-340">작업이 완료 될 때까지 차단 사용 하지 않으려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-340">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6d5f0-341">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-341">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-342">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-342">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-343">
            <paramref name="serverCertificate" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-343">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-344">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-344">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-345">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-345">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-346">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-346">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-347">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 클라이언트 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-347">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-348">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-348">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-349">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-349">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-350">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-350">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6d5f0-351">Windows 95, Windows 98 또는 Windows Millennium Edition에서는 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 메서드가 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-351">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="6d5f0-352">서버를 인증하는 데 사용되는 X509 인증서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-352">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="6d5f0-353">인증을 위해 클라이언트에 인증서가 요청되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-353">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="6d5f0-354">이것은 요청일 뿐입니다. 인증서가 제공되지 않아도 서버는 계속 연결 요청을 수락합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-354">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-355">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-355">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-356">지정된 인증서, 요구 사항 및 시스템 기본 보안 프로토콜을 사용하여 클라이언트-서버 연결에서 서버 및 필요에 따라 클라이언트를 인증하기 위해 서버에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-356">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the sytem default security protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-357">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-357">This method blocks until the operation completes.</span></span> <span data-ttu-id="6d5f0-358">작업이 완료 될 때까지 차단 사용 하지 않으려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-358">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6d5f0-359">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-359">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-360">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-360">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-361">
            <paramref name="serverCertificate" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-361">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-362">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-362">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-363">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-363">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-364">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-364">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-365">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 클라이언트 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-365">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-366">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-366">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-367">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-367">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-368">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-368">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6d5f0-369">Windows 95, Windows 98 또는 Windows Millennium Edition에서는 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 메서드가 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-369">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="6d5f0-370">서버를 인증하는 데 사용되는 X509 인증서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-370">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="6d5f0-371">인증을 위해 클라이언트에 인증서가 요청되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-371">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="6d5f0-372">이것은 요청일 뿐입니다. 인증서가 제공되지 않아도 서버는 계속 연결 요청을 수락합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-372">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="6d5f0-373">인증에 사용되는 프로토콜을 나타내는 <see cref="T:System.Security.Authentication.SslProtocols" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-373">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-374">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-374">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-375">지정된 인증서, 요구 사항 및 보안 프로토콜을 사용하여 클라이언트-서버 연결에서 서버 및 필요에 따라 클라이언트를 인증하기 위해 서버에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-375">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-376">이 메서드는 작업이 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-376">This method blocks until the operation completes.</span></span> <span data-ttu-id="6d5f0-377">작업이 완료 될 때까지 차단 사용 하지 않으려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-377">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6d5f0-378">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-378">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-379">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-379">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-380">
            <paramref name="serverCertificate" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-380">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-381">
            <paramref name="enabledSslProtocols" />은 유효한 <see cref="T:System.Security.Authentication.SslProtocols" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-381">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-382">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-382">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-383">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-383">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-384">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-384">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-385">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 클라이언트 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-385">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-386">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-386">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-387">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-387">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-388">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-388">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6d5f0-389">Windows 95, Windows 98 또는 Windows Millennium Edition에서는 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> 메서드가 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-389">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-390">클라이언트-서버 연결에서 서버를 인증하고 선택적으로 클라이언트를 인증하는 비동기 작업으로 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-390">Called by servers to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="6d5f0-391">서버를 인증하는 데 사용되는 인증서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-391">The certificate used to authenticate the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-392">클라이언트-서버 연결에서 지정된 인증서를 사용하여 서버를 인증하고 선택적으로 클라이언트를 인증하기 위해 비동기 작업으로 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-392">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-393">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-393">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6d5f0-394">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-394">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-395">이 메서드를 사용 하 여 인증 <xref:System.Security.Authentication.SslProtocols.Default>합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-395">This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="6d5f0-396">인증 하는 동안 인증서 해지 목록 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-396">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="6d5f0-397">클라이언트 인증용 인증서를 제공할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-397">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="6d5f0-398">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-398">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-399">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-399">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-400">
            <paramref name="serverCertificate" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-400">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-401">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-401">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-402">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-402">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-403">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-403">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-404">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 클라이언트 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-404">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-405">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-405">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-406">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-406">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-407">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-407">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6d5f0-408">Windows 95, Windows 98 또는 Windows Millennium Edition에서는 <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> 메서드가 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-408">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.SslServerAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::Security::SslServerAuthenticationOptions ^ sslServerAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsServerAsync : System.Net.Security.SslServerAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (sslServerAuthenticationOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslServerAuthenticationOptions" Type="System.Net.Security.SslServerAuthenticationOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sslServerAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="6d5f0-409">서버를 인증하는 데 사용되는 X509 인증서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-409">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="6d5f0-410">인증을 위해 클라이언트에 인증서가 요청되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-410">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="6d5f0-411">이것은 요청일 뿐입니다. 인증서가 제공되지 않아도 서버는 계속 연결 요청을 수락합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-411">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-412">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-412">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-413">지정된 인증서, 요구 사항 및 보안 프로토콜을 사용하여 클라이언트-서버 연결에서 서버 및 필요에 따라 클라이언트를 비동기 작업으로 인증하기 위해 서버에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-413">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-414">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-414">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-415">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-415">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-416">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-416">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="6d5f0-417">서버를 인증하는 데 사용되는 X509 인증서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-417">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="6d5f0-418">인증을 위해 클라이언트에 인증서가 요청되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-418">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="6d5f0-419">이것은 요청일 뿐입니다. 인증서가 제공되지 않아도 서버는 계속 연결 요청을 수락합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-419">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="6d5f0-420">인증에 사용되는 프로토콜을 나타내는 <see cref="T:System.Security.Authentication.SslProtocols" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-420">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-421">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-421">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-422">지정된 인증서, 요구 사항 및 보안 프로토콜을 사용하여 클라이언트-서버 연결에서 서버 및 필요에 따라 클라이언트를 비동기 작업으로 인증하기 위해 서버에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-422">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-423">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-423">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="6d5f0-424">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-424">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-425">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-425">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-426">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-426">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-427">클라이언트-서버 연결의 클라이언트측을 인증하는 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-427">Begins an operation to authenticate the client side of a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-428">인증 진행 중인 동안이 메서드의 오버 로드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-428">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="6d5f0-429">인증이 완료 되기를 기다리는 동안 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-429">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="6d5f0-430">이 <see cref="T:System.Net.Security.SslStream" />을 공유하는 서버의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-430">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6d5f0-431">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-431">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6d5f0-432">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-432">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="6d5f0-433">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-433">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-434">서버를 인증하고 선택적으로 클라이언트를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-434">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-435">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-435">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="6d5f0-436"> 클라이언트 인증서 인증에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-436"> No client certificates are used in the authentication.</span></span> <span data-ttu-id="6d5f0-437">인증 하는 동안 인증서 해지 목록 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-437">The certificate revocation list is not checked during authentication.</span></span>  
  
 <span data-ttu-id="6d5f0-438">지정 된 값 `targetHost` 서버 인증서의 이름과 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-438">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="6d5f0-439">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-439">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="6d5f0-440">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-440">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="6d5f0-441">작업이 완료 될 때이 메서드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-441">This method does not block while the operation completes.</span></span> <span data-ttu-id="6d5f0-442">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-442">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6d5f0-443">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6d5f0-443">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6d5f0-444">표시 되 면을 <xref:System.Security.Authentication.AuthenticationException>이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-444">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-445">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-445">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-446">
            <paramref name="targetHost" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-446">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-447">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-447">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-448">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-448">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-449">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-449">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-450">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 서버 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-450">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-451">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-451">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-452">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-452">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-453">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-453">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="6d5f0-454">이 <see cref="T:System.Net.Security.SslStream" />을 공유하는 서버의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-454">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="6d5f0-455">클라이언트 인증서를 포함하는 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-455">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-456">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-456">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6d5f0-457">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-457">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6d5f0-458">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-458">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="6d5f0-459">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-459">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-460">지정된 인증서 및 시스템 기본 보안 프로토콜을 사용하여 서버 및 필요에 따라 클라이언트를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-460">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-461">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-461">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-462">지정 된 값 `targetHost` 서버 인증서의 이름과 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-462">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="6d5f0-463">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-463">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="6d5f0-464">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-464">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="6d5f0-465">작업이 완료 될 때이 메서드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-465">This method does not block while the operation completes.</span></span> <span data-ttu-id="6d5f0-466">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-466">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6d5f0-467">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6d5f0-467">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6d5f0-468">표시 되 면을 <xref:System.Security.Authentication.AuthenticationException>이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-468">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-469">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-469">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d5f0-470">클라이언트 인증서는 SSL 버전 2 프로토콜에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-470">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-471">
            <paramref name="targetHost" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-471">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-472">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-472">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-473">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-473">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-474">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-474">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-475">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 서버 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-475">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-476">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-476">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-477">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-477">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-478">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-478">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetHost">
          <span data-ttu-id="6d5f0-479">이 <see cref="T:System.Net.Security.SslStream" />을 공유하는 서버의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-479">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </param>
        <param name="clientCertificates">
          <span data-ttu-id="6d5f0-480">클라이언트 인증서를 포함하는 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-480">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="6d5f0-481">인증에 사용되는 프로토콜을 나타내는 <see cref="T:System.Security.Authentication.SslProtocols" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-481">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-482">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-482">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6d5f0-483">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-483">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6d5f0-484">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-484">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="6d5f0-485">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-485">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-486">지정된 인증서 및 보안 프로토콜을 사용하여 서버를 인증하고 선택적으로 클라이언트를 인증하는 비동기 작업을 시작하기 위해 클라이언트에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-486">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-487">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-487">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-488">지정 된 값 `targetHost` 서버 인증서의 이름과 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-488">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="6d5f0-489">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-489">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="6d5f0-490">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-490">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="6d5f0-491">작업이 완료 될 때이 메서드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-491">This method does not block while the operation completes.</span></span> <span data-ttu-id="6d5f0-492">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-492">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6d5f0-493">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6d5f0-493">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6d5f0-494">표시 되 면을 <xref:System.Security.Authentication.AuthenticationException>이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-494">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-495">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-495">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d5f0-496">클라이언트 인증서는 SSL 버전 2 프로토콜에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-496">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-497">
            <paramref name="targetHost" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-497">
              <paramref name="targetHost" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-498">
            <paramref name="enabledSslProtocols" />은 유효한 <see cref="T:System.Security.Authentication.SslProtocols" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-498">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-499">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-499">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-500">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-500">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-501">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-501">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-502">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 서버 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-502">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-503">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-503">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-504">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-504">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-505">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-505">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-506">클라이언트-서버 연결의 서버 측 인증을 처리하는 비동기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-506">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-507">인증 진행 중인 동안이 메서드의 오버 로드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-507">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="6d5f0-508">인증이 완료 되기를 기다리는 동안 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-508">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="6d5f0-509">서버를 인증하는 데 사용되는 X509 인증서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-509">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6d5f0-510">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-510">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6d5f0-511">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-511">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="6d5f0-512">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-512">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-513">클라이언트-서버 연결에서 클라이언트를 인증하고 선택적으로 서버를 인증하는 비동기 작업을 시작하기 위해 서버에서 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-513">Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-514">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-514">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]<span data-ttu-id="6d5f0-515"> 인증 하는 동안 인증서 해지 목록 확인 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-515"> The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="6d5f0-516">클라이언트 인증용 인증서를 제공할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-516">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="6d5f0-517">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-517">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="6d5f0-518">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-518">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="6d5f0-519">작업이 완료 될 때이 메서드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-519">This method does not block while the operation completes.</span></span> <span data-ttu-id="6d5f0-520">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-520">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6d5f0-521">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6d5f0-521">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6d5f0-522">표시 되 면을 <xref:System.Security.Authentication.AuthenticationException>이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-522">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-523">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-523">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-524">
            <paramref name="serverCertificate" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-524">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-525">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-525">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-526">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-526">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-527">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-527">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-528">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 클라이언트 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-528">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-529">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-529">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-530">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-530">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-531">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-531">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6d5f0-532">Windows 95, Windows 98 또는 Windows Millennium Edition에서는 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 메서드가 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-532">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="6d5f0-533">서버를 인증하는 데 사용되는 X509 인증서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-533">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="6d5f0-534">인증을 위해 클라이언트에 인증서가 요청되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-534">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="6d5f0-535">이것은 요청일 뿐입니다. 인증서가 제공되지 않아도 서버는 계속 연결 요청을 수락합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-535">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-536">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-536">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6d5f0-537">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-537">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6d5f0-538">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-538">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="6d5f0-539">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-539">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-540">지정된 인증서, 요구 사항 및 시스템 기본 보안 프로토콜을 사용하여 서버 및 필요에 따라 클라이언트를 인증하는 비동기 작업을 시작하기 위해 서버에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-540">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-541">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-541">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-542">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-542">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="6d5f0-543">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-543">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="6d5f0-544">작업이 완료 될 때이 메서드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-544">This method does not block while the operation completes.</span></span> <span data-ttu-id="6d5f0-545">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-545">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6d5f0-546">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6d5f0-546">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6d5f0-547">표시 되 면을 <xref:System.Security.Authentication.AuthenticationException>이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-547">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-548">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-548">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-549">
            <paramref name="serverCertificate" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-549">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-550">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-550">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-551">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-551">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-552">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-552">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-553">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 서버 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-553">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-554">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-554">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-555">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-555">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-556">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-556">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6d5f0-557">Windows 95, Windows 98 또는 Windows Millennium Edition에서는 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 메서드가 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-557">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serverCertificate">
          <span data-ttu-id="6d5f0-558">서버를 인증하는 데 사용되는 X509 인증서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-558">The X509Certificate used to authenticate the server.</span>
          </span>
        </param>
        <param name="clientCertificateRequired">
          <span data-ttu-id="6d5f0-559">인증을 위해 클라이언트에 인증서가 요청되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-559">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span>
          </span>
          <span data-ttu-id="6d5f0-560">이것은 요청일 뿐입니다. 인증서가 제공되지 않아도 서버는 계속 연결 요청을 수락합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-560">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span>
          </span>
        </param>
        <param name="enabledSslProtocols">
          <span data-ttu-id="6d5f0-561">인증에 사용되는 프로토콜을 나타내는 <see cref="T:System.Security.Authentication.SslProtocols" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-561">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </param>
        <param name="checkCertificateRevocation">
          <span data-ttu-id="6d5f0-562">인증 동안 인증서 해지 목록이 확인되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-562">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6d5f0-563">인증이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-563">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6d5f0-564">작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-564">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="6d5f0-565">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-565">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-566">지정된 인증서, 요구 사항 및 보안 프로토콜을 사용하여 서버 및 필요에 따라 클라이언트를 인증하는 비동기 작업을 시작하기 위해 서버에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-566">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-567">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-567">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="6d5f0-568">호출 하 여 비동기 인증 작업을 완료 해야 합니다 <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-568">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="6d5f0-569">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-569">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="6d5f0-570">작업이 완료 될 때이 메서드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-570">This method does not block while the operation completes.</span></span> <span data-ttu-id="6d5f0-571">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-571">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="6d5f0-572">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6d5f0-572">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6d5f0-573">표시 되 면을 <xref:System.Security.Authentication.AuthenticationException>이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-573">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-574">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-574">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-575">
            <paramref name="serverCertificate" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-575">
              <paramref name="serverCertificate" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-576">
            <paramref name="enabledSslProtocols" />은 유효한 <see cref="T:System.Security.Authentication.SslProtocols" /> 값이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-576">
              <paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-577">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-577">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-578">인증이 이미 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-578">Authentication has already occurred.</span>
          </span>
          <span data-ttu-id="6d5f0-579">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-579">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-580">이 <see cref="T:System.Net.Security.SslStream" />을 사용하는 서버 인증이 이전에 시도된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-580">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span>
          </span>
          <span data-ttu-id="6d5f0-581">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-581">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-582">인증이 이미 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-582">Authentication is already in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-583">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-583">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="6d5f0-584">Windows 95, Windows 98 또는 Windows Millennium Edition에서는 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 메서드가 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-584">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6d5f0-585">스트림에서 읽은 바이트를 받는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-585">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6d5f0-586">이 스트림에서 읽은 데이터를 저장하기 시작하는 <c>버퍼</c> 내의 위치(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-586">The zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6d5f0-587">스트림에서 읽을 최대 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-587">The maximum number of bytes to read from the stream.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6d5f0-588">읽기 작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-588">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6d5f0-589">읽기 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-589">A user-defined object that contains information about the read operation.</span>
          </span>
          <span data-ttu-id="6d5f0-590">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-590">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-591">스트림에서 데이터를 읽어 지정된 배열에 저장하는 비동기 읽기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-591">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-592">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-592">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-593">서명 및 암호화를 사용 하는 경우 읽기 작업 내부 스트림에서 데이터를 읽고, 데이터의 무결성을 검사 및/또는 암호를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-593">If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it.</span></span> <span data-ttu-id="6d5f0-594">호출 하 여 비동기 읽기 작업을 완료 해야 합니다는 <xref:System.Net.Security.SslStream.EndRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-594">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method.</span></span> <span data-ttu-id="6d5f0-595">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-595">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="6d5f0-596">작업이 완료 될 때이 메서드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-596">This method does not block while the operation completes.</span></span> <span data-ttu-id="6d5f0-597">작업이 완료 될 때까지 차단 합니다 <xref:System.Net.Security.SslStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-597">To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="6d5f0-598">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="6d5f0-598">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="6d5f0-599"><xref:System.Net.Security.SslStream> 클래스가 여러 동시 읽기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-599">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="6d5f0-600">사용자가 성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-600">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6d5f0-601">인증 중 하나를 호출 하 여 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-601">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-602">다음 코드 예제에서는 비동기 읽기 작업을 시작 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-602">The following code example demonstrates starting an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#8)]
 [!code-csharp[NclSslClientAsync#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#8)]  
  
 [!code-cpp[NclSslClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#4)]
 [!code-csharp[NclSslClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#4)]  
  
 <span data-ttu-id="6d5f0-603">다음 메서드는 읽기가 완료 될 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-603">The following method is called when the read completes.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-604">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-604">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-605">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-605">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="6d5f0-606">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" />의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-606">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="6d5f0-607">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-607">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-608">
            <paramref name="offset" /> + 카운트 &gt; <paramref name="buffer" />의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-608">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6d5f0-609">읽기 작업이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-609">The read operation failed.</span>
          </span>
          <span data-ttu-id="6d5f0-610">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-610">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-611">암호화를 사용 중이지만 데이터를 해독할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-611">Encryption is in use, but the data could not be decrypted.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6d5f0-612">읽기 작업을 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-612">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-613">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-613">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-614">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-614">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6d5f0-615">스트림에 쓸 바이트를 제공하는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-615">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6d5f0-616">스트림에 쓸 바이트를 읽기 시작하는 <c>버퍼</c> 내의 위치(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-616">The zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6d5f0-617">
            <c>버퍼</c>에서 읽을 바이트 수를 지정하는 <see cref="T:System.Int32" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-617">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="asyncCallback">
          <span data-ttu-id="6d5f0-618">쓰기 작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-618">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span>
          </span>
        </param>
        <param name="asyncState">
          <span data-ttu-id="6d5f0-619">쓰기 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-619">A user-defined object that contains information about the write operation.</span>
          </span>
          <span data-ttu-id="6d5f0-620">이 개체는 작업이 완료되면 <c>asyncCallback</c> 대리자에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-620">This object is passed to the <c>asyncCallback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-621">지정된 버퍼에서 스트림에 <see cref="T:System.Byte" />를 쓰는 비동기 쓰기 작업을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-621">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-622">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-622">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6d5f0-623">다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-623">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslServerAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#5)]
 [!code-csharp[NclSslServerAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-624">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-624">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-625">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-625">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="6d5f0-626">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" />의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-626">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="6d5f0-627">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-627">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-628">
            <paramref name="offset" /> + 카운트 &gt; <paramref name="buffer" />의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-628">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6d5f0-629">쓰기 작업이 실패했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-629">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6d5f0-630">쓰기 작업을 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-630">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-631">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-631">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-632">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-632">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.SslStream.CanRead" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-633">내부 스트림을 읽을 수 있는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-633">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-634">인증이 수행되고 내부 스트림을 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-634">
              <see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-635">이 속성에 호출에서 반환 된 값을 반환 합니다 인증이 성공적으로 수행 되 면 <xref:System.IO.Stream.CanRead%2A> 내부 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-635">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="6d5f0-636">인스턴스를 만들 때 기본 스트림을 지정 된 <xref:System.Net.Security.SslStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-636">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-637">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-637">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.SslStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-638">내부 스트림을 검색할 수 있는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-638">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-639">이 속성은 항상 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-639">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-640">위치를 설정 하지 마십시오는 <xref:System.Net.Security.SslStream> 개체 또는 해당 기본 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-640">Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream.</span></span>  
  
 <span data-ttu-id="6d5f0-641">인스턴스를 만들 때 기본 스트림을 지정 된 <xref:System.Net.Security.SslStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-641">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.CanSeek" />
        <altmember cref="P:System.Net.Security.SslStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.SslStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-642">내부 스트림에 제한 시간을 설정할 수 있는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-642">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-643">내부 스트림이 제한 시간을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-643">
              <see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-644">이 속성에는 호출에서 반환 된 값을 반환 합니다 <xref:System.IO.Stream.CanTimeout%2A> 내부 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-644">This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="6d5f0-645">인스턴스를 만들 때 기본 스트림을 지정 된 <xref:System.Net.Security.SslStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-645">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-646">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-646">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.SslStream.CanWrite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-647">내부 스트림에 쓸 수 있는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-647">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-648">인증이 수행되고 내부 스트림에 쓸 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-648">
              <see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-649">이 속성에 호출에서 반환 된 값을 반환 합니다 인증이 성공적으로 수행 되 면 <xref:System.IO.Stream.CanWrite%2A> 내부 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-649">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="6d5f0-650">인스턴스를 만들 때 기본 스트림을 지정 된 <xref:System.Net.Security.SslStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-650">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-651">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-651">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertRevocationStatus">
      <MemberSignature Language="C#" Value="public virtual bool CheckCertRevocationStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertRevocationStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CheckCertRevocationStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckCertRevocationStatus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertRevocationStatus : bool" Usage="System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CheckCertRevocationStatus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-652">인증서 유효성 검사 프로세스를 진행하는 동안 인증서 해지 목록을 확인하는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-652">Gets a <see cref="T:System.Boolean" /> value that indicates whether the certificate revocation list is checked during the certificate validation process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-653">인증서 해지 목록을 검사하면 <see langword="true" />이고, 검사하지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-653">
              <see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-654">인증서 해지 목록 발급자가 해지 된 인증서를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-654">The certificate revocation list contains certificates that have been revoked by the issuer.</span></span> <span data-ttu-id="6d5f0-655">이 목록을 확인 성능에 영향을 줍니다 하지만 응용 프로그램 보안을 향상 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-655">Checking the list negatively impacts performance but improves application security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-656">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-656">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
 [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.CipherAlgorithmType CipherAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherAlgorithm As CipherAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::CipherAlgorithmType CipherAlgorithm { System::Security::Authentication::CipherAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherAlgorithm : System.Security.Authentication.CipherAlgorithmType" Usage="System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.CipherAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-657">이 <see cref="T:System.Net.Security.SslStream" />에서 사용하는 일괄 암호화 알고리즘을 식별하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-657">Gets a value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-658">
            <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-658">A <see cref="T:System.Security.Authentication.CipherAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-659">값 <xref:System.Security.Authentication.CipherAlgorithmType.Null> 에 필요 합니다 <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> 속성 때를 <xref:System.Net.Security.EncryptionPolicy.NoEncryption> 열거형 값을 생성 하는 <xref:System.Net.Security.SslStream> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-659">A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance.</span></span>  
  
 [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)]<span data-ttu-id="6d5f0-660"> 및 [!INCLUDE[winxp](~/includes/winxp-md.md)] 지원 하지 않습니다는 <xref:System.Security.Authentication.CipherAlgorithmType.Null> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-660"> and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value.</span></span> <span data-ttu-id="6d5f0-661">경우에도 합니다 <xref:System.Security.Authentication.CipherAlgorithmType.Null> 값 생성을 사용 하는 <xref:System.Net.Security.SslStream> 인스턴스를 <xref:System.Net.Security.EncryptionPolicy> 속성이 <xref:System.Security.Authentication.CipherAlgorithmType.None>.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-661">So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>.</span></span> <span data-ttu-id="6d5f0-662"><xref:System.Security.Authentication.CipherAlgorithmType.Null> 값은 Windows Vista 이상에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-662">The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-663">다음 코드 예제에서는 지정 된 스트림에 대 한 암호화 설정을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-663">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-664">인증 프로세스 완료 또는 인증 프로세스 실패 전에 <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> 속성에 액세스한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-664">The <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CipherStrength">
      <MemberSignature Language="C#" Value="public virtual int CipherStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CipherStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CipherStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherStrength : int" Usage="System.Net.Security.SslStream.CipherStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-665">이 <see cref="T:System.Net.Security.SslStream" />에서 사용하는 암호화 알고리즘의 강도를 식별하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-665">Gets a value that identifies the strength of the cipher algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-666">알고리즘의 강도를 비트 단위로 지정하는 <see cref="T:System.Int32" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-666">An <see cref="T:System.Int32" /> value that specifies the strength of the algorithm, in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-667">인증이 발생 될 때까지이 속성의 값이 0으로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-667">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="6d5f0-668">이 속성은 다음 값 중 하나가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-668">This property returns one of the following values:</span></span>  
  
-   <span data-ttu-id="6d5f0-669">0</span><span class="sxs-lookup"><span data-stu-id="6d5f0-669">0</span></span>  
  
-   <span data-ttu-id="6d5f0-670">40</span><span class="sxs-lookup"><span data-stu-id="6d5f0-670">40</span></span>  
  
-   <span data-ttu-id="6d5f0-671">56</span><span class="sxs-lookup"><span data-stu-id="6d5f0-671">56</span></span>  
  
-   <span data-ttu-id="6d5f0-672">80</span><span class="sxs-lookup"><span data-stu-id="6d5f0-672">80</span></span>  
  
-   <span data-ttu-id="6d5f0-673">128</span><span class="sxs-lookup"><span data-stu-id="6d5f0-673">128</span></span>  
  
-   <span data-ttu-id="6d5f0-674">168</span><span class="sxs-lookup"><span data-stu-id="6d5f0-674">168</span></span>  
  
-   <span data-ttu-id="6d5f0-675">192</span><span class="sxs-lookup"><span data-stu-id="6d5f0-675">192</span></span>  
  
-   <span data-ttu-id="6d5f0-676">256</span><span class="sxs-lookup"><span data-stu-id="6d5f0-676">256</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-677">다음 코드 예제에서는 지정 된 스트림에 대 한 암호화 설정을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-677">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sslStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="6d5f0-678">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-678">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-679">
            <see cref="T:System.Net.Security.SslStream" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-679">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.SslStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-680">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-680">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="6d5f0-681">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-681">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="6d5f0-682"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-682"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="6d5f0-683">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.Net.Security.SslStream> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-683">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references.</span></span> <span data-ttu-id="6d5f0-684">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-684">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6d5f0-685">
            <para>
              <see langword="Dispose" /> 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-685">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="6d5f0-686">
            <see cref="T:System.IAsyncResult" />를 호출했을 때 반환되는 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-686">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-687">이전에 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />를 호출하여 시작한 보류 상태의 비동기 서버 인증 작업을 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-687">Ends a pending asynchronous server authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-688">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-688">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="6d5f0-689">때 인증에 성공 하면 확인 해야 합니다는 <xref:System.Net.Security.SslStream.IsEncrypted%2A> 및 <xref:System.Net.Security.SslStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.SslStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-689">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-690">확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-690">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6d5f0-691">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-691">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-692">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-692">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="6d5f0-693">이 작업을 동기적으로 수행 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-693">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-694">
            <paramref name="asyncResult" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-694">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-695">
            <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />를 호출했지만 <paramref name="asyncResult" />가 만들어지지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-695">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-696">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-696">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-697">완료할 보류 상태의 서버 인증이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-697">There is no pending server authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="6d5f0-698">
            <see cref="T:System.IAsyncResult" />를 호출했을 때 반환되는 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-698">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-699">이전에 <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />를 호출하여 시작한 보류 상태의 비동기 클라이언트 인증 작업을 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-699">Ends a pending asynchronous client authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-700">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-700">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="6d5f0-701">때 인증에 성공 하면 확인 해야 합니다는 <xref:System.Net.Security.SslStream.IsEncrypted%2A> 및 <xref:System.Net.Security.SslStream.IsSigned%2A> 에서 사용 하는 보안 서비스를 결정 하는 속성을 <xref:System.Net.Security.SslStream>입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-701">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="6d5f0-702">확인 된 <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> 상호 인증이 발생 했는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-702">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="6d5f0-703">수신 인증에 실패 하는 경우는 <xref:System.Security.Authentication.AuthenticationException>,이 <xref:System.Net.Security.SslStream> 더 이상 사용할 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-703">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="6d5f0-704">이 개체를 닫기 및 가비지 수집기에서 수집할 수 있도록 모든 참조가 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-704">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="6d5f0-705">이 작업을 동기적으로 수행 하려면 중 하나를 사용 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-705">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-706">
            <paramref name="asyncResult" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-706">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-707">
            <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />를 호출했지만 <paramref name="asyncResult" />가 만들어지지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-707">
              <paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException">
          <span data-ttu-id="6d5f0-708">인증이 실패했으며 이 개체가 사용할 수 없는 상태로 유지되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-708">The authentication failed and left this object in an unusable state.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-709">완료할 보류 상태의 클라이언트 인증이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-709">There is no pending client authentication to complete.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="sslStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndRead(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="6d5f0-710">
            <see cref="T:System.IAsyncResult" />를 호출했을 때 반환되는 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-710">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-711">이전에 <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />를 호출하여 시작한 비동기 읽기 작업을 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-711">Ends an asynchronous read operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-712">내부 스트림에서 읽은 바이트 수를 지정하는 <see cref="T:System.Int32" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-712">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-713">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-713">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="6d5f0-714">이 작업을 동기적으로 수행 하려면 사용 된 <xref:System.Net.Security.SslStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-714">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="6d5f0-715">사용자가 성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-715">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6d5f0-716">인증 중 하나를 호출 하 여 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-716">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-717">다음 코드 예제에서는 읽기 작업을 비동기 종료 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-717">The following code example demonstrates ending an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-718">
            <paramref name="asyncResult" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-718">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-719">
            <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />를 호출했지만 <paramref name="asyncResult" />가 만들어지지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-719">
              <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-720">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-720">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6d5f0-721">읽기 작업이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-721">The read operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="sslStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndWrite(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="6d5f0-722">
            <see cref="T:System.IAsyncResult" />를 호출했을 때 반환되는 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-722">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-723">이전에 <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />를 호출하여 시작한 비동기 쓰기 작업을 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-723">Ends an asynchronous write operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-724">작업이 완료 되지 않은 경우이 메서드는 완료 될 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-724">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="6d5f0-725">사용자가 성공적으로 인증 될 때까지 응용 프로그램에서이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-725">An application cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6d5f0-726">인증 중 하나를 호출 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>를 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-726">To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="6d5f0-727">이 작업을 동기적으로 수행 하려면 사용 된 <xref:System.Net.Security.SslStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-727">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-728">다음 코드 예제에서는 비동기 쓰기 작업을 종료 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-728">The following code example demonstrates ending an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclSslServerAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#4)]
 [!code-csharp[NclSslServerAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-729">
            <paramref name="asyncResult" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-729">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-730">
            <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />를 호출했지만 <paramref name="asyncResult" />가 만들어지지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-730">
              <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-731">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-731">Authentication has not occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6d5f0-732">쓰기 작업이 실패했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-732">The write operation failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="sslStream.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-733">버퍼링된 모든 데이터를 내부 장치에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-733">Causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-734">이 메서드를 호출 <xref:System.IO.Stream.Flush%2A> 내부 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-734">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-735">다음 코드 예제에서는이 메서드를 호출 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-735">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslClientSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#5)]
 [!code-csharp[NclSslClientSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.HashAlgorithmType HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashAlgorithm As HashAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::HashAlgorithmType HashAlgorithm { System::Security::Authentication::HashAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Authentication.HashAlgorithmType" Usage="System.Net.Security.SslStream.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.HashAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-736">MAC(메시지 인증 코드)를 생성하는 데 사용되는 알고리즘을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-736">Gets the algorithm used for generating message authentication codes (MACs).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-737">
            <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-737">A <see cref="T:System.Security.Authentication.HashAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-738">메시지 인증 알고리즘에는 메시지 해시 및 변조 및 위조를 검색 하는 데 사용 하는 서명을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-738">Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-739">다음 코드 예제에서는 지정 된 스트림에 대 한 암호화 설정을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-739">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-740">인증 프로세스 완료 또는 인증 프로세스 실패 전에 <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> 속성에 액세스한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-740">The <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashStrength">
      <MemberSignature Language="C#" Value="public virtual int HashStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HashStrength : int" Usage="System.Net.Security.SslStream.HashStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-741">이 인스턴스에서 사용하는 해시 알고리즘의 강도를 식별하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-741">Gets a value that identifies the strength of the hash algorithm used by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-742">
            <see cref="T:System.Int32" /> 알고리즘의 강도를 비트 단위로 지정하는 <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-742">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.HashAlgorithmType" /> algorithm, in bits.</span>
          </span>
          <span data-ttu-id="6d5f0-743">유효한 값은 128 또는 160입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-743">Valid values are 128 or 160.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-744">인증이 발생 될 때까지이 속성의 값이 0으로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-744">The value of this property is zero until the authentication occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-745">다음 코드 예제에서는 지정 된 스트림에 대 한 암호화 설정을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-745">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.SslStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-746">인증이 성공했는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-746">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-747">인증이 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-747">
              <see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-748">호출 하 여 클라이언트를 인증 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-748">Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="6d5f0-749">서버를 호출 하 여 인증 합니다 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-749">Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-750">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-750">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.SslStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsEncrypted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-751">이 <see cref="T:System.Boolean" />에서 데이터 암호화를 사용하는지 여부를 나타내는 <see cref="T:System.Net.Security.SslStream" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-751">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.SslStream" /> uses data encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-752">네트워크를 통해 전송하기 전에 데이터를 암호화하고 원격 엔드포인트에 도달한 후 해독하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-752">
              <see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-753">암호화 된 데이터의 개인 정보를 보호할 수 있습니다, 즉 방지할 수 있습니다는 데이터를 전송 하는 동안 해독할 수 없으므로 제 3 자에서.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-753">Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-754">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-754">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsMutuallyAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-755">서버와 클라이언트 모두 인증되었는지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-755">Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-756">서버가 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-756">
              <see langword="true" /> if the server has been authenticated; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-757">서버 인증 인증서를 제공 하기 위해 클라이언트를 받으려는 경우 서버에서 상호 인증을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-757">Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-758">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-758">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
        <altmember cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.SslStream.IsServer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsServer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-759">이 <see cref="T:System.Boolean" />에서 사용하는 연결의 로컬측이 서버로 인증되었는지 여부를 나타내는 <see cref="T:System.Net.Security.SslStream" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-759">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.SslStream" /> was authenticated as the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-760">로컬 엔드포인트가 인증된 연결의 서버 측으로 인증되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-760">
              <see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-761">이 속성을 반환 하는 경우 인증이 실패 하거나 발생 하지 않은, `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-761">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="6d5f0-762">서버를 인증 하려면 호출을 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-762">To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-763">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-763">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.SslStream.IsSigned" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsSigned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-764">이 스트림을 사용하여 보내는 데이터에 서명할지 여부를 나타내는 <see cref="T:System.Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-764">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-765">데이터를 전송하기 전에 서명하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-765">
              <see langword="true" /> if the data is signed before being transmitted; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-766">데이터의 무결성을 보호 하는 데 도움이 됩니다 서명 데이터를 namely 수 있도록 받는 데이터 전송 중에 사용 하 여 훼손 되었는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-766">Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-767">다음 코드 예제에서는이 속성의 값을 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-767">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
 [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As ExchangeAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::ExchangeAlgorithmType KeyExchangeAlgorithm { System::Security::Authentication::ExchangeAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : System.Security.Authentication.ExchangeAlgorithmType" Usage="System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExchangeAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-768">이 <see cref="T:System.Net.Security.SslStream" />에서 사용하는 키 교환 알고리즘을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-768">Gets the key exchange algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-769">
            <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-769">An <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-770">이 속성의 값은 <xref:System.Security.Authentication.ExchangeAlgorithmType.None> 인증이 발생 될 때까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-770">The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs.</span></span>  
  
 <span data-ttu-id="6d5f0-771">공유 키를 생성 하는 데 사용 되는 정보를 보호 하는 키 교환 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-771">The key exchange algorithm protects information used to generate shared keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-772">다음 코드 예제에서는 지정 된 스트림에 대 한 암호화 설정을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-772">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeStrength">
      <MemberSignature Language="C#" Value="public virtual int KeyExchangeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyExchangeStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyExchangeStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeStrength : int" Usage="System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-773">이 인스턴스에서 사용하는 키 교환 알고리즘의 강도를 식별하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-773">Gets a value that identifies the strength of the key exchange algorithm used by this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-774">
            <see cref="T:System.Int32" /> 알고리즘의 강도를 비트 단위로 지정하는 <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-774">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> algorithm, in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-775">인증이 발생 될 때까지이 속성의 값이 0으로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-775">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="6d5f0-776">일반적인 시나리오에서이 속성의 값은 다음 중 하나:</span><span class="sxs-lookup"><span data-stu-id="6d5f0-776">In common scenarios, the value of this property is one of the following:</span></span>  
  
-   <span data-ttu-id="6d5f0-777">512</span><span class="sxs-lookup"><span data-stu-id="6d5f0-777">512</span></span>  
  
-   <span data-ttu-id="6d5f0-778">768</span><span class="sxs-lookup"><span data-stu-id="6d5f0-778">768</span></span>  
  
-   <span data-ttu-id="6d5f0-779">1024</span><span class="sxs-lookup"><span data-stu-id="6d5f0-779">1024</span></span>  
  
-   <span data-ttu-id="6d5f0-780">2048</span><span class="sxs-lookup"><span data-stu-id="6d5f0-780">2048</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-781">다음 코드 예제에서는 지정 된 스트림에 대 한 암호화 설정을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-781">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.SslStream.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-782">내부 스트림의 길이를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-782">Gets the length of the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-783">
            <see cref="T:System.Int64" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-783">A <see cref="T:System.Int64" />.</span>
          </span>
          <span data-ttu-id="6d5f0-784">기본 스트림의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-784">The length of the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-785">이 속성에는 호출에서 반환 된 값을 반환 합니다 <xref:System.IO.Stream.Length%2A> 내부 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-785">This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream.</span></span> <span data-ttu-id="6d5f0-786">내부 스트림을 검색할 수 없는 경우이 메서드는 일반적으로 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-786">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="6d5f0-787">기본 스트림의 런타임 형식을 throw 되는 예외의 런타임 형식이 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-787">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6d5f0-788">내부 스트림이 <see cref="T:System.Net.Sockets.NetworkStream" />일 때 이 속성의 값을 가져올 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-788">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LocalCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.LocalCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ LocalCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.LocalCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.LocalCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-789">로컬 엔드포인트를 인증하는 데 사용되는 인증서를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-789">Gets the certificate used to authenticate the local endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-790">인증을 위해 제공한 인증서를 나타내는 X509Certificate 개체이거나, 인증서를 제공하지 않은 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-790">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6d5f0-791">다음 코드 예제에서는이 속성에서 반환한 인증서를 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-791">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-792">인증이 실패하거나 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-792">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NegotiatedApplicationProtocol">
      <MemberSignature Language="C#" Value="public System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegotiatedApplicationProtocol As SslApplicationProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::SslApplicationProtocol NegotiatedApplicationProtocol { System::Net::Security::SslApplicationProtocol get(); };" />
      <MemberSignature Language="F#" Value="member this.NegotiatedApplicationProtocol : System.Net.Security.SslApplicationProtocol" Usage="System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslApplicationProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.SslStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-793">내부 스트림 내의 현재 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-793">Gets or sets the current position in the underlying stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-794">
            <see cref="T:System.Int64" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-794">A <see cref="T:System.Int64" />.</span>
          </span>
          <span data-ttu-id="6d5f0-795">기본 스트림 내의 현재 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-795">The current position in the underlying stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-796">이 속성에는 호출에서 반환 된 값을 반환 합니다 <xref:System.IO.Stream.Position%2A> 내부 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-796">This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream.</span></span> <span data-ttu-id="6d5f0-797">내부 스트림을 검색할 수 없는 경우이 메서드는 일반적으로 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-797">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="6d5f0-798">기본 스트림의 런타임 형식을 throw 되는 예외의 런타임 형식이 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-798">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6d5f0-799">이 속성 설정이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-799">Setting this property is not supported.</span>
          </span>
          <span data-ttu-id="6d5f0-800">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-800">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-801">내부 스트림이 <see cref="T:System.Net.Sockets.NetworkStream" />일 때 이 속성의 값을 가져올 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-801">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="sslStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6d5f0-802">이 스트림에서 읽은 바이트를 받는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-802">A <see cref="T:System.Byte" /> array that receives the bytes read from this stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6d5f0-803">이 스트림에서 읽은 데이터를 저장하기 시작하는 <c>버퍼</c> 내의 위치(0부터 시작)가 포함된 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-803">A <see cref="T:System.Int32" /> that contains the zero-based location in <c>buffer</c> at which to begin storing the data read from this stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6d5f0-804">이 스트림에서 읽을 최대 바이트 수가 포함된 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-804">A <see cref="T:System.Int32" /> that contains the maximum number of bytes to read from this stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-805">이 스트림에서 데이터를 읽어 지정된 배열에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-805">Reads data from this stream and stores it in the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-806">읽은 바이트 수를 지정하는 <see cref="T:System.Int32" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-806">A <see cref="T:System.Int32" /> value that specifies the number of bytes read.</span>
          </span>
          <span data-ttu-id="6d5f0-807">읽을 데이터가 더 이상 없으면 0이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-807">When there is no more data to be read, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-808">메서드는 최대 읽습니다 `count` 스트림에서 바이트에 저장 합니다 `buffer` 부터 `offset`합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-808">The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="6d5f0-809">여러 동시 읽기 작업을 수행할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-809">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="6d5f0-810">사용자가 성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-810">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6d5f0-811">인증 중 하나를 호출 하 여 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-811">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="6d5f0-812">이 작업을 비동기적으로 수행 하려면 사용 된 <xref:System.Net.Security.SslStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-812">To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-813">다음 코드 예제에서 읽는 방법을 보여 줍니다는 <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-813">The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslClientSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#6)]
 [!code-csharp[NclSslClientSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-814">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-814">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-815">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-815">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="6d5f0-816">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" />의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-816">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="6d5f0-817">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-817">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-818">
            <paramref name="offset" /> + 카운트 &gt; <paramref name="buffer" />의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-818">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6d5f0-819">읽기 작업이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-819">The read operation failed.</span>
          </span>
          <span data-ttu-id="6d5f0-820">내부 예외가 있는 경우, 이를 검토하여 오류의 원인을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-820">Check the inner exception, if present to determine the cause of the failure.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6d5f0-821">읽기 작업을 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-821">There is already a read operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-822">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-822">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-823">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-823">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.SslStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.ReadTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-824">읽기 작업에서 데이터 대기를 차단하는 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-824">Gets or sets the amount of time a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-825">동기적 읽기 작업이 실패할 때까지 걸리는 시간을 지정하는 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-825">A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous read operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-826">이 속성에는 호출에서 반환 된 값을 반환 합니다 <xref:System.IO.Stream.ReadTimeout%2A> 내부 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-826">This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="6d5f0-827">이 속성을 설정 하는 경우는 <xref:System.IO.Stream.ReadTimeout%2A> 내부 스트림의 값이 지정된 된 값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-827">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="6d5f0-828">내부 스트림이 경우는 <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> 밀리초에서 이며로 설정 된 <xref:System.Threading.Timeout.Infinite> 작업 시간 초과 되지 않도록 읽기는 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-828">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-829">다음 코드 예제에서는이 속성의 값을 설정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-829">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.RemoteCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ RemoteCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.RemoteCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.RemoteCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-830">원격 엔드포인트를 인증하는 데 사용되는 인증서를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-830">Gets the certificate used to authenticate the remote endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-831">인증을 위해 제공한 인증서를 나타내는 X509Certificate 개체이거나, 인증서를 제공하지 않은 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-831">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6d5f0-832">다음 코드 예제에서는이 속성에서 반환한 인증서를 표시 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-832">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
 [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-833">인증이 실패하거나 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-833">Authentication failed or has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="sslStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="6d5f0-834">이 값은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-834">This value is ignored.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="6d5f0-835">이 값은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-835">This value is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-836">
            <see cref="T:System.NotSupportedException" />를 throw합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-836">Throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-837">항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-837">Always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-838">이 메서드를 호출 하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-838">Do not call this method.</span></span> <span data-ttu-id="6d5f0-839">이 상속 되지만 지원 되지 않습니다는 <xref:System.Net.Security.SslStream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-839">It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6d5f0-840">
            <see cref="T:System.Net.Security.SslStream" /> 개체에서 검색을 지원하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-840">Seeking is not supported by <see cref="T:System.Net.Security.SslStream" /> objects.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="sslStream.SetLength value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.SetLength(System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6d5f0-841">스트림의 길이를 지정하는 <see cref="T:System.Int64" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-841">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-842">내부 스트림의 길이를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-842">Sets the length of the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-843">이 메서드를 호출 <xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType> 된 경우 기본 스트림의이 <xref:System.Net.Security.SslStream> 만들어진 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-843">This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ShutdownAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ShutdownAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ShutdownAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShutdownAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ShutdownAsync();" />
      <MemberSignature Language="F#" Value="abstract member ShutdownAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ShutdownAsync : unit -&gt; System.Threading.Tasks.Task" Usage="sslStream.ShutdownAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-844">이 SslStream을 종료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-844">Shuts down this SslStream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6d5f0-845">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-845">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocol">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.SslProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SslProtocol As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::SslProtocols SslProtocol { System::Security::Authentication::SslProtocols get(); };" />
      <MemberSignature Language="F#" Value="member this.SslProtocol : System.Security.Authentication.SslProtocols" Usage="System.Net.Security.SslStream.SslProtocol" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.SslProtocol</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-846">이 연결을 인증하는 데 사용된 보안 프로토콜을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-846">Gets a value that indicates the security protocol used to authenticate this connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-847">인증에 사용되는 프로토콜을 나타내는 <see cref="T:System.Security.Authentication.SslProtocols" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-847">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-848">지원 되는 보안 프로토콜을 지정 된 경우는 <xref:System.Net.Security.SslStream> 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-848">The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created.</span></span> <span data-ttu-id="6d5f0-849">인스턴스를 사용 하 여 만든 보안 프로토콜이 없습니다.이 생성자에 전달 된, <xref:System.Security.Authentication.SslProtocols.Default>합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-849">If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="6d5f0-850">인증에 사용 된 실제 프로토콜은 클라이언트와 서버에서 지 원하는 프로토콜에 따라 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-850">The actual protocol used for authentication is selected based on the protocols supported by the client and server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-851">다음 예제에서는 지정 된 스트림의 보안 속성을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-851">The following example displays the security properties of the specified stream.</span></span>  
  
 [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
 [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.Security.SslStream.TransportContext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.TransportContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-852">확장 보호를 사용하는 인증에 사용되는 <see cref="T:System.Net.TransportContext" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-852">Gets the <see cref="T:System.Net.TransportContext" /> used for authentication using extended protection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-853">확장 보호에 사용되는 CBT(채널 바인딩 토큰)를 포함하는 <see cref="T:System.Net.TransportContext" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-853">The <see cref="T:System.Net.TransportContext" /> object that contains the channel binding token (CBT) used for extended protection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-854">이 스트림에 데이터를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-854">Writes data to this stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] -&gt; unit" Usage="sslStream.Write buffer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6d5f0-855">스트림에 쓸 바이트를 제공하는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-855">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-856">지정된 데이터를 이 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-856">Writes the specified data to this stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-857">이 메서드는 작업이 완료 될 때 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-857">This method blocks while the operation completes.</span></span> <span data-ttu-id="6d5f0-858">작업이 완료 될 때까지 차단 하지 않으려면, 사용 된 <xref:System.Net.Security.SslStream.BeginWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-858">To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="6d5f0-859">사용자가 성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-859">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6d5f0-860">인증 중 하나를 호출 하 여 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-860">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="6d5f0-861"><xref:System.Net.Security.SslStream> 클래스가 여러 동시 쓰기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-861">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-862">다음 코드 예제에는 인증에 쓰는 방법을 보여 줍니다. <xref:System.Net.Security.SslStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-862">The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-863">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-863">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6d5f0-864">쓰기 작업이 실패했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-864">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6d5f0-865">쓰기 작업을 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-865">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-866">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-866">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-867">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-867">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="sslStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6d5f0-868">스트림에 쓸 바이트를 제공하는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-868">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="6d5f0-869">
            <c>버퍼</c> 내에서 스트림에 쓸 바이트를 읽기 시작하는 위치(0부터 시작)가 포함된 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-869">A <see cref="T:System.Int32" /> that contains the zero-based location in <c>buffer</c> at which to begin reading bytes to be written to the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6d5f0-870">
            <c>버퍼</c>에서 읽을 바이트 수가 포함된 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-870">A <see cref="T:System.Int32" /> that contains the number of bytes to read from <c>buffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d5f0-871">지정된 버퍼와 오프셋을 사용하여 지정된 수의 <see cref="T:System.Byte" />를 내부 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-871">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-872">이 메서드는 작업이 완료 될 때 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-872">This method blocks while the operation completes.</span></span> <span data-ttu-id="6d5f0-873">작업이 작업 완료 될 때까지 차단 완료 되 면 사용 된 <xref:System.Net.Security.SslStream.BeginWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-873">To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="6d5f0-874">사용자가 성공적으로 인증 될 때까지이 메서드를 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-874">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="6d5f0-875">인증 중 하나를 호출 하 여 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, 또는 <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-875">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="6d5f0-876"><xref:System.Net.Security.SslStream> 클래스가 여러 동시 쓰기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-876">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6d5f0-877">
            <paramref name="buffer" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-877">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d5f0-878">
            <paramref name="offset" />
            <paramref name="&lt;" />
            <paramref name="0" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-878">
              <paramref name="offset" />
              <paramref name="&lt;" />
              <paramref name="0" />.</span>
          </span>
          <span data-ttu-id="6d5f0-879">
            <paramref name="-or-" />
            <paramref name="offset" /> &gt; <paramref name="buffer" />의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-879">
              <paramref name="-or-" />
              <paramref name="offset" /> &gt; the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="6d5f0-880">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-880">-or-</span>
          </span>
          <span data-ttu-id="6d5f0-881">
            <paramref name="offset" /> + 카운트 &gt; <paramref name="buffer" />의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-881">
              <paramref name="offset" /> + count &gt; the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="6d5f0-882">쓰기 작업이 실패했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-882">The write operation failed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6d5f0-883">쓰기 작업을 진행 중인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-883">There is already a write operation in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6d5f0-884">이 개체가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-884">This object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6d5f0-885">인증이 수행되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-885">Authentication has not occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.SslStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.WriteTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6d5f0-886">쓰기 작업에서 데이터 대기를 차단하는 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-886">Gets or sets the amount of time a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6d5f0-887">동기적 쓰기 작업이 실패할 때까지 걸리는 시간을 지정하는 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d5f0-887">A <see cref="T:System.Int32" /> that specifies the amount of time that elapses before a synchronous write operation fails.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5f0-888">이 속성에는 호출에서 반환 된 값을 반환 합니다 <xref:System.IO.Stream.WriteTimeout%2A> 내부 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-888">This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="6d5f0-889">집합 작업에 대 한 지정 된 값을 설정 합니다 <xref:System.IO.Stream.WriteTimeout%2A> 내부 스트림의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-889">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="6d5f0-890">기본 스트림이 <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> 밀리초에서 이며로 설정 되어 <xref:System.Threading.Timeout.Infinite> 기본적으로 쓰기 작업 시간 초과 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-890">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d5f0-891">다음 코드 예제에서는이 속성의 값을 설정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="6d5f0-891">The following code example demonstrates setting the value of this property.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>