<Type Name="IClrObjectFactory" FullName="System.EnterpriseServices.Internal.IClrObjectFactory">
  <TypeSignature Language="C#" Value="public interface IClrObjectFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClrObjectFactory" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IClrObjectFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClrObjectFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IClrObjectFactory" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("ecabafd2-7f19-11d2-978e-0000f8757e2a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7667a-101">클라이언트에서 SOAP 사용 가능 COM+ 응용 프로그램 프록시를 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-101">Activates SOAP-enabled COM+ application proxies from a client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7667a-102">참조 <xref:System.EnterpriseServices.Internal.ClrObjectFactory> 기본 구현에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-102">See <xref:System.EnterpriseServices.Internal.ClrObjectFactory> for the default implementation.</span></span>  
  
 <span data-ttu-id="7667a-103"><xref:System.EnterpriseServices.Internal.IClrObjectFactory> 이.NET Framework에서 내부적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-103"><xref:System.EnterpriseServices.Internal.IClrObjectFactory> is used internally by the .NET Framework.</span></span> <span data-ttu-id="7667a-104">코드에서 직접 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-104">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateFromAssembly">
      <MemberSignature Language="C#" Value="public object CreateFromAssembly (string assembly, string type, string mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromAssembly(string assembly, string type, string mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromAssembly (assembly As String, type As String, mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateFromAssembly(System::String ^ assembly, System::String ^ type, System::String ^ mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="7667a-105">활성화할 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-105">The name of the assembly to activate.</span></span></param>
        <param name="type"><span data-ttu-id="7667a-106">활성화할 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-106">The name of the type to activate.</span></span></param>
        <param name="mode"><span data-ttu-id="7667a-107">사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-107">Not used.</span></span></param>
        <summary><span data-ttu-id="7667a-108">어셈블리의 구성 파일을 사용하여 .NET Remoting을 통해 원격 어셈블리를 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-108">Activates a remote assembly through .NET remoting, using the assembly's configuration file.</span></span></summary>
        <returns><span data-ttu-id="7667a-109">문화권, 인수, 바인딩 및 활성화 특성이 <see langword="null" />로 설정된 형식을 나타내는 <see cref="T:System.Object" />의 인스턴스를 반환하거나 <paramref name="type" /> 매개 변수가 없는 경우에는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-109">An instance of the <see cref="T:System.Object" /> representing the type, with culture, arguments, and binding and activation attributes set to <see langword="null" />, or <see langword="null" /> if the <paramref name="type" /> parameter is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="7667a-110">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="7667a-110">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="7667a-111">클래스가 등록되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="7667a-111">The class is not registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromMailbox">
      <MemberSignature Language="C#" Value="public object CreateFromMailbox (string Mailbox, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromMailbox(string Mailbox, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromMailbox(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromMailbox (Mailbox As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateFromMailbox(System::String ^ Mailbox, System::String ^ Mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mailbox" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Mailbox"><span data-ttu-id="7667a-112">웹 서비스의 사서함입니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-112">A mailbox on the Web service.</span></span></param>
        <param name="Mode"><span data-ttu-id="7667a-113">사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-113">Not used.</span></span></param>
        <summary><span data-ttu-id="7667a-114">원격 어셈블리의 사서함을 사용하여 .NET Remoting을 통해 원격 어셈블리를 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-114">Activates a remote assembly through .NET remoting, using the remote assembly's mailbox.</span></span> <span data-ttu-id="7667a-115">현재 구현되지 않았으면 호출할 때 <see cref="T:System.Runtime.InteropServices.COMException" />이 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-115">Currently not implemented; throws a <see cref="T:System.Runtime.InteropServices.COMException" /> if called.</span></span></summary>
        <returns><span data-ttu-id="7667a-116">이 메서드를 호출하면 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-116">This method throws an exception if called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7667a-117">구현은 메서드를 호출 하면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-117">The implementation throws an exception if called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="7667a-118">SMTP(Simple Mail Transfer Protocol)가 구현되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="7667a-118">Simple Mail Transfer Protocol (SMTP) is not implemented.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromVroot">
      <MemberSignature Language="C#" Value="public object CreateFromVroot (string VrootUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromVroot(string VrootUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromVroot(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromVroot (VrootUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateFromVroot(System::String ^ VrootUrl, System::String ^ Mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VrootUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VrootUrl"><span data-ttu-id="7667a-119">원격 개체의 가상 루트 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-119">The virtual root URL of the remote object.</span></span></param>
        <param name="Mode"><span data-ttu-id="7667a-120">사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-120">Not used.</span></span></param>
        <summary><span data-ttu-id="7667a-121">원격 어셈블리의 가상 루트 URL을 사용하여 .NET Remoting을 통해 원격 어셈블리를 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-121">Activates a remote assembly through .NET remoting, using the virtual root URL of the remote assembly.</span></span></summary>
        <returns><span data-ttu-id="7667a-122">문화권, 인수, 바인딩 및 활성화 특성이 <see langword="null" />로 설정된 형식을 나타내는 <see cref="T:System.Object" />의 인스턴스이거나, <paramref name="VrootUrl" /> 매개 변수에 의해 식별되는 어셈블리가 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-122">An instance of the <see cref="T:System.Object" /> representing the type, with culture, arguments, and binding and activation attributes set to <see langword="null" />, or <see langword="null" /> if the assembly identified by the <paramref name="VrootUrl" /> parameter is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="7667a-123">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="7667a-123">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="7667a-124">스레드 토큰을 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="7667a-124">The thread token could not be opened.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromWsdl">
      <MemberSignature Language="C#" Value="public object CreateFromWsdl (string WsdlUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromWsdl(string WsdlUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromWsdl(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromWsdl (WsdlUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateFromWsdl(System::String ^ WsdlUrl, System::String ^ Mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WsdlUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="WsdlUrl"><span data-ttu-id="7667a-125">웹 서비스의 WSDL URL입니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-125">The WSDL URL of the Web service.</span></span></param>
        <param name="Mode"><span data-ttu-id="7667a-126">사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-126">Not used.</span></span></param>
        <summary><span data-ttu-id="7667a-127">XML Web services의 WSDL(Web Services Description Language)을 사용하여 .NET Remoting을 통해 원격 어셈블리를 활성화합니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-127">Activates a remote assembly through .NET remoting, using the Web Services Description Language (WSDL) of the XML Web service.</span></span></summary>
        <returns><span data-ttu-id="7667a-128">문화권, 인수, 바인딩 및 활성화 특성이 <see langword="null" />로 설정된 형식을 나타내는 <see cref="T:System.Object" />의 인스턴스이거나, <paramref name="WsdlUrl" /> 매개 변수에 의해 식별되는 어셈블리가 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-128">An instance of the <see cref="T:System.Object" /> representing the type, with culture, arguments, and binding and activation attributes set to <see langword="null" />, or <see langword="null" /> if the assembly identified by the <paramref name="WsdlUrl" /> parameter is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7667a-129">전달 된 WSDL을 처리 하 고 필요한 경우 프록시를 생성 하는 경우 원격 개체를 활성화 합니다.</span><span class="sxs-lookup"><span data-stu-id="7667a-129">Processes the WSDL passed in and, if necessary, generates a proxy, then activates the remote object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="7667a-130">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="7667a-130">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="7667a-131">스레드 토큰을 열 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="7667a-131">The thread token could not be opened.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>