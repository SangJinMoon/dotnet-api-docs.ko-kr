<Type Name="ISoapClientImport" FullName="System.EnterpriseServices.Internal.ISoapClientImport">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c2cf8bafcf4bafa809bbb3885f9dca9bea3c0a5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30407377" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISoapClientImport" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISoapClientImport" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ISoapClientImport" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISoapClientImport" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISoapClientImport" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("E7F0F021-9201-47e4-94DA-1D1416DEC27A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>인증되고 암호화된 SOAP 클라이언트 프록시를 가져옵니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 <xref:System.EnterpriseServices.Internal.SoapClientImport> 기본 구현에 대 한 합니다.  
  
 <xref:System.EnterpriseServices.Internal.ISoapClientImport> 이.NET Framework에서 내부적으로 사용 합니다. 코드에서 직접 사용할 필요가 없습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ProcessClientTlbEx">
      <MemberSignature Language="C#" Value="public void ProcessClientTlbEx (string progId, string virtualRoot, string baseUrl, string authentication, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessClientTlbEx(string progId, string virtualRoot, string baseUrl, string authentication, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapClientImport.ProcessClientTlbEx(System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessClientTlbEx (progId As String, virtualRoot As String, baseUrl As String, authentication As String, assemblyName As String, typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessClientTlbEx(System::String ^ progId, System::String ^ virtualRoot, System::String ^ baseUrl, System::String ^ authentication, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progId" Type="System.String" />
        <Parameter Name="virtualRoot" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" />
        <Parameter Name="authentication" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progId">클래스의 프로그래밍 식별자입니다. 빈 문자열("")이면 이 메서드는 아무 작업도 수행하지 않고 반환합니다.</param>
        <param name="virtualRoot">가상 루트의 이름입니다.</param>
        <param name="baseUrl">가상 루트가 들어 있는 기본 URL입니다.</param>
        <param name="authentication">사용할 ASP.NET 인증 형식입니다.</param>
        <param name="assemblyName">어셈블리의 이름입니다.</param>
        <param name="typeName">형식의 이름입니다.</param>
        <summary>보안 및 인증 옵션을 포함하는 .NET 원격 클라이언트 구성 파일을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Uri.Scheme%2A> 인증을 설정 하는 전체 URL은 HTTPS이 고 인증이 제공 되지 않으면에 대 한 `Windows`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>