<Type Name="GenerateMetadata" FullName="System.EnterpriseServices.Internal.GenerateMetadata">
  <TypeSignature Language="C#" Value="public class GenerateMetadata : System.EnterpriseServices.Internal.IComSoapMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GenerateMetadata extends System.Object implements class System.EnterpriseServices.Internal.IComSoapMetadata" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.GenerateMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class GenerateMetadata&#xA;Implements IComSoapMetadata" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenerateMetadata : System::EnterpriseServices::Internal::IComSoapMetadata" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IComSoapMetadata</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("d8013ff1-730b-45e2-ba24-874b7242c425")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="84075-101">COM+ 구성 요소에 대한 CLR(공용 언어 런타임) 메타데이터를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-101">Generates common language runtime (CLR) metadata for a COM+ component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84075-102">필요한 경우는 <xref:System.EnterpriseServices.Internal.GenerateMetadata> 클래스는 지정된 된 형식 라이브러리에 대 한 CLR 메타 데이터를 포함 하는 어셈블리를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-102">If necessary, the <xref:System.EnterpriseServices.Internal.GenerateMetadata> class generates an assembly that contains CLR metadata for a specified type library.</span></span>  
  
 <span data-ttu-id="84075-103"><xref:System.EnterpriseServices.Internal.GenerateMetadata> 이.NET Framework에서 내부적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-103"><xref:System.EnterpriseServices.Internal.GenerateMetadata> is used internally by the .NET Framework.</span></span> <span data-ttu-id="84075-104">코드에서 직접 클래스를 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="84075-104">You do not need to use the class directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenerateMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.GenerateMetadata.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenerateMetadata();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84075-105"><see cref="T:System.EnterpriseServices.Internal.GenerateMetadata" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-105">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.GenerateMetadata" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public string Generate (string strSrcTypeLib, string outPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Generate(string strSrcTypeLib, string outPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Generate (strSrcTypeLib As String, outPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Generate(System::String ^ strSrcTypeLib, System::String ^ outPath);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapMetadata.Generate(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strSrcTypeLib" Type="System.String" />
        <Parameter Name="outPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strSrcTypeLib"><span data-ttu-id="84075-106">어셈블리를 생성할 형식 라이브러리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-106">The name of the type library for which to generate an assembly.</span></span></param>
        <param name="outPath"><span data-ttu-id="84075-107">어셈블리를 생성하거나 기존 어셈블리를 찾을 폴더입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-107">The folder in which to generate an assembly or to locate an already existing assembly.</span></span></param>
        <summary><span data-ttu-id="84075-108">지정된 형식 라이브러리로 표시되는 COM+ 구성 요소에 대한 CLR(공용 언어 런타임) 메타데이터가 들어 있는 어셈블리를 생성하거나 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="84075-108">Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library.</span></span></summary>
        <returns><span data-ttu-id="84075-109">생성된 어셈블리 이름이거나, 입력이 잘못된 경우 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-109">The generated assembly name; otherwise, an empty string if the inputs are invalid.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84075-110">필요한 경우는 <xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A> 메서드는 지정된 된 형식 라이브러리에 대 한 CLR 메타 데이터를 포함 하는 어셈블리를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-110">If necessary, the <xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A> method generates an assembly that contains CLR metadata for a specified type library.</span></span> <span data-ttu-id="84075-111">이러한 처리를 수행 하려면 호출는 <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="84075-111">To do this processing, it calls the <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> method.</span></span>  
  
 <span data-ttu-id="84075-112">이러한 메서드는 사용자 코드에서 직접 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="84075-112">These methods do not need to be called directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GenerateMetaData">
      <MemberSignature Language="C#" Value="public string GenerateMetaData (string strSrcTypeLib, string outPath, byte[] PublicKey, System.Reflection.StrongNameKeyPair KeyPair);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateMetaData(string strSrcTypeLib, string outPath, unsigned int8[] PublicKey, class System.Reflection.StrongNameKeyPair KeyPair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateMetaData (strSrcTypeLib As String, outPath As String, PublicKey As Byte(), KeyPair As StrongNameKeyPair) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateMetaData(System::String ^ strSrcTypeLib, System::String ^ outPath, cli::array &lt;System::Byte&gt; ^ PublicKey, System::Reflection::StrongNameKeyPair ^ KeyPair);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strSrcTypeLib" Type="System.String" />
        <Parameter Name="outPath" Type="System.String" />
        <Parameter Name="PublicKey" Type="System.Byte[]" />
        <Parameter Name="KeyPair" Type="System.Reflection.StrongNameKeyPair" />
      </Parameters>
      <Docs>
        <param name="strSrcTypeLib"><span data-ttu-id="84075-113">어셈블리를 생성할 형식 라이브러리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-113">The name of the type library for which to generate an assembly.</span></span></param>
        <param name="outPath"><span data-ttu-id="84075-114">어셈블리를 생성하거나 기존 어셈블리를 찾을 폴더입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-114">The folder in which to generate an assembly or to locate an already existing assembly.</span></span></param>
        <param name="PublicKey"><span data-ttu-id="84075-115">형식 라이브러리 정보를 어셈블리로 가져오는 데 사용되는 공개 키입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-115">A public key used to import type library information into an assembly.</span></span></param>
        <param name="KeyPair"><span data-ttu-id="84075-116">생성된 어셈블리에 서명하는 데 사용되는 강력한 이름의 키 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-116">A strong-named key pair used to sign the generated assembly.</span></span></param>
        <summary><span data-ttu-id="84075-117">지정된 형식 라이브러리로 표시되는 COM+ 구성 요소에 대한 CLR(공용 언어 런타임) 메타데이터가 들어 있는 어셈블리를 생성하거나 찾은 후 강력한 이름의 키 쌍으로 어셈블리를 서명하고 서명한 어셈블리를 전역 어셈블리 캐시에 설치합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-117">Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library, signs the assembly with a strong-named key pair, and installs it in the global assembly cache.</span></span></summary>
        <returns><span data-ttu-id="84075-118">생성된 어셈블리 이름이거나, 입력이 잘못된 경우 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-118">The generated assembly name; otherwise, an empty string if the inputs are invalid.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84075-119">필요한 경우는 <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> 메서드는 지정된 된 형식 라이브러리에 대 한 CLR 메타 데이터를 포함 하는 어셈블리를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-119">If necessary, the <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> method generates an assembly that contains CLR metadata for a specified type library.</span></span> <span data-ttu-id="84075-120">문자열에서 생성 된 이름의 어셈블리가 이미 있는 경우 어셈블리를 생성 하지 `outPath` 폴더입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-120">It does not generate an assembly if an assembly of the generated name already exists in the string `outPath` folder.</span></span>  
  
 <span data-ttu-id="84075-121"><xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> 사용자 코드에서 직접 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="84075-121"><xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> does not need to be called directly from your code.</span></span> <span data-ttu-id="84075-122">둘 다에 의해 호출 됩니다는 <xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A> 및 <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="84075-122">It is called by both the <xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A> and <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> methods.</span></span>  
  
 <span data-ttu-id="84075-123">호출 하는 경우 <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>, <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> 도 강력한 이름의 키 쌍을 생성 어셈블리를 서명 하 고 전역 어셈블리 캐시에 설치 합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-123">If called by <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>, <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> also generates a strong-named key pair, signs the assembly, and installs it in the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GenerateSigned">
      <MemberSignature Language="C#" Value="public string GenerateSigned (string strSrcTypeLib, string outPath, bool InstallGac, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateSigned(string strSrcTypeLib, string outPath, bool InstallGac, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateSigned (strSrcTypeLib As String, outPath As String, InstallGac As Boolean, ByRef Error As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GenerateSigned(System::String ^ strSrcTypeLib, System::String ^ outPath, bool InstallGac, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strSrcTypeLib" Type="System.String" />
        <Parameter Name="outPath" Type="System.String" />
        <Parameter Name="InstallGac" Type="System.Boolean" />
        <Parameter Name="Error" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="strSrcTypeLib"><span data-ttu-id="84075-124">어셈블리를 생성할 형식 라이브러리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-124">The name of the type library for which to generate an assembly.</span></span></param>
        <param name="outPath"><span data-ttu-id="84075-125">어셈블리를 생성하거나 기존 어셈블리를 찾을 폴더입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-125">The folder in which to generate an assembly or to locate an already existing assembly.</span></span></param>
        <param name="InstallGac"><span data-ttu-id="84075-126">무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="84075-126">Ignored.</span></span></param>
        <param name="Error"><span data-ttu-id="84075-127">오류 메시지를 쓸 수 있는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-127">A string to which an error message can be written.</span></span></param>
        <summary><span data-ttu-id="84075-128">지정된 형식 라이브러리로 표시되는 COM+ 구성 요소에 대한 CLR(공용 언어 런타임) 메타데이터가 들어 있는 어셈블리를 생성하거나 찾은 후 강력한 이름의 키 쌍으로 어셈블리를 서명하고 서명한 어셈블리를 전역 어셈블리 캐시에 설치합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-128">Generates, or locates, an assembly that contains common language runtime (CLR) metadata for a COM+ component represented by the specified type library, signs the assembly with a strong-named key pair, and installs it in the global assembly cache.</span></span></summary>
        <returns><span data-ttu-id="84075-129">생성된 어셈블리 이름이거나, 입력이 잘못된 경우 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-129">The generated assembly name; otherwise, an empty string if the inputs are invalid.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84075-130">필요한 경우는 <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> 메서드는 지정된 된 형식 라이브러리에 대 한 CLR 메타 데이터를 포함 하는 어셈블리를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-130">If necessary, the <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> method generates an assembly that contains CLR metadata for a specified type library.</span></span> <span data-ttu-id="84075-131">또한 강력한 이름의 키 쌍을 생성 하 고 어셈블리에 서명 합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-131">It also generates a strong-named key pair and signs the assembly.</span></span>  
  
 <span data-ttu-id="84075-132">이러한 처리를 수행 하려면 호출는 <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="84075-132">To do this processing, it calls the <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> method.</span></span> <span data-ttu-id="84075-133">이러한 메서드는 사용자 코드에서 직접 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="84075-133">These methods do not need to be called directly from your code.</span></span>  
  
 <span data-ttu-id="84075-134">`InstallGac` 매개 변수를 전역 어셈블리 캐시에 어셈블리를 설치할 것인지를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="84075-134">The `InstallGac` parameter indicates whether to install the assembly in the global assembly cache.</span></span> <span data-ttu-id="84075-135">그러나 구현은이 값을 무시 하 고 항상 서명 된 어셈블리를 전역 어셈블리 캐시에 설치 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-135">However, the implementation ignores this value and always attempts to install the signed assembly in the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SearchPath">
      <MemberSignature Language="C#" Value="public static int SearchPath (string path, string fileName, string extension, int numBufferChars, string buffer, int[] filePart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;kernel32.dll&quot; as &quot;SearchPath&quot; unicode winapi lasterr)int32 SearchPath(string path, string fileName, string extension, int32 numBufferChars, string buffer, int32[] filePart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SearchPath (path As String, fileName As String, extension As String, numBufferChars As Integer, buffer As String, filePart As Integer()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SearchPath(System::String ^ path, System::String ^ fileName, System::String ^ extension, int numBufferChars, System::String ^ buffer, cli::array &lt;int&gt; ^ filePart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="numBufferChars" Type="System.Int32" />
        <Parameter Name="buffer" Type="System.String" />
        <Parameter Name="filePart" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="84075-136">파일을 검색할 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-136">The path to be searched for the file.</span></span></param>
        <param name="fileName"><span data-ttu-id="84075-137">검색할 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-137">The name of the file for which to search.</span></span></param>
        <param name="extension"><span data-ttu-id="84075-138">파일을 검색할 때 파일 이름에 추가할 확장명입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-138">An extension to be added to the file name when searching for the file.</span></span></param>
        <param name="numBufferChars"><span data-ttu-id="84075-139">유효한 경로와 파일 이름을 받는 버퍼의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-139">The size of the buffer that receives the valid path and file name.</span></span></param>
        <param name="buffer"><span data-ttu-id="84075-140">찾은 파일의 경로와 파일 이름을 받는 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-140">The buffer that receives the path and file name of the file found.</span></span></param>
        <param name="filePart"><span data-ttu-id="84075-141">유효한 경로와 파일 이름의 마지막 구성 요소 주소를 받는 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="84075-141">The variable that receives the address of the last component of the valid path and file name.</span></span></param>
        <summary><span data-ttu-id="84075-142">지정된 경로에서 지정된 파일을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-142">Searches for a specified file in a specified path.</span></span></summary>
        <returns><span data-ttu-id="84075-143">검색이 성공하면 <paramref name="buffer" />에 복사된 문자열의 길이가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="84075-143">If the search succeeds, the return value is the length of the string copied to <paramref name="buffer" />.</span></span> <span data-ttu-id="84075-144">검색이 실패하면 0이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="84075-144">If the search fails, the return value is 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84075-145">자세한 내용은에서 SearchPath에 대 한 Platform SDK 설명서를 참조 하십시오. [ http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp)합니다.</span><span class="sxs-lookup"><span data-stu-id="84075-145">For more information, see the Platform SDK documentation about SearchPath at [http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp](http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp).</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>