<Type Name="Publish" FullName="System.EnterpriseServices.Internal.Publish">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a1832ed11173c47bf8e040d02cf96c9cc35f829" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48598684" /></Metadata><TypeSignature Language="C#" Value="public class Publish : System.EnterpriseServices.Internal.IComSoapPublisher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Publish extends System.Object implements class System.EnterpriseServices.Internal.IComSoapPublisher" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.Publish" />
  <TypeSignature Language="VB.NET" Value="Public Class Publish&#xA;Implements IComSoapPublisher" />
  <TypeSignature Language="C++ CLI" Value="public ref class Publish : System::EnterpriseServices::Internal::IComSoapPublisher" />
  <TypeSignature Language="F#" Value="type Publish = class&#xA;    interface IComSoapPublisher" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IComSoapPublisher</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("d8013eef-730b-45e2-ba24-874b7242c425")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c6908-101">SOAP 사용 가능 COM+ 응용 프로그램에 대한 COM 인터페이스를 게시합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-101">Publishes COM interfaces for SOAP-enabled COM+ applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6908-102"><xref:System.EnterpriseServices.Internal.Publish> 되는.NET Framework에서 내부적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-102"><xref:System.EnterpriseServices.Internal.Publish> is used internally by the .NET Framework.</span></span> <span data-ttu-id="c6908-103">코드에서 직접 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-103">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Publish ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Publish();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c6908-104"><see cref="T:System.EnterpriseServices.Internal.Publish" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-104">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.Publish" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMailBox">
      <MemberSignature Language="C#" Value="public void CreateMailBox (string RootMailServer, string MailBox, out string SmtpName, out string Domain, out string PhysicalPath, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateMailBox(string RootMailServer, string MailBox, [out] string&amp; SmtpName, [out] string&amp; Domain, [out] string&amp; PhysicalPath, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateMailBox (RootMailServer As String, MailBox As String, ByRef SmtpName As String, ByRef Domain As String, ByRef PhysicalPath As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateMailBox(System::String ^ RootMailServer, System::String ^ MailBox, [Runtime::InteropServices::Out] System::String ^ % SmtpName, [Runtime::InteropServices::Out] System::String ^ % Domain, [Runtime::InteropServices::Out] System::String ^ % PhysicalPath, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member CreateMailBox : string * string *  *  *  *  -&gt; unit&#xA;override this.CreateMailBox : string * string *  *  *  *  -&gt; unit" Usage="publish.CreateMailBox (RootMailServer, MailBox, SmtpName, Domain, PhysicalPath, Error)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootMailServer" Type="System.String" />
        <Parameter Name="MailBox" Type="System.String" />
        <Parameter Name="SmtpName" Type="System.String" RefType="out" />
        <Parameter Name="Domain" Type="System.String" RefType="out" />
        <Parameter Name="PhysicalPath" Type="System.String" RefType="out" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootMailServer"><span data-ttu-id="c6908-105">루트 메일 서버의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-105">The URL for the root mail server.</span></span></param>
        <param name="MailBox"><span data-ttu-id="c6908-106">만들 사서함입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-106">The mailbox to create.</span></span></param>
        <param name="SmtpName"><span data-ttu-id="c6908-107">이 메서드가 반환될 때 이 매개 변수에는 사서함이 들어 있는 SMTP(Simple Mail Transfer Protocol) 서버의 이름이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-107">When this method returns, this parameter contains the name of the Simple Mail Transfer Protocol (SMTP) server containing the mailbox.</span></span></param>
        <param name="Domain"><span data-ttu-id="c6908-108">이 메서드가 반환될 때 이 매개 변수에는 SMTP 서버의 도메인이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-108">When this method returns, this parameter contains the domain of the SMTP server.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="c6908-109">이 메서드가 반환될 때 이 매개 변수에는 사서함에 대한 파일 시스템 경로가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-109">When this method returns, this parameter contains the file system path for the mailbox.</span></span></param>
        <param name="Error"><span data-ttu-id="c6908-110">문제가 발생하면 이 메서드가 반환될 때 이 매개 변수에 오류 메시지가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-110">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="c6908-111">SOAP 사용 가능 COM+ 응용 프로그램 사서함을 지정된 URL에 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-111">Creates a SOAP-enabled COM+ application mailbox at a specified URL.</span></span> <span data-ttu-id="c6908-112">완전히 구현되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-112">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6908-113">완전히 구현 되지 않은; 사서함을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-113">Not fully implemented; does not create a mailbox.</span></span> <span data-ttu-id="c6908-114">"COM + SOAP 서비스 SMTP 게시 지원 되지 않습니다." 오류 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-114">Returns the error message "COM+ SOAP services SMTP publication is not supported."</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-115">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-115">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c6908-116">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-116">for the ability to access unmanaged code.</span></span> <span data-ttu-id="c6908-117">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c6908-117">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateVirtualRoot">
      <MemberSignature Language="C#" Value="public void CreateVirtualRoot (string Operation, string FullUrl, out string BaseUrl, out string VirtualRoot, out string PhysicalPath, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRoot(string Operation, string FullUrl, [out] string&amp; BaseUrl, [out] string&amp; VirtualRoot, [out] string&amp; PhysicalPath, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRoot (Operation As String, FullUrl As String, ByRef BaseUrl As String, ByRef VirtualRoot As String, ByRef PhysicalPath As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateVirtualRoot(System::String ^ Operation, System::String ^ FullUrl, [Runtime::InteropServices::Out] System::String ^ % BaseUrl, [Runtime::InteropServices::Out] System::String ^ % VirtualRoot, [Runtime::InteropServices::Out] System::String ^ % PhysicalPath, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member CreateVirtualRoot : string * string *  *  *  *  -&gt; unit&#xA;override this.CreateVirtualRoot : string * string *  *  *  *  -&gt; unit" Usage="publish.CreateVirtualRoot (Operation, FullUrl, BaseUrl, VirtualRoot, PhysicalPath, Error)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operation" Type="System.String" />
        <Parameter Name="FullUrl" Type="System.String" />
        <Parameter Name="BaseUrl" Type="System.String" RefType="out" />
        <Parameter Name="VirtualRoot" Type="System.String" RefType="out" />
        <Parameter Name="PhysicalPath" Type="System.String" RefType="out" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Operation"><span data-ttu-id="c6908-118">수행할 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-118">The operation to perform.</span></span></param>
        <param name="FullUrl"><span data-ttu-id="c6908-119">가상 루트에 대한 전체 URL 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-119">The complete URL address for the virtual root.</span></span></param>
        <param name="BaseUrl"><span data-ttu-id="c6908-120">이 메서드가 반환될 때 이 매개 변수에는 기본 URL 주소가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-120">When this method returns, this parameter contains the base URL address.</span></span></param>
        <param name="VirtualRoot"><span data-ttu-id="c6908-121">이 메서드가 반환될 때 이 매개 변수에 가상 루트의 이름이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-121">When this method returns, this parameter contains the name of the virtual root.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="c6908-122">이 메서드가 반환될 때 이 매개 변수에는 가상 루트의 파일 경로가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-122">When this method returns, this parameter contains the file path for the virtual root.</span></span></param>
        <param name="Error"><span data-ttu-id="c6908-123">문제가 발생하면 이 메서드가 반환될 때 이 매개 변수에 오류 메시지가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-123">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="c6908-124">SOAP 사용 가능 COM+ 응용 프로그램 가상 루트를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-124">Creates a SOAP-enabled COM+ application virtual root.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6908-125">것이 좋습니다 <xref:System.EnterpriseServices.Internal.SoapServerVRoot.CreateVirtualRootEx%2A> 대신 사용할 <xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-125">It is recommended that <xref:System.EnterpriseServices.Internal.SoapServerVRoot.CreateVirtualRootEx%2A> be used instead of <xref:System.EnterpriseServices.Internal.Publish.CreateVirtualRoot%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-126">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-126">A caller in the call chain does not have permission to access unmanaged code.</span></span>  
  
<span data-ttu-id="c6908-127">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-127">-or-</span></span> 
<span data-ttu-id="c6908-128">호출자에게 DNS 정보에 액세스할 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-128">The caller does not have permission to access DNS information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6908-129"><paramref name="FullUrl" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-129"><paramref name="FullUrl" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c6908-130">로컬 호스트 이름을 확인할 때 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-130">An error is encountered when resolving the local host name.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="c6908-131"><paramref name="FullUrl" />가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-131"><paramref name="FullUrl" /> is empty.</span></span>  
  
<span data-ttu-id="c6908-132">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-132">-or-</span></span> 
<span data-ttu-id="c6908-133"><paramref name="FullUrl" />에 지정한 스키마가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-133">The scheme specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
<span data-ttu-id="c6908-134">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-134">-or-</span></span> 
 <span data-ttu-id="c6908-135"><paramref name="FullUrl" />에 세 개 이상의 연속된 슬래시가 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-135"><paramref name="FullUrl" /> contains more than two consecutive slashes.</span></span>  
  
<span data-ttu-id="c6908-136">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-136">-or-</span></span> 
<span data-ttu-id="c6908-137"><paramref name="FullUrl" />에 지정한 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-137">The password specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
<span data-ttu-id="c6908-138">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-138">-or-</span></span> 
<span data-ttu-id="c6908-139"><paramref name="FullUrl" />에 지정한 호스트 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-139">The host name specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
<span data-ttu-id="c6908-140">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-140">-or-</span></span> 
<span data-ttu-id="c6908-141"><paramref name="FullUrl" />에 지정한 파일 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-141">The file name specified in <paramref name="FullUrl" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c6908-142">원격 인프라의 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-142">for configuration of the remoting infrastructure.</span></span> <span data-ttu-id="c6908-143">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span><span class="sxs-lookup"><span data-stu-id="c6908-143">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DeleteMailBox">
      <MemberSignature Language="C#" Value="public void DeleteMailBox (string RootMailServer, string MailBox, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteMailBox(string RootMailServer, string MailBox, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.DeleteMailBox(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteMailBox (RootMailServer As String, MailBox As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteMailBox(System::String ^ RootMailServer, System::String ^ MailBox, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member DeleteMailBox : string * string *  -&gt; unit&#xA;override this.DeleteMailBox : string * string *  -&gt; unit" Usage="publish.DeleteMailBox (RootMailServer, MailBox, Error)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteMailBox(System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootMailServer" Type="System.String" />
        <Parameter Name="MailBox" Type="System.String" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootMailServer"><span data-ttu-id="c6908-144">루트 메일 서버의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-144">The URL for the root mail server.</span></span></param>
        <param name="MailBox"><span data-ttu-id="c6908-145">삭제할 사서함입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-145">The mailbox to delete.</span></span></param>
        <param name="Error"><span data-ttu-id="c6908-146">문제가 발생하면 이 메서드가 반환될 때 이 매개 변수에 오류 메시지가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-146">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="c6908-147">SOAP 사용 가능 COM+ 응용 프로그램 사서함을 지정된 URL에서 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-147">Deletes a SOAP-enabled COM+ application mailbox at a specified URL.</span></span> <span data-ttu-id="c6908-148">완전히 구현되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-148">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6908-149">완전히 구현, 사서함이 삭제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-149">Not fully implemented, does not delete the mailbox.</span></span> <span data-ttu-id="c6908-150">"COM + SOAP 서비스 SMTP 게시 지원 되지 않습니다." 오류 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-150">Returns the error message "COM+ SOAP services SMTP publication is not supported."</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-151">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-151">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c6908-152">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-152">for the ability to access unmanaged code.</span></span> <span data-ttu-id="c6908-153">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c6908-153">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRoot">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRoot (string RootWebServer, string FullUrl, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRoot(string RootWebServer, string FullUrl, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRoot (RootWebServer As String, FullUrl As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteVirtualRoot(System::String ^ RootWebServer, System::String ^ FullUrl, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member DeleteVirtualRoot : string * string *  -&gt; unit&#xA;override this.DeleteVirtualRoot : string * string *  -&gt; unit" Usage="publish.DeleteVirtualRoot (RootWebServer, FullUrl, Error)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.DeleteVirtualRoot(System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootWebServer" Type="System.String" />
        <Parameter Name="FullUrl" Type="System.String" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootWebServer"><span data-ttu-id="c6908-154">루트 웹 서버입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-154">The root Web server.</span></span></param>
        <param name="FullUrl"><span data-ttu-id="c6908-155">가상 루트에 대한 전체 URL 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-155">The complete URL address for the virtual root.</span></span></param>
        <param name="Error"><span data-ttu-id="c6908-156">문제가 발생하면 이 메서드가 반환될 때 이 매개 변수에 오류 메시지가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-156">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="c6908-157">SOAP 사용 가능 COM+ 응용 프로그램 가상 루트를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-157">Deletes a SOAP-enabled COM+ application virtual root.</span></span> <span data-ttu-id="c6908-158">완전히 구현되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-158">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6908-159">에 대 한 기능 <xref:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot%2A> 아직 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-159">The functionality for <xref:System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot%2A> is not yet available.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c6908-160">현재 메서드는 오류 없이 있지만 가상 루트는 삭제 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-160">The method currently returns without an error, but the virtual root is not deleted.</span></span>  
  
 <span data-ttu-id="c6908-161">권장 되는 메서드를 됩니다 기능 사용 가능 해지면 <xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-161">When the functionality becomes available, the recommended method will be <xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-162">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-162">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c6908-163">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-163">for the ability to access unmanaged code.</span></span> <span data-ttu-id="c6908-164">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c6908-164">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GacInstall">
      <MemberSignature Language="C#" Value="public void GacInstall (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GacInstall(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.GacInstall(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GacInstall (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GacInstall(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member GacInstall : string -&gt; unit&#xA;override this.GacInstall : string -&gt; unit" Usage="publish.GacInstall AssemblyPath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.GacInstall(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="c6908-165">어셈블리에 대한 파일 시스템 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-165">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="c6908-166">전역 어셈블리 캐시에 어셈블리를 설치합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-166">Installs an assembly in the global assembly cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-167">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-167">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c6908-168">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-168">for the ability to access unmanaged code.</span></span> <span data-ttu-id="c6908-169">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c6908-169">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GacRemove">
      <MemberSignature Language="C#" Value="public void GacRemove (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GacRemove(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.GacRemove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GacRemove (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GacRemove(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member GacRemove : string -&gt; unit&#xA;override this.GacRemove : string -&gt; unit" Usage="publish.GacRemove AssemblyPath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.GacRemove(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="c6908-170">어셈블리에 대한 파일 시스템 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-170">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="c6908-171">전역 어셈블리 캐시에서 어셈블리를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-171">Removes an assembly from the global assembly cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-172">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-172">A caller in the call chain does not have permission to access unmanaged code.</span></span>  
  
<span data-ttu-id="c6908-173">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-173">-or-</span></span> 
<span data-ttu-id="c6908-174">호출자에게 경로 검색 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-174">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6908-175"><paramref name="AssemblyPath" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-175"><paramref name="AssemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c6908-176"><paramref name="AssemblyPath" />가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-176"><paramref name="AssemblyPath" /> is empty.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c6908-177"><paramref name="AssemblyPath" />가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-177"><paramref name="AssemblyPath" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="c6908-178">어셈블리 또는 모듈이 서로 다른 두 증명 정보로 두 번 로드되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-178">An assembly or module was loaded twice with two different evidences.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="c6908-179"><paramref name="AssemblyPath" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-179"><paramref name="AssemblyPath" /> is not a valid assembly.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c6908-180">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-180">for the ability to access unmanaged code.</span></span> <span data-ttu-id="c6908-181">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c6908-181">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyNameForCache">
      <MemberSignature Language="C#" Value="public void GetAssemblyNameForCache (string TypeLibPath, out string CachePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetAssemblyNameForCache(string TypeLibPath, [out] string&amp; CachePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.GetAssemblyNameForCache(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAssemblyNameForCache (TypeLibPath As String, ByRef CachePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetAssemblyNameForCache(System::String ^ TypeLibPath, [Runtime::InteropServices::Out] System::String ^ % CachePath);" />
      <MemberSignature Language="F#" Value="abstract member GetAssemblyNameForCache : string *  -&gt; unit&#xA;override this.GetAssemblyNameForCache : string *  -&gt; unit" Usage="publish.GetAssemblyNameForCache (TypeLibPath, CachePath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.GetAssemblyNameForCache(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TypeLibPath" Type="System.String" />
        <Parameter Name="CachePath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="TypeLibPath"><span data-ttu-id="c6908-182">typelib가 포함된 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-182">The path for the file that contains the typelib.</span></span></param>
        <param name="CachePath"><span data-ttu-id="c6908-183">이 메서드가 반환될 때 이 매개 변수에는 SoapCache 디렉터리의 이름이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-183">When this method returns, this parameter contains the name of the SoapCache directory.</span></span></param>
        <summary><span data-ttu-id="c6908-184">SoapCache 디렉터리에서 강력한 이름으로 서명하여 생성된 어셈블리에 대한 전체 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-184">Returns the full path for a strong-named signed generated assembly in the SoapCache directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6908-185">관리 되지 않는 COM + 구성 요소는 SOAP 끝점으로.NET remoting을 통해 게시할 수에 대 한 프록시를.NET Framework로 관리 되지 않는 구성 요소를 사용할 수 있도록 하기 위해 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-185">For an unmanaged COM+ component to be published through .NET remoting as a SOAP endpoint, a proxy needs to be generated to make the unmanaged components available to the .NET Framework.</span></span> <span data-ttu-id="c6908-186">프로그래밍 방식으로 형식 라이브러리 가져오기 (Tlbimp.exe)와 같은 단계를 수행 하 여 이렇게는 [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)] 프록시 메타 데이터 어셈블리에 관리 되지 않는 COM + 형식 라이브러리를 변환 하는 데 사용 되는 도구입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-186">This is done by programmatically performing the same steps as Type Library Importer (Tlbimp.exe), the [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)] tool that is used to convert unmanaged COM+ type libraries to proxy metadata assemblies.</span></span> <span data-ttu-id="c6908-187">그러나 성공 하려면 SOAP 통해 클라이언트 활성화에 대 한 클라이언트 및 서버 컴퓨터 같은 강력한 이름의 서명 된 메타 데이터 프록시를 공유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-187">For client activation over SOAP to succeed, however, client and server machines must share the same strong-named signed metadata proxies.</span></span> <span data-ttu-id="c6908-188">따라서 관리 되는 프록시 어셈블리를 비관리 COM + 구성 요소에 대해 생성 될 때 강력한 이름 키도 생성 되어 프록시 어셈블리를 서명 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-188">For this reason, when a managed proxy assembly is generated for an unmanaged COM+ component, a strong name key is also generated and used to sign the proxy assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6908-189"><paramref name="TypeLibPath" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-189"><paramref name="TypeLibPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-190">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-190">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c6908-191">파일 이름이 비어 있거나, 공백만 포함하거나 잘못된 문자를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-191">The file name is empty, contains only white spaces, or contains invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c6908-192"><paramref name="TypeLibPath" />에 대한 액세스가 거부되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-192">Access to <paramref name="TypeLibPath" /> is denied.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="c6908-193">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-193">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c6908-194"><paramref name="TypeLibPath" />의 문자열 중간에 콜론(:)이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-194"><paramref name="TypeLibPath" /> contains a colon (:) in the middle of the string.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="c6908-195">파일 읽기.</span><span class="sxs-lookup"><span data-stu-id="c6908-195">for reading files.</span></span> <span data-ttu-id="c6908-196">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="c6908-196">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetClientPhysicalPath">
      <MemberSignature Language="C#" Value="public static string GetClientPhysicalPath (bool CreateDir);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClientPhysicalPath(bool CreateDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClientPhysicalPath (CreateDir As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClientPhysicalPath(bool CreateDir);" />
      <MemberSignature Language="F#" Value="static member GetClientPhysicalPath : bool -&gt; string" Usage="System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath CreateDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CreateDir" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CreateDir"><span data-ttu-id="c6908-197">디렉터리를 만들려면 <see langword="true" />로 설정하고, 경로는 반환하지만 디렉터리를 만들지 않으려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-197">Set to <see langword="true" /> to create the directory, or <see langword="false" /> to return the path but not create the directory.</span></span></param>
        <summary><span data-ttu-id="c6908-198">클라이언트 구성 파일 저장용 디렉터리 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-198">Returns the path for the directory for storing client configuration files.</span></span></summary>
        <returns><span data-ttu-id="c6908-199">구성 파일을 포함하는 디렉터리 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-199">The path for the directory to contain the configuration files.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6908-200">디렉터리를 만들고 "\com\SOAPAssembly\\" 시스템 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-200">Creates the directories "\com\SOAPAssembly\\" under the system directory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="c6908-201">호출자에게 필요한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-201">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeNameFromProgId">
      <MemberSignature Language="C#" Value="public string GetTypeNameFromProgId (string AssemblyPath, string ProgId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeNameFromProgId(string AssemblyPath, string ProgId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.GetTypeNameFromProgId(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeNameFromProgId (AssemblyPath As String, ProgId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTypeNameFromProgId(System::String ^ AssemblyPath, System::String ^ ProgId);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeNameFromProgId : string * string -&gt; string&#xA;override this.GetTypeNameFromProgId : string * string -&gt; string" Usage="publish.GetTypeNameFromProgId (AssemblyPath, ProgId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.GetTypeNameFromProgId(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="c6908-202">어셈블리에 대한 파일 시스템 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-202">The file system path for the assembly.</span></span></param>
        <param name="ProgId"><span data-ttu-id="c6908-203">클래스의 프로그래밍 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-203">The programmatic identifier of the class.</span></span></param>
        <summary><span data-ttu-id="c6908-204">어셈블리 전체를 반영하고 ProgID와 일치하는 형식 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-204">Reflects over an assembly and returns the type name that matches the ProgID.</span></span></summary>
        <returns><span data-ttu-id="c6908-205">ProgID와 일치하는 형식 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-205">The type name that matches the ProgID.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-206">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-206">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c6908-207">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-207">for the ability to access unmanaged code.</span></span> <span data-ttu-id="c6908-208">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c6908-208">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ParseUrl">
      <MemberSignature Language="C#" Value="public static void ParseUrl (string FullUrl, out string BaseUrl, out string VirtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParseUrl(string FullUrl, [out] string&amp; BaseUrl, [out] string&amp; VirtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.ParseUrl(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParseUrl (FullUrl As String, ByRef BaseUrl As String, ByRef VirtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParseUrl(System::String ^ FullUrl, [Runtime::InteropServices::Out] System::String ^ % BaseUrl, [Runtime::InteropServices::Out] System::String ^ % VirtualRoot);" />
      <MemberSignature Language="F#" Value="static member ParseUrl : string *  *  -&gt; unit" Usage="System.EnterpriseServices.Internal.Publish.ParseUrl (FullUrl, BaseUrl, VirtualRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FullUrl" Type="System.String" />
        <Parameter Name="BaseUrl" Type="System.String" RefType="out" />
        <Parameter Name="VirtualRoot" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FullUrl"><span data-ttu-id="c6908-209">가상 루트에 대한 전체 URL 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-209">The complete URL address for the virtual root.</span></span></param>
        <param name="BaseUrl"><span data-ttu-id="c6908-210">이 메서드가 반환될 때 이 매개 변수에는 기본 URL 주소가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-210">When this method returns, this parameter contains the base URL address.</span></span></param>
        <param name="VirtualRoot"><span data-ttu-id="c6908-211">이 메서드가 반환될 때 이 매개 변수에 가상 루트의 이름이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-211">When this method returns, this parameter contains the name of the virtual root.</span></span></param>
        <summary><span data-ttu-id="c6908-212">URL을 구문 분석하고 기본 URL 및 가상 루트 부분을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-212">Parses a URL and returns the base URL and virtual root portions.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6908-213"><paramref name="FullUrl" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-213"><paramref name="FullUrl" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="c6908-214">로컬 호스트 이름을 확인할 때 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-214">An error is encountered when resolving the local host name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-215">호출자에게 DNS 정보에 액세스할 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-215">The caller does not have permission to access DNS information.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="c6908-216"><paramref name="FullUrl" />가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-216"><paramref name="FullUrl" /> is empty.</span></span>  
  
<span data-ttu-id="c6908-217">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-217">-or-</span></span> 
<span data-ttu-id="c6908-218"><paramref name="FullUrl" />에 지정한 스키마가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-218">The scheme specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
<span data-ttu-id="c6908-219">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-219">-or-</span></span> 
 <span data-ttu-id="c6908-220"><paramref name="FullUrl" />에 너무 많은 슬래시가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-220"><paramref name="FullUrl" /> contains too many slashes.</span></span>  
  
<span data-ttu-id="c6908-221">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-221">-or-</span></span> 
<span data-ttu-id="c6908-222"><paramref name="FullUrl" />에 지정한 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-222">The password specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
<span data-ttu-id="c6908-223">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-223">-or-</span></span> 
<span data-ttu-id="c6908-224"><paramref name="FullUrl" />에 지정한 호스트 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-224">The host name specified in <paramref name="FullUrl" /> is invalid.</span></span>  
  
<span data-ttu-id="c6908-225">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-225">-or-</span></span> 
<span data-ttu-id="c6908-226"><paramref name="FullUrl" />에 지정한 파일 이름이 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-226">The file name specified in <paramref name="FullUrl" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessClientTlb">
      <MemberSignature Language="C#" Value="public void ProcessClientTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string VRoot, string BaseUrl, string Mode, string Transport, out string AssemblyName, out string TypeName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessClientTlb(string ProgId, string SrcTlbPath, string PhysicalPath, string VRoot, string BaseUrl, string Mode, string Transport, [out] string&amp; AssemblyName, [out] string&amp; TypeName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessClientTlb (ProgId As String, SrcTlbPath As String, PhysicalPath As String, VRoot As String, BaseUrl As String, Mode As String, Transport As String, ByRef AssemblyName As String, ByRef TypeName As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessClientTlb(System::String ^ ProgId, System::String ^ SrcTlbPath, System::String ^ PhysicalPath, System::String ^ VRoot, System::String ^ BaseUrl, System::String ^ Mode, System::String ^ Transport, [Runtime::InteropServices::Out] System::String ^ % AssemblyName, [Runtime::InteropServices::Out] System::String ^ % TypeName, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member ProcessClientTlb : string * string * string * string * string * string * string *  *  *  -&gt; unit&#xA;override this.ProcessClientTlb : string * string * string * string * string * string * string *  *  *  -&gt; unit" Usage="publish.ProcessClientTlb (ProgId, SrcTlbPath, PhysicalPath, VRoot, BaseUrl, Mode, Transport, AssemblyName, TypeName, Error)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="SrcTlbPath" Type="System.String" />
        <Parameter Name="PhysicalPath" Type="System.String" />
        <Parameter Name="VRoot" Type="System.String" />
        <Parameter Name="BaseUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
        <Parameter Name="Transport" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" RefType="out" />
        <Parameter Name="TypeName" Type="System.String" RefType="out" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ProgId"><span data-ttu-id="c6908-227">클래스의 프로그래밍 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-227">The programmatic identifier of the class.</span></span></param>
        <param name="SrcTlbPath"><span data-ttu-id="c6908-228">typelib가 포함된 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-228">The path for the file that contains the typelib.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="c6908-229">웹 응용 프로그램 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-229">The Web application directory.</span></span></param>
        <param name="VRoot"><span data-ttu-id="c6908-230">가상 루트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-230">The name of the virtual root.</span></span></param>
        <param name="BaseUrl"><span data-ttu-id="c6908-231">가상 루트가 들어 있는 기본 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-231">The base URL that contains the virtual root.</span></span></param>
        <param name="Mode"><span data-ttu-id="c6908-232">활성화 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-232">The activation mode.</span></span></param>
        <param name="Transport"><span data-ttu-id="c6908-233">사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-233">Not used.</span></span> <span data-ttu-id="c6908-234">이 매개 변수에 <see langword="null" />을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-234">Specify <see langword="null" /> for this parameter.</span></span></param>
        <param name="AssemblyName"><span data-ttu-id="c6908-235">이 메서드가 반환될 때 이 매개 변수에는 어셈블리의 표시 이름이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-235">When this method returns, this parameter contains the display name of the assembly.</span></span></param>
        <param name="TypeName"><span data-ttu-id="c6908-236">이 메서드가 반환될 때 이 매개 변수에는 어셈블리의 정규화된 형식 이름이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-236">When this method returns, this parameter contains the fully-qualified type name of the assembly.</span></span></param>
        <param name="Error"><span data-ttu-id="c6908-237">문제가 발생하면 이 메서드가 반환될 때 이 매개 변수에 오류 메시지가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-237">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="c6908-238">클라이언트에 구성 파일을 만들어 클라이언트 형식 라이브러리를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-238">Processes a client type library, creating a configuration file on the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6908-239">이 메서드는 원격 구성 파일을 생성 하는 클라이언트 프록시 가져오기에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-239">This method is used on a client proxy import to generate a remoting configuration file.</span></span>  
  
 <span data-ttu-id="c6908-240">경우는 `Mode` 매개 변수는 "wellknownobject" 또는 빈 문자열 (""), 잘 알려진 개체 것으로 간주 됩니다. 그렇지 않은 경우 클라이언트 활성화가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-240">If the `Mode` parameter is either "wellknownobject" or an empty string (""), a well-known object is assumed; otherwise, client activation is assumed.</span></span>  
  
 <span data-ttu-id="c6908-241">것이 좋습니다 <xref:System.EnterpriseServices.Internal.SoapClientImport.ProcessClientTlbEx%2A> 대신 사용할 <xref:System.EnterpriseServices.Internal.Publish.ProcessClientTlb%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-241">It is recommended that <xref:System.EnterpriseServices.Internal.SoapClientImport.ProcessClientTlbEx%2A> be used instead of <xref:System.EnterpriseServices.Internal.Publish.ProcessClientTlb%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-242">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-242">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c6908-243">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-243">for the ability to access unmanaged code.</span></span> <span data-ttu-id="c6908-244">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c6908-244">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessServerTlb">
      <MemberSignature Language="C#" Value="public void ProcessServerTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string Operation, out string strAssemblyName, out string TypeName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessServerTlb(string ProgId, string SrcTlbPath, string PhysicalPath, string Operation, [out] string&amp; strAssemblyName, [out] string&amp; TypeName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessServerTlb (ProgId As String, SrcTlbPath As String, PhysicalPath As String, Operation As String, ByRef strAssemblyName As String, ByRef TypeName As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessServerTlb(System::String ^ ProgId, System::String ^ SrcTlbPath, System::String ^ PhysicalPath, System::String ^ Operation, [Runtime::InteropServices::Out] System::String ^ % strAssemblyName, [Runtime::InteropServices::Out] System::String ^ % TypeName, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member ProcessServerTlb : string * string * string * string *  *  *  -&gt; unit&#xA;override this.ProcessServerTlb : string * string * string * string *  *  *  -&gt; unit" Usage="publish.ProcessServerTlb (ProgId, SrcTlbPath, PhysicalPath, Operation, strAssemblyName, TypeName, Error)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="SrcTlbPath" Type="System.String" />
        <Parameter Name="PhysicalPath" Type="System.String" />
        <Parameter Name="Operation" Type="System.String" />
        <Parameter Name="strAssemblyName" Type="System.String" RefType="out" />
        <Parameter Name="TypeName" Type="System.String" RefType="out" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ProgId"><span data-ttu-id="c6908-245">클래스의 프로그래밍 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-245">The programmatic identifier of the class.</span></span></param>
        <param name="SrcTlbPath"><span data-ttu-id="c6908-246">형식 라이브러리가 포함된 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-246">The path for the file that contains the type library.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="c6908-247">웹 응용 프로그램 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-247">The Web application directory.</span></span></param>
        <param name="Operation"><span data-ttu-id="c6908-248">수행할 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-248">The operation to perform.</span></span></param>
        <param name="strAssemblyName"><span data-ttu-id="c6908-249">이 메서드가 반환될 때 이 매개 변수에는 어셈블리의 표시 이름이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-249">When this method returns, this parameter contains the display name of the assembly.</span></span></param>
        <param name="TypeName"><span data-ttu-id="c6908-250">이 메서드가 반환될 때 이 매개 변수에는 어셈블리의 정규화된 형식 이름이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-250">When this method returns, this parameter contains the fully-qualified type name of the assembly.</span></span></param>
        <param name="Error"><span data-ttu-id="c6908-251">문제가 발생하면 이 메서드가 반환될 때 이 매개 변수에 오류 메시지가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-251">When this method returns, this parameter contains an error message if a problem was encountered.</span></span></param>
        <summary><span data-ttu-id="c6908-252">Web.config 및 Default.disco 파일에서 구성 요소 항목을 추가하거나 삭제하여 서버 형식 라이브러리를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-252">Processes a server type library, either adding or deleting component entries to the Web.config and Default.disco files.</span></span> <span data-ttu-id="c6908-253">필요한 경우 프록시를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-253">Generates a proxy if necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6908-254"><xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A> 검색 파일 및 typelib, 구성 요소에 대 한 web.config 파일에 항목을 추가 하 고 생성 하거나 프록시를 관리 되지 않는 구성 요소에 대 한 bin 디렉터리에 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-254"><xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A> adds an entry to the discovery file and the web.config file for the components in the typelib, and either generates or copies a proxy to the bin directory for unmanaged components.</span></span> <span data-ttu-id="c6908-255">경우 `Operation` equals "삭제" 후 구성 요소 항목을 Web.config 및 Default.disco 파일에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-255">If `Operation` equals "delete," then the component entries are removed from the Web.config and Default.disco files.</span></span>  
  
 <span data-ttu-id="c6908-256">것이 좋습니다 <xref:System.EnterpriseServices.Internal.SoapServerTlb.AddServerTlb%2A> 하 고 <xref:System.EnterpriseServices.Internal.SoapServerTlb.DeleteServerTlb%2A> 대신 사용할 <xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-256">It is recommended that <xref:System.EnterpriseServices.Internal.SoapServerTlb.AddServerTlb%2A> and <xref:System.EnterpriseServices.Internal.SoapServerTlb.DeleteServerTlb%2A> be used instead of <xref:System.EnterpriseServices.Internal.Publish.ProcessServerTlb%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-257">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-257">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="c6908-258"><paramref name="SrcTlbPath" /> 매개 변수가 scrobj.dll을 참조하기 때문에 스크립트 구성 요소의 SOAP 게시가 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-258">The <paramref name="SrcTlbPath" /> parameter referenced scrobj.dll; therefore, SOAP publication of script components is not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c6908-259">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-259">for the ability to access unmanaged code.</span></span> <span data-ttu-id="c6908-260">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c6908-260">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RegisterAssembly">
      <MemberSignature Language="C#" Value="public void RegisterAssembly (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAssembly(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.RegisterAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterAssembly (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterAssembly(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member RegisterAssembly : string -&gt; unit&#xA;override this.RegisterAssembly : string -&gt; unit" Usage="publish.RegisterAssembly AssemblyPath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="c6908-261">어셈블리에 대한 파일 시스템 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-261">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="c6908-262">COM interop에 어셈블리를 등록합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-262">Registers an assembly for COM interop.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6908-263"><xref:System.EnterpriseServices.Internal.Publish.RegisterAssembly%2A> 어셈블리의 생성 가능한 클래스를 등록 하는 어셈블리 등록 도구 (Regasm.exe)을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-263"><xref:System.EnterpriseServices.Internal.Publish.RegisterAssembly%2A> uses the Assembly Registration tool (Regasm.exe) to register the creatable classes in the assembly.</span></span> <span data-ttu-id="c6908-264">자세한 내용은 [Regasm.exe (어셈블리 등록 도구)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-264">For more information, see [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException"><span data-ttu-id="c6908-265">입력 어셈블리에 강력한 이름이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-265">The input assembly does not have a strong name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-266">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-266">A caller in the call chain does not have permission to access unmanaged code.</span></span>  
  
<span data-ttu-id="c6908-267">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-267">-or-</span></span> 
<span data-ttu-id="c6908-268">"file://"로 시작하지 않는 Codebase가 필수 <see cref="T:System.Net.WebPermission" /> 없이 지정되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-268">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6908-269"><paramref name="AssemblyPath" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-269"><paramref name="AssemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c6908-270"><paramref name="AssemblyPath" />를 찾을 수 없거나 파일 확장명이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-270"><paramref name="AssemblyPath" /> is not found, or a filename extension is not specified.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="c6908-271"><paramref name="AssemblyPath" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-271"><paramref name="AssemblyPath" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="c6908-272">어셈블리 또는 모듈이 서로 다른 두 개의 증거로 두 번 로드되었거나 어셈블리 이름이 시스템 정의 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-272">An assembly or module was loaded twice with two different evidences, or the assembly name exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c6908-273"><see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />로 표시된 메서드가 <see langword="static" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-273">A method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not <see langword="static" />.</span></span>  
  
<span data-ttu-id="c6908-274">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-274">-or-</span></span> 
<span data-ttu-id="c6908-275">지정된 계층 구조 수준에 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />로 표시된 메서드가 두 개 이상 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-275">There is more than one method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> at a given level of the hierarchy.</span></span>  
  
<span data-ttu-id="c6908-276">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-276">-or-</span></span> 
<span data-ttu-id="c6908-277"><see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />로 표시된 메서드의 시그니처가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-277">The signature of the method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not valid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="c6908-278">레지스트리에 액세스 하는 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-278">for the ability to access the registry.</span></span> <span data-ttu-id="c6908-279">연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c6908-279">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="c6908-280">현재 디렉터리를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-280">for determining the current directory.</span></span> <span data-ttu-id="c6908-281">연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /></span><span class="sxs-lookup"><span data-stu-id="c6908-281">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="c6908-282">"file://"로 시작 하는 URI를 읽는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-282">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="c6908-283">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="c6908-283">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="c6908-284">"file://"로 시작 하지 않는 URI를 읽는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-284">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="UnRegisterAssembly">
      <MemberSignature Language="C#" Value="public void UnRegisterAssembly (string AssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnRegisterAssembly(string AssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.Publish.UnRegisterAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnRegisterAssembly (AssemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnRegisterAssembly(System::String ^ AssemblyPath);" />
      <MemberSignature Language="F#" Value="abstract member UnRegisterAssembly : string -&gt; unit&#xA;override this.UnRegisterAssembly : string -&gt; unit" Usage="publish.UnRegisterAssembly AssemblyPath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyPath"><span data-ttu-id="c6908-285">어셈블리에 대한 파일 시스템 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-285">The file system path for the assembly.</span></span></param>
        <summary><span data-ttu-id="c6908-286">COM interop 어셈블리의 등록을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-286">Unregisters a COM interop assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6908-287"><xref:System.EnterpriseServices.Internal.Publish.UnRegisterAssembly%2A> 어셈블리의 생성 가능한 클래스의 등록을 취소 하려면 Regasm.exe를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-287"><xref:System.EnterpriseServices.Internal.Publish.UnRegisterAssembly%2A> uses Regasm.exe to unregister the creatable classes in the assembly.</span></span> <span data-ttu-id="c6908-288">자세한 내용은 [Regasm.exe (어셈블리 등록 도구)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-288">For more information, see [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c6908-289">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-289">A caller in the call chain does not have permission to access unmanaged code.</span></span>  
  
<span data-ttu-id="c6908-290">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-290">-or-</span></span> 
<span data-ttu-id="c6908-291">"file://"로 시작하지 않는 Codebase가 필수 <see cref="T:System.Net.WebPermission" /> 없이 지정되었습니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-291">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c6908-292"><paramref name="AssemblyPath" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-292"><paramref name="AssemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c6908-293"><paramref name="AssemblyPath" />를 찾을 수 없거나 파일 확장명이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-293"><paramref name="AssemblyPath" /> is not found, or a file name extension is not specified.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="c6908-294"><paramref name="AssemblyPath" />는 유효한 어셈블리가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-294"><paramref name="AssemblyPath" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="c6908-295">어셈블리 또는 모듈이 서로 다른 두 개의 증거로 두 번 로드되었거나 어셈블리 이름이 시스템 정의 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-295">An assembly or module was loaded twice with two different evidences, or the assembly name exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c6908-296"><see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />로 표시된 메서드가 <see langword="static" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-296">A method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not <see langword="static" />.</span></span>  
  
<span data-ttu-id="c6908-297">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-297">-or-</span></span> 
<span data-ttu-id="c6908-298">지정된 계층 구조 수준에 <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />로 표시된 메서드가 두 개 이상 있는 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-298">There is more than one method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> at a given level of the hierarchy.</span></span>  
  
<span data-ttu-id="c6908-299">또는</span><span class="sxs-lookup"><span data-stu-id="c6908-299">-or-</span></span> 
<span data-ttu-id="c6908-300"><see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" />로 표시된 메서드의 시그니처가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="c6908-300">The signature of the method marked with <see cref="T:System.Runtime.InteropServices.ComUnregisterFunctionAttribute" /> is not valid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="c6908-301">레지스트리에 액세스 하는 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-301">for the ability to access the registry.</span></span> <span data-ttu-id="c6908-302">연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="c6908-302">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="c6908-303">현재 디렉터리를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-303">for determining the current directory.</span></span> <span data-ttu-id="c6908-304">연결 된 열거형: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /></span><span class="sxs-lookup"><span data-stu-id="c6908-304">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="c6908-305">"file://"로 시작 하는 URI를 읽는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-305">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="c6908-306">연결 된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="c6908-306">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="c6908-307">"file://"로 시작 하지 않는 URI를 읽는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6908-307">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>