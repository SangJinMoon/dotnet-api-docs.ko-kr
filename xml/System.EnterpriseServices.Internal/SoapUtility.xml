<Type Name="SoapUtility" FullName="System.EnterpriseServices.Internal.SoapUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1431f4ef2ed7cd07a03699d18ce416ed0cd6eef4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36487348" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SoapUtility : System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapUtility extends System.Object implements class System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.SoapUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapUtility&#xA;Implements ISoapUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapUtility sealed : System::EnterpriseServices::Internal::ISoapUtility" />
  <TypeSignature Language="F#" Value="type SoapUtility = class&#xA;    interface ISoapUtility" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.ISoapUtility</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("5F9A955F-AA55-4127-A32B-33496AA8A44E")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="875fb-101">서버의 COM+ SOAP 사용 가능한 응용 프로그램 프록시 내보내기 및 클라이언트의 프록시 가져오기를 지원하는 유틸리티를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="875fb-101">Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client.</span>
      </span>
      <span data-ttu-id="875fb-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="875fb-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="875fb-103">그러나 유틸리티 함수를 <xref:System.EnterpriseServices.Internal.SoapUtility> 제공는 COM +; 내의 다양 한 위치에서 호출의 기본 목적은 내보내기 및 가져오기 클라이언트 프록시를 지원 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="875fb-103">The utility functions that <xref:System.EnterpriseServices.Internal.SoapUtility> provides are called from numerous locations within COM+; however, their primary purpose is to support the export and import of client proxies.</span></span>  
  
 <span data-ttu-id="875fb-104"><xref:System.EnterpriseServices.Internal.SoapUtility> 이.NET Framework에서 내부적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="875fb-104"><xref:System.EnterpriseServices.Internal.SoapUtility> is used internally by the .NET Framework.</span></span> <span data-ttu-id="875fb-105">코드에서 직접 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="875fb-105">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapUtility ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapUtility();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="875fb-106">
            <see cref="T:System.EnterpriseServices.Internal.SoapUtility" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-106">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.SoapUtility" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBinPath">
      <MemberSignature Language="C#" Value="public void GetServerBinPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string binPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerBinPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; binPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerBinPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef binPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetServerBinPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % binPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerBinPath : string * string * string *  -&gt; unit&#xA;override this.GetServerBinPath : string * string * string *  -&gt; unit" Usage="soapUtility.GetServerBinPath (rootWebServer, inBaseUrl, inVirtualRoot, binPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="binPath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">
          <span data-ttu-id="875fb-107">루트 웹 서버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-107">The root Web server.</span>
          </span>
        </param>
        <param name="inBaseUrl">
          <span data-ttu-id="875fb-108">기본 URL 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-108">The base URL address.</span>
          </span>
        </param>
        <param name="inVirtualRoot">
          <span data-ttu-id="875fb-109">가상 루트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-109">The name of the virtual root.</span>
          </span>
        </param>
        <param name="binPath">
          <span data-ttu-id="875fb-110">이 메서드가 반환될 때 이 매개 변수에는 SOAP 가상 루트 bin 디렉터리의 파일 경로가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-110">When this method returns, this parameter contains the file path for the SOAP virtual root bin directory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875fb-111">SOAP bin 디렉터리의 경로를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-111">Returns the path for the SOAP bin directory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="875fb-112">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-112">A caller in the call chain does not have permission to access unmanaged code.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="875fb-113">SOAP 유틸리티를 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-113">The SOAP utility is not available.</span>
          </span>
        </exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">
          <span data-ttu-id="875fb-114">시스템 디렉터리를 얻으려는 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-114">The call to get the system directory failed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="875fb-115">비관리 코드에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-115">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="875fb-116">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-116">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetServerPhysicalPath">
      <MemberSignature Language="C#" Value="public void GetServerPhysicalPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerPhysicalPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerPhysicalPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetServerPhysicalPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerPhysicalPath : string * string * string *  -&gt; unit&#xA;override this.GetServerPhysicalPath : string * string * string *  -&gt; unit" Usage="soapUtility.GetServerPhysicalPath (rootWebServer, inBaseUrl, inVirtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">
          <span data-ttu-id="875fb-117">루트 웹 서버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-117">The root Web server.</span>
          </span>
        </param>
        <param name="inBaseUrl">
          <span data-ttu-id="875fb-118">기본 URL 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-118">The base URL address.</span>
          </span>
        </param>
        <param name="inVirtualRoot">
          <span data-ttu-id="875fb-119">가상 루트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-119">The name of the virtual root.</span>
          </span>
        </param>
        <param name="physicalPath">
          <span data-ttu-id="875fb-120">이 메서드가 반환될 때 이 매개 변수에는 SOAP 가상 루트의 파일 경로가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-120">When this method returns, this parameter contains the file path for the SOAP virtual root.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="875fb-121">SOAP 가상 루트의 경로를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-121">Returns the path for the SOAP virtual root.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="875fb-122">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-122">A caller in the call chain does not have permission to access unmanaged code.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="875fb-123">SOAP 유틸리티를 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-123">The SOAP utility is not available.</span>
          </span>
        </exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">
          <span data-ttu-id="875fb-124">시스템 디렉터리를 얻으려는 호출이 실패한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-124">The call to get the system directory failed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="875fb-125">비관리 코드에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-125">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="875fb-126">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-126">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Present">
      <MemberSignature Language="C#" Value="public void Present ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Present() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.Present" />
      <MemberSignature Language="VB.NET" Value="Public Sub Present ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Present();" />
      <MemberSignature Language="F#" Value="abstract member Present : unit -&gt; unit&#xA;override this.Present : unit -&gt; unit" Usage="soapUtility.Present " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.Present</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="875fb-127">인증되고 암호화된 SOAP 인터페이스가 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-127">Determines whether authenticated, encrypted SOAP interfaces are present.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="875fb-128">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-128">A caller in the call chain does not have permission to access unmanaged code.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="875fb-129">SOAP 유틸리티를 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-129">The SOAP utility is not available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="875fb-130">비관리 코드에 액세스할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-130">for the ability to access unmanaged code.</span>
          </span>
          <span data-ttu-id="875fb-131">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="875fb-131">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>