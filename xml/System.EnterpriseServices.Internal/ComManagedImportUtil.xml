<Type Name="ComManagedImportUtil" FullName="System.EnterpriseServices.Internal.ComManagedImportUtil">
  <TypeSignature Language="C#" Value="public class ComManagedImportUtil : System.EnterpriseServices.Internal.IComManagedImportUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComManagedImportUtil extends System.Object implements class System.EnterpriseServices.Internal.IComManagedImportUtil" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ComManagedImportUtil" />
  <TypeSignature Language="VB.NET" Value="Public Class ComManagedImportUtil&#xA;Implements IComManagedImportUtil" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComManagedImportUtil : System::EnterpriseServices::Internal::IComManagedImportUtil" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IComManagedImportUtil</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("3b0398c9-7812-4007-85cb-18c771f2206f")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="400f0-101">COM+ 카탈로그에서 구성 요소를 식별하고 설치합니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-101">Identifies and installs components in the COM+ catalog.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="400f0-102"><xref:System.EnterpriseServices.Internal.ComManagedImportUtil> 이.NET Framework에서 내부적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-102"><xref:System.EnterpriseServices.Internal.ComManagedImportUtil> is used internally by the .NET Framework.</span></span> <span data-ttu-id="400f0-103">코드에서 직접 클래스를 사용할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-103">You do not need to use the class directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComManagedImportUtil ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ComManagedImportUtil.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComManagedImportUtil();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="400f0-104"><see cref="T:System.EnterpriseServices.Internal.ComManagedImportUtil" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-104">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.ComManagedImportUtil" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponentInfo">
      <MemberSignature Language="C#" Value="public void GetComponentInfo (string assemblyPath, out string numComponents, out string componentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetComponentInfo(string assemblyPath, [out] string&amp; numComponents, [out] string&amp; componentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetComponentInfo (assemblyPath As String, ByRef numComponents As String, ByRef componentInfo As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetComponentInfo(System::String ^ assemblyPath, [Runtime::InteropServices::Out] System::String ^ % numComponents, [Runtime::InteropServices::Out] System::String ^ % componentInfo);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComManagedImportUtil.GetComponentInfo(System.String,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="numComponents" Type="System.String&amp;" RefType="out" />
        <Parameter Name="componentInfo" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="assemblyPath"><span data-ttu-id="400f0-105">어셈블리에 대한 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-105">The path to the assembly.</span></span></param>
        <param name="numComponents"><span data-ttu-id="400f0-106">이 메서드가 반환될 때 이 매개 변수에는 어셈블리의 구성 요소의 수가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-106">When this method returns, this parameter contains the number of components in the assembly.</span></span></param>
        <param name="componentInfo"><span data-ttu-id="400f0-107">이 메서드가 반환될 때 이 매개 변수에는 구성 요소 정보가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-107">When this method returns, this parameter contains the information about the components.</span></span></param>
        <summary><span data-ttu-id="400f0-108">어셈블리에서 구성 요소 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-108">Gets the component information from the assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="400f0-109">이 메서드는 클래스 식별자 (Clsid)를 식별 하는 COM + 카탈로그 및 구성 요소를 등록 하는 DLL의 Progid입니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-109">This method is called by the COM+ catalog to identify the class identifiers (CLSIDs) and ProgIDs of the components in a DLL before it is registered.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="400f0-110"><paramref name="assemblyPath" />가 빈 문자열이거나, 공백만 포함하거나, <see cref="F:System.IO.Path.InvalidPathChars" />에 정의된 것과 같이 잘못된 문자를 포함하고 있는 경우</span><span class="sxs-lookup"><span data-stu-id="400f0-110"><paramref name="assemblyPath" /> is an empty string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span>  
  
 <span data-ttu-id="400f0-111">또는</span><span class="sxs-lookup"><span data-stu-id="400f0-111">-or-</span></span>  
  
 <span data-ttu-id="400f0-112">절대 경로를 검색할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="400f0-112">The system could not retrieve the absolute path.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="400f0-113">호출자에게 필요한 사용 권한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-113">The caller does not have the required permissions.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="400f0-114"><paramref name="assemblyPath" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="400f0-114"><paramref name="assemblyPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="400f0-115"><paramref name="assemblyPath" />에 콜론(":")이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="400f0-115"><paramref name="assemblyPath" /> contains a colon (":").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="400f0-116">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-116">The specified path, file name, or both exceed the system-defined maximum length.</span></span> <span data-ttu-id="400f0-117">예를 들어 Windows 기반 플랫폼에서 경로는 248자 미만이어야 하고 파일 이름은 260자 미만이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-117">For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="400f0-118">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-118">for the ability to access unmanaged code.</span></span> <span data-ttu-id="400f0-119">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="400f0-119">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string asmpath, string parname, string appname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstallAssembly(string asmpath, string parname, string appname) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (asmpath As String, parname As String, appname As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InstallAssembly(System::String ^ asmpath, System::String ^ parname, System::String ^ appname);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IComManagedImportUtil.InstallAssembly(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asmpath" Type="System.String" />
        <Parameter Name="parname" Type="System.String" />
        <Parameter Name="appname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="asmpath"><span data-ttu-id="400f0-120">어셈블리에 대한 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-120">The path for the assembly.</span></span></param>
        <param name="parname"><span data-ttu-id="400f0-121">COM+ 파티션 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-121">The COM+ partition name.</span></span></param>
        <param name="appname"><span data-ttu-id="400f0-122">COM+ 응용 프로그램 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-122">The COM+ application name.</span></span></param>
        <summary><span data-ttu-id="400f0-123">COM+ 응용 프로그램에 어셈블리를 설치합니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-123">Installs an assembly into a COM+ application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="400f0-124"><xref:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly%2A> 호출 <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=nameWithType>, 다음 단계를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-124"><xref:System.EnterpriseServices.Internal.ComManagedImportUtil.InstallAssembly%2A> calls <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A?displayProperty=nameWithType>, which performs the following steps:</span></span>  
  
1.  <span data-ttu-id="400f0-125">어셈블리의 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-125">Registration of the assembly.</span></span>  
  
2.  <span data-ttu-id="400f0-126">형식 라이브러리의 세대입니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-126">Generation of a type library.</span></span>  
  
3.  <span data-ttu-id="400f0-127">형식 라이브러리의 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-127">Registration of the type library.</span></span>  
  
4.  <span data-ttu-id="400f0-128">지정된 된 응용 프로그램에서 형식 라이브러리의 설치 합니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-128">Installation of the type library under the specified application.</span></span>  
  
5.  <span data-ttu-id="400f0-129">형식 라이브러리에 포함 된 구성의 구성입니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-129">Configuration of the components contained in the type library.</span></span>  
  
 <span data-ttu-id="400f0-130">이 메서드는 호출자가 로컬 컴퓨터에 대 한 관리자 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-130">This method requires the caller to have administrative privileges on the local computer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="400f0-131">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="400f0-131">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.RegistrationException"><span data-ttu-id="400f0-132">입력 어셈블리에 강력한 이름이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="400f0-132">The input assembly does not have a strong name.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="400f0-133">비관리 코드에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-133">for the ability to access unmanaged code.</span></span> <span data-ttu-id="400f0-134">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="400f0-134">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="400f0-135">레지스트리에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="400f0-135">for the ability to access the registry.</span></span> <span data-ttu-id="400f0-136">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="400f0-136">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>