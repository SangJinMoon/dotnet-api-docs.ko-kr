<Type Name="EnumeratorToEnumVariantMarshaler" FullName="System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06c8854923386f8c30445cca82f4b4b29b4fdd51" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52740469" /></Metadata><TypeSignature Language="C#" Value="public class EnumeratorToEnumVariantMarshaler : System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumeratorToEnumVariantMarshaler extends System.Object implements class System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumeratorToEnumVariantMarshaler&#xA;Implements ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumeratorToEnumVariantMarshaler : System::Runtime::InteropServices::ICustomMarshaler" />
  <TypeSignature Language="F#" Value="type EnumeratorToEnumVariantMarshaler = class&#xA;    interface ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>CustomMarshalers</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ICustomMarshaler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="37349-101">COM 마샬링 <see langword="IEnumVARIANT" /> .NET framework 인터페이스 <see cref="T:System.Collections.IEnumerator" /> 인터페이스 및 그 반대의 경우도 마찬가지입니다.</span><span class="sxs-lookup"><span data-stu-id="37349-101">Marshals the COM <see langword="IEnumVARIANT" /> interface to the .NET Framework <see cref="T:System.Collections.IEnumerator" /> interface, and vice versa.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37349-102">이 사용자 지정 마샬러 마샬링합니다 `IEnumVARIANT` 하 <xref:System.Collections.IEnumerator> 마샬링하고 <xref:System.Collections.IEnumerator> 에 `IEnumVARIANT`입니다.</span><span class="sxs-lookup"><span data-stu-id="37349-102">This custom marshaler marshals `IEnumVARIANT` to <xref:System.Collections.IEnumerator> and marshals <xref:System.Collections.IEnumerator> to `IEnumVARIANT`.</span></span> <span data-ttu-id="37349-103">CLR이 COM 열거자 및.NET 열거자이 클래스를 자동으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-103">The CLR automatically uses this class to bridge COM enumerators and .NET enumerators.</span></span> <span data-ttu-id="37349-104"><xref:System.Collections.IEnumerator> 반환한 형식 합니다 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 가져온된 COM 클래스의 메서드를 사용 하 여 `EnumeratorToEnumVariantMarshaler` 에 대 한 호출을 매핑할는 `IEnumVARIANT` -4의 DISPID 사용 하 여 COM 개체의 구성원에 의해 반환 된 인터페이스 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="37349-104">The <xref:System.Collections.IEnumerator> type returned by the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method in the imported COM class uses `EnumeratorToEnumVariantMarshaler` to map the calls to the `IEnumVARIANT` interface pointer returned by the COM object's member with a DISPID of -4.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".cctor">
      <MemberSignature Language="C#" Value="public EnumeratorToEnumVariantMarshaler ();" />
      <MemberSignature Language="ILAsm" Value=".method public static specialname rtspecialname void .cctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.#cctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumeratorToEnumVariantMarshaler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37349-105">정적 클래스 생성자를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-105">Provides the static class constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="37349-106">이 멤버는.NET Framework 버전 2.0 및 이후 버전에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37349-106">This member is removed in the .NET Framework version 2.0 and subsequent versions.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpManagedData (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpManagedData (pManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpManagedData(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpManagedData : obj -&gt; unit&#xA;override this.CleanUpManagedData : obj -&gt; unit" Usage="enumeratorToEnumVariantMarshaler.CleanUpManagedData pManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="37349-107">소멸 될 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="37349-107">The managed object to be destroyed.</span></span></param>
        <summary><span data-ttu-id="37349-108">더 이상 필요 없는 경우에 관리 되는 데이터의 필요한 정리를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-108">Performs necessary cleanup of the managed data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37349-109">CLR 할당 된 관리 되는 데이터를 정리 하려면이 메서드를 호출 합니다 <xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalNativeToManaged%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37349-109">The CLR calls this method to clean up managed data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpNativeData : nativeint -&gt; unit&#xA;override this.CleanUpNativeData : nativeint -&gt; unit" Usage="enumeratorToEnumVariantMarshaler.CleanUpNativeData pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="37349-110">소멸 될 관리 되지 않는 데이터에 대 한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="37349-110">A pointer to the unmanaged data to be destroyed.</span></span></param>
        <summary><span data-ttu-id="37349-111">더 이상 필요 없는 경우에 관리 되지 않는 데이터의 필요한 정리를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-111">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37349-112">CLR에서 할당 된 관리 되지 않는 데이터를 정리 하려면이 메서드를 호출 합니다 <xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalManagedToNative%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37349-112">The CLR calls this method to clean up the unmanaged data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.ICustomMarshaler GetInstance (string pstrCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.ICustomMarshaler GetInstance(string pstrCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (pstrCookie As String) As ICustomMarshaler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::ICustomMarshaler ^ GetInstance(System::String ^ pstrCookie);" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; System.Runtime.InteropServices.ICustomMarshaler" Usage="System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.GetInstance pstrCookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ICustomMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstrCookie" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pstrCookie"><span data-ttu-id="37349-113">사용자 지정 마샬러에서 사용할 수 있는 "쿠키" 매개 변수는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="37349-113">String "cookie" parameter that can be used by the custom marshaler.</span></span></param>
        <summary><span data-ttu-id="37349-114">사용자 지정 마샬러의 인스턴스를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-114">Returns an instance of the custom marshaler.</span></span></summary>
        <returns><span data-ttu-id="37349-115">사용자 지정 마샬러의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="37349-115">An instance of the custom marshaler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37349-116">모든 사용자 지정 마샬러는 아니지만이 메서드를 구현 해야 합니다 부분을 <xref:System.Runtime.InteropServices.ICustomMarshaler> 인터페이스 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-116">All custom marshalers must implement this method, although it is not part of the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public virtual int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetNativeDataSize();" />
      <MemberSignature Language="F#" Value="abstract member GetNativeDataSize : unit -&gt; int&#xA;override this.GetNativeDataSize : unit -&gt; int" Usage="enumeratorToEnumVariantMarshaler.GetNativeDataSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37349-117">마샬링될 관리 되지 않는 데이터의 바이트 크기를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-117">Returns the size in bytes of the unmanaged data to be marshaled.</span></span></summary>
        <returns><span data-ttu-id="37349-118">이 마샬러가 처리 하는 형식에 나타낼 때-1 값 형식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="37349-118">-1 to indicate the type this marshaler handles is not a value type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37349-119">값 형식의 사용자 지정 마샬링.NET Framework에서 지원 되지 않으므로,이 메서드는 항상-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-119">Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public virtual IntPtr MarshalManagedToNative (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalManagedToNative (pManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr MarshalManagedToNative(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member MarshalManagedToNative : obj -&gt; nativeint&#xA;override this.MarshalManagedToNative : obj -&gt; nativeint" Usage="enumeratorToEnumVariantMarshaler.MarshalManagedToNative pManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="37349-120">변환할 관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="37349-120">The managed object to be converted.</span></span></param>
        <summary><span data-ttu-id="37349-121">관리 코드에서 비관리 코드로 개체를 마샬링합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-121">Marshals an object from managed code to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="37349-122">관리 되지 않는 개체에 대 한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="37349-122">A pointer to the unmanaged object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37349-123">CLR 비관리 코드에 관리 코드에서 해당 개체를 변환 하는 관리 되는 개체의 지정 된 인스턴스를 사용 하 여이 메서드를 호출 하 고 해당 개체의 COM 뷰에 나타내는 적절 한 관리 되지 않는 개체에 대 한 포인터를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-123">The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37349-124"><paramref name="pManagedObj" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="37349-124"><paramref name="pManagedObj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public virtual object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member MarshalNativeToManaged : nativeint -&gt; obj&#xA;override this.MarshalNativeToManaged : nativeint -&gt; obj" Usage="enumeratorToEnumVariantMarshaler.MarshalNativeToManaged pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="37349-125">변환할 관리 되지 않는 개체에 대 한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="37349-125">A pointer to the unmanaged object to be converted.</span></span></param>
        <summary><span data-ttu-id="37349-126">관리 코드에 비관리 코드에서 개체를 마샬링합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-126">Marshals an object from unmanaged code to managed code.</span></span></summary>
        <returns><span data-ttu-id="37349-127">관리 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="37349-127">A managed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37349-128">CLR 비관리 코드에서 해당 개체를 관리 코드로 변환 하는 관리 되지 않는 개체에 지정된 된 포인터를 사용 하 여이 메서드를 호출 하 고 관리 되지 않는 데이터의 관리 되는 뷰를 나타내는 관리 되는 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="37349-128">The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37349-129"><paramref name="pNativeData" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="37349-129"><paramref name="pNativeData" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="37349-130">관리 되지 않는 개체 <paramref name="pNativeData" /> 가리키는 변환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="37349-130">The unmanaged object that <paramref name="pNativeData" /> points to could not be converted.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>