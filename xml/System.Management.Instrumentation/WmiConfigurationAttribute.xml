<Type Name="WmiConfigurationAttribute" FullName="System.Management.Instrumentation.WmiConfigurationAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f47c31bf60ecefe667735774d2a60d224e00e67" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37649219" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WmiConfigurationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WmiConfigurationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WmiConfigurationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiConfigurationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WmiConfigurationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4c495-101">The WmiConfiguration attribute indicates that an assembly contains code that implements a WMI provider by using the WMI.NET Provider Extensions model.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c495-101">The WmiConfiguration attribute indicates that an assembly contains code that implements a WMI provider by using the WMI.NET Provider Extensions model.</span>
      </span>
      <span data-ttu-id="4c495-102">The attribute accepts parameters that establish the high-level configuration of the implemented WMI provider.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c495-102">The attribute accepts parameters that establish the high-level configuration of the implemented WMI provider.</span>
      </span>
      <span data-ttu-id="4c495-103">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c495-103">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span>
      </span>
      <span data-ttu-id="4c495-104">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c495-104">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c495-105">다음 표에서 공급자 구성의 어떤 부분 있습니다 제어와 함께이 특성에서 허용 하는 매개 변수를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-105">The following table lists the parameters accepted by this attribute along with what aspect of the provider configuration it enables you to control.</span></span>  
  
|<span data-ttu-id="4c495-106">매개 변수</span><span class="sxs-lookup"><span data-stu-id="4c495-106">Parameter</span></span>|<span data-ttu-id="4c495-107">구성</span><span class="sxs-lookup"><span data-stu-id="4c495-107">Configures</span></span>|  
|---------------|----------------|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.Scope>|<span data-ttu-id="4c495-108">공급자가 클래스를 노출 하는 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-108">The namespace in which your provider exposes classes.</span></span>|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity>|<span data-ttu-id="4c495-109">-보안 (DACL)에 사용 된 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-109">-   The security (DACL) on the namespace used.</span></span>|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel>|<span data-ttu-id="4c495-110">공급자가 사용 될-호스팅 모델입니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-110">-   The hosting model that will be used by the provider.</span></span>|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel>|<span data-ttu-id="4c495-111">-공급자의 가장 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-111">-   The impersonation mode of the provider.</span></span>|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup>|<span data-ttu-id="4c495-112">호스팅 그룹 공급자가 속한입니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-112">The hosting group that the provider belongs to.</span></span> <span data-ttu-id="4c495-113">이 매개 변수는 in-process 공급자에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-113">This parameter only applies to in-process providers.</span></span>|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction>|<span data-ttu-id="4c495-114">WMI 공급자의 보안 (DACL).</span><span class="sxs-lookup"><span data-stu-id="4c495-114">The security (DACL) on the WMI provider.</span></span>|  
  
   
  
## Examples  
  
```  
// Specify that this assembly contains code that implements a WMI  
// Provider. Use the assembly:WmiConfiguration attribute to define  
// the WMI namespace, the hosting model, and the impersonation mode  
// of the WMI provider.  
// The attribute below specifies that the class this provider  
// exposes to WMI will be in the root/MortgageCalc namespace, will  
// use the decoupled hosting model and will not allow the provider  
// to impersonate its callers.  
  
[assembly: WmiConfiguration("root/MortgageCalc",HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false)]  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiConfigurationAttribute (string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiConfigurationAttribute(System::String ^ scope);" />
      <MemberSignature Language="F#" Value="new System.Management.Instrumentation.WmiConfigurationAttribute : string -&gt; System.Management.Instrumentation.WmiConfigurationAttribute" Usage="new System.Management.Instrumentation.WmiConfigurationAttribute scope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="4c495-115">The WMI namespace in which the provider will expose classes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-115">The WMI namespace in which the provider will expose classes.</span>
          </span>
          <span data-ttu-id="4c495-116">For example, "root\MyProviderNamespace".</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-116">For example, "root\MyProviderNamespace".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c495-117">Initializes a new instance of the <see cref="T:System.Management.Instrumentation.WmiConfigurationAttribute" /> class that specifies the WMI namespace in which the WMI provider will expose classes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-117">Initializes a new instance of the <see cref="T:System.Management.Instrumentation.WmiConfigurationAttribute" /> class that specifies the WMI namespace in which the WMI provider will expose classes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c495-118">WMI 공급자 네임 스페이스의 클래스를 노출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-118">A WMI provider must expose its classes in a namespace.</span></span> <span data-ttu-id="4c495-119">생성자 매개 변수로 범위를 사용 해야 하는 이유입니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-119">That is why the constructor requires scope as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingGroup">
      <MemberSignature Language="C#" Value="public string HostingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostingGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingGroup : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c495-120">Gets or sets the hosting group for the WMI provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-120">Gets or sets the hosting group for the WMI provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c495-121">
            <see cref="T:System.String" /> WMI 공급자의 호스팅 그룹을 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-121">A <see cref="T:System.String" /> value that indicates the hosting group for the WMI provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c495-122">호스트 그룹에만 적용할 수 있는 공급자 in process 호스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-122">Hosting groups only apply to providers that are hosted in-process.</span></span> <span data-ttu-id="4c495-123">분리 된 공급자 값 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-123">The value is ignored for decoupled providers.</span></span>  
  
 <span data-ttu-id="4c495-124">호스팅 그룹은 모든 호스팅 그룹 이름이 할당 된 in-process 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-124">A hosting group is a set of in-process providers that are all assigned the same hosting group name.</span></span> <span data-ttu-id="4c495-125">호스팅 그룹 이름이 공급자를 논리적으로 그룹화를 정의 하는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-125">The hosting group name is a string that you define to logically group the providers.</span></span> <span data-ttu-id="4c495-126">In-process 공급자와 동일한 보안 컨텍스트에서 실행의 동일한 호스팅 그룹에서의 모든 Wmiprvse.exe 프로세스의 단일 인스턴스 내에서 호스팅됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-126">All of the in-process providers in the same hosting group running under the same security context are hosted within a single instance of the Wmiprvse.exe process.</span></span> <span data-ttu-id="4c495-127">따라서 동일한 호스팅 그룹 및 보안 컨텍스트를 공유 하는 공급자는 동일한 서비스 호스트 프로세스를 공유 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-127">So, providers that share the same hosting group and security context share the same service host process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c495-128">다음 예제에서는 <xref:System.Management.Instrumentation.WmiConfigurationAttribute> 에 포함 된 어셈블리 Wmiprvse.exe 호스팅하는 프로세스는 또한 모든 인스턴스의 NetworkService 보안 컨텍스트에서 실행 되는 호스트 되는 in-process 공급자를 구현 함을 나타내는 데 사용 됩니다 동일한 호스트에서 다른 프로세스에서 공급자 그룹 NetworkService 보안 컨텍스트에서 실행할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-128">In the following example, the <xref:System.Management.Instrumentation.WmiConfigurationAttribute> is used to indicate that the assembly it is contained in implements an in-process provider that runs under the NetworkService security context and is hosted in a instance of the Wmiprvse.exe process that also hosts any other in-process providers in the same hosting group that also run within the NetworkService security context.</span></span>  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService), HostingGroup = "MyProviders"]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingModel">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.ManagementHostingModel HostingModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.ManagementHostingModel HostingModel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingModel As ManagementHostingModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::Instrumentation::ManagementHostingModel HostingModel { System::Management::Instrumentation::ManagementHostingModel get(); void set(System::Management::Instrumentation::ManagementHostingModel value); };" />
      <MemberSignature Language="F#" Value="member this.HostingModel : System.Management.Instrumentation.ManagementHostingModel with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.ManagementHostingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c495-129">Gets or sets the hosting model for the WMI provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-129">Gets or sets the hosting model for the WMI provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c495-130">
            <see cref="T:System.Management.Instrumentation.ManagementHostingModel" /> WMI 공급자의 호스팅 모델을 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-130">A <see cref="T:System.Management.Instrumentation.ManagementHostingModel" /> value that indicates the hosting model of the WMI provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c495-131">WMI 서비스 또는 응용 프로그램에서 WMI 공급자를 호스팅할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-131">WMI providers can be hosted by an application or by the WMI service.</span></span> <span data-ttu-id="4c495-132">WMI 공급자 호스트 응용 프로그램에서 분리 된 공급자 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-132">WMI providers hosted by an application are called decoupled providers.</span></span> <span data-ttu-id="4c495-133">WMI 서비스를 호스팅하는 in-process 공급자 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-133">Those hosted by the WMI service are called in-process providers.</span></span> <span data-ttu-id="4c495-134">호스팅 모델 값은 모두 호스트 하는 모델 및 in-process 공급자를 계정 (보안 컨텍스트) 공급자를 실행 하는 경우를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-134">The hosting model value determines both the hosting model and, in the case of in-process providers, the account (security context) under which the provider runs.</span></span> <span data-ttu-id="4c495-135">HostingModel의 가능한 값에 대 한 자세한 정보를 참조 하세요. <xref:System.Management.Instrumentation.ManagementHostingModel>합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-135">For more detail about the possible values of HostingModel, see <xref:System.Management.Instrumentation.ManagementHostingModel>.</span></span>  
  
 <span data-ttu-id="4c495-136">호스팅 모델에 대 한 자세한 내용은 참조는 [공급자 호스팅 및 보안](http://go.microsoft.com/fwlink/?LinkId=100075) WMI sdk msdn 항목.</span><span class="sxs-lookup"><span data-stu-id="4c495-136">To learn more about hosting models, see the [Provider Hosting and Security](http://go.microsoft.com/fwlink/?LinkId=100075) topic in the WMI SDK on MSDN.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c495-137">다음 예제에서는 <xref:System.Management.Instrumentation.WmiConfigurationAttribute> 에 포함 된 어셈블리 root\NVPair 네임 스페이스를 통해 노출 되는 공급자를 구현 함을 나타내는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-137">In the following example, the <xref:System.Management.Instrumentation.WmiConfigurationAttribute> is used to indicate that the assembly it is contained in implements a provider that is exposed through the root\NVPair namespace.</span></span> <span data-ttu-id="4c495-138">호스팅 모델 아니므로 <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled>는 in-process 공급자는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-138">Because the hosting model is not <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled>, it is an in-process provider.</span></span> <span data-ttu-id="4c495-139">값 <xref:System.Management.Instrumentation.ManagementHostingModel.NetworkService> in-process 공급자 NetworkService 보안 컨텍스트에서 실행 됨을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-139">The value <xref:System.Management.Instrumentation.ManagementHostingModel.NetworkService> indicates that the in-process provider runs under the NetworkService security context.</span></span>  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService)]  
```  
  
 <span data-ttu-id="4c495-140">다음 예제에서는 <xref:System.Management.Instrumentation.WmiConfigurationAttribute> 에 포함 된 어셈블리 root\NVPair 네임 스페이스를 통해 노출 되는 공급자를 구현 함을 나타내는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-140">In the next example, the <xref:System.Management.Instrumentation.WmiConfigurationAttribute> is used to indicate that the assembly it is contained in implements a provider that is exposed through the root\NVPair namespace.</span></span> <span data-ttu-id="4c495-141">값 <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> 분리 된 공급자 임을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-141">The value <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> indicates that it is a decoupled provider.</span></span>  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.Decoupled)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyLevel">
      <MemberSignature Language="C#" Value="public bool IdentifyLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IdentifyLevel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentifyLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IdentifyLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IdentifyLevel : bool with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c495-142">Gets or sets a value that specifies whether the WMI provider can impersonate its callers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-142">Gets or sets a value that specifies whether the WMI provider can impersonate its callers.</span>
          </span>
          <span data-ttu-id="4c495-143">If the value is false, the provider cannot impersonate, and if the value is true, the provider can impersonate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-143">If the value is false, the provider cannot impersonate, and if the value is true, the provider can impersonate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c495-144">공급자 수 또는 해당 호출자를 가장할 수 있는지를 나타내는 부울 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-144">A Boolean value that indicates whether a provider can or cannot impersonate its callers.</span>
          </span>
          <span data-ttu-id="4c495-145">값이 false 이면 공급자 가장할 수 없습니다, 하 고 값이 true 이면 하는 경우 공급자를 가장할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-145">If the value is false, the provider cannot impersonate, and if the value is true, the provider can impersonate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c495-146">자세한 내용은 온라인에서 MSDN library의 "Provider Hosting and Security" 항목을 참조 하세요 [ http://www.msdn.com ](http://www.msdn.com/)합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-146">For more information, see the "Provider Hosting and Security" topic in the MSDN library online at [http://www.msdn.com](http://www.msdn.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c495-147">다음 예제에서는 공급자가 호출자를 가장할 수 있음을 나타내려면 IdentifyLevel 매개 변수를 사용 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-147">The following example demonstrates how to use the IdentifyLevel parameter to indicate that the provider can impersonate its callers.</span></span>  
  
```  
[assembly: WmiConfiguration("root/MyProv", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = true]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceSecurity">
      <MemberSignature Language="C#" Value="public string NamespaceSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceSecurity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceSecurity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NamespaceSecurity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceSecurity : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c495-148">Gets or sets a Security Descriptor Definition Language (SDDL) string that specifies the security descriptor on the namespace in which the provider exposes management objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-148">Gets or sets a Security Descriptor Definition Language (SDDL) string that specifies the security descriptor on the namespace in which the provider exposes management objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c495-149">공급자가 관리 개체를 노출 하는 네임 스페이스의 보안 설명자를 나타내는 SDDL 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-149">An SDDL string that represents the security descriptor on the namespace in which the provider exposes management objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c495-150">SDDL 형식의 보안 설명자를 나타내는 방법에 대 한 자세한 내용은 참조는 [보안 설명자 문자열 형식을](http://go.microsoft.com/fwlink/?LinkId=100763) 온라인 MSDN 라이브러리의 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-150">For more information about how to represent security descriptors in SDDL format, see the [Security Descriptor String Format](http://go.microsoft.com/fwlink/?LinkId=100763) topic in the MSDN library online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c495-151">다음 예제에서는이 어셈블리에서 구현 되는 공급자가 WMI 클래스를 노출 하는 루트/SDTest 네임 스페이스에서 보안 설명자를 설정할 NamespaceSecurity 매개 변수를 사용 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-151">The following example demonstrates how to use the NamespaceSecurity parameter to set the security descriptor on the root/SDTest namespace in which the provider implemented in this assembly exposes WMI classes.</span></span>  
  
```  
[assembly: WmiConfiguration("root/SDTest", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false, NamespaceSecurity = "O:BAG:BAD:(A;CI;0x60003;;;WD)")]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scope As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scope { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scope : string" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c495-152">Gets or sets the WMI namespace in which the WMI provider exposes classes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-152">Gets or sets the WMI namespace in which the WMI provider exposes classes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c495-153">
            <see cref="T:System.String" /> WMI 공급자 클래스를 노출 하는 네임 스페이스를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-153">A <see cref="T:System.String" /> value that indicates the namespace in which the WMI provider exposes classes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c495-154">WMI 네임 스페이스는 WMI 리포지토리 내에서 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-154">A WMI namespace is a category within the WMI repository.</span></span> <span data-ttu-id="4c495-155">일반적으로 사용 되는 루트/cimv2 네임 스페이스 Common Information Model, 버전 2, 데스크톱 DMTF Management Task Force () 컨소시엄에 의해 정의 설명 하는 클래스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-155">The commonly-used root/cimv2 namespace houses classes that describe the Common Information Model, Version 2, defined by the Desktop Management Task Force (DMTF) consortium.</span></span> <span data-ttu-id="4c495-156">경우에 해당 네임 스페이스의 공급자를 노출 해야 표준 CIM 모델을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-156">You should only expose your providers in that namespace if you expanding upon the standand CIM model.</span></span> <span data-ttu-id="4c495-157">그렇지 않으면 사용자에 게 명확한 네임 스페이스에서 찾을 기대할 수 있는 WMI 클래스의 형식을 적절 한 네임 스페이스를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4c495-157">Otherwise, you should create an appropriate namespace that makes clear to users the type of WMI classes they can expect to find in the namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityRestriction">
      <MemberSignature Language="C#" Value="public string SecurityRestriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityRestriction" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityRestriction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityRestriction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRestriction : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c495-158">Gets or sets a security descriptor for the WMI provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-158">Gets or sets a security descriptor for the WMI provider.</span>
          </span>
          <span data-ttu-id="4c495-159">For more information, see the SecurityDescriptor property information in the "__Win32Provider" topic in the MSDN online library at [http://www.msdn.com](http://www.msdn.com/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-159">For more information, see the SecurityDescriptor property information in the "__Win32Provider" topic in the MSDN online library at [http://www.msdn.com](http://www.msdn.com/).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c495-160">
            <see cref="T:System.String" /> WMI 공급자에 대 한 보안 설명자를 포함 하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c495-160">A <see cref="T:System.String" /> value that contains the security descriptor for the WMI provider.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>