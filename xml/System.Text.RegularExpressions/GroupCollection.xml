<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GroupCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac588745e6fd7ac5403f750a8bd7fe3115e386d3db4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88745e6fd7ac5403f750a8bd7fe3115e386d3db4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Returns the set of captured groups in a single match.</source>
          <target state="translated">단일 일치 항목의 캡처된 그룹 집합을 반환합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> class is a zero-based collection class that consists of one or more <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects that provide information about captured groups in a regular expression match.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> 클래스는 하나 이상의 구성 된 0부터 시작 하는 컬렉션 클래스 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체에 대 한 정보를 제공 하는 캡처된 그룹이 정규식 일치 항목의 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The collection is immutable (read-only) and has no public constructor.</source>
          <target state="translated">컬렉션이 변경할 수 없습니다 (읽기 전용) 및 공용 생성자가 없습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object is returned by the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> 개체에서 반환 된 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The collection contains one or more <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph> objects.</source>
          <target state="translated">컬렉션에 하나 이상의 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>If the match is successful, the first element in the collection contains the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object that corresponds to the entire match.</source>
          <target state="translated">컬렉션의 첫 번째 요소를 포함 하는 성공한 일치 하는 경우는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 일치 하는 전체에 해당 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Each subsequent element represents a captured group, if the regular expression includes capturing groups.</source>
          <target state="translated">정규식 캡처링 그룹을 포함 하는 경우 각 후속 요소 그룹 캡처된 그룹을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Matches from numbered (unnamed) capturing groups appear in numeric order before matches from named capturing groups.</source>
          <target state="translated">일치 하는 번호가 매겨진된 (명명 되지 않은) 캡처링 그룹은 명명 된 캡처링 그룹에서 일치 하기 전에 숫자 순서로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>If the match is unsuccessful, the collection contains a single <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph> object whose <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A&gt;</ph> property is <ph id="ph3">`false`</ph> and whose <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph> property equals <ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">컬렉션에는 단일 일치가 성공적으로 수행 하는 경우 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType&gt;</ph> 개체 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A&gt;</ph> 속성은 <ph id="ph3">`false`</ph> 및 해당 <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph> 속성과 같은 <ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>For more information, see the "Grouping Constructs and Regular Expression Objects" section in the <bpt id="p1">[</bpt>Grouping Constructs<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept> article.</source>
          <target state="translated">자세한 내용은의 "그룹화 구문 및 정규식 개체" 섹션을 참조 하십시오.는 <bpt id="p1">[</bpt>그룹화 구문<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept> 문서.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as <ph id="ph1">`foreach`</ph> in C# and <ph id="ph2">`For Each`</ph>…<ph id="ph3">`Next`</ph></source>
          <target state="translated">언어에 의해 제공 된 열거자를 사용 해야 컬렉션의 멤버를 반복 하려면 (예: <ph id="ph1">`foreach`</ph> C# 및 <ph id="ph2">`For Each`</ph>...<ph id="ph3">`Next`</ph></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>in Visual Basic) instead of retrieving the enumerator that is returned by the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">Visual basic)에서 반환 되는 열거자를 검색 하는 대신는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>In addition, you can access individual numbered captured groups from the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> property (the indexer in C#), and you can access individual named captured groups from the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> property.</source>
          <target state="translated">또한 개별 번호가 매겨진된 캡처된 그룹에서 액세스할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> 속성 (C# 인덱서) 하 고 개별 명명 된 캡처된 그룹에서 액세스할 수는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Note that you can retrieve an array that contains the numbers and names of all capturing groups by calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph> methods, respectively.</source>
          <target state="translated">참고를 호출 하 여 숫자 및 모든 캡처링 그룹의 이름을 포함 하는 배열을 검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph> 메서드를 각각.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Both are instance methods and require that you instantiate a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> object that represents the regular expression to be matched.</source>
          <target state="translated">둘 다가 인스턴스 메서드를 이며를 인스턴스화하고 필요는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> 정규식 일치 여부를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The following example uses a regular expression with capturing groups to extract information about trademarks and registered trademarks used in text.</source>
          <target state="translated">다음 예제에서는 캡처링 그룹으로는 정규식을 사용 하 여 상표 및 등록된 상표 텍스트에 사용 하는 방법에 대 한 정보를 추출 하 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The regular expression pattern is <ph id="ph1">`\b(\w+?)([\u00AE\u2122])`</ph>, which is interpreted as shown in the following table.</source>
          <target state="translated">정규식 패턴은 <ph id="ph1">`\b(\w+?)([\u00AE\u2122])`</ph>를 다음 표와 같이 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Pattern</source>
          <target state="translated">무늬</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Look for a word boundary.</source>
          <target state="translated">단어 경계를 찾습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Look for one or more word characters.</source>
          <target state="translated">하나 이상의 단어 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Together, these form the trademarked name.</source>
          <target state="translated">함께 이러한 상표 이름을 형성 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>(Note that this regular expression assumes that a trademark consists of a single word.) This is the first capturing group.</source>
          <target state="translated">(이 정규식 상표 한 단어 구성 되어 있다고 가정 하는 참고 합니다.) 이 그룹은 첫 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Look for either the ® or the ™ character.</source>
          <target state="translated">하나를 찾습니다는® 또는™ 문자입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>This is the second capturing group.</source>
          <target state="translated">이 그룹은 두 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>For each match, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> contains three <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects.</source>
          <target state="translated">각 일치 항목에 대 한는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> 세 개 포함 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The first object contains the string that matches the entire regular expression.</source>
          <target state="translated">첫 번째 개체는 전체 정규식과 일치 하는 문자열을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The second object, which represents the first captured group, contains the product name.</source>
          <target state="translated">캡처된 첫 번째 그룹을 나타내는 두 번째 개체에는 제품 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>The third object, which represents the second captured group, contains the trademark or registered trademark symbol.</source>
          <target state="translated">두 번째 캡처된 그룹을 나타내는 세 번째 개체 포함 상표 또는 등록 상표 기호입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The array the collection is to be copied into.</source>
          <target state="translated">컬렉션을 복사할 대상 배열입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The position in the destination array where the copying is to begin.</source>
          <target state="translated">대상 배열에서 복사를 시작할 위치입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies all the elements of the collection to the given array beginning at the given index.</source>
          <target state="translated">지정된 인덱스에서 시작하여 지정된 배열에 컬렉션의 요소를 모두 복사합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.</source>
          <target state="translated">지정된 된 인덱스에서 시작 하 여 배열에 전체 컬렉션을 복사 하 고, 때문에 대상 배열의 컬렉션 이상이 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">이 멤버에 없으면는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">대상으로 하는 응용 프로그램을 개발 하려는 경우는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The following example extracts each word from a sentence and captures it in a capturing group, The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.CopyTo%2A&gt;</ph> method is then used to copy the elements in each match's <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object to an array that contains the capturing groups from all matches.</source>
          <target state="translated">다음 예제에서는 문장에서 각 단어를 추출 하 고 캡처 그룹에 캡처합니다는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.CopyTo%2A&gt;</ph> 메서드는 다음에 일치 하는 문자열의 요소를 복사 하는 데 사용 됩니다 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> 모든 일치 항목에서 캡처를 포함 하는 배열에 개체를 그룹화 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The individual captured words are then displayed to the console.</source>
          <target state="translated">그러면 캡처된 개별 단어는 콘솔에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>The regular expression is defined as follows:</source>
          <target state="translated">정규식은 다음과 같이 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Pattern</source>
          <target state="translated">무늬</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Match a word boundary.</source>
          <target state="translated">단어 경계를 찾습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Match one or more non-white space characters.</source>
          <target state="translated">하나 이상의 공백이 아닌 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Assign them to the first capturing group.</source>
          <target state="translated">첫 번째 캡처링 그룹에 지정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>Match a word boundary.</source>
          <target state="translated">단어 경계를 찾습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is outside the bounds of <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="array" /&gt;</ph>의 범위 밖인 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /&gt;</ph> is outside the bounds of <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph>에 <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /&gt;</ph>를 더한 값이 <ph id="ph3">&lt;paramref name="array" /&gt;</ph>의 범위 밖인 경우</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>Returns the number of groups in the collection.</source>
          <target state="translated">컬렉션의 그룹 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>The number of groups in the collection.</source>
          <target state="translated">컬렉션의 그룹 수입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object always has at least one member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> 개체의 구성원을 하나 이상 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Count">
          <source>If a match is unsuccessful, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object that contains a single member.</source>
          <target state="translated">일치 하는 성공 하면는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> 속성에서 반환 된 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> 단일 멤버를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>Provides an enumerator that iterates through the collection.</source>
          <target state="translated">컬렉션을 반복하는 열거자를 제공합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>An enumerator that contains all <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Group" /&gt;</ph> objects in the <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Group" /&gt;</ph>의 모든 <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph> 개체를 포함하는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>Instead of calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> method to retrieve an enumerator that lets you iterate through the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects in the collection, you should use the group iteration construct (such as <ph id="ph3">`foreach`</ph> in C# and <ph id="ph4">`For Each`</ph>…<ph id="ph5">`Next`</ph></source>
          <target state="translated">호출 하는 대신는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> 을 반복할 수 있는 열거자를 검색 하는 메서드는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 그룹 반복 구문을 사용 해야 컬렉션의 개체 (같은 <ph id="ph3">`foreach`</ph> C# 및 <ph id="ph4">`For Each`</ph>...<ph id="ph5">`Next`</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
          <source>in Visual Basic) that is provided by your programming language.</source>
          <target state="translated">Visual Basic)에서는 선택한 프로그래밍 언어에서 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
          <source>Gets a value that indicates whether the collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> in all cases.</source>
          <target state="translated">모든 경우에 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source>Gets a value that indicates whether access to the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph> is synchronized (thread-safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph>에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated">모든 경우에 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">이 멤버에 없으면는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">대상으로 하는 응용 프로그램을 개발 하려는 경우는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph> 속성 대신 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.GroupCollection">
          <source>Enables access to a single member of the collection by integer or string index.</source>
          <target state="translated">정수나 문자열 인덱스에 따라 컬렉션의 단일 멤버에 액세스할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The zero-based index of the collection member to be retrieved.</source>
          <target state="translated">검색할 컬렉션 멤버의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Enables access to a member of the collection by integer index.</source>
          <target state="translated">정수 인덱스에 따라 컬렉션의 멤버에 대한 액세스를 가능하게 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The member of the collection specified by <ph id="ph1">&lt;paramref name="groupnum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="groupnum" /&gt;</ph>으로 지정한 컬렉션의 멤버입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> property is the index (in C#) or the default property (in Visual Basic) of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> 속성은 인덱스 (C#) 또는의 기본 속성 (Visual Basic)에서는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>It allows you to enumerate the members of the collection by using a <ph id="ph1">`foreach`</ph> statement in C# or a <ph id="ph2">`For Each`</ph> statement in Visual Basic.</source>
          <target state="translated">사용 하 여 컬렉션의 멤버를 열거할 수 있습니다는 <ph id="ph1">`foreach`</ph> C# 문 또는 <ph id="ph2">`For Each`</ph> Visual Basic의 문.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can also use this property to retrieve individual captured groups by their index number.</source>
          <target state="translated">이 속성을 사용 하 여 캡처된 그룹의 개별 인덱스 번호로 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can retrieve an array that contains the numbers of all capturing groups in a regular expression by calling the instance <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">인스턴스를 호출 하 여 정규식의 캡처링 그룹을 모든 숫자를 포함 하는 배열을 검색 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can also map named capturing groups to their numbers by calling the instance <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">인스턴스를 호출 하 여 해당 번호를 명명 된 캡처링 그룹을 매핑할 수도 있습니다 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>You can determine the number of items in the collection by retrieving the value of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Count%2A&gt;</ph> property.</source>
          <target state="translated">값을 검색 하 여 컬렉션의 항목 수를 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Count%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Valid values for the <ph id="ph1">`groupnum`</ph> parameter range from 0 to one less than the number of items in the collection.</source>
          <target state="translated">에 대 한 유효한 값은 <ph id="ph1">`groupnum`</ph> 컬렉션의 항목 개수 보다 1 작은 값을 0에서 매개 변수 범위입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> property always has at least one member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection&gt;</ph> 에서 반환 된 개체는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType&gt;</ph> 속성은 항상 구성원을 하나 이상에 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>If the regular expression engine cannot find any matches in a particular input string, the single <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object in the collection has its <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> property set to <ph id="ph3">`false`</ph> and its <ph id="ph4">`Group.Value`</ph> property set to <ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">정규식 엔진은 단일 특정 입력된 문자열에서 일치 항목을 찾을 수 없는 경우 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 컬렉션의 개체에 해당 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> 속성이로 설정 <ph id="ph3">`false`</ph> 및 해당 <ph id="ph4">`Group.Value`</ph> 속성이로 설정 <ph id="ph5">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>If <ph id="ph1">`groupnum`</ph> is not the index of a member of the collection, or if <ph id="ph2">`groupnum`</ph> is the index of a capturing group that has not been matched in the input string, the method returns a <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object whose <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph5">`false`</ph> and whose <ph id="ph6">`Group.Value`</ph> property is <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`groupnum`</ph> 인덱스가 컬렉션의 멤버 이거나 <ph id="ph2">`groupnum`</ph> 일치 되지 입력된 문자열에서 메서드를 반환 하는 캡처링 그룹의 인덱스는 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체 <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> 속성은 <ph id="ph5">`false`</ph> 및 해당 <ph id="ph6">`Group.Value`</ph> 속성은 <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The following example defines a regular expression that consists of two numbered groups.</source>
          <target state="translated">다음 예제에서는 두 개의 번호가 매겨진된 그룹으로 구성 된 정규식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The first group captures one or more consecutive digits.</source>
          <target state="translated">첫 번째 그룹은 하나 이상의 연속 된 숫자를 캡처합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The second group matches a single character.</source>
          <target state="translated">두 번째 그룹은 단일 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Because the regular expression engine looks for zero or one occurrence of the first group, it does not always find a match even if the regular expression match is successful.</source>
          <target state="translated">정규식 엔진은 첫 번째 그룹의 0 번 이상 발생 하기 때문에 항상 찾을 수 없는 일치 하는 정규식 일치가 성공적으로 수행 하는 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The example then illustrates the result when the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression.</source>
          <target state="translated">다음 예제는 결과 때는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29&gt;</ph> 속성 일치 하지 않는 그룹, 일치 하는 그룹 및 정규식에서 정의 되지 않은 그룹을 검색 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>The example defines a regular expression pattern <ph id="ph1">`(\d+)*(\w)\2`</ph>, which is interpreted as shown in the following table.</source>
          <target state="translated">이 예제에서는 정규식 패턴을 정의 <ph id="ph1">`(\d+)*(\w)\2`</ph>을 다음 표와 같이 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Pattern</source>
          <target state="translated">무늬</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Match one or more occurrence of a decimal digit.</source>
          <target state="translated">10 진수의 하나 이상의 발생을 찾습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>This is the first capturing group.</source>
          <target state="translated">이 그룹은 첫 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Match this pattern either zero or one time.</source>
          <target state="translated">이 패턴을 0 개 또는 1 개 찾습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>This is the second capturing group.</source>
          <target state="translated">이 그룹은 두 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
          <source>Match the string captured by the second capturing group.</source>
          <target state="translated">두 번째 캡처링 그룹에 의해 캡처된 문자열을 찾습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The name of a capturing group.</source>
          <target state="translated">캡처링 그룹의 이름입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Enables access to a member of the collection by string index.</source>
          <target state="translated">문자열 인덱스에 따라 컬렉션의 멤버에 대한 액세스를 가능하게 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The member of the collection specified by <ph id="ph1">&lt;paramref name="groupname" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="groupname" /&gt;</ph>으로 지정한 컬렉션의 멤버입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source><ph id="ph1">`groupName`</ph> can be either the name of a capturing group that is defined by the <ph id="ph2">`(?&lt;`</ph><bpt id="p1">*</bpt>name<ept id="p1">*</ept><ph id="ph3">`&gt;)`</ph> element in a regular expression, or the string representation of the number of a capturing group that is defined by a grouping construct.</source>
          <target state="translated"><ph id="ph1">`groupName`</ph> 정의 된 캡처링 그룹의 이름일 수 있습니다는 <ph id="ph2">`(?&lt;`</ph> <bpt id="p1">*</bpt>이름<ept id="p1">*</ept> <ph id="ph3">`&gt;)`</ph> 요소는 정규식 또는 그룹화에서 정의 된 캡처링 그룹의 숫자의 문자열 표현을 구문입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>For more information about groups in regular expressions, see <bpt id="p1">[</bpt>Grouping Constructs<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept>.</source>
          <target state="translated">정규식의 그룹에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>그룹화 구문<ept id="p1">](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>You can retrieve the names of all the captured groups in a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">모든 캡처된 그룹의 이름을 검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> 호출 하 여 개체는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>You can also map the numbers of capturing groups in a regular expression to their names by calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">호출 하 여 그룹의 이름으로는 정규식에서 캡처의 번호를 매핑할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Individual names from the array can then be passed to the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> property to retrieve the captured string.</source>
          <target state="translated">배열에서 개별 이름을에 전달 될 수는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> 캡처된 문자열을 검색 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>If <ph id="ph1">`groupname`</ph> is not the name of a capturing group in the collection, or if <ph id="ph2">`groupname`</ph> is the name of a capturing group that has not been matched in the input string, the method returns a <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object whose <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph5">`false`</ph> and whose <ph id="ph6">`Group.Value`</ph> property is <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`groupname`</ph> 컬렉션에서 캡처링 그룹의 이름이 올바르지 경우 <ph id="ph2">`groupname`</ph> 일치 되지 입력된 문자열에서 메서드를 반환 하는 캡처링 그룹의 이름인는 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체 <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType&gt;</ph> 속성은 <ph id="ph5">`false`</ph> 및 해당 <ph id="ph6">`Group.Value`</ph> 속성은 <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The following example defines a regular expression that consists of two named groups.</source>
          <target state="translated">다음 예제에서는 두 개의 명명 된 그룹으로 구성 된 정규식을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The first group, <ph id="ph1">`numbers`</ph>, captures one or more consecutive digits.</source>
          <target state="translated">첫 번째 그룹 <ph id="ph1">`numbers`</ph>, 하나 이상의 연속 된 숫자를 캡처합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The second group, <ph id="ph1">`letter`</ph>, matches a single character.</source>
          <target state="translated">두 번째 그룹 <ph id="ph1">`letter`</ph>, 단일 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Because the regular expression engine looks for zero or one occurrence of the pattern defined by the <ph id="ph1">`numbers`</ph> group, the <ph id="ph2">`numbers`</ph> group is not always present even if a match is successful.</source>
          <target state="translated">정규식 엔진에 정의 된 패턴의 0 번 이상 발생 하기 때문에 <ph id="ph1">`numbers`</ph> 그룹은 <ph id="ph2">`numbers`</ph> 일치가 성공적으로 수행 하는 경우에 그룹은 항상 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The example then illustrates the result when the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression.</source>
          <target state="translated">다음 예제는 결과 때는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29&gt;</ph> 속성 일치 하지 않는 그룹, 일치 하는 그룹 및 정규식에서 정의 되지 않은 그룹을 검색 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>The example defines a regular expression pattern <ph id="ph1">`(?&lt;numbers&gt;\d+)*(?&lt;letter&gt;\w)\k&lt;letter&gt;`</ph>, which is interpreted as shown in the following table.</source>
          <target state="translated">이 예제에서는 정규식 패턴을 정의 <ph id="ph1">`(?&lt;numbers&gt;\d+)*(?&lt;letter&gt;\w)\k&lt;letter&gt;`</ph>을 다음 표와 같이 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Pattern</source>
          <target state="translated">무늬</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match one or more occurrence of a decimal digit.</source>
          <target state="translated">10 진수의 하나 이상의 발생을 찾습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Name this the <ph id="ph1">`numbers`</ph> capturing group.</source>
          <target state="translated">이 <ph id="ph1">`numbers`</ph> 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match this pattern either zero or one time.</source>
          <target state="translated">이 패턴을 0 개 또는 1 개 찾습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match a single word character.</source>
          <target state="translated">단일 단어 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Name this the <ph id="ph1">`letter`</ph> capturing group.</source>
          <target state="translated">이 <ph id="ph1">`letter`</ph> 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
          <source>Match the string captured by the <ph id="ph1">`letter`</ph> capturing group.</source>
          <target state="translated">에 의해 캡처된 문자열 일치는 <ph id="ph1">`letter`</ph> 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.GroupCollection" /&gt;</ph>에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> object to synchronize.</source>
          <target state="translated">동기화할 <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Match" /&gt;</ph> 개체의 복사본입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">이 멤버에 없으면는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">대상으로 하는 응용 프로그램을 개발 하려는 경우는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph> 속성 대신 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>