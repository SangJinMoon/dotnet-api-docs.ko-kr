<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Capture.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58dfeb69aa0ac9f45e2436969c276f2960db7be09.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dfeb69aa0ac9f45e2436969c276f2960db7be09</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.Capture">
          <source>Represents the results from a single successful subexpression capture.</source>
          <target state="translated">성공한 단일 하위 식 캡처의 결과를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object is immutable and has no public constructor.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 개체는 변경할 수 없습니다 및 public 생성자가 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Instances are returned through the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object, which is returned by the <ph id="ph2">`Match.Captures`</ph> and <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">인스턴스를 통해 반환 되는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 에서 반환 되는 개체는 <ph id="ph2">`Match.Captures`</ph> 및 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> 속성 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>However, the <ph id="ph1">`Match.Captures`</ph> property provides information about the same match as the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object.</source>
          <target state="translated">그러나는 <ph id="ph1">`Match.Captures`</ph> 으로 동일한 일치 하는 방법에 대 한 정보를 제공 하는 속성은 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>If you do not apply a  to a capturing group, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> with a single <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that provides information about the same capture as the <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object.</source>
          <target state="translated">적용 되지 않은 경우는 캡처링 그룹에는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> 속성에서 반환 된 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 단일 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 개체와 동일한 캡처에 대 한 정보를 제공 하는 <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>If you do apply a quantifier to a capturing group, the <ph id="ph1">`Group.Index`</ph>, <ph id="ph2">`Group.Length`</ph>, and <ph id="ph3">`Group.Value`</ph> properties provide information only about the last captured group, whereas the <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the <ph id="ph5">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> provide information about all subexpression captures.</source>
          <target state="translated">캡처링 그룹에 수량자를 적용 않으면는 <ph id="ph1">`Group.Index`</ph>, <ph id="ph2">`Group.Length`</ph>, 및 <ph id="ph3">`Group.Value`</ph> 속성 캡처된 마지막 그룹에 대 한 정보를 제공 하지만 <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 개체에 <ph id="ph5">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 모두에 대 한 정보를 제공 합니다. 하위 식을 캡처합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The example provides an illustration.</source>
          <target state="translated">예제에서는 그림을 제공합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</source>
          <target state="translated">다음 예제에서는 마침표를 제외 하 고 문장 부호 없는 들어 있는 문장 일치 하는 정규식 정의 (".").</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The regular expression pattern <ph id="ph1">`((\w+)[\s.])+`</ph> is defined as shown in the following table.</source>
          <target state="translated">정규식 패턴 <ph id="ph1">`((\w+)[\s.])+`</ph>는 다음 테이블과 같이 정의됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</source>
          <target state="translated">Note이 정규식은 수량자 (+)는 전체 정규식에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Pattern</source>
          <target state="translated">무늬</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Match one or more word characters.</source>
          <target state="translated">하나 이상의 단어 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>This is the second capturing group.</source>
          <target state="translated">이 그룹은 두 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Match a white-space character or period (".").</source>
          <target state="translated">공백 문자 또는 마침표 (".").</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Match one or more word characters followed by a white-space character or period (".").</source>
          <target state="translated">하나 이상의 단어 문자 뒤에 공백 문자 또는 마침표를 찾습니다 (".").</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>This is the first capturing group.</source>
          <target state="translated">이 그룹은 첫 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</source>
          <target state="translated">일치 항목을 하나 이상의 단어 문자 또는 문자 뒤에 공백 문자 또는 마침표 (".").</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>In this example, the input string consists of two sentences.</source>
          <target state="translated">이 예제에서는 입력된 문자열 두 문장 이루어져 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>As the output shows, the first sentence consists of only one word, so the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object has a single <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that represents the same capture as the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object.</source>
          <target state="translated">출력에서 볼 수 있듯이 첫 번째 문장 하나만 단어로 구성 하므로 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 개체에는 단일 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 와 동일한 캡처를 나타내는 개체의 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The second sentence consists of multiple words, so the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects only contain information about the last matched subexpression.</source>
          <target state="translated">두 번째 문장을 여러 단어로 구성 하므로 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체 마지막 일치 하는 하위 식에 대 한 정보만 포함 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</source>
          <target state="translated">나타내는 첫 번째 캡처 그룹 1에 마침표가 있는 문장의 마지막 단어를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>Group 2, which represents the second capture, contains the last word in the sentence.</source>
          <target state="translated">나타내는 두 번째 캡처 그룹 2는 문장에 있는 마지막 단어를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>However, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the group's <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object capture each subexpression match.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 해당 그룹의 개체 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 개체 하위 식을 일치 하는 문자열을 캡처합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 캡처의 첫 번째 캡처링 그룹의 컬렉션에 있는 개체에는 각 캡처된 단어와 공백 문자 또는 기간에 대 한 정보가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.Capture">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the second capturing group's collection of captures contain information about each captured word.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 캡처의 두 번째 캡처링 그룹의 컬렉션에 있는 개체에는 캡처된 각 단어에 대 한 정보가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.Capture.Index">
          <source>The position in the original string where the first character of the captured substring is found.</source>
          <target state="translated">원래 문자열에서 캡처된 부분 문자열의 첫째 문자를 찾은 위치입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Index">
          <source>The zero-based starting position in the original string where the captured substring is found.</source>
          <target state="translated">원래 문자열에서 캡처된 부분 문자열을 찾은 0부터 시작하는 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.Capture.Length">
          <source>Gets the length of the captured substring.</source>
          <target state="translated">캡처된 부분 문자열의 길이를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Length">
          <source>The length of the captured substring.</source>
          <target state="translated">캡처된 부분 문자열의 길이입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.Capture.ToString">
          <source>Retrieves the captured substring from the input string by calling the <ph id="ph1">&lt;see cref="P:System.Text.RegularExpressions.Capture.Value" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.RegularExpressions.Capture.Value" /&gt;</ph> 속성을 호출하여 입력 문자열로부터 캡처된 하위 문자열을 검색합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.Capture.ToString">
          <source>The substring that was captured by the match.</source>
          <target state="translated">일치 항목으로 캡처한 부분 문자열입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.Capture.ToString">
          <source><ph id="ph1">`ToString`</ph> is actually an internal call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`ToString`</ph> 실제로 내부 호출 하 여 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Gets the captured substring from the input string.</source>
          <target state="translated">입력 문자열에서 캡처된 부분 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The substring that is captured by the match.</source>
          <target state="translated">일치 항목으로 캡처한 부분 문자열입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>If a call to the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType&gt;</ph> method fails to find a match, the value of the returned <ph id="ph3">`Match.Value`</ph> property is <ph id="ph4">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType&gt;</ph> 메서드가 실패 값 반환 된 일치 항목을 찾지 <ph id="ph3">`Match.Value`</ph> 속성은 <ph id="ph4">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>If the regular expression engine is unable to match a capturing group.</source>
          <target state="translated">정규식 엔진이 캡처링 그룹과 일치 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>the value of the returned <ph id="ph1">`Group.Value`</ph> property is <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">반환 된 값 <ph id="ph1">`Group.Value`</ph> 속성은 <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>See the second example for an illustration.</source>
          <target state="translated">그림에 대 한 두 번째 예제를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The following example defines a regular expression that matches sentences that contain no punctuation except for a period (".").</source>
          <target state="translated">다음 예제에서는 마침표를 제외 하 고 문장 부호 없는 들어 있는 문장 일치 하는 정규식 정의 (".").</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The <ph id="ph1">`Match.Value`</ph> property displays the result string, which consists of a matched sentence, for each match.</source>
          <target state="translated"><ph id="ph1">`Match.Value`</ph> 속성 각 일치 항목에 대 한 일치 하는 문장에 구성 된 결과 문자열을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The <ph id="ph1">`Group.Value`</ph> property displays the result string for each capturing group; it consists of the last string captured by that capturing group.</source>
          <target state="translated"><ph id="ph1">`Group.Value`</ph> 속성 각 캡처링 그룹에 대 한 결과 문자열을 표시 하며 해당 캡처링 그룹에 의해 캡처된 마지막 문자열 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType&gt;</ph> property displays the result string for each capture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType&gt;</ph> 속성 각 캡처에 대 한 결과 문자열을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The regular expression pattern <ph id="ph1">`((\w+)[\s.])+`</ph> is defined as shown in the following table.</source>
          <target state="translated">정규식 패턴 <ph id="ph1">`((\w+)[\s.])+`</ph>는 다음 테이블과 같이 정의됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Note that in this regular expression, a quantifier (+) is applied to the entire regular expression.</source>
          <target state="translated">Note이 정규식은 수량자 (+)는 전체 정규식에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Pattern</source>
          <target state="translated">무늬</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more word characters.</source>
          <target state="translated">하나 이상의 단어 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>This is the second capturing group.</source>
          <target state="translated">이 그룹은 두 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match a white-space character or period (".").</source>
          <target state="translated">공백 문자 또는 마침표 (".").</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more word characters followed by a white-space character or period (".").</source>
          <target state="translated">하나 이상의 단어 문자 뒤에 공백 문자 또는 마침표를 찾습니다 (".").</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>This is the first capturing group.</source>
          <target state="translated">이 그룹은 첫 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more occurrences of a word character or characters followed by a white-space character or period (".").</source>
          <target state="translated">일치 항목을 하나 이상의 단어 문자 또는 문자 뒤에 공백 문자 또는 마침표 (".").</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>In this example, the input string consists of two sentences.</source>
          <target state="translated">이 예제에서는 입력된 문자열 두 문장 이루어져 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>As the output shows, the first sentence consists of only one word, so the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object has a single <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that represents the same capture as the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object.</source>
          <target state="translated">출력에서 볼 수 있듯이 첫 번째 문장 하나만 단어로 구성 하므로 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 개체에는 단일 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 와 동일한 캡처를 나타내는 개체의 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The second sentence consists of multiple words, so the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects only contain information about the last matched subexpression.</source>
          <target state="translated">두 번째 문장을 여러 단어로 구성 하므로 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체 마지막 일치 하는 하위 식에 대 한 정보만 포함 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Group 1, which represents the first capture, contains the last word in the sentence that has a closing period.</source>
          <target state="translated">나타내는 첫 번째 캡처 그룹 1에 마침표가 있는 문장의 마지막 단어를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Group 2, which represents the second capture, contains the last word in the sentence.</source>
          <target state="translated">나타내는 두 번째 캡처 그룹 2는 문장에 있는 마지막 단어를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>However, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the group's <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object capture each subexpression match.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 해당 그룹의 개체 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 개체 하위 식을 일치 하는 문자열을 캡처합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the first capturing group's collection of captures contain information about each captured word and white-space character or period.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 캡처의 첫 번째 캡처링 그룹의 컬렉션에 있는 개체에는 각 캡처된 단어와 공백 문자 또는 기간에 대 한 정보가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the second capturing group's collection of captures contain information about each captured word.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 캡처의 두 번째 캡처링 그룹의 컬렉션에 있는 개체에는 캡처된 각 단어에 대 한 정보가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The following example uses a regular expression pattern, <ph id="ph1">`^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`</ph>, to match a product number that consists of two parts separated by a period.</source>
          <target state="translated">다음 예제에서는 정규식 패턴을 사용 하 여 <ph id="ph1">`^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`</ph>, 마침표로 구분 하는 두 부분으로 구성 된 제품 수와 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Both parts consist of alphabetic characters followed by optional numbers.</source>
          <target state="translated">알파벳 문자 뒤에 선택적인 번호입니다. 두 부분으로 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Because the first input string does not match the pattern, the value of the returned <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> object's <ph id="ph2">`Value`</ph> property is <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">첫 번째 입력된 문자열 패턴을 반환 된 값과 일치 하지 않으므로 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType&gt;</ph> 개체의 <ph id="ph2">`Value`</ph> 속성은 <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Similarly, when the regular expression pattern is unable to match a capturing group, the value of the corresponding <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object's <ph id="ph2">`Value`</ph> property is <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">마찬가지로, 정규식 패턴 수 없는 경우 캡처 그룹, 해당 값에 맞게 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체의 <ph id="ph2">`Value`</ph> 속성은 <ph id="ph3">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The regular expression pattern is defined as shown in the following table:</source>
          <target state="translated">정규식 패턴은 다음 표와 같이 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Pattern</source>
          <target state="translated">무늬</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Begin the match at the beginning of the string.</source>
          <target state="translated">문자열의 시작 부분에서 검색을 시작합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more occurrences of any character from a to z.</source>
          <target state="translated">하나 이상의 문자를 찾습니다는 오름차순입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Because the regular expression engine is passed the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType&gt;</ph> option, this comparison is case-insensitive.</source>
          <target state="translated">정규식 엔진에 전달 되기 때문에 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType&gt;</ph> 옵션을이 비교는 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>This is the first capturing group.</source>
          <target state="translated">이 그룹은 첫 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match zero or one occurrence of one or more decimal digits.</source>
          <target state="translated">하나 이상의 10 진수의 0 번 이상 발생을 찾습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>This is the second capturing group.</source>
          <target state="translated">이 그룹은 두 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match a literal period character.</source>
          <target state="translated">리터럴 마침표 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more occurrences of any character from a to z.</source>
          <target state="translated">하나 이상의 문자를 찾습니다는 오름차순입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>The comparison is case-insensitive.</source>
          <target state="translated">비교는 대/소문자 구분 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match zero or more decimal digits.</source>
          <target state="translated">0번 이상 나오는 10진수를 찾습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>A single matched digit is the fourth capturing group.</source>
          <target state="translated">일치 하는 단일 숫자 네 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Match one or more alphabetic characters from a to z followed by zero, one, or more decimal digits.</source>
          <target state="translated">하나 이상의 알파벳 문자를 찾습니다는 0 개 또는 하나 이상의 10 진수 뒤 오름차순입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>This is the fourth capturing group.</source>
          <target state="translated">이 그룹은 네 번째 캡처링 그룹입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.Capture.Value">
          <source>Conclude the match at the end of the string.</source>
          <target state="translated">문자열의 끝에서 일치 항목 찾기를 결론을 내립니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>