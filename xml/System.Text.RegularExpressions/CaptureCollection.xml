<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CaptureCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59d47c91b9b18202223de4773ff3948c6ed45bcae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d47c91b9b18202223de4773ff3948c6ed45bcae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>Represents the set of captures made by a single capturing group.</source>
          <target state="translated">단일 캡처링 그룹에서 만든 캡처 집합을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The collection is immutable (read-only) and has no public constructor.</source>
          <target state="translated">컬렉션이 변경할 수 없습니다 (읽기 전용) 및 공용 생성자가 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object contains one or more <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 개체 하나 이상 포함 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>Instances of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> class are returned by the following properties:</source>
          <target state="translated">인스턴스는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 클래스 같은 속성으로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>Each member of the collection represents a substring captured by a capturing group.</source>
          <target state="translated">컬렉션의 각 멤버는 캡처링 그룹에 의해 캡처된 부분 문자열을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>If a quantifier is not applied to a capturing group, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> includes a single <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that represents the same captured substring as the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object.</source>
          <target state="translated">수량자는 캡처링 그룹에 적용 되지 않으면는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 하나만 포함 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 동일한을 나타내는 개체 캡처된 부분 문자열으로는 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>If a quantifier is applied to a capturing group, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> includes one <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object for each captured substring, and the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object provides information only about the last captured substring.</source>
          <target state="translated">캡처링 그룹에 수량자가 적용 하는 경우는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 하나 포함 되어 있습니다 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 캡처된 부분 문자열을 각각에 대 한 개체 및 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체 캡처된 마지막 부분 문자열에 대 한 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The <ph id="ph1">`Match.Captures`</ph> property.</source>
          <target state="translated"><ph id="ph1">`Match.Captures`</ph> 속성</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>In this case, the collection consists of a single <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> object that provides information about the match as a whole.</source>
          <target state="translated">Single 값의 컬렉션을 구성 하는 경우에 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 전체적으로 일치 하는 방법에 대 한 정보를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>That is, the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object provides the same information as the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object.</source>
          <target state="translated">즉,는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 와 동일한 정보를 제공 하는 개체는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as <ph id="ph1">`foreach`</ph> in C# and <ph id="ph2">`For Each`</ph>…<ph id="ph3">`Next`</ph></source>
          <target state="translated">언어에 의해 제공 된 열거자를 사용 해야 컬렉션의 멤버를 반복 하려면 (예: <ph id="ph1">`foreach`</ph> C# 및 <ph id="ph2">`For Each`</ph>...<ph id="ph3">`Next`</ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>in Visual Basic) instead of retrieving the enumerator that is returned by the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">Visual basic)에서 반환 되는 열거자를 검색 하는 대신는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.CaptureCollection.GetEnumerator%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The following example compares the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">`Match.Captures`</ph> properties.</source>
          <target state="translated">다음 예제에서는 비교는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 개체에 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 에서 반환 된 개체는 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph4">`Match.Captures`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>It also compares <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects with the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">또한 비교 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 개체와 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Capture&gt;</ph> 개체에 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 에서 반환 되는 <ph id="ph4">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The example uses the following two regular expressions to find matches in a single input string:</source>
          <target state="translated">이 예제에서는 다음 두 개의 정규식을 사용 하 여 단일 입력된 문자열에서 일치 항목을 찾습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>This regular expression pattern identifies a word that consists of one or more word characters, followed by either one or two non-word characters such as white space or punctuation.</source>
          <target state="translated">이 정규식 패턴은 뒤에 하나 또는 두 개의 비단어 문자가 공백 또는 문장 부호와 같은 하나 이상의 단어 문자로 구성 된 단어를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The regular expression does not include any capturing groups.</source>
          <target state="translated">정규식 캡처링 그룹을 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The output from the example shows that both the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> objects returned by the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">`Match.Captures`</ph> properties contain information about the same match.</source>
          <target state="translated">예제에서 출력을 보여 줍니다 모두는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> 개체 및 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 에서 반환 된 개체는 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph4">`Match.Captures`</ph> 속성 동일한 일치 하는 방법에 대 한 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>This regular expression pattern identifies the words in a sentence.</source>
          <target state="translated">이 정규식 패턴은 문장에서 단어를 식별합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The pattern defines a single capturing group that consists of one or more word characters followed by one or two non-word characters.</source>
          <target state="translated">패턴 하나 또는 두 개의 비단어 문자가 따라오는 하나 이상의 단어 문자로 구성 된 단일 캡처링 그룹을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The regular expression pattern uses the <ph id="ph1">`+`</ph> quantifier to match one or more occurrences of this group.</source>
          <target state="translated">정규식 패턴을 사용 하는 <ph id="ph1">`+`</ph> 수량자를이 그룹의 하나 이상의 일치 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The output from this example shows that the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object returned by the <ph id="ph3">`Match.Captures`</ph> property contain information about the same match.</source>
          <target state="translated">이 예제에서 출력을 표시 하는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Match&gt;</ph> 개체 및 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 에서 반환 된 개체는 <ph id="ph3">`Match.Captures`</ph> 동일한 일치 하는 방법에 대 한 정보를 포함 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.CaptureCollection">
          <source>The second <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> object, which corresponds to the only capturing group in the regular expression, identifies only the last captured string, whereas the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> object returned by the first capturing group's <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> property includes all captured substrings.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 에 해당 캡처링 그룹은 정규식에만 하는 개체를 식별 하는 마지막 문자열을 캡처된 반면는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection&gt;</ph> 첫 번째 캡처링 그룹에 의해 반환 된 개체 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType&gt;</ph> 속성 모두 포함 캡처된 부분 문자열입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>The array the collection is to be copied into.</source>
          <target state="translated">컬렉션을 복사할 대상 배열입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>The position in the destination array where copying is to begin.</source>
          <target state="translated">대상 배열에서 복사를 시작할 위치입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies all the elements of the collection to the given array beginning at the given index.</source>
          <target state="translated">지정된 인덱스에서 시작하여 지정된 배열에 컬렉션의 요소를 모두 복사합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.</source>
          <target state="translated">지정된 된 인덱스에서 시작 하 여 배열에 전체 컬렉션을 복사 하 고, 때문에 대상 배열의 컬렉션 이상이 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">이 멤버에 없으면는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">대상으로 하는 응용 프로그램을 개발 하려는 경우는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType&gt;</ph> 메서드 대신 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is outside the bounds of <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="array" /&gt;</ph>의 범위 밖인 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> plus <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /&gt;</ph> is outside the bounds of <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph>에 <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /&gt;</ph>를 더한 값이 <ph id="ph3">&lt;paramref name="array" /&gt;</ph>의 범위 밖인 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.Count">
          <source>Gets the number of substrings captured by the group.</source>
          <target state="translated">그룹에서 캡처한 부분 문자열의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.Count">
          <source>The number of items in the <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.CaptureCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.CaptureCollection" /&gt;</ph>의 항목 수입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
          <source>Provides an enumerator that iterates through the collection.</source>
          <target state="translated">컬렉션을 반복하는 열거자를 제공합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
          <source>An object that contains all <ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Capture" /&gt;</ph> objects within the <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.CaptureCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.RegularExpressions.Capture" /&gt;</ph>의 모든 <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.CaptureCollection" /&gt;</ph> 개체를 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
          <source>Instead of calling the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> method to retrieve an enumerator that lets you iterate through the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> objects in the collection, you should use the group iteration construct (such as <ph id="ph3">`foreach`</ph> in C# and <ph id="ph4">`For Each`</ph>…<ph id="ph5">`Next`</ph></source>
          <target state="translated">호출 하는 대신는 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A&gt;</ph> 을 반복할 수 있는 열거자를 검색 하는 메서드는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Group&gt;</ph> 그룹 반복 구문을 사용 해야 컬렉션의 개체 (같은 <ph id="ph3">`foreach`</ph> C# 및 <ph id="ph4">`For Each`</ph>...<ph id="ph5">`Next`</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
          <source>in Visual Basic) that is provided by your programming language.</source>
          <target state="translated">Visual Basic)에서는 선택한 프로그래밍 언어에서 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
          <source>Gets a value that indicates whether the collection is read only.</source>
          <target state="translated">컬렉션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> in all cases.</source>
          <target state="translated">모든 경우에 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
          <source>Gets a value that indicates whether access to the collection is synchronized (thread-safe).</source>
          <target state="translated">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated">모든 경우에 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">이 멤버에 없으면는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">대상으로 하는 응용 프로그램을 개발 하려는 경우는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType&gt;</ph> 속성 대신 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
          <source>Index into the capture collection.</source>
          <target state="translated">캡처 컬렉션의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
          <source>Gets an individual member of the collection.</source>
          <target state="translated">컬렉션의 개별 멤버를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
          <source>The captured substring at position <ph id="ph1">&lt;paramref name="i" /&gt;</ph> in the collection.</source>
          <target state="translated">컬렉션의 위치 <ph id="ph1">&lt;paramref name="i" /&gt;</ph>에서 캡처된 부분 문자열입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="i" /&gt;</ph> is less than 0 or greater than <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph>가 0보다 작거나 <ph id="ph2">&lt;see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the collection.</source>
          <target state="translated">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
          <source>An object that can be used to synchronize access to the collection.</source>
          <target state="translated">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
          <source>This member is not present in the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>.</source>
          <target state="translated">이 멤버에 없으면는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
          <source>If you are developing applications that target the <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph> property instead.</source>
          <target state="translated">대상으로 하는 응용 프로그램을 개발 하려는 경우는 <ph id="ph1">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType&gt;</ph> 속성 대신 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>