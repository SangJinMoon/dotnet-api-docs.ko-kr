<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RegexOptions.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5104d13d4e5feaf9355bd1e7502dc0e03ce40ec5e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">104d13d4e5feaf9355bd1e7502dc0e03ce40ec5e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>Provides enumerated values to use to set regular expression options.</source>
          <target state="translated">정규식 옵션을 설정하는 데 사용하는 열거형 값을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph> value can be provided as a parameter to the following members of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> class:</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph> 의 다음 멤버를 값 매개 변수로 제공 될 수는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> 클래스:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> class constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> 클래스 생성자입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Split%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%2CSystem.Text.RegularExpressions.RegexOptions%29?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph> value can also be supplied as a parameter to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A&gt;</ph> constructor, or it can be assigned directly to the <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Options%2A&gt;</ph> property.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph> 매개 변수로 값을 제공할 수도 있습니다는 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A&gt;</ph> 생성자 또는 것에 직접 할당할 수는 <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo.Options%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The resulting <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> object is then used in the call to the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> method.</source>
          <target state="translated">그 결과 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexCompilationInfo&gt;</ph> 개체에 대 한 호출에 사용 되는 다음의 <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>Several options provided by members of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph> enumeration (in particular, by its ExplicitCapture, IgnoreCase, Multiline, and Singleline members) can instead be provided by using an inline option character in the regular expression pattern.</source>
          <target state="translated">멤버에서 제공 하는 몇 가지 옵션은 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions&gt;</ph> 열거형 (특히 여 ExplicitCapture IgnoreCase, 여러 줄을 한 줄 멤버)는 정규식 패턴에 인라인 옵션 문자를 사용 하 여 대신 제공 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>For details, see <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>정규식 옵션<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The following example defines two regular expressions that identify repeated words in text but that are instantiated using different <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.ExplicitCapture?displayProperty=nameWithType&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 두 개의 정규식 텍스트에 반복 되는 단어를 식별 하는 있지만 인스턴스화 다른 <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexOptions.ExplicitCapture?displayProperty=nameWithType&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The first regular expression is case-insensitive; case is ignored when determining whether a word is identical to the preceding word.</source>
          <target state="translated">첫 번째 정규식은 대/소문자를 구분 합니다. 단어는 이전 단어와 동일한 지 여부를 결정할 때 대/소문자는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.RegularExpressions.RegexOptions">
          <source>The second regular expression is case-sensitive; a word must match the case of the preceding word exactly to be considered a duplicate.</source>
          <target state="translated">두 번째 정규식은 대/소문자를 구분 합니다. 단어를 중복으로 간주 됩니다 정확 하 게 이전 단어의 경우를 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Compiled">
          <source>Specifies that the regular expression is compiled to an assembly.</source>
          <target state="translated">정규식이 어셈블리로 컴파일되도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Compiled">
          <source>This yields faster execution but increases startup time.</source>
          <target state="translated">이렇게 하면 실행은 빨라지지만 시작 시간은 늘어납니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Compiled">
          <source>This value should not be assigned to the <ph id="ph1">&lt;see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /&gt;</ph> property when calling the <ph id="ph2">&lt;see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /&gt;</ph> 메서드를 호출할 때는 <ph id="ph2">&lt;see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /&gt;</ph> 속성에 이 값을 할당하지 말아야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Compiled">
          <source>For more information, see the "Compiled Regular Expressions" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>정규식 옵션<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> 항목의 "컴파일된 정규식" 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
          <source>Specifies that cultural differences in language is ignored.</source>
          <target state="translated">언어의 문화권 차이점이 무시되도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
          <source>For more information, see the "Comparison Using the Invariant Culture" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>정규식 옵션<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> 항목의 "고정 문화권을 사용한 비교" 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
          <source>Enables ECMAScript-compliant behavior for the expression.</source>
          <target state="translated">해당 식에 ECMAScript 규격 동작을 사용 가능하게 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
          <source>This value can be used only in conjunction with the <ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /&gt;</ph> values.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /&gt;</ph> 값과 함께만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
          <source>The use of this value with any other values results in an exception.</source>
          <target state="translated">이 값을 다른 값과 함께 사용하면 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
          <source>For more information on the <ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" /&gt;</ph> option, see the "ECMAScript Matching Behavior" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" /&gt;</ph> 옵션에 대한 자세한 내용은 <bpt id="p1">[</bpt>정규식 옵션<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> 항목의 "ECMAScript 일치 동작"을 참조하세요.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
          <source>Specifies that the only valid captures are explicitly named or numbered groups of the form (?<ph id="ph1">&amp;lt;</ph>name<ph id="ph2">&amp;gt;</ph>…).</source>
          <target state="translated">(?<ph id="ph1">&amp;lt;</ph>name<ph id="ph2">&amp;gt;</ph>…) 형식의 명시적으로 명명되거나 번호가 매겨진 그룹만 유효한 캡처가 되도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
          <source>This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:…).</source>
          <target state="translated">이렇게 하면 명명되지 않은 괄호가 (?:¡K) 식과 같이 구문적으로 어색한 부분 없이 비캡처링 그룹의 역할을 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
          <source>For more information, see the "Explicit Captures Only" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>정규식 옵션<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> 항목의 "명시적 캡처의 경우에만"을 참조하세요.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
          <source>Specifies case-insensitive matching.</source>
          <target state="translated">대/소문자를 구분하지 않고 일치 항목을 찾도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
          <source>For more information, see the "Case-Insensitive Matching " section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>정규식 옵션<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> 항목의 "대/소문자를 구분하지 않는 일치" 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
          <source>Eliminates unescaped white space from the pattern and enables comments marked with #.</source>
          <target state="translated">이스케이프되지 않은 공백을 패턴에서 제거하고 주석을 #으로 표시할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
          <source>However, this value does not affect or eliminate white space in <bpt id="p1">[</bpt>character classes<ept id="p1">](~/docs/standard/base-types/character-classes-in-regular-expressions.md)</ept>, numeric <bpt id="p2">[</bpt>quantifiers<ept id="p2">](~/docs/standard/base-types/quantifiers-in-regular-expressions.md)</ept>, or tokens that mark the beginning of individual <bpt id="p3">[</bpt>regular expression language elements<ept id="p3">](~/docs/standard/base-types/regular-expression-language-quick-reference.md)</ept>.</source>
          <target state="translated">그러나 이 값은 <bpt id="p1">[</bpt>문자 클래스<ept id="p1">](~/docs/standard/base-types/character-classes-in-regular-expressions.md)</ept>, 숫자 <bpt id="p2">[</bpt>수량자<ept id="p2">](~/docs/standard/base-types/quantifiers-in-regular-expressions.md)</ept> 또는 개별 <bpt id="p3">[</bpt>정규식 언어 요소<ept id="p3">](~/docs/standard/base-types/regular-expression-language-quick-reference.md)</ept>의 시작을 표시하는 토큰에서 영향을 주거나 공백을 제거하지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
          <source>For more information, see the "Ignore White Space" section of the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>정규식 옵션<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> 항목의 "공백 무시" 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Multiline">
          <source>Multiline mode.</source>
          <target state="translated">여러 줄 모드입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Multiline">
          <source>Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string.</source>
          <target state="translated">전체 문자열의 시작과 끝뿐만 아니라 모든 줄의 시작과 끝에서 각각 일치하도록 ^과 $의 의미를 변경합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Multiline">
          <source>For more information, see the "Multiline Mode" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>정규식 옵션<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> 항목의 "여러 줄 모드" 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.None">
          <source>Specifies that no options are set.</source>
          <target state="translated">옵션이 설정되지 않도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.None">
          <source>For more information about the default behavior of the regular expression engine, see the "Default Options" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">정규식 엔진의 기본 동작에 대한 자세한 내용은 <bpt id="p1">[</bpt>정규식 옵션<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> 항목의 "기본 옵션" 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
          <source>Specifies that the search will be from right to left instead of from left to right.</source>
          <target state="translated">왼쪽에서 오른쪽이 아닌 오른쪽에서 왼쪽으로 검색이 진행되도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
          <source>For more information, see the "Right-to-Left Mode" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>정규식 옵션<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> 항목의 "오른쪽에서 왼쪽 모드" 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Singleline">
          <source>Specifies single-line mode.</source>
          <target state="translated">한 줄 모드를 지정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Singleline">
          <source>Changes the meaning of the dot (.) so it matches every character (instead of every character except \n).</source>
          <target state="translated">\n을 제외한 모든 문자가 아닌 \n을 포함한 모든 문자와 일치하도록 점(.)의 의미를 변경합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="F:System.Text.RegularExpressions.RegexOptions.Singleline">
          <source>For more information, see the "Single-line Mode" section in the <bpt id="p1">[</bpt>Regular Expression Options<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> topic.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>정규식 옵션<ept id="p1">](~/docs/standard/base-types/regular-expression-options.md)</ept> 항목의 "한 줄 모드" 섹션을 참조하세요.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>