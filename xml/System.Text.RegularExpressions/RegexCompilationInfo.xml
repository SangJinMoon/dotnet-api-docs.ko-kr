<Type Name="RegexCompilationInfo" FullName="System.Text.RegularExpressions.RegexCompilationInfo">
  <TypeSignature Language="C#" Value="public class RegexCompilationInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RegexCompilationInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexCompilationInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RegexCompilationInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexCompilationInfo" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="59858-101">정규식을 독립 실행형 어셈블리로 컴파일하는 데 사용하는 정규식에 대한 정보를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-101">Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59858-102">배열을 <xref:System.Text.RegularExpressions.RegexCompilationInfo> 개체에 전달 되는 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 메서드는 어셈블리에 포함 시킬 각 정규식에 대 한 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-102">An array of <xref:System.Text.RegularExpressions.RegexCompilationInfo> objects is passed to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method to provide information about each regular expression to be included in the assembly.</span></span> <span data-ttu-id="59858-103">어셈블리에 포함 된 각 컴파일된 정규식에서 파생 된 클래스로 표현 됩니다 <xref:System.Text.RegularExpressions.Regex>합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-103">Each compiled regular expression that is included in the assembly is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="59858-104">속성은 <xref:System.Text.RegularExpressions.RegexCompilationInfo> 정규식의 클래스 이름, 정규화 된 이름 (즉, 해당 네임 스페이스 및 해당 형식 이름), 정규식 패턴 (정규식이 있는지 여부 등의 추가 옵션을 정의 하는 형식 대/소문자 구분), 및 정규식 엔진이 일치 항목을 검색 해야 기간을 지정 하는 시간 제한 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-104">The properties of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.</span></span>  
  
 <span data-ttu-id="59858-105">인스턴스화할 수 있습니다는 <xref:System.Text.RegularExpressions.RegexCompilationInfo> 오버 로드 된 클래스 생성자를 호출 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-105">You can instantiate a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object by calling its overloaded class constructor.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="59858-106"><see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-106">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="59858-107">컴파일할 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-107">The regular expression to compile.</span></span></param>
        <param name="options"><span data-ttu-id="59858-108">정규식을 컴파일할 때 사용할 정규식 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-108">The regular expression options to use when compiling the regular expression.</span></span></param>
        <param name="name"><span data-ttu-id="59858-109">컴파일된 정규식을 나타내는 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-109">The name of the type that represents the compiled regular expression.</span></span></param>
        <param name="fullnamespace"><span data-ttu-id="59858-110">새 형식이 속한 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-110">The namespace to which the new type belongs.</span></span></param>
        <param name="ispublic">
          <span data-ttu-id="59858-111">컴파일된 정규식을 공개적으로 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-111"><see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="59858-112">어셈블리에 포함할 정규식에 대한 정보를 포함하는 <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-112">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression to be included in an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59858-113">각 매개 변수에 <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 의 속성에 직접 해당 하는 생성자는 <xref:System.Text.RegularExpressions.RegexCompilationInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-113">Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class.</span></span> <span data-ttu-id="59858-114">모든 속성 읽기/쓰기 이기 때문에 해당 값 직접 할당할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-114">Because all properties are read/write, their values can also be assigned directly.</span></span>  
  
 <span data-ttu-id="59858-115"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 메서드 컴파일된 정규식을 포함 하는 어셈블리를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-115">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="59858-116">지정 하지 않아야 따라서 <xref:System.Text.RegularExpressions.RegexOptions.Compiled> 의 다음 값 중 하나로 `options`합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-116">Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of `options`.</span></span>  
  
 <span data-ttu-id="59858-117">경우 `ispublic` 은 `true`, 컴파일된 정규식 클래스에 public 액세스 가능성이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59858-117">If `ispublic` is `true`, the compiled regular expression class is given public accessibility.</span></span> <span data-ttu-id="59858-118">즉, 모든 어셈블리에서 실행 되는 코드에서 인스턴스화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-118">That is, it can be instantiated from code that executes in any assembly.</span></span> <span data-ttu-id="59858-119">경우 `ispublic` 은 `false`의 컴파일된 정규식 제공 `internal` (C#에서) 또는 `Friend` (Visual Basic)에서는 내게 필요한 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-119">If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility.</span></span> <span data-ttu-id="59858-120">즉, 정규식 클래스와 동일한 어셈블리에서 실행 되는 코드 에서만에서 인스턴스화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-120">That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59858-121">다음 예제에서는 만들고 컴파일된 정규식을 사용 하 여 두 단계를 수행에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-121">The following example creates and uses a compiled regular expression in two steps.</span></span>  
  
 <span data-ttu-id="59858-122">첫 번째 단계에서 컴파일하고 다음 코드 예제를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-122">In the first step, compile and execute the following code example.</span></span> <span data-ttu-id="59858-123"><xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> 생성자의 코드 예제에서는 컴파일된 정규식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-123">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> constructor in the code example defines a compiled regular expression.</span></span> <span data-ttu-id="59858-124">코드 실행의 결과 라는 컴파일된 정규식 형식이 포함 된 FishRegex.dll 이라는 어셈블리 `FishRegex`합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-124">The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.</span></span>  
  
 [!code-csharp[sys.txt.rgxCompInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/genFishRegex.cs#1)]
 [!code-vb[sys.txt.rgxCompInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/genFishRegex.vb#1)]  
  
 <span data-ttu-id="59858-125">두 번째 단계에서 FishRegex.dll에 대 한 참조를 사용 하 여 다음 코드 예제를 컴파일하고 결과 실행 파일을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-125">In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file.</span></span> <span data-ttu-id="59858-126">사용 하 여을 대상 문자열과 일치 하는 실행 파일의 `FishRegex` 를 입력 하 고 대상 문자열에 일치 하는 항목, 그룹, 캡처 그룹 및 일치 하는 항목의 인덱스 위치를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-126">The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.</span></span>  
  
 [!code-csharp[sys.txt.rgxCompInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/useFishRegex.cs#2)]
 [!code-vb[sys.txt.rgxCompInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/useFishRegex.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="59858-127"><paramref name="name" />가 <see cref="F:System.String.Empty" />인 경우</span><span class="sxs-lookup"><span data-stu-id="59858-127"><paramref name="name" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59858-128"><paramref name="pattern" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="59858-128"><paramref name="pattern" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="59858-129">또는</span><span class="sxs-lookup"><span data-stu-id="59858-129">-or-</span></span>  
  
 <span data-ttu-id="59858-130"><paramref name="name" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="59858-130"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="59858-131">또는</span><span class="sxs-lookup"><span data-stu-id="59858-131">-or-</span></span>  
  
 <span data-ttu-id="59858-132"><paramref name="fullnamespace" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="59858-132"><paramref name="fullnamespace" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="59858-133">이 생성자는 생성 되는 응용 프로그램 도메인의 기본 제한 시간 값을 사용 하는 컴파일된 정규식을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="59858-133">This constructor creates a compiled regular expression that uses the default time-out value of the application domain in which it is created.</span></span> <span data-ttu-id="59858-134">컴파일된 정규식 시간 제한 값은 응용 프로그램 도메인에 대해 정의 된 경우 값을 사용 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, 패턴 일치 작업을 시간 초과 방지 하는 합니다. 컴파일된 정규식을 만들기 위한 권장된 생성자는 <see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />, 시간 제한 간격을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-134">If a time-out value is defined for the application domain, the compiled regular expression uses the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents a pattern-matching operation from timing out. The recommended constructor for creating a compiled regular expression is <see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="59858-135">컴파일할 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-135">The regular expression to compile.</span></span></param>
        <param name="options"><span data-ttu-id="59858-136">정규식을 컴파일할 때 사용할 정규식 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-136">The regular expression options to use when compiling the regular expression.</span></span></param>
        <param name="name"><span data-ttu-id="59858-137">컴파일된 정규식을 나타내는 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-137">The name of the type that represents the compiled regular expression.</span></span></param>
        <param name="fullnamespace"><span data-ttu-id="59858-138">새 형식이 속한 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-138">The namespace to which the new type belongs.</span></span></param>
        <param name="ispublic">
          <span data-ttu-id="59858-139">컴파일된 정규식을 공개적으로 표시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-139"><see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="59858-140">정규식에 대한 기본 시간 제한 간격입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-140">The default time-out interval for the regular expression.</span></span></param>
        <summary><span data-ttu-id="59858-141">어셈블리에 포함할 지정된 시간 제한 값의 정규식에 대한 정보를 포함하는 <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-141">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression with a specified time-out value to be included in an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59858-142">각 매개 변수에 <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> 의 속성에 직접 해당 하는 생성자는 <xref:System.Text.RegularExpressions.RegexCompilationInfo> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-142">Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class.</span></span> <span data-ttu-id="59858-143">모든 속성 읽기/쓰기 이기 때문에 해당 값 직접 할당할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-143">Because all properties are read/write, their values can also be assigned directly.</span></span>  
  
 <span data-ttu-id="59858-144"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 메서드 컴파일된 정규식을 포함 하는 어셈블리를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-144">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="59858-145">지정 하지 않아야 따라서 <xref:System.Text.RegularExpressions.RegexOptions.Compiled> 의 다음 값 중 하나로 `options`합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-145">Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of `options`.</span></span>  
  
 <span data-ttu-id="59858-146">경우 `ispublic` 은 `true`, 컴파일된 정규식 클래스에 public 액세스 가능성이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59858-146">If `ispublic` is `true`, the compiled regular expression class is given public accessibility.</span></span> <span data-ttu-id="59858-147">즉, 모든 어셈블리에서 실행 되는 코드에서 인스턴스화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-147">That is, it can be instantiated from code that executes in any assembly.</span></span> <span data-ttu-id="59858-148">경우 `ispublic` 은 `false`의 컴파일된 정규식 제공 `internal` (C#에서) 또는 `Friend` (Visual Basic)에서는 내게 필요한 옵션입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-148">If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility.</span></span> <span data-ttu-id="59858-149">즉, 정규식 클래스와 동일한 어셈블리에서 실행 되는 코드 에서만에서 인스턴스화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-149">That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</span></span>  
  
 <span data-ttu-id="59858-150">`matchTimeout` 매개 변수는 컴파일된 정규식에 대 한 기본 시간 제한 간격을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-150">The `matchTimeout` parameter defines the default time-out interval for the compiled regular expression.</span></span> <span data-ttu-id="59858-151">이 값은 컴파일된 정규식 개체에서 작업 시간이 초과 정규식 엔진은 throw 전에 단일 일치 작업을 실행할 시간의 대략적인 양에 나타냅니다는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 다음 타이밍 검사 중 발생 한 예외 .</span><span class="sxs-lookup"><span data-stu-id="59858-151">This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.</span></span> <span data-ttu-id="59858-152">시간 제한 값에 대 한 자세한 내용은 참조는 <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-152">For additional information about the time-out value, see the <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="59858-153">항상 컴파일된 정규식에 대 한 기본 제한 시간 값을 설정 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-153">We recommend that you always set a default time-out value for a compiled regular expression.</span></span> <span data-ttu-id="59858-154">정규식 라이브러리 소비자에 게 전달 하 여 해당 시간 제한 값을 재정의할 수는 <xref:System.TimeSpan> 이 생성자 오버 로드에 새 시간 제한 간격을 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-154">Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to this constructor overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59858-155">다음 예제에서는 단일 컴파일된 정규식 라는 `DuplicateChars` 식별 하는 입력된 문자열에서 동일한 문자와 두 개 이상 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-155">The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string.</span></span> <span data-ttu-id="59858-156">컴파일된 정규식에는 기본 제한 시간 2 초에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-156">The compiled regular expression has a default time-out of 2 seconds.</span></span> <span data-ttu-id="59858-157">예를 실행 하는 경우 컴파일된 정규식을 포함 하는 RegexLib.dll 라는 클래스 라이브러리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="59858-157">When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 <span data-ttu-id="59858-158">정규식 패턴 `(\w)\1+`는 다음 테이블과 같이 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="59858-158">The regular expression pattern `(\w)\1+` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="59858-159">무늬</span><span class="sxs-lookup"><span data-stu-id="59858-159">Pattern</span></span>|<span data-ttu-id="59858-160">설명</span><span class="sxs-lookup"><span data-stu-id="59858-160">Description</span></span>|  
|-------------|-----------------|  
|`(\w)`|<span data-ttu-id="59858-161">단어 문자를 첫 번째 캡처링 그룹에 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-161">Match any word character and assign it to the first capturing group.</span></span>|  
|`\1+`|<span data-ttu-id="59858-162">캡처된 첫 번째 그룹의 값의 하나 이상의 항목을 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-162">Match one or more occurrences of the value of the first captured group.</span></span>|  
  
 <span data-ttu-id="59858-163">다음 예제에서는 `DuplicatedChars` 정규식 문자열 배열에 중복 된 문자를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-163">The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array.</span></span> <span data-ttu-id="59858-164">호출할 때는 `DuplicatedChars` 생성자, 시간 제한 간격을.5 초로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-164">When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="59858-165"><paramref name="name" />가 <see cref="F:System.String.Empty" />인 경우</span><span class="sxs-lookup"><span data-stu-id="59858-165"><paramref name="name" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59858-166"><paramref name="pattern" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="59858-166"><paramref name="pattern" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="59858-167">또는</span><span class="sxs-lookup"><span data-stu-id="59858-167">-or-</span></span>  
  
 <span data-ttu-id="59858-168"><paramref name="name" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="59858-168"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="59858-169">또는</span><span class="sxs-lookup"><span data-stu-id="59858-169">-or-</span></span>  
  
 <span data-ttu-id="59858-170"><paramref name="fullnamespace" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="59858-170"><paramref name="fullnamespace" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="59858-171"><paramref name="matchTimeout" />이 음수, 0 또는 약 24일보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="59858-171"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <altmember cref="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59858-172">컴파일된 정규식을 공개적으로 표시할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-172">Gets or sets a value that indicates whether the compiled regular expression has public visibility.</span></span></summary>
        <value>
          <span data-ttu-id="59858-173">정규식을 공개적으로 표시할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-173"><see langword="true" /> if the regular expression has public visibility; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59858-174">경우는 <xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A> 속성은 `false`, 클래스를 포함 하는 어셈블리에서 실행 되는 코드를 통해서만 현재 인스턴스에 의해 정의 된 정규식 클래스를 인스턴스화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-174">If the <xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A> property is `false`, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class.</span></span> <span data-ttu-id="59858-175">그러나 때문에 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType> 만 컴파일된 정규식을 포함 하 고 여기에 코드 추가를 허용 하지 않는 한 어셈블리를 생성 하는 메서드,이 속성의 값을 할당할 수 없는 이유는 일반적으로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-175">However, because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType> method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59858-176">정규식의 기본 시간 제한 간격을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-176">Gets or sets the regular expression's default time-out interval.</span></span></summary>
        <value><span data-ttu-id="59858-177"><see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />이 throw되기 전에 패턴 일치 작업에서 경과할 수 있는 기본 최대 시간 간격이며, 제한 시간이 비활성화된 경우는 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-177">The default maximum time interval that can elapse in a pattern-matching operation before a <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> is thrown, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> if time-outs are disabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59858-178"><xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> 속성은 컴파일된 정규식에 대 한 기본 시간 제한 간격을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-178">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property defines the default time-out interval for the compiled regular expression.</span></span> <span data-ttu-id="59858-179">이 값은 컴파일된 정규식을 작업 시간이 초과 하 고 정규식 엔진은 throw 하기 전에 단일 일치 작업을 실행할 수 있는 시간의 대략적인 크기를 나타냅니다는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 다음 타이밍 검사 중 발생 한 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-179">This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="59858-180">항상 컴파일된 정규식에 대 한 기본 제한 시간 값을 설정 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-180">We recommend that you always set a default time-out value for a compiled regular expression.</span></span> <span data-ttu-id="59858-181">정규식 라이브러리 소비자에 게 전달 하 여 해당 시간 제한 값을 재정의할 수는 <xref:System.TimeSpan> 컴파일된 정규식의 클래스 생성자에 새 시간 제한 간격을 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-181">Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to the compiled regular expression's class constructor.</span></span>  
  
 <span data-ttu-id="59858-182">기본 제한 시간 값을 할당할 수는 <xref:System.Text.RegularExpressions.RegexCompilationInfo> 다음 방법 중 하나에서 개체:</span><span class="sxs-lookup"><span data-stu-id="59858-182">You can assign a default time-out value to a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object in any of the following ways:</span></span>  
  
-   <span data-ttu-id="59858-183">호출 하 여는 <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> 메서드와의 문자열 표현을 제공 하는 <xref:System.TimeSpan> "REGEX_DEFAULT_MATCH_TIMEOUT" 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-183">By calling the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method and providing the string representation of a <xref:System.TimeSpan> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</span></span>  
  
-   <span data-ttu-id="59858-184">호출 하 여는 <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> 생성자 및에 대 한 값을 제공 하는 `matchTimeout` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-184">By calling the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> constructor and providing a value for the `matchTimeout` parameter.</span></span>  
  
-   <span data-ttu-id="59858-185">이 속성의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-185">By setting the value of this property.</span></span>  
  
 <span data-ttu-id="59858-186">적절 한 시간 제한 간격을 설정 하려면 다음 요소를 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-186">To set a reasonable time-out interval, consider the following factors:</span></span>  
  
-   <span data-ttu-id="59858-187">길이 복잡 한 정규식 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-187">The length and complexity of the regular expression pattern.</span></span> <span data-ttu-id="59858-188">길고 복잡 한 정규식 짧고 간단 것 보다 더 많은 시간이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-188">Longer and more complex regular expressions require more time than shorter and simpler ones.</span></span>  
  
-   <span data-ttu-id="59858-189">에서는 예상된 컴퓨터 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-189">The expected machine load.</span></span> <span data-ttu-id="59858-190">처리는 높은 CPU 및 메모리 사용률 있는 시스템에서 많은 시간이 소요 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59858-190">Processing takes more time on systems with high CPU and memory utilization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59858-191">다음 예제에서는 단일 컴파일된 정규식 라는 `DuplicateChars` 식별 하는 입력된 문자열에서 동일한 문자와 두 개 이상 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-191">The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string.</span></span> <span data-ttu-id="59858-192">컴파일된 정규식에는 기본 제한 시간 2 초에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-192">The compiled regular expression has a default time-out of 2 seconds.</span></span> <span data-ttu-id="59858-193">예를 실행 하는 경우 컴파일된 정규식을 포함 하는 RegexLib.dll 라는 클래스 라이브러리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="59858-193">When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 <span data-ttu-id="59858-194">정규식 패턴 `(\w)\1+`는 다음 테이블과 같이 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="59858-194">The regular expression pattern `(\w)\1+` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="59858-195">무늬</span><span class="sxs-lookup"><span data-stu-id="59858-195">Pattern</span></span>|<span data-ttu-id="59858-196">설명</span><span class="sxs-lookup"><span data-stu-id="59858-196">Description</span></span>|  
|-------------|-----------------|  
|`(\w)`|<span data-ttu-id="59858-197">단어 문자를 첫 번째 캡처링 그룹에 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-197">Match any word character and assign it to the first capturing group.</span></span>|  
|`\1+`|<span data-ttu-id="59858-198">캡처된 첫 번째 그룹의 값의 하나 이상의 항목을 일치 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-198">Match one or more occurrences of the value of the first captured group.</span></span>|  
  
 <span data-ttu-id="59858-199">다음 예제에서는 `DuplicatedChars` 정규식 문자열 배열에 중복 된 문자를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-199">The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array.</span></span> <span data-ttu-id="59858-200">호출할 때는 `DuplicatedChars` 생성자, 시간 제한 간격을.5 초로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-200">When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59858-201">컴파일된 정규식을 나타내는 형식의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-201">Gets or sets the name of the type that represents the compiled regular expression.</span></span></summary>
        <value><span data-ttu-id="59858-202">새 형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-202">The name of the new type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59858-203"><xref:System.Text.RegularExpressions.RegexCompilationInfo> 클래스에서 파생 된 클래스로 표현 되는 컴파일된 일반 식을 정의 하는 데 사용 됩니다 <xref:System.Text.RegularExpressions.Regex>합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-203">The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="59858-204"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> 속성 정의 정규식 종류의 클래스 이름 및 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> 및 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> 속성의 정규화 된 이름을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-204">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> property defines the class name of the regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="59858-205">이 속성 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="59858-205">The value for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="59858-206">이 속성의 값은 빈 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-206">The value for this property is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59858-207">새 형식이 속한 네임스페이스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-207">Gets or sets the namespace to which the new type belongs.</span></span></summary>
        <value><span data-ttu-id="59858-208">새 형식의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-208">The namespace of the new type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59858-209"><xref:System.Text.RegularExpressions.RegexCompilationInfo> 클래스에서 파생 된 클래스로 표현 되는 컴파일된 일반 식을 정의 하는 데 사용 됩니다 <xref:System.Text.RegularExpressions.Regex>합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-209">The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="59858-210"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> 컴파일된 정규식 형식이 포함 된 네임 스페이스를 정의 하는 속성 및 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> 및 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> 속성의 정규화 된 이름을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-210">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> property defines the namespace that contains the compiled regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="59858-211">이 속성 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="59858-211">The value for this property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As RegexOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexOptions Options { System::Text::RegularExpressions::RegexOptions get(); void set(System::Text::RegularExpressions::RegexOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59858-212">정규식을 컴파일할 때 사용할 옵션을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-212">Gets or sets the options to use when compiling the regular expression.</span></span></summary>
        <value><span data-ttu-id="59858-213">열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-213">A bitwise combination of the enumeration values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59858-214"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 메서드 컴파일된 정규식을 포함 하는 어셈블리를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-214">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="59858-215">지정할 필요가 없습니다 따라서 <xref:System.Text.RegularExpressions.RegexOptions.Compiled> 로이 속성의 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-215">Therefore, you do not have to specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of this property.</span></span> <span data-ttu-id="59858-216">가 존재 하는 경우는 <xref:System.Text.RegularExpressions.RegexOptions.Compiled> 옵션은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59858-216">If it is present, the <xref:System.Text.RegularExpressions.RegexOptions.Compiled> option is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59858-217">컴파일할 정규식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-217">Gets or sets the regular expression to compile.</span></span></summary>
        <value><span data-ttu-id="59858-218">컴파일할 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="59858-218">The regular expression to compile.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59858-219"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> 속성에 유효한 모든 정규식이 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59858-219">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> property can contain any valid regular expression.</span></span> <span data-ttu-id="59858-220">하는 경우의 값은 <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> 속성은 올바른 구문의 정규식 패턴에 대 한 호출 하지는 <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> 메서드가 throw는 <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="59858-220">If the value of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> property is not a syntactically correct regular expression pattern, the call to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method throws an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="59858-221">이 속성 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="59858-221">The value for this property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>