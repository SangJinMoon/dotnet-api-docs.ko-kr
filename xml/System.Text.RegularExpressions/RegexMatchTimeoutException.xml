<Type Name="RegexMatchTimeoutException" FullName="System.Text.RegularExpressions.RegexMatchTimeoutException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="984e61b60982f83fdaa94395a0420d24261cdb21" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36607494" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegexMatchTimeoutException : TimeoutException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RegexMatchTimeoutException extends System.TimeoutException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />
  <TypeSignature Language="VB.NET" Value="Public Class RegexMatchTimeoutException&#xA;Inherits TimeoutException" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexMatchTimeoutException : TimeoutException" />
  <TypeSignature Language="F#" Value="type RegexMatchTimeoutException = class&#xA;    inherit TimeoutException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.TimeoutException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>정규식 패턴 일치 메서드의 실행 시간이 해당 시간 제한 간격을 초과하는 경우 throw되는 예외입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 존재는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 예외는 일반적으로 다음 조건 중 하나가 나타냅니다.  
  
-   정규식 엔진은 역 추적을 과도 정규식 패턴을 입력된 텍스트와 일치 하도록 시도 합니다.  
  
-   시간 제한 간격이 설정한를 너무 낮게 특히 높은 시스템 부하를 제공 합니다.  
  
 예외 처리기는 예외를 처리 하는 방법은 예외의 원인에 따라 달라 집니다.  
  
-   과도 한 역 추적에서 결과 제한 시간, 예외 처리기는 입력과 일치 하 여 정규식 패턴 일치 메서드에 시간 초과가 발생 했음을 사용자에 게 알리는 하려는 시도 중단 해야 합니다. 가능 하면에서 사용할 수 있는 정규식 패턴에 대 한 정보는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A> 속성과에서 사용할 수 있는 과도 한 역 추적을 발생 시킨 입력은 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A> 문제가 될 수 있도록 속성에 기록 되도록 조사 하 고 수정 하는 정규식 패턴입니다. 과도 한 역 추적으로 인해 시간 초과 항상 재현할 수 있습니다.  
  
-   제한 시간이 제한 시간 임계값을 너무 낮게 설정으로 인해 발생, 경우에 시간 제한 간격을 늘릴 수 있으며 일치 하는 작업을 다시 시도 수 있습니다. 현재 제한 시간 간격은에서 사용할 수는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> 속성입니다. 경우는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 정규식 엔진은 상태를 유지 동일한 결과 반환 하는 모든 이후 호출에서 예외가 발생 하지 않은 하는 경우, 예외가 throw 됩니다. 권장 방법은 다시 일치 하는 메서드를 호출 하기 전에 예외가 throw 된 후 간략 하 고 임의 시간 간격에 대해 기다려야 하는 것입니다. 여러 번 반복할 수 있습니다 이러한. 그러나 과도 한 역 추적으로 제한 시간 인 경우 반복 횟수는 작은 있어야 합니다.  
  
 다음 섹션의 예에서는 처리를 위한 두 가지 방법을 모두 설명는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException>합니다.  
  
   
  
## Examples  
 다음 예제에서는 가능한 두 가지 접근 방법을 처리는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 예외입니다. 상수 값이 2 초는 최대 시간 제한 간격을 정의 합니다. <xref:System.Text.RegularExpressions.Regex.IsMatch%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.TimeSpan%29?displayProperty=nameWithType> 처음 메서드는 1 초의 시간 제한 간격을 사용 합니다. 각 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 예외는 시간 제한 간격이 1 초 씩 증가 시키고 유효성 검사에 대 한 호출이 발생는 <xref:System.Text.RegularExpressions.Regex.IsMatch%2A?displayProperty=nameWithType> 현재 시간 제한 간격을 사용 하면 최대 시간 제한 간격 보다 작으면 메서드. 그러나 현재 시간 제한 간격 최대 시간 제한 간격을 초과할 경우 예외 처리기 이벤트 로그에 정보가 기록 및 정규식의 처리를 중단 합니다.  
  
 [!code-csharp[System.Text.RegularExpressions.RegexMatchTimeoutException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexmatchtimeoutexception/cs/class1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexMatchTimeoutException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexmatchtimeoutexception/vb/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexMatchTimeoutException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexMatchTimeoutException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>시스템 제공 메시지를 사용하여 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이것은의 기본 생성자는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 클래스입니다. 이 생성자는 새 인스턴스의 <xref:System.Exception.Message%2A> 속성을 오류를 설명하는 시스템 제공 메시지로 초기화합니다. 이 메시지는 현재 시스템 문화권에 대 한 지역화 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexMatchTimeoutException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexMatchTimeoutException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexMatchTimeoutException : string -&gt; System.Text.RegularExpressions.RegexMatchTimeoutException" Usage="new System.Text.RegularExpressions.RegexMatchTimeoutException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">예외를 설명하는 문자열입니다.</param>
        <summary>지정된 메시지 문자열을 사용하여 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `message` 문자열에 할당 되는 <xref:System.Exception.Message%2A?displayProperty=nameWithType> 속성입니다. 현재 문화권에 대 한 문자열 지역화 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RegexMatchTimeoutException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RegexMatchTimeoutException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexMatchTimeoutException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Text.RegularExpressions.RegexMatchTimeoutException" Usage="new System.Text.RegularExpressions.RegexMatchTimeoutException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">직렬화된 데이터를 포함하는 개체입니다.</param>
        <param name="context">직렬화된 데이터를 포함하는 스트림입니다.</param>
        <summary>serialize된 데이터를 사용하여 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 인스턴스화하는 사용자 코드에서 직접 호출 하지 않은 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 개체입니다. 대신에 의해 호출 됩니다는 <xref:System.Runtime.Serialization.IFormatter.Deserialize%2A?displayProperty=nameWithType> 역직렬화 하는 경우 메서드는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 스트림에서 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexMatchTimeoutException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexMatchTimeoutException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexMatchTimeoutException : string * Exception -&gt; System.Text.RegularExpressions.RegexMatchTimeoutException" Usage="new System.Text.RegularExpressions.RegexMatchTimeoutException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">예외를 설명하는 문자열입니다.</param>
        <param name="inner">현재 예외의 원인인 예외입니다.</param>
        <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로이 오버 로드에서 예외 처리에 사용 된 `try/catch` 블록입니다. `innerException` 매개 변수에서 처리 하는 예외 개체에 대 한 참조를 이어야 합니다는 `catch` 블록 또는 `null`합니다. 이 값은 다음에 할당 된 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 개체의 <xref:System.Exception.InnerException%2A?displayProperty=nameWithType> 속성입니다.  
  
 `message` 문자열에 할당 되는 <xref:System.Exception.Message%2A?displayProperty=nameWithType> 속성입니다. 현재 문화권에 대 한 문자열 지역화 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexMatchTimeoutException (string regexInput, string regexPattern, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string regexInput, string regexPattern, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (regexInput As String, regexPattern As String, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexMatchTimeoutException(System::String ^ regexInput, System::String ^ regexPattern, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexMatchTimeoutException : string * string * TimeSpan -&gt; System.Text.RegularExpressions.RegexMatchTimeoutException" Usage="new System.Text.RegularExpressions.RegexMatchTimeoutException (regexInput, regexPattern, matchTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="regexInput" Type="System.String" />
        <Parameter Name="regexPattern" Type="System.String" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="regexInput">제한 시간이 경과되었을 경우 정규식 엔진에서 처리되는 입력 텍스트입니다.</param>
        <param name="regexPattern">제한 시간이 경과되었을 경우 정규식 엔진에서 사용되는 패턴입니다.</param>
        <param name="matchTimeout">시간 제한 간격입니다.</param>
        <summary>정규식 패턴, 입력 텍스트 및 시간 초과 간격에 대한 정보를 사용하여 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `regexInput`, `regexPattern`, 및 `matchTimeout` 값에 할당 된는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A>, <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A>, 및 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A> 새 속성 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public string Input { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Input" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Input As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Input { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Input : string" Usage="System.Text.RegularExpressions.RegexMatchTimeoutException.Input" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>제한 시간이 경과될 때 정규식 엔진에서 처리하고 있었던 입력 텍스트를 가져옵니다.</summary>
        <value>정규식 입력 텍스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 값을 반영 된 `regexInput` 의 매개 변수는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29> 생성자입니다. 생성자 호출에이 매개 변수를 명시적으로 초기화 되지 않은 경우 해당 값은 <xref:System.String.Empty?displayProperty=nameWithType>합니다.  
  
 정규식으로 예외가 throw 되 면 엔진에서의 값은 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A> 속성은 정규식 엔진에 전달 되는 전체 입력된 문자열을 반영 합니다. 엔진을 검색 하는 방법에 대 한 호출에서와 같은 부분 문자열 등의 부분 문자열을 반영 하지 않습니다 <xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeout : TimeSpan" Usage="System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정규식 일치에 대한 시간 제한 간격을 가져옵니다.</summary>
        <value>시간 제한 간격입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 값을 반영 된 `matchTimeout` 의 매개 변수는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29> 생성자입니다. 생성자 호출에 매개 변수를 제대로 초기화 되지 않은 경우 해당 값은 `Timespan.FromTicks(-1)`합니다.  
  
 이 속성의 값에 대 한 호출에서 설정 된 시간 제한 간격을 반영는 <xref:System.Text.RegularExpressions.Regex> 생성자 또는 정적 메서드입니다. 예외가 throw 되는 시간에 메서드 호출의 시작 부분에서 경과 된 정확한 간격을 반영 하지는 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string" Usage="System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>제한 시간이 초과될 때 일치하는 작업에서 사용된 정규식 패턴을 가져옵니다.</summary>
        <value>정규식 패턴입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 값을 반영 된 `regexPattern` 의 매개 변수는 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29> 생성자입니다. 생성자 호출에 매개 변수를 제대로 초기화 되지 않은 경우 해당 값은 <xref:System.String.Empty?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">데이터로 채울 개체입니다.</param>
        <param name="context">이 serialization의 대상입니다.</param>
        <summary>
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 개체를 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, 사용할 수 있습니다 경우에만 <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 인스턴스로 캐스팅 되는 <xref:System.Runtime.Serialization.ISerializable> 인터페이스 개체입니다.  
  
 에 포함 된 모든 개체는 <xref:System.Runtime.Serialization.SerializationInfo> 개체가 자동으로 추적 되 고 포맷터에 의해 serialize 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
  </Members>
</Type>