<Type Name="X509Certificate2" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2">
  <TypeSignature Language="C#" Value="public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2&#xA;Inherits X509Certificate" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2 : System::Security::Cryptography::X509Certificates::X509Certificate" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Certificate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b4fa5-101">X.509 인증서를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-101">Represents an X.509 certificate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-102">International Organization for Standardization (ISO) 작업 그룹에서에서 발생 하는 X.509 구조입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-102">The X.509 structure originated in the International Organization for Standardization (ISO) working groups.</span></span> <span data-ttu-id="b4fa5-103">이 구조는 다양 한 유형의 id, 수급 및 소유자 특성 (사용 권한, 연령, 성별, 위치, 관계 등) 등의 정보를 나타내는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-103">This structure can be used to represent various types of information including identity, entitlement, and holder attributes (permissions, age, sex, location, affiliation, and so forth).</span></span> <span data-ttu-id="b4fa5-104">ISO 사양 자체를 구조에 풍부한 정보를 제공 되지 않지만 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 클래스는 IETF Internet Engineering Task Force () 공개 키 인프라 X.509 (PKIX에서 발급 한 사양에 정의 용례 모델링 하도록 합니다. ) 작업 그룹입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-104">Although the ISO specifications are most informative on the structure itself, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class is designed to model the usage scenarios defined in specifications issued by the Internet Engineering Task Force (IETF) Public Key Infrastructure, X.509 (PKIX) working group.</span></span> <span data-ttu-id="b4fa5-105">이러한 사양은 가장 정보는 RFC 3280 "[인증서 및 인증서 해지 목록 (CRL) 프로필](http://go.microsoft.com/fwlink/?LinkId=45286)."</span><span class="sxs-lookup"><span data-stu-id="b4fa5-105">The most informative of these specifications is RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-106">부터는 [!INCLUDE[net_v46](~/includes/net-v46-md.md)]이 구현 입력는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-106">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="b4fa5-107">형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="b4fa5-108">직접 형식의 dispose를 호출 해당 <xref:System.IDisposable.Dispose%2A> 에서 메서드는 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="b4fa5-109">작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="b4fa5-110">자세한 내용은의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
>   
>  <span data-ttu-id="b4fa5-111">대상으로 하는 앱에 대 한는 [!INCLUDE[net_v452](~/includes/net-v452-md.md)] 및 이전 버전의 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 클래스를 구현 하지 않습니다는 <xref:System.IDisposable> 인터페이스와는 `Dispose` 메서드.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-111">For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-112">다음 예제에서는 사용 하는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 암호화 하 고 파일을 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-112">The following example demonstrates how to use an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to encrypt and decrypt a file.</span></span>  
  
 [!code-csharp[X509Certificate2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509certificate2/cs/program.cs#1)]
 [!code-vb[X509Certificate2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509certificate2/vb/program.vb#1)]  
  
 <span data-ttu-id="b4fa5-113">다음 예에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-113">The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4fa5-114"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4fa5-115"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-116">이 생성자는 빈 만듭니다 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 바이트 배열, 포인터 또는 인증서 파일에서 인증서 정보를 사용 하는이 클래스에 대 한 다른 생성자와는 달리 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-116">This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, unlike the other constructors for this class that use certificate information from a byte array, a pointer, or a certificate file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-117">다음 코드 예제에서는 활성 인증서만 차례로 하나 이상의 인증서를 선택할 수 있도록 현재 사용자 인증서 저장소를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-117">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="b4fa5-118">다음 예에서는 인증서 정보를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-118">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="b4fa5-119">X.509 인증서의 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-119">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-120">바이트 배열의 정보를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-121">이 생성자는 새 만듭니다 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 바이트 배열에서 인증서 정보를 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-121">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using certificate information from a byte array.</span></span> <span data-ttu-id="b4fa5-122">바이트 배열이 인코딩된 이진 (DER) 또는 Base64 인코딩된 X.509 데이터 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-122">The byte array can be binary (DER) encoded or Base64-encoded X.509 data.</span></span> <span data-ttu-id="b4fa5-123">바이트 배열에 PKCS7 수도 있습니다 (Authenticode) 서명 적용 됩니다. 서명자 인증서 개체를 만들 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-123">The byte array can also be a PKCS7 (Authenticode) signed file; the signer certificate is used to create the object.</span></span>  
  
 <span data-ttu-id="b4fa5-124">만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 아닌에 대해 저장소를 서명한 인증서를 인증서 저장소 내에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-124">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-125">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-125">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-126">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-126">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-127">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-127">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-128">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-128">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-129">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-129">The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(IntPtr handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="b4fa5-130">비관리 코드의 인증서 컨텍스트에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-130">A pointer to a certificate context in unmanaged code.</span></span> <span data-ttu-id="b4fa5-131">이러한 C 구조를 <see langword="PCCERT_CONTEXT" />라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-131">The C structure is called <see langword="PCCERT_CONTEXT" />.</span></span></param>
        <summary><span data-ttu-id="b4fa5-132">관리되지 않는 핸들을 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-133">이 생성자는 새 만듭니다 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 개체 핸들을 사용 하 여 Microsoft Cryptographic API 인증서 컨텍스트에 대 한 `PCCERT_CONTEXT`합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-133">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.</span></span> <span data-ttu-id="b4fa5-134">이 생성자의 직접 실행 호출자에 게 비관리 코드 권한이 필요한 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-134">Note that the immediate caller of this constructor requires unmanaged code permission.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-135">생성자는 인증서 컨텍스트의 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-135">The constructor creates a copy of the certificate context.</span></span> <span data-ttu-id="b4fa5-136">생성자에 전달 된 컨텍스트 구조 청소가 가정 하지 않습니다 릴리스 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-136">Do not assume that the context structure you passed to the constructor is valid; it may have been released.</span></span> <span data-ttu-id="b4fa5-137">현재 복사본을 얻을 수 `PCCERT_CONTEXT` 에서 구조체는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> 속성 않은 유효한의 수명 중에는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-137">You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-138">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-138">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-139">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-139">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-140">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-140">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-141">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-141">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-142">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-142">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4fa5-143">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-143">for accessing unmanaged code.</span></span> <span data-ttu-id="b4fa5-144">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-144">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="b4fa5-145">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-145">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="b4fa5-146"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-146">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></param>
        <summary><span data-ttu-id="b4fa5-147"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-148">이 메서드는의 새 인스턴스를 만듭니다는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 클래스를 사용 하는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-148">This method creates a new instance of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class using an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-149">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-149">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-150">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-150">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-151">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-151">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-152">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-152">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-153">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-153">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4fa5-154">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-154">for accessing unmanaged code.</span></span> <span data-ttu-id="b4fa5-155">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-155">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="b4fa5-156">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-156">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b4fa5-157">인증서 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-157">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="b4fa5-158">인증서 파일 이름을 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-158">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-159">이 생성자는 새 만듭니다 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 인증서 파일 이름을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-159">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name.</span></span> <span data-ttu-id="b4fa5-160">(DER) 이진 인코딩 또는 Base64 인코딩을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-160">It supports binary (DER) encoding or Base64 encoding.</span></span>  
  
 <span data-ttu-id="b4fa5-161">만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 아닌에 대해 저장소를 서명한 인증서를 인증서 저장소 내에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-161">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-162">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-162">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-163">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-163">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-164">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-164">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-165">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-165">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-166">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-166">The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="b4fa5-167">X.509 인증서의 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-167">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-168">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-168">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="b4fa5-169">바이트 배열 및 암호를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-169">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-170">이 생성자는 인증서의 개인 키가 포함 된 PKCS12 (PFX) 파일과 함께 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-170">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="b4fa5-171">올바른 암호를이 생성자를 호출 하는 개인 키를 해독 하 고 키 컨테이너에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-171">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-172">하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-172">Never hard code a password within your source code.</span></span>  <span data-ttu-id="b4fa5-173">사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), 16 진수 편집기 또는 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 여는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-173">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="b4fa5-174">만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 아닌에 대해 저장소를 서명한 인증서를 인증서 저장소 내에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-174">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-175">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-175">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-176">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-176">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-177">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-177">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-178">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-178">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-179">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-179">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4fa5-180">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-180">for accessing unmanaged code.</span></span> <span data-ttu-id="b4fa5-181">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-181">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="b4fa5-182">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="b4fa5-183">X.509 인증서의 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-183">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-184">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-184">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="b4fa5-185">바이트 배열 및 암호를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-185">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-186">이 생성자는 새 만듭니다 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 바이트 배열 및 인증서 데이터에 액세스 하는 데 필요한 암호를 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-186">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array and a password that is needed to access the certificate data.</span></span> <span data-ttu-id="b4fa5-187">인증서의 개인 키가 포함 된 PKCS12 (PFX) 파일과 함께 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-187">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="b4fa5-188">올바른 암호를이 생성자를 호출 하는 개인 키를 해독 하 고 키 컨테이너에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-188">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-189">하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-189">Never hard code a password within your source code.</span></span>  <span data-ttu-id="b4fa5-190">사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), 16 진수 편집기 또는 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 여는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-190">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="b4fa5-191">만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 아닌에 대해 저장소를 서명한 인증서를 인증서 저장소 내에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-191">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-192">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-192">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-193">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-193">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-194">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-194">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-195">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-195">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-196">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-196">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4fa5-197">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-197">for accessing unmanaged code.</span></span> <span data-ttu-id="b4fa5-198">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-198">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="b4fa5-199">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509Certificate2(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="b4fa5-200">새 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />를 deserialize하기 위해 serialization 정보가 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-200">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span></span></param>
        <param name="context"><span data-ttu-id="b4fa5-201">deserialize될 스트림의 소스에 대한 컨텍스트 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-201">Contextual information about the source of the stream to be deserialized.</span></span></param>
        <summary><span data-ttu-id="b4fa5-202">지정된 serialization과 스트림 컨텍스트 정보를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-202">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4fa5-203">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-203">for accessing unmanaged code.</span></span> <span data-ttu-id="b4fa5-204">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-204">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="b4fa5-205">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-205">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b4fa5-206">인증서 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-206">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-207">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-207">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="b4fa5-208">인증서 파일 이름 및 암호를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-208">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-209">이 생성자는 인증서의 개인 키가 포함 된 PKCS12 (PFX) 파일과 함께 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-209">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="b4fa5-210">올바른 암호를이 생성자를 호출 하는 개인 키를 해독 하 고 키 컨테이너에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-210">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-211">하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-211">Never hard code a password within your source code.</span></span>  <span data-ttu-id="b4fa5-212">사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), 16 진수 편집기 또는 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 여는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-212">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="b4fa5-213">만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 아닌에 대해 저장소를 서명한 인증서를 인증서 저장소 내에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-213">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-214">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-214">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-215">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-215">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-216">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-216">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-217">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-217">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-218">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-218">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4fa5-219">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-219">for accessing unmanaged code.</span></span> <span data-ttu-id="b4fa5-220">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="b4fa5-221">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-221">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b4fa5-222">인증서 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-222">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-223">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-223">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="b4fa5-224">인증서 파일 이름과 인증서 액세스에 사용되는 암호를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-224">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-225">이 생성자는 새 만듭니다 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 인증서 파일 이름 및 인증서에 액세스 하는 데 필요한 암호를 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-225">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name and a password needed to access the certificate.</span></span> <span data-ttu-id="b4fa5-226">인증서의 개인 키가 포함 된 PKCS12 (PFX) 파일과 함께 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-226">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="b4fa5-227">올바른 암호를이 생성자를 호출 하는 개인 키를 해독 하 고 키 컨테이너에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-227">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-228">하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-228">Never hard code a password within your source code.</span></span>  <span data-ttu-id="b4fa5-229">사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), 16 진수 편집기 또는 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 여는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-229">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="b4fa5-230">만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 아닌에 대해 저장소를 서명한 인증서를 인증서 저장소 내에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-230">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-231">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-231">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-232">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-232">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-233">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-233">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-234">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-234">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-235">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-235">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4fa5-236">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-236">for accessing unmanaged code.</span></span> <span data-ttu-id="b4fa5-237">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-237">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="b4fa5-238">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-238">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="b4fa5-239">X.509 인증서의 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-239">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-240">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-240">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="b4fa5-241">인증서를 가져올 위치 및 방법을 제어하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-241">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-242">바이트 배열, 암호 및 키 저장소 플래그를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-242">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-243">이 생성자는 인증서의 개인 키가 포함 된 PKCS12 (PFX) 파일과 함께 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-243">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="b4fa5-244">올바른 암호를이 생성자를 호출 하는 개인 키의 암호를 해독 하 고에 Microsoft 암호화 API 공급자 CSP (암호화 서비스)를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-244">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-245">하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-245">Never hard code a password within your source code.</span></span>  <span data-ttu-id="b4fa5-246">사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), 16 진수 편집기 또는 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 여는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-246">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="b4fa5-247">만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 아닌에 대해 저장소를 서명한 인증서를 인증서 저장소 내에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-247">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-248">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-248">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-249">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-249">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-250">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-250">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-251">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-251">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-252">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-252">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4fa5-253">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-253">for accessing unmanaged code.</span></span> <span data-ttu-id="b4fa5-254">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-254">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="b4fa5-255">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-255">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="b4fa5-256">X.509 인증서의 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-256">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-257">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-257">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="b4fa5-258">인증서를 가져올 위치 및 방법을 제어하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-258">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-259">바이트 배열, 암호 및 키 저장소 플래그를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-259">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-260">이 생성자는 새 만듭니다 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 바이트를 사용 하 여 개체 배열 인증서 데이터와 키 저장소 플래그에 액세스 하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-260">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.</span></span> <span data-ttu-id="b4fa5-261">인증서의 개인 키가 포함 된 PKCS12 (PFX) 파일과 함께 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-261">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="b4fa5-262">올바른 암호를이 생성자를 호출 하는 개인 키의 암호를 해독 하 고에 Microsoft 암호화 API 공급자 CSP (암호화 서비스)를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-262">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-263">하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-263">Never hard code a password within your source code.</span></span>  <span data-ttu-id="b4fa5-264">사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), 16 진수 편집기 또는 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 여는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-264">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="b4fa5-265">만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 아닌에 대해 저장소를 서명한 인증서를 인증서 저장소 내에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-265">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-266">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-266">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-267">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-267">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-268">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-268">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-269">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-269">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-270">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-270">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4fa5-271">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-271">for accessing unmanaged code.</span></span> <span data-ttu-id="b4fa5-272">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-272">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="b4fa5-273">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-273">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b4fa5-274">인증서 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-274">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-275">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-275">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="b4fa5-276">인증서를 가져올 위치 및 방법을 제어하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-276">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-277">인증서 파일 이름, 암호 및 키 저장소 플래그를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-277">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-278">만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate> 아닌에 대해 저장소를 서명한 인증서를 인증서 저장소 내에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-278">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-279">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-279">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-280">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-280">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-281">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-281">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-282">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-282">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-283">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-283">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4fa5-284">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-284">for accessing unmanaged code.</span></span> <span data-ttu-id="b4fa5-285">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-285">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="b4fa5-286">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-286">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b4fa5-287">인증서 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-287">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-288">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-288">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="b4fa5-289">인증서를 가져올 위치 및 방법을 제어하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-289">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-290">인증서 파일 이름, 인증서 액세스에 사용되는 암호 및 키 저장소 플래그를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-290">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-291">이 생성자는 새 만듭니다 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 인증서 파일을 사용 하 여 개체 이름, 인증서 및 키 저장소 플래그에 액세스 하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-291">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name, a password needed to access the certificate, and a key storage flag.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-292">하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-292">Never hard code a password within your source code.</span></span>  <span data-ttu-id="b4fa5-293">사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), 16 진수 편집기 또는 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 여는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-293">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="b4fa5-294">만드는 경우는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> PKCS7 서명된 파일의 저장소를 지정 하 여 인증서 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 아닌에 대해 저장소를 서명한 인증서를 인증서 저장소 내에 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-294">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-295">인증서 관련 오류가 발생하는 경우.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-295">An error with the certificate occurs.</span></span> <span data-ttu-id="b4fa5-296">예:</span><span class="sxs-lookup"><span data-stu-id="b4fa5-296">For example:</span></span>  
  
-   <span data-ttu-id="b4fa5-297">인증서 파일이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-297">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="b4fa5-298">인증서가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-298">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="b4fa5-299">인증서의 암호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-299">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b4fa5-300">비관리 코드에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-300">for accessing unmanaged code.</span></span> <span data-ttu-id="b4fa5-301">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="b4fa5-302">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Archived">
      <MemberSignature Language="C#" Value="public bool Archived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archived" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberSignature Language="VB.NET" Value="Public Property Archived As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archived { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-303">X.509 인증서가 보관됨을 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-303">Gets or sets a value indicating that an X.509 certificate is archived.</span></span></summary>
        <value>
          <span data-ttu-id="b4fa5-304">인증서가 보관되면 <see langword="true" />이고, 인증서가 보관되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-304"><see langword="true" /> if the certificate is archived, <see langword="false" /> if the certificate is not archived.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-305">이 속성은 저장소와 연결 되는 인증서에 대해서만 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-305">This property is set only on a certificate that is associated with a store.</span></span> <span data-ttu-id="b4fa5-306">속성이 설정 된 인증서가 인증서 저장소에 추가 하는 경우 값이 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-306">If the property is set and the certificate is added to a certificate store, the value is persisted.</span></span> <span data-ttu-id="b4fa5-307">인증서 저장소에서 검색 속성은 값이 즉시 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-307">If the property is set on a certificate retrieved from a store, the value is persisted immediately.</span></span>  
  
 <span data-ttu-id="b4fa5-308">X.509 저장소, 보관 된 인증서가 포함 되어 반환 된 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> 하지 않는 한 개체는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> 속성이로 설정 된 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-308">In an X.509 store, archived certificates are not included in the returned <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> object unless the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> property is set to `true`.</span></span> <span data-ttu-id="b4fa5-309">실제 없음 보관 작업이 발생 때는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> 값을 설정 하거나 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-309">No physical archival activity occurs when the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> value is set or unset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-310">다음 코드 예제에서는 활성 인증서만 차례로 하나 이상의 인증서를 선택할 수 있도록 현재 사용자 인증서 저장소를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-310">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="b4fa5-311">다음 예에서는 인증서 정보를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-311">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-312">인증서를 읽을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-312">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("X509ContentType.SerializedCert is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ Extensions { System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-313"><see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-313">Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</span></span></summary>
        <value><span data-ttu-id="b4fa5-314"><see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-314">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-315">인증서에 포함할 추가 데이터를 허용 하는 X.509 v3 인증서 형식에 정의 된 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-315">The extensions defined in the X.509 v3 certificate format allow additional data to be included in the certificate.</span></span> <span data-ttu-id="b4fa5-316">RFC 3280에 PKIX에 따라서도 X.509 v3 정의에 여러 확장 iso 정의 된 "[인증서 및 인증서 해지 목록 (CRL) 프로필](http://go.microsoft.com/fwlink/?LinkId=45286)."</span><span class="sxs-lookup"><span data-stu-id="b4fa5-316">A number of extensions are defined by ISO in the X.509 v3 definition as well as by PKIX in RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span> <span data-ttu-id="b4fa5-317">키 사용과 관련 된 정보를 포함 하는 일반적인 확장 프로그램 (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), 키 식별자 (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), 인증서 정책, 해지 정보 (CRL 배포 지점 확장) 및 다른 용도로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-317">Common extensions include information regarding key usage (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), key identifiers (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), certificate policies, revocation information (CRL Distribution Point extension), and other uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-318">다음 코드 예제에서는 활성 인증서만 차례로 하나 이상의 인증서를 선택할 수 있도록 현재 사용자 인증서 저장소를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-318">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="b4fa5-319">다음 예에서는 인증서 정보를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-319">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-320">인증서를 읽을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-320">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-321">인증서의 관련 별칭을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-321">Gets or sets the associated alias for a certificate.</span></span></summary>
        <value><span data-ttu-id="b4fa5-322">인증서의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-322">The certificate's friendly name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-323">친숙 한 이름을 설정할 수 있는 X.509 인증서 저장소에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-323">Friendly names are properties in the X.509 certificate store that can be set.</span></span> <span data-ttu-id="b4fa5-324">사용자가 쉽게 식별할 수 있도록 인증서가 있는 별칭을 연결할 수 있도록 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-324">They are used to enable a user to associate aliases with certificates so they can be easily identified.</span></span>  
  
 <span data-ttu-id="b4fa5-325">빈 문자열 인증서에 대 한 이름이 있는 경우 ("")이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-325">If no friendly name exists for the certificate, an empty string ("") is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-326">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-326">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-327">인증서를 읽을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-327">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCertContentType">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4fa5-328">바이트 배열 또는 파일에 포함된 인증서 형식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-328">Indicates the type of certificate contained in a byte array or file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As Byte()) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="b4fa5-329">X.509 인증서의 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-329">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-330">바이트 배열에 포함된 인증서 형식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-330">Indicates the type of certificate contained in a byte array.</span></span></summary>
        <returns><span data-ttu-id="b4fa5-331"><see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-331">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-332">이 메서드를 사용 하면 파일에는 인증서 종류를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-332">This method enables you to discover the type of certificate in a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-333">다음 코드 예제에서는 활성 인증서만 차례로 하나 이상의 인증서를 선택할 수 있도록 현재 사용자 인증서 저장소를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-333">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="b4fa5-334">다음 예에서는 인증서 정보를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-334">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b4fa5-335"><paramref name="rawData" />의 길이가 0이거나 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-335"><paramref name="rawData" /> has a zero length or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (fileName As String) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b4fa5-336">인증서 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-336">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="b4fa5-337">파일에 포함된 인증서 형식을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-337">Indicates the type of certificate contained in a file.</span></span></summary>
        <returns><span data-ttu-id="b4fa5-338"><see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-338">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-339">이 메서드를 사용 하면 파일에는 인증서 종류를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-339">This method enables you to discover the type of certificate in a file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4fa5-340"><paramref name="fileName" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-340"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="b4fa5-341">인증서를 읽는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-341">for reading the certificate.</span></span> <span data-ttu-id="b4fa5-342">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-342">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b4fa5-343">연결 된 열거형의 경우: <see cref="F:System.IO.FileAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="b4fa5-343">Associated enumeration: <see cref="F:System.IO.FileAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetNameInfo">
      <MemberSignature Language="C#" Value="public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNameInfo(valuetype System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameInfo (nameType As X509NameType, forIssuer As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" />
        <Parameter Name="forIssuer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameType"><span data-ttu-id="b4fa5-344">주체에 대한 <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-344">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject.</span></span></param>
        <param name="forIssuer">
          <span data-ttu-id="b4fa5-345">발급자 이름을 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-345"><see langword="true" /> to include the issuer name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b4fa5-346">인증서에서 주체와 발급자 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-346">Gets the subject and issuer names from a certificate.</span></span></summary>
        <returns><span data-ttu-id="b4fa5-347">인증서 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-347">The name of the certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-348">이 메서드는 대부분의 이름 값의 여러 위치에 있을 수 있으므로 인증서를 구문 분석 하는 대신 항상 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-348">This method should always be used instead of parsing the certificate, since many of the name values can be located in multiple locations.</span></span> <span data-ttu-id="b4fa5-349">이 메서드를 사용 하면 적절 한 이름이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-349">Using this method ensures that the appropriate name is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-350">다음 코드 예제에서는 활성 인증서만 차례로 하나 이상의 인증서를 선택할 수 있도록 현재 사용자 인증서 저장소를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-350">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="b4fa5-351">다음 예에서는 인증서 정보를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-351">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public bool HasPrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrivateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrivateKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-352"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체에 개인 키가 들어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-352">Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key.</span></span></summary>
        <value>
          <span data-ttu-id="b4fa5-353"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체에 개인 키가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-353"><see langword="true" /> if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-354">인증서 컨텍스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-354">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4fa5-355"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체를 제공된 인증서 정보로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-355">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="b4fa5-356">X.509 인증서의 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-356">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-357"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체를 바이트 배열의 데이터로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-357">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-358">이 메서드는 X.509 인증서의 원시 바이트 배열을를 사용할 수는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 관련된 값을 가진 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-358">This method can be used to take a raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with its associated values.</span></span>  
  
 <span data-ttu-id="b4fa5-359">이 메서드는 바이트 배열을 수락 하므로 Base64 인코딩 또는 der로 인코딩된 X.509 인증서 또는 PFX/PKCS12 인증서를 포함 하 여 암호를 요구 하지 않는 인증서 종류에 대해서만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-359">Since this method accepts only a byte array, it can be used only for certificate types that do not require a password, including a Base64-encoded or DER-encoded X.509 certificate or a PFX/PKCS12 certificate.</span></span> <span data-ttu-id="b4fa5-360">참고 PFX/PKCS12 인증서가 둘 이상의 인증서를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-360">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="b4fa5-361">이 경우 개인 키와 연결 된 첫 번째 인증서가 사용 하거나 첫 번째 인증서를 사용할 개인 키가 없으면 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-361">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="b4fa5-362">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-362">for full trust for the immediate caller.</span></span> <span data-ttu-id="b4fa5-363">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-363">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="b4fa5-364">상속자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-364">for full trust for inheritors.</span></span> <span data-ttu-id="b4fa5-365">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 상속할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-365">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b4fa5-366">인증서 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-366">The name of a certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-367"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체를 인증서 파일의 정보로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-367">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-368">이 메서드 인증서 파일을 사용 하 여 X.509 인증서를 나타내며 정보를 표시 하는.cer 확장명을 가진 파일 등의 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 파일에 포함 되어 인증서로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-368">This method uses a certificate file, such as a file with a .cer extension, that represents an X.509 certificate and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with the certificate the file contains.</span></span>  
  
 <span data-ttu-id="b4fa5-369">Base64 인코딩 또는 der로 인코딩된 X.509 인증서, 인증서 PFX/PKCS12 및 Authenticode 같은 서명자 인증서를 포함 하 여 여러 인증서 종류이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-369">This method can be used with several certificate types, including Base64-encoded or DER-encoded X.509 certificates, PFX/PKCS12 certificates, and signer certificates such as Authenticode.</span></span> <span data-ttu-id="b4fa5-370">참고 PFX/PKCS12 인증서가 둘 이상의 인증서를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-370">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="b4fa5-371">이 경우 개인 키와 연결 된 첫 번째 인증서가 사용 하거나 첫 번째 인증서를 사용할 개인 키가 없으면 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-371">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="b4fa5-372">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-372">for full trust for the immediate caller.</span></span> <span data-ttu-id="b4fa5-373">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-373">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="b4fa5-374">상속자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-374">for full trust for inheritors.</span></span> <span data-ttu-id="b4fa5-375">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 상속할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-375">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="b4fa5-376">X.509 인증서의 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-376">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-377">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-377">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="b4fa5-378">인증서를 가져올 위치 및 방법을 제어하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-378">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-379">바이트 배열 데이터, 암호 및 키 저장소 플래그를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-379">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-380">Base64 인코딩된 또는 der로 인코딩된 X.509 인증서 또는 PFX/PKCS12 인증서 같은 인증서 종류에 대 한이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-380">You can use this method for certificate types such as Base64-encoded or DER-encoded X.509 certificates, or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="b4fa5-381">참고 PFX/PKCS12 인증서가 둘 이상의 인증서를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-381">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="b4fa5-382">이 경우 개인 키와 연결 된 첫 번째 인증서가 사용 하거나 첫 번째 인증서를 사용할 개인 키가 없으면 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-382">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-383">하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-383">Never hard code a password within your source code.</span></span>  <span data-ttu-id="b4fa5-384">사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), 16 진수 편집기 또는 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 여는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-384">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="b4fa5-385">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-385">for full trust for the immediate caller.</span></span> <span data-ttu-id="b4fa5-386">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-386">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="b4fa5-387">상속자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-387">for full trust for inheritors.</span></span> <span data-ttu-id="b4fa5-388">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 상속할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-388">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="b4fa5-389">X.509 인증서의 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-389">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-390">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-390">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="b4fa5-391">인증서를 가져올 위치 및 방법을 제어하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-391">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-392">바이트 배열의 데이터, 암호 및 개인 키를 가져오는 방법을 결정하기 위한 플래그를 사용하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-392">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-393">이 메서드를 채우는 데 사용할 수는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 암호를 사용 하 여 바이트 배열로 표시 되는 인증서에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-393">This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a password for the certificate represented by the byte array.</span></span> <span data-ttu-id="b4fa5-394"><xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> 위치와 방법을 제어 하려면 값을 사용할 수 있습니다는 개인 키를 가져오려는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-394">The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how to import the private key.</span></span>  
  
 <span data-ttu-id="b4fa5-395">이 메서드는 바이트 배열을 하며 Base64 인코딩 또는 der로 인코딩된 X.509 인증서 또는 PFX/PKCS12 인증서 같은 인증서 종류에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-395">This method accepts a byte array and can be used for certificate types such as Base64-encoded or DER-encoded X.509 certificates or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="b4fa5-396">참고 PFX/PKCS12 인증서가 둘 이상의 인증서를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-396">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="b4fa5-397">이 경우 개인 키와 연결 된 첫 번째 인증서가 사용 하거나 첫 번째 인증서를 사용할 개인 키가 없으면 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-397">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-398">하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-398">Never hard code a password within your source code.</span></span>  <span data-ttu-id="b4fa5-399">사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), 16 진수 편집기 또는 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 여는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-399">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-400">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-400">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="b4fa5-401">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-401">for full trust for the immediate caller.</span></span> <span data-ttu-id="b4fa5-402">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-402">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="b4fa5-403">상속자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-403">for full trust for inheritors.</span></span> <span data-ttu-id="b4fa5-404">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 상속할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-404">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b4fa5-405">인증서 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-405">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-406">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-406">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="b4fa5-407">인증서를 가져올 위치 및 방법을 제어하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-407">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-408">인증서 파일의 정보, 암호 및 키 저장소 플래그로 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-408">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-409">**보안 정보** 하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-409">**Security Note** Never hard code a password within your source code.</span></span>  <span data-ttu-id="b4fa5-410">사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), 16 진수 편집기 또는 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 여는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-410">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="b4fa5-411">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-411">for full trust for the immediate caller.</span></span> <span data-ttu-id="b4fa5-412">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-412">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="b4fa5-413">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-413">for full trust for the immediate caller.</span></span> <span data-ttu-id="b4fa5-414">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-414">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="b4fa5-415">인증서 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-415">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="b4fa5-416">X.509 인증서 데이터에 액세스하는 데 필요한 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-416">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="b4fa5-417">인증서를 가져올 위치 및 방법을 제어하는 열거형 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-417">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="b4fa5-418"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체를 인증서 파일의 정보, 암호 및 <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> 값으로 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-418">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-419">이 메서드를 사용할 수 있습니다 채우기는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 암호, 인증서 파일의 정보 및 <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-419">This method can be used populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with information from a certificate file, a password, and an <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4fa5-420">하드 코딩 하지 마십시오 소스 코드 내에서 암호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-420">Never hard code a password within your source code.</span></span>  <span data-ttu-id="b4fa5-421">사용 하 여 어셈블리에서 하드 코드 된 암호를 검색할 수는 [Ildasm.exe (IL 디스어셈블러)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), 16 진수 편집기 또는 Notepad.exe와 같은 텍스트 편집기에서 어셈블리를 여는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-421">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="b4fa5-422">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-422">for full trust for the immediate caller.</span></span> <span data-ttu-id="b4fa5-423">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-423">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="b4fa5-424">상속자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-424">for full trust for inheritors.</span></span> <span data-ttu-id="b4fa5-425">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 상속할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-425">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IssuerName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ IssuerName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-426">인증서 발급자의 고유 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-426">Gets the distinguished name of the certificate issuer.</span></span></summary>
        <value><span data-ttu-id="b4fa5-427">인증서 발급자의 이름이 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-427">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-428">이 속성에는 인증서를 발급 한 인증 기관 (CA)의 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-428">This property contains the name of the certificate authority (CA) that issued the certificate.</span></span> <span data-ttu-id="b4fa5-429">인증서의 이름을 가져오려면는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-429">To obtain the name of a certificate, use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> method.</span></span>  
  
 <span data-ttu-id="b4fa5-430">인증서의 고유 이름은 인증서 주체 또는 발급자의 텍스트 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-430">The distinguished name for the certificate is a textual representation of the certificate subject or issuer.</span></span> <span data-ttu-id="b4fa5-431">이 표현은 이름 특성으로 구성 (예를 들어 "CN = MyName, OU = MyOrgUnit, C = US").</span><span class="sxs-lookup"><span data-stu-id="b4fa5-431">This representation consists of name attributes (for example, "CN=MyName, OU=MyOrgUnit, C=US").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-432">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-432">The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-433">인증서 컨텍스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-433">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotAfter">
      <MemberSignature Language="C#" Value="public DateTime NotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotAfter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotAfter { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-434">인증서가 더 이상 유효하지 않은 현지 시간 날짜를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-434">Gets the date in local time after which a certificate is no longer valid.</span></span></summary>
        <value><span data-ttu-id="b4fa5-435">인증서의 만료 날짜를 나타내는 <see cref="T:System.DateTime" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-435">A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-436">이 속성 인증서가 잘못 되었습니다. 만료 날짜를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-436">This property indicates an expiration date on which the certificate becomes invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-437">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-437">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-438">인증서를 읽을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-438">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-439">인증서를 사용할 수 있게 되는 현지 시간 날짜를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-439">Gets the date in local time on which a certificate becomes valid.</span></span></summary>
        <value><span data-ttu-id="b4fa5-440">인증서의 개시 날짜를 나타내는 <see cref="T:System.DateTime" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-440">A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-441">이 속성은 인증서가 유효 날짜를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-441">This property indicates the date on which the certificate becomes valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-442">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-442">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-443">인증서를 읽을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-443">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PrivateKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-444">인증서와 관련된 개인 키를 나타내는 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 개체를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-444">Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="b4fa5-445">RSA 또는 DSA 암호화 서비스 공급자인 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-445">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-446">현재이 속성은 지원 DSA 또는 RSA 키만 반환 중 하나는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 또는 <xref:System.Security.Cryptography.DSACryptoServiceProvider> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-446">Currently this property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object.</span></span> <span data-ttu-id="b4fa5-447">반환 하는 경우 개인 키가 인증서에 연결 된, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-447">If no private key is associated with the certificate, it returns `null`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="b4fa5-448">이 속성을 설정 하는 경우 `null` 또는 첫 번째 삭제 하지 않고 다른 키를 개인 키 파일을 디스크에 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-448">If you set this property to `null` or to another key without first deleting it, a private key file is left on the disk.</span></span>  
  
 <span data-ttu-id="b4fa5-449">이 속성과 연결 된 개인 키를 제대로 삭제 하려면 설정 `PersistKeyInCsp` 를 `false`, 한 다음 호출에서 <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-449">To properly delete the private key associated with this property, set `PersistKeyInCsp` to `false`, and then call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-450">다음 코드 예제에서는 활성 인증서만 차례로 하나 이상의 인증서를 선택할 수 있도록 현재 사용자 인증서 저장소를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-450">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="b4fa5-451">다음 예에서는 인증서 정보를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-451">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-452">키 값이 RSA 또는 DSA 키가 아니거나 키를 읽을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-452">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b4fa5-453">이 속성에 대해 설정되는 값이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-453">The value being set for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b4fa5-454">이 개인 키에 대한 키 알고리즘이 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-454">The key algorithm for this private key is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="b4fa5-455">X.509 키가 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-455">The X.509 keys do not match.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b4fa5-456">암호화 서비스 공급자 키가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-456">The cryptographic service provider key is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-457">인증서와 관련된 <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-457">Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="b4fa5-458"><see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-458">A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-459">이 속성은 반환 된 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> 개체 식별자를 포함 하는 개체 (<xref:System.Security.Cryptography.Oid>) 공개 키 알고리즘, ASN.1 인코딩 매개 변수를 ASN.1 인코딩 키 값을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-459">This property returns a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> object, which contains the object identifier (<xref:System.Security.Cryptography.Oid>) representing the public key algorithm, the ASN.1-encoded parameters, and the ASN.1-encoded key value.</span></span>  
  
 <span data-ttu-id="b4fa5-460">키를 가져올 수도 있습니다는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 참조 하 여 개체는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-460">You can also obtain the key as an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object by referencing the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> property.</span></span> <span data-ttu-id="b4fa5-461">이 속성은 지원만 DSA 또는 RSA 키 중 하나를 반환 하므로 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 또는 <xref:System.Security.Cryptography.DSACryptoServiceProvider> 공개 키를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-461">This property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object that represents the public key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-462">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-462">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-463">키 값이 RSA 또는 DSA 키가 아니거나 키를 읽을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-463">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public byte[] RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] RawData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ RawData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-464">인증서의 원시 데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-464">Gets the raw data of a certificate.</span></span></summary>
        <value><span data-ttu-id="b4fa5-465">바이트 배열로 나타낸 인증서의 원시 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-465">The raw data of the certificate as a byte array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b4fa5-466">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-466">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4fa5-467"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체의 상태를 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-467">Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-468">이 메서드는 인증서의 상태를 다시 설정 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-468">This method can be used to reset the state of the certificate.</span></span> <span data-ttu-id="b4fa5-469">또한 인증서와 관련 된 모든 리소스를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-469">It also frees any resources associated with the certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="b4fa5-470">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-470">for full trust for the immediate caller.</span></span> <span data-ttu-id="b4fa5-471">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-471">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="b4fa5-472">상속자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-472">for full trust for inheritors.</span></span> <span data-ttu-id="b4fa5-473">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 상속할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-473">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public string SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerialNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerialNumber { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-474">인증서의 일련 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-474">Gets the serial number of a certificate.</span></span></summary>
        <value><span data-ttu-id="b4fa5-475">인증서의 일련 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-475">The serial number of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-476">인증서의 일련 번호는 원래 X.509 프로토콜의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-476">The serial number of the certificate is part of the original X.509 protocol.</span></span> <span data-ttu-id="b4fa5-477">일련 번호는 인증 기관 (CA) 라고도 하는 인증서 발급자가 발급 한 고유 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-477">The serial number is a unique number issued by the certificate issuer, which is also called the Certificate Authority (CA).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-478">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-478">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-479">인증서의 서명을 만드는 데 사용하는 알고리즘을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-479">Gets the algorithm used to create the signature of a certificate.</span></span></summary>
        <value><span data-ttu-id="b4fa5-480">서명 알고리즘의 개체 식별자(<see cref="T:System.Security.Cryptography.Oid" />)를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-480">Returns the object identifier (<see cref="T:System.Security.Cryptography.Oid" />) of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-481">개체 식별자 (<xref:System.Security.Cryptography.Oid>) 인증서에 사용 된 서명 알고리즘의 형식을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-481">The object identifier (<xref:System.Security.Cryptography.Oid>) identifies the type of signature algorithm used by the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-482">다음 코드 예제에서는 활성 인증서만 차례로 하나 이상의 인증서를 선택할 수 있도록 현재 사용자 인증서 저장소를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-482">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="b4fa5-483">다음 예에서는 인증서 정보를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-483">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-484">인증서를 읽을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-484">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubjectName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubjectName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ SubjectName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-485">인증서에서 주체 고유 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-485">Gets the subject distinguished name from a certificate.</span></span></summary>
        <value><span data-ttu-id="b4fa5-486">인증서 주체의 이름을 나타내는 <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-486">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-487">주체 고유 이름은 인증서의 사용자의 이름이입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-487">The subject distinguished name is the name of the user of the certificate.</span></span> <span data-ttu-id="b4fa5-488">인증서에 대 한 고유 이름은 인증서의 발급자 또는 주체의 텍스트 표현입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-488">The distinguished name for the certificate is a textual representation of the subject or issuer of the certificate.</span></span> <span data-ttu-id="b4fa5-489">이 표현은 특성으로 구성 이름, 예를 들어 "CN = MyName, OU = MyOrgUnit, C = US"입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-489">This representation consists of name attributes, for example, "CN=MyName, OU=MyOrgUnit, C=US".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-490">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-490">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-491">인증서 컨텍스트가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-491">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbprint">
      <MemberSignature Language="C#" Value="public string Thumbprint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Thumbprint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thumbprint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Thumbprint { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-492">인증서의 지문을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-492">Gets the thumbprint of a certificate.</span></span></summary>
        <value><span data-ttu-id="b4fa5-493">인증서의 지문</span><span class="sxs-lookup"><span data-stu-id="b4fa5-493">The thumbprint of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-494">지문을은 SHA1 알고리즘을 사용 하 여 동적으로 생성 하 고 인증서에 실제로 존재 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-494">The thumbprint is dynamically generated using the SHA1 algorithm and does not physically exist in the certificate.</span></span> <span data-ttu-id="b4fa5-495">지 문으로 인증서에 대 한 고유한 값 이므로, 인증서 저장소에서 특정 인증서를 찾을 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-495">Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-496">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-496">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4fa5-497">X.509 인증서를 텍스트 형식으로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-497">Displays an X.509 certificate in text format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4fa5-498">X.509 인증서를 텍스트 형식으로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-498">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="b4fa5-499">인증서 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-499">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-500">모든와 마찬가지로 `ToString` 메서드를 출력 하지 수 버전의.NET Framework 전체에서 일관성 있으므로 메서드 결과 하지 콘텐츠 구문 분석 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-500">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="b4fa5-501">속성을 사용 하는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 콘텐츠에 대 한 정확한 정보를 얻거나 사용 하 여 개체는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> 인증서에 대 한 정보를 얻는 메서드를 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-501">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information about the content or use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> method to obtain information about the certificate.</span></span>  
  
 <span data-ttu-id="b4fa5-502">이 메서드는 인증서를 텍스트 형식으로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-502">This method displays the certificate in text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-503">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-503">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString (bool verbose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString(bool verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString (verbose As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString(bool verbose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verbose">
          <span data-ttu-id="b4fa5-504">공개 키, 개인 키, 확장 등을 표시하려면 <see langword="true" />이고, 지문, 일련 번호, 주체 및 발급자 이름 등을 포함하여 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 클래스와 유사한 정보를 표시하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-504"><see langword="true" /> to display the public key, private key, extensions, and so forth; <see langword="false" /> to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on.</span></span></param>
        <summary><span data-ttu-id="b4fa5-505">X.509 인증서를 텍스트 형식으로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-505">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="b4fa5-506">인증서 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-506">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-507">모든와 마찬가지로 `ToString` 메서드를 출력 하지 수 버전의.NET Framework 전체에서 일관성 있으므로 메서드 결과 하지 콘텐츠 구문 분석 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-507">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="b4fa5-508">속성을 사용 하는 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 개체 정확한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-508">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information.</span></span>  
  
 <span data-ttu-id="b4fa5-509">이 메서드는 인증서를 텍스트 형식으로 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-509">This method displays the certificate in text format.</span></span> <span data-ttu-id="b4fa5-510">경우는 `verbose` 로 설정 된 `true`, 텍스트 표시에는 공개 키, 개인 키 및 확장이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-510">If the `verbose` parameter is set to `true`, the text display includes the public key, private key, and extensions.</span></span> <span data-ttu-id="b4fa5-511">경우 `verbose` 로 설정 된 `false`, 텍스트 표시에는 지문, 일련 번호, 제목 및 발급자 이름 및 유효 날짜 정보를 포함 하 여 X.509 인증서에서 사용할 수 있는 필드가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-511">If `verbose` is set to `false`, the text display includes those fields available from the X.509 certificate, including thumbprint, serial number, subject and issuer names, and validity date information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-512">다음 코드 예제에서는 실행 하는 명령줄 인수로 서 인증서 파일을 사용 하 고 다양 한 인증서 속성을 콘솔 출력을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-512">The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Verify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("by default this depends on the incomplete X509Chain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4fa5-513">기본 유효성 검사 정책을 사용하여 X.509 체인의 유효성 검사를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-513">Performs a X.509 chain validation using basic validation policy.</span></span></summary>
        <returns>
          <span data-ttu-id="b4fa5-514">유효성 검사에 성공하면 <see langword="true" />이고, 유효성 검사에 실패하면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-514"><see langword="true" /> if the validation succeeds; <see langword="false" /> if the validation fails.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-515">이 메서드는 인증서에 대 한 간단한 체인 빌드하고 해당 체인에 기본 정책을 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-515">This method builds a simple chain for the certificate and applies the base policy to that chain.</span></span> <span data-ttu-id="b4fa5-516">오류에 대 한 자세한 내용은 해야 할 경우 직접 사용 하 여 인증서의 유효성을 검사는 <xref:System.Security.Cryptography.X509Certificates.X509Chain> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-516">If you need more information about a failure, validate the certificate directly using the <xref:System.Security.Cryptography.X509Certificates.X509Chain> object.</span></span>  
  
 <span data-ttu-id="b4fa5-517">기본 엔진 체인 사용 하 여 재정의할 수 있는지 참고는 <xref:System.Security.Cryptography.CryptoConfig> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-517">Note that the default chaining engine can be overridden using the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span> <span data-ttu-id="b4fa5-518">Microsoft Windows Server 2003 기본 엔진 사양을 따르는 RFC3280에 설명 된 "[인증서 및 인증서 해지 목록 (CRL) 프로필](http://go.microsoft.com/fwlink/?LinkId=45286)."</span><span class="sxs-lookup"><span data-stu-id="b4fa5-518">On Microsoft Windows Server 2003, the default engine conforms to the specification described in RFC3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-519">다음 코드 예제에서는 활성 인증서만 차례로 하나 이상의 인증서를 선택할 수 있도록 현재 사용자 인증서 저장소를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-519">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="b4fa5-520">다음 예에서는 인증서 정보를 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-520">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-521">인증서를 읽을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-521">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4fa5-522">X.509 형식의 인증서 버전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-522">Gets the X.509 format version of a certificate.</span></span></summary>
        <value><span data-ttu-id="b4fa5-523">인증서 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-523">The certificate format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4fa5-524">X.509 인증서의 여러 버전이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-524">There are several versions of X.509 certificates.</span></span> <span data-ttu-id="b4fa5-525">이 속성은 인증서에 사용 되는 형식을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-525">This property identifies which format the certificate uses.</span></span> <span data-ttu-id="b4fa5-526">예를 들어 "3" 버전 3 인증서에 대 한 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-526">For example, "3" is returned for a version 3 certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4fa5-527">다음 코드 예제에서는 인증서 파일을 인수로 사용 하 고 다양 한 인증서 속성을 콘솔에 출력 하는 명령줄 실행 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b4fa5-527">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="b4fa5-528">인증서를 읽을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b4fa5-528">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>