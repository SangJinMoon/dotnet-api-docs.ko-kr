<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c45f28c3393ed677cfa3432029e87055d139c429" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30530667" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET 빌드 환경에서 소스 코드를 생성하기 위한 속성 및 메서드 집합을 정의합니다. 이 클래스는 추상 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 빌드 환경에서는 <xref:System.Web.Compilation.BuildProvider> 개체 응용 프로그램 내에서 다른 파일 형식에 대 한 소스 코드를 생성 합니다. 클래스에서 파생 된 <xref:System.Web.Compilation.BuildProvider> 주로 파일, 웹 페이지, 리소스 및 기타 사용자 지정 항목에 대 한 소스 코드를 제공 합니다.  
  
 일반적으로 만들지 않으면의 인스턴스는 <xref:System.Web.Compilation.BuildProvider> 클래스를 직접 합니다. 파생 되는 클래스를 구현 하는 대신, <xref:System.Web.Compilation.BuildProvider>, 구성 및는 <xref:System.Web.Compilation.BuildProvider> ASP.NET 내에서 사용할 수 있도록 빌드 환경.  
  
 인스턴스는 <xref:System.Web.Compilation.BuildProvider> 클래스와 함께 사용 됩니다 <xref:System.Web.Compilation.AssemblyBuilder> 개체 컴파일된 어셈블리에 하나 이상의 파일을 빌드해야 합니다. A <xref:System.Web.Compilation.BuildProvider> 개별 파일에 대 한 적절 한 언어의 소스 코드를 생성 하는 인스턴스 및 <xref:System.Web.Compilation.AssemblyBuilder> 개체는 각는 소스를 결합 <xref:System.Web.Compilation.BuildProvider> 단일 어셈블리로 인스턴스.  
  
 인스턴스를 사용 하는 ASP.NET 빌드 환경에서 <xref:System.Web.Compilation.BuildProvider> 응용 프로그램 내에서 파일을 작성 하는 클래스입니다. <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 의 속성은 <xref:System.Web.Compilation.BuildProvider> 클래스를 구축할 수 파일의 경로 나타냅니다. 응용 프로그램 내에서 각 파일의 파일 확장명에 해당 하는 빌드 공급자가 매핑됩니다. ASP.NET 빌드 환경은 <xref:System.Web.Compilation.BuildProvider> 파일 확장명에 따라 하 고 사용 하 여 각 파일에 대 한 인스턴스는 <xref:System.Web.Compilation.BuildProvider> 메서드는 파일에 대 한 소스 코드를 생성 합니다. ASP.NET 빌드 환경은 <xref:System.Web.Compilation.AssemblyBuilder> 기본 컴파일러 언어와 파일의 컨텍스트를 기반으로 개체는 <xref:System.Web.Compilation.BuildProvider> 메서드 하나 이상의 파일에서 어셈블리를 빌드할 때 있도록는 <xref:System.Web.Compilation.BuildProvider> 인스턴스에 영향을 줄 수 전체 어셈블리에서 해당 파일에 대 한 소스 코드입니다.  
  
 ASP.NET 응용 프로그램에서 특정 파일 형식에 대 한 사용자 지정 빌드 작업을 정의 하려면 클래스에서 파생 해야 <xref:System.Web.Compilation.BuildProvider>파일 형식을 작성 하기 위한 파생된 클래스 내에서 멤버를 구현 하 고 해당 파일 확장명에 대 한 빌드 공급자를 구성 합니다. 응용 프로그램 구성 파일입니다.  
  
 지원 되는 파일에 대 한 파일 확장명을 지정 하는 빌드 공급자 코드 파일, 웹 파일, 리소스 파일 또는 모든 파일을 지원 하는지 여부 및 합니다. 사용 하 여는 `type` 특성을 구현 하는 빌드 공급자의 정규화 된 형식 이름을 지정 합니다. 사용 하 여는 <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> App_Code 디렉터리에 파일, 웹 콘텐츠 디렉터리에 전역 또는 로컬 리소스의 파일 또는 모든 파일에 빌드 공급자 적용 되는지 여부를 지정 하는 클래스입니다. 사용 하 여는 `extension` 파일의 특성을 식별 하는 파일 확장명을 지정 하는 <xref:System.Web.Compilation.BuildProvider> 클래스는 지원 합니다. 사용 하 여는 <xref:System.Web.Configuration.BuildProviderCollection> 빌드 구성 파일에는 공급자를 검사 하는 클래스입니다. 빌드 공급자를 구성 하는 방법에 대 한 자세한 내용은 참조 [buildProviders 요소 (ASP.NET 설정 스키마) 컴파일에](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)합니다.  
  
 사용자 지정 파일 형식용 소스 코드를 생성 하는 빌드 공급자를 구현 하려면에서 클래스를 파생 <xref:System.Web.Compilation.BuildProvider>, 재정의 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 메서드 지원 되는 파일 형식에 대 한 소스 코드를 생성 합니다. 생성 된 소스에 추가 되는 <xref:System.Web.Compilation.AssemblyBuilder> 또는 실제 소스 코드 파일을 나타내는 콘텐츠로 CodeDOM 그래프의 형태로 개체입니다. 빌드 공급자 특정 프로그래밍 언어를 필요한 경우 재정의 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 반환 하는 <xref:System.Web.Compilation.CompilerType> 지원 되는 프로그래밍 언어에 대 한 개체입니다. 빌드 공급자 특정 프로그래밍 언어에 필요 하지 않으면 경우 재정의 하지 않는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 속성; 빌드 공급자 Visual Basic 또는 C# 같은.NET Framework 언어를 사용할 수 있는지 여부를 나타내는 기본 클래스 구현 사용 합니다.  
  
 웹 콘텐츠에 대 한 소스 코드를 생성 하는 빌드 공급자를 구현 하려면에서 클래스를 파생 <xref:System.Web.Compilation.BuildProvider> 재정의 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 반환 하는 메서드는 <xref:System.Type> 에 의해 생성 된 클래스에 대 한 <xref:System.Web.Compilation.BuildProvider>합니다. 재정의 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 메서드는 지원 되는 파일에서 제공 되는 형식에 대 한 소스 코드를 생성 합니다.  
  
> [!NOTE]
>  사용자 지정 추가 <xref:System.Web.Compilation.BuildProvider> Web.config 파일에는 클래스는 ASP.NET 웹 사이트에서 작동 하지만 ASP.NET 웹 응용 프로그램 프로젝트에서 작동 하지 않습니다. 웹 응용 프로그램 프로젝트에서 생성 되는 코드는 <xref:System.Web.Compilation.BuildProvider> 응용 프로그램에 클래스를 포함할 수 없습니다. 자세한 내용은 참조 [ASP.NET 웹 응용 프로그램 프로젝트 미리 컴파일 개요](http://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 추상에서 상속 하는 간단한 빌드 공급자 구현 <xref:System.Web.Compilation.BuildProvider> 기본 클래스입니다. 빌드 공급자는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, 및 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 기본 클래스의 멤버입니다. 이 예제에는의 구현에서 `SampleClassGenerator` 클래스입니다. 자세한 내용은 참조는 <xref:System.CodeDom.CodeCompileUnit> 클래스 개요입니다.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Compilation.BuildProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Web.Compilation.BuildProvider> 클래스는 추상 클래스의 인스턴스를 만들 수 없습니다, <xref:System.Web.Compilation.BuildProvider> 직접 생성자를 사용 합니다.  
  
 파생 된 경우는 <xref:System.Web.Compilation.BuildProvider> 클래스 생성자를 재정의 하 여 빌드 공급자 구현에 대 한 사용자 지정 초기화 작업을 구현 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>빌드 공급자가 사용자 지정 파일 형식용 소스 코드를 생성하기 위해 사용하는 컴파일러 형식을 나타냅니다.</summary>
        <value>가상 경로의 소스 코드를 빌드하는 데 사용되는 코드 생성기, 코드 컴파일러 및 컴파일러 설정을 나타내는 읽기 전용 <see cref="T:System.Web.Compilation.CompilerType" />입니다. 기본 클래스는 <see langword="null" />을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 속성의 구현에 대 한 소스 코드 컴파일에 대 한 설정을 제공을 <xref:System.Web.Compilation.BuildProvider>합니다. <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 속성은 `null` 빌드 공급자 특정 코드 언어를 생성 하 고 소스 코드 컴파일 필요 하지 않은 합니다.  
  
 에 대 한 값을 설정 하는 <xref:System.Web.Compilation.CompilerType> 는 빌드 공급자 구현 사용 하 여 내에서 개체는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> 또는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> 메서드.  
  
 <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> 속성 지정는 <xref:System.CodeDom.Compiler.CodeDomProvider> 생성 하 고 빌드 공급자에 대 한 소스 코드를 컴파일하는 데 사용 하는 구현 합니다. <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> 속성은 소스 코드를 어셈블리로 컴파일하는 데 사용 되는 설정을 정의 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 추상에서 상속 하는 간단한 빌드 공급자 구현 <xref:System.Web.Compilation.BuildProvider> 기본 클래스입니다. 빌드 공급자는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, 및 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 기본 클래스의 멤버입니다.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">빌드 공급자에서 생성된 소스 코드를 참조하는 어셈블리 작성기입니다.</param>
        <summary>빌드 공급자의 가상 경로에 대한 소스 코드를 생성하여 지정된 어셈블리 작성기에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 파일 형식용 소스 코드를 생성 하는 빌드 공급자를 구현 하려면에서 클래스를 파생는 <xref:System.Web.Compilation.BuildProvider> 클래스를 재정의 하는 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 메서드 지원 되는 파일 형식에 대 한 소스 코드를 생성 합니다.  
  
 일반적으로 빌드 공급자의 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 구현 읽기는 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 속성, 내용을 구문 분석 및 생성된 된 소스 코드를 지정 된 추가 <xref:System.Web.Compilation.AssemblyBuilder> 개체입니다. 이러한 소스 코드의 형태로 어셈블리에는 <xref:System.IO.TextWriter> 개체나 CodeDOM 그래프입니다. 소스 코드를 통해 어셈블리를 추가 하는 <xref:System.IO.TextWriter> 개체를 가져오려면는 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 메서드. 어셈블리에 CodeDOM 그래프에서 소스 코드를 추가 하려면 사용 된 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> 메서드.  
  
 특정 프로그래밍 언어로 소스 코드를 생성 하는 빌드 공급자를 재정의 해야는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 반환 하는 <xref:System.Web.Compilation.CompilerType> 지원 되는 프로그래밍 언어에 대 한 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 추상에서 상속 하는 간단한 빌드 공급자 구현 <xref:System.Web.Compilation.BuildProvider> 기본 클래스입니다. 빌드 공급자는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, 및 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 기본 클래스의 멤버입니다.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">이 메서드는 반환될 때 소스 코드의 연결된 모든 줄 번호와 줄 pragma가 들어 있는 사전을 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>생성된 CodeDOM 그래프의 컨테이너를 나타냅니다.</summary>
        <returns>
          <see cref="T:System.Web.Compilation.BuildProvider" /> 인스턴스에 의해 생성되는 CodeDOM 그래프의 컨테이너입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 통해 사용할 수는 <xref:System.Web.Compilation.ClientBuildManager> Visual Studio에서 구문 강조 및 디자이너 지원에 대 한 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">빌드 공급자의 가상 경로에 대한 컴파일 결과입니다.</param>
        <summary>컴파일된 어셈블리에 유지될 문자열을 생성합니다.</summary>
        <returns>빌드 환경에서 유지할 문자열이거나, <see cref="T:System.Web.Compilation.BuildProvider" /> 인스턴스에서 <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />을 구현하지 않는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> 의 메서드는 <xref:System.Web.Compilation.BuildManager> 개체는 입력된 가상 경로 및 호출에 대 한 빌드 공급자의 인스턴스를 만듭니다는 <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> 에서 메서드는 <xref:System.Web.Compilation.BuildProvider> 개체입니다.  
  
 기본 <xref:System.Web.Compilation.BuildProvider> 반환 클래스 `null` 에 대 한는 <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> 메서드를 나타내는 <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> 구현 되지 않았습니다.  
  
 특정 빌드 공급자 구현을 구현할 수 <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> 대신는 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 메서드. A <xref:System.Web.Compilation.BuildProvider> 개체 일반적으로 사용 하 여 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 반환 하는 <xref:System.Type> 가상 경로 대 한 개체입니다. 그러나는 <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> 메서드를 나타내는 데 사용할 수는 <xref:System.Web.Compilation.BuildProvider> 개체 가상 경로에서 여러 형식을 생성할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>응용 프로그램의 기본 언어에 사용되는 컴파일러 설정을 반환합니다.</summary>
        <returns>응용 프로그램의 기본 언어에 사용되는 컴파일러 설정을 나타내는 <see cref="T:System.Web.Compilation.CompilerType" />입니다. 기본 클래스의 경우에는 응용 프로그램 구성 파일에 따라 기본 컴파일러가 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> 빌드 공급자에 대 한 기본 컴파일러 형식을 확인 합니다. 사용 하 여는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> 특정 언어 이름에 대 한 빌드 공급자에 구성 된 컴파일러 형식을 확인 합니다.  
  
 기본 <xref:System.Web.Compilation.BuildProvider> 클래스를 사용 하 여 기본 컴파일러 형식을 결정는 `defaultLanguage` 특성 응용 프로그램 구성 파일의 섹션에는 값입니다. 기본 컴파일러 형식을 사용 하 여 설정 컴파일 섹션에 기본 언어 설정이 없는 경우는 <xref:Microsoft.VisualBasic.VBCodeProvider> 언어 공급자입니다.  
  
 파생 된 경우는 <xref:System.Web.Compilation.BuildProvider> 클래스에서는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> 설정 하는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 구현 내에서 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">코드 언어 이름입니다.</param>
        <summary>지정된 언어에 따라 빌드 공급자의 컴파일러 설정을 반환합니다.</summary>
        <returns>지정된 언어에 따라 빌드 공급자의 컴파일러 설정을 나타내는 <see cref="T:System.Web.Compilation.CompilerType" />입니다. 기본 클래스의 경우에는 응용 프로그램 구성 파일에 따라 언어의 기본 컴파일러 설정이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> 특정 언어 이름에 대 한 빌드 공급자에 구성 된 컴파일러 형식을 확인 합니다. 사용 하 여는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> 빌드 공급자에 대 한 기본 컴파일러 형식을 확인 합니다.  
  
 기본 <xref:System.Web.Compilation.BuildProvider> 클래스를 사용 하 여 기본 컴파일러 형식을 결정는 <xref:System.Web.Configuration.Compiler> 의 요소는 <xref:System.Web.Configuration.CompilationSection.Compilers%2A> 의 속성은 <xref:System.Web.Configuration.CompilationSection> 구성 파일에 대 한 개체입니다. 구성 파일의 섹션에는 및 요소에 있는 요소를 검사 하는 것과 같습니다. 예를 들어는 `language` 값 VB, 기본 클래스 메서드는 반환는 <xref:System.Web.Compilation.CompilerType> 의 인스턴스에 대 한 구성된 된 설정에 해당 하는 개체 <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>합니다.  
  
 파생 시키는 경우는 <xref:System.Web.Compilation.BuildProvider> 클래스에서는 <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> 설정 하는 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 구현에서 지 원하는 언어에 대 한 속성 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="language" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Web.HttpException">
          <paramref name="language" />가 빌드 공급자에 대해 구성된 컴파일러와 일치하지 않는 경우</exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">빌드 공급자의 가상 경로에 대한 컴파일 결과입니다.</param>
        <summary>가상 경로에서 빌드 공급자가 생성한 형식을 반환합니다.</summary>
        <returns>가상 경로에 대해 빌드 공급자가 생성한 형식입니다. 기본 클래스는 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예:.aspx 파일 웹 콘텐츠에 대 한 소스 코드를 생성 하는 빌드 공급자를 구현 하려면에서 클래스를 파생는 <xref:System.Web.Compilation.BuildProvider> 클래스를 재정의 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 메서드를 사용 하는 빌드 공급자가 생성 하는 형식을 반환 합니다.  
  
 ASP.NET 빌드 시스템에서 각 빌드 공급자에 대 한 파일을 컴파일 및 생성 한 <xref:System.CodeDom.Compiler.CompilerResults> 에 전달 되는 개체는 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 메서드. 일반적으로 빌드 공급자의 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> 구현을 사용 하 여는 <xref:System.Reflection.Assembly.GetType%2A> 에서 메서드는 <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> 입력의 속성 `results` 형식을 반환 하는 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">빌드 공급자의 가상 경로에 대한 컴파일 결과입니다.</param>
        <summary>가상 경로를 빌드할 때 수행할 작업을 나타내는 값을 반환합니다.</summary>
        <returns>ASP.NET 빌드 환경에서 가상 경로를 빌드한 후 수행할 작업을 나타내는 <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> 의 인스턴스를 사용 하는 경우 메서드는 ASP.NET 빌드 환경에서 사용 된 <xref:System.Web.Compilation.BuildProvider> 클래스에서 빌드 파일 및 컴파일된 어셈블리를 로드할 수 있습니다.  
  
 기본 <xref:System.Web.Compilation.BuildProvider> 클래스 메서드가 반환 되는 <xref:System.Web.Compilation.BuildProviderResultFlags.Default> 가상 경로가 빌드될 때 특별 한 작업이 없는 필수 항목 임을 나타내는 필드 값입니다.  
  
 파생 된 경우는 <xref:System.Web.Compilation.BuildProvider> 클래스를 구현할 수 있습니다는 <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> 메서드를 다른 반환 <xref:System.Web.Compilation.BuildProviderResultFlags> 사용자 지정 파일 형식이 나 가상 경로 대 한 값입니다. 예를 들어 다시 가상 경로 필요한 경우 포함 하는 <xref:System.AppDomain> 개체를 다시 로드를 반환할 수 있습니다는 <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> 에서 열거형 값 프로그램 <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>가상 경로에서 읽는 데 사용할 텍스트 판독기를 엽니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 빌드 공급자 개체의 가상 경로에서 읽는 데 사용할 텍스트 판독기를 엽니다.</summary>
        <returns>
          <see cref="T:System.IO.TextReader" />의 콘텐츠를 읽는 데 사용할 수 있는 열린 <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.IO.TextReader.Read%2A> 메서드 반환 된 <xref:System.IO.TextReader> 개체의 내용을 읽을 수는 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 속성에 대 한는 <xref:System.Web.Compilation.BuildProvider> 개체입니다.  
  
 호출한 후의 <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> 사용 해야 합니다는 <xref:System.IO.TextReader.Close%2A> 을 닫는 메서드는 <xref:System.IO.TextReader> 개체와 연결 된 시스템 리소스를 해제 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">읽을 가상 경로입니다.</param>
        <summary>지정된 가상 경로에서 읽는 데 사용할 텍스트 판독기를 엽니다.</summary>
        <returns>지정된 가상 경로의 콘텐츠를 읽는 데 사용할 수 있는 열린 <see cref="T:System.IO.TextReader" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.IO.TextReader.Read%2A> 메서드 반환 된 <xref:System.IO.TextReader> 가상 경로의 내용을 읽을 수 있는 개체입니다.  
  
 호출한 후의 <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> 사용 해야 합니다는 <xref:System.IO.TextReader.Close%2A> 을 닫는 메서드는 <xref:System.IO.TextReader> 개체와 연결 된 시스템 리소스를 해제 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>가상 경로에서 읽기 위한 스트림을 엽니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 빌드 공급자 개체의 가상 경로를 읽는 데 사용할 스트림을 엽니다.</summary>
        <returns>
          <see cref="T:System.IO.Stream" />의 콘텐츠를 읽는 데 사용할 수 있는 열린 <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.IO.Stream.Read%2A> 메서드 반환 된 <xref:System.IO.Stream> 개체에 대 한 가상 경로의 내용을 읽을 수는 <xref:System.Web.Compilation.BuildProvider> 개체입니다.  
  
 호출한 후의 <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> 사용 해야 합니다는 <xref:System.IO.Stream.Close%2A> 을 닫는 메서드는 <xref:System.IO.Stream> 개체와 연결 된 시스템 리소스를 해제 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">읽을 가상 경로입니다.</param>
        <summary>지정된 가상 경로에서 읽기 위한 스트림을 엽니다.</summary>
        <returns>지정된 가상 경로의 콘텐츠를 읽는 데 사용할 수 있는 열린 <see cref="T:System.IO.Stream" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.IO.Stream.Read%2A> 메서드 반환 된 <xref:System.IO.Stream> 가상 경로의 내용을 읽을 수 있는 개체입니다.  
  
 호출한 후의 <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> 사용 해야 합니다는 <xref:System.IO.Stream.Close%2A> 을 닫는 메서드는 <xref:System.IO.Stream> 개체와 연결 된 시스템 리소스를 해제 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">컴파일러 결과입니다.</param>
        <summary>파생된 클래스를 재정의하면 컴파일러 오류 메시지를 검토하고 수정하여 추가 정보를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 오류 텍스트를 사용자에 게 더 유용 하 게 만들려면 표시 되기 전에 컴파일러 오류를 수정할 수 있도록 일반적으로이 메서드를 재정의 합니다. 마우스를 특정 오류의 컨텍스트를 알고 있으며 해결 방법에 대 한 사용자에 게 정보를 제공할 수 있는 시나리오에서 유용 합니다. 원래 컴파일러 오류 메시지는 대개 특정 언어 구조 및 수행할 수 없습니다 실제 원인을 또는 솔루션 확실 한 사용자에 게 합니다.  
  
 사용 하 여 오류에 액세스할 수 있습니다는 <xref:System.CodeDom.Compiler.CompilerResults> 메서드에 전달 되는 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>빌드 공급자에서 생성한 소스 코드로 컴파일할 어셈블리를 나타냅니다.</summary>
        <value>빌드 공급자에서 생성한 소스 코드로 참조할 수 있는 읽기 전용의 어셈블리 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 빌드 환경 빌드 공급자가 참조에 사용할 수 있는 어셈블리의 컬렉션입니다. 빌드 공급자가 생성 한 소스 코드 참조 된 어셈블리의 public 형식을 사용할 수 있습니다. 참조 된 어셈블리 컬렉션 다른 ASP.NET 응용 프로그램에서 빌드한 어셈블리와 구성 파일의 요소에 나열 된 어셈블리로 구성 됩니다.  
  
 빌드 공급자를 사용 하 여 추가 어셈블리 추가 빌드 공급자 추가 어셈블리를 참조 하는 소스 코드를 생성 하는 경우는 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> 메서드. ASP.NET 빌드 환경 외부 형식을 참조 어셈블리를 모두 추가 하 여 사용 하 여 어셈블리 컴파일 중에 빌드 공급자를 참조할 수 있는 어셈블리의 기본 컬렉션을 확인 합니다.  
  
 <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> 컬렉션 참조에 대 한 다른 빌드 공급자에 의해 추가 된 어셈블리를 포함 하지 않습니다는 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extension">빌드 공급자에 대한 파일 이름 확장명입니다.</param>
        <param name="providerType">빌드 공급자 클래스입니다.</param>
        <summary>빌드 공급자를 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web.config 파일에서 정의 하는 대신 빌드 공급자를 등록 하려면이 메서드를 사용할 수 있습니다. 빌드 공급자에 대 한 자세한 내용은 참조는 <xref:System.Web.Compilation.BuildProvider> 클래스 및 [buildProviders 요소 (ASP.NET 설정 스키마) 컴파일에](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>구현된 빌드 공급자를 사용하여 빌드할 파일을 나타냅니다.</summary>
        <value>이 빌드 공급자로 컴파일할 파일의 가상 경로를 지정하는 읽기 전용 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가상 경로 <xref:System.Web.Compilation.BuildProvider> 개체는 빌드 공급자가 컴파일되는 파일의 경로입니다. 예를 들어, 사용자 지정을 구성한 경우 <xref:System.Web.Compilation.BuildProvider> Example.abc, 라는 파일을 포함 하는 웹 사이트 및 웹 사이트 이름이 WebSite1, 경우.abc의 사용자 지정 확장을 사용 하 여 웹 사이트의 모든 파일을 작성 하는 클래스는 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 속성 값이 포함 `/WebSite1/Example.abc`.  
  
 응용 프로그램 내의 각 파일의 파일 확장명, 파일 형식 및 파일 형식에 대 한 빌드 공급자를 결정합니다. ASP.NET 빌드 환경은 <xref:System.Web.Compilation.BuildProvider> 파일 종류에 따라 하 고 사용 하 여 각 파일에 대 한 개체는 <xref:System.Web.Compilation.BuildProvider> 각 파일에 대 한 소스를 생성 하는 방법입니다.  
  
 빌드 공급자를 구성 하는 방법에 대 한 자세한 내용은 참조 [buildProviders 요소 (ASP.NET 설정 스키마) 컴파일에](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>빌드 공급자가 코드를 생성하기 전에 빌드되어야 하는 가상 경로 컬렉션을 나타냅니다.</summary>
        <value>빌드 공급자 인스턴스가 종속된 가상 경로를 나타내는 읽기 전용의 문자열 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> 속성은 먼저 컴파일해야 하는 가상 경로 컬렉션의 <xref:System.Web.Compilation.BuildProvider> 인스턴스 소스 코드를 생성 합니다. 가상 경로에서 어셈블리 <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> 에 대 한 컴파일에 대 한 참조로 추가 되는 <xref:System.Web.Compilation.BuildProvider> 인스턴스.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>