<Type Name="ExpressionBuilder" FullName="System.Web.Compilation.ExpressionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2fdfaba358c803078ed8f887cd2d70b7a32d185d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529397" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionBuilder abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c6802-101">페이지 구문 분석 중에 식을 계산합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6802-101">Evaluates expressions during page parsing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6802-102"><xref:System.Web.Compilation.ExpressionBuilder> 클래스는 식 작성기에 대 한 기본 클래스와 같은 <xref:System.Web.Compilation.AppSettingsExpressionBuilder> 페이지를 구문 분석 하는 동안 코드 식을 작성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-102">The <xref:System.Web.Compilation.ExpressionBuilder> class is the base class for expression builders, such as the <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class, that create code expressions during page parsing.</span></span>  
  
 <span data-ttu-id="c6802-103">식 작성기는 선언적 식을 구문 분석 하 고 컨트롤 속성에 바인딩된 값을 검색 하는 코드를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-103">Expression builders parse declarative expressions and create code to retrieve values bound to a control property.</span></span> <span data-ttu-id="c6802-104">컴파일되지 않은 시나리오에서 비 컴파일 기능을 지 원하는 식 작성기 런타임에 식을 평가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-104">In no-compile scenarios, an expression builder that supports a no-compile feature evaluates the expression during run time.</span></span>  
  
 <span data-ttu-id="c6802-105">페이지 나타나면 구분 된 문자열 식을 `<%$ %>`, 문자열의 접두사를 기반으로 식에 대 한 식 작성기를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-105">When the page parser encounters an expression that is delimited with the string `<%$ %>`, it creates an expression builder for the expression based on the prefix in the string.</span></span> <span data-ttu-id="c6802-106">접두사에는 콜론 (:)의 왼쪽에 있는 문자열의 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-106">The prefix is the portion of the string that is to the left of the colon (:).</span></span> <span data-ttu-id="c6802-107">예를 들어 나타나면 문자열 `<%$ ConnectionStrings:MessageDB %>`, 생성 한 <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-107">For example, when the parser encounters the string `<%$ ConnectionStrings:MessageDB %>`, it creates a <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> object.</span></span> <span data-ttu-id="c6802-108">접두사는 연결 된 식 작성기에서 Web.config 파일에는 <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> 섹션.</span><span class="sxs-lookup"><span data-stu-id="c6802-108">Prefixes are associated with expression builders in the Web.config file in the <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section.</span></span>  
  
 <span data-ttu-id="c6802-109">선언적 식의 오른쪽 평가 대 한 식 작성기에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-109">The right side of the declarative expression is passed to the expression builder for evaluation.</span></span> <span data-ttu-id="c6802-110">재정의 <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> 메서드 페이지와 컴파일되는 코드를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-110">Override the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method to generate code that will be compiled with the page.</span></span>  
  
 <span data-ttu-id="c6802-111">사용자 지정 식 작성기를 컴파일되지 않은 페이지에서 활성화 하려는 경우 재정의 해야는 <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> 식의 결과 나타내는 개체를 반환 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="c6802-111">If you want the custom expression builder to be active on pages that are not compiled, you must also override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an object that represents the results of the expression.</span></span> <span data-ttu-id="c6802-112">도 재정의 해야는 <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> 컴파일되지 않은 페이지 사용자 지정 식 작성기가 지원 않음을 나타내는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-112">You also must override the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property to indicate that the custom expression builder does support no-compile pages.</span></span>  
  
 <span data-ttu-id="c6802-113">선택 하 고 식 편집기를 구현 하 여 디자인 타임에 컨트롤 속성에 연관 된 식을 평가 하기 위한 메서드와 속성의 집합을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-113">You can define a set of properties and methods for selecting and evaluating an expression that is associated with a control property at design time by implementing an expression editor.</span></span> <span data-ttu-id="c6802-114">편집기는 클래스 수준 메타 데이터를 통해 식 작성기에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-114">The editor is marked on the expression builder through class-level metadata.</span></span> <span data-ttu-id="c6802-115">자세한 내용은 <xref:System.Web.UI.Design.ExpressionEditor>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="c6802-115">For more information, see <xref:System.Web.UI.Design.ExpressionEditor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6802-116">다음 코드 예제에서는 사용자 지정 식 작성기를 구현 하 여 빌드하는 방법을 보여 줍니다는 <xref:System.Web.Compilation.ExpressionBuilder> 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-116">The following code examples demonstrate how to build a custom expression builder by implementing the <xref:System.Web.Compilation.ExpressionBuilder> abstract class.</span></span> <span data-ttu-id="c6802-117">이 구현 <xref:System.Web.Compilation.ExpressionBuilder> 식에 전달 되는 계산된 된 문을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-117">This implementation of <xref:System.Web.Compilation.ExpressionBuilder> returns an evaluated statement that is passed to the expression.</span></span> <span data-ttu-id="c6802-118">이 예제를 실행 하려면 먼저 Web.config 파일에서 사용자 지정 식 작성기를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-118">To run this example, you must first register the custom expression builder in the Web.config file.</span></span> <span data-ttu-id="c6802-119">첫 번째 코드 예제에서는 Web.config 파일에서 사용자 지정 식 작성기를 등록 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-119">The first code example demonstrates how to register the custom expression builder in the Web.config file.</span></span>  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="c6802-120">두 번째 코드 예제는.aspx 파일에 있는 식을 참조 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-120">The second code example demonstrates how to reference the expression in an .aspx file.</span></span>  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 <span data-ttu-id="c6802-121">세 번째 코드 예제에서는 사용자 지정된 식 작성기에서 파생 하 여 개발 하는 방법을 보여 줍니다 <xref:System.Web.Compilation.ExpressionBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-121">The third code example demonstrates how to develop a customized expression builder by deriving from <xref:System.Web.Compilation.ExpressionBuilder>.</span></span> <span data-ttu-id="c6802-122">이 코드 예제를 실행 하려면 App_Code 폴더에는 클래스를 배치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-122">To run this code example, you must place the class in the App_Code folder.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="c6802-123">상속 하는 경우는 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 재정의 해야 클래스는 <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> 메서드.</span>
        <span class="sxs-lookup">
          <span data-stu-id="c6802-123">When you inherit from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, you must override the <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6802-124">
            <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-124">Initializes a new instance of the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6802-125">때문에 <xref:System.Web.Compilation.ExpressionBuilder> 클래스는 추상 클래스의 인스턴스를 만들 수 없습니다, <xref:System.Web.Compilation.ExpressionBuilder> 사용 하 여 직접는 <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-125">Because the <xref:System.Web.Compilation.ExpressionBuilder> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.ExpressionBuilder> directly by using the <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6802-126">파생 된 경우는 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 클래스, 재정의 <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> 생성자 식 작성기 구현에 대 한 사용자 지정 초기화 작업을 구현 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6802-126">When deriving from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, override the <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> constructor to implement custom initialization actions for your expression builder implementation.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="c6802-127">식이 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-127">The object containing the expression.</span>
          </span>
        </param>
        <param name="entry">
          <span data-ttu-id="c6802-128">식에 의해 바인딩된 속성에 대한 정보를 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-128">The object that represents information about the property bound to by the expression.</span>
          </span>
        </param>
        <param name="parsedData">
          <span data-ttu-id="c6802-129">
            <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />에 의해 반환된 구문 분석된 데이터를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-129">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c6802-130">식을 계산하는 데 필요한 컨텍스트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-130">Contextual information for the evaluation of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6802-131">파생 클래스에서 재정의하면 계산된 식을 나타내는 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-131">When overridden in a derived class, returns an object that represents an evaluated expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6802-132">계산된 식을 나타내는 개체이고, 상속자가 <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />을 구현하지 않을 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-132">An object that represents the evaluated expression; otherwise, <see langword="null" /> if the inheritor does not implement <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6802-133">원하는 경우 프로그램 <xref:System.Web.Compilation.ExpressionBuilder> 개체를 비 컴파일 기능을 지 원하는 페이지에서 활성화 재정의할 수 있습니다는 <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> 메서드 및 <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-133">If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span> <span data-ttu-id="c6802-134"><xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> 메서드는 현재 식의 평가 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-134">The <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method should return the evaluation of the current expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6802-135">다음 코드 예제에는 재정의 사용 하는 방법을 보여 줍니다 <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> 메서드 평가 된 식을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-135">The following code example demonstrates how to use the overridden <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an evaluated expression.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#3)]    
 [!code-vb[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#3)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6802-136">재정의 하는 경우는 <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> 메서드를 재정의 해야는 <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> 속성입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6802-136">If you override the <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method, you must also override the <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> property.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry">
          <span data-ttu-id="c6802-137">식에 의해 바인딩된 속성에 대한 정보를 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-137">The object that represents information about the property bound to by the expression.</span>
          </span>
        </param>
        <param name="parsedData">
          <span data-ttu-id="c6802-138">
            <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />에 의해 반환된 구문 분석된 데이터를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-138">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c6802-139">식을 계산하는 데 필요한 컨텍스트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-139">Contextual information for the evaluation of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6802-140">파생 클래스에서 재정의되면 계산된 식을 가져오기 위해 페이지 실행 중에 사용되는 코드를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-140">When overridden in a derived class, returns code that is used during page execution to obtain the evaluated expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6802-141">속성 할당에 사용되는 <see cref="T:System.CodeDom.CodeExpression" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-141">A <see cref="T:System.CodeDom.CodeExpression" /> that is used for property assignment.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6802-142">클래스에서 상속 되는 <xref:System.Web.Compilation.ExpressionBuilder> 클래스 구현 해야 합니다는 <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> 추상 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-142">Classes that inherit from the <xref:System.Web.Compilation.ExpressionBuilder> class must implement the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> abstract method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6802-143">다음 코드 예제에서는 반환 하는 방법을 보여 줍니다.는 <xref:System.CodeDom.CodeExpression> 재정의 하 여 개체는 <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c6802-143">The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#4)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#4)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6802-144">컨트롤 속성에 대 한 적절 한 형식 캐스팅을 수행 하 고 캐스트 연산에 반환 해야 하는 사용자 지정 식 작성기를 구현 하는 경우는 <see cref="T:System.CodeDom.CodeExpression" /> 개체입니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6802-144">If you implement a custom expression builder, you must perform the proper type casting for the control property and return the cast operation in the <see cref="T:System.CodeDom.CodeExpression" /> object.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParseExpression">
      <MemberSignature Language="C#" Value="public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseExpression(string expression, class System.Type propertyType, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ParseExpression (expression As String, propertyType As Type, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ParseExpression(System::String ^ expression, Type ^ propertyType, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="c6802-145">선언적 식의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-145">The value of the declarative expression.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="c6802-146">식에 의해 바인딩된 속성의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-146">The type of the property bound to by the expression.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c6802-147">식을 계산하는 데 필요한 컨텍스트 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-147">Contextual information for the evaluation of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6802-148">파생 클래스에서 재정의하면 구문 분석된 식을 나타내는 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-148">When overridden in a derived class, returns an object that represents the parsed expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6802-149">식의 구문 분석된 표현을 포함하는 <see cref="T:System.Object" />이고, <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />이 구현되지 않은 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-149">An <see cref="T:System.Object" /> containing the parsed representation of the expression; otherwise, <see langword="null" /> if <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> is not implemented.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6802-150">파생된 클래스에서 재정의 되 면이 메서드는 식 구문 분석 하 고으로 사용할 수 있는 개체로 반환 된 `parsedData` 에서 매개 변수는 <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> 또는 <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c6802-150">When overridden in a derived class, this method parses the expression and returns it as an object that can be used as the `parsedData` parameter in a <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> or <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6802-151">파생 클래스에서 재정의하면 현재 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 개체의 비컴파일 페이지 지원 여부를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-151">When overridden in a derived class, returns a value indicating whether the current <see cref="T:System.Web.Compilation.ExpressionBuilder" /> object supports no-compile pages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6802-152">
            <see cref="T:System.Web.Compilation.ExpressionBuilder" />가 식 계산을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6802-152">
              <see langword="true" /> if the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> supports expression evaluation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6802-153">기본값은 <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> 속성은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-153">The default value for the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property is `false`.</span></span> <span data-ttu-id="c6802-154">컴파일되지 않은 페이지를 지원 하기 위해 둘 다 재정의 해야 하는 <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> 메서드 및 <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-154">To support no-compile pages, you must override both the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6802-155">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c6802-155">The following code example demonstrates how to use the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#2)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#2)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>