<Type Name="BuildManager" FullName="System.Web.Compilation.BuildManager">
  <TypeSignature Language="C#" Value="public sealed class BuildManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BuildManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BuildManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildManager sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e0bdf-101">ASP.NET 응용 프로그램의 컴파일 관리에 도움이 되는 메서드 집합을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-101">Provides a set of methods to help manage the compilation of an ASP.NET application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-102"><xref:System.Web.Compilation.BuildManager> 어셈블리 및 응용 프로그램에 대 한 페이지 컴파일의 프로세스를 관리 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-102">The <xref:System.Web.Compilation.BuildManager> class manages the process of compiling assemblies and pages for an application.</span></span> <span data-ttu-id="e0bdf-103">클래스는 봉인된 클래스 이며 상속 될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-103">It is a sealed class and cannot be inherited.</span></span>  
  
 <span data-ttu-id="e0bdf-104"><xref:System.Web.Compilation.BuildManager> 컴파일된 어셈블리에 대 한 정보를 제공 하는 정적 멤버를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-104"><xref:System.Web.Compilation.BuildManager> contains static members that provide information about the compiled assemblies.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
  </Docs>
  <Members>
    <Member MemberName="AddCompilationDependency">
      <MemberSignature Language="C#" Value="public static void AddCompilationDependency (string dependency);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddCompilationDependency(string dependency) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddCompilationDependency (dependency As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddCompilationDependency(System::String ^ dependency);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependency" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dependency"><span data-ttu-id="e0bdf-105">종속성을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-105">A string that represents a dependency.</span></span></param>
        <summary><span data-ttu-id="e0bdf-106">정리 빌드가 필요한지 여부를 판단하기 위해 빌드 관리자가 사용하는 종속성을 나타내는 문자열을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-106">Specifies a string that represents a dependency that the build manager uses to help determine if a clean build is required.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-107">메서드를 호출 하는 동안 해야는 `Application_PreStartInit` 응용 프로그램의 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-107">The method must be called during the `Application_PreStartInit` stage of the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e0bdf-108"><paramref name="dependency" /> 매개 변수가 <see langword="null" />이거나 빈 문자열인 경우</span><span class="sxs-lookup"><span data-stu-id="e0bdf-108">The <paramref name="dependency" /> parameter is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0bdf-109">이 메서드는 응용 프로그램의 <see langword="Application_PreStartInit" /> 단계 후 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-109">The method was called after the <see langword="Application_PreStartInit" /> stage of the application.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddReferencedAssembly">
      <MemberSignature Language="C#" Value="public static void AddReferencedAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddReferencedAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddReferencedAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="e0bdf-110">추가할 어셈블리입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-110">The assembly to add.</span></span></param>
        <summary><span data-ttu-id="e0bdf-111">응용 프로그램의 참조된 어셈블리 집합에 어셈블리를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-111">Adds an assembly to the application's set of referenced assemblies.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-112">이 메서드를 호출 하는 것의 응용 프로그램 수준 Web.config 파일에 어셈블리를 추가 하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-112">Calling this method is equivalent to adding the assembly to the application-level Web.config file.</span></span> <span data-ttu-id="e0bdf-113">메서드를 호출 하는 동안 해야는 `Application_PreStartInit` 응용 프로그램의 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-113">The method must be called during the `Application_PreStartInit` stage of the application.</span></span>  
  
 <span data-ttu-id="e0bdf-114"><xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A> 메서드는 구성 파일에서 결정 하는 어셈블리와이 방법을 사용 하 여 추가 된 모든 어셈블리의 집합을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-114">The <xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A> method will return the set of assemblies that are determined from configuration files and any assemblies that were added by using this method.</span></span>  
  
 <span data-ttu-id="e0bdf-115">이미 추가 된 어셈블리를 추가 하려고 하는 경우에 중복 항목이 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-115">If an attempt is made to add an assembly that has already been added, the duplicate entry is ignored.</span></span>  
  
 <span data-ttu-id="e0bdf-116">하기 전에이 메서드를 호출 해야 합니다는 `Application_Start` Global.asax 파일에는 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-116">This method must be called before the `Application_Start` event in the Global.asax file occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e0bdf-117"><paramref name="assembly" /> 매개 변수가 <see langword="null" />이거나 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="e0bdf-117">The <paramref name="assembly" /> parameter is <see langword="null" /> or empty.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0bdf-118">이 메서드는 Global.asax 파일에 있는 <see langword="Application_Start" /> 이벤트가 발생하기 전에 호출되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-118">The method was not called before the <see langword="Application_Start" /> event in the Global.asax file occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BatchCompilationEnabled">
      <MemberSignature Language="C#" Value="public static Nullable&lt;bool&gt; BatchCompilationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Nullable`1&lt;bool&gt; BatchCompilationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildManager.BatchCompilationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BatchCompilationEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Nullable&lt;bool&gt; BatchCompilationEnabled { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bdf-119">일괄 컴파일을 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-119">Gets or sets a value that indicates whether batch compilation is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="e0bdf-120">일괄 컴파일을 항상 사용하면 <see langword="true" />이고, 일괄 컴파일을 전혀 사용하지 않으면 <see langword="false" />이고, 구성 파일에서 컴파일 설정을 확인하면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-120"><see langword="true" /> if batch compilation is always enabled, <see langword="false" /> if batch compilation is never enabled, or <see langword="null" /> if the compilation setting is determined from the configuration file.</span></span> <span data-ttu-id="e0bdf-121">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-121">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-122">이 속성을 사용 하면 일괄 컴파일의 켜기 / 끄기를 프로그래밍 방식으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-122">This property enables you to turn batch compilation on or off programmatically.</span></span> <span data-ttu-id="e0bdf-123">해당 하는 `batch` 특성의는 `compilation` Web.config 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-123">It corresponds to the `batch` attribute of the `compilation` element in the Web.config file.</span></span> <span data-ttu-id="e0bdf-124">자세한 내용은 참조 [compilation 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/7c319582-074a-4d2a-a787-03b9d4541c12)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-124">For more information, see [compilation Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/7c319582-074a-4d2a-a787-03b9d4541c12).</span></span>  
  
 <span data-ttu-id="e0bdf-125">에 속성을 설정할 수는 `PreApplicationStart` 메서드.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-125">The property can be set only in the `PreApplicationStart` method.</span></span> <span data-ttu-id="e0bdf-126">`PreApplicationStart` 메서드에 대한 자세한 내용은 <xref:System.Web.PreApplicationStartMethodAttribute>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-126">For more information about the `PreApplicationStart` method, see <xref:System.Web.PreApplicationStartMethodAttribute>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0bdf-127">속성이 <see langword="PreApplicationStart" /> 메서드에 설정되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-127">The property was not set in the <see langword="PreApplicationStart" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CodeAssemblies">
      <MemberSignature Language="C#" Value="public static System.Collections.IList CodeAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IList CodeAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildManager.CodeAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CodeAssemblies As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IList ^ CodeAssemblies { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bdf-128">App_Code 디렉터리에서 빌드한 어셈블리 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-128">Gets a list of assemblies built from the App_Code directory.</span></span></summary>
        <value><span data-ttu-id="e0bdf-129">App_Code 디렉터리에서 빌드한 어셈블리가 들어 있는 <see cref="T:System.Collections.IList" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-129">An <see cref="T:System.Collections.IList" /> collection that contains the assemblies built from the App_Code directory.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCachedFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream CreateCachedFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream CreateCachedFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.CreateCachedFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCachedFile (fileName As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ CreateCachedFile(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="e0bdf-130">만들 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-130">The name of the file to create.</span></span></param>
        <summary><span data-ttu-id="e0bdf-131">캐시된 파일을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-131">Creates a cached file.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-132">새 파일의 <see cref="T:System.IO.Stream" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-132">The <see cref="T:System.IO.Stream" /> object for the new file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-133">이 메서드는 및 <xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A> 메서드를 통해 응용 프로그램 도메인 컴퓨터를 다시 시작할 부분 신뢰 환경에서 지속 되는 캐싱을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-133">This method and the <xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A> method enable you to perform caching that persists across application domain restarts in partial-trust environments.</span></span> <span data-ttu-id="e0bdf-134">컨트롤러 조회 결과 캐시 하도록 MVC 프레임 워크에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-134">It is used by the MVC framework to cache results of the controller lookup.</span></span>  
  
 <span data-ttu-id="e0bdf-135">데이터를 캐시 하려면에 쓸는 <xref:System.IO.Stream> 이 메서드에 의해 반환 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-135">To cache data, you write to the <xref:System.IO.Stream> object that is returned by this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFromVirtualPath">
      <MemberSignature Language="C#" Value="public static object CreateInstanceFromVirtualPath (string virtualPath, Type requiredBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstanceFromVirtualPath(string virtualPath, class System.Type requiredBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFromVirtualPath (virtualPath As String, requiredBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstanceFromVirtualPath(System::String ^ virtualPath, Type ^ requiredBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="requiredBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="e0bdf-136">인스턴스를 만들 파일의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-136">The virtual path of the file to create an instance of.</span></span></param>
        <param name="requiredBaseType"><span data-ttu-id="e0bdf-137">만들 개체를 정의하는 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-137">The base type that defines the object to be created.</span></span></param>
        <summary><span data-ttu-id="e0bdf-138">가상 경로가 지정된 파일을 처리하고 결과의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-138">Processes a file, given its virtual path, and creates an instance of the result.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-139">처리된 파일의 인스턴스를 나타내는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-139">The <see cref="T:System.Object" /> that represents the instance of the processed file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-140"><xref:System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath%2A> 컴파일된 정규식과 비 컴파일 페이지에 대 한 사용할 수 있는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-140">The <xref:System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath%2A> method works for compiled and non-compile pages.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCachedBuildDependencySet">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e0bdf-141">ASP.NET 캐시에서 빌드 종속성 집합을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-141">Returns a build dependency set from the ASP.NET cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCachedBuildDependencySet">
      <MemberSignature Language="C#" Value="public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet(class System.Web.HttpContext context, string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCachedBuildDependencySet (context As HttpContext, virtualPath As String) As BuildDependencySet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Compilation::BuildDependencySet ^ GetCachedBuildDependencySet(System::Web::HttpContext ^ context, System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildDependencySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e0bdf-142">요청에 대한 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-142">The context of the request.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="e0bdf-143">빌드 종속성을 확인할 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-143">The virtual path from which to determine the build dependency set.</span></span></param>
        <summary><span data-ttu-id="e0bdf-144">경로가 ASP.NET 캐시에 있는 경우 가상 경로의 빌드 종속성 집합을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-144">Returns a build dependency set for a virtual path if the path is located in the ASP.NET cache.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-145">캐시에 저장된 <see cref="T:System.Web.Compilation.BuildDependencySet" /> 개체입니다. 캐시에서 <see cref="T:System.Web.Compilation.BuildDependencySet" /> 개체를 검색할 수 없는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-145">A <see cref="T:System.Web.Compilation.BuildDependencySet" /> object that is stored in the cache, or <see langword="null" /> if the <see cref="T:System.Web.Compilation.BuildDependencySet" /> object cannot be retrieved from the cache.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildDependencySet" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="GetCachedBuildDependencySet">
      <MemberSignature Language="C#" Value="public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath, bool ensureIsUpToDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet(class System.Web.HttpContext context, string virtualPath, bool ensureIsUpToDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCachedBuildDependencySet (context As HttpContext, virtualPath As String, ensureIsUpToDate As Boolean) As BuildDependencySet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Compilation::BuildDependencySet ^ GetCachedBuildDependencySet(System::Web::HttpContext ^ context, System::String ^ virtualPath, bool ensureIsUpToDate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildDependencySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="ensureIsUpToDate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e0bdf-146">요청에 대한 컨텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-146">The context of the request.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="e0bdf-147">빌드 종속성을 확인할 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-147">The virtual path from which to determine the build dependency set.</span></span></param>
        <param name="ensureIsUpToDate">
          <span data-ttu-id="e0bdf-148">최신 빌드 종속성 집합만 반환하도록 지정하려면 <see langword="true" />이고, 최신이 아니더라도 사용 가능한 빌드 종속성 집합을 반환하도록 지정하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-148"><see langword="true" /> to specify that only a current build dependency set should be returned, or <see langword="false" /> to indicate that any available build dependency set should be returned, even if it is not current.</span></span> <span data-ttu-id="e0bdf-149">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-149">The default is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="e0bdf-150">가상 경로가 ASP.NET 캐시에 있는 경우 콘텐츠가 최신이 아니더라도 해당 가상 경로에 대한 빌드 종속성 집합을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-150">Returns a build dependency set for a virtual path if the path is located in the ASP.NET cache, even if the content is not current.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-151">캐시에 저장된 <see cref="T:System.Web.Compilation.BuildDependencySet" /> 개체입니다. 캐시에서 <see cref="T:System.Web.Compilation.BuildDependencySet" /> 개체를 검색할 수 없는 경우에는 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-151">A <see cref="T:System.Web.Compilation.BuildDependencySet" /> object that is stored in the cache, or <see langword="null" /> if the <see cref="T:System.Web.Compilation.BuildDependencySet" /> object cannot be retrieved from the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-152">경우는 `ensureIsUpToDate` 매개 변수 값으로 설정 되어 `true`, <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=nameWithType> 처럼 동작 메서드 오버 로드는 <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=nameWithType> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-152">If the `ensureIsUpToDate` parameter value is set to `true`, the <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=nameWithType> method overload behaves like the <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=nameWithType> method overload.</span></span> <span data-ttu-id="e0bdf-153">두 오버 로드 집합이 있는 경우 현재 빌드 종속성을 반환 하지 않으면 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-153">Both overloads return a current build dependency set if one exists, otherwise they return `null`.</span></span>  
  
 <span data-ttu-id="e0bdf-154">그러나는 <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=nameWithType> 메서드 오버 로드를 사용할 수 있는 모든 빌드 종속성 집합을 반환 하는 오래 된 것도는 옵션을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-154">However, the <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=nameWithType> method overload includes the option to return any build dependency set that is available, even an outdated one.</span></span> <span data-ttu-id="e0bdf-155">경우는 `ensureIsUpToDate` 매개 변수 값으로 설정 되어 `false`, 메서드는 사용 가능한 빌드 종속성 집합을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-155">If the `ensureIsUpToDate` parameter value is set to `false`, the method will return any available build dependency set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompiledAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetCompiledAssembly (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetCompiledAssembly(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompiledAssembly (virtualPath As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetCompiledAssembly(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="e0bdf-156">어셈블리로 빌드할 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-156">The virtual path to build into an assembly.</span></span></param>
        <summary><span data-ttu-id="e0bdf-157">지정된 가상 경로를 사용하여 파일을 어셈블리로 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-157">Compiles a file into an assembly using the specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-158">지정된 가상 경로에서 컴파일되어 메모리나 디스크로 캐시되는 <see cref="T:System.Reflection.Assembly" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-158">An <see cref="T:System.Reflection.Assembly" /> object that is compiled from the specified virtual path, which is cached to either memory or to disk.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledCustomString">
      <MemberSignature Language="C#" Value="public static string GetCompiledCustomString (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCompiledCustomString(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompiledCustomString (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetCompiledCustomString(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="e0bdf-159">빌드할 파일의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-159">The virtual path of the file to build.</span></span></param>
        <summary><span data-ttu-id="e0bdf-160">가상 경로가 지정된 파일을 컴파일하고 빌드 공급자가 캐시에 유지하는 사용자 지정 문자열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-160">Compiles a file, given its virtual path, and returns a custom string that the build provider persists in cache.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-161">디스크나 메모리에 캐시되며 <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" /> 메서드에 반환되는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-161">A string, as returned by the <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" /> method, that is cached to disk or memory.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledType">
      <MemberSignature Language="C#" Value="public static Type GetCompiledType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetCompiledType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetCompiledType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompiledType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetCompiledType(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="e0bdf-162">형식으로 빌드할 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-162">The virtual path to build into a type.</span></span></param>
        <summary><span data-ttu-id="e0bdf-163">가상 경로가 지정된 파일을 컴파일하고 컴파일된 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-163">Compiles a file, given its virtual path, and returns the compiled type.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-164">가상 경로를 컴파일하여 생성된 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-164">A <see cref="T:System.Type" /> object that represents the type generated from compiling the virtual path.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e0bdf-165">가상 경로를 컴파일할 때 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="e0bdf-165">An error occurred when compiling the virtual path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e0bdf-166"><paramref name="virtualPath" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e0bdf-166"><paramref name="virtualPath" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalAsaxType">
      <MemberSignature Language="C#" Value="public static Type GetGlobalAsaxType ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetGlobalAsaxType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetGlobalAsaxType" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGlobalAsaxType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetGlobalAsaxType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0bdf-167">Global.asax 파일의 컴파일된 형식을 나타내는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-167">Gets an object that represents the compiled type for the Global.asax file.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-168">Global.asax 파일의 컴파일된 형식을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-168">An object that represents the compiled type for the Global.asax file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-169">Global.asax 파일 컴파일 전에이 메서드를 호출 하면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-169">An exception is thrown if this method is called before the Global.asax file has been compiled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e0bdf-170">Global.asax 페이지를 컴파일하기 전에 이 메서드를 호출하려고 시도했습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-170">An attempt was made to call this method before the Global.asax page was compiled.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectFactory">
      <MemberSignature Language="C#" Value="public static System.Web.Util.IWebObjectFactory GetObjectFactory (string virtualPath, bool throwIfNotFound);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Util.IWebObjectFactory GetObjectFactory(string virtualPath, bool throwIfNotFound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectFactory (virtualPath As String, throwIfNotFound As Boolean) As IWebObjectFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Util::IWebObjectFactory ^ GetObjectFactory(System::String ^ virtualPath, bool throwIfNotFound);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.IWebObjectFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="throwIfNotFound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="e0bdf-171">가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-171">The virtual path.</span></span></param>
        <param name="throwIfNotFound">
          <span data-ttu-id="e0bdf-172">가상 경로가 존재하지 않을 경우 오류를 throw하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-172"><see langword="true" /> to throw an error if the virtual path does not exist; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e0bdf-173">가상 경로가 존재하지 않고 <c>throwIfNotFound</c>가 <see langword="false" />이면 이 메서드는 <see langword="null" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-173">If the virtual path does not exist and <c>throwIfNotFound</c> is <see langword="false" />, this method returns <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e0bdf-174">지정된 가상 경로에 대한 개체 팩터리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-174">Gets an object factory for the specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-175">개체 팩터리입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-175">The object factory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-176">이 메서드는 가상 경로 컴파일할 때 형식을 생성할 수 있도록 하는 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-176">This method returns an object that enables you to generate a type by compiling the virtual path.</span></span> <span data-ttu-id="e0bdf-177">웹 사이트를 미리 컴파일된 여부에 관계 없이 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-177">It returns an object regardless of whether the Web site is precompiled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e0bdf-178">가상 경로가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-178">The virtual path does not exist.</span></span>  
  
 <span data-ttu-id="e0bdf-179">또는</span><span class="sxs-lookup"><span data-stu-id="e0bdf-179">-or-</span></span>  
  
 <span data-ttu-id="e0bdf-180">이 메서드를 호출할 때 이미 상위 수준 예외가 존재했습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-180">A higher-level exception already existed when this method was called.</span></span>  
  
 <span data-ttu-id="e0bdf-181">또는</span><span class="sxs-lookup"><span data-stu-id="e0bdf-181">-or-</span></span>  
  
 <span data-ttu-id="e0bdf-182">이 메서드는 컴파일 프로세스가 최상위 파일을 빌드하는 동안 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-182">This method was called while the compilation process was building top-level files.</span></span>  
  
 <span data-ttu-id="e0bdf-183">또는</span><span class="sxs-lookup"><span data-stu-id="e0bdf-183">-or-</span></span>  
  
 <span data-ttu-id="e0bdf-184">이는 미리 컴파일된 응용 프로그램이며 가상 경로는 캐시에서 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-184">This is a precompiled application and the virtual path was not found in the cache.</span></span>  
  
 <span data-ttu-id="e0bdf-185">또는</span><span class="sxs-lookup"><span data-stu-id="e0bdf-185">-or-</span></span>  
  
 <span data-ttu-id="e0bdf-186">순환 참조가 발견되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-186">A circular reference was detected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public static System.Collections.ICollection GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ICollection GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReferencedAssemblies () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ICollection ^ GetReferencedAssemblies();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0bdf-187">모든 페이지 컴파일에서 참조해야 하는 어셈블리 참조의 목록을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-187">Returns a list of assembly references that all page compilations must reference.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-188">어셈블리 참조의 <see cref="T:System.Collections.ICollection" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-188">An <see cref="T:System.Collections.ICollection" /> collection of assembly references.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-189">반환 되는 어셈블리의 컬렉션은 <xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A> 다른 최상위 폴더에 Web.config 파일의 요소에 지정 된 어셈블리, App_Code 디렉터리에 사용자 지정 코드에서 빌드한 어셈블리 및 어셈블리 메서드에 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-189">The collection of assemblies that is returned from the <xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A> method includes assemblies specified in the  element of the Web.config file, assemblies built from custom code in the App_Code directory, and assemblies in other top-level folders.</span></span>  
  
 <span data-ttu-id="e0bdf-190"><xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-190"><xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="e0bdf-191">자세한 내용은 [.NET Framework 버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-191">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e0bdf-192">최상위 어셈블리나 구성에 정의된 어셈블리에서 형식을 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-192">Finds a type in the top-level assemblies or in assemblies that are defined in configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-193">최상위 어셈블리를 Global.asax 파일 또는 App_GlobalResources, App_WebReferences, App_Code, 또는 App_Browsers 디렉터리에 있는 파일을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-193">A top-level assembly refers to the Global.asax file, or to a file that is in the App_GlobalResources, App_WebReferences, App_Code, or App_Browsers directory.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public static Type GetType (string typeName, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetType(string typeName, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetType (typeName As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetType(System::String ^ typeName, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="e0bdf-194">형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-194">The name of the type.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="e0bdf-195">형식 이름에 대해 <see cref="T:System.Type" /> 개체를 생성할 수 없는 경우 예외를 throw하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-195"><see langword="true" /> to throw an exception if a <see cref="T:System.Type" /> object cannot be generated for the type name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e0bdf-196">최상위 어셈블리나 구성에 정의된 어셈블리에서 형식을 찾고 선택에 따라 실패 시 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-196">Finds a type in the top-level assemblies or in assemblies that are defined in configuration, and optionally throws an exception on failure.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-197">요청된 <paramref name="typeName" /> 매개 변수를 나타내는 <see cref="T:System.Type" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-197">A <see cref="T:System.Type" /> object that represents the requested <paramref name="typeName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-198">최상위 어셈블리를 Global.asax 파일 또는 App_GlobalResources, App_WebReferences, App_Code, 또는 App_Browsers 디렉터리에 있는 파일을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-198">A top-level assembly refers to the Global.asax file, or to a file that is in the App_GlobalResources, App_WebReferences, App_Code, or App_Browsers directory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="e0bdf-199"><paramref name="typeName" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-199"><paramref name="typeName" /> is invalid.</span></span>  
  
 <span data-ttu-id="e0bdf-200">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="e0bdf-200">\- or -</span></span>  
  
 <span data-ttu-id="e0bdf-201"><paramref name="typeName" />이 모호한 경우</span><span class="sxs-lookup"><span data-stu-id="e0bdf-201"><paramref name="typeName" /> is ambiguous.</span></span>  
  
 <span data-ttu-id="e0bdf-202">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="e0bdf-202">\- or -</span></span>  
  
 <span data-ttu-id="e0bdf-203"><paramref name="typeName" />을 찾을 수 없고 <paramref name="throwOnError" />가 <see langword="true" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e0bdf-203"><paramref name="typeName" /> could not be found, and <paramref name="throwOnError" /> is <see langword="true" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public static Type GetType (string typeName, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetType(string typeName, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetType (typeName As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetType(System::String ^ typeName, bool throwOnError, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="e0bdf-204">형식의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-204">The name of the type.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="e0bdf-205">형식 이름에 대해 <see cref="T:System.Type" />을 생성할 수 없는 경우 예외를 throw하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-205"><see langword="true" /> to throw an exception if a <see cref="T:System.Type" /> cannot be generated for the type name; otherwise, <see langword="false" />.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="e0bdf-206"><c>typeName</c>이 대/소문자를 구분하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-206"><see langword="true" /> if <c>typeName</c> is case-sensitive; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e0bdf-207">대/소문자를 구분하지 않는 검색을 사용하여 최상위 어셈블리나 구성에 정의된 어셈블리에서 형식을 찾고 선택에 따라 실패 시 예외를 throw합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-207">Finds a type in the top-level assemblies, or in assemblies that are defined in configuration, by using a case-insensitive search and optionally throwing an exception on failure.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-208">요청된 <paramref name="typeName" /> 매개 변수를 나타내는 <see cref="T:System.Type" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-208">A <see cref="T:System.Type" /> object that represents the requested <paramref name="typeName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-209">최상위 어셈블리를 Global.asax 파일 또는 App_GlobalResources, App_WebReferences, App_Code, 또는 App_Browsers 디렉터리에 있는 파일을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-209">A top-level assembly refers to the Global.asax file, or to a file that is in the App_GlobalResources, App_WebReferences, App_Code, or App_Browsers directory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="e0bdf-210"><paramref name="typeName" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-210"><paramref name="typeName" /> is invalid.</span></span>  
  
 <span data-ttu-id="e0bdf-211">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="e0bdf-211">\- or -</span></span>  
  
 <span data-ttu-id="e0bdf-212"><paramref name="typeName" />이 모호한 경우</span><span class="sxs-lookup"><span data-stu-id="e0bdf-212"><paramref name="typeName" /> is ambiguous.</span></span>  
  
 <span data-ttu-id="e0bdf-213">\- 또는 -</span><span class="sxs-lookup"><span data-stu-id="e0bdf-213">\- or -</span></span>  
  
 <span data-ttu-id="e0bdf-214"><paramref name="typeName" />을 찾을 수 없고 <paramref name="throwOnError" />가 <see langword="true" />인 경우</span><span class="sxs-lookup"><span data-stu-id="e0bdf-214"><paramref name="typeName" /> could not be found, and <paramref name="throwOnError" /> is <see langword="true" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPathDependencies">
      <MemberSignature Language="C#" Value="public static System.Collections.ICollection GetVirtualPathDependencies (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ICollection GetVirtualPathDependencies(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVirtualPathDependencies (virtualPath As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ICollection ^ GetVirtualPathDependencies(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="e0bdf-215">종속성을 확인하는 데 사용되는 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-215">The virtual path used to determine the dependencies.</span></span></param>
        <summary><span data-ttu-id="e0bdf-216">지정된 가상 경로에 대한 가상 경로 종속성의 컬렉션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-216">Provides a collection of virtual-path dependencies for a specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-217">가상 경로에 대한 종속성을 캐시하는 가상 경로에 나타난 파일의 <see cref="T:System.Collections.ICollection" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-217">An <see cref="T:System.Collections.ICollection" /> collection of files represented by virtual paths that are caching dependencies for the virtual path.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrecompiledApp">
      <MemberSignature Language="C#" Value="public static bool IsPrecompiledApp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsPrecompiledApp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildManager.IsPrecompiledApp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsPrecompiledApp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsPrecompiledApp { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bdf-218">응용 프로그램이 미리 컴파일되었는지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-218">Gets a value that specifies whether the application is precompiled.</span></span></summary>
        <value>
          <span data-ttu-id="e0bdf-219">응용 프로그램이 미리 컴파일되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-219"><see langword="true" /> if the application is precompiled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatablePrecompiledApp">
      <MemberSignature Language="C#" Value="public static bool IsUpdatablePrecompiledApp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsUpdatablePrecompiledApp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsUpdatablePrecompiledApp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsUpdatablePrecompiledApp { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bdf-220">응용 프로그램이 업데이트 가능하도록 미리 컴파일되었는지 여부를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-220">Gets a value that specifies whether the application is precompiled as updatable.</span></span></summary>
        <value>
          <span data-ttu-id="e0bdf-221">응용 프로그램이 업데이트 가능한 것으로 미리 컴파일되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-221"><see langword="true" /> if the application is precompiled as updatable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadCachedFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream ReadCachedFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream ReadCachedFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildManager.ReadCachedFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadCachedFile (fileName As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ ReadCachedFile(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="e0bdf-222">읽을 파일의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-222">The name of the file to read.</span></span></param>
        <summary><span data-ttu-id="e0bdf-223">캐시된 파일을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-223">Reads a cached file.</span></span></summary>
        <returns><span data-ttu-id="e0bdf-224">파일의 <see cref="T:System.IO.Stream" /> 개체이거나, 파일이 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-224">The <see cref="T:System.IO.Stream" /> object for the file, or <see langword="null" /> if the file does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-225">이 메서드는 및 <xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A> 메서드를 통해 응용 프로그램 도메인 컴퓨터를 다시 시작할 부분 신뢰 환경에서 지속 되는 캐싱을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-225">This method and the <xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A> method enable you to perform caching that persists across application domain restarts in partial-trust environments.</span></span> <span data-ttu-id="e0bdf-226">컨트롤러 조회 결과 캐시 하도록 MVC 프레임 워크에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-226">It is used by the MVC framework to cache results of the controller lookup.</span></span>  
  
 <span data-ttu-id="e0bdf-227">캐시 된 데이터를 검색 하려면에서 읽은 <xref:System.IO.Stream> 이 메서드에 의해 반환 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-227">To retrieve cached data, you read from the <xref:System.IO.Stream> object that is returned by this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFramework">
      <MemberSignature Language="C#" Value="public static System.Runtime.Versioning.FrameworkName TargetFramework { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Versioning.FrameworkName TargetFramework" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildManager.TargetFramework" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TargetFramework As FrameworkName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Versioning::FrameworkName ^ TargetFramework { System::Runtime::Versioning::FrameworkName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.FrameworkName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0bdf-228">현재 웹 사이트에 대한 .NET Framework의 대상 버전을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-228">Gets the target version of the .NET Framework for the current Web site.</span></span></summary>
        <value><span data-ttu-id="e0bdf-229">현재 웹 사이트에 대한 .NET Framework의 대상 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-229">The target version of the .NET Framework for the current Web site.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0bdf-230">이 속성은 최신 버전의 Visual Studio 이전 버전의.NET Framework로 실행 되는 응용 프로그램을 개발 하는 데 사용 하면 ASP.NET 멀티 타기 팅 기능을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-230">This property supports the ASP.NET multi-targeting feature, which enables you to use the latest version of Visual Studio to develop applications that will run with earlier versions of the .NET Framework.</span></span> <span data-ttu-id="e0bdf-231">빌드 공급자 공급자의.NET Framework 대상된 버전에 해당 하는 코드를 생성 되도록 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-231">A build provider can use this property to make sure that the provider generates code that is appropriate for the targeted version of the .NET Framework.</span></span> <span data-ttu-id="e0bdf-232">예를 들어 있는지 여부를 웹 사이트 대상에 따라 서로 다른 코드를 생성 하려면 수는 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 또는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-232">For example, you might want to generate different code depending on whether a Web site targets the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] or the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="e0bdf-233">다중 대상 지정 하는 방법에 대 한 자세한 내용은 참조 [ASP.NET 웹 프로젝트에.NET Framework 멀티 타기 팅](http://msdn.microsoft.com/library/8b8145a9-62f6-4fc4-8a83-47b0487cbe76)합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-233">For more information about multi-targeting, see [.NET Framework Multi-Targeting for ASP.NET Web Projects](http://msdn.microsoft.com/library/8b8145a9-62f6-4fc4-8a83-47b0487cbe76).</span></span>  
  
 <span data-ttu-id="e0bdf-234">웹 사이트에 Web.config 파일을 찾을 수 없는 경우 ASP.NET 대상 프레임 워크 버전 사이트에서 실행 되는 IIS 응용 프로그램 풀과 연결 된 버전 이라고 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-234">If the Web site does not have a Web.config file, ASP.NET assumes that the target framework version is the version that is associated with the IIS application pool that the site is running under.</span></span> <span data-ttu-id="e0bdf-235">Visual Studio에서 실행 되는 파일 시스템 웹 사이트에 대 한 기본 프레임 워크 버전.NET Framework의 현재 버전이입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-235">For a file-system Web site that is running in Visual Studio, the default framework version is the current version of the .NET Framework.</span></span>  
  
 <span data-ttu-id="e0bdf-236">Web.config 파일에는 웹 사이트에, ASP.NET Web.config 파일을 검사 하 여 대상 프레임 워크를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-236">If the Web site does have a Web.config file, ASP.NET determines the target framework by examining the Web.config file.</span></span>  
  
## <a name="web-sites-that-target-the-net-framework-20"></a><span data-ttu-id="e0bdf-237">.NET Framework 2.0을 대상으로 하는 웹 사이트</span><span class="sxs-lookup"><span data-stu-id="e0bdf-237">Web Sites that Target the .NET Framework 2.0</span></span>  
 <span data-ttu-id="e0bdf-238">웹 응용 프로그램 대상으로 하는 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 마치 것 처럼 대상 컴파일되는 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-238">Web applications that target the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] are compiled as if the target were the [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)].</span></span> <span data-ttu-id="e0bdf-239">빌드 프로세스를 구분 하지 않습니다는 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 및 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] 이러한 버전 중 하나를 대상 하는 경우 Web.config 파일 컴파일러 버전 또는 대상 프레임 워크를 인식 하지 못하기 때문에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-239">The build process does not differentiate between the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] and the [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] because the Web.config file does not indicate compiler version or target framework when one of those versions is targeted.</span></span> <span data-ttu-id="e0bdf-240">(에 대 한는 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], Web.config 파일에서 컴파일러 버전을 지정 하 고는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], Web.config 파일은 대상 프레임 워크를 지정 합니다.) 따라서에 대 한 웹 응용 프로그램 대상으로 하는 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)],이 속성은 반환 나타내는 대상 프레임 워크 모니커는 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-240">(For the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], the Web.config file specifies the compiler version, and for the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the Web.config file specifies the target framework.) Therefore, for Web applications that target the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], this property returns a target framework moniker that indicates the [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)].</span></span>  
  
 <span data-ttu-id="e0bdf-241">이 일반적으로 발생 하지 않습니다 문제입니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-241">This normally will not cause any problems.</span></span> <span data-ttu-id="e0bdf-242">Visual Studio에 대 한 참조를 만들지 못하게 하면 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] 기능을 대상으로 하는 프로젝트에는 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-242">Visual Studio prevents you from creating references to [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] features in a project that is targeted for the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].</span></span> <span data-ttu-id="e0bdf-243">예를 들어 Visual Studio에서는 항목 템플릿을 대상으로 하는 프로젝트에서 WCF 서비스에 대 한 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]WCF 버전부터 때문에 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] 및와 호환 되지 않습니다는 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-243">For example, Visual Studio does not provide item templates for WCF services in a project that is targeted for [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], because WCF was introduced with the [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and is not compatible with the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].</span></span>  
  
 <span data-ttu-id="e0bdf-244">웹 사이트에서 배포 하려는 경우는 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 만 호환 되는 참조 기능에 Visual Studio 이외의 다른 도구를 사용 하 여 런타임 환경 [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], 오류 또는 경고를 생성 하지 않고 프로젝트 빌드 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-244">If you plan to deploy a Web site in a [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] run-time environment and you use a tool other than Visual Studio to reference features that are compatible only with [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], the project might build without generating errors or warnings.</span></span> <span data-ttu-id="e0bdf-245">그러나 통해 응용 프로그램에서 웹 사이트를 실행할 때 오류를 생성할 수 있습니다는 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="e0bdf-245">However, the application might generate errors when the Web site runs on the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>