<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClientBuildManagerParameter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5df67407c6097ad233c005e63868b8e8810f3a9aa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df67407c6097ad233c005e63868b8e8810f3a9aa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>Contains values passed to the ASP.NET compiler during precompilation.</source>
          <target state="translated">미리 컴파일하는 동안 ASP.NET 컴파일러에 전달되는 값을 포함합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code.</source>
          <target state="translated">ASP.NET 웹 페이지 및 코드 파일을 사용자에 대 한 보다 빨리 응답 사이트의 배포에 대 한 소스 코드를 배포 하지 않고 미리 컴파일된 수입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>For more information on precompiling an ASP.NET Web site, see <bpt id="p1">[</bpt>ASP.NET Web Site Project Precompilation Overview<ept id="p1">](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a)</ept>.</source>
          <target state="translated">ASP.NET 웹 사이트를 미리 컴파일에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>ASP.NET 웹 사이트 프로젝트 미리 컴파일 개요<ept id="p1">](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> class stores values that are used during precompilation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> 클래스 미리 컴파일하는 동안 사용 되는 값을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> property determines how the assembly will be built.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> 속성 어셈블리 빌드되는 방식을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>For example, you can set <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Web.Compilation.PrecompilationFlags.Clean&gt;</ph> to recompile any previously compiled components, or set it to <ph id="ph3">&lt;xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget&gt;</ph> to permit the resulting assembly to overwrite any components in the target directory.</source>
          <target state="translated">예를 들어 설정할 수 있습니다 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Web.Compilation.PrecompilationFlags.Clean&gt;</ph> 로 설정 하거나 모든 이전에 컴파일된 구성 요소 다시 컴파일 <ph id="ph3">&lt;xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget&gt;</ph> 대상 디렉터리의 모든 구성 요소를 덮어쓰려면 결과 어셈블리를 허용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> enumerator has a <ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph> attribute that allows a bitwise combination of its member values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> 열거자에는 <ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph> 멤버 값의 비트 조합을 허용 하는 특성입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> property can contain more than one value from the <ph id="ph2">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> enumeration to specify a combination of precompilation behaviors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> 속성에서 둘 이상의 값을 포함할 수 있습니다는 <ph id="ph2">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> 미리 컴파일 동작 조합을 지정 하는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>Either the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph> property is assigned a value to create a strong-named assembly.</source>
          <target state="translated">중 하나는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph> 속성 또는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph> 속성 강력한 이름의 어셈블리를 만드는 값이 할당 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>Both values do not need to be set to create a strong-named assembly.</source>
          <target state="translated">두 값을 강력한 이름의 어셈블리를 만드는 설정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>A <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object is passed to the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> object through the <ph id="ph3">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> 를 전달 하는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 개체를 통해는 <ph id="ph3">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>The following code example is part of a code example found in the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> class overview.</source>
          <target state="translated">다음 코드 예제에는 코드 예제에서는의 일부인는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>In the example, a <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object is created and its values set.</source>
          <target state="translated">예제에서는 한 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> 개체가 만들어지고 해당 값이 설정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManagerParameter">
          <source>The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> values.</source>
          <target state="translated">결과 어셈블리는 제공된 된 키 파일을 기반으로 강력한 이름이 있으며 제공 된에 따라 미리 컴파일합니다 <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor">
          <source>This constructor does not initialize any property values.</source>
          <target state="translated">이 생성자는 모든 속성 값을 초기화 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor">
          <source>Those values must be set through the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> properties after the object has been created.</source>
          <target state="translated">통해 이러한 값을 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> 개체를 만든 후에 속성입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor">
          <source>The following code example is part of a code example found in the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> class overview.</source>
          <target state="translated">다음 코드 예제에는 코드 예제에서는의 일부인는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor">
          <source>In the example, a <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object is created and its values set.</source>
          <target state="translated">예제에서는 한 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> 개체가 만들어지고 해당 값이 설정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor">
          <source>The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> values.</source>
          <target state="translated">결과 어셈블리는 제공된 된 키 파일을 기반으로 강력한 이름이 있으며 제공 된에 따라 미리 컴파일합니다 <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths">
          <source>Gets or sets excluded virtual paths.</source>
          <target state="translated">제외된 가상 경로를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths">
          <source>Excluded virtual paths.</source>
          <target state="translated">제외 된 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags">
          <source>Gets or sets the flags that determine precompilation behavior.</source>
          <target state="translated">미리 컴파일 동작을 결정하는 플래그를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Compilation.PrecompilationFlags" /&gt;</ph> for a client build.</source>
          <target state="translated">클라이언트 빌드를 위한 <ph id="ph1">&lt;see cref="T:System.Web.Compilation.PrecompilationFlags" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> property determines how the assembly will be built.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> 속성 어셈블리 빌드되는 방식을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags">
          <source>For example, you can set <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Web.Compilation.PrecompilationFlags.Clean&gt;</ph> to recompile any previously compiled components, or set it to <ph id="ph3">&lt;xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget&gt;</ph> to permit the resulting assembly to overwrite any components in the target directory.</source>
          <target state="translated">예를 들어 설정할 수 있습니다 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Web.Compilation.PrecompilationFlags.Clean&gt;</ph> 로 설정 하거나 모든 이전에 컴파일된 구성 요소 다시 컴파일 <ph id="ph3">&lt;xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget&gt;</ph> 대상 디렉터리의 모든 구성 요소를 덮어쓰려면 결과 어셈블리를 허용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> enumerator has a <ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph> attribute that allows a bitwise combination of its member values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> 열거자에는 <ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph> 멤버 값의 비트 조합을 허용 하는 특성입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> property can contain more than one value from the <ph id="ph2">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> enumeration to specify a combination of precompilation behaviors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A&gt;</ph> 속성에서 둘 이상의 값을 포함할 수 있습니다는 <ph id="ph2">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> 미리 컴파일 동작 조합을 지정 하는 열거형입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags">
          <source>The following code example is part of a code example found in the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> class overview.</source>
          <target state="translated">다음 코드 예제에는 코드 예제에서는의 일부인는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags">
          <source>In the example, a <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object is created and its values set.</source>
          <target state="translated">예제에서는 한 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> 개체가 만들어지고 해당 값이 설정 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags">
          <source>The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> values.</source>
          <target state="translated">결과 어셈블리는 제공된 된 키 파일을 기반으로 강력한 이름이 있으며 제공 된에 따라 미리 컴파일합니다 <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer">
          <source>Gets or sets the key container used during compilation.</source>
          <target state="translated">컴파일하는 동안 사용되는 키 컨테이너를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> of the value for the key container.</source>
          <target state="translated">키 컨테이너 값의 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer">
          <source>Either the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph> property is assigned a value to create a strong-named assembly.</source>
          <target state="translated">중 하나는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph> 속성 또는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph> 속성 강력한 이름의 어셈블리를 만드는 값이 할당 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer">
          <source>Both values do not need to be set to create a strong-named assembly.</source>
          <target state="translated">두 값을 강력한 이름의 어셈블리를 만드는 설정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer">
          <source>The following code example is similar to the code example found in the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> class overview except that the resulting assembly will have a strong name based on the provided key container.</source>
          <target state="translated">다음 코드 예제는 있는 코드 예제와 비슷한는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 클래스 개요를 제외 하 결과 어셈블리에 제공된 된 키 컨테이너에 기반 하 여 강력한 이름을 갖습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer">
          <source>It will precompile according to the provided <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> values.</source>
          <target state="translated">제공 된에 따라 미리 컴파일하는 <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile">
          <source>Gets or sets the key file used during compilation.</source>
          <target state="translated">컴파일하는 동안 사용되는 키 파일을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> of the value for the key file.</source>
          <target state="translated">키 파일 값의 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile">
          <source>Either the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph> property is assigned a value to create a strong-named assembly.</source>
          <target state="translated">중 하나는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A&gt;</ph> 속성 또는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A&gt;</ph> 속성 강력한 이름의 어셈블리를 만드는 값이 할당 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile">
          <source>Both values do not need to be set to create a strong-named assembly.</source>
          <target state="translated">두 값을 강력한 이름의 어셈블리를 만드는 설정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile">
          <source>The following code example is part of a code example found in the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> class overview.</source>
          <target state="translated">다음 코드 예제에는 코드 예제에서는의 일부인는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile">
          <source>In the example, a <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object is created and its values set.</source>
          <target state="translated">예제에서는 한 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> 개체가 만들어지고 해당 값이 설정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile">
          <source>The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> values.</source>
          <target state="translated">결과 어셈블리는 제공된 된 키 파일을 기반으로 강력한 이름이 있으며 제공 된에 따라 미리 컴파일합니다 <ph id="ph1">&lt;xref:System.Web.Compilation.PrecompilationFlags&gt;</ph> 값입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>