<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="31be5-101">미리 컴파일하는 동안 ASP.NET 컴파일러에 전달되는 값을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-101">Contains values passed to the ASP.NET compiler during precompilation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31be5-102">ASP.NET 웹 페이지 및 코드 파일을 사용자에 대 한 보다 빨리 응답 사이트의 배포에 대 한 소스 코드를 배포 하지 않고 미리 컴파일된 수입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-102">ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code.</span></span> <span data-ttu-id="31be5-103">ASP.NET 웹 사이트를 미리 컴파일에 대 한 자세한 내용은 참조 하십시오. [ASP.NET 웹 사이트 프로젝트 미리 컴파일 개요](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a)합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-103">For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).</span></span>  
  
 <span data-ttu-id="31be5-104"><xref:System.Web.Compilation.ClientBuildManagerParameter> 클래스 미리 컴파일하는 동안 사용 되는 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-104">The <xref:System.Web.Compilation.ClientBuildManagerParameter> class stores values that are used during precompilation.</span></span> <span data-ttu-id="31be5-105"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> 속성 어셈블리 빌드되는 방식을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-105">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built.</span></span> <span data-ttu-id="31be5-106">예를 들어 설정할 수 있습니다 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> 를 <xref:System.Web.Compilation.PrecompilationFlags.Clean> 로 설정 하거나 모든 이전에 컴파일된 구성 요소 다시 컴파일 <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> 대상 디렉터리의 모든 구성 요소를 덮어쓰려면 결과 어셈블리를 허용 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-106">For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory.</span></span> <span data-ttu-id="31be5-107"><xref:System.Web.Compilation.PrecompilationFlags> 열거자에는 <xref:System.FlagsAttribute> 멤버 값의 비트 조합을 허용 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-107">The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values.</span></span> <span data-ttu-id="31be5-108"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> 속성에서 둘 이상의 값을 포함할 수 있습니다는 <xref:System.Web.Compilation.PrecompilationFlags> 미리 컴파일 동작 조합을 지정 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-108">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.</span></span>  
  
 <span data-ttu-id="31be5-109">중 하나는 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> 속성 또는 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> 속성 강력한 이름의 어셈블리를 만드는 값이 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-109">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="31be5-110">두 값을 강력한 이름의 어셈블리를 만드는 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-110">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
 <span data-ttu-id="31be5-111">A <xref:System.Web.Compilation.ClientBuildManagerParameter> 를 전달 하는 <xref:System.Web.Compilation.ClientBuildManager> 개체를 통해는 <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-111">A <xref:System.Web.Compilation.ClientBuildManagerParameter> object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31be5-112">다음 코드 예제에는 코드 예제에서는의 일부인는 <xref:System.Web.Compilation.ClientBuildManager> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-112">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="31be5-113">예제에서는 한 <xref:System.Web.Compilation.ClientBuildManagerParameter> 개체가 만들어지고 해당 값이 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-113">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="31be5-114">결과 어셈블리는 제공된 된 키 파일을 기반으로 강력한 이름이 있으며 제공 된에 따라 미리 컴파일합니다 <xref:System.Web.Compilation.PrecompilationFlags> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-114">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31be5-115"><see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-115">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31be5-116">이 생성자는 모든 속성 값을 초기화 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-116">This constructor does not initialize any property values.</span></span> <span data-ttu-id="31be5-117">통해 이러한 값을 설정 해야 합니다는 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, 및 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> 개체를 만든 후에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-117">Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31be5-118">다음 코드 예제에는 코드 예제에서는의 일부인는 <xref:System.Web.Compilation.ClientBuildManager> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-118">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="31be5-119">예제에서는 한 <xref:System.Web.Compilation.ClientBuildManagerParameter> 개체가 만들어지고 해당 값이 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-119">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="31be5-120">결과 어셈블리는 제공된 된 키 파일을 기반으로 강력한 이름이 있으며 제공 된에 따라 미리 컴파일합니다 <xref:System.Web.Compilation.PrecompilationFlags> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-120">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31be5-121">제외된 가상 경로를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-121">Gets or sets excluded virtual paths.</span></span></summary>
        <value><span data-ttu-id="31be5-122">제외 된 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-122">Excluded virtual paths.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31be5-123">미리 컴파일 동작을 결정하는 플래그를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-123">Gets or sets the flags that determine precompilation behavior.</span></span></summary>
        <value><span data-ttu-id="31be5-124">클라이언트 빌드를 위한 <see cref="T:System.Web.Compilation.PrecompilationFlags" />입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-124">The <see cref="T:System.Web.Compilation.PrecompilationFlags" /> for a client build.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31be5-125"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> 속성 어셈블리 빌드되는 방식을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-125">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built.</span></span> <span data-ttu-id="31be5-126">예를 들어 설정할 수 있습니다 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> 를 <xref:System.Web.Compilation.PrecompilationFlags.Clean> 로 설정 하거나 모든 이전에 컴파일된 구성 요소 다시 컴파일 <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> 대상 디렉터리의 모든 구성 요소를 덮어쓰려면 결과 어셈블리를 허용 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-126">For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory.</span></span> <span data-ttu-id="31be5-127"><xref:System.Web.Compilation.PrecompilationFlags> 열거자에는 <xref:System.FlagsAttribute> 멤버 값의 비트 조합을 허용 하는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-127">The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values.</span></span> <span data-ttu-id="31be5-128"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> 속성에서 둘 이상의 값을 포함할 수 있습니다는 <xref:System.Web.Compilation.PrecompilationFlags> 미리 컴파일 동작 조합을 지정 하는 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-128">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31be5-129">다음 코드 예제에는 코드 예제에서는의 일부인는 <xref:System.Web.Compilation.ClientBuildManager> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-129">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="31be5-130">예제에서는 한 <xref:System.Web.Compilation.ClientBuildManagerParameter> 개체가 만들어지고 해당 값이 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-130">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="31be5-131">결과 어셈블리는 제공된 된 키 파일을 기반으로 강력한 이름이 있으며 제공 된에 따라 미리 컴파일합니다 <xref:System.Web.Compilation.PrecompilationFlags> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-131">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31be5-132">컴파일하는 동안 사용되는 키 컨테이너를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-132">Gets or sets the key container used during compilation.</span></span></summary>
        <value><span data-ttu-id="31be5-133">키 컨테이너 값의 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-133">A <see cref="T:System.String" /> of the value for the key container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31be5-134">중 하나는 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> 속성 또는 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> 속성 강력한 이름의 어셈블리를 만드는 값이 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-134">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="31be5-135">두 값을 강력한 이름의 어셈블리를 만드는 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-135">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31be5-136">다음 코드 예제는 있는 코드 예제와 비슷한는 <xref:System.Web.Compilation.ClientBuildManager> 클래스 개요를 제외 하 결과 어셈블리에 제공된 된 키 컨테이너에 기반 하 여 강력한 이름을 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-136">The following code example is similar to the code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview except that the resulting assembly will have a strong name based on the provided key container.</span></span> <span data-ttu-id="31be5-137">제공 된에 따라 미리 컴파일하는 <xref:System.Web.Compilation.PrecompilationFlags> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-137">It will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31be5-138">컴파일하는 동안 사용되는 키 파일을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-138">Gets or sets the key file used during compilation.</span></span></summary>
        <value><span data-ttu-id="31be5-139">키 파일 값의 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-139">A <see cref="T:System.String" /> of the value for the key file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31be5-140">중 하나는 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> 속성 또는 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> 속성 강력한 이름의 어셈블리를 만드는 값이 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-140">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="31be5-141">두 값을 강력한 이름의 어셈블리를 만드는 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-141">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31be5-142">다음 코드 예제에는 코드 예제에서는의 일부인는 <xref:System.Web.Compilation.ClientBuildManager> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-142">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="31be5-143">예제에서는 한 <xref:System.Web.Compilation.ClientBuildManagerParameter> 개체가 만들어지고 해당 값이 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-143">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="31be5-144">결과 어셈블리는 제공된 된 키 파일을 기반으로 강력한 이름이 있으며 제공 된에 따라 미리 컴파일합니다 <xref:System.Web.Compilation.PrecompilationFlags> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="31be5-144">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
  </Members>
</Type>