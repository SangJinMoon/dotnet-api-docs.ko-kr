<Type Name="ClientBuildManager" FullName="System.Web.Compilation.ClientBuildManager">
  <TypeSignature Language="C#" Value="public sealed class ClientBuildManager : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientBuildManager extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientBuildManager&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManager sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1dc86-101">ASP.NET 응용 프로그램에 대한 컴파일 서비스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-101">Provides compilation services for ASP.NET applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-102"><xref:System.Web.Compilation.ClientBuildManager> 클래스 ASP.NET 웹 응용 프로그램을 컴파일 및 생성 된 어셈블리를 검색 하기 위한 메서드와 속성을 제공 하거나 소스 코드를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-102">The <xref:System.Web.Compilation.ClientBuildManager> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code.</span></span> <span data-ttu-id="1dc86-103">클래스의 인스턴스는 클라이언트의 응용 프로그램 도메인에서 설정 및 Microsoft 인터넷 정보 서비스 (IIS) 외부에서 ASP.NET 빌드 시스템에 대 한 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-103">Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="1dc86-104">웹 응용 프로그램 컴파일을 위한 사용자 지정 된 도구를 개발 하는 클래스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-104">The class can be used to develop customized tools for compiling Web applications.</span></span>  
  
 <span data-ttu-id="1dc86-105">명령줄 도구 `aspnet_compiler` 사용 하 여 <xref:System.Web.Compilation.ClientBuildManager> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-105">The command-line tool `aspnet_compiler` uses the <xref:System.Web.Compilation.ClientBuildManager> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1dc86-106"><see cref="T:System.Web.Compilation.ClientBuildManager" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-106">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class.</span></span></summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir"><span data-ttu-id="1dc86-107">응용 프로그램 루트의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-107">The virtual path to the application root.</span></span></param>
        <param name="appPhysicalSourceDir"><span data-ttu-id="1dc86-108">응용 프로그램 루트의 실제 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-108">The physical path to the application root.</span></span></param>
        <summary><span data-ttu-id="1dc86-109">지정된 대상 디렉터리나 미리 컴파일 플래그를 사용하지 않고 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-109">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class without a specified target directory or precompilation flags.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir"><span data-ttu-id="1dc86-110">응용 프로그램 루트의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-110">The virtual path to the application root.</span></span></param>
        <param name="appPhysicalSourceDir"><span data-ttu-id="1dc86-111">응용 프로그램 루트의 실제 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-111">The physical path to the application root.</span></span></param>
        <param name="appPhysicalTargetDir"><span data-ttu-id="1dc86-112">미리 컴파일을 위한 대상 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-112">The target directory for precompilation.</span></span></param>
        <summary><span data-ttu-id="1dc86-113">지정된 대상 디렉터리를 사용하여 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-113">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class with the specified target directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-114">이 형식의 생성자가 미리 컴파일 대상 디렉터리를 지정 하므로 일반적으로 미리 컴파일에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-114">This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String, parameter As ClientBuildManagerParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir"><span data-ttu-id="1dc86-115">응용 프로그램 루트의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-115">The virtual path to the application root.</span></span></param>
        <param name="appPhysicalSourceDir"><span data-ttu-id="1dc86-116">응용 프로그램 루트의 실제 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-116">The physical path to the application root.</span></span></param>
        <param name="appPhysicalTargetDir"><span data-ttu-id="1dc86-117">미리 컴파일을 위한 대상 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-117">The target directory for precompilation.</span></span></param>
        <param name="parameter"><span data-ttu-id="1dc86-118">미리 컴파일 동작을 결정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-118">Values that determine the precompilation behavior.</span></span></param>
        <summary><span data-ttu-id="1dc86-119">지정된 대상 디렉터리와 컴파일 매개 변수를 사용하여 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-119">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class with the specified target directory and compilation parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-120">미리 컴파일 대상 디렉터리와 미리 컴파일 플래그를 지정 하므로이 형식의 생성자가 일반적으로 미리 컴파일에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-120">This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter, class System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter, System::ComponentModel::TypeDescriptionProvider ^ typeDescriptionProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
        <Parameter Name="typeDescriptionProvider" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir"><span data-ttu-id="1dc86-121">응용 프로그램 루트의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-121">The virtual path of the application root.</span></span></param>
        <param name="appPhysicalSourceDir"><span data-ttu-id="1dc86-122">응용 프로그램 루트의 실제 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-122">The physical path of the application root.</span></span></param>
        <param name="appPhysicalTargetDir"><span data-ttu-id="1dc86-123">미리 컴파일을 위한 대상 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-123">The target directory for precompilation.</span></span></param>
        <param name="parameter"><span data-ttu-id="1dc86-124">미리 컴파일 동작을 결정하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-124">Values that determine the precompilation behavior.</span></span></param>
        <param name="typeDescriptionProvider"><span data-ttu-id="1dc86-125">사용할 형식 설명 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-125">The type-description provider to use.</span></span> <span data-ttu-id="1dc86-126">이 매개 변수는 주로 Visual Studio에서 다중 대상 지정 인프라를 지원하는 데 사용되며,</span><span class="sxs-lookup"><span data-stu-id="1dc86-126">This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio.</span></span> <span data-ttu-id="1dc86-127">.NET Framework의 특정 버전에 대해 필터링되는 형식에 대한 메타데이터를 검색하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-127">It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.</span></span></param>
        <summary><span data-ttu-id="1dc86-128">지정된 가상 디렉터리, 소스 디렉터리, 대상 디렉터리, 컴파일 매개 변수 및 형식 설명 공급자를 사용하여 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-128">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainShutdown">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainShutdown As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainShutdown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dc86-129">응용 프로그램 도메인이 종료될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-129">Occurs when an application domain is shut down.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainStarted">
      <MemberSignature Language="C#" Value="public event EventHandler AppDomainStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppDomainStarted" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AppDomainStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dc86-130">응용 프로그램 도메인이 시작될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-130">Occurs when an application domain is started.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainUnloaded">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainUnloaded As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainUnloaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dc86-131">응용 프로그램 도메인이 언로드될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-131">Occurs when an application domain is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CodeGenDir">
      <MemberSignature Language="C#" Value="public string CodeGenDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeGenDir" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeGenDir As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeGenDir { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dc86-132">코드 생성에 사용된 디렉터리에 대한 실제 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-132">Gets the physical path to the directory used for code generation.</span></span></summary>
        <value><span data-ttu-id="1dc86-133">코드 생성에 사용된 디렉터리 경로가 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-133">A <see cref="T:System.String" /> containing the directory path used for code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-134">코드 생성에 대 한 디렉터리는 일반적으로 임시 ASP.NET 파일 디렉터리에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-134">The directory for code generation is typically in the temporary ASP.NET files directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileApplicationDependencies">
      <MemberSignature Language="C#" Value="public void CompileApplicationDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileApplicationDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileApplicationDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileApplicationDependencies();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dc86-135">App_Code 디렉터리의 파일, Global.asax 파일, 리소스 파일 및 웹 참조 같은 응용 프로그램 종속 파일을 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-135">Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-136"><xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> 메서드를 사용 하면 리소스, 웹 참조, App_Code 디렉터리에 파일, App_Browsers 디렉터리에 있는 브라우저 파일 및 Global.asax 파일은 컴파일됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-136">The <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1dc86-137">가상 경로로 나타낸 파일을 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-137">Compiles the file represented by the virtual path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="1dc86-138">컴파일할 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-138">The path to the file to be compiled.</span></span></param>
        <summary><span data-ttu-id="1dc86-139">가상 경로로 나타낸 파일을 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-139">Compiles the file represented by the virtual path.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath, class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String, callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath, System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="1dc86-140">컴파일할 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-140">The path to the file to be compiled.</span></span></param>
        <param name="callback"><span data-ttu-id="1dc86-141">컴파일 상태 정보를 받을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-141">The object to receive status information from compilation.</span></span></param>
        <summary><span data-ttu-id="1dc86-142">가상 경로로 나타낸 파일을 컴파일하고 빌드에 대한 상태 정보를 받을 콜백 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-142">Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1dc86-143"><paramref name="virtualPath" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-143"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Type type, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(Type ^ type, bool failIfExists);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1dc86-144">만들 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-144">The type of object to be created.</span></span></param>
        <param name="failIfExists">
          <span data-ttu-id="1dc86-145">ASP.NET 런타임의 응용 프로그램 도메인에 개체가 이미 만들어졌으면 예외를 throw하기 위한 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-145"><see langword="true" /> to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1dc86-146">ASP.NET 런타임의 응용 프로그램 도메인에 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-146">Creates an object in the application domain of the ASP.NET runtime.</span></span></summary>
        <returns><span data-ttu-id="1dc86-147">ASP.NET 런타임의 응용 프로그램 도메인에 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-147">An object in the application domain of the ASP.NET runtime.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1dc86-148"><paramref name="type" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-148"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1dc86-149">개체가 응용 프로그램 도메인에 이미 있고 <paramref name="failIfExists" />가 <see langword="true" />인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-149">The object already exists in the application domain and <paramref name="failIfExists" /> is <see langword="true" />.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateCode(string virtualPath, string virtualFileString, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (virtualPath As String, virtualFileString As String, ByRef linePragmasTable As IDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateCode(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="1dc86-150">파일의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-150">The virtual path to the file.</span></span></param>
        <param name="virtualFileString"><span data-ttu-id="1dc86-151">파일 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-151">The contents of the file.</span></span></param>
        <param name="linePragmasTable"><span data-ttu-id="1dc86-152">이 메서드가 반환하면 줄 pragma의 사전을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-152">When this method returns, contains a dictionary of line pragmas.</span></span></param>
        <summary><span data-ttu-id="1dc86-153">파일 내용에서 코드를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-153">Generates code from the contents of a file.</span></span></summary>
        <returns><span data-ttu-id="1dc86-154">생성된 코드가 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-154">A <see cref="T:System.String" /> containing the generated code.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1dc86-155"><paramref name="virtualPath" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-155"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateCodeCompileUnit">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1dc86-156">가상 경로로 나타낸 파일의 codeDOM 트리, 컴파일러 형식 및 컴파일러 매개 변수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-156">Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span></span></summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="1dc86-157">파일의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-157">The virtual path to the file.</span></span></param>
        <param name="codeDomProviderType"><span data-ttu-id="1dc86-158">이 메서드가 반환하면 코드 생성 및 컴파일에 사용된 codeDOM 공급자 형식을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-158">When this method returns, contains the codeDOM provider type used for code generation and compilation.</span></span></param>
        <param name="compilerParameters"><span data-ttu-id="1dc86-159">이 메서드가 반환하면 파일 컴파일 방법을 정의하는 속성을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-159">When this method returns, contains the properties that define how the file will be compiled.</span></span></param>
        <param name="linePragmasTable"><span data-ttu-id="1dc86-160">이 메서드가 반환하면 줄 pragma의 사전을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-160">When this method returns, contains a dictionary of line pragmas.</span></span></param>
        <summary><span data-ttu-id="1dc86-161">가상 경로로 나타낸 파일의 codeDOM 트리, 컴파일러 형식 및 컴파일러 매개 변수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-161">Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span></span></summary>
        <returns><span data-ttu-id="1dc86-162">지정된 파일의 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-162">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for the given file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-163"><xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> 메서드는 파일을 컴파일하는 데 필요한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-163">The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file.</span></span> <span data-ttu-id="1dc86-164">이외에 <xref:System.CodeDom.CodeCompileUnit> 개체를 반환 값으로 3 개 반환 `out` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-164">In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters.</span></span> <span data-ttu-id="1dc86-165">`codeDomProviderType` 매개 변수 생성 및 컴파일 파일에 대 한 공급자 유형을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-165">The `codeDomProviderType` parameter returns the provider type for generating and compiling the file.</span></span> <span data-ttu-id="1dc86-166">`compilerParameters` 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-166">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="1dc86-167">`linePragmasTable` 매개 변수 줄 pragma의 사전이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-167">The `linePragmasTable` parameter contains a dictionary of line pragmas.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, string virtualFileString, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, virtualFileString As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="1dc86-168">파일의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-168">The virtual path to the file.</span></span></param>
        <param name="virtualFileString"><span data-ttu-id="1dc86-169"><c>virtualPath</c> 매개 변수로 나타낸 파일의 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-169">The contents of the file represented by the <c>virtualPath</c> parameter.</span></span></param>
        <param name="codeDomProviderType"><span data-ttu-id="1dc86-170">이 메서드가 반환하면 코드 생성 및 컴파일에 사용된 codeDOM 공급자 형식을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-170">When this method returns, contains the codeDOM provider type used for code generation and compilation.</span></span></param>
        <param name="compilerParameters"><span data-ttu-id="1dc86-171">이 메서드가 반환하면 <c>virtualPath</c> 매개 변수로 나타낸 파일의 방법을 정의하는 속성을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-171">When this method returns, contains the properties that define how the file represented by the <c>virtualPath</c> parameter will be compiled.</span></span></param>
        <param name="linePragmasTable"><span data-ttu-id="1dc86-172">이 메서드가 반환하면 줄 pragma의 사전을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-172">When this method returns, contains a dictionary of line pragmas.</span></span></param>
        <summary><span data-ttu-id="1dc86-173">가상 경로로 나타낸 파일의 내용, codeDOM 트리, 컴파일러 형식 및 컴파일러 매개 변수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-173">Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span></span></summary>
        <returns><span data-ttu-id="1dc86-174">지정된 파일의 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-174">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for the given file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-175"><xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> 메서드는 파일을 컴파일하는 데 필요한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-175">The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file.</span></span> <span data-ttu-id="1dc86-176">이외에 <xref:System.CodeDom.CodeCompileUnit> 개체를 반환 값으로 3 개 반환 `out` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-176">In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters.</span></span> <span data-ttu-id="1dc86-177">`codeDomProviderType` 매개 변수 생성 및 컴파일 파일에 대 한 공급자 유형을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-177">The `codeDomProviderType` parameter returns the provider type for generating and compiling the file.</span></span> <span data-ttu-id="1dc86-178">`compilerParameters` 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-178">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="1dc86-179">`linePragmasTable` 매개 변수 줄 pragma의 사전이 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-179">The `linePragmasTable` parameter contains a dictionary of line pragmas.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1dc86-180"><paramref name="virtualPath" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-180"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetAppDomainShutdownDirectories">
      <MemberSignature Language="C#" Value="public string[] GetAppDomainShutdownDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAppDomainShutdownDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomainShutdownDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAppDomainShutdownDirectories();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dc86-181">변경 시 응용 프로그램 도메인 종료를 유발하는 파일이 있는 디렉터리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-181">Gets the directories with files that, when changed, cause the application domain to shut down.</span></span></summary>
        <returns><span data-ttu-id="1dc86-182">최상위 디렉터리 이름이 들어 있는 <see cref="T:System.String" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-182">A <see cref="T:System.String" /> array containing the top-level directory names.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-183">특정 최상위 디렉터리에 파일 변경이 응용 프로그램 도메인이 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-183">Changes to files in specific top-level directories cause the application domain to shut down.</span></span> <span data-ttu-id="1dc86-184">변경 내용을 검색 하는 Bin, App_Code, Global_Resources, 웹 참조 및 App_Browsers 디렉터리 내의 파일 모니터링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-184">Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes.</span></span> <span data-ttu-id="1dc86-185">변경 내용이 검색 되 면 응용 프로그램 도메인이 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-185">When changes are detected, the application domain is shut down.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetBrowserDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary GetBrowserDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary GetBrowserDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBrowserDefinitions () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ GetBrowserDefinitions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dc86-186">브라우저 요소의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-186">Gets a collection of browser elements.</span></span></summary>
        <returns><span data-ttu-id="1dc86-187">브라우저 요소가 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-187">An <see cref="T:System.Collections.IDictionary" /> containing browser elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-188"><xref:System.Collections.IDictionary> 개체의 키에 대 한 브라우저 이름이 포함 및 <xref:System.Web.UI.Triplet> 값에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-188">The <xref:System.Collections.IDictionary> object contains browser names for the keys and <xref:System.Web.UI.Triplet> objects for the values.</span></span> <span data-ttu-id="1dc86-189"><xref:System.Web.UI.Triplet> 각 개체에는 부모 브라우저 요소, 설명 및 브라우저 요소 트리의 깊이의 이름을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-189">The <xref:System.Web.UI.Triplet> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.BrowserCapabilitiesFactory" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeDirectoryInformation">
      <MemberSignature Language="C#" Value="public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCodeDirectoryInformation(string virtualCodeDir, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] string&amp; generatedFilesDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCodeDirectoryInformation (virtualCodeDir As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef generatedFilesDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCodeDirectoryInformation(System::String ^ virtualCodeDir, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::String ^ % generatedFilesDir);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualCodeDir" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="generatedFilesDir" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualCodeDir"><span data-ttu-id="1dc86-190">해당 정보를 검색할 디렉터리입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-190">The directory about which to retrieve information.</span></span></param>
        <param name="codeDomProviderType"><span data-ttu-id="1dc86-191">이 메서드가 반환하면 코드 생성 및 컴파일에 사용된 공급자 형식을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-191">When this method returns, contains the provider type used for code generation and compilation.</span></span></param>
        <param name="compilerParameters"><span data-ttu-id="1dc86-192">이 메서드가 반환하면 파일 컴파일 방법을 정의하는 속성을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-192">When this method returns, contains the properties that define how the file will be compiled.</span></span></param>
        <param name="generatedFilesDir"><span data-ttu-id="1dc86-193">이 메서드가 반환하면 비코드 파일에서 생성된 파일에 대한 디렉터리를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-193">When this method returns, contains the directory for files generated from non-code files.</span></span></param>
        <summary><span data-ttu-id="1dc86-194">컴파일 유형, 컴파일러 매개 변수 및 .wsdl 파일 같은 비코드 파일에서 생성된 코드 파일을 저장할 디렉터리에 대한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-194">Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-195"><xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> 메서드 코드 디렉터리를 만드는 데 필요한 정보를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-195">The <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> method retrieves information needed to build a code directory.</span></span> <span data-ttu-id="1dc86-196">이 정보를 통해 3 개 반환 `out` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-196">It returns this information through three `out` parameters.</span></span> <span data-ttu-id="1dc86-197">`codeDomProviderType` 매개 변수를 생성 하 고 코드 디렉터리에 파일을 컴파일하여 공급자 유형을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-197">The `codeDomProviderType` parameter returns the provider type for generating and compiling the files in the code directory.</span></span> <span data-ttu-id="1dc86-198">`compilerParameters` 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-198">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="1dc86-199">`generatedFilesDir` .wsdl 파일 등 코드 디렉터리에 비 코드 파일에서 생성 된 모든 코드 파일이 포함 된 디렉터리 경로 저장 하는 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-199">The `generatedFilesDir` parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1dc86-200"><paramref name="virtualCodeDir" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-200"><paramref name="virtualCodeDir" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledType">
      <MemberSignature Language="C#" Value="public Type GetCompiledType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetCompiledType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompiledType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetCompiledType(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="1dc86-201">컴파일할 파일의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-201">The virtual path of the file to compile.</span></span></param>
        <summary><span data-ttu-id="1dc86-202">가상 경로로 나타낸 파일을 컴파일하고 컴파일된 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-202">Compiles the file represented by the virtual path and returns its compiled type.</span></span></summary>
        <returns><span data-ttu-id="1dc86-203">컴파일한 파일의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-203">The <see cref="T:System.Type" /> of the compiled file.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1dc86-204"><paramref name="virtualPath" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-204"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerParameters">
      <MemberSignature Language="C#" Value="public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCompilerParameters(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCompilerParameters (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCompilerParameters(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="1dc86-205">파일의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-205">The virtual path to the file.</span></span></param>
        <param name="codeDomProviderType"><span data-ttu-id="1dc86-206">이 메서드가 반환하면 코드 생성 및 컴파일에 사용된 공급자 형식을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-206">When this method returns, contains the provider type used for code generation and compilation.</span></span></param>
        <param name="compilerParameters"><span data-ttu-id="1dc86-207">이 메서드가 반환하면 파일 컴파일 방법을 정의하는 속성을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-207">When this method returns, contains the properties that define how the file will be compiled.</span></span></param>
        <summary><span data-ttu-id="1dc86-208">가상 경로로 나타낸 파일을 빌드하는 데 사용되는 컴파일러 형식 및 매개 변수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-208">Returns the compiler type and parameters that are used to build a file represented by a virtual path.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1dc86-209"><paramref name="virtualPath" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-209"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedFileVirtualPath">
      <MemberSignature Language="C#" Value="public string GetGeneratedFileVirtualPath (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedFileVirtualPath(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedFileVirtualPath (filePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedFileVirtualPath(System::String ^ filePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="1dc86-210">생성된 파일에 대한 전체 실제 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-210">The full physical path to a generated file.</span></span></param>
        <summary><span data-ttu-id="1dc86-211">생성된 파일의 가상 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-211">Returns the virtual path of a generated file.</span></span></summary>
        <returns><span data-ttu-id="1dc86-212"><paramref name="filePath" />에 대한 가상 경로가 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-212">A <see cref="T:System.String" /> containing the virtual path for <paramref name="filePath" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1dc86-213"><paramref name="filePath" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-213"><paramref name="filePath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedSourceFile">
      <MemberSignature Language="C#" Value="public string GetGeneratedSourceFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedSourceFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedSourceFile (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedSourceFile(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="1dc86-214">검색할 파일의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-214">The virtual path of the file to retrieve.</span></span></param>
        <summary><span data-ttu-id="1dc86-215">가상 경로에 대해 생성된 파일의 실제 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-215">Gets the physical path to the generated file for a virtual path.</span></span></summary>
        <returns><span data-ttu-id="1dc86-216">생성된 파일의 실제 경로가 들어 있는 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-216">A <see cref="T:System.String" /> that contains the physical path to the generated file.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1dc86-217"><paramref name="virtualPath" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-217"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetTopLevelAssemblyReferences">
      <MemberSignature Language="C#" Value="public string[] GetTopLevelAssemblyReferences (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetTopLevelAssemblyReferences(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTopLevelAssemblyReferences (virtualPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetTopLevelAssemblyReferences(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="1dc86-218">구성 이름 및 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-218">The configuration name and path.</span></span></param>
        <summary><span data-ttu-id="1dc86-219">Bin 디렉터리 및 웹 구성 파일의 <see langword="&lt;assembly&gt;" /> 섹션에 정의된 어셈블리의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-219">Returns an array of the assemblies defined in the Bin directory and the <see langword="&lt;assembly&gt;" /> section of the Web configuration file.</span></span></summary>
        <returns><span data-ttu-id="1dc86-220">Bin 디렉터리 및 웹 구성 파일의 <see langword="&lt;assembly&gt;" /> 섹션에 있는 코드베이스에 대한 경로가 들어 있는 <see cref="T:System.String" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-220">A <see cref="T:System.String" /> array containing paths to code bases in the Bin directory and the <see langword="&lt;assembly&gt;" /> section of the Web configuration file.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1dc86-221"><paramref name="virtualPath" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-221"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetVirtualCodeDirectories">
      <MemberSignature Language="C#" Value="public string[] GetVirtualCodeDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetVirtualCodeDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualCodeDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetVirtualCodeDirectories();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dc86-222">ASP.NET 응용 프로그램의 App_Code 디렉터리 및 해당 하위 디렉터리에 대한 가상 경로를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-222">Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.</span></span></summary>
        <returns><span data-ttu-id="1dc86-223">응용 프로그램의 코드 디렉터리에 대한 모든 가상 경로가 들어 있는 <see cref="T:System.String" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-223">A <see cref="T:System.String" /> array containing all the virtual paths to code directories in an application.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dc86-224">임대가 만들어지는 것을 방지하여 응용 프로그램 도메인에 영구 수명을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-224">Gives the application domain an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="1dc86-225">항상 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-225">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-226">이 메서드를 재정의 <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> 메서드는 기본 클래스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-226">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="1dc86-227">액세스할 수 있으려면 `null` 및 응용 프로그램 도메인의 수명을 제한 하는 임대가 만들어지지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-227">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsCodeAssembly">
      <MemberSignature Language="C#" Value="public bool IsCodeAssembly (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCodeAssembly(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCodeAssembly (assemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCodeAssembly(System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="1dc86-228">코드 어셈블리로 식별할 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-228">The name of the assembly to be identified as a code assembly.</span></span></param>
        <summary><span data-ttu-id="1dc86-229">코드 어셈블리인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-229">Indicates whether an assembly is a code assembly.</span></span></summary>
        <returns>
          <span data-ttu-id="1dc86-230"><paramref name="assemblyName" /> 매개 변수가 생성된 코드 어셈블리 중 하나와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-230"><see langword="true" /> if the <paramref name="assemblyName" /> parameter matches one of the generated code assemblies; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1dc86-231"><paramref name="assemblyName" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="1dc86-231"><paramref name="assemblyName" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsHostCreated">
      <MemberSignature Language="C#" Value="public bool IsHostCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHostCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHostCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHostCreated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1dc86-232">ASP.NET 웹 응용 프로그램 컴파일을 위한 응용 프로그램 도메인이 만들어졌는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-232">Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.</span></span></summary>
        <value>
          <span data-ttu-id="1dc86-233">ASP.NET 웹 응용 프로그램 컴파일을 위한 응용 프로그램 도메인이 만들어졌으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-233"><see langword="true" /> if the application domain for compiling ASP.NET Web applications has been created; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PrecompileApplication">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1dc86-234">ASP.NET 응용 프로그램을 미리 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-234">Precompiles an ASP.NET application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-235">ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-235">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="1dc86-236">한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-236">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="1dc86-237">이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-237">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="1dc86-238">사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-238">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span>  
  
 <span data-ttu-id="1dc86-239">다른 두 가지 미리 컴파일 배포에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-239">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="1dc86-240">사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-240">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="1dc86-241">이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-241">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="1dc86-242">다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-242">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="1dc86-243">소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-243">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="1dc86-244">미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 <xref:System.Web.Compilation.ClientBuildManager> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-244">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="1dc86-245"><xref:System.Web.Compilation.ClientBuildManagerParameter> 의 개체는 <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> 생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-245">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="1dc86-246">개발자는 웹 사이트를 미리 컴파일할 수는 `aspnet_compiler` 명령줄 도구 또는 호출 하 여는 <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1dc86-246">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dc86-247">ASP.NET 응용 프로그램을 미리 컴파일합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-247">Precompiles an ASP.NET application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-248">ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-248">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="1dc86-249">한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-249">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="1dc86-250">이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-250">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="1dc86-251">사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-251">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span>  
  
 <span data-ttu-id="1dc86-252">다른 두 가지 미리 컴파일 배포에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-252">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="1dc86-253">사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-253">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="1dc86-254">이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-254">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="1dc86-255">다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-255">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="1dc86-256">소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-256">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="1dc86-257">미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 <xref:System.Web.Compilation.ClientBuildManager> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-257">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="1dc86-258"><xref:System.Web.Compilation.ClientBuildManagerParameter> 의 개체는 <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> 생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-258">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="1dc86-259">개발자는 웹 사이트를 미리 컴파일할 수는 `aspnet_compiler` 명령줄 도구 또는 호출 하 여는 <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1dc86-259">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="1dc86-260">컴파일 결과를 보고할 때 호출할 메서드가 들어 있는 <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-260">A <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> containing the method to call when reporting the result of compilation.</span></span></param>
        <summary><span data-ttu-id="1dc86-261">ASP.NET 응용 프로그램을 미리 컴파일하고 빌드에 대한 상태 정보를 받을 콜백 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-261">Precompiles an ASP.NET application and provides a callback method to receive status information about the build.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-262">ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-262">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="1dc86-263">한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-263">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="1dc86-264">이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-264">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="1dc86-265">사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-265">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span> <span data-ttu-id="1dc86-266">`callback` 매개 변수에는 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-266">The `callback` parameter contains the method to call when reporting the result of compilation.</span></span>  
  
 <span data-ttu-id="1dc86-267">다른 두 가지 미리 컴파일 배포에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-267">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="1dc86-268">사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-268">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="1dc86-269">이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-269">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="1dc86-270">다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-270">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="1dc86-271">소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-271">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="1dc86-272">미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 <xref:System.Web.Compilation.ClientBuildManager> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-272">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="1dc86-273"><xref:System.Web.Compilation.ClientBuildManagerParameter> 의 개체는 <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> 생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-273">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="1dc86-274">개발자는 웹 사이트를 미리 컴파일할 수는 `aspnet_compiler` 명령줄 도구 또는 호출 하 여는 <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1dc86-274">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback, forceCleanBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback, bool forceCleanBuild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
        <Parameter Name="forceCleanBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="1dc86-275">컴파일 결과를 보고할 때 호출할 메서드가 들어 있는 <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-275">A <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> containing the method to call when reporting the result of compilation.</span></span></param>
        <param name="forceCleanBuild">
          <span data-ttu-id="1dc86-276">먼저 모든 개체와 중간 파일을 삭제하는 정리 빌드를 수행하려면 <see langword="true" />이고, 변경된 파일만 다시 빌드하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-276"><see langword="true" /> to perform a clean build, which will first delete all object and intermediate files; <see langword="false" /> to rebuild only those files that have changed.</span></span> <span data-ttu-id="1dc86-277">빌드 환경에서 종속 파일을 선택하지 못할 가능성이 있으면 true로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-277">Set to true if there is a chance that a dependency might not be picked up by the build environment.</span></span></param>
        <summary><span data-ttu-id="1dc86-278">ASP.NET 응용 프로그램을 미리 컴파일하고, 빌드에 대한 상태 정보를 받을 콜백 메서드를 제공하고, 정리 빌드를 만들지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-278">Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1dc86-279">ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-279">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="1dc86-280">한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-280">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="1dc86-281">이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-281">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="1dc86-282">사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-282">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span> <span data-ttu-id="1dc86-283">`callback` 매개 변수에는 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-283">The `callback` parameter contains the method to call when reporting the result of compilation.</span></span>  
  
 <span data-ttu-id="1dc86-284">다른 두 가지 미리 컴파일 배포에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-284">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="1dc86-285">사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-285">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="1dc86-286">이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-286">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="1dc86-287">다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-287">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="1dc86-288">소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-288">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="1dc86-289">미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 <xref:System.Web.Compilation.ClientBuildManager> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-289">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="1dc86-290"><xref:System.Web.Compilation.ClientBuildManagerParameter> 의 개체는 <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> 생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-290">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="1dc86-291">개발자는 웹 사이트를 미리 컴파일할 수는 `aspnet_compiler` 명령줄 도구 또는 호출 하 여는 <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1dc86-291">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dc86-292">현재 ASP.NET 응용 프로그램을 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-292">Terminates the current ASP.NET application.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public bool Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Function Unload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Unload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1dc86-293">ASP.NET 웹 응용 프로그램 컴파일을 위한 응용 프로그램 도메인을 언로드합니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-293">Unloads the application domain for compiling ASP.NET Web applications.</span></span></summary>
        <returns>
          <span data-ttu-id="1dc86-294">응용 프로그램 도메인이 언로드되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="1dc86-294"><see langword="true" /> if the application domain is unloaded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>