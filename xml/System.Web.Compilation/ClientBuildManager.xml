<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClientBuildManager.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50cd137cd815791e0a41351f1d0a823bbedf0b46c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0cd137cd815791e0a41351f1d0a823bbedf0b46c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>Provides compilation services for ASP.NET applications.</source>
          <target state="translated">ASP.NET 응용 프로그램에 대한 컴파일 서비스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 클래스 ASP.NET 웹 응용 프로그램을 컴파일 및 생성 된 어셈블리를 검색 하기 위한 메서드와 속성을 제공 하거나 소스 코드를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS).</source>
          <target state="translated">클래스의 인스턴스는 클라이언트의 응용 프로그램 도메인에서 설정 및 Microsoft 인터넷 정보 서비스 (IIS) 외부에서 ASP.NET 빌드 시스템에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>The class can be used to develop customized tools for compiling Web applications.</source>
          <target state="translated">웹 응용 프로그램 컴파일을 위한 사용자 지정 된 도구를 개발 하는 클래스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>The command-line tool <ph id="ph1">`aspnet_compiler`</ph> uses the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> class.</source>
          <target state="translated">명령줄 도구 <ph id="ph1">`aspnet_compiler`</ph> 사용 하 여 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManager" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManager" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)">
          <source>The virtual path to the application root.</source>
          <target state="translated">응용 프로그램 루트의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)">
          <source>The physical path to the application root.</source>
          <target state="translated">응용 프로그램 루트의 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManager" /&gt;</ph> class without a specified target directory or precompilation flags.</source>
          <target state="translated">지정된 대상 디렉터리나 미리 컴파일 플래그를 사용하지 않고 <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManager" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)">
          <source>The virtual path to the application root.</source>
          <target state="translated">응용 프로그램 루트의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)">
          <source>The physical path to the application root.</source>
          <target state="translated">응용 프로그램 루트의 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)">
          <source>The target directory for precompilation.</source>
          <target state="translated">미리 컴파일을 위한 대상 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManager" /&gt;</ph> class with the specified target directory.</source>
          <target state="translated">지정된 대상 디렉터리를 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManager" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)">
          <source>This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.</source>
          <target state="translated">이 형식의 생성자가 미리 컴파일 대상 디렉터리를 지정 하므로 일반적으로 미리 컴파일에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)">
          <source>The virtual path to the application root.</source>
          <target state="translated">응용 프로그램 루트의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)">
          <source>The physical path to the application root.</source>
          <target state="translated">응용 프로그램 루트의 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)">
          <source>The target directory for precompilation.</source>
          <target state="translated">미리 컴파일을 위한 대상 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)">
          <source>Values that determine the precompilation behavior.</source>
          <target state="translated">미리 컴파일 동작을 결정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManager" /&gt;</ph> class with the specified target directory and compilation parameter.</source>
          <target state="translated">지정된 대상 디렉터리와 컴파일 매개 변수를 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManager" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)">
          <source>This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.</source>
          <target state="translated">미리 컴파일 대상 디렉터리와 미리 컴파일 플래그를 지정 하므로이 형식의 생성자가 일반적으로 미리 컴파일에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)">
          <source>The virtual path of the application root.</source>
          <target state="translated">응용 프로그램 루트의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)">
          <source>The physical path of the application root.</source>
          <target state="translated">응용 프로그램 루트의 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)">
          <source>The target directory for precompilation.</source>
          <target state="translated">미리 컴파일을 위한 대상 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)">
          <source>Values that determine the precompilation behavior.</source>
          <target state="translated">미리 컴파일 동작을 결정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)">
          <source>The type-description provider to use.</source>
          <target state="translated">사용할 형식 설명 공급자입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)">
          <source>This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio.</source>
          <target state="translated">이 매개 변수는 주로 Visual Studio에서 다중 대상 지정 인프라를 지원하는 데 사용되며,</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)">
          <source>It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.</source>
          <target state="translated">.NET Framework의 특정 버전에 대해 필터링되는 형식에 대한 메타데이터를 검색하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManager" /&gt;</ph> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.</source>
          <target state="translated">지정된 가상 디렉터리, 소스 디렉터리, 대상 디렉터리, 컴파일 매개 변수 및 형식 설명 공급자를 사용하여 <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManager" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="E:System.Web.Compilation.ClientBuildManager.AppDomainShutdown">
          <source>Occurs when an application domain is shut down.</source>
          <target state="translated">응용 프로그램 도메인이 종료될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="E:System.Web.Compilation.ClientBuildManager.AppDomainStarted">
          <source>Occurs when an application domain is started.</source>
          <target state="translated">응용 프로그램 도메인이 시작될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="E:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded">
          <source>Occurs when an application domain is unloaded.</source>
          <target state="translated">응용 프로그램 도메인이 언로드될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Web.Compilation.ClientBuildManager.CodeGenDir">
          <source>Gets the physical path to the directory used for code generation.</source>
          <target state="translated">코드 생성에 사용된 디렉터리에 대한 실제 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManager.CodeGenDir">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the directory path used for code generation.</source>
          <target state="translated">코드 생성에 사용된 디렉터리 경로가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManager.CodeGenDir">
          <source>The directory for code generation is typically in the temporary ASP.NET files directory.</source>
          <target state="translated">코드 생성에 대 한 디렉터리는 일반적으로 임시 ASP.NET 파일 디렉터리에 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies">
          <source>Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.</source>
          <target state="translated">App_Code 디렉터리의 파일, Global.asax 파일, 리소스 파일 및 웹 참조 같은 응용 프로그램 종속 파일을 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A&gt;</ph> method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A&gt;</ph> 메서드를 사용 하면 리소스, 웹 참조, App_Code 디렉터리에 파일, App_Browsers 디렉터리에 있는 브라우저 파일 및 Global.asax 파일은 컴파일됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>Compiles the file represented by the virtual path.</source>
          <target state="translated">가상 경로로 나타낸 파일을 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String)">
          <source>The path to the file to be compiled.</source>
          <target state="translated">컴파일할 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String)">
          <source>Compiles the file represented by the virtual path.</source>
          <target state="translated">가상 경로로 나타낸 파일을 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)">
          <source>The path to the file to be compiled.</source>
          <target state="translated">컴파일할 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)">
          <source>The object to receive status information from compilation.</source>
          <target state="translated">컴파일 상태 정보를 받을 개체입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)">
          <source>Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.</source>
          <target state="translated">가상 경로로 나타낸 파일을 컴파일하고 빌드에 대한 상태 정보를 받을 콜백 클래스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)">
          <source><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)">
          <source>The type of object to be created.</source>
          <target state="translated">만들 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ASP.NET 런타임의 응용 프로그램 도메인에 개체가 이미 만들어졌으면 예외를 throw하기 위한 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)">
          <source>Creates an object in the application domain of the ASP.NET runtime.</source>
          <target state="translated">ASP.NET 런타임의 응용 프로그램 도메인에 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)">
          <source>An object in the application domain of the ASP.NET runtime.</source>
          <target state="translated">ASP.NET 런타임의 응용 프로그램 도메인에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)">
          <source>The object already exists in the application domain and <ph id="ph1">&lt;paramref name="failIfExists" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">개체가 응용 프로그램 도메인에 이미 있고 <ph id="ph1">&lt;paramref name="failIfExists" /&gt;</ph>가 <ph id="ph2">&lt;see langword="true" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)">
          <source>The virtual path to the file.</source>
          <target state="translated">파일의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)">
          <source>The contents of the file.</source>
          <target state="translated">파일 내용입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">이 메서드가 반환하면 줄 pragma의 사전을 포함합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)">
          <source>Generates code from the contents of a file.</source>
          <target state="translated">파일 내용에서 코드를 생성합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the generated code.</source>
          <target state="translated">생성된 코드가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)">
          <source><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</source>
          <target state="translated">가상 경로로 나타낸 파일의 codeDOM 트리, 컴파일러 형식 및 컴파일러 매개 변수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>The virtual path to the file.</source>
          <target state="translated">파일의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>When this method returns, contains the codeDOM provider type used for code generation and compilation.</source>
          <target state="translated">이 메서드가 반환하면 코드 생성 및 컴파일에 사용된 codeDOM 공급자 형식을 포함합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">이 메서드가 반환하면 파일 컴파일 방법을 정의하는 속성을 포함합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">이 메서드가 반환하면 줄 pragma의 사전을 포함합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</source>
          <target state="translated">가상 경로로 나타낸 파일의 codeDOM 트리, 컴파일러 형식 및 컴파일러 매개 변수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> for the given file.</source>
          <target state="translated">지정된 파일의 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A&gt;</ph> method retrieves information needed to compile a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A&gt;</ph> 메서드는 파일을 컴파일하는 데 필요한 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>In addition to a <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> object as a return value, it returns three <ph id="ph2">`out`</ph> parameters.</source>
          <target state="translated">이외에 <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> 개체를 반환 값으로 3 개 반환 <ph id="ph2">`out`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the file.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph> 매개 변수 생성 및 컴파일 파일에 대 한 공급자 유형을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph> 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>The <ph id="ph1">`linePragmasTable`</ph> parameter contains a dictionary of line pragmas.</source>
          <target state="translated"><ph id="ph1">`linePragmasTable`</ph> 매개 변수 줄 pragma의 사전이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>The virtual path to the file.</source>
          <target state="translated">파일의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>The contents of the file represented by the <bpt id="p1">&lt;c&gt;</bpt>virtualPath<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>virtualPath<ept id="p1">&lt;/c&gt;</ept> 매개 변수로 나타낸 파일의 내용입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>When this method returns, contains the codeDOM provider type used for code generation and compilation.</source>
          <target state="translated">이 메서드가 반환하면 코드 생성 및 컴파일에 사용된 codeDOM 공급자 형식을 포함합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>When this method returns, contains the properties that define how the file represented by the <bpt id="p1">&lt;c&gt;</bpt>virtualPath<ept id="p1">&lt;/c&gt;</ept> parameter will be compiled.</source>
          <target state="translated">이 메서드가 반환하면 <bpt id="p1">&lt;c&gt;</bpt>virtualPath<ept id="p1">&lt;/c&gt;</ept> 매개 변수로 나타낸 파일의 방법을 정의하는 속성을 포함합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>When this method returns, contains a dictionary of line pragmas.</source>
          <target state="translated">이 메서드가 반환하면 줄 pragma의 사전을 포함합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</source>
          <target state="translated">가상 경로로 나타낸 파일의 내용, codeDOM 트리, 컴파일러 형식 및 컴파일러 매개 변수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> for the given file.</source>
          <target state="translated">지정된 파일의 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A&gt;</ph> method retrieves information needed to compile a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A&gt;</ph> 메서드는 파일을 컴파일하는 데 필요한 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>In addition to a <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> object as a return value, it returns three <ph id="ph2">`out`</ph> parameters.</source>
          <target state="translated">이외에 <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> 개체를 반환 값으로 3 개 반환 <ph id="ph2">`out`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the file.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph> 매개 변수 생성 및 컴파일 파일에 대 한 공급자 유형을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph> 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source>The <ph id="ph1">`linePragmasTable`</ph> parameter contains a dictionary of line pragmas.</source>
          <target state="translated"><ph id="ph1">`linePragmasTable`</ph> 매개 변수 줄 pragma의 사전이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)">
          <source><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories">
          <source>Gets the directories with files that, when changed, cause the application domain to shut down.</source>
          <target state="translated">변경 시 응용 프로그램 도메인 종료를 유발하는 파일이 있는 디렉터리를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array containing the top-level directory names.</source>
          <target state="translated">최상위 디렉터리 이름이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories">
          <source>Changes to files in specific top-level directories cause the application domain to shut down.</source>
          <target state="translated">특정 최상위 디렉터리에 파일 변경이 응용 프로그램 도메인이 종료 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories">
          <source>Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes.</source>
          <target state="translated">변경 내용을 검색 하는 Bin, App_Code, Global_Resources, 웹 참조 및 App_Browsers 디렉터리 내의 파일 모니터링 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories">
          <source>When changes are detected, the application domain is shut down.</source>
          <target state="translated">변경 내용이 검색 되 면 응용 프로그램 도메인이 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions">
          <source>Gets a collection of browser elements.</source>
          <target state="translated">브라우저 요소의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> containing browser elements.</source>
          <target state="translated">브라우저 요소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> object contains browser names for the keys and <ph id="ph2">&lt;xref:System.Web.UI.Triplet&gt;</ph> objects for the values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> 개체의 키에 대 한 브라우저 이름이 포함 및 <ph id="ph2">&lt;xref:System.Web.UI.Triplet&gt;</ph> 값에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Triplet&gt;</ph> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Triplet&gt;</ph> 각 개체에는 부모 브라우저 요소, 설명 및 브라우저 요소 트리의 깊이의 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)">
          <source>The directory about which to retrieve information.</source>
          <target state="translated">해당 정보를 검색할 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)">
          <source>When this method returns, contains the provider type used for code generation and compilation.</source>
          <target state="translated">이 메서드가 반환하면 코드 생성 및 컴파일에 사용된 공급자 형식을 포함합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">이 메서드가 반환하면 파일 컴파일 방법을 정의하는 속성을 포함합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)">
          <source>When this method returns, contains the directory for files generated from non-code files.</source>
          <target state="translated">이 메서드가 반환하면 비코드 파일에서 생성된 파일에 대한 디렉터리를 포함합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)">
          <source>Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.</source>
          <target state="translated">컴파일 유형, 컴파일러 매개 변수 및 .wsdl 파일 같은 비코드 파일에서 생성된 코드 파일을 저장할 디렉터리에 대한 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A&gt;</ph> method retrieves information needed to build a code directory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A&gt;</ph> 메서드 코드 디렉터리를 만드는 데 필요한 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)">
          <source>It returns this information through three <ph id="ph1">`out`</ph> parameters.</source>
          <target state="translated">이 정보를 통해 3 개 반환 <ph id="ph1">`out`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)">
          <source>The <ph id="ph1">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the files in the code directory.</source>
          <target state="translated"><ph id="ph1">`codeDomProviderType`</ph> 매개 변수를 생성 하 고 코드 디렉터리에 파일을 컴파일하여 공급자 유형을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)">
          <source>The <ph id="ph1">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.</source>
          <target state="translated"><ph id="ph1">`compilerParameters`</ph> 매개 변수에 컴파일 동작을 결정 하는 속성을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)">
          <source>The <ph id="ph1">`generatedFilesDir`</ph> parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.</source>
          <target state="translated"><ph id="ph1">`generatedFilesDir`</ph> .wsdl 파일 등 코드 디렉터리에 비 코드 파일에서 생성 된 모든 코드 파일이 포함 된 디렉터리 경로 저장 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)">
          <source><ph id="ph1">&lt;paramref name="virtualCodeDir" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="virtualCodeDir" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)">
          <source>The virtual path of the file to compile.</source>
          <target state="translated">컴파일할 파일의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)">
          <source>Compiles the file represented by the virtual path and returns its compiled type.</source>
          <target state="translated">가상 경로로 나타낸 파일을 컴파일하고 컴파일된 형식을 반환합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the compiled file.</source>
          <target state="translated">컴파일한 파일의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)">
          <source><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)">
          <source>The virtual path to the file.</source>
          <target state="translated">파일의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)">
          <source>When this method returns, contains the provider type used for code generation and compilation.</source>
          <target state="translated">이 메서드가 반환하면 코드 생성 및 컴파일에 사용된 공급자 형식을 포함합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)">
          <source>When this method returns, contains the properties that define how the file will be compiled.</source>
          <target state="translated">이 메서드가 반환하면 파일 컴파일 방법을 정의하는 속성을 포함합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)">
          <source>Returns the compiler type and parameters that are used to build a file represented by a virtual path.</source>
          <target state="translated">가상 경로로 나타낸 파일을 빌드하는 데 사용되는 컴파일러 형식 및 매개 변수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)">
          <source><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)">
          <source>The full physical path to a generated file.</source>
          <target state="translated">생성된 파일에 대한 전체 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)">
          <source>Returns the virtual path of a generated file.</source>
          <target state="translated">생성된 파일의 가상 경로를 반환합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the virtual path for <ph id="ph2">&lt;paramref name="filePath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="filePath" /&gt;</ph>에 대한 가상 경로가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)">
          <source><ph id="ph1">&lt;paramref name="filePath" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="filePath" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)">
          <source>The virtual path of the file to retrieve.</source>
          <target state="translated">검색할 파일의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)">
          <source>Gets the physical path to the generated file for a virtual path.</source>
          <target state="translated">가상 경로에 대해 생성된 파일의 실제 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the physical path to the generated file.</source>
          <target state="translated">생성된 파일의 실제 경로가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)">
          <source><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)">
          <source>The configuration name and path.</source>
          <target state="translated">구성 이름 및 경로입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)">
          <source>Returns an array of the assemblies defined in the Bin directory and the <ph id="ph1">&lt;see langword="&amp;lt;assembly&amp;gt;" /&gt;</ph> section of the Web configuration file.</source>
          <target state="translated">Bin 디렉터리 및 웹 구성 파일의 <ph id="ph1">&lt;see langword="&amp;lt;assembly&amp;gt;" /&gt;</ph> 섹션에 정의된 어셈블리의 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array containing paths to code bases in the Bin directory and the <ph id="ph2">&lt;see langword="&amp;lt;assembly&amp;gt;" /&gt;</ph> section of the Web configuration file.</source>
          <target state="translated">Bin 디렉터리 및 웹 구성 파일의 <ph id="ph2">&lt;see langword="&amp;lt;assembly&amp;gt;" /&gt;</ph> 섹션에 있는 코드베이스에 대한 경로가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)">
          <source><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories">
          <source>Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.</source>
          <target state="translated">ASP.NET 응용 프로그램의 App_Code 디렉터리 및 해당 하위 디렉터리에 대한 가상 경로를 반환합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array containing all the virtual paths to code directories in an application.</source>
          <target state="translated">응용 프로그램의 코드 디렉터리에 대한 모든 가상 경로가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService">
          <source>Gives the application domain an infinite lifetime by preventing a lease from being created.</source>
          <target state="translated">임대가 만들어지는 것을 방지하여 응용 프로그램 도메인에 영구 수명을 제공합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService">
          <source>Always <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;</ph> method in its base class.</source>
          <target state="translated">이 메서드를 재정의 <ph id="ph1">&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;</ph> 메서드는 기본 클래스에 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService">
          <source>It always returns <ph id="ph1">`null`</ph> and thereby prevents a lease from being created that would limit the application domain's lifetime.</source>
          <target state="translated">액세스할 수 있으려면 <ph id="ph1">`null`</ph> 및 응용 프로그램 도메인의 수명을 제한 하는 임대가 만들어지지 않도록 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)">
          <source>The name of the assembly to be identified as a code assembly.</source>
          <target state="translated">코드 어셈블리로 식별할 어셈블리의 이름입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)">
          <source>Indicates whether an assembly is a code assembly.</source>
          <target state="translated">코드 어셈블리인지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> parameter matches one of the generated code assemblies; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="assemblyName" /&gt;</ph> 매개 변수가 생성된 코드 어셈블리 중 하나와 일치하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Web.Compilation.ClientBuildManager.IsHostCreated">
          <source>Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.</source>
          <target state="translated">ASP.NET 웹 응용 프로그램 컴파일을 위한 응용 프로그램 도메인이 만들어졌는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Compilation.ClientBuildManager.IsHostCreated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the application domain for compiling ASP.NET Web applications has been created; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ASP.NET 웹 응용 프로그램 컴파일을 위한 응용 프로그램 도메인이 만들어졌으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>Precompiles an ASP.NET application.</source>
          <target state="translated">ASP.NET 응용 프로그램을 미리 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">다른 두 가지 미리 컴파일 배포에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>The application to precompile is defined through the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> constructor.</source>
          <target state="translated">미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object of the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> 의 개체는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> 생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.ClientBuildManager">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</ph> method.</source>
          <target state="translated">개발자는 웹 사이트를 미리 컴파일할 수는 <ph id="ph1">`aspnet_compiler`</ph> 명령줄 도구 또는 호출 하 여는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>Precompiles an ASP.NET application.</source>
          <target state="translated">ASP.NET 응용 프로그램을 미리 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">다른 두 가지 미리 컴파일 배포에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>The application to precompile is defined through the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> constructor.</source>
          <target state="translated">미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object of the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> 의 개체는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> 생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</ph> method.</source>
          <target state="translated">개발자는 웹 사이트를 미리 컴파일할 수는 <ph id="ph1">`aspnet_compiler`</ph> 명령줄 도구 또는 호출 하 여는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /&gt;</ph> containing the method to call when reporting the result of compilation.</source>
          <target state="translated">컴파일 결과를 보고할 때 호출할 메서드가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>Precompiles an ASP.NET application and provides a callback method to receive status information about the build.</source>
          <target state="translated">ASP.NET 응용 프로그램을 미리 컴파일하고 빌드에 대한 상태 정보를 받을 콜백 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>The <ph id="ph1">`callback`</ph> parameter contains the method to call when reporting the result of compilation.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> 매개 변수에는 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">다른 두 가지 미리 컴파일 배포에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>The application to precompile is defined through the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> constructor.</source>
          <target state="translated">미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object of the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> 의 개체는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> 생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</ph> method.</source>
          <target state="translated">개발자는 웹 사이트를 미리 컴파일할 수는 <ph id="ph1">`aspnet_compiler`</ph> 명령줄 도구 또는 호출 하 여는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /&gt;</ph> containing the method to call when reporting the result of compilation.</source>
          <target state="translated">컴파일 결과를 보고할 때 호출할 메서드가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform a clean build, which will first delete all object and intermediate files; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to rebuild only those files that have changed.</source>
          <target state="translated">먼저 모든 개체와 중간 파일을 삭제하는 정리 빌드를 수행하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 변경된 파일만 다시 빌드하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>Set to true if there is a chance that a dependency might not be picked up by the build environment.</source>
          <target state="translated">빌드 환경에서 종속 파일을 선택하지 못할 가능성이 있으면 true로 설정합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.</source>
          <target state="translated">ASP.NET 응용 프로그램을 미리 컴파일하고, 빌드에 대한 상태 정보를 받을 콜백 메서드를 제공하고, 정리 빌드를 만들지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>ASP.NET supports three forms of precompilation.</source>
          <target state="translated">ASP.NET에는 세 가지 형태의 미리 컴파일 지원합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>One form allows for the in-place precompilation of an ASP.NET application.</source>
          <target state="translated">한 가지 형태 ASP.NET 응용 프로그램의 내부에 미리 컴파일 허용합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</source>
          <target state="translated">이 폼에서 사이트는 프로덕션 환경에 배포한을 다음 미리 컴파일된 동적으로 사용자가 먼저 방문 되는 경우 사이트를 컴파일할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</source>
          <target state="translated">사이트의 첫 번째 사용자는 일반적으로 동적으로 컴파일되는 사이트에서 발생 하는 지연을 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>The <ph id="ph1">`callback`</ph> parameter contains the method to call when reporting the result of compilation.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> 매개 변수에는 컴파일 결과 보고할 때 호출할 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>The two other forms of precompilation are used for deployment.</source>
          <target state="translated">다른 두 가지 미리 컴파일 배포에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>In either form, a layout of the site is generated that can be deployed to a production computer.</source>
          <target state="translated">사이트의 레이아웃 형식을 사용할 경우 생성 되는 프로덕션 컴퓨터에 배포할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</source>
          <target state="translated">이러한 형식 중 하나로 컴파일된 사이트에서 수행할 수 없습니다 어느 정도의 업데이트 태그 페이지가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</source>
          <target state="translated">다른 폼에 태그 페이지는 없으며 원래 사이트를 다시 컴파일하지 않고 업데이트할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>No source code is deployed to the target environment in either of these forms of precompilation.</source>
          <target state="translated">소스 코드가 없습니다 미리 컴파일 이러한 형식 중 대상 환경에 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>The application to precompile is defined through the <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> constructor.</source>
          <target state="translated">미리 컴파일할 응용 프로그램을 통해 정의 됩니다는 <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object of the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> constructor defines which of the three forms of precompilation to perform.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> 의 개체는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> 생성자 미리 컴파일 수행 하는 세 가지 형식 중 어느를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)">
          <source>A developer can precompile a Web site with the <ph id="ph1">`aspnet_compiler`</ph> command-line tool or by calling the <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</ph> method.</source>
          <target state="translated">개발자는 웹 사이트를 미리 컴파일할 수는 <ph id="ph1">`aspnet_compiler`</ph> 명령줄 도구 또는 호출 하 여는 <ph id="ph2">&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose">
          <source>Terminates the current ASP.NET application.</source>
          <target state="translated">현재 ASP.NET 응용 프로그램을 종료합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.Unload">
          <source>Unloads the application domain for compiling ASP.NET Web applications.</source>
          <target state="translated">ASP.NET 웹 응용 프로그램 컴파일을 위한 응용 프로그램 도메인을 언로드합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.ClientBuildManager.Unload">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the application domain is unloaded; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">응용 프로그램 도메인이 언로드되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>