<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IAssemblyPostProcessor.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ffd3a317707e04d0b4ea7c0827b8fd6ce46fff3f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffd3a317707e04d0b4ea7c0827b8fd6ce46fff3f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>Defines the method a class implements to process an assembly after the assembly has been built.</source>
          <target state="translated">어셈블리가 빌드된 후에 어셈블리 처리를 위해 클래스가 구현하는 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>A class implementing this interface can access an assembly after it has been compiled.</source>
          <target state="translated">이 인터페이스를 구현 하는 클래스에 컴파일된 후 어셈블리를 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;</ph> class compiles assemblies and then checks to see whether an <ph id="ph2">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> interface has been registered in the Web configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;</ph> 클래스 어셈블리를 컴파일하고 확인 하는 다음 여부는 <ph id="ph2">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> 인터페이스 웹 구성 파일에 등록 된 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;</ph> instance calls the <ph id="ph2">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A&gt;</ph> method for the <ph id="ph3">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> interface to perform any action after the compilation and before loading the assembly.</source>
          <target state="translated">이 경우는 <ph id="ph1">&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;</ph> 호출 인스턴스는 <ph id="ph2">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A&gt;</ph> 에 대 한 메서드는 <ph id="ph3">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> 인터페이스 컴파일한 후 및 어셈블리를 로드 하기 전에 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>For example, a profiler tool could implement this interface to establish probes in the assembly.</source>
          <target state="translated">예를 들어 프로파일러 도구는이 인터페이스는 어셈블리에 검색을 설정할 구현 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>When an <ph id="ph1">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> interface is registered, the ASP.NET application and its assemblies will always be compiled in debug mode.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> 인터페이스가 등록 되어, ASP.NET 응용 프로그램 및 해당 어셈블리는 항상 되어야 디버그 모드에서 컴파일된 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>The following code example demonstrates how to create an implementation of the <ph id="ph1">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> interface, and register it in the Web.config file of a Web application.</source>
          <target state="translated">다음 코드 예제에서는의 구현을 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> , 인터페이스 및 웹 응용 프로그램의 Web.config 파일에 등록 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>The first part of the code example creates a class named <ph id="ph1">`Samples.Process.postProcessTest`</ph> that implements the <ph id="ph2">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> interface.</source>
          <target state="translated">코드 예제에서는 첫 번째 부분은 라는 클래스를 만들고 <ph id="ph1">`Samples.Process.postProcessTest`</ph> 구현 하는 <ph id="ph2">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>This class performs the simple action of writing a file when the <ph id="ph1">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A&gt;</ph> method is called.</source>
          <target state="translated">이 클래스는 파일을 쓰는 간단한 작업을 수행 하면는 <ph id="ph1">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>Compile the class into a .dll file with the command <ph id="ph1">`csc /target:library postProcessTest.cs`</ph>.</source>
          <target state="translated">클래스를 컴파일하여 명령 사용 하 여.dll 파일 <ph id="ph1">`csc /target:library postProcessTest.cs`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.</source>
          <target state="translated">ASP.NET 응용 프로그램의 Bin 폴더에 있는 결과.dll 파일을 추가 하 고 다음 코드 에서처럼 Web.config 파일에.dll을 등록 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Compilation.IAssemblyPostProcessor">
          <source>When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\compile.</source>
          <target state="translated">사용자 웹 사이트를 방문 하는 경우 웹 응용 프로그램 동적으로 컴파일되고 파일 C:\compile에 MyTest.txt 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)">
          <source>The path to the assembly.</source>
          <target state="translated">어셈블리에 대한 경로입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)">
          <source>Called before the assembly is loaded to allow the implementing class to modify the assembly.</source>
          <target state="translated">어셈블리가 로드되기 전에 호출되어 구현 클래스를 통해 어셈블리를 수정할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;</ph> class calls this method after the assembly has been compiled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Compilation.AssemblyBuilder&gt;</ph> 클래스는 어셈블리를 편집한 후이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)">
          <source>Any actions to be taken before loading the assembly should be included in this method.</source>
          <target state="translated">이 메서드에서 어셈블리를 로드 하기 전에 수행할 작업 포함 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)">
          <source>The following code example demonstrates how to create an implementation of the <ph id="ph1">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> interface, and register it in the Web.config file of a Web application.</source>
          <target state="translated">다음 코드 예제에서는의 구현을 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> , 인터페이스 및 웹 응용 프로그램의 Web.config 파일에 등록 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)">
          <source>The first part of the code example creates a class named <ph id="ph1">`Samples.Process.postProcessTest`</ph> that implements the <ph id="ph2">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> interface.</source>
          <target state="translated">코드 예제에서는 첫 번째 부분은 라는 클래스를 만들고 <ph id="ph1">`Samples.Process.postProcessTest`</ph> 구현 하는 <ph id="ph2">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)">
          <source>This class performs the simple action of writing a file when the <ph id="ph1">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A&gt;</ph> method is called.</source>
          <target state="translated">이 클래스는 파일을 쓰는 간단한 작업을 수행 하면는 <ph id="ph1">&lt;xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)">
          <source>Compile the class into a .dll file with the command <ph id="ph1">`csc /target:library postProcessTest.cs`</ph>.</source>
          <target state="translated">클래스를 컴파일하여 명령 사용 하 여.dll 파일 <ph id="ph1">`csc /target:library postProcessTest.cs`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)">
          <source>Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.</source>
          <target state="translated">ASP.NET 응용 프로그램의 Bin 폴더에 있는 결과.dll 파일을 추가 하 고 다음 코드 에서처럼 Web.config 파일에.dll을 등록 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)">
          <source>When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\compile.</source>
          <target state="translated">사용자 웹 사이트를 방문 하는 경우 웹 응용 프로그램 동적으로 컴파일되고 파일 C:\compile에 MyTest.txt 기록 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>