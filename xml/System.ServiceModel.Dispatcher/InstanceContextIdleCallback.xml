<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InstanceContextIdleCallback.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ac89fe1685f8bbdf46064dfbdafe3e39a0ec19d8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac89fe1685f8bbdf46064dfbdafe3e39a0ec19d8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback">
          <source>The instance context that has finished processing.</source>
          <target state="translated">처리를 마친 인스턴스 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback">
          <source>Represents the method that is called when an <ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object has finished processing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 개체가 처리를 마칠 때 호출되는 메서드를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback">
          <source>Use an <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph> to notify the <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> runtime that an <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph> object has finished processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph> 런타임에 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 개체가 처리를 마쳤음을 알리려면 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph>을 사용합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph> object notifies the runtime that the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph> has finished its work, <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> calls <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=nameWithType&gt;</ph> once again.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph> 개체가 런타임에 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback&gt;</ph>의 작업 완료를 알리면 <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>에서 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=nameWithType&gt;</ph>을 다시 한 번 호출합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback">
          <source>This cycle continues until <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=nameWithType&gt;</ph> returns <ph id="ph2">`true`</ph> and the context is closed and recycled.</source>
          <target state="translated">이 주기는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A?displayProperty=nameWithType&gt;</ph>이 <ph id="ph2">`true`</ph>를 반환하고 컨텍스트가 닫힌 다음 주기가 다시 시작될 때까지 계속됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A&gt;</ph>을 참조하세요.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>