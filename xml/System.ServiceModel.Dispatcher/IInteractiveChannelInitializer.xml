<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IInteractiveChannelInitializer.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e764d8c47caf6ddf0e2748dedaba492a73bc67b1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e764d8c47caf6ddf0e2748dedaba492a73bc67b1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>Defines the methods that enable a client application to display a user interface to collect identity information prior to creating the channel.</source>
          <target state="translated">클라이언트 응용 프로그램에서 채널을 만들기 전에 사용자 인터페이스를 표시하여 ID 정보를 수집할 수 있게 해주는 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph> interface to enable a client application to display a user interface that enables the user of the application to create or select the credentials prior to opening a channel.</source>
          <target state="translated">채널을 열기 전에 응용 프로그램 사용자가 자격 증명을 만들거나 선택할 수 있는 사용자 인터페이스를 클라이언트 응용 프로그램에서 표시하게 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph> 인터페이스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>To implement <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>, perform the following steps in <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>를 구현하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph>에서 다음 단계를 수행합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>Prompt the user and obtain an appropriate <ph id="ph1">&lt;xref:System.Net.NetworkCredential?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">사용자에게 프롬프트를 표시하고 적절한 <ph id="ph1">&lt;xref:System.Net.NetworkCredential?displayProperty=nameWithType&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>Add a custom channel parameter object to the collection returned by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method on the <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> object with a type parameter of <ph id="ph3">&lt;xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType&gt;</ph> 형식의 매개 변수를 사용하여 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> 개체에서 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType&gt;</ph> 메서드에 의해 반환되는 컬렉션에 사용자 지정 채널 매개 변수 개체를 추가합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>This channel parameter object is used by the custom <ph id="ph1">&lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType&gt;</ph> to establish the security tokens for the channel.</source>
          <target state="translated">이 채널 매개 변수 개체는 사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType&gt;</ph>가 채널에 대한 보안 토큰을 설정하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>Return.</source>
          <target state="translated">반환합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>To insert <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>를 삽입하려면 다음을 수행합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType&gt;</ph> method on the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType&gt;</ph> 클래스에서 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType&gt;</ph> 메서드를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>In that method, determine whether the endpoint requires an <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph> and if so, add the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph> to the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType&gt;</ph> collection.</source>
          <target state="translated">이 메서드에서 끝점에 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>가 필요한지 여부를 확인하고, 필요한 경우 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph> 컬렉션에 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType&gt;</ph>를 추가합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>There are two ways application developers can make use of an inserted <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>.</source>
          <target state="translated">응용 프로그램 개발자는 삽입된 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>를 두 가지 방법으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>The client application can call either <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph> (or an asynchronous version) prior to opening the channel (the <bpt id="p1">*</bpt>explicit<ept id="p1">*</ept> approach) or simply call the first operation (the <bpt id="p2">*</bpt>implicit<ept id="p2">*</ept> approach).</source>
          <target state="translated">클라이언트 응용 프로그램 중 하나를 호출할 수 <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph> (또는 비동기 버전)는 채널을 열기 전에 (의 <bpt id="p1">*</bpt>명시적<ept id="p1">*</ept> 접근 방식) 첫 번째 작업을 호출 하거나 (의 <bpt id="p2">*</bpt>암시적<ept id="p2">*</ept> 접근 방식).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>If using the implicit approach, the application must call the first operation on an <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> extension.</source>
          <target state="translated">암시적 방법을 사용하는 경우 응용 프로그램은 <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> 확장에서 첫 번째 작업을 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>If it calls anything other than the first operation, an exception is thrown.</source>
          <target state="translated">다른 작업을 호출하면 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>If using the explicit approach, the application must perform the following steps in order:</source>
          <target state="translated">명시적 방법을 사용하는 경우 응용 프로그램은 다음 단계를 순서대로 수행해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>Call either <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph> (or an asynchronous version).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph>(또는 비동기 버전)를 호출합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>When the initializers have returned, call either the <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> object or on the <ph id="ph3">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> object returned from the <ph id="ph4">&lt;xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이니셜라이저가 반환되면 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A&gt;</ph> 개체 또는 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> 속성에서 반환된 <ph id="ph3">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> 개체에서 <ph id="ph4">&lt;xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>Call operations.</source>
          <target state="translated">작업을 호출합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>It is recommended that production-quality applications control of the user-interface process by adopting the explicit approach.</source>
          <target state="translated">프로덕션 품질 응용 프로그램에서는 명시적 방법을 사용하여 사용자 인터페이스 프로세스를 제어하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
          <source>Applications that use the implicit approach invoke the user-interface initializers, but if the user of the application fails to respond within the send timeout period of the binding, an exception is thrown when the user interface returns.</source>
          <target state="translated">암시적 방법을 사용하는 응용 프로그램은 사용자 인터페이스 이니셜라이저를 호출하지만, 응용 프로그램 사용자가 바인딩에 대한 전송 시간 제한 내에 응답하지 않을 경우 사용자 인터페이스가 반환될 때 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
          <source>The client channel.</source>
          <target state="translated">클라이언트 채널입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
          <source>The callback object.</source>
          <target state="translated">콜백 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
          <source>Any state data.</source>
          <target state="translated">상태 데이터입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
          <source>An asynchronous call to begin using a user interface to obtain credential information.</source>
          <target state="translated">자격 증명 정보를 얻기 위해 사용자 인터페이스를 사용하여 시작할 비동기 호출입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> to use to call back when processing has completed.</source>
          <target state="translated">처리가 완료되면 콜백하는 데 사용할 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
          <source>To implement <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>, perform the following steps in <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph>:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ph>를 구현하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType&gt;</ph>에서 다음 단계를 수행합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
          <source>Prompt the user in what way you see fit and obtain an appropriate <ph id="ph1">&lt;xref:System.Net.NetworkCredential?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">적합한 방식으로 사용자에게 프롬프트를 표시하고 적절한 <ph id="ph1">&lt;xref:System.Net.NetworkCredential?displayProperty=nameWithType&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
          <source>Add a custom channel parameter object to the collection returned by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType&gt;</ph> method on the <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> object with a type parameter of <ph id="ph3">&lt;xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType&gt;</ph> 형식의 매개 변수를 사용하여 <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> 개체에서 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType&gt;</ph> 메서드에 의해 반환되는 컬렉션에 사용자 지정 채널 매개 변수 개체를 추가합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
          <source>This channel parameter object is used by the custom <ph id="ph1">&lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType&gt;</ph> to establish the security tokens for the channel.</source>
          <target state="translated">이 채널 매개 변수 개체는 사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType&gt;</ph>가 채널에 대한 보안 토큰을 설정하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
          <source>Return.</source>
          <target state="translated">반환합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)">
          <source>Called when the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /&gt;</ph> has finished.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /&gt;</ph>가 완료되면 호출됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>