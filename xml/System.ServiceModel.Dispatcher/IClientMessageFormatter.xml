<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IClientMessageFormatter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b720b0fef290854a6a12c25685346d95412242cffa1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b0fef290854a6a12c25685346d95412242cffa1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
          <source>Defines methods that are used to control the conversion of messages into objects and objects into messages for client applications.</source>
          <target state="translated">클라이언트 응용 프로그램에 대해 메시지를 개체로 변환하고, 개체를 메시지로 변환하는 과정을 제어하는 데 사용되는 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> interface to create a custom client formatter that serializes objects into messages and deserializes messages into objects for a particular operation.</source>
          <target state="translated">특정 작업에 대해 개체를 메시지로 serialize하고, 메시지를 개체로 deserialize하는 사용자 지정 클라이언트 포맷터를 만들려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> 인터페이스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
          <source>Attach custom <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client formatters to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Formatter%2A&gt;</ph> property to handle this conversion explicitly.</source>
          <target state="translated">이 변환을 명시적으로 처리하려면 사용자 지정 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 클라이언트 포맷터를 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Formatter%2A&gt;</ph> 속성에 연결합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
          <source>The inbound message.</source>
          <target state="translated">인바운드 메시지입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
          <source>Any <ph id="ph1">&lt;see langword="out" /&gt;</ph> values.</source>
          <target state="translated">임의의 <ph id="ph1">&lt;see langword="out" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
          <source>Converts a message into a return value and <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameters that are passed back to the calling operation.</source>
          <target state="translated">호출하는 작업에 다시 전달되는 반환 값 및 <ph id="ph1">&lt;see langword="out" /&gt;</ph> 매개 변수로 메시지를 변환합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
          <source>The return value of the operation.</source>
          <target state="translated">작업 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
          <source>Called after a reply message is received.</source>
          <target state="translated">회신 메시지가 수신된 후에 호출됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
          <source>Implement to convert the reply message into a return value (and any <ph id="ph1">`out`</ph> parameters) that is returned to the calling application.</source>
          <target state="translated">호출하는 응용 프로그램에 반환되는 반환 값(및 <ph id="ph1">`out`</ph> 매개 변수)으로 회신 메시지를 변환하려면 구현합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
          <source>The version of the SOAP message to use.</source>
          <target state="translated">사용할 SOAP 메시지의 버전입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
          <source>The parameters passed to the WCF client operation.</source>
          <target state="translated">WCF 클라이언트 작업에 전달되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
          <source>Converts an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> array into an outbound <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 배열을 아웃바운드 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
          <source>The SOAP message sent to the service operation.</source>
          <target state="translated">서비스 작업에 전송된 SOAP 메시지입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
          <source>Called after an operation is invoked on the client but prior to serializing the outbound message.</source>
          <target state="translated">클라이언트에서 작업이 호출된 후 아웃바운드 메시지를 serialize하기 전에 호출됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
          <source>Implement to convert the parameter objects into the outbound message.</source>
          <target state="translated">매개 변수 개체를 아웃바운드 메시지로 변환하려면 구현합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>