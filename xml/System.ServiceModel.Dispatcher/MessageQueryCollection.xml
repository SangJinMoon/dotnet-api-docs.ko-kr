<Type Name="MessageQueryCollection" FullName="System.ServiceModel.Dispatcher.MessageQueryCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="666e7873afe4137d8159ea25ba80756664d60d6e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36614511" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageQueryCollection : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageQuery&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageQueryCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Dispatcher.MessageQuery&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageQueryCollection&#xA;Inherits Collection(Of MessageQuery)" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueryCollection abstract : System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::MessageQuery ^&gt;" />
  <TypeSignature Language="F#" Value="type MessageQueryCollection = class&#xA;    inherit Collection&lt;MessageQuery&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageQuery&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.ServiceModel.Dispatcher.MessageQuery</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="09d1a-101">메시지 쿼리 개체의 컬렉션입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="09d1a-101">A collection of message query objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09d1a-102">구체적 구현은 <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> 클래스를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="09d1a-102">See the <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> class for a concrete implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09d1a-103">다음 예제에서는 메시지와 XPath 메시지 쿼리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="09d1a-103">The following example creates a message and XPath message queries.</span></span> <span data-ttu-id="09d1a-104">쿼리는 <xref:System.ServiceModel.XPathMessageQuery> 개체에 포함된 <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> 개체를 통해 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="09d1a-104">The queries are evaluated by the <xref:System.ServiceModel.XPathMessageQuery> objects contained in an <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> object.</span></span> <span data-ttu-id="09d1a-105">각 쿼리의 결과는 <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> 클래스의 <xref:System.ServiceModel.Dispatcher.XPathResult> 속성을 사용하여 테스트됩니다.</span><span class="sxs-lookup"><span data-stu-id="09d1a-105">The results of each query are tested using the <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> property of the <xref:System.ServiceModel.Dispatcher.XPathResult> class.</span></span>  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageQueryCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageQueryCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09d1a-106">
            <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Evaluate&lt;TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09d1a-107">메시지에 대해 쿼리를 실행하고 쿼리를 충족하는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-107">Runs a query against the message and returns a value that satisfies the query.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09d1a-108">두 오버로드 간의 차이점은 하나는 <xref:System.ServiceModel.Channels.Message> 매개 변수를 사용하고 본문을 검사할 수 없으며,</span><span class="sxs-lookup"><span data-stu-id="09d1a-108">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the body.</span></span> <span data-ttu-id="09d1a-109">다른 하나는 <xref:System.ServiceModel.Channels.MessageBuffer> 매개 변수를 사용하고 메시지의 모든 부분을 검사할 수 있다는 점입니다.</span><span class="sxs-lookup"><span data-stu-id="09d1a-109">The other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="09d1a-110">메시지 헤더는 자동으로 버퍼링되므로 별도의 사용 없이도 쿼리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="09d1a-110">Message headers are automatically buffered and can be queried without being consumed.</span></span> <span data-ttu-id="09d1a-111">그러나 버퍼링되지 않은 메시지 본문은 쿼리에 사용될 수 있으므로 본문을 쿼리하려면 전체 메시지를 버퍼링해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="09d1a-111">However, if the body is to be queried, then the entire message must be buffered because an unbuffered message body can be consumed by the query.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt; Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !!TResult&gt;&gt; Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TResult&gt;&gt; ^ Evaluate(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.Message -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery, 'Result&gt;&gt;" Usage="messageQueryCollection.Evaluate message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="09d1a-112">쿼리 결과의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-112">The type of the result of the query.</span>
          </span>
        </typeparam>
        <param name="message">
          <span data-ttu-id="09d1a-113">쿼리를 실행할 대상 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-113">The message to run the query against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09d1a-114">메시지에 대해 쿼리를 실행하고 결과를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-114">Runs a query against the message and returns a result.</span>
          </span>
          <span data-ttu-id="09d1a-115">본문은 쿼리할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-115">The body cannot be queried.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09d1a-116">쿼리 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-116">The result of the query.</span>
          </span>
          <span data-ttu-id="09d1a-117">형식은 제네릭 <paramref name="TResult" /> 인수에 의해 결정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-117">The type is determined by the generic <paramref name="TResult" /> argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt; Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !!TResult&gt;&gt; Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Evaluate(Of TResult) (buffer As MessageBuffer) As IEnumerable(Of KeyValuePair(Of MessageQuery, TResult))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TResult&gt;&gt; ^ Evaluate(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.MessageBuffer -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery, 'Result&gt;&gt;" Usage="messageQueryCollection.Evaluate buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="09d1a-118">반환할 개체의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-118">The type of the object to return.</span>
          </span>
        </typeparam>
        <param name="buffer">
          <span data-ttu-id="09d1a-119">쿼리를 실행할 대상 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-119">The message to run the query against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09d1a-120">메시지에 대해 쿼리를 실행하고 결과를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-120">Runs a query against the message and returns a result.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09d1a-121">쿼리 결과입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-121">The result of the query.</span>
          </span>
          <span data-ttu-id="09d1a-122">형식은 제네릭 <paramref name="TResult" /> 인수에 의해 결정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09d1a-122">The type is determined by the generic <paramref name="TResult" /> argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>