<Type Name="JsonQueryStringConverter" FullName="System.ServiceModel.Dispatcher.JsonQueryStringConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25bf3123bc1cc8b7f428223fa8571bf44b586b36" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37455185" /></Metadata><TypeSignature Language="C#" Value="public class JsonQueryStringConverter : System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonQueryStringConverter extends System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonQueryStringConverter&#xA;Inherits QueryStringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonQueryStringConverter : System::ServiceModel::Dispatcher::QueryStringConverter" />
  <TypeSignature Language="F#" Value="type JsonQueryStringConverter = class&#xA;    inherit QueryStringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.QueryStringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4e4bd-101">이 클래스는 매개 변수 값과 JSON(JavaScript Object Notation)을 상호 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-101">This class converts a parameter value to and from a JavaScript Object Notation (JSON).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e4bd-102">URL 내의 JSON 쿼리 문자열에서 매개 변수를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-102">Parameters can be specified in a JSON query string within a URL.</span></span> <span data-ttu-id="4e4bd-103">이 클래스는 <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>를 사용하여 브라우저 기반 ASP.NET AJAX 클라이언트의 HTTP 요청을 처리할 때 JSON 쿼리 문자열 매개 변수가 서비스 작업 매개 변수에 매핑되는 방법을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-103">This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> is used to process HTTP requests from browser-based ASP.NET AJAX clients.</span></span>  
  
 <span data-ttu-id="4e4bd-104">이 클래스는 내부적으로 Windows Communication Foundation (WCF)<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> URI 쿼리 문자열에 인코딩된 매개 변수를 사용 하 여 HTTP GET/POST 요청을 수락 하도록 구성 된 끝점에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-104">This class is used internally by the Windows Communication Foundation (WCF)<xref:System.ServiceModel.Description.WebScriptEnablingBehavior> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string.</span></span> <span data-ttu-id="4e4bd-105">이 클래스는 URI 쿼리 문자열의 개별 작업 요청 매개 변수 값과 CLR 개체를 상호 변환하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-105">This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string.</span></span> <span data-ttu-id="4e4bd-106">기본 형식과 달리 이 클래스는 기본 형식 값과 복합 형식 값을 모두 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-106">Unlike its base type, this class supports values of both primitive and complex types.</span></span>  
  
 <span data-ttu-id="4e4bd-107"><xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter>는 <xref:System.ServiceModel.Dispatcher.QueryStringConverter>에서 파생되며 다음과 같은 형식을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-107"><xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter> derives from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> and supports the following types:</span></span>  
  
-   <xref:System.Byte>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
-   <xref:System.Single>  
  
-   <xref:System.Double>  
  
-   <xref:System.Char>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.String>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.Guid>  
  
-   <span data-ttu-id="4e4bd-108"><xref:System.Array> 형식의 <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="4e4bd-108">An <xref:System.Array> of type <xref:System.Byte></span></span>  
  
-   <xref:System.Uri>  
  
-   <xref:System.Object>  
  
 <span data-ttu-id="4e4bd-109">기본 형식과 달리 이 변환기는 데이터 계약 모델을 따르는 형식을 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-109">Unlike its base type, this converter can handle any type adhering to the Data Contract model.</span></span> <span data-ttu-id="4e4bd-110">변환기는 각 매개 변수가 기본 <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29>를 사용하는 JSON으로 serialize되고 JSON XML 작성기가 UTF-8 인코딩을 사용하도록 구성될 수 있게 <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer>을 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-110">The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding.</span></span> <span data-ttu-id="4e4bd-111">`null` 매개 변수 반환 됩니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-111">`null` parameters are returned as `null`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonQueryStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonQueryStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e4bd-112"><see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public override bool CanConvert (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvert(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvert(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanConvert : Type -&gt; bool" Usage="jsonQueryStringConverter.CanConvert type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4e4bd-113">확인할 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-113">The <see cref="T:System.Type" /> to verify.</span></span></param>
        <summary><span data-ttu-id="4e4bd-114">지정된 CLR(공용 언어 런타임) 형식이 serialize 및 deserialize될 수 있는 알려진 형식인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-114">Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.</span></span></summary>
        <returns><span data-ttu-id="4e4bd-115">형식을 serialize할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-115"><see langword="true" /> if the type can be serialized; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e4bd-116">JSON 쿼리 문자열에서 CLR 형식을 사용할 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-116">This checks whether a CLR type can be used in a JSON query string.</span></span> <span data-ttu-id="4e4bd-117"><xref:System.Runtime.Serialization.DataContractSerializer>에서 지원되는 CLR 형식만 이러한 문자열에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-117">The CLR types that can be used in such a string are just those that are supported by <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e4bd-118"><paramref name="type" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4e4bd-118">The <paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="public override object ConvertStringToValue (string parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertStringToValue(string parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertStringToValue (parameter As String, parameterType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertStringToValue(System::String ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="override this.ConvertStringToValue : string * Type -&gt; obj" Usage="jsonQueryStringConverter.ConvertStringToValue (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="4e4bd-119">매개 변수 값의 JSON 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-119">The JSON form of the parameter value.</span></span></param>
        <param name="parameterType"><span data-ttu-id="4e4bd-120">매개 변수를 deserialize할 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-120">The <see cref="T:System.Type" /> to deserialize the parameter to.</span></span></param>
        <summary><span data-ttu-id="4e4bd-121">JSON(JavaScript Object Notation) 쿼리 문자열 매개 변수를 지정된 CLR(공용 언어 런타임) 형식으로 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-121">Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.</span></span></summary>
        <returns><span data-ttu-id="4e4bd-122">매개 변수 값이 변환된 CLR 형식의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-122">An instance of the CLR type to which the parameter value was converted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="public override string ConvertValueToString (object parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ConvertValueToString(object parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertValueToString (parameter As Object, parameterType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ConvertValueToString(System::Object ^ parameter, Type ^ parameterType);" />
      <MemberSignature Language="F#" Value="override this.ConvertValueToString : obj * Type -&gt; string" Usage="jsonQueryStringConverter.ConvertValueToString (parameter, parameterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="4e4bd-123">변환할 매개 변수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-123">The parameter value to convert.</span></span></param>
        <param name="parameterType"><span data-ttu-id="4e4bd-124">serialize할 매개 변수의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-124">The <see cref="T:System.Type" /> of the parameter to serialize.</span></span></param>
        <summary><span data-ttu-id="4e4bd-125">CLR(공용 언어 런타임) 매개 변수 형식을 JSON(JavaScript Object Notation) 표현으로 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-125">Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.</span></span></summary>
        <returns><span data-ttu-id="4e4bd-126">CLR 형식의 JSON 쿼리 문자열 매개 변수 serialization입니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-126">The JSON query string parameter serialization of the CLR type.</span></span> <span data-ttu-id="4e4bd-127">매개 변수가 <see langword="null" />이면 <see langword="null" />이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-127"><see langword="null" /> is returned if the parameter is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e4bd-128">변환기는 각 매개 변수가 기본 <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29>를 사용하는 JSON으로 serialize되고 JSON XML 작성기가 UTF-8 인코딩을 사용하도록 구성될 수 있게 <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer>을 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-128">The converter overrides <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> so that each parameter is serialized to JSON using the default <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> and a JSON XML Writer configured to use the UTF-8 encoding.</span></span> <span data-ttu-id="4e4bd-129">기본 형식과 달리 이 변환기는 데이터 계약 모델을 따르는 형식을 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-129">Unlike its base type, this converter can handle any type adhering to the Data Contract model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e4bd-130">다음 연산을 예로 들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-130">Consider the following operation.</span></span>  
  
```  
[WebGet]  
[OperationContract] public int GetOptionQuote(string ticker, DateTime dte, Option opt);  
```  
  
 <span data-ttu-id="4e4bd-131">이 작업은 다음의 URL 인코딩 버전인 URL을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4e4bd-131">This operation produces a URL that is a URL-encoded version of the following.</span></span>  
  
```  
http://localhost/quote.svc/GetOptionQuote?ticker="MSFT"&dte="\/Date(50067823)\/"&opt={"type":"call","strikePrice":"35"}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>