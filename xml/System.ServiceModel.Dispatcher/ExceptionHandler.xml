<Type Name="ExceptionHandler" FullName="System.ServiceModel.Dispatcher.ExceptionHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec78df9bc85eae32d8fca7cb3c09ba17dbad6bea" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39945096" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExceptionHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExceptionHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ExceptionHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExceptionHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionHandler abstract" />
  <TypeSignature Language="F#" Value="type ExceptionHandler = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="37d77-101">WCF(Windows Communication Foundation) 런타임에 발생하는 처리되지 않은 예외에 대한 예외 처리기를 만들려면 <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> 클래스를 확장합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="37d77-101">Extend the <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> class to create an exception handler for unhandled exceptions that occur within the Windows Communication Foundation (WCF) runtime.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d77-102"><xref:System.ServiceModel.Dispatcher.ExceptionHandler> 클래스를 확장하고 <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> 메서드를 재정의하여 예외가 발생할 경우 응용 프로그램을 종료할지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-102">Extend the <xref:System.ServiceModel.Dispatcher.ExceptionHandler> class and override the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method to determine whether an exception should terminate the application.</span></span> <span data-ttu-id="37d77-103">다음 사용자의 새 인스턴스를 만듭니다 <xref:System.ServiceModel.Dispatcher.ExceptionHandler> 클래스 및 정적으로 할당할 <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A> 또는 <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A> WCF 클라이언트 또는 서비스를 만들기 전에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-103">Then create a new instance of your custom <xref:System.ServiceModel.Dispatcher.ExceptionHandler> class and assign it to the static <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A> or <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A> property prior to creating WCF clients or services.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37d77-104">다음 코드 예제에서는 <xref:System.ServiceModel.Dispatcher.ExceptionHandler> 메서드를 재정의하는 <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> 추상 클래스를 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-104">The following code example shows an implementation of the <xref:System.ServiceModel.Dispatcher.ExceptionHandler> abstract class that overrides the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method.</span></span>  
  
 [!code-csharp[S_UEExceptionHandler#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueexceptionhandler/cs/program.cs#0)]
 [!code-vb[S_UEExceptionHandler#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueexceptionhandler/vb/module1.vb#0)]  
  
 <span data-ttu-id="37d77-105">다음 코드 예제에서는 사용자 지정을 사용 하도록 설정 하는 방법을 보여 줍니다. `MyExceptionHandler` WCF 런타임 내에서 발생 하는 처리 되지 않은 예외에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-105">The following code example shows how to enable the custom `MyExceptionHandler` for unhandled exceptions that occur within the WCF runtime.</span></span>  
  
 [!code-csharp[S_UEExceptionHandler#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueexceptionhandler/cs/program.cs#1)]
 [!code-vb[S_UEExceptionHandler#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueexceptionhandler/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExceptionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ExceptionHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExceptionHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37d77-106">
            <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d77-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysHandle">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Dispatcher.ExceptionHandler AlwaysHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Dispatcher.ExceptionHandler AlwaysHandle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlwaysHandle As ExceptionHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Dispatcher::ExceptionHandler ^ AlwaysHandle { System::ServiceModel::Dispatcher::ExceptionHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlwaysHandle : System.ServiceModel.Dispatcher.ExceptionHandler" Usage="System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ExceptionHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37d77-107">모든 예외를 처리하는 <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d77-107">Gets an instance of <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> that handles all exceptions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37d77-108">모든 예외에 대해 <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />를 반환하는 <see langword="true" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d77-108">An <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> object that returns <see langword="true" /> for all exceptions.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsynchronousThreadExceptionHandler">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Dispatcher.ExceptionHandler AsynchronousThreadExceptionHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Dispatcher.ExceptionHandler AsynchronousThreadExceptionHandler" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AsynchronousThreadExceptionHandler As ExceptionHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Dispatcher::ExceptionHandler ^ AsynchronousThreadExceptionHandler { System::ServiceModel::Dispatcher::ExceptionHandler ^ get(); void set(System::ServiceModel::Dispatcher::ExceptionHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsynchronousThreadExceptionHandler : System.ServiceModel.Dispatcher.ExceptionHandler with get, set" Usage="System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>get: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>set: System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ExceptionHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37d77-109">응용 프로그램 도메인에 대한 현재 <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> 구현을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d77-109">Gets or sets the current <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> implementation for the application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37d77-110">사용자 지정 할당 <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> 받는 개체 처리 되지 않은 비동기 Windows Communication Foundation (WCF) 스레드에서 발생 하는 예외입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d77-110">Assign a custom <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> object that receives unhandled exceptions that occur on asynchronous Windows Communication Foundation (WCF) threads.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d77-111">기본적으로 <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A> 속성은 `null`, 비동기 WCF 스레드에서 처리 되지 않은 예외는 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-111">By default, the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A> property is `null`, and unhandled exceptions on asynchronous WCF threads terminate the application.</span></span>  <span data-ttu-id="37d77-112">이러한 예외를 수신하여 상호 작용하게 하려면 이 속성을 <xref:System.ServiceModel.Dispatcher.ExceptionHandler> 개체로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-112">Set this property to an <xref:System.ServiceModel.Dispatcher.ExceptionHandler> object to receive and react to these exceptions.</span></span>  
  
 <span data-ttu-id="37d77-113">처리 되지 않은 예외가 비동기 WCF 스레드에서 발생 하이 처리기에 도달 하는 경우 응용 프로그램 도메인의 상태가 손상 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-113">If an unhandled exception occurs on an asynchronous WCF thread and reaches this handler, the state of the application domain may be compromised.</span></span>  <span data-ttu-id="37d77-114"><xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> 반환 되어서는 안 `true` 이러한 예외에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-114"><xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> should not return `true` for these exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleException">
      <MemberSignature Language="C#" Value="public abstract bool HandleException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool HandleException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="abstract member HandleException : Exception -&gt; bool" Usage="exceptionHandler.HandleException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="37d77-115">WCF(Windows Communication Foundation) 런타임에서 발생한 예외이며 응용 프로그램을 종료할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d77-115">The exception the occurred within the Windows Communication Foundation (WCF) runtime and which may terminate the application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37d77-116">파생 클래스에서 재정의된 경우 예외가 처리되었으면 <see langword="true" />를 반환하고, 예외가 다시 throw되면 <see langword="false" />를 반환한 후 응용 프로그램이 종료됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d77-116">When overridden in a derived class, returns <see langword="true" /> if the exception has been handled, or <see langword="false" /> if the exception should be rethrown and the application terminated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37d77-117">예외가 처리되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d77-117">
              <see langword="true" /> if the exception has been handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d77-118"><xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> 속성은 예외가 처리되었을 경우 `true`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-118">The <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> property returns `true` if the exception has been handled.</span></span> <span data-ttu-id="37d77-119">`false`가 반환되거나 다른 예외가 throw되면 원래의 예외가 다시 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-119">If it returns `false` or throws a different exception, the original exception is rethrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37d77-120">다음 코드 예제에서는 <xref:System.ServiceModel.Dispatcher.ExceptionHandler> 메서드를 재정의하는 <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> 추상 클래스를 구현하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-120">The following code example shows an implementation of the <xref:System.ServiceModel.Dispatcher.ExceptionHandler> abstract class that overrides the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method.</span></span>  
  
  
  
 <span data-ttu-id="37d77-121">다음 코드 예제에서는 사용자 지정을 사용 하도록 설정 하는 방법을 보여 줍니다. `MyExceptionHandler` WCF 런타임 내에서 발생 하는 처리 되지 않은 예외에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-121">The following code example shows how to enable the custom `MyExceptionHandler` for unhandled exceptions that occur within the WCF runtime.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportExceptionHandler">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Dispatcher.ExceptionHandler TransportExceptionHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Dispatcher.ExceptionHandler TransportExceptionHandler" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property TransportExceptionHandler As ExceptionHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Dispatcher::ExceptionHandler ^ TransportExceptionHandler { System::ServiceModel::Dispatcher::ExceptionHandler ^ get(); void set(System::ServiceModel::Dispatcher::ExceptionHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransportExceptionHandler : System.ServiceModel.Dispatcher.ExceptionHandler with get, set" Usage="System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ExceptionHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37d77-122">응용 프로그램 도메인에 대한 현재 전송 <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> 구현을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d77-122">Gets or sets the current transport <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> implementation for the application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37d77-123">사용자 지정 <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> 받는 개체 처리 되지 않은 전역 Windows Communication Foundation (WCF) 전송에서 발생 하는 예외입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37d77-123">A custom <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> object that receives unhandled exceptions that occur within the global Windows Communication Foundation (WCF) transports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37d77-124">기본적으로 <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A> 속성의 값으로 설정 됩니다 <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A>, 무시할 WCF 전송에서 처리 되지 않은 예외 발생을 막습니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-124">By default, the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A> property is set to the value of <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A>, causing unhandled exceptions within WCF transports to be ignored.</span></span>  <span data-ttu-id="37d77-125">이러한 예외를 수신하여 상호 작용하게 하려면 이 속성을 <xref:System.ServiceModel.Dispatcher.ExceptionHandler>의 인스턴스로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-125">Set this property to an instance of <xref:System.ServiceModel.Dispatcher.ExceptionHandler> to receive and react to these exceptions.</span></span>  
  
 <span data-ttu-id="37d77-126">처리 되지 않은 예외가 전역 WCF 전송에서 발생 하이 처리기에 도달 하는 경우 응용 프로그램 도메인의 상태가 손상 된 가능성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-126">If an unhandled exception occurs within a global WCF transport and reaches this handler, there is a possibility that the state of the application domain is compromised.</span></span> <span data-ttu-id="37d77-127"><xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> 반환할 수 있습니다 `false` 이러한 예외는 응용 프로그램을 종료할 수에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="37d77-127"><xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> can return `false` for these exceptions to cause the application to be terminated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>