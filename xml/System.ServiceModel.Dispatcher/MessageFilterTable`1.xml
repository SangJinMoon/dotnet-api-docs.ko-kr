<Type Name="MessageFilterTable&lt;TFilterData&gt;" FullName="System.ServiceModel.Dispatcher.MessageFilterTable&lt;TFilterData&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05289aaa857c063017dec679418a927348751644" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageFilterTable&lt;TFilterData&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageFilterTable`1&lt;TFilterData&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.IEnumerable, class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!TFilterData&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageFilterTable(Of TFilterData)&#xA;Implements ICollection(Of KeyValuePair(Of MessageFilter, TFilterData)), IDictionary(Of MessageFilter, TFilterData), IEnumerable(Of KeyValuePair(Of MessageFilter, TFilterData)), IMessageFilterTable(Of TFilterData)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFilterData&gt;&#xA;public ref class MessageFilterTable : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::ServiceModel::Dispatcher::IMessageFilterTable&lt;TFilterData&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFilterData" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TFilterData">
      <span data-ttu-id="9d94b-101">유형의 <c>FilterData</c> 필터와 연결 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d94b-101">The type of the <c>FilterData</c> associated with the filter.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="9d94b-102">필터 테이블의 제네릭 구현을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d94b-102">Provides the generic implementation of a filter table.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-103"><xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>은 모든 형식의 필터를 허용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-103">A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> accepts filters of any type.</span></span> <span data-ttu-id="9d94b-104">지정된 형식의 모든 필터를 포함하는 테이블에 내부적으로 그룹화합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-104">It groups them internally into tables that contain all the filters of a given type.</span></span> <span data-ttu-id="9d94b-105">추가된 필터는 해당 형식의 필터가 포함된 내부 필터 테이블이 있는 경우 이 필터 테이블에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-105">When a filter is added, it is put into an internal filter table, if one already exists, which contains filters of its type.</span></span> <span data-ttu-id="9d94b-106">이러한 테이블이 없는 경우 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A>을 호출하여 해당 형식의 새 필터 테이블을 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-106">If no such table exists, <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.CreateFilterTable%2A> is called to allocate a new filter table of the appropriate type.</span></span> <span data-ttu-id="9d94b-107">기본 작업은 <xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A>을 호출하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-107">Its default operation is to call <xref:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable%2A>.</span></span>  
  
 <span data-ttu-id="9d94b-108">이 기본 동작을 재정의하여 특정 형식의 필터와 연결되는 형식의 필터 테이블을 명시적으로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-108">This default behavior can be overridden to explicitly specify the type of filter table associated with a type of filter.</span></span> <span data-ttu-id="9d94b-109">필터 형식을 테이블에 처음 추가했을 때 생성되는 필터 테이블 형식은 해당 필터 형식과 영구적으로 연결됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-109">The first time a filter type is added to the table, the filter table type created is permanently associated with the filter type.</span></span>  
  
 <span data-ttu-id="9d94b-110">우선 순위는 필터를 우선 순위 버킷으로 그룹화하고 처리 순서를 지정하는 데 사용되는 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-110">The priority is an integer value used to group filters into priority buckets and order their processing.</span></span> <span data-ttu-id="9d94b-111">필터 형식에 할당된 정수가 클수록 처리 우선 순위가 높아집니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-111">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="9d94b-112">우선 순위 버킷에 있는 모든 필터 테이블이 함께 평가됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-112">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="9d94b-113">낮은 우선 순위 버킷은 높은 우선 순위 버킷에 일치 항목이 없는 경우에만 평가됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-113">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span> <span data-ttu-id="9d94b-114">필터 테이블은 추가할 필터에 설정 가능한 기본 우선 순위를 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-114">A filter table assigns a default priority that can be set to filters being added.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-115">
            <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageFilterTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageFilterTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-116">기본 우선 순위 0을 사용하여 <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-116">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> class with a default priority of 0.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-117">필터 테이블에 할당된 정수가 클수록 메시지에서 일치 항목을 검사하는 데 사용할 우선 순위가 높아집니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-117">The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match.</span></span> <span data-ttu-id="9d94b-118"><xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A>을 사용하여 기본 우선 순위를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-118">The default priority can be specified using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.%23ctor%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageFilterTable (int defaultPriority);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 defaultPriority) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultPriority As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageFilterTable(int defaultPriority);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public MessageFilterTable (int default_priority);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 default_priority) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (default_priority As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageFilterTable(int default_priority);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultPriority" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="default_priority" Type="System.Int32" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="default_priority">To be added.</param>
        <summary>
          <span data-ttu-id="9d94b-119">지정된 초기 기본 우선 순위를 사용하여 <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-119">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" /> class with the specified initial default priority.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-120">필터 테이블에 할당된 정수가 클수록 메시지에서 일치 항목을 검사하는 데 사용할 우선 순위가 높아집니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-120">The larger the integer assigned to a filter table, the higher its priority for use in inspecting messages for a match.</span></span> <span data-ttu-id="9d94b-121">기본 생성자는 `defaultPriority` 0을 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-121">The default constructor assigns a `defaultPriority` of 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-122">필터 및 필터와 연결된 <paramref name="FilterData" />를 필터 테이블에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-122">Adds a filter and its associated <paramref name="FilterData" /> to the filter table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="9d94b-123">테이블에 추가된 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;필터, <c>FilterData</c>&gt;입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-123">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; added to the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-124">필터/<paramref name="FilterData" />(키/값) 쌍을 필터 테이블에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-124">Adds a filter/<paramref name="FilterData" /> (key/value) pair to the filter table.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d94b-125">
            <paramref name="item" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-125">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ServiceModel.Dispatcher.MessageFilter filter, !TFilterData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As MessageFilter, data As TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="9d94b-126">추가된 쌍의 키로 사용되는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-126">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="9d94b-127">추가된 쌍의 값으로 사용되며 필터와 연결된 <c>FilterData</c>입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-127">The <c>FilterData</c> associated with the filter used as the value of the pair added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-128">필터 및 필터와 연결된 <paramref name="FilterData" />를 필터 테이블에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-128">Adds a filter and its associated <paramref name="FilterData" /> to the filter table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-129">필터에 기본 우선 순위를 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-129">This assigns the filter a default priority.</span></span> <span data-ttu-id="9d94b-130">우선 순위를 지정하려면 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-130">To specify the priority, use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d94b-131">
            <paramref name="filter" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-131">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9d94b-132">
            <paramref name="filter" />가 테이블에 이미 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-132">
              <paramref name="filter" /> is already in the table.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ServiceModel.Dispatcher.MessageFilter filter, !TFilterData data, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As MessageFilter, data As TFilterData, priority As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData data, int priority);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="9d94b-133">추가된 쌍의 키로 사용되는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-133">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="9d94b-134">추가된 쌍의 값으로 사용되며 필터와 연결된 <c>FilterData</c>입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-134">The <c>FilterData</c> associated with the filter used as the value of the pair added.</span>
          </span>
        </param>
        <param name="priority">
          <span data-ttu-id="9d94b-135">추가된 필터의 우선 순위입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-135">The priority of the filter added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-136">지정된 우선 순위를 사용하여 필터 및 필터와 연결된 <paramref name="FilterData" />를 동작 필터 테이블에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-136">Adds a filter and its associated <paramref name="FilterData" /> to the action filter table with a specified priority.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-137">우선 순위는 필터를 우선 순위 버킷으로 그룹화하고 처리 순서를 지정하는 데 사용되는 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-137">The priority is an integer value used to group filters into priority buckets and order their processing.</span></span> <span data-ttu-id="9d94b-138">필터 형식에 할당된 정수가 클수록 처리 우선 순위가 높아집니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-138">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="9d94b-139">우선 순위 버킷에 있는 모든 필터 테이블이 함께 평가됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-139">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="9d94b-140">낮은 우선 순위 버킷은 높은 우선 순위 버킷에 일치 항목이 없는 경우에만 평가됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-140">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span> <span data-ttu-id="9d94b-141">기본 우선 순위를 가진 필터를 추가하려면 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-141">Use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> to add a filter with the default priority.</span></span> <span data-ttu-id="9d94b-142"><xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A>를 사용하여 기본 우선 순위를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-142">The default priority can be set using <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.DefaultPriority%2A>.</span></span> <span data-ttu-id="9d94b-143">처음에 기본값은 0으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-143">The default is initially set to 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d94b-144">
            <paramref name="filter" />가 <see langword="null" />이 될 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-144">
              <paramref name="filter" /> cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9d94b-145">
            <paramref name="filter" />가 테이블에 이미 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-145">
              <paramref name="filter" /> already exists in the table.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d94b-146">
            <paramref name="filter" /> 형식이 테이블 형식과 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-146">
              <paramref name="filter" /> type does not match table type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-147">모든 필터 및 필터와 연결된 데이터를 필터 테이블에서 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-147">Removes all filters and their associated data from the filter table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-148">이 메서드는 <xref:System.Collections.Generic.ICollection%601.Clear%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-148">This method implements <xref:System.Collections.Generic.ICollection%601.Clear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="9d94b-149">
            <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt;는 테이블에서 찾을 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-149">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt; to find in the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-150">지정된 필터 및 그 필터와 연결된 <paramref name="FilterData" />가 필터 테이블에 포함되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-150">Determines whether the filter table contains a specified filter and its associated <paramref name="FilterData" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-151">
            <paramref name="filter" />/<paramref name="FilterData" /> 쌍이 필터 테이블에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-151">
              <see langword="true" /> if the <paramref name="filter" />/<paramref name="FilterData" /> pair is contained in the filter table; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-152">이 메서드는 `Contains`의 <xref:System.Collections.Generic.ICollection%601> 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-152">This method implements the `Contains` method of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="9d94b-153">테스트되는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-153">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> being tested for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-154">지정된 필터가 필터 테이블에 포함되는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-154">Determines whether the filter table contains a specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-155">
            <see langword="true" />가 필터 테이블에 포함되면 <paramref name="filter" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-155">
              <see langword="true" /> if the <paramref name="filter" /> is contained in the filter table; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-156">이 메서드는 `ContainsKey`의 <xref:System.Collections.Generic.IDictionary%602> 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-156">This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[] array, int arrayIndex);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;[] array, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of MessageFilter, TFilterData)(), arrayIndex As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ array, int arrayIndex);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[] array, int index);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;[] array, int32 index) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of MessageFilter, TFilterData)(), index As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ array, int index);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[]" Index="0" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="9d94b-157">쌍을 복사할 대상인 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;필터, <c>FilterData</c>&gt; 형식의 0부터 시작하는 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-157">The zero-based array of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to which the pairs are being copied.</span>
          </span>
        </param>
        <param name="arrayIndex">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
          <span data-ttu-id="9d94b-158">필터/<paramref name="FilterData" /> 쌍을 지정된 인덱스에서 시작하는 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-158">Copies the filter/<paramref name="FilterData" /> pairs to an array that starts at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-159">이 메서드는 `CopyTo`의 <xref:System.Collections.Generic.ICollection%601> 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-159">This method implements the `CopyTo` method of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-160">필터 테이블의 필터/<paramref name="FilterData" /> 쌍의 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-160">Gets the number of filter/<paramref name="FilterData" /> pairs in the filter table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d94b-161">필터 테이블의 필터/<paramref name="FilterData" /> 쌍 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-161">The number of filter/<paramref name="FilterData" /> pairs items in the filter table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-162">이 속성은 <xref:System.Collections.Generic.ICollection%601.Count%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-162">This property implements <xref:System.Collections.Generic.ICollection%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt; CreateFilterTable (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!TFilterData&gt; CreateFilterTable(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateFilterTable (filter As MessageFilter) As IMessageFilterTable(Of TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;TFilterData&gt; ^ CreateFilterTable(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="9d94b-163">생성되는 필터 테이블에 포함될 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-163">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to be contained in the filter table created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-164">지정된 형식의 필터에 대한 필터 테이블을 인스턴스화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-164">Instantiates a filter table for a specified type of filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-165">지정된 필터를 포함하는, 생성되는 <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-165">The <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> that is created that contains the specified filter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPriority">
      <MemberSignature Language="C#" Value="public int DefaultPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultPriority" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultPriority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-166">필터 테이블의 기본 우선 순위를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-166">Gets or sets the default priority for the filter table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d94b-167">필터 테이블에 추가된 필터에서 할당되는 기본 우선 순위입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-167">The default priority assigned by filters added to the filter table.</span>
          </span>
          <span data-ttu-id="9d94b-168">기본 우선 순위의 기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-168">The default value for the default priority is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-169">기본 우선 순위는 명시적으로 지정된 우선 순위가 없는 경우 필터 테이블에 추가된 필터에 자동으로 할당되는 우선 순위입니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-169">The default priority is the priority automatically assigned a filter added to the filter table if no priority is explicitly specified.</span></span> <span data-ttu-id="9d94b-170">필터 우선 순위는 처리 순서를 지정하는 데 사용되는 버킷으로 필터를 그룹화하는 데 사용되는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-170">The priority of a filter is an integer value used to group filters into buckets that are used to order their processing.</span></span> <span data-ttu-id="9d94b-171">필터 형식에 할당된 정수가 클수록 처리 우선 순위가 높아집니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-171">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="9d94b-172">우선 순위 버킷에 있는 모든 필터 테이블이 함께 평가됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-172">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="9d94b-173">낮은 우선 순위 버킷은 높은 우선 순위 버킷에 일치 항목이 없는 경우에만 평가됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-173">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-174">필터 테이블에서 반복하는 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-174">Returns an enumerator that iterates through the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-175">필터 테이블에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;필터, <paramref name="FilterData" />&gt;&gt;입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-175">An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, <paramref name="FilterData" />&gt;&gt; that can be used to iterate through the filter table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-176">이 메서드는 `GetEnumerator`의 <xref:System.Collections.IEnumerable> 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-176">This method implements the `GetEnumerator` method of <xref:System.Collections.IEnumerable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-177">지정된 메시지 또는 메시지 버퍼가 테이블에서 정확히 한 필터의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 <see langword="out" /> 매개 변수에 해당 필터를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-177">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or message buffer and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-178">메시지가 필터 테이블에 있는 필터를 충족하는지 여부를 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-178">Tests whether a message satisfies any of the filters in the filter table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" Index="0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9d94b-179">테스트할 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-179">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="filter">To be added.</param>
        <param name="result">To be added.</param>
        <summary>
          <span data-ttu-id="9d94b-180">@FSHO1@지정한 메시지가 테이블에서 정확히 한 필터의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, <see langword="out" /> 매개 변수에 해당 필터를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-180">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-181">메시지가 테이블에 있는 <see langword="true" />의 일치 기준을 충족하면 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-181">
              <see langword="true" /> if match criterion of one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-182">메시지와 일치하는 필터가 한 개로 예상되고 일치하는 필터가 필수적 요소인 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-182">Use this method when a single filter is expected to match the message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="9d94b-183">필터 테이블의 필터를 사용하여 메시지 본문을 검사해야 하면 이 메서드의 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> 버전을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-183">If the body of the message must be inspected by a filter in the filter table, use the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A> version of the method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="9d94b-184">두 개 이상의 <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />가 <paramref name="messageBuffer" />와 일치하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-184">More than one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> matches the <paramref name="messageBuffer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer buffer, out System.ServiceModel.Dispatcher.MessageFilter filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer buffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (buffer As MessageBuffer, ByRef filter As MessageFilter) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer buffer, out System.ServiceModel.Dispatcher.MessageFilter result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer buffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; result) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (buffer As MessageBuffer, ByRef result As MessageFilter) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % result);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" Index="0" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="result" Type="System.ServiceModel.Dispatcher.MessageFilter&amp;" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="9d94b-185">테스트할 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-185">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="filter">To be added.</param>
        <param name="result">To be added.</param>
        <summary>
          <span data-ttu-id="9d94b-186">@FSHO1@지정한 메시지가 테이블에서 정확히 한 필터의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, <see langword="out" /> 매개 변수에 해당 필터를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-186">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <see langword="out" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-187">메시지가 테이블에 있는 필터 중 정확히 하나의 일치 조건을 충족하면 <see langword="true" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-187">
              <see langword="true" /> if match criterion of exactly one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-188">메시지와 일치하는 필터가 한 개로 예상되고 일치하는 필터가 반환되어야 하는 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-188">Use this method when a single filter is expected to match the message and the matching filter must be returned.</span></span>  
  
 <span data-ttu-id="9d94b-189">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-189">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="9d94b-190">두 개 이상의 <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />가 <paramref name="messageBuffer" />와 일치하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-190">More than one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> matches the <paramref name="messageBuffer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilters">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-191">지정한 메시지 또는 버퍼링된 메시지가 테이블에서 한 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 일치하는 필터를 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-191">Returns a value that indicates whether the match criterion of a <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message or buffered message, and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-192">메시지와 일치하도록 두 개 이상의 필터가 있어야 하고 일치하는 필터가 필요한 경우 이 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="9d94b-192">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9d94b-193">테스트할 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-193">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="9d94b-194">
            <see cref="T:System.Collections.Generic.ICollection`1" />&lt;필터&gt;와 일치하는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 개체를 저장하는 참조 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-194">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-195">지정된 메시지가 테이블에서 한 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 일치하는 필터를 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-195">Returns a value that indicates whether the match criterion of an <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message, and adds the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-196">
            <paramref name="message" />가 테이블에 있는 필터 중 적어도 한 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />의 일치 조건을 충족하면 <see langword="true" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-196">
              <see langword="true" /> if match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-197">메시지와 일치하도록 두 개 이상의 필터가 있어야 하고 일치하는 필터가 필요한 경우 이 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="9d94b-197">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="9d94b-198">이 메서드는 일치 항목이 하나 이상 있는 필터의 가장 높은 우선 순위 버킷에서 일치하는 모든 필터를 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-198">This method tests for all of the matching filters in the highest priority bucket of filters in which at least one match occurs.</span></span>  
  
 <span data-ttu-id="9d94b-199">테이블에 있는 필터는 메시지 본문을 검사할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-199">The filters in the table are not allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="9d94b-200">일치하는 <xref:System.ServiceModel.Dispatcher.MessageFilter> 개체는 `results`의 <xref:System.Collections.Generic.ICollection%601> 매개 변수에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-200">The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="9d94b-201">그런 다음 `FilterData`에서 제공하는 메서드를 통해 이러한 필터를 키로 사용하여 필터 테이블에서 <xref:System.Collections.Generic.IDictionary%602>를 복구할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-201">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="9d94b-202">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-202">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d94b-203">
            <paramref name="results" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-203">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="9d94b-204">필터에서 메시지 본문의 콘텐츠를 검사하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-204">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (buffer As MessageBuffer, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="9d94b-205">테스트할 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-205">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="9d94b-206">
            <see cref="T:System.Collections.Generic.ICollection`1" />&lt;필터&gt;와 일치하는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 개체를 저장하는 참조 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-206">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-207">지정한 버퍼링된 메시지가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 항목이 하나 이상 있는 우선 순위가 가장 높은 필터 집합의 일치하는 필터를 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-207">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the matching filters from the highest priority set of filters in which at least one match is found to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-208">
            <see langword="true" />가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하면 <paramref name="message" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-208">
              <see langword="true" /> if match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-209">버퍼링된 메시지와 일치하는 여러 개의 필터가 예상되고 일치하는 필터가 필수적 요소인 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-209">Use this method when more than one filter is expected to match the buffered message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="9d94b-210">테이블에 있는 필터는 메시지 본문을 검사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-210">The filters in the table are allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="9d94b-211">일치하는 <xref:System.ServiceModel.Dispatcher.MessageFilter> 개체는 `results`의 <xref:System.Collections.Generic.ICollection%601> 매개 변수에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-211">The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="9d94b-212">그런 다음 `FilterData`에서 제공하는 메서드를 통해 이러한 필터를 키로 사용하여 필터 테이블에서 <xref:System.Collections.Generic.IDictionary%602>를 복구할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-212">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="9d94b-213">이 메서드는 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-213">This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d94b-214">
            <paramref name="results" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-214">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValue">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-215">지정한 메시지 또는 버퍼링된 메시지가 테이블에서 정확히 한 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터 데이터를 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-215">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message or buffered message and adds the matching filter data to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-216">메시지와 일치하는 필터가 한 개로 예상되고 일치하는 필터의 `FilterData`만 복구해야 하는 경우 이러한 메서드 중 하나를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-216">Use one of these methods when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="9d94b-217"><xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A>를 사용하여 메시지 헤더를 검사하고 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A>를 사용하여 버퍼링된 메시지를 검사합니다. 이때 메시지 본문을 조사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-217">Use <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A> to inspect message headers and <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingValue%2A> to inspect a buffered message, which can include looking at the message body.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="data" Type="TFilterData&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9d94b-218">테스트할 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-218">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="9d94b-219">
            <c>message</c>와 일치하는 <c>FilterData</c>를 저장하는 <see langword="out" /> 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-219">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>message</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-220">지정한 메시지가 테이블에서 정확히 한 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터 데이터를 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-220">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> in the table is satisfied by the specified message and adds the matching filter data to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-221">메시지가 테이블에 있는 필터 중 하나의 일치 조건을 충족하면 <see langword="true" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-221">
              <see langword="true" /> if the match criterion of one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-222">메시지와 일치하는 필터가 한 개로 예상되고 일치하는 필터의 `FilterData`만 복구해야 하는 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-222">Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="9d94b-223">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-223">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="9d94b-224">두 개 이상의 필터가 <paramref name="message" />와 일치하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-224">More than one filter matches the <paramref name="message" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="9d94b-225">필터에서 메시지 본문의 콘텐츠를 검사하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-225">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer buffer, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer buffer, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (buffer As MessageBuffer, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ buffer, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="data" Type="TFilterData&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="9d94b-226">테스트할 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-226">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="9d94b-227">
            <c>messageBuffer</c>와 일치하는 <c>FilterData</c>를 저장하는 <see langword="out" /> 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-227">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <c>messageBuffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-228">지정한 버퍼링 메시지가 테이블에서 정확히 한 필터의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터 데이터를 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-228">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message and adds the matching filter data to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-229">버퍼링된 메시지가 테이블에 있는 필터 중 하나의 일치 조건을 충족하면 <see langword="true" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-229">
              <see langword="true" /> if the match criterion of one filter in the table is satisfied by the buffered message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-230">버퍼링된 메시지와 일치하는 필터가 한 개로 예상되고 일치하는 필터의 `FilterData`만 복구해야 하는 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-230">Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered.</span></span> <span data-ttu-id="9d94b-231">버퍼링된 메시지와 비교하여 필터를 일치시키므로 필터는 메시지 본문의 조건을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-231">Because the filter is being matched to a buffered message, it can specify conditions on the message body.</span></span>  
  
 <span data-ttu-id="9d94b-232">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-232">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
          <span data-ttu-id="9d94b-233">두 개 이상의 필터가 <paramref name="messageBuffer" />와 일치하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-233">More than one filter matches the <paramref name="messageBuffer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValues">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-234">지정한 메시지 또는 버퍼링된 메시지가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터의 <paramref name="FilterData" />를 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-234">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-235">메시지 또는 버퍼링된 메시지와 일치하는 여러 개의 필터가 예상되고 `FilterData`만이 필수 요소인 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-235">Use this method when more than one filter is expected to match the message or buffered message and only the `FilterData` is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="9d94b-236">테스트할 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-236">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="9d94b-237">일치하는 동작 필터의 <c>FilterData</c>를 일반 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;에 저장하는 참조 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-237">The reference parameter that stores the <c>FilterData</c> of the matching action filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-238">지정한 메시지 또는 버퍼링된 메시지가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터의 <paramref name="FilterData" />를 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-238">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-239">메시지가 테이블에 있는 필터 중 정확히 하나의 일치 조건을 충족하면 <see langword="true" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-239">
              <see langword="true" /> if match criterion of exactly one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-240">메시지와 일치하는 여러 개의 필터가 예상되고 `FilterData`만이 필수 요소이며 메시지의 본문을 검사하지 않을 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-240">Use this method when more than one filter is expected to match the message, only the `FilterData` is required, and the body of the message is not inspected.</span></span>  
  
 <span data-ttu-id="9d94b-241">일치하는 `FilterData` 개체의 <xref:System.ServiceModel.Dispatcher.MessageFilter>는 `results`의 <xref:System.Collections.Generic.ICollection%601> 매개 변수에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-241">The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="9d94b-242">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-242">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d94b-243">
            <paramref name="results" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-243">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
          <span data-ttu-id="9d94b-244">필터에서 메시지 본문의 콘텐츠를 검사하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-244">A filter attempted to examine the contents of the message body.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer buffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer buffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (buffer As MessageBuffer, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ buffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="9d94b-245">테스트할 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-245">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="9d94b-246">
            <c>messageBuffer</c>가 충족시키는 필터의 필터 데이터를 저장하는 참조 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-246">The reference parameter that stores the filter data of the filters that are satisfied by the <c>messageBuffer</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-247">지정된 메시지 버퍼가 테이블에서 정확히 한 필터의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터의 <paramref name="FilterData" />를 <paramref name="results" /> 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-247">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message buffer and adds the <paramref name="FilterData" /> of the matching filters to the <paramref name="results" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-248">버퍼링된 메시지가 테이블에 있는 <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> 중 정확히 하나의 일치 조건을 충족하면 <see langword="true" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-248">
              <see langword="true" /> if the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.ActionMessageFilter" /> in the table is satisfied by the buffered message; <see langword="false" /> if no filter is satisfied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-249">여러 필터가 버퍼링된 메시지와 일치할 것으로 예상되고, `FilterData`만이 필수 요소인 경우 이 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="9d94b-249">Use this method when more than one filter is expected to match the buffered message and only the `FilterData` is required.</span></span>  
  
 <span data-ttu-id="9d94b-250">일치하는 `FilterData` 개체의 <xref:System.ServiceModel.Dispatcher.MessageFilter>는 `results`<xref:System.Collections.Generic.ICollection%601>에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-250">The `FilterData` of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="9d94b-251">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-251">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d94b-252">
            <paramref name="results" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-252">
              <paramref name="results" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPriority">
      <MemberSignature Language="C#" Value="public int GetPriority (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPriority(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPriority (filter As MessageFilter) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPriority(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="9d94b-253">생성되는 필터 테이블에 포함되는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-253">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> contained in the filter table created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-254">테이블에서 특정 필터의 우선 순위를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-254">Returns the priority of a given filter in the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-255">
            <paramref name="filter" />의 우선 순위입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-255">The priority of the <paramref name="filter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-256">우선 순위는 필터를 우선 순위 버킷으로 그룹화하고 처리 순서를 지정하는 데 사용되는 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-256">The priority is an integer value used to group filters into priority buckets and order their processing.</span></span> <span data-ttu-id="9d94b-257">필터 형식에 할당된 정수가 클수록 처리 우선 순위가 높아집니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-257">The larger the integer assigned to a filter type, the higher its priority for processing.</span></span> <span data-ttu-id="9d94b-258">우선 순위 버킷에 있는 모든 필터 테이블이 함께 평가됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-258">All the filter tables in a priority bucket are evaluated together.</span></span> <span data-ttu-id="9d94b-259">낮은 우선 순위 버킷은 높은 우선 순위 버킷에 일치 항목이 없는 경우에만 평가됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-259">Lower priority buckets are only evaluated if higher priority buckets do not provide any matches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9d94b-260">지정된 필터가 필터 테이블에 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-260">The specified filter does not exist in the filter table.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-261">필터 테이블이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-261">Gets a value that indicates whether the filter table is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d94b-262">모든 필터 테이블에 대해 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-262">
              <see langword="false" /> for all filter tables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-263"><xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>이 읽기 전용이 아니어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-263">A <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> must not be read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TFilterData this[System.ServiceModel.Dispatcher.MessageFilter filter] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFilterData Item(class System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(filter As MessageFilter) As TFilterData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TFilterData default[System::ServiceModel::Dispatcher::MessageFilter ^] { TFilterData get(System::ServiceModel::Dispatcher::MessageFilter ^ filter); void set(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFilterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="9d94b-264">가져오거나 설정할 필터 데이터와 연결된 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-264">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> associated with the filter data to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-265">지정된 <paramref name="filter" />와 연결된 필터 데이터를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-265">Gets or sets the filter data associated with the specified <paramref name="filter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d94b-266">
            <paramref name="filter" />와 연결된 필터 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-266">The filter data associated with the <paramref name="filter" />.</span>
          </span>
          <span data-ttu-id="9d94b-267">지정된 <paramref name="filter" />가 없을 경우 get 작업은 <see cref="T:System.Collections.Generic.KeyNotFoundException" />을 throw하고, set 작업은 지정된 <paramref name="filter" /> 필터를 키로 사용하여 새 필터 데이터 요소를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-267">If the specified <paramref name="filter" /> is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new filter data element with the specified <paramref name="filter" /> as the key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-268">`Item` 속성(C# 인덱서)을 사용하면 다음 구문을 사용하여 테이블의 필터 컬렉션에서 `filter`와 연결된 필터 데이터에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-268">The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax.</span></span>  
  
```csharp  
myFilters[filter]  
  
```  
  
```vb  
myFilters(filter)  
  
```  
  
 <span data-ttu-id="9d94b-269">`Item` 속성을 사용하면 동작 필터 테이블에 없는 `filter`/필터 데이터 쌍의 값을 설정하여 새 요소를 추가할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-269">You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table.</span></span> <span data-ttu-id="9d94b-270">그러나 `filter`가 테이블에 이미 있는 경우 `Item` 속성을 설정하면 이전 값을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-270">However if `filter` is already in the table, setting the `Item` property overwrites the old value.</span></span> <span data-ttu-id="9d94b-271">이와는 반대로 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> 메서드는 기존 `filter`의 필터 데이터를 수정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-271">In contrast, the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.</span></span>  
  
 <span data-ttu-id="9d94b-272">사전 `item`은 `FilterData` 경우의 필터/<xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-272">The dictionary `item` is a filter/`FilterData` pair in the case of <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d94b-273">
            <paramref name="filter" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-273">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="9d94b-274">우선 순위를 검색했지만 <paramref name="filter" />가 테이블에 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-274">The property is retrieved, and the <paramref name="filter" /> is not in the table.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of MessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-275">필터 테이블에 포함된 모든 필터의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-275">Gets a collection of all the filters contained in the filter table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d94b-276">필터 테이블에 포함된 모든 필터의 <see cref="T:System.Collections.Generic.ICollection`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-276">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the filters contained in the filter table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-277">이 속성은 <xref:System.Collections.Generic.IDictionary%602.Keys%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-277">This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>.</span></span> <span data-ttu-id="9d94b-278">필터 테이블에서 구현되는 <xref:System.Collections.Generic.IDictionary%602><필터, `FilterData`>는 <xref:System.ServiceModel.Dispatcher.MessageFilter>를 키로 사용하고 `FilterData`를 쌍의 값으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-278">The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="9d94b-279">컬렉션에서 반환되는 필터의 순서는 지정되지 않지만 `FilterData` 속성으로 컬렉션에서 반환되는 상응하는 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Values%2A>와 순서가 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-279">The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Values%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-280">필터 및 필터와 연결된 필터 데이터를 테이블에서 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-280">Removes a filter and its associated filter data from the table.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="9d94b-281">테이블에서 제거할 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;필터, <c>FilterData</c>&gt;입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-281">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to remove from the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-282">지정된 필터/<paramref name="FilterData" /> 쌍을 필터 테이블에서 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-282">Removes a specified filter/<paramref name="FilterData" /> pair from the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-283">필터/<see langword="true" /> 쌍을 찾아 제거하면 <paramref name="FilterData" />이고, 해당 쌍을 찾을 수 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-283">
              <see langword="true" /> if the filter/<paramref name="FilterData" /> pair was found and removed; <see langword="false" /> if it was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-284">`item`의 필터 키가 있지만 `FilterData`와 다른 데이터에 연결되어 있는 경우, 이 메서드는 필터를 제거하지 못하고 `false`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-284">If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`.</span></span>  
  
 <span data-ttu-id="9d94b-285">이 메서드는 <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-285">This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d94b-286">
            <paramref name="filter" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-286">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="9d94b-287">제거할 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-287">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-288">필터 및 필터와 연결된 <paramref name="FilterData" />를 필터 테이블에서 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-288">Removes a filter and its associated <paramref name="FilterData" /> from the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-289">필터를 찾아 제거하면 <see langword="true" />이고, 필터를 찾을 수 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-289">
              <see langword="true" /> if the filter was found and removed; <see langword="false" /> if it was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-290">이 메서드는 <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-290">This method implements <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23Generic%23ICollection%7BT%7D%23Remove%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d94b-291">
            <paramref name="filter" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-291">
              <paramref name="filter" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-292">필터 테이블에서 반복하는 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-292">Returns an enumerator that iterates through the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-293">필터 테이블에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.Generic.IEnumerator`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-293">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the filter table.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-294">이 메서드는 <xref:System.Collections.IEnumerable.GetEnumerator%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-294">This method implements <xref:System.Collections.IEnumerable.GetEnumerator%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (System.ServiceModel.Dispatcher.MessageFilter filter, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(class System.ServiceModel.Dispatcher.MessageFilter filter, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (filter As MessageFilter, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::ServiceModel::Dispatcher::MessageFilter ^ filter, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="9d94b-295">데이터를 검색할 키로 사용되는 <c>filter</c>입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-295">The <c>filter</c> that is used as a key to retrieve the data.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="9d94b-296">
            <c>filter</c>와 연결된 <c>data</c>입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-296">The <c>data</c> associated with the <c>filter</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d94b-297">필터가 필터 테이블에 저장되는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-297">Checks whether a filter is stored in the filter table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d94b-298">필터 테이블에 연결된 데이터가 있는 필터가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-298">
              <see langword="true" /> if there is a filter in the filter table that has data associated with it; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-299">이 메서드를 사용하면 필터가 없을 때 예외를 throw하는 대신 `false`를 반환하므로 필터 테이블에 필터가 있는지 여부를 효과적으로 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-299">This method is an efficient way to check whether a filter is in the filter table because when the filter is not present, it returns `false` instead of throwing an exception.</span></span> <span data-ttu-id="9d94b-300">테이블에서 필터를 검색하려고 할 때 필터가 테이블에 없으면 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-300">If you try to retrieve the filter from the table and it is not there, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TFilterData&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ Values { System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TFilterData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d94b-301">필터 테이블에 포함된 모든 <paramref name="FilterData" />의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-301">Gets a collection of all the <paramref name="FilterData" /> contained in the filter table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d94b-302">필터 테이블에 포함된 모든 <see cref="T:System.Collections.Generic.ICollection`1" />의 <paramref name="FilterData" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d94b-302">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <paramref name="FilterData" /> contained in the filter table.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d94b-303">이 속성은 <xref:System.Collections.Generic.IDictionary%602.Values%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-303">This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>.</span></span> <span data-ttu-id="9d94b-304">필터 테이블에서 구현되는 <xref:System.Collections.Generic.IDictionary%602><필터, `FilterData`>는 <xref:System.ServiceModel.Dispatcher.MessageFilter>를 키로 사용하고 `FilterData`를 쌍의 값으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-304">The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="9d94b-305">컬렉션에서 반환되는 `FilterData`의 순서는 지정되지 않지만 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Keys%2A> 속성으로 컬렉션에서 반환되는 상응하는 필터와 순서가 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="9d94b-305">The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.Keys%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>