<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICallContextInitializer.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cdbaea1b71eb2e65e216dc66aff628d9c5d94143.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdbaea1b71eb2e65e216dc66aff628d9c5d94143</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.ICallContextInitializer">
          <source>Defines the methods that enable the initialization and recycling of thread-local storage with the thread that invokes user code.</source>
          <target state="translated">사용자 코드를 호출하는 스레드를 사용하여 스레드 로컬 저장소를 초기화 및 재활용할 수 있는 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ICallContextInitializer">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ICallContextInitializer&gt;</ph> interface and add it to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=nameWithType&gt;</ph> property to initialize and clean up thread-local storage for the thread that invokes user code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ICallContextInitializer&gt;</ph> 인터페이스를 구현한 후 이 인터페이스를 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=nameWithType&gt;</ph> 속성에 추가하여 사용자 코드를 호출하는 스레드에 대한 스레드-로컬 저장소를 초기화하고 정리합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ICallContextInitializer">
          <source>Typical usage is to set some value, such as impersonation or changing the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph> 변경 또는 가장 등과 같이 일부 값을 설정하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ICallContextInitializer">
          <source>If you wanted to establish some custom context, this is the extension point to initialize the static context property, which is then available for developers in the course of the operation.</source>
          <target state="translated">일부 사용자 지정 컨텍스트를 설정하려 했다면 이 인터페이스가 정책 컨텍스트 속성을 초기화하는 확장명 지점이며 개발자는 이를 작업에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)">
          <source>The correlation object returned from the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" /&gt;</ph> 메서드에서 반환된 상관 관계 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)">
          <source>Implement to participate in cleaning up the thread that invoked the operation.</source>
          <target state="translated">작업을 호출한 스레드를 정리하려면 구현합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)">
          <source>Use this method to perform any necessary cleaning up of the operation thread.</source>
          <target state="translated">작업 스레드에 필요한 정리 작업을 수행하려면 이 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>The service instance for the operation.</source>
          <target state="translated">작업에 대한 서비스 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>The client channel.</source>
          <target state="translated">클라이언트 채널입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>The incoming message.</source>
          <target state="translated">들어오는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>Implement to participate in the initialization of the operation thread.</source>
          <target state="translated">작업 스레드를 초기화하려면 구현합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>A correlation object passed back as the parameter of the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" /&gt;</ph> 메서드의 매개 변수로 다시 전달된 상관 관계 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke%2A&gt;</ph> method to initialize and clean up thread-local storage for the thread that invokes user code.</source>
          <target state="translated">사용자 코드를 호출하는 스레드에 대한 스레드 로컬 저장소를 초기화하고 정리하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke%2A&gt;</ph> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>Typical usage is to set some value, such as impersonation or changing the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph> 변경 또는 가장 등과 같이 일부 값을 설정하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
          <source>If you wanted to establish some custom context, this is the extension point to initialize the static context property, which is then available for developers in the course of the operation.</source>
          <target state="translated">일부 사용자 지정 컨텍스트를 설정하려 했다면 이 인터페이스가 정책 컨텍스트 속성을 초기화하는 확장명 지점이며 개발자는 이를 작업에 사용할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>