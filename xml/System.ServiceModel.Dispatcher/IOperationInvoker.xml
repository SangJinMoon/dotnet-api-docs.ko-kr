<Type Name="IOperationInvoker" FullName="System.ServiceModel.Dispatcher.IOperationInvoker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d7d1671f3e386345f165cf5e02b747346240d71a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39997658" /></Metadata><TypeSignature Language="C#" Value="public interface IOperationInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationInvoker" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationInvoker" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationInvoker" />
  <TypeSignature Language="F#" Value="type IOperationInvoker = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2d86f-101">메시지에서 추출된 매개 변수 배열과 개체를 가져와서 해당 매개 변수를 사용하여 개체에서 메서드를 호출한 다음 메서드의 반환 값과 출력 매개 변수를 반환하는 메서드를 선언합니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-101">Declares methods that take an object and an array of parameters extracted from a message, invoke a method on that object with those parameters, and return the method's return value and output parameters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d86f-102">형식화되지 않은 개체 및 매개 변수 배열을 해당 개체에 대한 강력한 형식의 메서드 호출로 변환하는 과정을 제어하려면 <xref:System.ServiceModel.Dispatcher.IOperationInvoker> 인터페이스를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-102">Implement the <xref:System.ServiceModel.Dispatcher.IOperationInvoker> interface to control the conversion from an untyped object and array of parameters to a strongly-typed method call on that object.</span></span> <span data-ttu-id="2d86f-103">이 인터페이스는 형식 개체의 입력 집합과 인스턴스를 사용하고 형식 개체의 출력 집합과 개체를 반환하는 동기 <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> 메서드를 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-103">It has a synchronous <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> method, which takes an instance and set of inputs of type object and returns an object and a set of outputs of type object.</span></span> <span data-ttu-id="2d86f-104">또한 <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> 및 <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A> variant를 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-104">It also has a <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin%2A> and <xref:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd%2A> variant.</span></span>  <span data-ttu-id="2d86f-105"><xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> 속성은 동기 메서드를 사용할지 비동기 메서드를 사용할지를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-105">The <xref:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous%2A> property specifies whether the synchronous or asynchronous method should be used.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllocateInputs">
      <MemberSignature Language="C#" Value="public object[] AllocateInputs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] AllocateInputs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs" />
      <MemberSignature Language="VB.NET" Value="Public Function AllocateInputs () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ AllocateInputs();" />
      <MemberSignature Language="F#" Value="abstract member AllocateInputs : unit -&gt; obj[]" Usage="iOperationInvoker.AllocateInputs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d86f-106">매개 변수 개체의 <see cref="T:System.Array" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-106">Returns an <see cref="T:System.Array" /> of parameter objects.</span></span></summary>
        <returns><span data-ttu-id="2d86f-107">작업의 인수로 사용할 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-107">The parameters that are to be used as arguments to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d86f-108">작업에 대한 매개 변수 배열을 반환하려면 이 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-108">Implement this to return an array of parameters for the operation.</span></span> <span data-ttu-id="2d86f-109">이 배열은 포맷터로 채워진 다음 <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A>가 호출될 때 호출자에게 다시 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-109">This array is filled by the formatter and passed back to the invoker when <xref:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <threadsafe><span data-ttu-id="2d86f-110">이 메서드를 구현에 대 한 모든 호출의 입력된 배열을 할당 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-110">An implementation of this method must allocate the input array on every call.</span></span> <span data-ttu-id="2d86f-111">여러 호출에 대 한 동일한 배열을 반환 하면 예기치 않은 동작이 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-111">Returning the same array for multiple calls can result in unpredictable behavior.</span></span></threadsafe>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (object instance, object[] inputs, out object[] outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(object instance, object[] inputs, [out] object[]&amp; outputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (instance As Object, inputs As Object(), ByRef outputs As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(System::Object ^ instance, cli::array &lt;System::Object ^&gt; ^ inputs, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % outputs);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : obj * obj[] *  -&gt; obj" Usage="iOperationInvoker.Invoke (instance, inputs, outputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="outputs" Type="System.Object[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2d86f-112">호출할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-112">The object to be invoked.</span></span></param>
        <param name="inputs"><span data-ttu-id="2d86f-113">메서드에 대한 입력입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-113">The inputs to the method.</span></span></param>
        <param name="outputs"><span data-ttu-id="2d86f-114">메서드의 출력입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-114">The outputs from the method.</span></span></param>
        <summary><span data-ttu-id="2d86f-115">입력 개체 집합 및 인스턴스로부터 출력 개체 집합과 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-115">Returns an object and a set of output objects from an instance and set of input objects.</span></span></summary>
        <returns><span data-ttu-id="2d86f-116">반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-116">The return value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeBegin">
      <MemberSignature Language="C#" Value="public IAsyncResult InvokeBegin (object instance, object[] inputs, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult InvokeBegin(object instance, object[] inputs, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeBegin (instance As Object, inputs As Object(), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ InvokeBegin(System::Object ^ instance, cli::array &lt;System::Object ^&gt; ^ inputs, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member InvokeBegin : obj * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOperationInvoker.InvokeBegin (instance, inputs, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="inputs" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2d86f-117">호출할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-117">The object to be invoked.</span></span></param>
        <param name="inputs"><span data-ttu-id="2d86f-118">메서드에 대한 입력입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-118">The inputs to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="2d86f-119">비동기 콜백 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-119">The asynchronous callback object.</span></span></param>
        <param name="state"><span data-ttu-id="2d86f-120">연관된 상태 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-120">Associated state data.</span></span></param>
        <summary><span data-ttu-id="2d86f-121"><see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> 메서드의 비동기 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-121">An asynchronous implementation of the <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> method.</span></span></summary>
        <returns><span data-ttu-id="2d86f-122">비동기 호출을 계산하는 데 사용되는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-122">A <see cref="T:System.IAsyncResult" /> used to complete the asynchronous call.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEnd">
      <MemberSignature Language="C#" Value="public object InvokeEnd (object instance, out object[] outputs, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeEnd(object instance, [out] object[]&amp; outputs, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeEnd (instance As Object, ByRef outputs As Object(), result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeEnd(System::Object ^ instance, [Runtime::InteropServices::Out] cli::array &lt;System::Object ^&gt; ^ % outputs, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member InvokeEnd : obj *  * IAsyncResult -&gt; obj" Usage="iOperationInvoker.InvokeEnd (instance, outputs, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="outputs" Type="System.Object[]" RefType="out" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2d86f-123">호출된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-123">The object invoked.</span></span></param>
        <param name="outputs"><span data-ttu-id="2d86f-124">메서드의 출력입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-124">The outputs from the method.</span></span></param>
        <param name="result"><span data-ttu-id="2d86f-125"><see cref="T:System.IAsyncResult" /> 개체</span><span class="sxs-lookup"><span data-stu-id="2d86f-125">The <see cref="T:System.IAsyncResult" /> object.</span></span></param>
        <summary><span data-ttu-id="2d86f-126">비동기 End 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-126">The asynchronous end method.</span></span></summary>
        <returns><span data-ttu-id="2d86f-127">반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-127">The return value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronous">
      <MemberSignature Language="C#" Value="public bool IsSynchronous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronous : bool" Usage="System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d86f-128">디스패처에서 <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> 메서드를 호출할지 아니면 <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" /> 메서드를 호출할지를 지정하는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-128">Gets a value that specifies whether the <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" /> or <see cref="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" /> method is called by the dispatcher.</span></span></summary>
        <value><span data-ttu-id="2d86f-129">디스패처에서 동기 작업을 호출하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-129"><see langword="true" /> if the dispatcher invokes the synchronous operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d86f-130">기본 호출자는 기본적으로 동기 작업에 메시지를 디스패치합니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-130">The default invoker dispatches messages to the synchronous operation by default.</span></span> <span data-ttu-id="2d86f-131">이 값은 디스패처에서 캐시하므로 <xref:System.ServiceModel.Dispatcher.IOperationInvoker>를 구현하는 개체 수명 동안 변경되어서는 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2d86f-131">This value is cached by the dispatcher and therefore should not change over the lifetime of the object that implements <xref:System.ServiceModel.Dispatcher.IOperationInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>