<Type Name="XPathMessageFilterTable&lt;TFilterData&gt;" FullName="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;TFilterData&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9dcf6aadc4fdd522b6b88d81c15fcef0a68ee941" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52203317" /></Metadata><TypeSignature Language="C#" Value="public class XPathMessageFilterTable&lt;TFilterData&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;, System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XPathMessageFilterTable`1&lt;TFilterData&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt;, class System.Collections.IEnumerable, class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!TFilterData&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
  <TypeSignature Language="VB.NET" Value="Public Class XPathMessageFilterTable(Of TFilterData)&#xA;Implements ICollection(Of KeyValuePair(Of MessageFilter, TFilterData)), IDictionary(Of MessageFilter, TFilterData), IEnumerable(Of KeyValuePair(Of MessageFilter, TFilterData)), IMessageFilterTable(Of TFilterData)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TFilterData&gt;&#xA;public ref class XPathMessageFilterTable : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt;, System::ServiceModel::Dispatcher::IMessageFilterTable&lt;TFilterData&gt;" />
  <TypeSignature Language="F#" Value="type XPathMessageFilterTable&lt;'FilterData&gt; = class&#xA;    interface IMessageFilterTable&lt;'FilterData&gt;&#xA;    interface IDictionary&lt;MessageFilter, 'FilterData&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;MessageFilter, 'FilterData&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TFilterData" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TFilterData"><span data-ttu-id="dcf77-101">테이블에서 각 필터에 연결된 필터 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-101">The type of the filter data associated with each filter in the table.</span></span></typeparam>
    <summary><span data-ttu-id="dcf77-102">효율적인 일치를 위해 필터/데이터 쌍의 컬렉션을 보유합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-102">Holds a collection of filter/data pairs for efficient matching.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-103"><xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> 인터페이스를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-103">The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> implements the <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> interface.</span></span> <span data-ttu-id="dcf77-104">이 필터 테이블은 선언적 XPath 필터에 대해서 최적화되므로 테이블 키는 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-104">This filter table is optimized for declarative XPath filters, so the table key is a <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.</span></span>  
  
 <span data-ttu-id="dcf77-105"><xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> 클래스는 메시징 시나리오 대부분을 포함하는 XPath의 하위 집합에 대한 일치를 최적화하고, 전체 XPath 1.0 문법도 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-105">The <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601> class optimizes matching for a subset of XPath that covers most of the messaging scenarios and also supports the full XPath 1.0 grammar.</span></span> <span data-ttu-id="dcf77-106">효율적인 병렬 일치를 위한 알고리즘을 최적화합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-106">It has optimized algorithms for efficient parallel matching.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcf77-107"><see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilterTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilterTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcf77-108"><see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageFilterTable (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageFilterTable(int capacity);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt; : int -&gt; System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;" Usage="new System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="dcf77-109">테이블의 초기 용량입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-109">Initial capacity of the table.</span></span></param>
        <summary><span data-ttu-id="dcf77-110"><see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcf77-111"><see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 및 연관된 <paramref name="FilterData" />를 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-111">Adds an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> and its associated <paramref name="FilterData" /> to the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; unit&#xA;override this.Add : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; unit" Usage="xPathMessageFilterTable.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="dcf77-112">테이블에 추가할 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;필터, <c>FilterData</c>&gt;입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-112">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to add to the table.</span></span></param>
        <summary><span data-ttu-id="dcf77-113">필터/<paramref name="FilterData" />(키/값) 쌍을 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-113">Adds a filter/<paramref name="FilterData" /> (key/value) pair to the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-114">이 메서드는 <xref:System.Collections.Generic.ICollection%601.Add%2A><xref:System.Collections.Generic.ICollection%601>클래스의  메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-114">This method implements the <xref:System.Collections.Generic.ICollection%601.Add%2A> method of the <xref:System.Collections.Generic.ICollection%601> class.</span></span>  <span data-ttu-id="dcf77-115">강력한 형식의 오버로드인 `filter`를 사용하여 <xref:System.ServiceModel.Dispatcher.MessageFilter> 매개 변수가 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 형식에서 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>로 암시적으로 변환되는 것을 방지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-115">The implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-116"><paramref name="filter" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-116"><paramref name="filter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="dcf77-117">컴파일러 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-117">A compiler error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.MessageFilter filter, TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ServiceModel.Dispatcher.MessageFilter filter, !TFilterData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As MessageFilter, data As TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData data);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData -&gt; unit&#xA;override this.Add : System.ServiceModel.Dispatcher.MessageFilter * 'FilterData -&gt; unit" Usage="xPathMessageFilterTable.Add (filter, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="dcf77-118">추가된 쌍의 키로 사용되는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-118">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> used as the key of the pair added.</span></span> <span data-ttu-id="dcf77-119"><see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />의 인스턴스여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-119">Must be an instance of <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span></span></param>
        <param name="data"><span data-ttu-id="dcf77-120">추가된 쌍의 값으로 사용되며 필터와 연결된 <c>FilterData</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-120">The <c>FilterData</c> associated with the filter used as the value of the pair added.</span></span></param>
        <summary><span data-ttu-id="dcf77-121">필터/데이터 쌍을 필터 테이블에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-121">Adds a filter/data pair to the filter table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-122">강력한 형식의 오버로드인 `filter`를 사용하여 <xref:System.ServiceModel.Dispatcher.MessageFilter> 매개 변수가 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>에서 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>로 내부적으로 변환되는 것을 방지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-122">The internal conversion of the `filter` parameter from <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> can be avoided by using the strongly-typed overload, <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-123"><paramref name="filter" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-123"><paramref name="filter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="dcf77-124"><paramref name="filter" />이 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-124"><paramref name="filter" /> is not an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="dcf77-125">컴파일러 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-125">A compiler error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ServiceModel.Dispatcher.XPathMessageFilter filter, TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ServiceModel.Dispatcher.XPathMessageFilter filter, !TFilterData data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (filter As XPathMessageFilter, data As TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ServiceModel::Dispatcher::XPathMessageFilter ^ filter, TFilterData data);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ServiceModel.Dispatcher.XPathMessageFilter * 'FilterData -&gt; unit" Usage="xPathMessageFilterTable.Add (filter, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.XPathMessageFilter" />
        <Parameter Name="data" Type="TFilterData" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="dcf77-126">추가된 쌍의 키로 사용되는 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-126">The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> used as the key of the pair added.</span></span></param>
        <param name="data"><span data-ttu-id="dcf77-127">추가된 쌍의 값으로 사용되며 필터와 연결된 <c>FilterData</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-127">The <c>FilterData</c> associated with the filter; used as the value of the pair added.</span></span></param>
        <summary><span data-ttu-id="dcf77-128">필터/데이터 쌍을 필터 테이블에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-128">Adds a filter/data pair to the filter table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-129"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter>를 필터 테이블에 추가하는 작업을 위해 강력한 형식의 오버로드를 제공합니다. 이 오버로드는 `filter` 매개 변수가 <xref:System.ServiceModel.Dispatcher.MessageFilter> 형식에서 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>로 암시적으로 변환되는 것을 방지하므로 약한 형식의 오버로드보다 수행 성능이 우수합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-129">This provides a strongly-typed overload for adding an <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> to the filter table that performs better than the weakly-typed overload because it avoids implicit conversion of the `filter` parameter from type <xref:System.ServiceModel.Dispatcher.MessageFilter> to the <xref:System.ServiceModel.Dispatcher.XPathMessageFilter>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-130"><paramref name="filter" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-130"><paramref name="filter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="dcf77-131">컴파일러 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-131">A compiler error occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="xPathMessageFilterTable.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcf77-132">모든 필터/데이터 쌍을 필터 테이블에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-132">Removes all filter/data pairs from the filter table.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="dcf77-133"><see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt;는 테이블에서 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-133">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />, <c>FilterData</c>&gt; to find in the table.</span></span></param>
        <summary><span data-ttu-id="dcf77-134">지정된 필터 및 그 필터와 연결된 <paramref name="FilterData" />가 필터 테이블에 포함되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-134">Determines whether the filter table contains a specified filter and its associated <paramref name="FilterData" />.</span></span></summary>
        <returns><span data-ttu-id="dcf77-135">필터/*FilterData* 쌍이 필터 테이블에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-135"><see langword="true" /> if the filter/*FilterData* pair is contained in the filter table; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-136">필터가 있지만 다른 데이터에 해당하는 경우 이 메서드는 `false`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-136">This method returns `false` if the filter is found but corresponds to different data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool&#xA;override this.ContainsKey : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool" Usage="xPathMessageFilterTable.ContainsKey filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="dcf77-137">테스트되는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-137">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> being tested for.</span></span></param>
        <summary><span data-ttu-id="dcf77-138">지정된 필터가 필터 테이블에 포함되는지 여부를 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-138">Determines whether the filter table contains a specified filter.</span></span></summary>
        <returns><span data-ttu-id="dcf77-139"><see langword="true" />가 필터 테이블에 포함되면 <paramref name="filter" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-139"><see langword="true" /> if the <paramref name="filter" /> is contained in the filter table; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-140">이 메서드는 `ContainsKey`의 <xref:System.Collections.Generic.IDictionary%602> 메서드를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-140">This method implements the `ContainsKey` method of <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of MessageFilter, TFilterData)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;[] * int -&gt; unit" Usage="xPathMessageFilterTable.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="dcf77-141">쌍을 복사할 대상인 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;필터, <c>FilterData</c>&gt; 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-141">The array of type <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to which the pairs are being copied.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="dcf77-142">복사를 시작할 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-142">The index at which to begin copying.</span></span></param>
        <summary><span data-ttu-id="dcf77-143">필터/<paramref name="FilterData" /> 쌍을 지정된 인덱스에서 시작하는 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-143">Copies the filter/<paramref name="FilterData" /> pairs to an array that starts at a specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcf77-144">필터 테이블에 현재 존재하는 필터/데이터 쌍의 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-144">Gets the number of filter/data pairs currently in the filter table.</span></span></summary>
        <value><span data-ttu-id="dcf77-145">필터 테이블에 현재 존재하는 필터/데이터 쌍의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-145">The number of filter/data pairs currently in the filter table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of MessageFilter, TFilterData))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt;&gt;" Usage="xPathMessageFilterTable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcf77-146">필터 테이블에서 반복할 수 있는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-146">Returns an enumerator that can iterate through the filter table.</span></span></summary>
        <returns><span data-ttu-id="dcf77-147">필터 테이블에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;필터, FilterData&gt;&gt;입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-147">An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; that can be used to iterate through the filter table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-148">이 메서드는 <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-148">This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilter">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcf77-149">@FSHO1@지정한 메시지 또는 버퍼링된 메시지가 테이블에서 정확히 한 필터의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 <see langword="out" /> 매개 변수에 해당 필터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-149">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-150">메시지가 필터 테이블에 있는 필터 중 정확히 하나를 충족하는지 여부를 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-150">Tests whether a message satisfies exactly one of the filters in the filter table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.Message message, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.Message *  -&gt; bool&#xA;override this.GetMatchingFilter : System.ServiceModel.Channels.Message *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilter (message, filter)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="dcf77-151">테스트할 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-151">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="filter"><span data-ttu-id="dcf77-152"><see langword="out" />가 충족하는 필터를 저장하는 <paramref name="message" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-152">The <see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="message" />.</span></span> <span data-ttu-id="dcf77-153">필터가 없을 경우 이 매개 변수는 기본값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-153">If no filter was found, the parameter is set to its default value.</span></span></param>
        <summary><span data-ttu-id="dcf77-154">@FSHO1@지정한 메시지가 테이블에서 정확히 한 필터의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, <see langword="out" /> 매개 변수에 해당 필터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-154">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message and returns that filter in an <see langword="out" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="dcf77-155">메시지가 충족하는 쿼리 조건을 가진 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다. 일치하는 필터가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-155">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the message; or <see langword="null" /> if no filters are found to match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-156">메시지와 일치하는 필터가 한 개로 예상되고 일치하는 필터가 필수적 요소인 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-156">Use this method when a single filter is expected to match the message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="dcf77-157">이 메서드는 가장 높은 우선 순위의 필터 버킷에서 단일 필터 일치가 있는지 테스트합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-157">This method tests for a single filter match in the highest priority bucket of filters.</span></span> <span data-ttu-id="dcf77-158">테이블에 있는 필터는 메시지 본문을 검사할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-158">The filters in the table are not allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="dcf77-159">메시지와 일치하는 필터가 두 개 이상 예상되는 경우 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-159">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 <span data-ttu-id="dcf77-160">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-160">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-161"><paramref name="message" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-161"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="dcf77-162">두 개 이상의 필터가 <paramref name="message" />와 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-162">More than one filter matches the <paramref name="message" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException"><span data-ttu-id="dcf77-163">필터에서 메시지 본문의 콘텐츠를 검사하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-163">A filter attempted to examine the contents of the message body.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Channels.MessageBuffer messageBuffer, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilter(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilter(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool&#xA;override this.GetMatchingFilter : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilter (messageBuffer, filter)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="dcf77-164">테스트할 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-164">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="filter"><span data-ttu-id="dcf77-165"><see langword="out" />가 충족하는 필터를 저장하는 <paramref name="message" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-165">The <see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="message" />.</span></span> <span data-ttu-id="dcf77-166">필터가 없을 경우 이 매개 변수는 기본값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-166">If no filter was found, the parameter is set to its default value.</span></span></param>
        <summary><span data-ttu-id="dcf77-167">@FSHO1@지정한 메시지 또는 버퍼링된 메시지가 테이블에서 정확히 한 필터의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 <see langword="out" /> 매개 변수에 해당 필터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-167">Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="dcf77-168">버퍼링된 메시지가 충족하는 쿼리 조건을 가진 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다. 일치하는 필터가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-168">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the buffered message; or <see langword="null" /> if no filters are found to match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-169">버퍼링된 메시지와 일치하는 필터가 한 개로 예상되고 일치하는 필터가 필수적 요소인 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-169">Use this method when a single filter is expected to match the buffered message and the matching filter is required.</span></span>  
  
 <span data-ttu-id="dcf77-170">테이블에 있는 필터는 메시지 본문을 검사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-170">The filters in the table are allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="dcf77-171">메시지와 일치하는 필터가 두 개 이상 예상되는 경우 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-171">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 <span data-ttu-id="dcf77-172">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-172">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-173"><paramref name="messageBuffer" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-173"><paramref name="messageBuffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="dcf77-174">두 개 이상의 필터가 <paramref name="messageBuffer" />와 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-174">More than one filter matches the <paramref name="messageBuffer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilter(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (navigator As SeekableXPathNavigator, ByRef filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingFilter : System.ServiceModel.Dispatcher.SeekableXPathNavigator *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilter (navigator, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="dcf77-175">테스트할 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-175">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span></span></param>
        <param name="filter"><span data-ttu-id="dcf77-176"><see langword="out" />가 충족하는 필터를 저장하는 <paramref name="message" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-176">The <see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="message" />.</span></span> <span data-ttu-id="dcf77-177">필터가 없을 경우 이 매개 변수는 기본값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-177">If no filter was found, the parameter is set to its default value.</span></span></param>
        <summary><span data-ttu-id="dcf77-178">지정한 메시지 또는 버퍼링된 메시지가 테이블에서 정확히 한 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 <see langword="out" /> 매개 변수에 해당 필터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-178">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="dcf77-179">검색기가 충족하는 쿼리 조건을 가진 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다. 일치하는 필터가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-179">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the navigator; or <see langword="null" /> if no filters are found to match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-180"><xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>에서 지정한 메시지와 일치하는 필터가 한 개로 예상되고 일치하는 필터가 필수 요소인 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-180">Use this method when a single filter is expected to match the message specified by the <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and the matching filter is required.</span></span>  
  
 <span data-ttu-id="dcf77-181">메시지와 일치하는 필터가 두 개 이상 예상되는 경우 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-181">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-182"><paramref name="navigator" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-182"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="dcf77-183">두 개 이상의 필터가 <paramref name="navigator" />와 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-183">More than one filter matches the <paramref name="navigator" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilter">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilter (System.Xml.XPath.XPathNavigator navigator, out System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilter(class System.Xml.XPath.XPathNavigator navigator, [out] class System.ServiceModel.Dispatcher.MessageFilter&amp; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilter (navigator As XPathNavigator, ByRef filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilter(System::Xml::XPath::XPathNavigator ^ navigator, [Runtime::InteropServices::Out] System::ServiceModel::Dispatcher::MessageFilter ^ % filter);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingFilter : System.Xml.XPath.XPathNavigator *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilter (navigator, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="dcf77-184">테스트할 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-184">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span></span></param>
        <param name="filter"><span data-ttu-id="dcf77-185"><see langword="out" />가 충족하는 필터를 저장하는 <paramref name="navigator" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-185">The <see langword="out" /> parameter that stores the filter that is satisfied by the <paramref name="navigator" />.</span></span> <span data-ttu-id="dcf77-186">필터가 없을 경우 이 매개 변수는 기본값으로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-186">If no filter was found, the parameter is set to its default value.</span></span></param>
        <summary><span data-ttu-id="dcf77-187">지정한 메시지 또는 버퍼링된 메시지가 테이블에서 정확히 한 <see cref="T:System.Xml.XPath.XPathNavigator" />의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 <see langword="out" /> 매개 변수에 해당 필터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-187">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the specified message or buffered message and returns that filter in an <see langword="out" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="dcf77-188">검색기가 충족하는 쿼리 조건을 가진 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다. 일치하는 필터가 없으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-188">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> whose query criteria are satisfied by the navigator; or <see langword="null" /> if no filters are found to match.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-189"><xref:System.Xml.XPath.XPathNavigator>에서 지정한 메시지와 일치하는 필터가 한 개로 예상되고 일치하는 필터가 필수 요소인 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-189">Use this method when a single filter is expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filter is required.</span></span>  
  
 <span data-ttu-id="dcf77-190">메시지와 일치하는 필터가 두 개 이상 예상되는 경우 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-190">If more than one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-191"><paramref name="navigator" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-191"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="dcf77-192">두 개 이상의 필터가 <paramref name="navigator" />와 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-192">More than one filter matches the <paramref name="navigator" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingFilters">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcf77-193">지정된 XML 문서가 테이블에서 한 필터의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 일치하는 필터를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-193">Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified XML document and adds the matching filters to a collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-194">메시지와 일치하도록 두 개 이상의 필터가 있어야 하고 일치하는 필터가 필요한 경우 이 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="dcf77-194">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool&#xA;override this.GetMatchingFilters : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilters (message, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="dcf77-195">테스트할 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-195">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="dcf77-196"><see cref="T:System.Collections.Generic.ICollection`1" />&lt;필터&gt;와 일치하는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 개체를 저장하는 참조 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-196">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span></span></param>
        <summary><span data-ttu-id="dcf77-197">지정한 메시지가 테이블에 있는 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 일치하는 필터를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-197">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified message and adds the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="dcf77-198"><see langword="true" />가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하면 <paramref name="message" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-198"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-199">메시지와 일치하도록 두 개 이상의 필터가 있어야 하고 일치하는 필터가 필요한 경우 이 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="dcf77-199">Use this method when more than one filter is expected to match the message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="dcf77-200">테이블에 있는 필터는 메시지 본문을 검사할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-200">The filters in the table are not allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="dcf77-201">일치하는 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 개체는 `results`의 <xref:System.Collections.Generic.ICollection%601> 매개 변수에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-201">The matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="dcf77-202">그런 다음 `FilterData`에서 제공하는 메서드를 통해 이러한 필터를 키로 사용하여 필터 테이블에서 <xref:System.Collections.Generic.IDictionary%602>를 복구할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-202">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="dcf77-203">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-203">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-204"><paramref name="results" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-204"><paramref name="results" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException"><span data-ttu-id="dcf77-205">필터에서 메시지 본문의 콘텐츠를 검사하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-205">A filter attempted to examine the contents of the message body.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingFilters(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingFilters(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingFilters : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool&#xA;override this.GetMatchingFilters : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilters (messageBuffer, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="dcf77-206">테스트할 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-206">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="dcf77-207"><see cref="T:System.Collections.Generic.ICollection`1" />&lt;필터&gt;와 일치하는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 개체를 저장하는 참조 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-207">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span></span></param>
        <summary><span data-ttu-id="dcf77-208">지정한 버퍼링된 메시지가 테이블에 있는 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 일치하는 필터를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-208">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="dcf77-209"><see langword="true" />가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하면 <paramref name="messageBuffer" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-209"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-210">버퍼링된 메시지와 일치하는 여러 개의 필터가 예상되고 일치하는 필터가 필수적 요소인 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-210">Use this method when more than one filter is expected to match the buffered message and the matching filters are required.</span></span>  
  
 <span data-ttu-id="dcf77-211">테이블에 있는 필터는 메시지 본문을 검사할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-211">The filters in the table are allowed to inspect the message body.</span></span>  
  
 <span data-ttu-id="dcf77-212">일치하는 <xref:System.ServiceModel.Dispatcher.MessageFilter> 개체는 `results`의 <xref:System.Collections.Generic.ICollection%601> 매개 변수에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-212">The matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span> <span data-ttu-id="dcf77-213">그런 다음 `FilterData`에서 제공하는 메서드를 통해 이러한 필터를 키로 사용하여 필터 테이블에서 <xref:System.Collections.Generic.IDictionary%602>를 복구할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-213">The `FilterData` can then be recovered from the filter table using these filters as keys with the methods provided by <xref:System.Collections.Generic.IDictionary%602>.</span></span>  
  
 <span data-ttu-id="dcf77-214">이 메서드는 <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-214">This method implements <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601.GetMatchingFilters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-215"><paramref name="results" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-215"><paramref name="results" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilters(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (navigator As SeekableXPathNavigator, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingFilters : System.ServiceModel.Dispatcher.SeekableXPathNavigator * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilters (navigator, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="dcf77-216">테스트할 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-216">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="dcf77-217"><see cref="T:System.Collections.Generic.ICollection`1" />&lt;필터&gt;와 일치하는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 개체를 저장하는 참조 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-217">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span></span></param>
        <summary><span data-ttu-id="dcf77-218">지정한 버퍼링된 메시지가 테이블에 있는 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 일치하는 필터를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-218">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="dcf77-219"><see langword="true" />가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하면 <paramref name="messageBuffer" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-219"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-220">둘 이상의 필터가 검색기와 일치할 것으로 예상되고, 일치하는 필터가 필수 요소인 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-220">Use this method when more than one filter is expected to match the navigator and the matching filters are required.</span></span>  
  
 <span data-ttu-id="dcf77-221">메시지와 일치하는 필터가 하나만 예상되는 경우 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-221">If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-222"><paramref name="results" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-222"><paramref name="results" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingFilters">
      <MemberSignature Language="C#" Value="public bool GetMatchingFilters (System.Xml.XPath.XPathNavigator navigator, System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingFilters(class System.Xml.XPath.XPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingFilters (navigator As XPathNavigator, results As ICollection(Of MessageFilter)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingFilters(System::Xml::XPath::XPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ results);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingFilters : System.Xml.XPath.XPathNavigator * System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingFilters (navigator, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="dcf77-223">테스트할 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-223">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="dcf77-224"><see cref="T:System.Collections.Generic.ICollection`1" />&lt;필터&gt;와 일치하는 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> 개체를 저장하는 참조 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-224">The reference parameter that stores the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects that match in <see cref="T:System.Collections.Generic.ICollection`1" />&lt;Filter&gt;.</span></span></param>
        <summary><span data-ttu-id="dcf77-225">지정한 버퍼링된 메시지가 테이블에 있는 <see cref="T:System.Xml.XPath.XPathNavigator" /> 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 일치하는 필터를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-225">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the specified buffered message and adds the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="dcf77-226"><see langword="true" />가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하면 <paramref name="messageBuffer" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-226"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="messageBuffer" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-227"><xref:System.Xml.XPath.XPathNavigator>에서 지정한 메시지와 일치하는 필터가 여러 개 예상되고 일치하는 필터가 필수적 요소인 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-227">Use this method when multiple filters can be expected to match the message specified by the <xref:System.Xml.XPath.XPathNavigator> and the matching filters are required.</span></span>  
  
 <span data-ttu-id="dcf77-228">메시지와 일치하는 필터가 하나만 예상되는 경우 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-228">If only one filter is expected to match the message, use the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingFilter%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-229"><paramref name="matches" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-229"><paramref name="matches" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValue">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcf77-230">지정한 문서 개체가 테이블에서 정확히 한 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터 데이터를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-230">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified document object and adds the matching filter data to a collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-231">문서 개체와 일치하는 필터가 한 개로 예상되고 일치하는 필터의 `FilterData`만 복구해야 하는 경우 이러한 메서드 중 하나를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-231">Use one of these four methods when a single filter is expected to match the document object and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="dcf77-232">처음 두 메서드는의 구현 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-232">The first two methods are implementations of <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>.</span></span>  
  
 <span data-ttu-id="dcf77-233">본문 내용을 검사할 필요가 없으면 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-233">Use <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> if the body content does not require examination.</span></span> <span data-ttu-id="dcf77-234">메시지 본문 내용을 검사해야 하면 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-234">Use <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> if the contents of the message body may require examination.</span></span>  
  
 <span data-ttu-id="dcf77-235">나머지 두 메서드는 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>에 특정한 오버로드입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-235">The remaining two methods are overloads specific to <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>.</span></span> <span data-ttu-id="dcf77-236">탐색기를 통해 제공되는 문서를 필터링하려면 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> 또는 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-236">To filter on a document provided through a navigator, use <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A> or <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.Message message, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.Message message, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.Message *  -&gt; bool&#xA;override this.GetMatchingValue : System.ServiceModel.Channels.Message *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValue (message, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="dcf77-237">테스트할 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-237">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="data"><span data-ttu-id="dcf77-238"><paramref name="message" />와 일치하는 필터에 대한 <c>FilterData</c>를 저장하는 <see langword="out" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-238">The <see langword="out" /> parameter that stores the <c>FilterData</c> for the filter that matches the <paramref name="message" />.</span></span></param>
        <summary><span data-ttu-id="dcf77-239">지정한 메시지가 테이블에서 정확히 한 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 일치하는 필터 데이터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-239">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified message and returns the matching filter data.</span></span></summary>
        <returns><span data-ttu-id="dcf77-240">메시지가 테이블에 있는 필터 중 하나의 일치 조건을 충족하면 <see langword="true" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-240"><see langword="true" /> if the match criterion of one filter in the table is satisfied by the message; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-241">메시지와 일치하는 필터가 한 개로 예상되고 일치하는 필터의 `FilterData`만 복구해야 하는 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-241">Use this method when a single filter is expected to match the message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="dcf77-242">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-242">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-243"><paramref name="message" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-243"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="dcf77-244">두 개 이상의 필터가 <paramref name="message" />와 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-244">More than one filter matches the <paramref name="message" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Channels.MessageBuffer messageBuffer, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValue(class System.ServiceModel.Channels.MessageBuffer messageBuffer, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValue(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValue : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool&#xA;override this.GetMatchingValue : System.ServiceModel.Channels.MessageBuffer *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValue (messageBuffer, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="dcf77-245">테스트할 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-245">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="data"><span data-ttu-id="dcf77-246"><paramref name="messageBuffer" />와 일치하는 필터에 대한 <c>FilterData</c>를 저장하는 <see langword="out" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-246">The <see langword="out" /> parameter that stores the <c>FilterData</c> for the filter that matches the <paramref name="messageBuffer" />.</span></span></param>
        <summary><span data-ttu-id="dcf77-247">지정한 버퍼링된 메시지가 테이블에서 정확히 한 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 일치하는 필터 데이터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-247">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> in the table is satisfied by the specified buffered message and returns the matching filter data.</span></span></summary>
        <returns><span data-ttu-id="dcf77-248">버퍼링된 메시지가 테이블에 있는 필터 중 하나의 일치 조건을 충족하면 <see langword="true" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-248"><see langword="true" /> if the match criterion of one filter in the table is satisfied by the buffered message; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-249">버퍼링된 메시지와 일치하는 필터가 한 개로 예상되고 일치하는 필터의 `FilterData`만 복구해야 하는 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-249">Use this method when a single filter is expected to match the buffered message and only the `FilterData` from the matching filter must be recovered.</span></span>  
  
 <span data-ttu-id="dcf77-250">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-250">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-251"><paramref name="message" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-251"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="dcf77-252">두 개 이상의 필터가 <paramref name="messageBuffer" />와 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-252">More than one filter matches the <paramref name="messageBuffer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValue(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (navigator As SeekableXPathNavigator, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingValue : System.ServiceModel.Dispatcher.SeekableXPathNavigator *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValue (navigator, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="dcf77-253">테스트할 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-253">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span></span></param>
        <param name="data"><span data-ttu-id="dcf77-254"><paramref name="navigator" />와 일치하는 <c>FilterData</c>를 저장하는 <see langword="out" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-254">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <paramref name="navigator" />.</span></span></param>
        <summary><span data-ttu-id="dcf77-255"><see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />가 테이블에서 정확히 한 <paramref name="navigator" />의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 <see langword="out" /> 매개 변수에 일치하는 필터의 필터 데이터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-255">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and returns the filter data of the matching filter in an <see langword="out" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="dcf77-256"><paramref name="navigator" />가 테이블에서 정확히 한 필터의 일치 조건을 충족하면 <see langword="true" />이고, 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-256"><see langword="true" /> if the match criterion of exactly one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-257">메시지가 충족해야 하는 XPath 조건을 지정하려면 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-257">Use this method to specify an XPath condition that the message must meet.</span></span>  
  
 <span data-ttu-id="dcf77-258">이 메서드는 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>와 비슷합니다. 다만, 다양한 최적화를 허용하는 메서드를 포함하도록 <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>의 기능을 확장한 <xref:System.Xml.XPath.XPathNavigator>를 사용한다는 점이 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-258">This method is similar to <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.GetMatchingValue%2A>, except that it uses a <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>, which extends the functionality of the <xref:System.Xml.XPath.XPathNavigator> to include methods that allow various optimizations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-259"><paramref name="navigator" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-259"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="dcf77-260">두 개 이상의 필터가 <paramref name="navigator" />와 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-260">More than one filter matches the <paramref name="navigator" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValue">
      <MemberSignature Language="C#" Value="public bool GetMatchingValue (System.Xml.XPath.XPathNavigator navigator, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValue(class System.Xml.XPath.XPathNavigator navigator, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValue (navigator As XPathNavigator, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValue(System::Xml::XPath::XPathNavigator ^ navigator, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingValue : System.Xml.XPath.XPathNavigator *  -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValue (navigator, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="dcf77-261">테스트할 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-261">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span></span></param>
        <param name="data"><span data-ttu-id="dcf77-262"><paramref name="navigator" />와 일치하는 <c>FilterData</c>를 저장하는 <see langword="out" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-262">The <see langword="out" /> parameter that stores the <c>FilterData</c> that matches the <paramref name="navigator" />.</span></span></param>
        <summary><span data-ttu-id="dcf77-263"><see cref="T:System.Xml.XPath.XPathNavigator" />가 테이블에서 정확히 한 <paramref name="navigator" />의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고 <see langword="out" /> 매개 변수에 일치하는 필터의 필터 데이터를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-263">Returns a value that indicates whether the match criterion of exactly one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and returns the filter data of the matching filter in an <see langword="out" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="dcf77-264"><paramref name="navigator" />가 테이블에서 정확히 한 필터의 일치 조건을 충족하면 <see langword="true" />이고, 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-264"><see langword="true" /> if the match criterion of exactly one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-265">메시지가 충족해야 하는 XPath 조건을 지정하려면 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-265">Use this method to specify an XPath condition that the message must meet.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-266"><paramref name="navigator" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-266"><paramref name="navigator" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException"><span data-ttu-id="dcf77-267">두 개 이상의 필터가 <paramref name="navigator" />와 일치하는 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-267">More than one filter matches the <paramref name="navigator" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMatchingValues">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcf77-268">지정한 메시지 또는 버퍼링된 메시지가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터의 <paramref name="FilterData" />를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-268">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message or buffered message and adds the <paramref name="FilterData" /> of the matching filters to a collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-269">메시지 또는 버퍼링된 메시지와 일치하는 여러 개의 필터가 예상되고 `FilterData`만이 필수 요소인 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-269">Use this method when more than one filter is expected to match the message or buffered message and only the `FilterData` is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.Message message, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.Message message, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::Message ^ message, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool&#xA;override this.GetMatchingValues : System.ServiceModel.Channels.Message * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValues (message, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="dcf77-270">테스트할 <see cref="T:System.ServiceModel.Channels.Message" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-270">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="dcf77-271">일치하는 필터의 필터 데이터를 일반 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;에 저장하는 참조 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-271">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span></span></param>
        <summary><span data-ttu-id="dcf77-272">지정한 메시지가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터의 필터 데이터를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-272">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message and adds the filter data of the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="dcf77-273"><see langword="true" />가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하면 <paramref name="message" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-273"><see langword="true" /> if match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-274">메시지와 일치하는 필터가 여러 개로 예상되고, 필터 데이터만이 필수 요소이며, 메시지 본문을 검사하지 않는 경우 이 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-274">Use this method when more than one filter is expected to match the message, only the filter data is required, and the body of the message is not inspected.</span></span>  
  
 <span data-ttu-id="dcf77-275">일치하는 <xref:System.ServiceModel.Dispatcher.MessageFilter> 개체의 필터 데이터는 `results`의 <xref:System.Collections.Generic.ICollection%601> 매개 변수에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-275">The filter data of the matching <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="dcf77-276">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-276">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-277"><paramref name="results" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-277"><paramref name="results" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException"><span data-ttu-id="dcf77-278">필터에서 메시지 본문의 콘텐츠를 검사하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-278">A filter attempted to examine the contents of the message body.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Channels.MessageBuffer messageBuffer, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatchingValues(class System.ServiceModel.Channels.MessageBuffer messageBuffer, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetMatchingValues(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetMatchingValues : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool&#xA;override this.GetMatchingValues : System.ServiceModel.Channels.MessageBuffer * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValues (messageBuffer, results)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="dcf77-279">테스트할 <see cref="T:System.ServiceModel.Channels.MessageBuffer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-279">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="dcf77-280">일치하는 필터의 필터 데이터를 일반 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;에 저장하는 참조 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-280">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span></span></param>
        <summary><span data-ttu-id="dcf77-281">지정한 버퍼링된 메시지가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터의 필터 데이터를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-281">Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message and adds the filter data of the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="dcf77-282"><see langword="true" />가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하면 <paramref name="message" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-282"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by <paramref name="message" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-283">버퍼링된 메시지와 일치하는 필터가 여러 개 예상되고 필터 데이터만이 필수 요소인 경우 이 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="dcf77-283">Use this method when more than one filter is expected to match the buffered message and only the filter data is required.</span></span>  
  
 <span data-ttu-id="dcf77-284">일치하는 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 개체의 필터 데이터는 `results`<xref:System.Collections.Generic.ICollection%601>에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-284">The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results`<xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="dcf77-285">이 메서드는 <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-285">This method implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-286"><paramref name="results" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-286"><paramref name="results" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValues(class System.ServiceModel.Dispatcher.SeekableXPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (navigator As SeekableXPathNavigator, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::ServiceModel::Dispatcher::SeekableXPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingValues : System.ServiceModel.Dispatcher.SeekableXPathNavigator * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValues (navigator, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="dcf77-287">테스트할 <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-287">The <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="dcf77-288">일치하는 필터의 필터 데이터를 일반 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;에 저장하는 참조 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-288">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span></span></param>
        <summary><span data-ttu-id="dcf77-289"><see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />가 테이블에 있는 <paramref name="navigator" /> 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터의 필터 데이터를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-289">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and adds the filter data of the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="dcf77-290"><see langword="true" />가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하면 <paramref name="navigator" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-290"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-291">최적화된 XPath 검색기 <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>에서 파생된 XML 문서의 쿼리 기준과 일치하는 필터가 두 개 이상 예상되고 필터 데이터만이 필수 요소인 경우 이 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="dcf77-291">Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.</span></span>  
  
 <span data-ttu-id="dcf77-292">일치하는 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 개체의 필터 데이터는 `results`의 <xref:System.Collections.Generic.ICollection%601> 매개 변수에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-292">The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-293"><paramref name="results" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-293"><paramref name="results" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingValues">
      <MemberSignature Language="C#" Value="public bool GetMatchingValues (System.Xml.XPath.XPathNavigator navigator, System.Collections.Generic.ICollection&lt;TFilterData&gt; results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetMatchingValues(class System.Xml.XPath.XPathNavigator navigator, class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchingValues (navigator As XPathNavigator, results As ICollection(Of TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetMatchingValues(System::Xml::XPath::XPathNavigator ^ navigator, System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ results);" />
      <MemberSignature Language="F#" Value="member this.GetMatchingValues : System.Xml.XPath.XPathNavigator * System.Collections.Generic.ICollection&lt;'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.GetMatchingValues (navigator, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="results" Type="System.Collections.Generic.ICollection&lt;TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="navigator"><span data-ttu-id="dcf77-294">테스트할 <see cref="T:System.Xml.XPath.XPathNavigator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-294">The <see cref="T:System.Xml.XPath.XPathNavigator" /> to test.</span></span></param>
        <param name="results"><span data-ttu-id="dcf77-295">일치하는 필터의 필터 데이터를 일반 <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;에 저장하는 참조 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-295">The reference parameter that stores the filter data of the matching filters in a generic <see cref="T:System.Collections.Generic.ICollection`1" />&lt;<c>FilterData</c>&gt;.</span></span></param>
        <summary><span data-ttu-id="dcf77-296"><see cref="T:System.Xml.XPath.XPathNavigator" />가 테이블에 있는 <paramref name="navigator" /> 중 적어도 하나의 일치 조건을 충족하는지 여부를 나타내는 값을 반환하고, 일치하는 필터의 필터 데이터를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-296">Returns a value that indicates whether the match criterion of at least one <see cref="T:System.Xml.XPath.XPathNavigator" /> in the table is satisfied by the <paramref name="navigator" /> and adds the filter data of the matching filters to a collection.</span></span></summary>
        <returns><span data-ttu-id="dcf77-297"><see langword="true" />가 테이블에 있는 필터 중 적어도 하나의 일치 조건을 충족하면 <paramref name="navigator" />이고 조건을 충족하는 필터가 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-297"><see langword="true" /> if the match criterion of at least one filter in the table is satisfied by the <paramref name="navigator" />; <see langword="false" /> if no filter is satisfied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-298">최적화된 XPath 검색기 <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator>에서 파생된 XML 문서의 쿼리 기준과 일치하는 필터가 두 개 이상 예상되고 필터 데이터만이 필수 요소인 경우 이 메서드를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="dcf77-298">Use this method when more than one filter is expected to match the query criteria of the XML document derived from the optimized XPath navigator <xref:System.ServiceModel.Dispatcher.SeekableXPathNavigator> and only the filter data is required.</span></span>  
  
 <span data-ttu-id="dcf77-299">일치하는 <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> 개체의 필터 데이터는 `results`의 <xref:System.Collections.Generic.ICollection%601> 매개 변수에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-299">The filter data of the matching <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> objects are stored in the `results` parameter of <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-300"><paramref name="results" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-300"><paramref name="results" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcf77-301"><see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />이 읽기 전용이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-301">The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" /> is not read-only.</span></span></summary>
        <value><span data-ttu-id="dcf77-302">항상 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-302">Always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TFilterData this[System.ServiceModel.Dispatcher.MessageFilter filter] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TFilterData Item(class System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(filter As MessageFilter) As TFilterData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TFilterData default[System::ServiceModel::Dispatcher::MessageFilter ^] { TFilterData get(System::ServiceModel::Dispatcher::MessageFilter ^ filter); void set(System::ServiceModel::Dispatcher::MessageFilter ^ filter, TFilterData value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.ServiceModel.Dispatcher.MessageFilter) : 'FilterData with get, set" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFilterData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="dcf77-303">가져오거나 설정할 필터 데이터와 연결된 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-303">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> associated with the filter data to get or set.</span></span></param>
        <summary><span data-ttu-id="dcf77-304">지정된 <paramref name="filter" />와 연결된 필터 데이터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-304">Gets or sets the filter data associated with the specified <paramref name="filter" />.</span></span></summary>
        <value><span data-ttu-id="dcf77-305"><paramref name="filter" />와 연결된 필터 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-305">The filter data associated with the <paramref name="filter" />.</span></span> <span data-ttu-id="dcf77-306">지정된 <paramref name="filter" />가 없을 경우 get 작업은 <see cref="T:System.Collections.Generic.KeyNotFoundException" />을 throw하고, set 작업은 지정된 <paramref name="filter" /> 필터를 키로 사용하여 새 필터 데이터 요소를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-306">If the specified <paramref name="filter" /> is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" /> and a set operation creates a new filter data element with the specified <paramref name="filter" /> as key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-307">`Item` 속성(C# 인덱서)을 사용하면 다음 구문을 사용하여 테이블의 필터 컬렉션에서 `filter`와 연결된 필터 데이터에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-307">The `Item` property (the indexer in C#) provides the ability to access the filter data associated with a `filter` in the table's filter collection by using the following syntax.</span></span>  
  
```csharp  
myFilters[filter]  
```  
  
```vb  
myFilters(filter)  
```  
  
 <span data-ttu-id="dcf77-308">`Item` 속성을 사용하면 동작 필터 테이블에 없는 `filter`/필터 데이터 쌍의 값을 설정하여 새 요소를 추가할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-308">You can also use the `Item` property to add new elements by setting the values of a `filter`/filter data pair that does not exist in the action filter table.</span></span> <span data-ttu-id="dcf77-309">그러나 `filter`가 테이블에 이미 있는 경우 `Item` 속성을 설정하면 이전 값을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-309">However if `filter` is already in the table, setting the `Item` property overwrites the old value.</span></span> <span data-ttu-id="dcf77-310">이와는 반대로 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A> 메서드는 기존 `filter`의 필터 데이터를 수정하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-310">In contrast, the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Add%2A> method does not modify the filter data of an existing `filter`.</span></span>  
  
 <span data-ttu-id="dcf77-311">사전 `Item`은 `filter`의 경우 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>/필터 데이터 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-311">The dictionary `Item` is a `filter`/filter data pair in the case of <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-312"><paramref name="filter" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-312"><paramref name="filter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xml.XPath.XPathException"><span data-ttu-id="dcf77-313">컴파일러 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-313">A compiler error occurred.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="dcf77-314">우선 순위를 검색했지만 <paramref name="filter" />가 테이블에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-314">The property is retrieved and the <paramref name="filter" /> is not in the table.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.MessageFilter&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of MessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::MessageFilter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.MessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcf77-315"><see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />에 포함된 모든 필터의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-315">Gets a collection of all the filters contained in the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span></span></summary>
        <value><span data-ttu-id="dcf77-316">필터 테이블에 포함된 모든 <see cref="T:System.Collections.Generic.ICollection`1" />의 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-316">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />s contained in the filter table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-317">이 속성은 <xref:System.Collections.Generic.IDictionary%602.Keys%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-317">This property implements <xref:System.Collections.Generic.IDictionary%602.Keys%2A>.</span></span> <span data-ttu-id="dcf77-318">필터 테이블에서 구현되는 <xref:System.Collections.Generic.IDictionary%602>는 <xref:System.ServiceModel.Dispatcher.MessageFilter>를 키로 사용하고 `FilterData`를 쌍의 값으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-318">The <xref:System.Collections.Generic.IDictionary%602> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="dcf77-319">컬렉션에서 반환되는 필터의 순서는 지정되지 않지만 `FilterData` 속성으로 컬렉션에서 반환되는 상응하는 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Values%2A>와 순서가 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-319">The order of the filters returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding `FilterData` in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Values%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeQuota">
      <MemberSignature Language="C#" Value="public int NodeQuota { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeQuota" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeQuota As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeQuota { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NodeQuota : int with get, set" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.NodeQuota" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcf77-320"><see langword="Match" /> 메서드를 한 번 호출하는 동안 개별 필터로 검사할 수 있는 최대 XML 문서 노드 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-320">Gets or sets the maximum number of XML document nodes that can be examined by the individual filters during a single call to a <see langword="Match" /> method.</span></span> <span data-ttu-id="dcf77-321">이 값은 필터별로 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-321">This value applies for each filter.</span></span></summary>
        <value><span data-ttu-id="dcf77-322">검사할 수 있는 노드 수입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-322">The number of nodes that can be examined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-323">이 속성을 사용하여 보안 위협을 줄일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-323">This property can be used to alleviate a security threat.</span></span> <span data-ttu-id="dcf77-324">일부 필터는 평가에 드는 비용이 매우 높거나 실행 시간이 매우 길 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-324">Some filters can be extremely expensive to evaluate or are very long-running.</span></span> <span data-ttu-id="dcf77-325"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter>는 신뢰할 수 없는 소스(네트워크에서 가져온 SOAP 메시지)의 문서를 평가하는 데 가장 자주 사용되며, 이러한 문서는 악의적일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-325"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter>s are most often evaluated against a document from an untrusted source (SOAP message off the wire), which may be malicious.</span></span> <span data-ttu-id="dcf77-326">필터가 XML 문서에서 작동하므로, 시스템에서 필터 테이블에 대한 한도를 설정하는 가장 좋은 방법은 이 테이블에서 필터를 평가할 때 검사할 최대 노드 수를 지정하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-326">Because filters operate on XML documents, the best way to set computational limits on filter tables is to specify the maximum number of nodes that are examined while evaluating a filter in this table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcf77-327">필터 및 필터와 연결된 필터 데이터를 필터 테이블에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-327">Removes a filter and its associated filter data from the filter table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageFilter, !TFilterData&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of MessageFilter, TFilterData)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageFilter ^, TFilterData&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool&#xA;override this.Remove : System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter, 'FilterData&gt; -&gt; bool" Usage="xPathMessageFilterTable.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageFilter,TFilterData&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="dcf77-328">테이블에서 제거할 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;필터, <c>FilterData</c>&gt;입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-328">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> &lt;Filter, <c>FilterData</c>&gt; to remove from the table.</span></span></param>
        <summary><span data-ttu-id="dcf77-329">필터 및 필터와 연결된 필터 데이터를 필터 테이블에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-329">Removes a filter and its associated filter data from the filter table.</span></span></summary>
        <returns><span data-ttu-id="dcf77-330">필터/<see langword="true" /> 쌍을 찾아 제거하면 <paramref name="FilterData" />이고, 해당 쌍을 찾을 수 없으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-330"><see langword="true" /> if the filter/<paramref name="FilterData" /> pair was found and removed; <see langword="false" /> if it was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-331">`item`의 필터 키가 있지만 `FilterData`와 다른 데이터에 연결되어 있는 경우, 이 메서드는 필터를 제거하지 못하고 `false`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-331">If the filter key of the `item` is present but is associated with data that differs from the `FilterData`, the method fails to remove the filter and returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.ServiceModel.Dispatcher.MessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.ServiceModel.Dispatcher.MessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (filter As MessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::ServiceModel::Dispatcher::MessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool&#xA;override this.Remove : System.ServiceModel.Dispatcher.MessageFilter -&gt; bool" Usage="xPathMessageFilterTable.Remove filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="dcf77-332">제거할 <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-332">The <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> to remove.</span></span></param>
        <summary><span data-ttu-id="dcf77-333">필터 및 필터와 연결된 필터 데이터를 필터 테이블에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-333">Removes a filter and its associated filter data from the filter table.</span></span></summary>
        <returns><span data-ttu-id="dcf77-334">필터를 찾아 제거하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-334"><see langword="true" /> if the filter was found and removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-335"><paramref name="filter" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-335"><paramref name="filter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="dcf77-336"><paramref name="filter" />가 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-336"><paramref name="filter" /> is not a <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.ServiceModel.Dispatcher.XPathMessageFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(class System.ServiceModel.Dispatcher.XPathMessageFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (filter As XPathMessageFilter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::ServiceModel::Dispatcher::XPathMessageFilter ^ filter);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ServiceModel.Dispatcher.XPathMessageFilter -&gt; bool" Usage="xPathMessageFilterTable.Remove filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.XPathMessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="dcf77-337">제거할 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-337">The <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> to remove.</span></span></param>
        <summary><span data-ttu-id="dcf77-338"><see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> 및 연결된 필터 데이터를 필터 테이블에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-338">Removes an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> and its associated filter data from the filter table.</span></span></summary>
        <returns><span data-ttu-id="dcf77-339"><see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />를 찾아 제거하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-339"><see langword="true" /> if the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" /> was found and removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-340">이 메서드는 지정된 필터가 필터 테이블에 없는 경우 예외를 throw하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-340">This method does not throw an exception if the specified filter does not exist in the filter table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcf77-341"><paramref name="filter" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-341"><paramref name="filter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="dcf77-342"><paramref name="filter" />이 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="dcf77-342"><paramref name="filter" /> is not an <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcf77-343">필터 테이블에서 반복할 수 있는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-343">Returns an enumerator that can iterate through the filter table.</span></span></summary>
        <returns><span data-ttu-id="dcf77-344">필터 테이블에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;필터, FilterData&gt;&gt;입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-344">An <see cref="T:System.Collections.Generic.IEnumerator`1" />&lt;KeyValuePair&lt;Filter, FilterData&gt;&gt; that can be used to iterate through the filter table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-345">이 메서드는 <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-345">This method implements <xref:System.Collections.Generic.SynchronizedCollection%601.GetEnumerator%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimToSize();" />
      <MemberSignature Language="F#" Value="member this.TrimToSize : unit -&gt; unit" Usage="xPathMessageFilterTable.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcf77-346">초과 할당 또는 버퍼를 제거하여 필터 테이블을 압축합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-346">Compacts the filter table, purging any excess allocations or buffers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-347">이 메서드는 컬렉션의 용량을 해당 개수로 설정하는 것과 개념상 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-347">This method is conceptually equivalent to setting a collection's capacity to its count.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (System.ServiceModel.Dispatcher.MessageFilter filter, out TFilterData data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(class System.ServiceModel.Dispatcher.MessageFilter filter, [out] !TFilterData&amp; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (filter As MessageFilter, ByRef data As TFilterData) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::ServiceModel::Dispatcher::MessageFilter ^ filter, [Runtime::InteropServices::Out] TFilterData % data);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : System.ServiceModel.Dispatcher.MessageFilter *  -&gt; bool&#xA;override this.TryGetValue : System.ServiceModel.Dispatcher.MessageFilter *  -&gt; bool" Usage="xPathMessageFilterTable.TryGetValue (filter, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="data" Type="TFilterData" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="dcf77-348">데이터를 검색할 키입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-348">A key to retrieve the data.</span></span></param>
        <param name="data"><span data-ttu-id="dcf77-349">이 메서드가 <paramref name="data" />를 반환할 때 <paramref name="filter" />와 연결된 <see langword="true" />이고, 그렇지 않으면 <paramref name="data" /> 매개 변수의 형식에 대한 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-349">The <paramref name="data" /> associated with the <paramref name="filter" /> when this method returns <see langword="true" />; otherwise, the default value for the type of the <paramref name="data" /> parameter.</span></span></param>
        <summary><span data-ttu-id="dcf77-350">필터가 필터 테이블에 저장되는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-350">Checks whether a filter is stored in the filter table.</span></span></summary>
        <returns><span data-ttu-id="dcf77-351"><paramref name="filter" />가 필터 테이블에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-351"><see langword="true" /> if the <paramref name="filter" /> is present in the filter table; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-352">이 메서드를 사용하면 필터가 없을 때 예외를 throw하는 대신 `false`를 반환하므로 필터 테이블에 필터가 있는지 여부를 효과적으로 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-352">This method is an efficient way to check whether a filter is in the filter table because when the filter is not present it returns `false` instead of throwing an exception.</span></span> <span data-ttu-id="dcf77-353">`Item` 속성(C# 인덱서)을 사용하여 테이블에서 필터를 검색할 때 해당 필터가 없으면 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-353">If you try to retrieve the filter from the table using its `Item` property (the indexer in C#) and it is not there, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TFilterData&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TFilterData&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ Values { System::Collections::Generic::ICollection&lt;TFilterData&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;'FilterData&gt;" Usage="System.ServiceModel.Dispatcher.XPathMessageFilterTable&lt;'FilterData&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TFilterData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcf77-354"><paramref name="FilterData" />에 있는 모든 <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-354">Gets a collection of all the <paramref name="FilterData" /> contained in the <see cref="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />.</span></span></summary>
        <value><span data-ttu-id="dcf77-355">필터 테이블에 포함된 모든 <see cref="T:System.Collections.Generic.ICollection`1" />의 <paramref name="FilterData" />입니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-355">An <see cref="T:System.Collections.Generic.ICollection`1" /> of all the <paramref name="FilterData" /> contained in the filter table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcf77-356">이 속성은 <xref:System.Collections.Generic.IDictionary%602.Values%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-356">This property implements <xref:System.Collections.Generic.IDictionary%602.Values%2A>.</span></span> <span data-ttu-id="dcf77-357">필터 테이블에서 구현되는 <xref:System.Collections.Generic.IDictionary%602><필터, `FilterData`>는 <xref:System.ServiceModel.Dispatcher.MessageFilter>를 키로 사용하고 `FilterData`를 쌍의 값으로 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-357">The <xref:System.Collections.Generic.IDictionary%602><Filter, `FilterData`> that the filter table implements uses the <xref:System.ServiceModel.Dispatcher.MessageFilter> as the key and the `FilterData` as the value of the pair.</span></span>  
  
 <span data-ttu-id="dcf77-358">컬렉션에서 반환되는 `FilterData`의 순서는 지정되지 않지만 <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Keys%2A> 속성으로 컬렉션에서 반환되는 상응하는 필터와 순서가 동일합니다.</span><span class="sxs-lookup"><span data-stu-id="dcf77-358">The order of the `FilterData` returned in the collection is unspecified, but it is guaranteed to be the same order as the corresponding filters in the collection returned by the <xref:System.ServiceModel.Dispatcher.XPathMessageFilterTable%601.Keys%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>