<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ChannelDispatcherBase.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c981febf306d296c8e0662e36557df9458314557.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c981febf306d296c8e0662e36557df9458314557</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>Abstract base class for the channel dispatcher that accepts channels and associates them with a service.</source>
          <target state="translated">채널을 수락하여 서비스에 연결하는 채널 디스패처에 대한 추상 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>This is used by developers who want to keep the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> programming model but replace the system-provided runtime.</source>
          <target state="translated">이 클래스는 <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 프로그래밍 모델을 유지하면서 시스템에서 제공하는 런타임을 대체하려는 개발자가 사용합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>Such applications will pull messages out of channels and handle them directly with user-defined dispatchers.</source>
          <target state="translated">그러한 응용 프로그램은 채널에서 메시지를 끌어온 후 사용자 정의 디스패처를 사용하여 직접 처리합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>To use <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> , create a class derived from it, extend <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> and override <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A&gt;</ph>, adding instances of your class derived from <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> to <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph>를 사용하려면 파생 클래스를 만들고, <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>를 확장한 다음 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A&gt;</ph>을 재정의하여 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph>에서 파생된 클래스 인스턴스를 <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, associated with the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> object are available for inspection or modification through the <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> respectively.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> 개체와 연결된 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph>는 각각 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph>를 통해 검사하거나 수정하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> methods when adding or removing a <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> item from its <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> 컬렉션에서 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> 항목을 추가하거나 제거할 때 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> 또는 <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A&gt;</ph> during shutdown before closing InstanceContexts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>는 시스템을 종료하는 동안 InstanceContexts를 닫기 전에 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A&gt;</ph>을 호출합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses this call to close datagram channels and wait for all messages to get to an InstanceContext.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>에서는 이 호출을 사용하여 데이터그램 채널을 닫고 모든 메시지를 InstanceContext로 가져올 때까지 기다립니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> for the service.</source>
          <target state="translated">서비스에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>When overridden in a derived class, attaches the channel dispatcher to a specific host.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 채널 디스패처를 특정 호스트에 연결합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>This method can only be set when the instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph>의 인스턴스가 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method when the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is added to its <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph>가 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> 컬렉션에 추가될 때 이 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>This gives the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> a chance to hook events and inspect the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, and provides the value that should be returned from the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> property.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph>에서 이벤트를 후크하여 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>를 검사할 수 있을 뿐만 아니라 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> 속성에서 반환되어야 하는 값을 제공합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source><ph id="ph1">&lt;paramref name="host" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="host" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in an <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state or the host is already set.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 상태이거나 호스트가 이미 설정되어 있는 경우</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태에 있는 경우</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태에 있는 경우</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
          <source>When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 채널 디스패처에 연결된 끝점 디스패처를 제거합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method during shutdown to give the dispatcher a chance to drain messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>는 종료하는 동안 디스패처에서 메시지를 비울 수 있도록 이 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> uses this call to close datagram channels.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph>는 이 호출을 사용하여 데이터그램 채널을 닫습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>When overridden in a derived class, detaches the channel dispatcher from a specific host.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 채널 디스패처를 특정 호스트에서 분리합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> can only be detached when the instance of the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph>의 인스턴스가 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 상태에 있는 경우에만 분리할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>Should set the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> associated with the channel dispatcher to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">채널 디스패처에 연결된 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph>를 <ph id="ph2">`null`</ph>로 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method when the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is removed from its <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph>를 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> 컬렉션에서 제거할 때 이 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>This gives the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> a chance to unhook events and inspect the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph>에서 이벤트를 언후크하여 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>를 검사할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source><ph id="ph1">&lt;paramref name="host" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="host" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in an <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state or the host is already set.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 상태이거나 호스트가 이미 설정되어 있는 경우</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 상태에 있는 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">통신 개체가 <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 상태에 있는 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>When overridden in a derived class, gets the service host associated with the channel dispatcher.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 채널 디스패처에 연결된 서비스 호스트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> for the service associated with the dispatcher.</source>
          <target state="translated">디스패처에 연결된 서비스에 대한 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>Each <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object can have many <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects, each associated with a different <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> for that service.</source>
          <target state="translated">각 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 개체는 해당 서비스에 대한 서로 다른 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph>에 연결된 여러 개의 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> 개체를 가질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>The host keeps a list of these <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated">호스트는 이러한 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> 개체의 목록을 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> 컬렉션에 보관합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
          <source>When overridden in a derived class, gets the channel listener associated with the channel dispatcher.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 채널 디스패처에 연결된 채널 수신기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener" /&gt;</ph> associated with the channel dispatcher.</source>
          <target state="translated">채널 디스패처에 연결된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> associates an <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> whose channels and messages this <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is dispatching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph>는 이 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>에서 해당 채널과 메시지를 디스패치하는 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph>를 연결합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>