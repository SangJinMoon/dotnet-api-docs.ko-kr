<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClientOperation.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ede1ed5124c8da4c5a50dbf71ca1320f4937c79d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ede1ed5124c8da4c5a50dbf71ca1320f4937c79d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Used to modify or extend the execution behavior of a specific contract operation in a client object or client channel object.</source>
          <target state="translated">클라이언트 개체 또는 클라이언트 채널 개체에서 특정 계약 작업의 실행 동작을 수정하거나 확장하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> class is the location for client run-time modifications and insertion point for custom extensions that are scoped to only one service operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> 클래스는 하나의 서비스 작업으로 범위가 제한된 사용자 지정 확장에 대한 클라이언트 런타임 수정 및 삽입 지점의 위치입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>(To modify client run-time behavior for all messages in a contract, use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> class.</source>
          <target state="translated">(계약의 모든 메시지에 대 한 클라이언트 런타임 동작을 수정 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Install <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> modifications using a custom client behavior object, either of type <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> (to find a particular operation to modify) or of type <ph id="ph3">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> (which can then be applied by creating a custom attribute).</source>
          <target state="translated">사용자 지정 클라이언트 동작 개체를 사용하여 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> 수정을 설치합니다. 수정할 특정 작업을 찾으려면 <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph> 형식을 사용하고, 사용자 지정 특성을 만들어 적용하려면 <ph id="ph3">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> 형식을 사용합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> property to locate the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> object that represents a particular service operation.</source>
          <target state="translated">특정 서비스 작업을 나타내는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A&gt;</ph> 개체를 찾으려면 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>For more information about clients and the client architecture, see <bpt id="p1">[</bpt>Accessing Services Using a WCF Client<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> and <bpt id="p2">[</bpt>WCF Client Architecture<ept id="p2">](~/docs/framework/wcf/feature-details/client-architecture.md)</ept>.</source>
          <target state="translated">클라이언트 및 클라이언트 아키텍처에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>WCF 클라이언트를 사용 하 여 액세스 서비스<ept id="p1">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> 및 <bpt id="p2">[</bpt>WCF 클라이언트 아키텍처<ept id="p2">](~/docs/framework/wcf/feature-details/client-architecture.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>For more information about customizing the client runtime, see <bpt id="p1">[</bpt>Extending Clients<ept id="p1">](~/docs/framework/wcf/extending/extending-clients.md)</ept>.</source>
          <target state="translated">클라이언트 런타임 사용자 지정 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>클라이언트 확장<ept id="p1">](~/docs/framework/wcf/extending/extending-clients.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>For more information about using behaviors, see <bpt id="p1">[</bpt>Configuring and Extending the Runtime with Behaviors<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>.</source>
          <target state="translated">동작을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>구성 하 고 런타임 동작을 확장<ept id="p1">](~/docs/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>The following properties enable you to insert custom objects or modify the client execution behavior:</source>
          <target state="translated">다음 속성을 사용하면 사용자 지정 개체를 삽입하거나 클라이언트 실행 동작을 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Formatter%2A&gt;</ph> property to insert a custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> implementation for an operation or modify the current formatter.</source>
          <target state="translated">작업에 대한 사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Formatter%2A&gt;</ph> 구현을 삽입하거나 현재 포맷터를 수정하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A&gt;</ph> property to insert a custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector&gt;</ph> implementation or to modify the current one.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A&gt;</ph> 구현을 삽입하거나 현재 구현을 수정하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest%2A&gt;</ph> property to control who serializes an outbound message.</source>
          <target state="translated">아웃바운드 메시지를 누가 serialize하는지를 제어하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply%2A&gt;</ph> property to control who deserializes an inbound message.</source>
          <target state="translated">인바운드 메시지를 누가 deserialize하는지를 제어하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Action%2A&gt;</ph> property to access the WS-Addressing action of the request message and the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction%2A&gt;</ph> property to access the response message action.</source>
          <target state="translated">요청 메시지의 WS-Addressing 동작에 액세스하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Action%2A&gt;</ph> 속성을 사용하고, 응답 메시지 동작에 액세스하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.EndMethod%2A&gt;</ph> to specify which client methods are associated with an asynchronous operation.</source>
          <target state="translated">비동기 작업에 연결되는 클라이언트 메시지를 지정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.EndMethod%2A&gt;</ph>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos%2A&gt;</ph> property to get a collection of specified types that can appear in SOAP faults as the detail type.</source>
          <target state="translated">SOAP 오류에 세부 유형으로 표시될 수 있는 지정된 형식의 컬렉션을 가져오려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating%2A&gt;</ph> properties to control whether a session is initiated or is torn down, respectively, when the operation is called.</source>
          <target state="translated">작업이 호출될 때 세션이 초기화되는지 또는 삭제되는지 여부를 각각 제어하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay%2A&gt;</ph> property to control whether the client waits for a response before completing the invocation.</source>
          <target state="translated">클라이언트가 호출을 완료하기 전에 응답을 대기하는지 여부를 제어하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Parent%2A&gt;</ph> property to obtain the containing <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> object.</source>
          <target state="translated">포함하는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Parent%2A&gt;</ph> 개체를 가져오려면 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Name%2A&gt;</ph> property to get the name of the operation.</source>
          <target state="translated">작업 이름을 가져오려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Name%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod%2A&gt;</ph> property to control which method is mapped to the operation.</source>
          <target state="translated">작업에 매핑되는 메서드를 제어하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>The following code example shows an <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph> inserting a custom parameter inspector into each <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> in the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 사용자 지정 매개 변수 검사자를 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph> 속성의 각 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>에 삽입하는 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A?displayProperty=nameWithType&gt;</ph>를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.ClientOperation">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
          <source>The containing <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> object.</source>
          <target state="translated">포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
          <source>The name of the operation.</source>
          <target state="translated">작업의 이름입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
          <source>The action of the operation.</source>
          <target state="translated">작업의 동작입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph>, name, and action values.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph>, 이름 및 동작 값을 사용하여 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
          <source>The containing <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> object.</source>
          <target state="translated">포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
          <source>The name of the operation.</source>
          <target state="translated">작업의 이름입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
          <source>The action of the operation.</source>
          <target state="translated">작업의 동작입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
          <source>The action of the reply message.</source>
          <target state="translated">회신 메시지의 동작입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph>, name, action, and reply action values.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /&gt;</ph>, 이름, 동작 및 회신 동작 값을 사용하여 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
          <source>Gets the action of the operation.</source>
          <target state="translated">작업의 동작을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
          <source>The action of the operation.</source>
          <target state="translated">작업의 동작입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">기본적으로 이 값은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A?displayProperty=nameWithType&gt;</ph>의 값에 해당합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
          <source>Gets or sets the method associated with an asynchronous operation.</source>
          <target state="translated">비동기 작업과 연결된 메서드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that represents the method handling the begin portion of an asynchronous method pair, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the operation is not part of an asynchronous method pair.</source>
          <target state="translated">비동기 메서드 쌍의 시작 부분을 처리하는 메서드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> 개체입니다. 작업이 비동기 메서드 쌍의 일부가 아닌 경우에는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors">
          <source>Gets a collection of parameter inspector objects used to view or modify parameters prior to or subsequent to a client call.</source>
          <target state="translated">클라이언트 호출 이전 또는 이후의 매개 변수를 보거나 수정하는 데 사용되는 매개 변수 검사자 개체의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors">
          <source>A collection of parameter inspector objects used to view or modify parameters prior to or subsequent to a client call.</source>
          <target state="translated">클라이언트 호출 이전 또는 이후의 매개 변수를 보거나 수정하는 데 사용되는 매개 변수 검사자 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors">
          <source>ClientParameterInspectors is a thread-safe collection.</source>
          <target state="translated">ClientParameterInspectors은 스레드로부터 안전한 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /&gt;</ph> property value is used to deserialize the reply message.</source>
          <target state="translated">회신 메시지를 deserialize하는 데 <ph id="ph1">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /&gt;</ph> 속성 값이 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the return type is not a <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 반환 형식이 아닌 경우는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply%2A&gt;</ph> property to control whether the formatter deserializes the return value from an inbound message or whether the inbound message is returned directly as the return value.</source>
          <target state="translated">포맷터가 인바운드 메시지에서 반환 값을 deserialize하는지 여부와 인바운드 메시지가 반환 값으로 직접 반환되는지 여부를 제어하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> If <ph id="ph1">`false`</ph>, the return type must be of type <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> and there can be no out parameters or an <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> is thrown at run-time.</source>
          <target state="translated"><bpt id="p1">**</bpt>참고<ept id="p1">**</ept> 경우 <ph id="ph1">`false`</ph>, 반환 형식 유형 이어야 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 있으며 출력 매개 변수가 없으면 있을 수 있습니다 또는 <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> 실행 시간에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
          <source>If the message is <ph id="ph1">`null`</ph>, a <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown at run-time.</source>
          <target state="translated">메시지가 <ph id="ph1">`null`</ph>이면 런타임에 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
          <source>Gets or sets the method that implements the asynchronous end method for the operation.</source>
          <target state="translated">작업에 대한 비동기 End 메서드를 구현하는 메서드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> that represents the end method for the operation, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the operation is not asynchronous.</source>
          <target state="translated">작업에 대한 End 메서드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>이거나, 작업이 비동기 작업이 아니면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /&gt;</ph> objects that represent the specified SOAP faults for this operation.</source>
          <target state="translated">이 작업에 대해 지정된 SOAP 오류를 나타내는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" /&gt;</ph> 개체 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos">
          <source>A collection of SOAP faults specified for this operation.</source>
          <target state="translated">이 작업에 대해 지정된 SOAP 오류 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos%2A&gt;</ph> property to get a collection of all contractually specified SOAP faults.</source>
          <target state="translated">계약에 지정된 모든 SOAP 오류 컬렉션을 가져오려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
          <source>Gets or sets the formatter that serializes objects into messages and deserializes messages into objects.</source>
          <target state="translated">개체를 메시지로 serialize하고 메시지를 개체로 deserialize하는 포맷터를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" /&gt;</ph> 구현입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Formatter%2A&gt;</ph> property to insert a custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> implementation for an operation or modify the current formatter.</source>
          <target state="translated">작업에 대한 사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.Formatter%2A&gt;</ph> 구현을 삽입하거나 현재 포맷터를 수정하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
          <source>The use of the formatter can be controlled by the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply%2A&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply%2A&gt;</ph> 속성을 사용하여 포맷터 사용을 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> interface defines the  <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply%2A&gt;</ph> methods, which are used to convert a set of object parameters to a message and from a message to a set of return values, respectively.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter&gt;</ph> 인터페이스는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply%2A&gt;</ph> 메서드를 정의합니다. 이 메서드는 개체 매개 변수를 메시지로 변환하고, 메시지를 반환 값으로 변환하는 데 각각 사용됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
          <source>Gets or sets a value that indicates whether a session can be started by a message to this operation.</source>
          <target state="translated">이 작업에 대한 메시지에서 세션을 시작할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a message to this operation can initiate a session; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 작업에 대한 메시지에서 세션을 시작할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">기본적으로 이 값은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A?displayProperty=nameWithType&gt;</ph>의 값에 해당합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
          <source>Gets or sets a value that indicates if the operation is a one-way operation.</source>
          <target state="translated">작업이 단방향 작업인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the indigo2 client should not expect a reply; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클라이언트에서 회신을 기대하지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">기본적으로 이 값은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A?displayProperty=nameWithType&gt;</ph>의 값에 해당합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
          <source>For issues related to one-way operations, see <bpt id="p1">[</bpt>One-Way Services<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept>.</source>
          <target state="translated">단방향 작업과 관련 된 문제에 대 한 참조 <bpt id="p1">[</bpt>단방향 서비스<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
          <source>Gets or sets a value that indicates if this operation is the last one in a session.</source>
          <target state="translated">이 작업이 세션의 마지막 작업인지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the associated session is closed after the operation is invoked; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">작업이 호출된 후 연결된 세션이 닫히면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">기본적으로 이 값은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph>의 값에 해당합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
          <source>Gets the name of the operation.</source>
          <target state="translated">작업의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
          <source>The name of the operation.</source>
          <target state="translated">작업의 이름입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">기본적으로 이 값은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A?displayProperty=nameWithType&gt;</ph>의 값에 해당합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors">
          <source>Gets or sets a collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" /&gt;</ph> objects that can inspect and modify inbound and outbound objects for a particular client method.</source>
          <target state="translated">특정 클라이언트 메서드에 대한 인바운드 및 아웃바운드 개체를 검사 및 수정할 수 있는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" /&gt;</ph> 개체 컬렉션을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" /&gt;</ph> implementations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IParameterInspector" /&gt;</ph> 구현 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A&gt;</ph> property to insert a custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector&gt;</ph> implementation or to modify the current one.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A&gt;</ph> 구현을 삽입하거나 현재 구현을 수정하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IParameterInspector&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors">
          <source>Parameter inspectors are invoked in the order in which they are added to the collection for requests and in the reverse order for replies.</source>
          <target state="translated">매개 변수 검사자는 요청의 경우 컬렉션에 추가되는 순서대로 호출되고, 회신의 경우 역순으로 호출됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors">
          <source>The following code example shows an <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph> inserting a custom parameter inspector into each <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph> in the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 사용자 지정 매개 변수 검사자를 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType&gt;</ph> 속성의 각 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>에 삽입하는 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A?displayProperty=nameWithType&gt;</ph>를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
          <source>Gets the containing <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> object.</source>
          <target state="translated">포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
          <source>The containing <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> object.</source>
          <target state="translated">포함하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
          <source>Gets the action of the reply message for this operation.</source>
          <target state="translated">이 작업에 대한 회신 메시지 동작을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
          <source>The action of the reply.</source>
          <target state="translated">회신 동작입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
          <source>By default this value corresponds to the value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">기본적으로 이 값은 <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A?displayProperty=nameWithType&gt;</ph>의 값에 해당합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
          <source>Gets or sets a value that specifies whether the <ph id="ph1">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /&gt;</ph> object serializes an outbound message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /&gt;</ph> 개체가 아웃바운드 메시지를 serialize하는지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /&gt;</ph> property serializes the return values into a reply message; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 속성이 반환 값을 회신 메시지에 serialize하면 <ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest%2A&gt;</ph> property to indicate whether the formatter serializes operation parameters into a reply message or to determine if the first parameter is sent as the outbound message.</source>
          <target state="translated">포맷터가 작업 매개 변수를 회신 메시지에 serialize할지 여부를 나타내거나, 첫 번째 매개 변수가 아웃바운드 메시지로 전달되는지를 결정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
          <source>If set to <ph id="ph1">`false`</ph>, the operation must have exactly one parameter of type <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> or an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`false`</ph>로 설정된 경우 작업에 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 형식 매개 변수가 하나만 있어야 합니다. 그렇지 않으면 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
          <source>Gets or sets the method that is associated with this operation.</source>
          <target state="translated">이 작업과 연결된 메서드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> that represents the method that implements the operation.</source>
          <target state="translated">작업을 구현하는 메서드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
          <source>If the operation is asynchronous, this value is <ph id="ph1">&lt;see langword="null" /&gt;</ph> and the implementing methods are stored in the <ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" /&gt;</ph> properties.</source>
          <target state="translated">작업이 비동기 작업일 경우 이 값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이고 구현 메서드가 <ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" /&gt;</ph> 속성에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.TaskMethod">
          <source>Gets or sets the method associated with a task.</source>
          <target state="translated">작업과 관련된 메서드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.TaskMethod">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that represents the method associated with a task.</source>
          <target state="translated">작업과 연결된 메서드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ClientOperation.TaskTResult">
          <source>Gets or sets the type of the result of the method that is associated with a task.</source>
          <target state="translated">작업과 연결되는 메서드 결과의 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ClientOperation.TaskTResult">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the result of the method that is associated with a task.</source>
          <target state="translated">작업과 연결되는 메서드 결과의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>