<Type Name="QueryStringConverter" FullName="System.ServiceModel.Dispatcher.QueryStringConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7ea9608edf41e92aec57ce8252d63bad10809b2f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class QueryStringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryStringConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.QueryStringConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryStringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryStringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b7aad-101">이 클래스는 쿼리 문자열의 매개 변수를 해당 형식의 개체로 변환합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7aad-101">This class converts a parameter in a query string to an object of the appropriate type.</span>
      </span>
      <span data-ttu-id="b7aad-102">매개 변수를 개체에서 쿼리 문자열 표현으로 변환할 수도 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7aad-102">It can also convert a parameter from an object to its query string representation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7aad-103">URL 내의 쿼리 문자열에서 매개 변수를 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-103">Parameters can be specified in a query string within a URL.</span></span> <span data-ttu-id="b7aad-104">이 클래스는 문자열에 지정된 이러한 매개 변수를 가져와서 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-104">This class takes those parameters specified in a string and converts them into objects.</span></span> <span data-ttu-id="b7aad-105">예를 들어, 다음과 같이 계약이 정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-105">For example, the following contract is defined.</span></span>  
  
```  
[ServiceContract]  
interface Calculator  
{  
   [WebGet(UriTemplate="Add?n1={n1}&n2={n2}")]  
   [OperationContract]  
   long Add(long n1, long n2);  
}  
```  
  
 <span data-ttu-id="b7aad-106">A [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 서비스는이 인터페이스를 구현 하 고 끝점에 노출 된 <xref:System.ServiceModel.Description.WebHttpBehavior> 에서 http://localhost:8000/MyCalcService합니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-106">A [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service implements this interface and exposes it on an endpoint with the <xref:System.ServiceModel.Description.WebHttpBehavior> at http://localhost:8000/MyCalcService.</span></span> <span data-ttu-id="b7aad-107">`Add` 에 HTTP GET을 전송 하 여 서비스 작업을 호출할 수 http://localhost:8000/MyCalcService/Add?n1=10&n2=5합니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-107">The `Add` service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&n2=5.</span></span> <span data-ttu-id="b7aad-108"><xref:System.ServiceModel.Dispatcher.QueryStringConverter>는 이 URL을 수신하고 URL에 지정된 두 매개 변수(n1 및 n2)를 해당 값을 가진 두 개의 `long` 개체로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-108">The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> receives this URL and converts the two parameters (n1 and n2) specified in the URL into two `long` objects with the appropriate values.</span></span>  
  
 <span data-ttu-id="b7aad-109"><xref:System.ServiceModel.Dispatcher.QueryStringConverter>에서 클래스를 파생시키면 쿼리 문자열 매개 변수가 서비스 작업의 매개 변수에 매핑되는 방법을 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-109">You can derive a class from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> to control how query string parameters are mapped into a service operation's parameters.</span></span>  
  
 <span data-ttu-id="b7aad-110"><xref:System.ServiceModel.Dispatcher.QueryStringConverter>는 기본적으로 다음과 같은 형식을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-110">The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> supports the following types by default:</span></span>  
  
-   <xref:System.Byte>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
-   <xref:System.Single>  
  
-   <xref:System.Double>  
  
-   <xref:System.Char>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.String>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.Guid>  
  
-   <span data-ttu-id="b7aad-111"><xref:System.Byte> 배열</span><span class="sxs-lookup"><span data-stu-id="b7aad-111"><xref:System.Byte> array</span></span>  
  
-   <xref:System.Uri>  
  
-   <xref:System.Object>  
  
-   <xref:System.DateTimeOffset>  
  
-   <span data-ttu-id="b7aad-112">열거형</span><span class="sxs-lookup"><span data-stu-id="b7aad-112">Enums</span></span>  
  
-   <span data-ttu-id="b7aad-113">문자열 표현과 형식을 서로 변환할 수 있는 `TypeConverterAttribute`가 있는 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-113">Types that have a `TypeConverterAttribute` that can convert the type to and from a string representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7aad-114">다음 코드에서는 <xref:System.ServiceModel.Dispatcher.QueryStringConverter> 클래스를 사용하여 문자열과 32비트 정수 간에 변환하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-114">The following code shows how to use the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class to convert between a string and a 32-bit integer.</span></span>  
  
 [!code-csharp[QueryStringConverter#0](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#0)]
 [!code-vb[QueryStringConverter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryStringConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryStringConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7aad-115">
            <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.QueryStringConverter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7aad-116">다음 코드에서는 <xref:System.ServiceModel.Dispatcher.QueryStringConverter> 클래스의 인스턴스를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-116">The following code shows how to create an instance of the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class.</span></span>  
  
 [!code-csharp[QueryStringConverter#1](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#1)]
 [!code-vb[QueryStringConverter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public virtual bool CanConvert (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvert(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvert(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b7aad-117">변환할 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-117">The <see cref="T:System.Type" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7aad-118">지정된 형식과 문자열 표현을 상호 변환할 수 있는지 여부를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-118">Determines whether the specified type can be converted to and from a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7aad-119">형식을 변환할 수 있는지 여부를 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-119">A value that specifies whether the type can be converted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7aad-120">다음 코드에서는 <xref:System.ServiceModel.Dispatcher.QueryStringConverter>가 지정된 형식에 대한 변환을 수행할 수 있는지 여부를 확인하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-120">The following code shows how to determine whether the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> can convert to and from the specified type.</span></span>  
  
 [!code-csharp[QueryStringConverter#2](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#2)]
 [!code-vb[QueryStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="public virtual object ConvertStringToValue (string parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertStringToValue(string parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertStringToValue (parameter As String, parameterType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertStringToValue(System::String ^ parameter, Type ^ parameterType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="b7aad-121">매개 변수 및 값의 문자열 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-121">The string form of the parameter and value.</span>
          </span>
        </param>
        <param name="parameterType">
          <span data-ttu-id="b7aad-122">매개 변수를 변환할 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-122">The <see cref="T:System.Type" /> to convert the parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7aad-123">쿼리 문자열 매개 변수를 지정된 형식으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-123">Converts a query string parameter to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7aad-124">변환된 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-124">The converted parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7aad-125">`parameterType`이 값 형식이고 매개 변수가 `null`이면 `parameterType`의 기본값이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-125">If the `parameterType` is a value type and the parameter is `null`, then the default value of the `parameterType` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7aad-126">다음 코드에서는 문자열을 지정된 형식으로 변환하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-126">The following code shows how to convert a string to the specified type.</span></span>  
  
 [!code-csharp[QueryStringConverter#2](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#2)]
 [!code-vb[QueryStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="b7aad-127">제공된 문자열에 올바른 형식이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-127">The provided string does not have the correct format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertValueToString (object parameter, Type parameterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertValueToString(object parameter, class System.Type parameterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertValueToString (parameter As Object, parameterType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertValueToString(System::Object ^ parameter, Type ^ parameterType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="parameterType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="b7aad-128">변환할 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-128">The parameter to convert.</span>
          </span>
        </param>
        <param name="parameterType">
          <span data-ttu-id="b7aad-129">변환할 매개 변수의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-129">The <see cref="T:System.Type" /> of the parameter to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7aad-130">매개 변수를 쿼리 문자열 표현으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-130">Converts a parameter to a query string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7aad-131">매개 변수 이름 및 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7aad-131">The parameter name and value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7aad-132">다음 코드에서는 형식 값을 값의 문자열 표현으로 변환하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b7aad-132">The following code shows how to convert a typed value into a string representation of the value.</span></span>  
  
 [!code-csharp[QueryStringConverter#3](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#3)]
 [!code-vb[QueryStringConverter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>