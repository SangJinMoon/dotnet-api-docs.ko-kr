<Type Name="ChannelDispatcher" FullName="System.ServiceModel.Dispatcher.ChannelDispatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64dc4c5d742c5867797292781de3cf5cf782be73" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53294632" /></Metadata><TypeSignature Language="C#" Value="public class ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChannelDispatcher extends System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ChannelDispatcher&#xA;Inherits ChannelDispatcherBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcher : System::ServiceModel::Dispatcher::ChannelDispatcherBase" />
  <TypeSignature Language="F#" Value="type ChannelDispatcher = class&#xA;    inherit ChannelDispatcherBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.ChannelDispatcherBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="08d4c-101">채널을 수락하여 서비스에 연결하는 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-101">A component that accepts channels and associates them with a service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-102"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 개체는 특정 URI(수신 URI)의 <xref:System.ServiceModel.Channels.IChannelListener>를 서비스 인스턴스에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-102">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI (called a listen URI) with an instance of a service.</span></span> <span data-ttu-id="08d4c-103">각 <xref:System.ServiceModel.ServiceHost> 개체는 해당 서비스에 대한 서로 다른 수신기 및 수신 URI에 연결된 여러 개의 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 개체를 가질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-103">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different listener and listen URI for that service.</span></span>  
  
 <span data-ttu-id="08d4c-104">메시지가 도착하면 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>는 연관된 각 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 개체에 쿼리하여 엔드포인트에서 메시지를 수락할 수 있는지 여부를 확인한 다음 수락할 수 있는 엔드포인트에 메시지를 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-104">When a message arrives, the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> queries each of the associated <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects whether the endpoint can accept the message, and passes the message to the one that can.</span></span> <span data-ttu-id="08d4c-105"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 개체는 메시지의 대상 주소가 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 속성과 일치하고 메시지 동작이 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> 속성과 일치할 경우 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A>로부터 받는 메시지를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-105">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property.</span></span>  
  
 <span data-ttu-id="08d4c-106">채널 세션의 수명과 동작을 제어하는 모든 속성을 사용하여 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 개체를 검사하거나 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-106">All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object.</span></span> <span data-ttu-id="08d4c-107">여기에는 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> 외에도 사용자 지정 <xref:System.ServiceModel.Dispatcher.IChannelInitializer> 개체, <xref:System.ServiceModel.Channels.IChannelListener>, <xref:System.ServiceModel.ServiceHost> 및 연결된 <xref:System.ServiceModel.InstanceContext>가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-107">In addition to the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, these include custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objects, the <xref:System.ServiceModel.Channels.IChannelListener>, the <xref:System.ServiceModel.ServiceHost>, the associated and <xref:System.ServiceModel.InstanceContext>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/service.cs#0)]
 [!code-vb[S_UE_ChannelDispatcher#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/service.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08d4c-108"><see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.ChannelDispatcher : System.ServiceModel.Channels.IChannelListener -&gt; System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="new System.ServiceModel.Dispatcher.ChannelDispatcher listener" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
      </Parameters>
      <Docs>
        <param name="listener"><span data-ttu-id="08d4c-109">채널 디스패처에 대한 <see cref="T:System.ServiceModel.Channels.IChannelListener" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-109">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</span></span></param>
        <summary><span data-ttu-id="08d4c-110"><see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-111">제공된 수신기에서 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 클래스의 새 인스턴스를 시스템의 기본 시간 제한을 사용하여  초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-111">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener, with system-provided default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#1)]
 [!code-vb[S_UE_ChannelDispatcher#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="08d4c-112"><paramref name="listener" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-112"><paramref name="listener" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener, string bindingName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener, bindingName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener, System::String ^ bindingName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.ChannelDispatcher : System.ServiceModel.Channels.IChannelListener * string -&gt; System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="new System.ServiceModel.Dispatcher.ChannelDispatcher (listener, bindingName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
        <Parameter Name="bindingName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="listener"><span data-ttu-id="08d4c-113">채널 디스패처에 대한 <see cref="T:System.ServiceModel.Channels.IChannelListener" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-113">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</span></span></param>
        <param name="bindingName"><span data-ttu-id="08d4c-114">서비스를 구성하는 데 사용되는 바인딩의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-114">The name of the binding used to configure the service.</span></span></param>
        <summary><span data-ttu-id="08d4c-115"><see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-116">제공된 수신기 및 바인딩에서 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 클래스의 새 인스턴스를 시스템의 기본 시간 제한을 사용하여 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-116">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with system-provided default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#2)]
 [!code-vb[S_UE_ChannelDispatcher#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="08d4c-117"><paramref name="listener" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-117"><paramref name="listener" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName, System.ServiceModel.IDefaultCommunicationTimeouts timeouts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener, string bindingName, class System.ServiceModel.IDefaultCommunicationTimeouts timeouts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener, bindingName As String, timeouts As IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener, System::String ^ bindingName, System::ServiceModel::IDefaultCommunicationTimeouts ^ timeouts);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.ChannelDispatcher : System.ServiceModel.Channels.IChannelListener * string * System.ServiceModel.IDefaultCommunicationTimeouts -&gt; System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="new System.ServiceModel.Dispatcher.ChannelDispatcher (listener, bindingName, timeouts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
        <Parameter Name="bindingName" Type="System.String" />
        <Parameter Name="timeouts" Type="System.ServiceModel.IDefaultCommunicationTimeouts" />
      </Parameters>
      <Docs>
        <param name="listener"><span data-ttu-id="08d4c-118">서비스에 대한 <see cref="T:System.ServiceModel.Channels.IChannelListener" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-118">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the service.</span></span></param>
        <param name="bindingName"><span data-ttu-id="08d4c-119">서비스를 구성하는 데 사용되는 바인딩의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-119">The name of the binding used to configure the service.</span></span></param>
        <param name="timeouts"><span data-ttu-id="08d4c-120">서비스에 대한 <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-120">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> for the service.</span></span></param>
        <summary><span data-ttu-id="08d4c-121"><see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-121">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-122">제공된 수신기 및 바인딩에서 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> 클래스의 새 인스턴스를 지정된 기본 시간 제한을 사용하여 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-122">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with the specified default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#3)]
 [!code-vb[S_UE_ChannelDispatcher#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="08d4c-123"><paramref name="listener" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-123"><paramref name="listener" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsynchronousTransactedAcceptEnabled">
      <MemberSignature Language="C#" Value="public bool AsynchronousTransactedAcceptEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsynchronousTransactedAcceptEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AsynchronousTransactedAcceptEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsynchronousTransactedAcceptEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AsynchronousTransactedAcceptEnabled : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-124">수신기에 대해 처리된 Accept 메서드 호출이 비동기적인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-124">Gets a value that indicates whether the transacted accept method calls on listener are asynchronous.</span></span></summary>
        <value><span data-ttu-id="08d4c-125">수신기에 대한 트랜잭트 허용 메서드가 비동기 메서드이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-125"><see langword="true" /> if the transacted accept method calls on listener are asynchronous; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected override void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="override this.Attach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcher.Attach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="08d4c-126">서비스에 대한 <see cref="T:System.ServiceModel.ServiceHostBase" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-126">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span></span></param>
        <summary><span data-ttu-id="08d4c-127">채널 디스패처를 호스트에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-127">Attaches the channel dispatcher to the host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-128">이 속성은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-128">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-129">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-129">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="08d4c-130">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-130">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="08d4c-131">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-131">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindingName">
      <MemberSignature Language="C#" Value="public string BindingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingName : string" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-132">서비스를 구성하는 데 사용되는 바인딩의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-132">Gets the name of the binding used to configure the service.</span></span></summary>
        <value><span data-ttu-id="08d4c-133">서비스의 바인딩 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-133">The binding name of the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-134">이 채널 디스패처가 연결되는 바인딩의 이름을 가져오는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-134">Used to obtain the binding name for the binding with which this channel dispatcher is associated.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#4)]
 [!code-vb[S_UE_ChannelDispatcher#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelInitializers As SynchronizedCollection(Of IChannelInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ ChannelInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelInitializers : System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt;" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-135">채널을 처음 만들 때 채널을 검사하고 상태를 추가하는 데 사용할 수 있는 <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> 개체 집합을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-135">Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects that you can use to inspect and add state to channels when they are first created.</span></span></summary>
        <value><span data-ttu-id="08d4c-136"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 형식 개체의 <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-136">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-137">채널을 만들 때 채널의 상태를 검사하거나 수정하기 위해 사용자 지정 채널 이니셜라이저를 초기화 컬렉션에 삽입하려면 이 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-137">Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created.</span></span> <span data-ttu-id="08d4c-138">디스패처에 연결된 계약이 양방향 계약인 경우 이 속성은 나가는 채널에서 동일한 동작을 수행하는 데 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-138">This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#5)]
 [!code-vb[S_UE_ChannelDispatcher#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public override void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CloseInput();" />
      <MemberSignature Language="F#" Value="override this.CloseInput : unit -&gt; unit" Usage="channelDispatcher.CloseInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08d4c-139">수신기에서 새 채널을 수락하지 못하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-139">Stops the listener from accepting new channels.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-140">이 메서드를 호출하면 수신기의 수신이 중지됩니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-140">Calling this method stops the listener listening.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-141">채널 디스패처를 닫는 데 허용되는 기본 시간 간격을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-141">Gets the default interval of time allowed for the channel dispatcher to close.</span></span></summary>
        <value><span data-ttu-id="08d4c-142">채널 디스패처를 닫는 데 허용되는 기본 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-142">The <see cref="T:System.TimeSpan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-143">닫기에 대한 이 기본 제한 시간은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>를 사용하여 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-143">This default close timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span></span> <span data-ttu-id="08d4c-144">기본 제한 시간을 설정하지 않으면 서비스 모델 기본값인 1분이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-144">Otherwise, a service model default value of 1 minute is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-145">채널 디스패처를 여는 데 허용되는 기본 시간 간격을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-145">Gets the default interval of time allowed for the channel dispatcher to open.</span></span></summary>
        <value><span data-ttu-id="08d4c-146">채널 디스패처를 닫는 데 허용되는 기본 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-146">The <see cref="T:System.TimeSpan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-147">열기에 대한 이 기본 제한 시간은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>를 사용하여 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-147">This default open timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span></span> <span data-ttu-id="08d4c-148">기본 제한 시간을 설정하지 않으면 서비스 모델 기본값인 1분이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-148">Otherwise, a service model default value of 1 minute is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected override void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="override this.Detach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcher.Detach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="08d4c-149">서비스에 대한 <see cref="T:System.ServiceModel.ServiceHostBase" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-149">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span></span></param>
        <summary><span data-ttu-id="08d4c-150">서비스 호스트를 채널 디스패처에서 분리합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-150">Detaches the service host from the channel dispatcher.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-151"><xref:System.ServiceModel.ServiceHostBase>는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 분리할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-151">The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="08d4c-152">채널 디스패처에 연결된 <xref:System.ServiceModel.ServiceHostBase>를 `null`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-152">Sets the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#18)]
 [!code-vb[S_UE_ChannelDispatcher#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="08d4c-153"><paramref name="host" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-153"><paramref name="host" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-154"><paramref name="host" />가 채널 디스패처의 호스트가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-154"><paramref name="host" /> is not the host of the channel dispatcher.</span></span>

<span data-ttu-id="08d4c-155">또는</span><span class="sxs-lookup"><span data-stu-id="08d4c-155">-or-</span></span>

<span data-ttu-id="08d4c-156">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-156">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="08d4c-157">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-157">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="08d4c-158">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-158">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt; Endpoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.EndpointDispatcher&gt; Endpoints" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoints As SynchronizedCollection(Of EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::EndpointDispatcher ^&gt; ^ Endpoints { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::EndpointDispatcher ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Endpoints : System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt;" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-159">메시지를 채널 엔드포인트에 전달하는 엔드포인트 디스패처를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-159">Gets the endpoint dispatchers which forward messages to the channel endpoints.</span></span></summary>
        <value><span data-ttu-id="08d4c-160">메시지를 채널 엔드포인트에 전달하는 <see cref="T:System.Collections.Generic.SynchronizedCollection`1" />의 <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-160">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> which forward messages to the channel endpoints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-161"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에는 채널이 지원할 수 있는 엔드포인트마다 고유한 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>가 하나씩 있습니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-161">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> has a distinct <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for each endpoint that the channel can support.</span></span>  
  
 <span data-ttu-id="08d4c-162">전체 엔드포인트에서 런타임을 사용자 지정할 수 있는 런타임 속성에 액세스하려면 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-162">Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#6)]
 [!code-vb[S_UE_ChannelDispatcher#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorHandlers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt; ErrorHandlers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Dispatcher.IErrorHandler&gt; ErrorHandlers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorHandlers As Collection(Of IErrorHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::IErrorHandler ^&gt; ^ ErrorHandlers { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::IErrorHandler ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorHandlers : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt;" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-163">엔드포인트에 대한 사용자 지정 오류 처리 기능을 삽입하는 데 사용할 수 있는 <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> 개체 집합을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-163">Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects that can be used to insert custom error handling functionality for an endpoint.</span></span></summary>
        <value><span data-ttu-id="08d4c-164"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 개체의 <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-164">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#7)]
 [!code-vb[S_UE_ChannelDispatcher#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-165">디스패처에 연결된 서비스에 대한 호스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-165">Gets the host for the service associated with the dispatcher.</span></span></summary>
        <value><span data-ttu-id="08d4c-166">디스패처에 연결된 서비스에 대한 <see cref="T:System.ServiceModel.ServiceHostBase" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-166">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-167">각 <xref:System.ServiceModel.ServiceHost> 개체는 해당 서비스에 대한 서로 다른 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 연결된 여러 개의 <xref:System.ServiceModel.Channels.IChannelListener> 개체를 가질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-167">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#8)]
 [!code-vb[S_UE_ChannelDispatcher#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeExceptionDetailInFaults : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-168">오류에 예외에 대한 세부 정보를 포함시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-168">Gets or sets a value that indicates whether to include the details about an exception in a fault.</span></span></summary>
        <value><span data-ttu-id="08d4c-169">예외에 대한 세부 정보가 오류에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-169"><see langword="true" /> if the details about an exception are included in the faults; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-170">이 속성은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-170">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#19)]
 [!code-vb[S_UE_ChannelDispatcher#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-171">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-171">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="08d4c-172">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-172">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="08d4c-173">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-173">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsTransactedAccept">
      <MemberSignature Language="C#" Value="public bool IsTransactedAccept { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactedAccept" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTransactedAccept As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTransactedAccept { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTransactedAccept : bool" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-174">수신기에 대한 Accept 메서드 호출이 트랜잭션에서 수행되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-174">Gets a value that indicates whether the accept method calls on the listener are done under a transaction.</span></span></summary>
        <value><span data-ttu-id="08d4c-175">수신기에 대한 Accept 메서드 호출이 트랜잭션에서 수행되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-175"><see langword="true" /> if the accept method calls on the listener are done under a transaction; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#9)]
 [!code-vb[S_UE_ChannelDispatcher#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactedReceive">
      <MemberSignature Language="C#" Value="public bool IsTransactedReceive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactedReceive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTransactedReceive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTransactedReceive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTransactedReceive : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-176">수신기에 대한 Receive 메서드 호출이 트랜잭션에서 수행되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-176">Gets a value that indicates whether the receive method calls on the listener are done under a transaction.</span></span></summary>
        <value><span data-ttu-id="08d4c-177">수신기에 대한 Receive 메서드 호출이 트랜잭션에서 수행되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-177"><see langword="true" /> if the receive method calls on the listener are done under a transaction; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-178"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> 속성은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-178">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#10)]
 [!code-vb[S_UE_ChannelDispatcher#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-179">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-179">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="08d4c-180">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-180">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="08d4c-181">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-181">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.ServiceModel.Channels.IChannelListener" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-182">채널 디스패처에 연결된 수신기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-182">Gets the listener associated with the channel dispatcher.</span></span></summary>
        <value><span data-ttu-id="08d4c-183">채널 디스패처에 연결된 <see cref="T:System.ServiceModel.Channels.IChannelListener" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-183">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-184"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher>는 특정 URI의 <xref:System.ServiceModel.Channels.IChannelListener>를 서비스 인스턴스에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-184">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI with an instance of a service.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#11)]
 [!code-vb[S_UE_ChannelDispatcher#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualAddressing">
      <MemberSignature Language="C#" Value="public bool ManualAddressing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ManualAddressing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualAddressing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ManualAddressing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ManualAddressing : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-185">채널 디스패처에서 요청/응답 메시지에 주소 헤더를 추가하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-185">Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.</span></span></summary>
        <value><span data-ttu-id="08d4c-186">프록시에서 주소 헤더를 추가하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-186"><see langword="true" /> if the proxy does not add any addressing headers; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="08d4c-187">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-187">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-188">이 속성은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-188">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="08d4c-189">응용 프로그램에서 이 헤더를 제어할 수 있도록 클라이언트가 요청/응답 메시지에 메시지 ID 및 회신 대상 주소 헤더를 추가하지 못하게 하려면 <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> 속성을 `true`로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-189">Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property to `true` if you want to prevent the client from adding Message ID and ReplyTo addressing headers to request/response messages so that your application can control these headers.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#12)]
 [!code-vb[S_UE_ChannelDispatcher#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-190">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-190">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="08d4c-191">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-191">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="08d4c-192">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-192">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxPendingReceives">
      <MemberSignature Language="C#" Value="public int MaxPendingReceives { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingReceives" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPendingReceives As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPendingReceives { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPendingReceives : int with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-193">채널당 허용되는 보류 메시지의 최대 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-193">Gets or sets the maximum pending messages per channel.</span></span></summary>
        <value><span data-ttu-id="08d4c-194">메시지의 최대 수를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-194">An integer representing a maximum number of messages.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTransactedBatchSize">
      <MemberSignature Language="C#" Value="public int MaxTransactedBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxTransactedBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTransactedBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxTransactedBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTransactedBatchSize : int with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-195">트랜잭션된 일괄 처리의 최대 크기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-195">Gets or sets the maximum size for a transacted batch.</span></span></summary>
        <value><span data-ttu-id="08d4c-196">트랜잭션된 일괄 처리의 최대 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-196">The maximum size for a transacted batch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-197"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> 속성은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-197">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#13)]
 [!code-vb[S_UE_ChannelDispatcher#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="08d4c-198">값이 0보다 작게 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-198">The value set is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-199">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-199">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="08d4c-200">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-200">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="08d4c-201">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-201">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); void set(System::ServiceModel::Channels::MessageVersion ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageVersion : System.ServiceModel.Channels.MessageVersion with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-202">사용되거나 예상되는 SOAP 메시지 및 WS-Addressing 버전을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-202">Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</span></span></summary>
        <value><span data-ttu-id="08d4c-203">사용되거나 예상되는 <see cref="T:System.ServiceModel.Channels.MessageVersion" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-203">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used or expected.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-204">메시지 및 해당 교환과 연결된 SOAP 및 WS-Addressing의 버전을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-204">Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.</span></span>  
  
 <span data-ttu-id="08d4c-205">이 속성은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-205">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#20)]
 [!code-vb[S_UE_ChannelDispatcher#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-206">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-206">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="08d4c-207">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-207">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="08d4c-208">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-208">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberSignature Language="F#" Value="override this.OnAbort : unit -&gt; unit" Usage="channelDispatcher.OnAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08d4c-209">채널 디스패처에 연결된 수신기를 중지합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-209">Aborts the listener associated with the dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelDispatcher.OnBeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="08d4c-210">제한 시간이 초과되기 전에 닫기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-210">The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="08d4c-211">비동기 닫기 작업의 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-211">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the close operation.</span></span></param>
        <param name="state"><span data-ttu-id="08d4c-212">응용 프로그램에 의해 지정되는 개체로, 비동기 닫기 작업과 연결된 상태 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-212">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="08d4c-213">지정된 시간 간격 내에 완료해야 하는 디스패처의 채널 수신기를 닫기 위해 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-213">Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="08d4c-214">디스패처의 채널 수신기를 닫기 위해 비동기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-214">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close a channel listener for the dispatcher.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelDispatcher.OnBeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="08d4c-215">제한 시간이 초과되기 전에 열기 작업이 완료되어야 하는 기간을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-215">The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="08d4c-216">비동기 열기 작업의 완료에 대한 알림을 수신하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-216">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the open operation.</span></span></param>
        <param name="state"><span data-ttu-id="08d4c-217">응용 프로그램에서 지정하는 개체로, 비동기 열기 작업과 연결된 상태 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-217">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span></span></param>
        <summary><span data-ttu-id="08d4c-218">지정된 시간 간격 내에 완료해야 하는 디스패처의 채널 수신기를 열기 위해 비동기 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-218">Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="08d4c-219">디스패처의 채널 수신기를 열기 위해 비동기 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-219">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to open a channel listener for the dispatcher.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-220">이 메서드가 호출되면 `null`이 아닌 서비스 호스트에 채널 디스패처를 연결해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-220">The channel dispatcher must be associated with a non-`null` service host when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-221">호스트 또는 메시지 버전이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-221">The host or the message version is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnClose : TimeSpan -&gt; unit" Usage="channelDispatcher.OnClose timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="08d4c-222">수신기를 닫는 데 허용되는 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-222">The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the listener to close.</span></span></param>
        <summary><span data-ttu-id="08d4c-223">지정된 시간 간격 내에 디스패처에 연결된 채널 수신기를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-223">Closes the channel listener associated with the dispatcher within a specified interval of time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberSignature Language="F#" Value="override this.OnClosed : unit -&gt; unit" Usage="channelDispatcher.OnClosed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08d4c-224">채널 디스패처에 연결된 엔드포인트 디스패처의 닫기를 추적합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-224">Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndClose : IAsyncResult -&gt; unit" Usage="channelDispatcher.OnEndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="08d4c-225"><see cref="T:System.IAsyncResult" /> 메서드를 호출하여 반환된 <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-225">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="08d4c-226">디스패처의 채널 수신기를 닫기 위해 비동기 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-226">Completes an asynchronous operation to close a channel listener for the dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndOpen : IAsyncResult -&gt; unit" Usage="channelDispatcher.OnEndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="08d4c-227"><see cref="T:System.IAsyncResult" /> 메서드를 호출하여 반환된 <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-227">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="08d4c-228">디스패처의 채널 수신기를 열기 위해 비동기 작업을 완료합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-228">Completes an asynchronous operation to open a channel listener for the dispatcher.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnOpen : TimeSpan -&gt; unit" Usage="channelDispatcher.OnOpen timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="08d4c-229">수신기를 여는 데 허용되는 시간 간격을 지정하는 <see cref="T:System.TimeSpan" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-229">The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the listener to open.</span></span></param>
        <summary><span data-ttu-id="08d4c-230">채널 디스패처에 연결된 수신기를 엽니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-230">Opens the listener associated with the channel dispatcher.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-231">이 메서드가 호출되고 메시지 버전이 `null`이 아닌 값으로 설정된 경우 `null`이 아닌 서비스 호스트에 채널 디스패처를 연결해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-231">The channel dispatcher must be associated with a non-`null` service host when this method is called and message version must be set to a non-`null` value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-232">호스트 또는 메시지 버전이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-232">The host or the message version is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected override void OnOpened ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpened() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpened ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpened();" />
      <MemberSignature Language="F#" Value="override this.OnOpened : unit -&gt; unit" Usage="channelDispatcher.OnOpened " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08d4c-233">엔드포인트에 디스패치하는 데 사용되는 필터 테이블을 채우고 유효성을 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-233">Populates and validates filter table used to dispatch to the endpoints.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-234">이 메서드가 호출되면 `null`이 아닌 서비스 호스트에 채널 디스패처를 연결해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-234">The channel dispatcher must be associated with a non-`null` service host when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-235">호스트가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-235">The host is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpening ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpening();" />
      <MemberSignature Language="F#" Value="override this.OnOpening : unit -&gt; unit" Usage="channelDispatcher.OnOpening " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08d4c-236">채널 디스패처가 호스트에 연결되는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-236">Checks whether the channel dispatcher is attached to a host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-237">열 때 `null`이 아닌 서비스 호스트에 채널 디스패처를 연결해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-237">The channel dispatcher must be associated with a non-`null` service host on opening.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-238">호스트가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-238">The host is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveContextEnabled : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-239">ReceiveContext의 사용 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-239">Gets or sets whether ReceiveContext is enabled.</span></span></summary>
        <value><span data-ttu-id="08d4c-240">ReceiveContext를 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-240"><see langword="true" /> if ReceiveContext is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-241">ReceiveContext는 서비스에서 메시지를 처리하는 방법(예: 필요할 때까지 메시지 잠그기)을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-241">The ReceiveContext controls the manner in which messages are handled by the service, for example locking of the message as long as needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveSynchronously : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-242">디스패처가 동기 호출을 사용하여 채널에서 메시지를 읽는지 여부를 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-242">Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.</span></span></summary>
        <value><span data-ttu-id="08d4c-243">디스패처에서 동기화 메서드를 사용하여 채널에서 메시지를 읽으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-243"><see langword="true" /> if the dispatcher uses synchronous methods to read messages from channels; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="08d4c-244">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-244">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-245">바인딩을 구현 하는 경우 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, Windows Communication Foundation (WCF)의 값을 할당 합니다 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> 이 속성에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-245">If a binding implements <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, Windows Communication Foundation (WCF) assigns the value of the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property to this property.</span></span> <span data-ttu-id="08d4c-246">따라서 이 값이 `true`이면 `false`의 기본값(<xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> )이 재정의됩니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-246">So if this value is `true`, the `false` default value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> is overridden.</span></span>  
  
 <span data-ttu-id="08d4c-247">이 속성은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-247">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#14)]
 [!code-vb[S_UE_ChannelDispatcher#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-248">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-248">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="08d4c-249">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-249">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="08d4c-250">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-250">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsynchronously">
      <MemberSignature Language="C#" Value="public bool SendAsynchronously { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendAsynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Property SendAsynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendAsynchronously { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SendAsynchronously : bool with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-251">메시지의 비동기 전송 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-251">Gets or sets whether messages are sent asynchronously.</span></span></summary>
        <value><span data-ttu-id="08d4c-252">메시지를 비동기적으로 보내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-252"><see langword="true" /> if messages are sent asynchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceThrottle">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceThrottle As ServiceThrottle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ServiceThrottle ^ ServiceThrottle { System::ServiceModel::Dispatcher::ServiceThrottle ^ get(); void set(System::ServiceModel::Dispatcher::ServiceThrottle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceThrottle : System.ServiceModel.Dispatcher.ServiceThrottle with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ServiceThrottle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-253">채널 디스패처에 연결된 서비스에 대한 서비스 스로틀을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-253">Gets or sets the service throttle for the service associated with the channel dispatcher.</span></span></summary>
        <value><span data-ttu-id="08d4c-254"><see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-254">A <see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-255">이 속성을 사용하면 서비스의 가용성과 성능을 최적화하는 데 사용되는 컨트롤에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-255">This provides access to the controls used to optimize the availability and performance of a service.</span></span>  
  
 <span data-ttu-id="08d4c-256">이 속성은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-256">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#15)]
 [!code-vb[S_UE_ChannelDispatcher#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-257">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-257">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="08d4c-258">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-258">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="08d4c-259">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-259">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionIsolationLevel">
      <MemberSignature Language="C#" Value="public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Transactions.IsolationLevel TransactionIsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionIsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Transactions::IsolationLevel TransactionIsolationLevel { System::Transactions::IsolationLevel get(); void set(System::Transactions::IsolationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionIsolationLevel : System.Transactions.IsolationLevel with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Transactions.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-260">트랜잭션의 기본 격리 수준을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-260">Gets or sets the default isolation level for transactions.</span></span></summary>
        <value><span data-ttu-id="08d4c-261"><see cref="T:System.Transactions.IsolationLevel" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-261">One of the <see cref="T:System.Transactions.IsolationLevel" /> values.</span></span> <span data-ttu-id="08d4c-262">기본값은 <see cref="F:System.Transactions.IsolationLevel.Unspecified" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-262">The default is <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-263">서비스의 디스패처에서 만든 새 트랜잭션의 기본 격리 수준을 가져오거나 설정하려면 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-263">Use the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> property to get or set the default isolation level for new transactions created by the dispatcher for the service.</span></span>  
  
 <span data-ttu-id="08d4c-264">이 속성은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-264">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#16)]
 [!code-vb[S_UE_ChannelDispatcher#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="08d4c-265">격리 수준 설정이 정의되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-265">The isolation level set is not defined.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-266">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-266">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="08d4c-267">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-267">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="08d4c-268">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-268">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan TransactionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TransactionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TransactionTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08d4c-269">서비스 대신 디스패처에서 만든 새 트랜잭션의 기본 제한 시간을 지정하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-269">Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.</span></span></summary>
        <value><span data-ttu-id="08d4c-270">트랜잭션의 기본 제한 시간 기간을 나타내는 <see cref="T:System.TimeSpan" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-270">A <see cref="T:System.TimeSpan" /> value that represents the default timeout period for transactions.</span></span> <span data-ttu-id="08d4c-271">기본값은 <see cref="F:System.TimeSpan.Zero" />입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-271">The default is <see cref="F:System.TimeSpan.Zero" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08d4c-272">이 속성은 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="08d4c-272">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#17)]
 [!code-vb[S_UE_ChannelDispatcher#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="08d4c-273">값이 0보다 작거나 너무 큰 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-273">The value set is less than zero or is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="08d4c-274">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-274">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="08d4c-275">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-275">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="08d4c-276">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="08d4c-276">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>