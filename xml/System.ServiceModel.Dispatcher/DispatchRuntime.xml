<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DispatchRuntime.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52ebcdbf487b947610c70c557f3a59b06bdfe2006.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ebcdbf487b947610c70c557f3a59b06bdfe2006</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>Exposes properties that can be used to modify default service behavior as well as attach custom objects that can modify how incoming messages are transformed into objects and dispatched to operations.</source>
          <target state="translated">들어오는 메시지가 개체로 변형되고 작업에 디스패치되는 방법을 수정할 수 있는 사용자 지정 개체를 연결할 뿐만 아니라 기본 서비스 동작을 수정하는 데 사용할 수 있는 속성을 노출합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> class either to modify the default behavior of a service or individual endpoint, or to insert objects that implement custom modifications to one or both of the following service processes:</source>
          <target state="translated">서비스나 개별 끝점의 기본 동작을 수정하거나 다음 서비스 프로세스 중 하나 또는 모두에 대해 사용자 지정 수정을 구현하는 개체를 삽입하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>The transformation of incoming messages into objects and releasing those objects as method invocations on a service object.</source>
          <target state="translated">들어오는 메시지를 개체로 변형하고 이러한 개체를 서비스 개체에 대한 메서드 호출로 해제</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>The transformation of objects received from the response to a service operation invocation into outbound messages.</source>
          <target state="translated">서비스 작업 호출에 대한 응답에서 수신한 개체를 아웃바운드 메시지로 변형</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>In <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, the channel and endpoint dispatchers are the service components responsible for accepting new channels, receiving messages, method dispatch and invocation, and response processing.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>에서 채널 및 끝점 디스패처는 새로운 채널 허용, 메시지 수신, 메서드 디스패치 및 호출, 응답 처리 등을 담당하는 서비스 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>Each endpoint exposed by a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object has one endpoint dispatcher and an associated channel dispatcher; in addition, each client that participates in duplex communication also has an endpoint dispatcher and channel dispatcher for each callback endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 개체에 의해 노출되는 각 끝점에는 끝점 디스패처 및 이에 연결된 채널 디스패처가 하나씩 있습니다. 또한 양방향 통신에 참여하는 각 클라이언트에도 콜백 끝점마다 끝점 디스패처와 채널 디스패처가 하나씩 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> enables you to intercept and extend the channel or endpoint dispatcher for all messages across a particular contract, even when a message is not recognized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph>을 사용하면 메시지가 인식되지 않는 경우에도 특정 계약을 통해 모든 메시지에 대한 채널 또는 끝점 디스패처를 가로채서 확장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>When a message arrives that does not match any messages declared in the contract it is dispatched to the operation that was returned by the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A&gt;</ph> property.</source>
          <target state="translated">계약에 선언된 메시지와 일치하지 않는 메시지가 도착하면 이 메시지는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A&gt;</ph> 속성에 의해 반환된 작업에 디스패치됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>To intercept or extend across all messages for a particular operation, see the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> class.</source>
          <target state="translated">특정 작업에 대한 모든 메시지를 가로채거나 확장하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> 클래스를 참조하세요.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>There are four main areas of dispatcher extensibility exposed by the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> class:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> 클래스에 의해 노출되는 디스패처 확장성의 네 가지 기본 영역은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>Dispatch components use the properties of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and those of the associated channel dispatcher returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher%2A&gt;</ph> property to customize how the channel dispatcher accepts and closes channels.</source>
          <target state="translated">디스패치 구성 요소에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph>의 속성 및 연결된 채널 디스패처의 속성(<ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher%2A&gt;</ph> 속성에서 반환됨)을 사용하여 채널 디스패처가 채널을 허용하고 닫는 방법을 사용자 지정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>This category includes the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers%2A&gt;</ph> properties.</source>
          <target state="translated">이 범주에는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers%2A&gt;</ph> 속성이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>Message components are customized for each message processed.</source>
          <target state="translated">메시지 구성 요소는 처리되는 메시지별로 사용자 지정됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>This category includes the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph>, and the <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt;</ph> properties.</source>
          <target state="translated">이 범주에는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt;</ph> 속성이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>Instance components customize the creation, lifetime, and disposal of instances of the service type.</source>
          <target state="translated">인스턴스 구성 요소는 해당 서비스 형식 인스턴스의 생성, 수명, 삭제를 사용자 지정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>For more information about service object lifetimes, see the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property.</source>
          <target state="translated">서비스 개체 수명에 대한 자세한 내용은 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> 속성을 참조하세요.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>This category includes the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A&gt;</ph> properties.</source>
          <target state="translated">이 범주에는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A&gt;</ph> 속성이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>Security-related components can use the following properties:</source>
          <target state="translated">보안 관련 구성 요소는 다음과 같은 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph> indicates where audit events are written.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph>은 감사 이벤트가 작성되는 위치를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations%2A&gt;</ph> controls whether the service attempts to impersonate using the credentials provided by the incoming message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations%2A&gt;</ph>는 들어오는 메시지가 제공하는 자격 증명을 사용하여 서비스가 가장을 시도하는지 여부를 제어합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel%2A&gt;</ph> controls whether successful message authentication events are written to the event log specified by <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel%2A&gt;</ph>은 성공적인 메시지 권한 부여 이벤트가 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph>에서 지정된 이벤트 로그에 작성되는지 여부를 제어합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode%2A&gt;</ph> controls how the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> 속성을 설정하는 방법을 제어합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A&gt;</ph> specifies how the auditing of authorization events is performed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A&gt;</ph>은 권한 부여 이벤트에 대한 감사를 수행하는 방법을 지정합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure%2A&gt;</ph> specifies whether to suppress non-critical exceptions that occur during the logging process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure%2A&gt;</ph>는 로깅 프로세스 중에 발생하는 중요하지 않은 예외가 표시되지 않도록 할지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>Typically custom extension objects are assigned to a <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> property or inserted into a collection by a service behavior (an object that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>), a contract behavior (an object that implements <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>), or an endpoint behavior (an object that implements <ph id="ph4">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph>).</source>
          <target state="translated">일반적으로 사용자 지정 확장 개체는 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> 속성에 할당되거나 서비스 동작(<ph id="ph2">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>를 구현하는 개체), 계약 동작(<ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>를 구현하는 개체) 또는 끝점 동작(<ph id="ph4">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph>를 구현하는 개체)에 의해 컬렉션에 삽입됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.DispatchRuntime">
          <source>Then the installing behavior object is added to the appropriate collection of behaviors either programmatically or by implementing a custom <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement&gt;</ph> object to enable the behavior to be inserted using an application configuration file.</source>
          <target state="translated">그런 다음 프로그래밍 방식을 사용하거나 사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement&gt;</ph> 개체를 구현하여 설치 동작 개체를 해당 동작 컬렉션에 추가하므로, 응용 프로그램 구성 파일을 사용하여 동작을 삽입할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown">
          <source>Gets or sets a value that specifies whether the service closes an input session when the client closes an output session.</source>
          <target state="translated">클라이언트가 출력 세션을 닫을 때 서비스에서 입력 세션을 닫는지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service closes an input session when the client closes an output session; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클라이언트가 출력 세션을 닫을 때 서비스에서 입력 세션을 닫으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown">
          <source>If you set the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, the channel must be closed by some other mechanism.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph>로 설정하면 다른 메커니즘을 사용하여 채널을 닫아야 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown">
          <source>In this case, you must add a custom session shutdown handler to the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers%2A&gt;</ph> property.</source>
          <target state="translated">이런 경우 사용자 지정 세션 종료 처리기를 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers%2A&gt;</ph> 속성에 추가해야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown">
          <source>By default when a client closes an output session and the service has finished processing any remaining messages the server closes the session.</source>
          <target state="translated">기본적으로 클라이언트가 출력 세션을 닫고 서비스에서 나머지 메시지 처리를 마치면 서버는 해당 세션을 닫습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown%2A&gt;</ph> to <ph id="ph2">`false`</ph> prevents the server from automatically closing the session and enables custom control of session lifetimes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown%2A&gt;</ph>을 <ph id="ph2">`false`</ph>로 설정하면 서버에서 세션을 자동으로 닫지 못하고 세션 수명에 대한 사용자 지정 컨트롤이 활성화됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> object that represents the installation point for extensions to <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> for outbound calls to a duplex callback endpoint.</source>
          <target state="translated">이중 콜백 끝점에 대한 아웃바운드 호출을 위해 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph>에 대한 확장 설치 지점을 나타내는 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> object that is the installation point for run-time client customization in duplex contracts.</source>
          <target state="translated">이중 계약에서 런타임 클라이언트 사용자 지정을 위한 설치 지점인 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph> to add custom extension objects that view or modify the conversion of parameters to outbound messages and response messages back into return values.</source>
          <target state="translated">아웃바운드 메시지 및 응답 메시지로 변환했던 매개 변수를 보고 다시 반환 값으로 수정하는 사용자 지정 확장 개체를 추가하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph>을 사용합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /&gt;</ph> for this dispatch run-time object.</source>
          <target state="translated">이 디스패치 런타임 개체의 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher">
          <source>The channel dispatcher for the dispatch run-time object.</source>
          <target state="translated">디스패치 런타임 개체의 채널 디스패처입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ConcurrencyMode">
          <source>Gets or sets whether an instance of a service processes messages sequentially or concurrently.</source>
          <target state="translated">서비스의 인스턴스가 메시지를 순차적으로 처리할지 동시에 처리할지를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ConcurrencyMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ConcurrencyMode" /&gt;</ph> object that controls whether an instance of a service processes messages sequentially or concurrently.</source>
          <target state="translated">서비스의 인스턴스가 메시지를 순차적으로 처리할지 동시에 처리할지를 제어하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ConcurrencyMode" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ConcurrencyMode">
          <source>The service implementation must be thread-safe to use the <ph id="ph1">`Multiple`</ph> concurrency mode.</source>
          <target state="translated"><ph id="ph1">`Multiple`</ph> 동시성 모드를 사용하려면 스레드로부터 안전하게 서비스를 구현해야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /&gt;</ph> for this dispatch runtime.</source>
          <target state="translated">이 디스패치 런타임의 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /&gt;</ph> for this dispatch runtime.</source>
          <target state="translated">이 디스패치 런타임의 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher%2A&gt;</ph> property to obtain the endpoint dispatcher associated with this dispatch runtime to modify or customize endpoint-specific execution.</source>
          <target state="translated">이 디스패치 런타임과 연결된 끝점 디스패처를 가져와서 끝점별 실행을 수정하거나 사용자 지정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.EnsureOrderedDispatch">
          <source>Gets a value that indicates whether messages are to be dispatched in the order they were sent.</source>
          <target state="translated">메시지가 전송된 순서대로 디스패치되는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.EnsureOrderedDispatch">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if messages are to be dispatched in the order they were sent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">전송된 순서대로 메시지를 디스패치해야 하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ExternalAuthorizationPolicies">
          <source>Gets or sets the external authorization policies that define a set of rules for authorizing a user, given a set of claims.</source>
          <target state="translated">클레임 집합이 있는 경우 사용자에게 권한을 부여하기 위한 규칙 집합을 정의하는 외부 권한 부여 정책을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ExternalAuthorizationPolicies">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph> objects that define a set of rules for authorizing a user, given a set of claims.</source>
          <target state="translated">클레임 집합이 있는 경우 사용자에게 권한을 부여하기 위한 규칙 집합을 정의하는 <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ExternalAuthorizationPolicies">
          <source>Use this property to add a custom implementation of <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> that defines a set of rules for authorizing a user, given a set of claims.</source>
          <target state="translated">클레임 집합이 있는 경우에 사용자에게 권한을 부여하기 위한 규칙 집합을 정의하는 <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>의 사용자 지정 구현을 추가하려면 이 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ExternalAuthorizationPolicies">
          <source>This custom implementation is used every time the service is called.</source>
          <target state="translated">이 사용자 지정 구현은 서비스가 호출될 때마다 사용됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.IgnoreTransactionMessageProperty">
          <source>Gets or sets whether to ignore the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" /&gt;</ph>를 무시하는지 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.IgnoreTransactionMessageProperty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" /&gt;</ph> is ignored when executing the service method; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서비스 메서드를 실행할 때 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" /&gt;</ph>가 무시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.IgnoreTransactionMessageProperty">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionMessageProperty&gt;</ph> allows third-party channel developers who use a proprietary transaction flow mechanism for their channel to introduce their transaction into <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionMessageProperty&gt;</ph>를 사용하면 비공개 트랜잭션 흐름 메커니즘을 채널에 사용하는 타사 채널 개발자가 해당 트랜잭션을 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>에 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.IgnoreTransactionMessageProperty">
          <source>If this property is set to <ph id="ph1">`true`</ph>, the transaction is ignored when executing the service method.</source>
          <target state="translated">이 속성을 <ph id="ph1">`true`</ph>로 설정하면 서비스 메서드를 실행할 때 트랜잭션이 무시됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations">
          <source>Gets or sets a value that controls whether the service attempts to impersonate using the credentials provided by the incoming message.</source>
          <target state="translated">들어오는 메시지가 제공하는 자격 증명을 사용하여 서비스가 가장을 시도하는지 여부를 제어하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service attempts to impersonate based on message credentials when an operation's <ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /&gt;</ph> property value is either <ph id="ph3">&lt;see cref="F:System.ServiceModel.ImpersonationOption.Required" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.ServiceModel.ImpersonationOption.Allowed" /&gt;</ph>; <ph id="ph5">&lt;see langword="false" /&gt;</ph> if the service attempts impersonation only if an operation's <ph id="ph6">&lt;see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /&gt;</ph> property value is <ph id="ph7">&lt;see cref="F:System.ServiceModel.ImpersonationOption.Required" /&gt;</ph>.</source>
          <target state="translated">작업의 <ph id="ph2">&lt;see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /&gt;</ph> 속성 값이 <ph id="ph3">&lt;see cref="F:System.ServiceModel.ImpersonationOption.Required" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.ServiceModel.ImpersonationOption.Allowed" /&gt;</ph>일 때 서비스에서 메시지 자격 증명을 기반으로 가장을 시도할 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 작업의 <ph id="ph6">&lt;see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /&gt;</ph> 속성 값이 <ph id="ph7">&lt;see cref="F:System.ServiceModel.ImpersonationOption.Required" /&gt;</ph>일 때만 서비스에서 가장을 시도하면 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations%2A&gt;</ph> property to control whether impersonation is performed when an operation's <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A&gt;</ph> property value is <ph id="ph3">&lt;xref:System.ServiceModel.ImpersonationOption.Allowed&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations%2A&gt;</ph> 속성을 사용하여 작업의 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A&gt;</ph> 속성 값이 <ph id="ph3">&lt;xref:System.ServiceModel.ImpersonationOption.Allowed&gt;</ph>일 때 가장을 수행하는지 여부를 제어합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations">
          <source>An exception is thrown if the property is <ph id="ph1">`true`</ph> but an operation's <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A&gt;</ph> property value is <ph id="ph3">&lt;xref:System.ServiceModel.ImpersonationOption.NotAllowed&gt;</ph>.</source>
          <target state="translated">속성이 <ph id="ph1">`true`</ph>이고 작업의 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A&gt;</ph> 속성 값은 <ph id="ph3">&lt;xref:System.ServiceModel.ImpersonationOption.NotAllowed&gt;</ph>이면 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations">
          <source>If an operation's <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A&gt;</ph> property value is <ph id="ph2">&lt;xref:System.ServiceModel.ImpersonationOption.Required&gt;</ph> impersonation is always attempted.</source>
          <target state="translated">작업의 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A&gt;</ph> 속성 값이 <ph id="ph2">&lt;xref:System.ServiceModel.ImpersonationOption.Required&gt;</ph>이면 항상 가장이 시도됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateOnSerializingReply">
          <source>Gets a value that indicates whether impersonation is used on serializing reply operation.</source>
          <target state="translated">회신 작업을 serialize하는 데 가장을 사용하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateOnSerializingReply">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if impersonation is used on serializing reply operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">응답 serialize 작업에 대해 가장이 사용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" /&gt;</ph> objects that can be used to add a custom handler to control how input sessions are closed.</source>
          <target state="translated">입력 세션을 닫는 방법을 제어하는 사용자 지정 처리기를 추가하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" /&gt;</ph> 개체 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SynchronizedCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SynchronizedCollection`1" /&gt;</ph> 형식 개체의 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers">
          <source>Add an <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInputSessionShutdown&gt;</ph> object to this property to control the manner in which input sessions are closed.</source>
          <target state="translated">이 속성에 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInputSessionShutdown&gt;</ph> 개체를 추가하여 입력 세션을 닫는 방법을 제어합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers">
          <source>When a call to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A?displayProperty=nameWithType&gt;</ph> method on the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel?displayProperty=nameWithType&gt;</ph> first returns <ph id="ph3">`null`</ph>, (which indicates that the input session has been closed), the dispatcher invokes each <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.IInputSessionShutdown&gt;</ph> object, passing it an <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A?displayProperty=nameWithType&gt;</ph>에서 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel?displayProperty=nameWithType&gt;</ph> 메서드를 호출하여 처음에 <ph id="ph3">`null`</ph>이 반환되면(입력 세션이 닫혔음을 나타냄) 디스패처는 각 <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.IInputSessionShutdown&gt;</ph> 개체를 호출하여 이 개체에 <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel?displayProperty=nameWithType&gt;</ph> 개체를 전달합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers">
          <source>Custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInputSessionShutdown&gt;</ph> objects can use this <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> object to perform clean-up for each channel state or to send a response message before closing the channel.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInputSessionShutdown&gt;</ph> 개체는 전달된 이 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> 개체를 사용하여 각 채널 상태를 정리하거나 채널을 닫기 이전에 응답 메시지를 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" /&gt;</ph> objects that can be used to inspect or modify an <ph id="ph2">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object when it is first created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" /&gt;</ph> 개체를 처음 만들 때 개체를 검사하거나 수정하는 데 사용할 수 있는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 개체 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SynchronizedCollection`1" /&gt;</ph> object of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SynchronizedCollection`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A&gt;</ph> property to add a custom initializer that can inspect or modify an <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object when it is first created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A&gt;</ph> 개체를 처음 만들 때 이 개체를 검사 또는 수정할 수 있는 사용자 지정 이니셜라이저를 추가하려면 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers">
          <source>The frequency with which <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects are created is controlled by the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 개체가 생성되는 빈도는 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> 속성에 의해 제어됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextProvider">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /&gt;</ph> to be used by the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /&gt;</ph>에서 사용할 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextProvider">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /&gt;</ph> to be used by the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /&gt;</ph>에서 사용할 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" /&gt;</ph> object that you can use to control the creation and destruction of service objects.</source>
          <target state="translated">서비스 개체 생성과 삭제를 제어하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" /&gt;</ph> 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" /&gt;</ph> object that controls the creation and destruction of service objects associated with an <ph id="ph2">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" /&gt;</ph> 개체와 연결된 서비스 개체의 생성과 삭제를 제어하는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> interface and assign the implementation to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A&gt;</ph> property to control instances of the service type using a constructor other than the default constructor, for example, to implement a custom instancing mode such as instance pooling.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> 인터페이스를 구현하여 이를 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A&gt;</ph> 속성에 할당하면 기본 생성자가 아닌 다른 생성자를 사용하여 해당 서비스 형식의 인스턴스를 제어합니다. 예를 들어, 인스턴스 풀링과 같은 사용자 지정 인스턴스 모드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
          <source>Typically the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A&gt;</ph> method is invoked once, when the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object is first created.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 개체가 처음 만들어질 때 한 번 호출됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A&gt;</ph> method is also invoked once, when the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object is closed.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 개체가 닫힐 때 한 번 호출됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
          <source>A service can also be configured to release an instance before the <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object is closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 개체가 닫히기 전에 인스턴스를 해제하도록 서비스를 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
          <source>This can be configured by using the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> property or by calling the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> 속성을 사용하거나 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A&gt;</ph> 메서드를 호출하면 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
          <source>If this is done, the <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object calls the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A&gt;</ph> method.</source>
          <target state="translated">이 작업이 수행되면 <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
          <source>If a new message arrives after the instance has been released, a new instance is created using the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A&gt;</ph> method.</source>
          <target state="translated">인스턴스가 해제된 이후에 새 메시지가 도착하면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A&gt;</ph> 메서드를 사용하여 새 인스턴스가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel">
          <source>Gets or sets a value that specifies whether successful message authentication events are written to the event log specified by <ph id="ph1">&lt;see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation" /&gt;</ph>.</source>
          <target state="translated">성공적인 메시지 권한 부여 이벤트를 <ph id="ph1">&lt;see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation" /&gt;</ph>에서 지정된 이벤트 로그에 쓰는지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.AuditLevel" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.AuditLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.ServiceModel.AuditLevel.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.ServiceModel.AuditLevel.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel%2A&gt;</ph> property to specify whether successful message authentication events are written to the event log.</source>
          <target state="translated">성공적인 메시지 권한 부여 이벤트를 이벤트 로그에 쓸지 여부를 지정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" /&gt;</ph> objects that can be used to attach a custom message inspector for all incoming and outgoing messages across the endpoint.</source>
          <target state="translated">끝점을 통해 들어오거나 나가는 모든 메시지에 대해 사용자 지정 메시지 검사자를 연결하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" /&gt;</ph> 개체 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SynchronizedCollection`1" /&gt;</ph> object of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SynchronizedCollection`1" /&gt;</ph> 형식의 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A&gt;</ph> property to attach custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector&gt;</ph> objects that can inspect or transform all messages that flow through the endpoint.</source>
          <target state="translated">끝점을 통해 이동하는 모든 메시지를 검사 또는 변환할 수 있는 사용자 지정 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A&gt;</ph> 개체를 연결하려면 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors">
          <source>Because the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector&gt;</ph> object gets a reference to the message, you can buffer it and examine a copy of the body.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector&gt;</ph> 개체는 메시지에 대한 참조를 가져오므로 사용자는 참조를 버퍼링하여 본문 복사본을 검토할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /&gt;</ph> objects that can be used to control the execution behavior of a particular operation.</source>
          <target state="translated">특정 작업의 실행 동작을 제어하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /&gt;</ph> 개체 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> 개체 형식의 <ph id="ph3">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> property to inspect or modify parameters, control parameter and return value serialization and deserialization, control operation invocation, and modify other behaviors for a single operation.</source>
          <target state="translated">매개 변수 검사 또는 수정, 매개 변수 값 및 반환 값의 serialization과 deserialization 제어, 작업 호출 제어, 단일 작업에 대한 다른 동작 수정 등을 수행하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" /&gt;</ph> object that controls the selection of a destination <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /&gt;</ph> for a particular message.</source>
          <target state="translated">특정 메시지에 대한 대상 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" /&gt;</ph> 선택을 제어하는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /&gt;</ph> 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector%2A&gt;</ph> property to decide which operation receives a given message.</source>
          <target state="translated">특정 메시지를 수신할 작업을 결정하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector%2A&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector">
          <source>The default operation selector returns the value of the action header for the message, which is used as the key to locate the correct <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>.</source>
          <target state="translated">기본 작업 선택기는 메시지에 대한 동작 헤더 값을 반환하며, 이 값은 올바른 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>을 찾기 위한 키로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector">
          <source>If no matching operation is found, the invocation is dispatched to the return value from the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A&gt;</ph> property.</source>
          <target state="translated">일치하는 작업이 없으면 호출은 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A&gt;</ph> 속성에서 반환되는 값에 디스패치됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.PreserveMessage">
          <source>Gets or sets whether the message is preserved.</source>
          <target state="translated">메시지의 보존 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.PreserveMessage">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if message is preserved; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">메시지를 보존하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode">
          <source>Gets or sets a value that specifies how the <ph id="ph1">&lt;see cref="P:System.Threading.Thread.CurrentPrincipal" /&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.Thread.CurrentPrincipal" /&gt;</ph> 속성 설정 방법을 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PrincipalPermissionMode" /&gt;</ph> values; the default is <ph id="ph2">&lt;see cref="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PrincipalPermissionMode" /&gt;</ph> 값 중 하나입니다. 기본값은 <ph id="ph2">&lt;see cref="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.None&gt;</ph>, the <ph id="ph3">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> property is not set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode%2A&gt;</ph>가 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.None&gt;</ph>이면 <ph id="ph3">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> 속성이 설정되지 않습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode">
          <source>When the value is <ph id="ph1">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups&gt;</ph> the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> property is populated with a <ph id="ph3">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> based on the user credentials of the incoming message.</source>
          <target state="translated">값이 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups&gt;</ph>이면, <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> 속성은 들어오는 메시지에 대한 사용자 자격 증명을 기반으로 하여 <ph id="ph3">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph>로 채워집니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode">
          <source>When the value is <ph id="ph1">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles&gt;</ph> the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> property is populated with an <ph id="ph3">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph> object based on <ph id="ph4">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> role information.</source>
          <target state="translated">값이 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles&gt;</ph>이면, <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph> 역할 정보를 기반으로 하여 <ph id="ph4">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> 개체로 채워집니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode">
          <source>When the value is <ph id="ph1">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom&gt;</ph> the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> property is populated by a custom <ph id="ph3">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> implementation.</source>
          <target state="translated">값이 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom&gt;</ph>이면, <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> 속성은 사용자 지정 <ph id="ph3">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> 구현에 의해 채워집니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete">
          <source>Gets or sets a value that specifies whether the service object is recycled after the transaction successfully completes.</source>
          <target state="translated">트랜잭션이 성공적으로 완료된 후에 서비스 개체를 재활용하는지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service object is recycled after the transaction successfully completes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">트랜잭션이 성공적으로 완료된 후에 서비스 개체가 재활용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete">
          <source>The default value is the value of <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /&gt;</ph>의 값입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> to specify that the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A&gt;</ph> method is called when the transaction successfully completes.</source>
          <target state="translated">트랜잭션이 성공적으로 완료되면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> 메서드를 호출하도록 지정하려면 <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A&gt;</ph>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.RoleProvider">
          <source>Gets or sets the custom <ph id="ph1">&lt;see cref="T:System.Web.Security.RoleProvider" /&gt;</ph> that is used by the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Security.RoleProvider" /&gt;</ph>에 사용되는 사용자 지정 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.RoleProvider">
          <source>The custom <ph id="ph1">&lt;see cref="T:System.Web.Security.RoleProvider" /&gt;</ph> that is used by the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Security.RoleProvider" /&gt;</ph>에 사용되는 사용자 지정 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation">
          <source>Gets or sets the location of the audit log.</source>
          <target state="translated">감사 로그의 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.AuditLogLocation" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.AuditLogLocation" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthenticationManager">
          <source>Gets or sets the object that manages an authentication process for service operations.</source>
          <target state="translated">서비스 작업의 인증 프로세스를 관리하는 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthenticationManager">
          <source>An authentication management object.</source>
          <target state="translated">인증 관리 개체입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthenticationManager">
          <source>Authentication determines the identity of the entity that signed a message.</source>
          <target state="translated">인증에 따라 메시지에 서명한 엔티티의 ID가 결정됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel">
          <source>Gets or sets a value that controls what service authorization events are audited.</source>
          <target state="translated">어느 서비스 권한 부여 이벤트를 감사할지 제어하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.AuditLevel" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.AuditLevel" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.ServiceModel.AuditLevel.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.ServiceModel.AuditLevel.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel">
          <source>In the default case, no service authorization events are audited.</source>
          <target state="translated">기본적으로 서비스 권한 부여 이벤트는 감사하지 않습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A&gt;</ph> value is <ph id="ph2">&lt;xref:System.ServiceModel.AuditLevel.Success&gt;</ph>, only successful service authorization events are written to the audit log specified by the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A&gt;</ph> 값이 <ph id="ph2">&lt;xref:System.ServiceModel.AuditLevel.Success&gt;</ph>이면 성공적인 서비스 권한 부여 이벤트만 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph> 속성에서 지정된 감사 로그에 기록됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel">
          <source>If this property has a value of <ph id="ph1">&lt;xref:System.ServiceModel.AuditLevel.Failure&gt;</ph>, only unsuccessful service authorization events are written to the audit log specified by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph> property.</source>
          <target state="translated">이 속성의 값이 <ph id="ph1">&lt;xref:System.ServiceModel.AuditLevel.Failure&gt;</ph>이면 성공하지 못한 서비스 권한 부여 이벤트만 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph> 속성에서 지정된 감사 로그에 기록됩니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A&gt;</ph> value is <ph id="ph2">&lt;xref:System.ServiceModel.AuditLevel.SuccessOrFailure&gt;</ph>, both successful and failed service authorization events are written to the audit log.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A&gt;</ph> 값이 <ph id="ph2">&lt;xref:System.ServiceModel.AuditLevel.SuccessOrFailure&gt;</ph>이면 성공한 서비스 권한 부여 이벤트와 실패한 서비스 권한 부여 이벤트 모두 감사 로그에 기록됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceAuthorizationManager" /&gt;</ph> that provides authorization checking for the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceAuthorizationManager" /&gt;</ph>에 대한 인증 확인을 제공하는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceAuthorizationManager" /&gt;</ph> that provides authorization checking for the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceAuthorizationManager" /&gt;</ph>에 대한 인증 확인을 제공하는 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SingletonInstanceContext">
          <source>Gets or sets the singleton <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /&gt;</ph> to be used by the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /&gt;</ph>에서 사용할 singleton <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SingletonInstanceContext">
          <source>The singleton <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /&gt;</ph> to be used by the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /&gt;</ph>에서 사용할 singleton <ph id="ph2">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure">
          <source>Gets or sets a value that specifies whether to suppress non-critical exceptions that occur during the logging process.</source>
          <target state="translated">로깅 프로세스 중에 발생하는 중요하지 않은 예외가 표시되지 않도록 할지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if non-critical exceptions that occur during the logging process are suppressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">로깅 프로세스 중에 발생하는 중요하지 않은 예외를 표시하지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure">
          <source>Set <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure%2A&gt;</ph> to <ph id="ph2">`false`</ph> if you want exceptions that occur during the course of writing the audit log to be re-thrown to the application.</source>
          <target state="translated">감사 로그를 기록하는 과정에서 발생하는 예외를 응용 프로그램에 다시 throw되도록 하려면 <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure%2A&gt;</ph>를 <ph id="ph2">`false`</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure">
          <source>In the default case, only the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, <ph id="ph2">&lt;xref:System.StackOverflowException&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>, and <ph id="ph4">&lt;xref:System.ArgumentException&gt;</ph> exceptions that result from attempts to write audit events are re-thrown to the application; all other exceptions are suppressed.</source>
          <target state="translated">기본적으로, 감사 이벤트 쓰기 시도 결과로 발생하는 <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, <ph id="ph2">&lt;xref:System.StackOverflowException&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> 및 <ph id="ph4">&lt;xref:System.ArgumentException&gt;</ph> 예외만 응용 프로그램에 다시 throw되고 모든 다른 예외는 표시되지 않습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SynchronizationContext">
          <source>Gets or sets the synchronization context that is used to invoke the service operations.</source>
          <target state="translated">서비스 작업을 호출하는 데 사용되는 동기화 컨텍스트를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SynchronizationContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> object used to determine on which thread the service operation is invoked.</source>
          <target state="translated">서비스 작업이 호출되는 스레드를 결정하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SynchronizationContext">
          <source>The return value can be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">반환 값은 <ph id="ph1">`null`</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.SynchronizationContext">
          <source>If this value is not <ph id="ph1">`null`</ph>, then this synchronization context is used to invoke the service operations on the correct thread.</source>
          <target state="translated">이 값이 <ph id="ph1">`null`</ph>이 아니면 이 동기화 컨텍스트를 사용하여 올바른 스레드에서 서비스 작업을 호출합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose">
          <source>Gets or sets a value that specifies whether to automatically complete the current transaction when the session closes.</source>
          <target state="translated">세션이 닫힐 때 현재 트랜잭션이 자동으로 완료되는지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if transactions automatically complete when the session closes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">세션이 닫힐 때 트랜잭션이 자동으로 완료되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose">
          <source>The default is the value specified by <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /&gt;</ph>에서 지정한 값입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose%2A&gt;</ph> is <ph id="ph2">`true`</ph> and there is an active transaction, the transaction is completed when the session closes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose%2A&gt;</ph>가 <ph id="ph2">`true`</ph>이고 활성 트랜잭션이 있으면 세션이 닫힐 때 트랜잭션이 완료됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose%2A&gt;</ph> is <ph id="ph2">`false`</ph>, active transactions are not completed and are eventually aborted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose%2A&gt;</ph>가 <ph id="ph2">`false`</ph>이면 활성 트랜잭션이 완료되지 않고 중단됩니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.Type">
          <source>Gets or sets the contract type.</source>
          <target state="translated">계약 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.Type">
          <source>The type of the contract.</source>
          <target state="translated">계약의 형식입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation">
          <source>Gets or sets the operation to which unrecognized messages are dispatched.</source>
          <target state="translated">인식되지 않은 메시지를 디스패치할 대상 작업을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /&gt;</ph> to which unrecognized messages are dispatched.</source>
          <target state="translated">인식되지 않은 메시지가 디스패치되는 대상 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation">
          <source>The operation return by the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A&gt;</ph> is the operation indicated by the use of the "*" (asterisk) in the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A&gt;</ph>에 의해 반환되는 작업은 <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 속성에서 "*"(별표)로 표시된 작업입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand">
          <source>Gets or sets the value of <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand">
          <source>The value of <ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" /&gt;</ph>의 값</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand">
          <source>Determines whether unexpected message headers cause an error condition.</source>
          <target state="translated">예기치 않은 메시지 헤더가 오류 발생 조건이 되는지 여부를 결정합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>