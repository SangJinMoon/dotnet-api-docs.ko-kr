<Type Name="MailMessage" FullName="System.Net.Mail.MailMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29417abf344275660b4aa4df6ededefe8fcd7d5c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36475437" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MailMessage : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailMessage extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class MailMessage&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailMessage : IDisposable" />
  <TypeSignature Language="F#" Value="type MailMessage = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Net.Mail.SmtpClient" /> 클래스를 사용하여 보낼 수 있는 이메일 메시지를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스는 <xref:System.Net.Mail.MailMessage> 클래스 사용 하 여 배달용 SMTP 서버로 전송 되는 전자 메일 메시지를 생성에 사용 되는 <xref:System.Net.Mail.SmtpClient> 클래스입니다.  
  
 매개 변수로 보낸 사람, 받는 사람, 제목 및 전자 메일 메시지의 본문을 지정할 수 있습니다 때는 <xref:System.Net.Mail.MailMessage.%23ctor%2A> 초기화 하는 데 사용 되는 <xref:System.Net.Mail.MailMessage> 개체입니다. 이러한 매개 변수를 설정할 수도 있습니다 또는에서 속성을 사용 하 여 액세스는 <xref:System.Net.Mail.MailMessage> 개체입니다.  
  
 기본 메일 메시지 헤더 및 메시지에 대 한 요소 설정할 수 있습니다 다음 속성을 사용 하 여 <xref:System.Net.Mail.MailMessage> 클래스입니다.  
  
|메일 헤더 또는 부분|속성|  
|-------------------------|--------------|  
|첨부 파일|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|(숨은)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|탄소 복사본 (CC)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|콘텐츠-유형|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|사용자 지정 헤더에 대 한 인코딩|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|메시지 본문|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|우선 순위|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|받는 사람|<xref:System.Net.Mail.MailMessage.To%2A>|  
|회신 대상|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|보낸 사람|<xref:System.Net.Mail.MailMessage.From%2A>|  
|Subject|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
 <xref:System.Net.Mail.MailMessage> 클래스에서는 응용 프로그램을 사용 하 여 메시지에 대 한 헤더 컬렉션에 액세스 하는 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성입니다. 이 컬렉션은 읽기 전용으로 설정 하는 동안 (새 컬렉션을 설정할 수 없습니다), 사용자 지정 헤더에 추가할 수 또는이 컬렉션에서 삭제 합니다. 때 추가 된 모든 사용자 지정 헤더 포함 됩니다는 <xref:System.Net.Mail.MailMessage> 인스턴스에 전송 됩니다. 머리글만에서이 컬렉션에 특별히 추가 된 메시지를 보내기 전에 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성 컬렉션에 포함 됩니다. 후는 <xref:System.Net.Mail.MailMessage> 인스턴스가 전달 된는 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성 관련된 속성을 사용 하 여 설정 된 헤더에도 포함 됩니다는 <xref:System.Net.Mail.MailMessage> 경우 전달 된 클래스 또는 매개 변수는 <xref:System.Net.Mail.MailMessage.%23ctor%2A> 초기화 하는 데 사용 되는 <xref:System.Net.Mail.MailMessage> 개체입니다.  
  
 일부 메일 헤더가 잘못 된 경우에 전자 메일 메시지를 손상 시킬 수 있습니다. 속성을 사용 하 여 설정할 수 있는 헤더 컬렉션의 내용이 메일 헤더는 <xref:System.Net.Mail.MailMessage> 클래스만 설정 해야 사용 하 여는 <xref:System.Net.Mail.MailMessage> 클래스 속성 또는 매개 변수로 전달 된 경우는 <xref:System.Net.Mail.MailMessage.%23ctor%2A> 를 초기화는 <xref:System.Net.Mail.MailMessage> 개체입니다. 사용 하 여 다음과 같은 메일 헤더 추가 되지 않아야는 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성 및 값을 사용 하 여 이러한 헤더에 대해 설정 된 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성 삭제 되거나 덮어는 메시지를 보낼 때:  
  
-   숨은 참조  
  
-   Cc  
  
-   콘텐츠 ID  
  
-   콘텐츠 위치  
  
-   콘텐츠 전송 인코딩  
  
-   콘텐츠-유형  
  
-   날짜  
  
-   시작  
  
-   중요도  
  
-   MIME 버전  
  
-   우선 순위  
  
-   회신 대상  
  
-   보낸 사람  
  
-   대상  
  
-   X-우선 순위  
  
 응용 프로그램이 사용 하 여 X 보낸 사람 헤더 지정 하지 않은 경우는 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성에는 <xref:System.Net.Mail.MailMessage> 클래스에서 만들어집니다는 메시지를 보낼 때.  
  
 사용 하 여는 <xref:System.Net.Mail.MailMessage.AlternateViews%2A> 속성을 다른 형식으로 전자 메일 메시지의 복사본을 지정 합니다. 예를 들어 HTML에서 메시지를 보낼 경우 수도 있습니다 받는 사람 중 일부에 HTML 콘텐츠를 표시할 수 없는 전자 메일 프로그램을 사용 하면 일반 텍스트 버전 수 있도록 합니다. 대체 뷰가 포함 된 메시지를 만드는 방법을 보여 주는 예제를 보려면 <xref:System.Net.Mail.MailMessage.AlternateViews%2A>합니다.  
  
 사용 하 여는 <xref:System.Net.Mail.MailMessage.Attachments%2A> 전자 메일 메시지에 첨부 파일을 추가할 속성입니다. 첨부 파일이 있는 메시지를 만드는 방법을 보여 주는 예제를 보려면 <xref:System.Net.Mail.MailMessage.Attachments%2A>합니다.  
  
 전자 메일 메시지를 어셈블한 후 보낼 수 있습니다를 사용 하 여는 <xref:System.Net.Mail.SmtpClient.Send%2A> 또는 <xref:System.Net.Mail.SmtpClient.SendAsync%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 만들고 첨부 파일을 포함 하는 전자 메일 메시지를 전송 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" /> 클래스의 빈 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 MailSettings에 대 한 네트워크 요소에 값으로 설정 되어에서[&lt;smtp&gt; 요소 (네트워크 설정)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md)있는 경우.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (System.Net.Mail.MailAddress from, System.Net.Mail.MailAddress to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Mail.MailAddress from, class System.Net.Mail.MailAddress to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As MailAddress, to As MailAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::Net::Mail::MailAddress ^ from, System::Net::Mail::MailAddress ^ to);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : System.Net.Mail.MailAddress * System.Net.Mail.MailAddress -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.Net.Mail.MailAddress" />
        <Parameter Name="to" Type="System.Net.Mail.MailAddress" />
      </Parameters>
      <Docs>
        <param name="from">이메일 메시지의 보낸 사람 주소가 들어 있는 <see cref="T:System.Net.Mail.MailAddress" />입니다.</param>
        <param name="to">이메일 메시지의 받는 사람 주소가 들어 있는 <see cref="T:System.Net.Mail.MailAddress" />입니다.</param>
        <summary>지정된 <see cref="T:System.Net.Mail.MailMessage" /> 클래스 개체를 사용하여 <see cref="T:System.Net.Mail.MailAddress" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.From%2A> 속성은 사용 하 여 초기화 `from` 및 <xref:System.Net.Mail.MailMessage.To%2A> 속성은 사용 하 여 초기화 `to`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" />가 <see langword="null" />인 경우  -또는-  <paramref name="to" />이 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="from" /> 또는 <paramref name="to" />가 잘못된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As String, to As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::String ^ from, System::String ^ to);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : string * string -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">이메일 메시지의 보낸 사람 주소가 들어 있는 <see cref="T:System.String" />입니다.</param>
        <param name="to">이메일 메시지의 받는 사람 주소가 들어 있는 <see cref="T:System.String" />입니다.</param>
        <summary>지정된 <see cref="T:System.Net.Mail.MailMessage" /> 클래스 개체를 사용하여 <see cref="T:System.String" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.From%2A> 속성은 사용 하 여 초기화 `from` 및 <xref:System.Net.Mail.MailMessage.To%2A> 속성은 사용 하 여 초기화 `to`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" />가 <see langword="null" />인 경우  -또는-  <paramref name="to" />이 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" />이 <see cref="F:System.String.Empty" />("")입니다.  -또는-  <paramref name="to" />이 <see cref="F:System.String.Empty" /> ("")입니다.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="from" /> 또는 <paramref name="to" />가 잘못된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (from As String, to As String, subject As String, body As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailMessage(System::String ^ from, System::String ^ to, System::String ^ subject, System::String ^ body);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailMessage : string * string * string * string -&gt; System.Net.Mail.MailMessage" Usage="new System.Net.Mail.MailMessage (from, to, subject, body)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">이메일 메시지의 보낸 사람 주소가 들어 있는 <see cref="T:System.String" />입니다.</param>
        <param name="to">이메일 메시지의 받는 사람 주소가 들어 있는 <see cref="T:System.String" />입니다.</param>
        <param name="subject">제목 텍스트가 들어 있는 <see cref="T:System.String" />입니다.</param>
        <param name="body">메시지 본문이 들어 있는 <see cref="T:System.String" />입니다.</param>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 속성 <xref:System.Net.Mail.MailMessage> 개체는 다음과 같이 초기화 됩니다.  
  
|매개 변수|속성|  
|---------------|--------------|  
|`from`|<xref:System.Net.Mail.MailMessage.From%2A>|  
|`to`|<xref:System.Net.Mail.MailMessage.To%2A>|  
|`subject`|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
|`body`|<xref:System.Net.Mail.MailMessage.Body%2A>|  
  
 기본적으로 제목 및 내용을 가정 됩니다 로컬 컴퓨터 설정을 기반으로 기본 인코딩을 사용 합니다. 사용 하 여는 <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> 및 <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> 다른 인코딩을 지정 하는 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 생성자를 호출 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NclMailSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" />가 <see langword="null" />인 경우  -또는-  <paramref name="to" />이 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" />이 <see cref="F:System.String.Empty" />("")입니다.  -또는-  <paramref name="to" />이 <see cref="F:System.String.Empty" /> ("")입니다.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="from" /> 또는 <paramref name="to" />가 잘못된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AlternateViews">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AlternateViewCollection AlternateViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AlternateViewCollection AlternateViews" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.AlternateViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlternateViews As AlternateViewCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::AlternateViewCollection ^ AlternateViews { System::Net::Mail::AlternateViewCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternateViews : System.Net.Mail.AlternateViewCollection" Usage="System.Net.Mail.MailMessage.AlternateViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AlternateViewCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>메시지 본문의 대체 형식을 저장하는 데 사용되는 첨부 파일 컬렉션을 가져옵니다.</summary>
        <value>쓰기 가능한 <see cref="T:System.Net.Mail.AlternateViewCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Net.Mail.MailMessage.AlternateViews%2A> 속성을 다른 형식으로 전자 메일 메시지의 복사본을 지정 합니다. 예를 들어 HTML에서 메시지를 보낼 경우 수도 있습니다 받는 사람 중 일부에 HTML 콘텐츠를 표시할 수 없는 전자 메일 프로그램을 사용 하면 일반 텍스트 버전 수 있도록 합니다.  
  
 대체 뷰를 추가 하는 <xref:System.Net.Mail.MailMessage> 개체를 만들는 <xref:System.Net.Mail.Attachment> 보기의 경우 다음에서 반환 된 컬렉션에 추가 하 고 <xref:System.Net.Mail.MailMessage.AlternateViews%2A>합니다. 사용 하 여는 <xref:System.Net.Mail.MailMessage.Body%2A> 속성 텍스트 버전을 지정 하 고 사용을 <xref:System.Net.Mail.MailMessage.AlternateViews%2A> 뷰 다른 MIME 형식을 지정 하는 컬렉션입니다. 사용 하 여는 <xref:System.Net.Mime.MediaTypeNames> 클래스 멤버 대체 보기에 대 한 MIME 형식을 지정 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고 보내는 전자 메일 메시지와 일반 텍스트]와 [HTML 대체 보기를 보여 줍니다.  
  
 [!code-cpp[NclMailSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="none" />
      </Docs>
    </Member>
    <Member MemberName="Attachments">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AttachmentCollection Attachments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AttachmentCollection Attachments" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Attachments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attachments As AttachmentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::AttachmentCollection ^ Attachments { System::Net::Mail::AttachmentCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attachments : System.Net.Mail.AttachmentCollection" Usage="System.Net.Mail.MailMessage.Attachments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AttachmentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지에 첨부된 데이터를 저장하는 데 사용되는 첨부 파일 컬렉션을 가져옵니다.</summary>
        <value>쓰기 가능한 <see cref="T:System.Net.Mail.AttachmentCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 된 컬렉션을 사용 하 여는 <xref:System.Net.Mail.MailMessage.Attachments%2A> 속성 파일의 내용을 등 첨부 파일을 추가 하는 <xref:System.IO.Stream>,이 <xref:System.Net.Mail.MailMessage>합니다.  
  
 만들기는 <xref:System.Net.Mail.Attachment> 포함 되거나 연결, 한 후 추가 된 데이터를 참조 하는 <xref:System.Net.Mail.Attachment> 에서 반환 된 컬렉션에 <xref:System.Net.Mail.MailMessage.Attachments%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 만들고 첨부 파일이 있는 메일 메시지를 전송 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Bcc">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection Bcc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection Bcc" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Bcc" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bcc As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ Bcc { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bcc : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.Bcc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지의 BCC(숨은 참조) 받는 사람이 들어 있는 주소 컬렉션을 가져옵니다.</summary>
        <value>쓰기 가능한 <see cref="T:System.Net.Mail.MailAddressCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 숨은 참조 수신자 전자 메일 메시지를 추가 하려면 만듭니다는 <xref:System.Net.Mail.MailAddress> 받는 사람의 주소에 대 한 다음 해당 개체에서 반환 된 컬렉션에 추가 <xref:System.Net.Mail.MailMessage.Bcc%2A> 속성입니다.  
  
 받는 사람에 게 전자 메일 메시지를 볼 때의 <xref:System.Net.Mail.MailMessage.Bcc%2A> 주소는 일반적으로 표시 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 주소를 추가 하는 방법을 보여 줍니다는 <xref:System.Net.Mail.MailMessage.Bcc%2A> 주소 컬렉션입니다.  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public string Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Body" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Body { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Body : string with get, set" Usage="System.Net.Mail.MailMessage.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>메시지 본문을 가져오거나 설정합니다.</summary>
        <value>본문 텍스트가 들어 있는 <see cref="T:System.String" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mime.ContentType> 의 <xref:System.Net.Mail.MailMessage.Body%2A> 콘텐츠는 "텍스트/일반"입니다. 본문에 사용 되는 인코딩을 지정 하는 <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> 속성입니다.  
  
 본문 콘텐츠를 받는 사람에 대 한 보다 다양 한 표시 옵션을 제공 하는 다른 형식으로 제공 하는 경우 사용 하 여 본문 콘텐츠에 대 한 대체 뷰를 지정할 수 있습니다는 <xref:System.Net.Mail.MailMessage.AlternateViews%2A> 속성입니다. 예를 들어 응용 프로그램은 일반 텍스트 본문 및 메시지 본문의 HTML 버전을 모두을 보내도록 선택할 수 있습니다. HTML을 표시할 수 있는 전자 메일 판독기 제공할 수 본문의 HTML 버전 받는 사람에 게 HTML을 표시할 수 없는 프로그램 됩니다 일반 텍스트 형식의 메시지를 표시 하는 동안 대신.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 된 <xref:System.Net.Mail.MailMessage.Body%2A> 속성입니다.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding BodyEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding BodyEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ BodyEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BodyEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.BodyEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>메시지 본문을 인코딩하는 데 사용되는 인코딩을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Text.Encoding" />의 내용에 적용되는 <see cref="P:System.Net.Mail.MailMessage.Body" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 지정 된 값은 <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> 속성 Content-type 헤더의 문자 집합 필드를 설정 합니다. 기본 문자 집합은 `"us-ascii"`합니다.  
  
 설정 하는 경우는 <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> 속성을 <xref:System.Text.Encoding.UTF8%2A>, <xref:System.Text.Encoding.Unicode%2A>, 또는 <xref:System.Text.Encoding.UTF32%2A>를 선택 하는 프레임 워크는 <xref:System.Net.Mime.TransferEncoding> 의 <xref:System.Net.Mime.TransferEncoding.Base64> 이 <xref:System.Net.Mail.MailMessage>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 UTF8 인코딩을 사용 하는 메일 메시지를 만드는 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NclMailAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailAsync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="BodyTransferEncoding">
      <MemberSignature Language="C#" Value="public System.Net.Mime.TransferEncoding BodyTransferEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mime.TransferEncoding BodyTransferEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyTransferEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyTransferEncoding As TransferEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mime::TransferEncoding BodyTransferEncoding { System::Net::Mime::TransferEncoding get(); void set(System::Net::Mime::TransferEncoding value); };" />
      <MemberSignature Language="F#" Value="member this.BodyTransferEncoding : System.Net.Mime.TransferEncoding with get, set" Usage="System.Net.Mail.MailMessage.BodyTransferEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mime.TransferEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>메시지 본문을 인코딩하는 데 사용되는 전송 인코딩을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Net.Mime.TransferEncoding" />를 반환합니다.  <see cref="T:System.Net.Mime.TransferEncoding" />의 내용에 적용되는 <see cref="P:System.Net.Mail.MailMessage.Body" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CC">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection CC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection CC" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.CC" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CC As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ CC { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CC : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.CC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지의 CC(참조) 받는 사람이 들어 있는 주소 컬렉션을 가져옵니다.</summary>
        <value>쓰기 가능한 <see cref="T:System.Net.Mail.MailAddressCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 CC 받는 사람 전자 메일 메시지를 추가 하려면 만듭니다는 <xref:System.Net.Mail.MailAddress> 받는 사람의 주소 대 한 다음 해당 개체에서 반환 된 컬렉션에 추가 <xref:System.Net.Mail.MailMessage.CC%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 주소를 추가 하는 방법을 보여 줍니다는 <xref:System.Net.Mail.MailMessage.CC%2A> 주소 컬렉션입니다.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="DeliveryNotificationOptions">
      <MemberSignature Language="C#" Value="public System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.DeliveryNotificationOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DeliveryNotificationOptions As DeliveryNotificationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::DeliveryNotificationOptions DeliveryNotificationOptions { System::Net::Mail::DeliveryNotificationOptions get(); void set(System::Net::Mail::DeliveryNotificationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.DeliveryNotificationOptions : System.Net.Mail.DeliveryNotificationOptions with get, set" Usage="System.Net.Mail.MailMessage.DeliveryNotificationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.DeliveryNotificationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지의 배달 알림을 가져오거나 설정합니다.</summary>
        <value>이 메시지의 배달 알림이 들어 있는 <see cref="T:System.Net.Mail.DeliveryNotificationOptions" /> 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" />에서 사용하는 리소스를 해제합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="mailMessage.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" />에서 사용하는 모든 리소스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.Dispose%2A>을 사용한 후에 <xref:System.Net.Mail.MailMessage> 메서드를 호출합니다. <xref:System.Net.Mail.MailMessage.Dispose%2A> 메서드를 사용하면 <xref:System.Net.Mail.MailMessage>를 사용할 수 없게 됩니다. 호출한 후 <xref:System.Net.Mail.MailMessage.Dispose%2A>에 대 한 모든 참조를 해제 해야는 <xref:System.Net.Mail.MailMessage> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Net.Mail.MailMessage> 차지한 합니다. 자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
> [!NOTE]
>  <xref:System.Net.Mail.MailMessage.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Net.Mail.MailMessage>를 호출하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는 삭제 하는 방법을 보여 줍니다는 <xref:System.Net.Mail.MailMessage>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="mailMessage.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.  
  
 경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <xref:System.Net.Mail.MailMessage> 참조 합니다. 이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) 구현 합니다.  에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 Resources](~/docs/standard/garbage-collection/unmanaged.md) 정리 하 고 [Finalize 메서드를 재정의] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress From" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ From { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지의 보낸 사람 주소를 가져오거나 설정합니다.</summary>
        <value>보낸 사람 주소 정보가 들어 있는 <see cref="T:System.Net.Mail.MailAddress" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 주소 유효성을 검사 하지 되었거나 현재 로그온된 한 사용자에 연결 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 값을 설정 하는 방법을 보여 줍니다는 <xref:System.Net.Mail.MailMessage.From%2A> 속성입니다.  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.Mail.MailMessage.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지와 함께 전송되는 이메일 헤더를 가져옵니다.</summary>
        <value>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> 전자 메일 헤더를 포함 하 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성을 사용 하면 메시지 헤더 컬렉션에 액세스 하려면 응용 프로그램입니다. 이 컬렉션은 읽기 전용으로 설정 하는 동안 (새 컬렉션을 설정할 수 없습니다), 사용자 지정 헤더에 추가할 수 또는이 컬렉션에서 삭제 합니다. 때 추가 된 모든 사용자 지정 헤더 포함 됩니다는 <xref:System.Net.Mail.MailMessage> 인스턴스에 전송 됩니다. 머리글만에서이 컬렉션에 특별히 추가 된 메시지를 보내기 전에 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성 컬렉션에 포함 됩니다. 후는 <xref:System.Net.Mail.MailMessage> 인스턴스가 전달 된는 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성 관련된 속성을 사용 하 여 설정 된 헤더에도 포함 됩니다는 <xref:System.Net.Mail.MailMessage> 경우 전달 된 클래스 또는 매개 변수는 <xref:System.Net.Mail.MailMessage.%23ctor%2A> 초기화 하는 데 사용 되는 <xref:System.Net.Mail.MailMessage> 개체입니다.  
  
 일부 메일 헤더가 잘못 된 경우에 전자 메일 메시지를 손상 시킬 수 있습니다. 속성을 사용 하 여 설정할 수 있는 헤더 컬렉션의 내용이 메일 헤더는 <xref:System.Net.Mail.MailMessage> 클래스만 설정 해야 사용 하 여는 <xref:System.Net.Mail.MailMessage> 클래스 속성 또는 매개 변수로 전달 된 경우는 <xref:System.Net.Mail.MailMessage.%23ctor%2A> 를 초기화는 <xref:System.Net.Mail.MailMessage> 개체입니다. 사용 하 여 다음과 같은 메일 헤더 추가 되지 않아야는 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성 및 값을 사용 하 여 이러한 헤더에 대해 설정 된 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성 삭제 되거나 덮어는 메시지를 보낼 때:  
  
-   숨은 참조  
  
-   Cc  
  
-   콘텐츠 ID  
  
-   콘텐츠 위치  
  
-   콘텐츠 전송 인코딩  
  
-   콘텐츠-유형  
  
-   날짜  
  
-   시작  
  
-   중요도  
  
-   MIME 버전  
  
-   우선 순위  
  
-   회신 대상  
  
-   보낸 사람  
  
-   대상  
  
-   X-우선 순위  
  
 응용 프로그램이 사용 하 여 X 보낸 사람 헤더 지정 하지 않은 경우는 <xref:System.Net.Mail.MailMessage.Headers%2A> 속성에는 <xref:System.Net.Mail.MailMessage> 클래스에서 만들어집니다는 메시지를 보낼 때.  
  
 매개 변수로 보낸 사람, 받는 사람, 제목 및 전자 메일 메시지의 본문을 지정할 수 있습니다 때는 <xref:System.Net.Mail.MailMessage.%23ctor%2A> 초기화 하는 데 사용 되는 <xref:System.Net.Mail.MailMessage> 개체입니다. 이러한 매개 변수를 설정할 수도 있습니다 또는에서 속성을 사용 하 여 액세스는 <xref:System.Net.Mail.MailMessage> 개체입니다.  
  
 기본 메일 메시지 헤더 및 메시지에 대 한 요소 설정할 수 있습니다 다음 속성을 사용 하 여 <xref:System.Net.Mail.MailMessage> 클래스입니다.  
  
|메일 헤더 또는 부분|속성|  
|-------------------------|--------------|  
|첨부 파일|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|(숨은)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|탄소 복사본 (CC)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|콘텐츠-유형|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|사용자 지정 헤더에 대 한 인코딩|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|메시지 본문|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|우선 순위|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|받는 사람|<xref:System.Net.Mail.MailMessage.To%2A>|  
|회신 대상|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|보낸 사람|<xref:System.Net.Mail.MailMessage.From%2A>|  
|Subject|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
   
  
## Examples  
 다음 코드 예제에서는 메일 메시지에 대 한 헤더를 표시 하는 방법을 보여 줍니다.  
  
 [!code-cpp[NclMailSync#24](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#24)]
 [!code-csharp[NclMailSync#24](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding HeadersEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeadersEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.HeadersEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property HeadersEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ HeadersEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeadersEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.HeadersEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지의 사용자 정의된 사용자 지정 헤더에 사용되는 인코딩을 가져오거나 설정합니다.</summary>
        <value>이 전자 메일 메시지에 대 한 사용자 정의 사용자 지정 헤더에 사용 되는 인코딩입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값은 <xref:System.Net.Mail.MailMessage.HeadersEncoding%2A> 속성의 기본값은 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>합니다.  
  
 SMTP 메시지 헤더 및 본문 부분으로 구성 됩니다. IETF Rfc smtp 헤더 및 본문 부분으로 된 이름을 ASCII 되도록 제한 합니다. 그러나, IETF Rfc 헤더와 본문 부분 값을 유니코드 문자를 포함할 수 있습니다. 특정 값에 비 ASCII 문자가 있는 경우 다음 값이 인코딩 조합 하 여 문자 인코딩 (UTF8 또는 예를 들어 Shift JIS) 올 바이트 인코딩을 (<xref:System.Net.Mime.TransferEncoding.Base64> 또는 <xref:System.Net.Mime.TransferEncoding.QuotedPrintable> 예를 들어). 결과 일반적으로 네트워크 전송 스트림에 있는 ASCII 문자만 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsBodyHtml">
      <MemberSignature Language="C#" Value="public bool IsBodyHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBodyHtml" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.IsBodyHtml" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBodyHtml As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBodyHtml { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBodyHtml : bool with get, set" Usage="System.Net.Mail.MailMessage.IsBodyHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>전자 메일 메시지 본문의 형식이 HTML인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see langword="true" /> 메시지 본문 HTML; 중인 경우 else <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.MailPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MailPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailPriority Priority { System::Net::Mail::MailPriority get(); void set(System::Net::Mail::MailPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Net.Mail.MailPriority with get, set" Usage="System.Net.Mail.MailMessage.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지의 우선 순위를 가져오거나 설정합니다.</summary>
        <value>이 메시지의 우선 순위가 들어 있는 <see cref="T:System.Net.Mail.MailPriority" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyTo">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress ReplyTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress ReplyTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyTo" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplyTo As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ ReplyTo { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyTo : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.ReplyTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use ReplyToList instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>전자 메일 메시지의 회신 주소를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Net.Mail.MailMessage.ReplyTo" /> 필드 값을 나타내는 MailAddress입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Net.Mail.MailMessage.ReplyTo%2A> 이외의 주소를 나타내는 속성을는 <xref:System.Net.Mail.MailMessage.From%2A> 이 메시지에 회신에 사용할 주소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToList">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection ReplyToList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection ReplyToList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyToList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplyToList As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ ReplyToList { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplyToList : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.ReplyToList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>메일 메시지의 회신 주소 목록을 가져옵니다.</summary>
        <value>메일 메시지의 회신 주소 목록입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Net.Mail.MailMessage.ReplyToList%2A> 주소 목록이 아닌 다른 나타내는 속성을는 <xref:System.Net.Mail.MailMessage.From%2A> 이 메시지에 회신에 사용할 주소입니다.  
  
 <xref:System.Net.Mail.MailMessage.ReplyToList%2A> 속성 대신은 <xref:System.Net.Mail.MailMessage.ReplyTo%2A> 만 회신 하는 데 단일 주소를 허용 하는 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sender">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress Sender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress Sender" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Sender" />
      <MemberSignature Language="VB.NET" Value="Public Property Sender As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ Sender { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sender : System.Net.Mail.MailAddress with get, set" Usage="System.Net.Mail.MailMessage.Sender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지의 보낸 사람 주소를 가져오거나 설정합니다.</summary>
        <value>보낸 사람의 주소 정보가 들어 있는 <see cref="T:System.Net.Mail.MailAddress" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보낸 사람의 주소 유효성을 검사 하지 않거나, 현재 로그온된 한 사용자에 연결 하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Subject : string with get, set" Usage="System.Net.Mail.MailMessage.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지의 제목 줄을 가져오거나 설정합니다.</summary>
        <value>제목 내용이 들어 있는 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 주체를 사용 하 여 사용 되는 인코딩을 지정는 <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 된 <xref:System.Net.Mail.MailMessage.Subject%2A> 속성입니다.  
  
 [!code-cpp[NclMailSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding SubjectEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding SubjectEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.SubjectEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property SubjectEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ SubjectEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SubjectEncoding : System.Text.Encoding with get, set" Usage="System.Net.Mail.MailMessage.SubjectEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지의 제목 내용에 사용되는 인코딩을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Text.Encoding" /> 속성을 인코딩하는 데 사용된 <see cref="P:System.Net.Mail.MailMessage.Subject" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메일 에이전트에 문제가 있으면는 <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> 의 <xref:System.Text.Encoding.Unicode%2A>를 사용 하 여 <xref:System.Text.Encoding.UTF8%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 된 <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> 속성입니다.  
  
 [!code-cpp[NclMailASync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailASync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailASync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection To { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection To" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.To" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property To As MailAddressCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddressCollection ^ To { System::Net::Mail::MailAddressCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.To : System.Net.Mail.MailAddressCollection" Usage="System.Net.Mail.MailMessage.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이메일 메시지의 받는 사람이 들어 있는 주소 컬렉션을 가져옵니다.</summary>
        <value>쓰기 가능한 <see cref="T:System.Net.Mail.MailAddressCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Mail.MailMessage.To%2A> 속성 전자 메일 메시지의 받는 사람 줄의 주소를 지정 하는 데 사용 됩니다. 받는 사람 전자 메일 메시지를 추가 하려면 만듭니다는 <xref:System.Net.Mail.MailAddress> 받는 사람의 주소에 대 한 다음이 속성에서 반환한 컬렉션에 해당 개체를 추가 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 설정 된 <xref:System.Net.Mail.MailMessage.To%2A> 속성입니다.  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
  </Members>
</Type>