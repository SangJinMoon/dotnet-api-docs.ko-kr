<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OracleCommandBuilder.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e58edd034b786cad53ea671d0425b05edcbb32f6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e58edd034b786cad53ea671d0425b05edcbb32f6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Automatically generates single-table commands used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated database.</source>
          <target state="translated">관련 데이터베이스를 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>에 변경한 내용을 조정하는 데 사용되는 단일 테이블 명령을 자동으로 생성합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>This type is deprecated and will be removed in a future version of the .NET Framework.</source>
          <target state="translated">이 형식은 사용 되지 않으며.NET Framework의 이후 버전에서 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Oracle and ADO.NET<ept id="p1">](~/docs/framework/data/adonet/oracle-and-adonet.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Oracle 및 ADO.NET<ept id="p1">](~/docs/framework/data/adonet/oracle-and-adonet.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> does not automatically generate the SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> associated with the database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> 변경 내용을 조정 하는 데 필요한 SQL 문을 자동으로 생성 되지 않습니다는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 데이터베이스에 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>However, you can create an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> object that generates SQL statements for single-table updates by setting the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">만들 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 설정 하 여 단일 테이블 업데이트에 대 한 SQL 문을 생성 하는 개체는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Then, the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> generates any additional SQL statements that you do not set.</source>
          <target state="translated">그런 다음 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 설정 하지 않는 추가적인 모든 SQL 문을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The relationship between an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> and its corresponding <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> is always one-to-one.</source>
          <target state="translated">간의 관계는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> 와 해당 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 일대일은 항상 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>To create this correspondence, you set the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> object.</source>
          <target state="translated">설정 하면이 관계를 만들려면는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>This causes the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> to register itself as a listener, which produces the output of <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> events that affect the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 인해는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 의 출력을 생성 하는 수신기로 등록 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> 에 영향을 주는 이벤트는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata.</source>
          <target state="translated">INSERT, UPDATE 또는 DELETE 문을 생성 하는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 사용 하 여는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph> 속성을 필수 메타 데이터 집합을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 또한 사용 하 여는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> 속성에서 참조 되는 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Dispose%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 에서 분리는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>, 생성된 된 명령을 더 이상 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>, along with <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph>, to select rows from a database.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>와 함께 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph>, 데이터베이스에서 행을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The example is passed an initialized <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the database table.</source>
          <target state="translated">이 예제에서는 초기화 된 전달 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, 연결 문자열, 쿼리 문자열을는 SQL SELECT 문 및 데이터베이스 테이블의 이름을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The example then creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>.</source>
          <target state="translated">이 예에서는 다음 만듭니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 자체에 대 한 수신기로 등록 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> 에서 생성 되는 이벤트는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> 이 속성에 지정 된 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> is released.</source>
          <target state="translated">새 인스턴스를 만들 때 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, 모든 기존 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 이 연관 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> 해제 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> object to associate with this <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph>와 연결할 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph> class with the associated <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">관련 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph> 개체를 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 자체에 대 한 수신기로 등록 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> 에서 생성 되는 이벤트는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> 이 속성에 지정 된 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> is released.</source>
          <target state="translated">새 인스턴스를 만들 때 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, 모든 기존 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 이 연관 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> 해제 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation">
          <source>Sets or gets the <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> 클래스의 인스턴스에 대한 <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>을 설정하거나 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator">
          <source>Sets or gets a string used as the catalog separator for an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> 클래스의 인스턴스에 대한 카탈로그 구분 기호로 사용되는 문자열을 설정하거나 가져옵니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator">
          <source>A string indicating the catalog separator for use with an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> 클래스의 인스턴스에서 사용할 카탈로그 구분 기호를 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> object for which this <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph> object will generate SQL statements.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> 개체에서 SQL 문을 만들 대상 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph> 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph> object that is associated with this <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataAdapter" /&gt;</ph>와 관련된 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommandBuilder" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 자체에 대 한 수신기로 등록 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating&gt;</ph> 에서 생성 되는 이벤트는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> 이 속성에 지정 된 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> is released.</source>
          <target state="translated">새 인스턴스를 만들 때 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>, 모든 기존 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph> 이 연관 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> 해제 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> referencing the stored procedure from which the parameter information is to be derived.</source>
          <target state="translated">매개 변수 정보가 파생될 저장 프로시저를 참조하는 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>The derived parameters are added to the <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /&gt;</ph> collection of the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>.</source>
          <target state="translated">파생된 매개 변수는 <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 컬렉션에 추가됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>Retrieves parameter information from the stored procedure specified in the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> and populates the <ph id="ph2">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /&gt;</ph> collection of the specified <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>에 지정된 저장 프로시저의 매개 변수 정보를 검색하여 지정된 <ph id="ph2">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /&gt;</ph> 개체의 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 컬렉션을 채웁니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> overwrites any existing parameter information for the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> 에 대 한 모든 기존 매개 변수 정보는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> requires an extra call to the database to obtain the information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> 정보를 얻으려면 데이터베이스에 추가로 호출을 해야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</source>
          <target state="translated">매개 변수 정보는 사전에 알고 있는 경우 정보를 명시적으로 설정 하 여 매개 변수 컬렉션을 채우는 데 더 효율적입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>You can only use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> with stored procedures.</source>
          <target state="translated">만 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> 저장된 프로시저와 함께 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>You cannot use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> to populate the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleParameterCollection&gt;</ph> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</source>
          <target state="translated">사용할 수 없습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A&gt;</ph> 채우는 데는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleParameterCollection&gt;</ph> 임의의 Transact SQL 문, 매개 변수가 있는 SELECT 문 처럼 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>구성 매개 변수 및 매개 변수 데이터 형식<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
          <source>The command text is not a valid stored procedure name, or the <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> specified was not <ph id="ph2">&lt;see cref="F:System.Data.CommandType.StoredProcedure" /&gt;</ph>.</source>
          <target state="translated">명령 텍스트가 유효한 저장 프로시저 이름이 아니거나 지정된 <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.Data.CommandType.StoredProcedure" /&gt;</ph>가 아닌 경우</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">데이터베이스에서 삭제하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 실행할 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> 의 수정 된 명령 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> 및 수정 된 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 값을 복사한 다음에 명시적으로 설정 하는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">데이터베이스에서 삭제하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">삭제하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 실행할 개체입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> 의 수정 된 명령 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> 및 수정 된 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 값을 복사한 다음에 명시적으로 설정 하는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If true, generate parameter names matching column names, if possible.</source>
          <target state="translated">true인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If false, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">false이면 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph> 등을 생성합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform deletions on the database.</source>
          <target state="translated">데이터베이스에서 삭제하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">삭제하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 실행할 개체입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> 의 수정 된 명령 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph> 및 수정 된 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 값을 복사한 다음에 명시적으로 설정 하는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, 다양 한 매개 변수 대.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">전달 <ph id="ph1">`true`</ph> 에 대 한는 <ph id="ph2">`useColumnsForParameterNames`</ph> 매개 변수를 사용 하면 강제로 <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> 대신 열 이름에 따라 매개 변수를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>.</source>
          <target state="translated">이어야 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">다음 조건에 해당 하는 경우에 성공 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> 정규식입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform insertions on the database.</source>
          <target state="translated">데이터베이스에서 삽입하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 실행할 개체입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> 의 수정 된 명령 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> 및 수정 된 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 값을 복사한 다음에 명시적으로 설정 하는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform insertions on the database.</source>
          <target state="translated">데이터베이스에서 삽입하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">삽입하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 실행할 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> 의 수정 된 명령 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> 및 수정 된 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 값을 복사한 다음에 명시적으로 설정 하는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If true, generate parameter names matching column names, if possible.</source>
          <target state="translated">true인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If false, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">false이면 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph> 등을 생성합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform insertions on the database.</source>
          <target state="translated">데이터베이스에서 삽입하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">삽입하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 실행할 개체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> 의 수정 된 명령 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph> 및 수정 된 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 값을 복사한 다음에 명시적으로 설정 하는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, 다양 한 매개 변수 대.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">전달 <ph id="ph1">`true`</ph> 에 대 한는 <ph id="ph2">`useColumnsForParameterNames`</ph> 매개 변수를 사용 하면 강제로 <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> 대신 열 이름에 따라 매개 변수를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>.</source>
          <target state="translated">이어야 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">다음 조건에 해당 하는 경우에 성공 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> 정규식입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">데이터베이스에서 업데이트하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 실행할 개체입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> 의 수정 된 명령 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> 및 수정 된 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 값을 복사한 다음에 명시적으로 설정 하는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommandBuilder">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">데이터베이스에서 업데이트하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">업데이트하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 실행할 개체입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> 의 수정 된 명령 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> 및 수정 된 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 값을 복사한 다음에 명시적으로 설정 하는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If true, generate parameter names matching column names, if possible.</source>
          <target state="translated">true인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If false, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">false이면 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph> 등을 생성합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform updates on the database.</source>
          <target state="translated">데이터베이스에서 업데이트하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">업데이트하는 데 필요한 자동으로 생성된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object to be executed.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 실행할 개체입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> 의 수정 된 명령 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> value, and then explicitly set that on the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph> 및 수정 된 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 값을 복사한 다음에 명시적으로 설정 하는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The SQL statements are first generated when the application calls either <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, 다양 한 매개 변수 대.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">전달 <ph id="ph1">`true`</ph> 에 대 한는 <ph id="ph2">`useColumnsForParameterNames`</ph> 매개 변수를 사용 하면 강제로 <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> 대신 열 이름에 따라 매개 변수를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>.</source>
          <target state="translated">이어야 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">다음 조건에 해당 하는 경우에 성공 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> 정규식입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          <target state="translated">따옴표 붙지 않은 원래 식별자입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</source>
          <target state="translated">올바른 카탈로그 대/소문자로 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">따옴표를 사용한 식별자입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are properly escaped.</source>
          <target state="translated">식별자에 포함된 따옴표가 올바르게 이스케이프되었습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">스키마 식별자와 다른 식별자 간의 구분 기호로 사용할 문자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">스키마 구분 기호로 사용할 문자입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
          <source>Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">일반적으로 데이터베이스 서버는 식별자에 대 한 스키마를 스키마 이름과 식별자 일부 문자로 구분 하 여 나타냅니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
          <source>For example, SQL Server uses a colon, creating complete identifiers such as Person:CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">예를 들어 SQL Server는 만드는 사람: CustomerName, "Person" 스키마 이름이 고 "CustomerName"는 식별자와 같은 전체 식별자 콜론을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
          <source>Setting this property allows developers to modify this behavior.</source>
          <target state="translated">이 속성을 설정 개발자가이 동작을 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">포함된 따옴표를 제거할 식별자입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</source>
          <target state="translated">따옴표 붙은 식별자가 제공되는 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes properly un-escaped.</source>
          <target state="translated">포함된 따옴표가 이스케이프 해제된, 따옴표 붙지 않은 식별자입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>