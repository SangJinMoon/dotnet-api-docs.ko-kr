<Type Name="OracleCommandBuilder" FullName="System.Data.OracleClient.OracleCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e58edd034b786cad53ea671d0425b05edcbb32f6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommandBuilder has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="78561-101">관련 데이터베이스를 사용하여 <see cref="T:System.Data.DataSet" />에 변경한 내용을 조정하는 데 사용되는 단일 테이블 명령을 자동으로 생성합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="78561-101">Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database.</span>
      </span>
      <span data-ttu-id="78561-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="78561-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-103">이 형식은 사용 되지 않으며.NET Framework의 이후 버전에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="78561-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="78561-104">자세한 내용은 참조 [Oracle 및 ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="78561-105"><xref:System.Data.OracleClient.OracleDataAdapter> 변경 내용을 조정 하는 데 필요한 SQL 문을 자동으로 생성 되지 않습니다는 <xref:System.Data.DataSet> 데이터베이스에 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-105">The <xref:System.Data.OracleClient.OracleDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> associated with the database.</span></span> <span data-ttu-id="78561-106">만들 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder> 설정 하 여 단일 테이블 업데이트에 대 한 SQL 문을 생성 하는 개체는 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> 의 속성은 <xref:System.Data.OracleClient.OracleDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-106">However, you can create an <xref:System.Data.OracleClient.OracleCommandBuilder> object that generates SQL statements for single-table updates by setting the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span> <span data-ttu-id="78561-107">그런 다음 <xref:System.Data.OracleClient.OracleCommandBuilder> 설정 하지 않는 추가적인 모든 SQL 문을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-107">Then, the <xref:System.Data.OracleClient.OracleCommandBuilder> generates any additional SQL statements that you do not set.</span></span>  
  
 <span data-ttu-id="78561-108">간의 관계는 <xref:System.Data.OracleClient.OracleDataAdapter> 와 해당 <xref:System.Data.OracleClient.OracleCommandBuilder> 일대일은 항상 있습니다.</span><span class="sxs-lookup"><span data-stu-id="78561-108">The relationship between an <xref:System.Data.OracleClient.OracleDataAdapter> and its corresponding <xref:System.Data.OracleClient.OracleCommandBuilder> is always one-to-one.</span></span> <span data-ttu-id="78561-109">설정 하면이 관계를 만들려면는 <xref:System.Data.OracleClient.OracleDataAdapter> 의 속성은 <xref:System.Data.OracleClient.OracleCommandBuilder> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-109">To create this correspondence, you set the <xref:System.Data.OracleClient.OracleDataAdapter> property of the <xref:System.Data.OracleClient.OracleCommandBuilder> object.</span></span> <span data-ttu-id="78561-110">이 인해는 <xref:System.Data.OracleClient.OracleCommandBuilder> 의 출력을 생성 하는 수신기로 등록 <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> 에 영향을 주는 이벤트는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-110">This causes the <xref:System.Data.OracleClient.OracleCommandBuilder> to register itself as a listener, which produces the output of <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> events that affect the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="78561-111">INSERT, UPDATE 또는 DELETE 문을 생성 하는 <xref:System.Data.OracleClient.OracleCommandBuilder> 사용 하 여는 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> 속성을 필수 메타 데이터 집합을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-111">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.OracleClient.OracleCommandBuilder> uses the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata.</span></span>  
  
 <span data-ttu-id="78561-112"><xref:System.Data.OracleClient.OracleCommandBuilder> 또한 사용 하 여는 <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, 및 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 속성에서 참조 되는 <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-112">The <xref:System.Data.OracleClient.OracleCommandBuilder> also uses the <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, and <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> properties referenced by the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="78561-113">호출 하는 경우 <xref:System.Data.Common.DbDataAdapter.Dispose%2A>, <xref:System.Data.OracleClient.OracleCommandBuilder> 에서 분리는 <xref:System.Data.OracleClient.OracleDataAdapter>, 생성된 된 명령을 더 이상 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="78561-113">If you call <xref:System.Data.Common.DbDataAdapter.Dispose%2A>, the <xref:System.Data.OracleClient.OracleCommandBuilder> is disassociated from the <xref:System.Data.OracleClient.OracleDataAdapter>, and the generated commands are no longer used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78561-114">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand>와 함께 <xref:System.Data.OracleClient.OracleDataAdapter> 및 <xref:System.Data.OracleClient.OracleConnection>, 데이터베이스에서 행을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-114">The following example uses <xref:System.Data.OracleClient.OracleCommand>, along with <xref:System.Data.OracleClient.OracleDataAdapter> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a database.</span></span> <span data-ttu-id="78561-115">이 예제에서는 초기화 된 전달 <xref:System.Data.DataSet>, 연결 문자열, 쿼리 문자열을는 SQL SELECT 문 및 데이터베이스 테이블의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-115">The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the database table.</span></span> <span data-ttu-id="78561-116">이 예에서는 다음 만듭니다는 <xref:System.Data.OracleClient.OracleCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-116">The example then creates an <xref:System.Data.OracleClient.OracleCommandBuilder>.</span></span>  
  
```vb  
Private Function SelectOracleRows(connection As String, queryString As String, tableName As String) As DataSet  
  
   Dim connection As New OracleConnection(connection)  
   Dim dataAdapter As New OracleDataAdapter()  
   Dim dataSet As DataSet = New DataSet  
  
   dataAdapter.SelectCommand = New OracleCommand(queryString, connection)  
  
   Dim cmdBuilder As OracleCommandBuilder = New OracleCommandBuilder(dataAdapter)  
  
   connection.Open()  
   dataAdapter.Fill(dataSet, tableName)  
      ' Code to modify data in DataSet here   
      ' Without the OracleCommandBuilder this line would fail.  
   dataAdapter.Update(dataSet, tableName)  
   connection.Close()  
End Function  
```  
  
```csharp  
public static DataSet SelectOracleSrvRows(string myConnection, string mySelectQuery, string myTableName)  
{  
   OracleConnection myConn = new OracleConnection(myConnection);  
   OracleDataAdapter myDataAdapter = new OracleDataAdapter();  
   myDataAdapter.SelectCommand = new OracleCommand(mySelectQuery, myConn);  
   OracleCommandBuilder cb = new OracleCommandBuilder(myDataAdapter);  
  
   myConn.Open();  
   DataSet ds = new DataSet();  
   myDataAdapter.Fill(ds, myTableName);  
  
   //Code to modify data in DataSet goes here...  
  
   //Without the OracleCommandBuilder this line would fail.  
   myDataAdapter.Update(ds, myTableName);  
   myConn.Close();  
   return ds;  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="78561-117">
            <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-117">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78561-118">
            <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-118">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-119"><xref:System.Data.OracleClient.OracleCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> 에서 생성 되는 이벤트는 <xref:System.Data.OracleClient.OracleDataAdapter> 이 속성에 지정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-119">The <xref:System.Data.OracleClient.OracleCommandBuilder> registers itself as a listener for <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OracleClient.OracleDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="78561-120">새 인스턴스를 만들 때 <xref:System.Data.OracleClient.OracleCommandBuilder>, 모든 기존 <xref:System.Data.OracleClient.OracleCommandBuilder> 이 연관 <xref:System.Data.OracleClient.OracleDataAdapter> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="78561-120">When you create a new instance of <xref:System.Data.OracleClient.OracleCommandBuilder>, any existing <xref:System.Data.OracleClient.OracleCommandBuilder> associated with this <xref:System.Data.OracleClient.OracleDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommandBuilder (System.Data.OracleClient.OracleDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OracleClient.OracleDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OracleDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommandBuilder(System::Data::OracleClient::OracleDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.OracleClient.OracleDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="78561-121">이 <see cref="T:System.Data.OracleClient.OracleDataAdapter" />와 연결할 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-121">An <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> object to associate with this <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78561-122">관련 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 개체를 사용하여 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-122">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> class with the associated <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-123"><xref:System.Data.OracleClient.OracleCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> 에서 생성 되는 이벤트는 <xref:System.Data.OracleClient.OracleDataAdapter> 이 속성에 지정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-123">The <xref:System.Data.OracleClient.OracleCommandBuilder> registers itself as a listener for <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OracleClient.OracleDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="78561-124">새 인스턴스를 만들 때 <xref:System.Data.OracleClient.OracleCommandBuilder>, 모든 기존 <xref:System.Data.OracleClient.OracleCommandBuilder> 이 연관 <xref:System.Data.OracleClient.OracleDataAdapter> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="78561-124">When you create a new instance of <xref:System.Data.OracleClient.OracleCommandBuilder>, any existing <xref:System.Data.OracleClient.OracleCommandBuilder> associated with this <xref:System.Data.OracleClient.OracleDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78561-125">
            <see cref="T:System.Data.Common.CatalogLocation" /> 클래스의 인스턴스에 대한 <see cref="T:System.Data.Common.DbCommandBuilder" />을 설정하거나 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-125">Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78561-126">
            <see cref="T:System.Data.Common.CatalogLocation" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-126">A <see cref="T:System.Data.Common.CatalogLocation" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public override string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78561-127">
            <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스의 인스턴스에 대한 카탈로그 구분 기호로 사용되는 문자열을 설정하거나 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-127">Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78561-128">
            <see cref="T:System.Data.Common.DbCommandBuilder" /> 클래스의 인스턴스에서 사용할 카탈로그 구분 기호를 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-128">A string indicating the catalog separator for use with an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OracleDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleDataAdapter ^ DataAdapter { System::Data::OracleClient::OracleDataAdapter ^ get(); void set(System::Data::OracleClient::OracleDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78561-129">이 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 개체에서 SQL 문을 만들 대상 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-129">Gets or sets an <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> object for which this <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> object will generate SQL statements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78561-130">이 <see cref="T:System.Data.OracleClient.OracleDataAdapter" />와 관련된 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-130">An <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> object that is associated with this <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-131"><xref:System.Data.OracleClient.OracleCommandBuilder> 자체에 대 한 수신기로 등록 <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> 에서 생성 되는 이벤트는 <xref:System.Data.OracleClient.OracleDataAdapter> 이 속성에 지정 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-131">The <xref:System.Data.OracleClient.OracleCommandBuilder> registers itself as a listener for <xref:System.Data.OracleClient.OracleDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OracleClient.OracleDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="78561-132">새 인스턴스를 만들 때 <xref:System.Data.OracleClient.OracleCommandBuilder>, 모든 기존 <xref:System.Data.OracleClient.OracleCommandBuilder> 이 연관 <xref:System.Data.OracleClient.OracleDataAdapter> 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="78561-132">When you create a new instance of <xref:System.Data.OracleClient.OracleCommandBuilder>, any existing <xref:System.Data.OracleClient.OracleCommandBuilder> associated with this <xref:System.Data.OracleClient.OracleDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.OracleClient.OracleCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.OracleClient.OracleCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OracleCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::OracleClient::OracleCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.OracleClient.OracleCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="78561-133">매개 변수 정보가 파생될 저장 프로시저를 참조하는 <see cref="T:System.Data.OracleClient.OracleCommand" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-133">The <see cref="T:System.Data.OracleClient.OracleCommand" /> referencing the stored procedure from which the parameter information is to be derived.</span>
          </span>
          <span data-ttu-id="78561-134">파생된 매개 변수는 <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" />의 <see cref="T:System.Data.OracleClient.OracleCommand" /> 컬렉션에 추가됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-134">The derived parameters are added to the <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> collection of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78561-135">
            <see cref="T:System.Data.OracleClient.OracleCommand" />에 지정된 저장 프로시저의 매개 변수 정보를 검색하여 지정된 <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> 개체의 <see cref="T:System.Data.OracleClient.OracleCommand" /> 컬렉션을 채웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-135">Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.OracleClient.OracleCommand" /> and populates the <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> collection of the specified <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-136"><xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> 에 대 한 모든 기존 매개 변수 정보는 <xref:System.Data.OracleClient.OracleCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-136"><xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> overwrites any existing parameter information for the <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 <span data-ttu-id="78561-137"><xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> 정보를 얻으려면 데이터베이스에 추가로 호출을 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-137"><xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> requires an extra call to the database to obtain the information.</span></span> <span data-ttu-id="78561-138">매개 변수 정보는 사전에 알고 있는 경우 정보를 명시적으로 설정 하 여 매개 변수 컬렉션을 채우는 데 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-138">If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</span></span>  
  
 <span data-ttu-id="78561-139">만 사용할 수 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> 저장된 프로시저와 함께 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-139">You can only use <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> with stored procedures.</span></span> <span data-ttu-id="78561-140">사용할 수 없습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> 채우는 데는 <xref:System.Data.OracleClient.OracleParameterCollection> 임의의 Transact SQL 문, 매개 변수가 있는 SELECT 문 처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-140">You cannot use <xref:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters%2A> to populate the <xref:System.Data.OracleClient.OracleParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</span></span>  
  
 <span data-ttu-id="78561-141">자세한 내용은 참조 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-141">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="78561-142">명령 텍스트가 유효한 저장 프로시저 이름이 아니거나 지정된 <see cref="T:System.Data.CommandType" />이 <see cref="F:System.Data.CommandType.StoredProcedure" />가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-142">The command text is not a valid stored procedure name, or the <see cref="T:System.Data.CommandType" /> specified was not <see cref="F:System.Data.CommandType.StoredProcedure" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="78561-143">데이터베이스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-143">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform deletions on the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-144">사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OracleClient.OracleCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-144">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="78561-145">사용할 수도 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-145">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="78561-146">예를 들어, 호출할 수 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OracleClient.OracleDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-146">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="78561-147">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-147">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="78561-148">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-148">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78561-149">데이터베이스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-149">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform deletions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78561-150">삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-150">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-151">사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OracleClient.OracleCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-151">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="78561-152">사용할 수도 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-152">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="78561-153">예를 들어, 호출할 수 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OracleClient.OracleDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-153">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="78561-154">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-154">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="78561-155">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-155">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="78561-156">true인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-156">If true, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="78561-157">false이면 @p1, @p2 등을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-157">If false, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78561-158">데이터베이스에서 삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-158">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform deletions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78561-159">삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-159">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-160">사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OracleClient.OracleCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-160">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="78561-161">사용할 수도 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-161">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="78561-162">예를 들어, 호출할 수 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> 및 수정 된 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OracleClient.OracleDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-162">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="78561-163">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-163">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="78561-164">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="78561-164">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="78561-165">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-165">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="78561-166">이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-166">.</span></span> <span data-ttu-id="78561-167">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-167">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="78561-168"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-168">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="78561-169">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-169">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="78561-170">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="78561-170">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 <span data-ttu-id="78561-171">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-171">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="78561-172">데이터베이스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-172">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform insertions on the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-173">사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OracleClient.OracleCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-173">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="78561-174">사용할 수도 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-174">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="78561-175">예를 들어, 호출할 수 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OracleClient.OracleDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-175">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="78561-176">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-176">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="78561-177">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-177">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78561-178">데이터베이스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-178">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform insertions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78561-179">삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-179">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-180">사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OracleClient.OracleCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-180">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="78561-181">사용할 수도 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-181">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="78561-182">예를 들어, 호출할 수 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OracleClient.OracleDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-182">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="78561-183">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-183">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="78561-184">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-184">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="78561-185">true인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-185">If true, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="78561-186">false이면 @p1, @p2 등을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-186">If false, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78561-187">데이터베이스에서 삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-187">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform insertions on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78561-188">삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-188">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-189">사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OracleClient.OracleCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-189">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="78561-190">사용할 수도 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-190">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="78561-191">예를 들어, 호출할 수 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> 및 수정 된 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OracleClient.OracleDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-191">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="78561-192">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-192">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="78561-193">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="78561-193">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="78561-194">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-194">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="78561-195">이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-195">.</span></span> <span data-ttu-id="78561-196">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-196">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="78561-197"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-197">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="78561-198">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-198">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="78561-199">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="78561-199">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 <span data-ttu-id="78561-200">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-200">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="78561-201">데이터베이스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-201">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform updates on the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-202">사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OracleClient.OracleCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-202">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="78561-203">사용할 수도 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-203">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="78561-204">예를 들어, 호출할 수 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OracleClient.OracleDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-204">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="78561-205">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-205">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="78561-206">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-206">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="78561-207">데이터베이스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-207">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform updates on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78561-208">업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-208">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-209">사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OracleClient.OracleCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-209">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="78561-210">사용할 수도 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-210">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="78561-211">예를 들어, 호출할 수 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OracleClient.OracleDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-211">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="78561-212">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-212">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="78561-213">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-213">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="78561-214">true인 경우 가능하면 열 이름과 일치하는 매개 변수 이름을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-214">If true, generate parameter names matching column names, if possible.</span>
          </span>
          <span data-ttu-id="78561-215">false이면 @p1, @p2 등을 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-215">If false, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78561-216">데이터베이스에서 업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-216">Gets the automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform updates on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78561-217">업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-217">The automatically generated <see cref="T:System.Data.OracleClient.OracleCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-218">사용할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 반환 하기 때문에 목적으로 하는 문제 해결에 대 한 메서드는 <xref:System.Data.OracleClient.OracleCommand> 실행할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-218">You can use the <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OracleClient.OracleCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="78561-219">사용할 수도 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 의 수정 된 명령 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-219">You can also use <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="78561-220">예를 들어, 호출할 수 있습니다 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> 및 수정 된 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 값을 복사한 다음에 명시적으로 설정 하는 <xref:System.Data.OracleClient.OracleDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-220">For example, you might call <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> value, and then explicitly set that on the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span>  
  
 <span data-ttu-id="78561-221">응용 프로그램 중 하나를 호출 하는 경우에 SQL 문을 생성할 먼저는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 또는 <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-221">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="78561-222">매개 변수 이름을 생성할 때의 기본 동작을 사용 하는 @p1, @p2, 다양 한 매개 변수 대.</span><span class="sxs-lookup"><span data-stu-id="78561-222">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="78561-223">전달 `true` 에 대 한는 `useColumnsForParameterNames` 매개 변수를 사용 하면 강제로 <xref:System.Data.Common.DbCommandBuilder> 대신 열 이름에 따라 매개 변수를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-223">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="78561-224">이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-224">.</span></span> <span data-ttu-id="78561-225">다음 조건에 해당 하는 경우에 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-225">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="78561-226"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> 지정 된이 고 길이 생성 된 매개 변수 이름 보다 크거나 같은 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-226">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="78561-227">생성 된 매개 변수 이름에 지정 된 조건에 부합는 <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> 정규식입니다.</span><span class="sxs-lookup"><span data-stu-id="78561-227">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="78561-228">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="78561-228">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 <span data-ttu-id="78561-229">자세한 내용은 참조 [commandbuilder 생성 명령을](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-229">For more information, see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="78561-230">따옴표 붙지 않은 원래 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-230">The original unquoted identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78561-231">올바른 카탈로그 대/소문자로 따옴표 붙지 않은 식별자가 제공되는 경우 따옴표 붙은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-231">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78561-232">따옴표를 사용한 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-232">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="78561-233">식별자에 포함된 따옴표가 올바르게 이스케이프되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-233">Embedded quotes within the identifier are properly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public override string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="78561-234">스키마 식별자와 다른 식별자 간의 구분 기호로 사용할 문자를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-234">Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="78561-235">스키마 구분 기호로 사용할 문자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-235">The character to be used as the schema separator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78561-236">일반적으로 데이터베이스 서버는 식별자에 대 한 스키마를 스키마 이름과 식별자 일부 문자로 구분 하 여 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="78561-236">Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</span></span> <span data-ttu-id="78561-237">예를 들어 SQL Server는 만드는 사람: CustomerName, "Person" 스키마 이름이 고 "CustomerName"는 식별자와 같은 전체 식별자 콜론을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="78561-237">For example, SQL Server uses a colon, creating complete identifiers such as Person:CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</span></span> <span data-ttu-id="78561-238">이 속성을 설정 개발자가이 동작을 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="78561-238">Setting this property allows developers to modify this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="78561-239">포함된 따옴표를 제거할 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-239">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="78561-240">따옴표 붙은 식별자가 제공되는 경우 따옴표 붙지 않은 올바른 형식의 해당 식별자를 반환합니다. 여기에는 식별자에 포함된 모든 따옴표를 이스케이프 해제하는 작업이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-240">Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="78561-241">포함된 따옴표가 이스케이프 해제된, 따옴표 붙지 않은 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="78561-241">The unquoted identifier, with embedded quotes properly un-escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>