<Type Name="OracleCommand" FullName="System.Data.OracleClient.OracleCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2400e3f6ffaf27fe1dc012542405610ee1e833f9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36684678" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <TypeSignature Language="F#" Value="type OracleCommand = class&#xA;    inherit DbCommand&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="42287-101">데이터베이스에 대해 실행할 SQL 문이나 저장 프로시저를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="42287-101">Represents an SQL statement or stored procedure to execute against a database.</span>
      </span>
      <span data-ttu-id="42287-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="42287-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-103">이 형식은 사용 되지 않으며.NET Framework의 이후 버전에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42287-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="42287-104">자세한 내용은 참조 [Oracle 및 ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="42287-105"><xref:System.Data.OracleClient.OracleCommand> 클래스는 데이터 원본에 대해 명령을 실행 하기 위한 다음 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-105">The <xref:System.Data.OracleClient.OracleCommand> class provides the following methods for executing commands against a data source:</span></span>  
  
|<span data-ttu-id="42287-106">항목</span><span class="sxs-lookup"><span data-stu-id="42287-106">Item</span></span>|<span data-ttu-id="42287-107">설명</span><span class="sxs-lookup"><span data-stu-id="42287-107">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|<span data-ttu-id="42287-108">행을 반환 하는 명령을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-108">Executes commands that return rows.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|<span data-ttu-id="42287-109"><xref:System.Data.OracleClient.OracleCommand.Connection%2A>에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-109">Executes an SQL statement against the <xref:System.Data.OracleClient.OracleCommand.Connection%2A> and returns the number of rows affected.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|<span data-ttu-id="42287-110">SQL INSERT, DELETE, UPDATE 및 SET 문과 같은 명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-110">Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|<span data-ttu-id="42287-111">.NET Framework 데이터 형식으로 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-111">Retrieves a single value (for example, an aggregate value) from a database as a .NET Framework data type.</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|<span data-ttu-id="42287-112">Oracle 고유 데이터 형식으로 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-112">Retrieves a single value (for example, an aggregate value) from a database as an Oracle-specific data type.</span></span>|  
  
 <span data-ttu-id="42287-113">다시 설정할 수 있습니다는 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 속성 및 재사용은 <xref:System.Data.OracleClient.OracleCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-113">You can reset the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property and reuse the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="42287-114">명령 실행으로 인해 심각한 경우 <xref:System.Data.OracleClient.OracleException>, <xref:System.Data.OracleClient.OracleConnection> 닫힐 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-114">If execution of the command results in a fatal <xref:System.Data.OracleClient.OracleException>, the <xref:System.Data.OracleClient.OracleConnection> may close.</span></span> <span data-ttu-id="42287-115">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-115">However, the user can reopen the connection and continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="42287-116">와 달리는 **명령** 다른.NET Framework 데이터 공급자 (SQL Server, OLE DB 및 ODBC)의 개체는 <xref:System.Data.OracleClient.OracleCommand> 개체가 지원 하지 않습니다는 <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-116">Unlike the **Command** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), the <xref:System.Data.OracleClient.OracleCommand> object does not support a <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property.</span></span> <span data-ttu-id="42287-117">명령 제한 시간 설정 아무 효과가 없으며 반환 되는 값은 항상 0입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-117">Setting a command timeout has no effect and the value returned is always zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42287-118">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 방식의 <xref:System.Data.OracleClient.OracleCommand>와 함께 <xref:System.Data.OracleClient.OracleDataReader> 및 <xref:System.Data.OracleClient.OracleConnection>, 테이블에서 행을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-118">The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of <xref:System.Data.OracleClient.OracleCommand>, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="42287-119">
            <see cref="T:System.Data.OracleClient.OracleCommand" />의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-119">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42287-120">
            <see cref="T:System.Data.OracleClient.OracleCommand" />의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-120">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-121">기본 생성자는 모든 필드를를 기본값으로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-121">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="42287-122">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.OracleClient.OracleCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-122">The following table shows initial property values for an instance of <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="42287-123">속성</span><span class="sxs-lookup"><span data-stu-id="42287-123">Properties</span></span>|<span data-ttu-id="42287-124">초기 값</span><span class="sxs-lookup"><span data-stu-id="42287-124">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|<span data-ttu-id="42287-125">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="42287-125">empty string ("")</span></span>|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="42287-126">null</span><span class="sxs-lookup"><span data-stu-id="42287-126">null</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="42287-127">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-127">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand commandText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="42287-128">쿼리 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-128">The text of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42287-129">쿼리 텍스트를 사용하여 <see cref="T:System.Data.OracleClient.OracleCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-129">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="42287-130">쿼리 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-130">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="42287-131">데이터베이스에 대한 연결을 나타내는 <see cref="T:System.Data.OracleClient.OracleConnection" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-131">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42287-132">쿼리 텍스트와 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 사용하여 <see cref="T:System.Data.OracleClient.OracleConnection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-132">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query and an <see cref="T:System.Data.OracleClient.OracleConnection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="42287-133">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-133">The following example creates an <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection, class System.Data.OracleClient.OracleTransaction tx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection, tx As OracleTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection, System::Data::OracleClient::OracleTransaction ^ tx);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection * System.Data.OracleClient.OracleTransaction -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection, tx)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
        <Parameter Name="tx" Type="System.Data.OracleClient.OracleTransaction" />
      </Parameters>
      <Docs>
        <param name="commandText">
          <span data-ttu-id="42287-134">쿼리 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-134">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="42287-135">데이터베이스에 대한 연결을 나타내는 <see cref="T:System.Data.OracleClient.OracleConnection" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-135">An <see cref="T:System.Data.OracleClient.OracleConnection" /> object that represents the connection to a database.</span>
          </span>
        </param>
        <param name="tx">
          <span data-ttu-id="42287-136">
            <see cref="T:System.Data.OracleClient.OracleCommand" />가 실행되는 <see cref="T:System.Data.OracleClient.OracleTransaction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-136">The <see cref="T:System.Data.OracleClient.OracleTransaction" /> in which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42287-137">쿼리 텍스트, <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체 및 <see cref="T:System.Data.OracleClient.OracleConnection" />을 사용하여 <see cref="T:System.Data.OracleClient.OracleTransaction" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-137">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleCommand" /> class with the text of the query, an <see cref="T:System.Data.OracleClient.OracleConnection" /> object, and an <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-138">다음 표에서이 구현의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.는 <xref:System.Data.OracleClient.OracleCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-138">The following table shows initial property values for an instance of this implementation of the <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
|<span data-ttu-id="42287-139">속성</span><span class="sxs-lookup"><span data-stu-id="42287-139">Properties</span></span>|<span data-ttu-id="42287-140">초기 값</span><span class="sxs-lookup"><span data-stu-id="42287-140">Initial Value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|<span data-ttu-id="42287-141">새 <xref:System.Data.OracleClient.OracleConnection> 즉에 대 한 값은 `connection` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-141">A new <xref:System.Data.OracleClient.OracleConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="42287-142">관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-142">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42287-143">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-143">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="oracleCommand.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42287-144">
            <see cref="T:System.Data.OracleClient.OracleCommand" />의 실행을 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-144">Attempts to cancel the execution of an <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-145">가 취소할 경우 아무 작업도 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-145">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="42287-146">그러나 진행 중인 명령이 있는 경우 취소 동작이 실패하더라도 예외가 생성되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-146">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42287-147">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand>,를 실행 한 다음 실행을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-147">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution.</span></span> <span data-ttu-id="42287-148">이를 위해 SQL SELECT 문을 문자열과 데이터베이스에 연결 하는 데 사용할 문자열을 메서드에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42287-148">To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleCommand.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42287-149">이 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체의 복사본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-149">Creates a copy of this <see cref="T:System.Data.OracleClient.OracleCommand" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42287-150">모든 속성 값이 원본과 같은 새 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-150">A new <see cref="T:System.Data.OracleClient.OracleCommand" /> object in which all property values are the same as the original.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42287-151">데이터 소스에서 실행할 SQL 문 또는 저장 프로시저를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-151">Gets or sets the SQL statement or stored procedure to execute against the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42287-152">실행할 SQL 문 또는 저장 프로시저입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-152">The SQL statement or stored procedure to execute.</span>
          </span>
          <span data-ttu-id="42287-153">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-153">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-154">경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-154">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="42287-155">사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-155">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="42287-156">Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-156">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="42287-157">.NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-157">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="42287-158">이 경우 명명 된 매개 변수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-158">In this case, named parameters must be used.</span></span> <span data-ttu-id="42287-159">예:</span><span class="sxs-lookup"><span data-stu-id="42287-159">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="42287-160">호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`, 콜론 (:) 매개 변수 이름 앞에 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-160">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="42287-161">그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <xref:System.Data.OracleClient.OracleParameter> 개체는 <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> 속성), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="42287-161">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="42287-162">.NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-162">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42287-163">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-163">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42287-164">명령 실행을 종료하고 오류를 생성하기 전 대기 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-164">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42287-165">명령이 실행될 때까지 대기하는 시간(초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-165">The time (in seconds) to wait for the command to execute.</span>
          </span>
          <span data-ttu-id="42287-166">기본값은 30초입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-166">The default value is 30 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-167"><xref:System.ArgumentException> 경우에 생성 되는 할당 된 <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> 속성 값이 0 보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-167">An <xref:System.ArgumentException> is generated if the assigned <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property value is less than 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42287-168">
            <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 속성을 해석하는 방법을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-168">Gets or sets a value indicating how the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> property is interpreted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42287-169">
            <see cref="T:System.Data.CommandType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-169">One of the <see cref="T:System.Data.CommandType" /> values.</span>
          </span>
          <span data-ttu-id="42287-170">기본값은 <see langword="Text" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-170">The default is <see langword="Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-171">때는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 속성이 `StoredProcedure`를 설정 해야는 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 속성을 전체 Oracle 호출 구문입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-171">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, you should set the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property to the full Oracle call syntax.</span></span> <span data-ttu-id="42287-172">Execute 메서드 중 하나를 호출 하면 다음 명령이이 저장된 프로시저 실행 (예를 들어 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 또는 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span><span class="sxs-lookup"><span data-stu-id="42287-172">The command then executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).</span></span>  
  
 <span data-ttu-id="42287-173"><xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 및 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 현재 연결 execute 또는 인출 작업을 수행 하는 경우 속성을 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-173">The <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="42287-174">.NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-174">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="42287-175">이 경우 명명 된 매개 변수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-175">In this case, named parameters must be used.</span></span> <span data-ttu-id="42287-176">예:</span><span class="sxs-lookup"><span data-stu-id="42287-176">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="42287-177">호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`, 콜론 (:) 매개 변수 이름 앞에 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-177">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="42287-178">그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <xref:System.Data.OracleClient.OracleParameter> 개체는 <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> 속성), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="42287-178">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="42287-179">.NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-179">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42287-180">다음 예제에서는 파생된 클래스의 인스턴스를 만들고 <xref:System.Data.OracleClient.OracleCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-180">The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="42287-181">값이 유효한 <see cref="T:System.Data.CommandType" />이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-181">The value was not a valid <see cref="T:System.Data.CommandType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); void set(System::Data::OracleClient::OracleConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42287-182">
            <see cref="T:System.Data.OracleClient.OracleCommand" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.OracleClient.OracleConnection" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-182">Gets or sets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42287-183">데이터 소스와의 연결입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-183">The connection to a data source.</span>
          </span>
          <span data-ttu-id="42287-184">기본값은 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-184">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-185">설정할 수 없습니다.는 <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, 및 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="42287-185">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.</span></span>  
  
 <span data-ttu-id="42287-186">트랜잭션이 처리되는 중에 <xref:System.Data.OracleClient.OracleCommand.Connection%2A>을 설정한 경우 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 속성이 null이 아니면 <xref:System.InvalidOperationException>이 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="42287-186">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> while a transaction is in progress and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated.</span></span> <span data-ttu-id="42287-187">설정 하는 경우 <xref:System.Data.OracleClient.OracleCommand.Connection%2A> 트랜잭션이 커밋 또는 롤백 후 및 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 속성이 null이 아니면는 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 속성은 null 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42287-187">If you set <xref:System.Data.OracleClient.OracleCommand.Connection%2A> after the transaction has been committed or rolled back, and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is then set to a null value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42287-188">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-188">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Connection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Connection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42287-189">트랜잭션을 진행하는 동안 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 속성이 변경되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-189">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> property was changed while a transaction was in progress.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="oracleCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OracleParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.OracleClient.OracleParameter" Usage="oracleCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42287-190">
            <see cref="T:System.Data.OracleClient.OracleParameter" /> 개체의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-190">Creates a new instance of an <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42287-191">
            <see cref="T:System.Data.OracleClient.OracleParameter" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-191">An <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-192"><xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> 메서드는 강력한 형식의 버전의 <xref:System.Data.IDbCommand.CreateParameter%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-192">The <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42287-193">명령 개체를 사용자 지정된 인터페이스 컨트롤에서 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-193">Gets or sets a value indicating whether the command object should be visible in a customized interface control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42287-194">명령 개체를 컨트롤에 표시해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-194">
              <see langword="true" />, if the command object should be visible in a control; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="42287-195">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-195">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="oracleCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="oracleCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42287-196">
            <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-196">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42287-197">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-197">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          </span>
          <span data-ttu-id="42287-198">CREATE TABLE 및 DROP TABLE 문의 경우 반환 값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-198">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          </span>
          <span data-ttu-id="42287-199">다른 형식의 문의 경우에는 반환 값이 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-199">For all other types of statements, the return value is -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-200">사용할 수 있습니다 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기); 카탈로그 작업을 수행 하거나 사용 하지 않고는 데이터베이스의 데이터를 변경 하려면는 <xref:System.Data.DataSet>,으로 UPDATE, INSERT, 실행 또는 삭제 문입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-200">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="42287-201">하지만 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> 행을 모든 출력 매개 변수가 반환 하지 않거나 반환 값 매개 변수에 매핑된 데이터 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="42287-201">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="42287-202">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-202">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="42287-203">CREATE TABLE 및 DROP TABLE 문의 경우 반환 값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-203">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span></span> <span data-ttu-id="42287-204">다른 형식의 문의 경우에는 반환 값이 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-204">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="42287-205">롤백이 발생 하는 경우 반환 값-1 이기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-205">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42287-206">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 다음 사용 하 여 실행 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-206">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="42287-207">이 예제에서는 문자열입니다 (예: 업데이트, 삽입 또는 삭제)는 SQL 문 및 데이터베이스에 연결 하는 데 사용할 문자열을 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42287-207">The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42287-208">연결이 존재하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-208">The connection does not exist.</span>
          </span>
          <span data-ttu-id="42287-209">-또는-  연결이 열려 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-209">-or-  The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteOracleNonQuery([out] valuetype System.Data.OracleClient.OracleString&amp; rowid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleNonQuery (ByRef rowid As OracleString) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteOracleNonQuery([Runtime::InteropServices::Out] System::Data::OracleClient::OracleString % rowid);" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleNonQuery :  -&gt; int" Usage="oracleCommand.ExecuteOracleNonQuery rowid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowid" Type="System.Data.OracleClient.OracleString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowid">
          <span data-ttu-id="42287-210">서버에 있는 실제 행 ID의 base64 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-210">A base64 string representation of the actual row ID in the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42287-211">
            <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-211">Executes an SQL statement against the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42287-212">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-212">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span>
          </span>
          <span data-ttu-id="42287-213">CREATE TABLE 및 DROP TABLE 문의 경우 반환 값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-213">For CREATE TABLE and DROP TABLE statements, the return value is 0.</span>
          </span>
          <span data-ttu-id="42287-214">다른 형식의 문의 경우에는 반환 값이 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-214">For all other types of statements, the return value is -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-215">사용할 수 있습니다 <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기); 카탈로그 작업을 수행 하거나 사용 하지 않고는 데이터베이스의 데이터를 변경 하려면는 <xref:System.Data.DataSet>,으로 UPDATE, INSERT, 실행 또는 삭제 문입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-215">You can use <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="42287-216"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> 와 다른 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> 반환 한다는 점에서 `rowid` 정확히 하나의 행에 영향을 주는 INSERT, DELETE 또는 UPDATE 문을 실행 하는 경우 출력 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-216"><xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> differs from <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> in that it returns `rowid` as an output parameter if you are executing an INSERT, DELETE, or UPDATE statement that affects exactly one row.</span></span> <span data-ttu-id="42287-217">그러면 후속 관련된 쿼리에에서 성능을 향상 시킬 수 있도록 하는 Oracle 데이터베이스에서 행을 고유 하 게 식별 하는 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-217">This allows you to uniquely identify a row in the Oracle database, which can allow you to increase performance in subsequent, related queries.</span></span>  
  
 <span data-ttu-id="42287-218">하지만 <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> 행을 모든 출력 매개 변수가 반환 하지 않거나 반환 값 매개 변수에 매핑된 데이터 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="42287-218">Although <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42287-219">연결이 존재하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-219">The connection does not exist.</span>
          </span>
          <span data-ttu-id="42287-220">-또는-  연결이 열려 있지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-220">-or-  The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleScalar">
      <MemberSignature Language="C#" Value="public object ExecuteOracleScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ExecuteOracleScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteOracleScalar();" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteOracleScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42287-221">쿼리를 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 Oracle 고유 데이터 형식으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-221">Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type.</span>
          </span>
          <span data-ttu-id="42287-222">추가 열이나 행은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-222">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42287-223">Oracle 고유 데이터 형식인 결과 집합의 첫 행의 첫 열 또는 결과가 <see langword="REF CURSOR" />인 경우 null 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-223">The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <see langword="REF CURSOR" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-224">사용 하 여는 <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-224">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="42287-225">사용 하 여 보다 적은 코드가 필요는 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 메서드를 다음에서 반환 된 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행 하는 <xref:System.Data.OracleClient.OracleDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-225">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="42287-226">일반적인 <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> 쿼리 다음 C# 예제와 같이 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-226">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";  
count = command.ExecuteOracleScalar();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="42287-227">
            <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" />를 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />에 보내고 <see cref="T:System.Data.OracleClient.OracleDataReader" />를 빌드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-227">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42287-228">
            <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" />를 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />에 보내고 <see cref="T:System.Data.OracleClient.OracleDataReader" />를 빌드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-228">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42287-229">
            <see cref="T:System.Data.OracleClient.OracleDataReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-229">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-230">경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-230">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="42287-231">호출할 때 다음이 저장된 프로시저를 실행 명령을 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-231">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="42287-232">둘 이상의 <xref:System.Data.OracleClient.OracleDataReader> 어느 시점에서 열 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-232">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42287-233">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand>, 한 다음 SQL SELECT 문에 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 하 여 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-233">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="42287-234">
            <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-234">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="42287-235">
            <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" />를 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />에 보내고 <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.OracleClient.OracleDataReader" />를 빌드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-235">Sends the <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> to the <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />, and builds an <see cref="T:System.Data.OracleClient.OracleDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42287-236">
            <see cref="T:System.Data.OracleClient.OracleDataReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-236">An <see cref="T:System.Data.OracleClient.OracleDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-237">SQL 문의 단일 행만 반환 될 경우 지정 `SingleRow` 로 <xref:System.Data.CommandBehavior> 값에는 응용 프로그램의 성능을 향상 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-237">If you expect your SQL statement to return only a single row, specifying `SingleRow` as the <xref:System.Data.CommandBehavior> value may improve application performance.</span></span>  
  
 <span data-ttu-id="42287-238">경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-238">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="42287-239">호출할 때 다음이 저장된 프로시저를 실행 명령을 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-239">The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="42287-240"><xref:System.Data.OracleClient.OracleDataReader> 크기가 큰 이진 값를 효율적으로 읽을 수 있는 특별 한 모드를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-240">The <xref:System.Data.OracleClient.OracleDataReader> supports a special mode that enables large binary values to be read efficiently.</span></span> <span data-ttu-id="42287-241">자세한 내용은 참조는 `SequentialAccess` 에 대 한 설정 <xref:System.Data.CommandBehavior>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-241">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="42287-242">둘 이상의 <xref:System.Data.OracleClient.OracleDataReader> 어느 시점에서 열 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-242">More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42287-243">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand>, 한 다음 SQL SELECT 문에 문자열과 데이터베이스에 연결 하는 데 사용할 문자열을 전달 하 여 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-243">The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database.</span></span> <span data-ttu-id="42287-244"><xref:System.Data.CommandBehavior> 으로 설정 됩니다 <xref:System.Data.CommandBehavior.CloseConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-244"><xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42287-245">쿼리를 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 .NET Framework 데이터 형식으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-245">Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type.</span>
          </span>
          <span data-ttu-id="42287-246">추가 열이나 행은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-246">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="42287-247">.NET Framework 데이터 형식인 결과 집합의 첫 행의 첫 열 또는 결과 집합이 비어 있거나 결과가 <see langword="REF CURSOR" />인 경우 null 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-247">The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <see langword="REF CURSOR" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-248">사용 하 여는 <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-248">Use the <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="42287-249">사용 하 여 보다 적은 코드가 필요는 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 메서드를 다음에서 반환 된 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행 하는 <xref:System.Data.OracleClient.OracleDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-249">This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.</span></span>  
  
 <span data-ttu-id="42287-250">일반적인 <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> 쿼리 다음 C# 예제와 같이 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-250">A typical <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "SELECT COUNT(*) FROM Region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="42287-251">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 를 사용 하 여 빌드한 다음 실행 <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-251">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="42287-252">이 예제에서는 집계 결과 반환 하는 SQL 문으로 문자열과 데이터베이스에 연결 하는 데 사용할 문자열을 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42287-252">The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OracleParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleParameterCollection ^ Parameters { System::Data::OracleClient::OracleParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.OracleClient.OracleParameterCollection" Usage="System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42287-253">
            <see cref="T:System.Data.OracleClient.OracleParameterCollection" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-253">Gets the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42287-254">SQL 문 또는 저장 프로시저의 매개 변수</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-254">The parameters of the SQL statement or stored procedure.</span>
          </span>
          <span data-ttu-id="42287-255">기본값은 빈 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-255">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-256">경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-256">When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="42287-257">사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="42287-257">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="42287-258">Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-258">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="42287-259">.NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-259">The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`.</span></span> <span data-ttu-id="42287-260">이 경우 명명 된 매개 변수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-260">In this case, named parameters must be used.</span></span> <span data-ttu-id="42287-261">예:</span><span class="sxs-lookup"><span data-stu-id="42287-261">For example:</span></span>  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 <span data-ttu-id="42287-262">호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`, 콜론 (:) 매개 변수 이름 앞에 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-262">When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:).</span></span> <span data-ttu-id="42287-263">그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <xref:System.Data.OracleClient.OracleParameter> 개체는 <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> 속성), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="42287-263">However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:).</span></span> <span data-ttu-id="42287-264">.NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-264">The .NET Framework Data Provider for Oracle supplies the colon automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42287-265">다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 해당 매개 변수를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-265">The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters.</span></span> <span data-ttu-id="42287-266">이를 위해 메서드에 전달 됩니다는 <xref:System.Data.OracleClient.OracleConnection>, 배열 및 SQL SELECT 문에 있는 쿼리 문자열 <xref:System.Data.OracleClient.OracleParameter> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-266">To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="oracleCommand.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42287-267">데이터 소스에 명령의 준비 버전이나 컴파일 버전을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-267">Creates a prepared (or compiled) version of the command at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-268">호출 하기 전에 <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, 준비 된 문에서에서 각 매개 변수의 데이터 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-268">Before you call <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="42287-269">
            <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />이 설정되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-269">The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not set.</span>
          </span>
          <span data-ttu-id="42287-270">-또는-  <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />이 <see cref="M:System.Data.OracleClient.OracleConnection.Open" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-270">-or-  The <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> is not <see cref="M:System.Data.OracleClient.OracleConnection.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="oracleCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="42287-271">
            <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> 속성을 기본값으로 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-271">Resets the <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> property to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-272">기본값은 <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> 30 초입니다.</span><span class="sxs-lookup"><span data-stu-id="42287-272">The default value of the <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleTransaction ^ Transaction { System::Data::OracleClient::OracleTransaction ^ get(); void set(System::Data::OracleClient::OracleTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.OracleClient.OracleTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42287-273">
            <see cref="T:System.Data.OracleClient.OracleTransaction" />가 실행되는 <see cref="T:System.Data.OracleClient.OracleCommand" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-273">Gets or sets the <see cref="T:System.Data.OracleClient.OracleTransaction" /> within which the <see cref="T:System.Data.OracleClient.OracleCommand" /> executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42287-274">
            <see cref="T:System.Data.OracleClient.OracleTransaction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-274">An <see cref="T:System.Data.OracleClient.OracleTransaction" />.</span>
          </span>
          <span data-ttu-id="42287-275">기본값은 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-275">The default is a null value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-276">설정할 수 없습니다.는 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 특정 값으로 이미 설정 되어 있으며 명령을 실행 중 경우 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-276">You cannot set the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="42287-277">트랜잭션 속성을 설정 하는 경우는 <xref:System.Data.OracleClient.OracleTransaction> 동일 하 게 연결 되어 있지 않은 개체 <xref:System.Data.OracleClient.OracleConnection> 로 <xref:System.Data.OracleClient.OracleCommand> 개체 다음에 문을 실행 하려고 하면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42287-277">If you set the transaction property to an <xref:System.Data.OracleClient.OracleTransaction> object that is not connected to the same <xref:System.Data.OracleClient.OracleConnection> as the <xref:System.Data.OracleClient.OracleCommand> object, an exception will be thrown the next time you attempt to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="42287-278">
            <see langword="Update" /> 메서드가 명령 결과를 <see cref="T:System.Data.DataRow" />에 적용하는 방식을 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-278">Gets or sets a value that specifies how the <see langword="Update" /> method should apply command results to the <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="42287-279">
            <see cref="T:System.Data.UpdateRowSource" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-279">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42287-280">기본 <xref:System.Data.UpdateRowSource> 값은 `Both` 명령이 자동으로 생성 하지 않는 한 (의 경우로 <xref:System.Data.OracleClient.OracleCommandBuilder>),이 경우 기본값은 `None`합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-280">The default <xref:System.Data.UpdateRowSource> value is `Both` unless the command is automatically generated (as in the case of the <xref:System.Data.OracleClient.OracleCommandBuilder>), in which case the default is `None`.</span></span>  
  
 <span data-ttu-id="42287-281">사용 하는 방법에 대 한 자세한 내용은 <xref:System.Data.UpdateRowSource> 속성 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="42287-281">For more information about using the <xref:System.Data.UpdateRowSource> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="42287-282">입력한 값이 <see cref="T:System.Data.UpdateRowSource" /> 값 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="42287-282">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>