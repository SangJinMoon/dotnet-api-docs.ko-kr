<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OracleCommand.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d3206433275a12c1b96ab6e176e46ba31c1fcef8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3206433275a12c1b96ab6e176e46ba31c1fcef8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Represents an SQL statement or stored procedure to execute against a database.</source>
          <target state="translated">데이터베이스에 대해 실행할 SQL 문이나 저장 프로시저를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommand">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>This type is deprecated and will be removed in a future version of the .NET Framework.</source>
          <target state="translated">이 형식은 사용 되지 않으며.NET Framework의 이후 버전에서 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Oracle and ADO.NET<ept id="p1">](~/docs/framework/data/adonet/oracle-and-adonet.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Oracle 및 ADO.NET<ept id="p1">](~/docs/framework/data/adonet/oracle-and-adonet.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> class provides the following methods for executing commands against a data source:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 클래스는 데이터 원본에 대해 명령을 실행 하기 위한 다음 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Item</source>
          <target state="translated">항목</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Executes commands that return rows.</source>
          <target state="translated">행을 반환 하는 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Executes an SQL statement against the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph> and returns the number of rows affected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph>에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.</source>
          <target state="translated">SQL INSERT, DELETE, UPDATE 및 SET 문과 같은 명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Retrieves a single value (for example, an aggregate value) from a database as a .NET Framework data type.</source>
          <target state="translated">.NET Framework 데이터 형식으로 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Retrieves a single value (for example, an aggregate value) from a database as an Oracle-specific data type.</source>
          <target state="translated">Oracle 고유 데이터 형식으로 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>You can reset the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> property and reuse the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object.</source>
          <target state="translated">다시 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 속성 및 재사용은 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>If execution of the command results in a fatal <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleException&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> may close.</source>
          <target state="translated">명령 실행으로 인해 심각한 경우 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleException&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> 닫힐 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>However, the user can reopen the connection and continue.</source>
          <target state="translated">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Unlike the <bpt id="p1">**</bpt>Command<ept id="p1">**</ept> object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object does not support a <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt;</ph> property.</source>
          <target state="translated">와 달리는 <bpt id="p1">**</bpt>명령<ept id="p1">**</ept> 다른.NET Framework 데이터 공급자 (SQL Server, OLE DB 및 ODBC)의 개체는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 개체가 지원 하지 않습니다는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Setting a command timeout has no effect and the value returned is always zero.</source>
          <target state="translated">명령 제한 시간 설정 아무 효과가 없으며 반환 되는 값은 항상 0입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleCommand">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> method of <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>, along with <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> and <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph>, to select rows from a table.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> 방식의 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>와 함께 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph>, 테이블에서 행을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor">
          <source>The base constructor initializes all fields to their default values.</source>
          <target state="translated">기본 생성자는 모든 필드를를 기본값으로 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor">
          <source>Initial Value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor">
          <source>empty string ("")</source>
          <target state="translated">빈 문자열 ("")</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor">
          <source>null</source>
          <target state="translated">null</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> class with the text of the query.</source>
          <target state="translated">쿼리 텍스트를 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> object that represents the connection to a database.</source>
          <target state="translated">데이터베이스에 대한 연결을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> class with the text of the query and an <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> object.</source>
          <target state="translated">쿼리 텍스트와 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체를 사용하여 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> object that represents the connection to a database.</source>
          <target state="translated">데이터베이스에 대한 연결을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleTransaction" /&gt;</ph> in which the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> executes.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>가 실행되는 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleTransaction" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> class with the text of the query, an <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> object, and an <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleTransaction" /&gt;</ph>.</source>
          <target state="translated">쿼리 텍스트, <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체 및 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph>을 사용하여 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleTransaction" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
          <source>The following table shows initial property values for an instance of this implementation of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>.</source>
          <target state="translated">다음 표에서이 구현의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
          <source>Initial Value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
          <source>A new <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> that is the value for the <ph id="ph2">`connection`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> 즉에 대 한 값은 <ph id="ph2">`connection`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
          <source>You can change the value for any of these parameters by setting the related property.</source>
          <target state="translated">관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.Cancel">
          <source>Attempts to cancel the execution of an <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>의 실행을 취소합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.Cancel">
          <source>If there is nothing to cancel, nothing happens.</source>
          <target state="translated">가 취소할 경우 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.Cancel">
          <source>However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</source>
          <target state="translated">그러나 진행 중인 명령이 있는 경우 취소 동작이 실패하더라도 예외가 생성되지 않습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.Cancel">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>, executes it, then cancels the execution.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>,를 실행 한 다음 실행을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.Cancel">
          <source>To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.</source>
          <target state="translated">이를 위해 SQL SELECT 문을 문자열과 데이터베이스에 연결 하는 데 사용할 문자열을 메서드에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.Clone">
          <source>Creates a copy of this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> object in which all property values are the same as the original.</source>
          <target state="translated">모든 속성 값이 원본과 같은 새 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>Gets or sets the SQL statement or stored procedure to execute against the database.</source>
          <target state="translated">데이터 소스에서 실행할 SQL 문 또는 저장 프로시저를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>The SQL statement or stored procedure to execute.</source>
          <target state="translated">실행할 SQL 문 또는 저장 프로시저입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>The default value is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>When the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> 속성이 <ph id="ph2">`StoredProcedure`</ph>, <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>The user may be required to use escape character syntax if the stored procedure name contains any special characters.</source>
          <target state="translated">사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>The command executes this stored procedure when you call one of the Execute methods.</source>
          <target state="translated">Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> of <ph id="ph2">`CommandType.Text`</ph>.</source>
          <target state="translated">.NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 의 <ph id="ph2">`CommandType.Text`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">이 경우 명명 된 매개 변수를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>When using named parameters in an SQL statement called by an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> of <ph id="ph2">`CommandType.Text`</ph>, you must precede the parameter name with a colon (:).</source>
          <target state="translated">호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 의 <ph id="ph2">`CommandType.Text`</ph>, 콜론 (:) 매개 변수 이름 앞에 야 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleParameter&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt;</ph> property), do not precede the named parameter with a colon (:).</source>
          <target state="translated">그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleParameter&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt;</ph> 속성), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>The .NET Framework Data Provider for Oracle supplies the colon automatically.</source>
          <target state="translated">.NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandText">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommand.CommandTimeout">
          <source>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</source>
          <target state="translated">명령 실행을 종료하고 오류를 생성하기 전 대기 시간을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandTimeout">
          <source>The time (in seconds) to wait for the command to execute.</source>
          <target state="translated">명령이 실행될 때까지 대기하는 시간(초)입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandTimeout">
          <source>The default value is 30 seconds.</source>
          <target state="translated">기본값은 30초입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandTimeout">
          <source>An <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> is generated if the assigned <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt;</ph> property value is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> 경우에 생성 되는 할당 된 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt;</ph> 속성 값이 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>Gets or sets a value indicating how the <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /&gt;</ph> property is interpreted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /&gt;</ph> 속성을 해석하는 방법을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>The default is <ph id="ph1">&lt;see langword="Text" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Text" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>When the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, you should set the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> property to the full Oracle call syntax.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> 속성이 <ph id="ph2">`StoredProcedure`</ph>를 설정 해야는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 속성을 전체 Oracle 호출 구문입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>The command then executes this stored procedure when you call one of the Execute methods (for example, <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</ph>).</source>
          <target state="translated">Execute 메서드 중 하나를 호출 하면 다음 명령이이 저장된 프로시저 실행 (예를 들어 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> properties cannot be set if the current connection is performing an execute or fetch operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 현재 연결 execute 또는 인출 작업을 수행 하는 경우 속성을 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> of <ph id="ph2">`CommandType.Text`</ph>.</source>
          <target state="translated">.NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 의 <ph id="ph2">`CommandType.Text`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">이 경우 명명 된 매개 변수를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>When using named parameters in an SQL statement called by an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> of <ph id="ph2">`CommandType.Text`</ph>, you must precede the parameter name with a colon (:).</source>
          <target state="translated">호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 의 <ph id="ph2">`CommandType.Text`</ph>, 콜론 (:) 매개 변수 이름 앞에 야 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleParameter&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt;</ph> property), do not precede the named parameter with a colon (:).</source>
          <target state="translated">그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleParameter&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt;</ph> 속성), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>The .NET Framework Data Provider for Oracle supplies the colon automatically.</source>
          <target state="translated">.NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>The following example creates an instance of a derived class <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 파생된 클래스의 인스턴스를 만들고 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommand.CommandType">
          <source>The value was not a valid <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>.</source>
          <target state="translated">값이 유효한 <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>이 아닙니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommand.Connection">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> used by this instance of the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>의 이 인스턴스에서 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Connection">
          <source>The connection to a data source.</source>
          <target state="translated">데이터 소스와의 연결입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Connection">
          <source>The default is a null value.</source>
          <target state="translated">기본값은 null입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Connection">
          <source>You cannot set the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> properties if the current connection is performing an execute or fetch operation.</source>
          <target state="translated">설정할 수 없습니다.는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 속성은 현재 연결 execute 또는 인출 작업을 수행 하는 경우.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Connection">
          <source>If you set <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph> while a transaction is in progress and the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> property is not null, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is generated.</source>
          <target state="translated">트랜잭션이 처리되는 중에 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph>을 설정한 경우 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> 속성이 null이 아니면 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>이 생성됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Connection">
          <source>If you set <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph> after the transaction has been committed or rolled back, and the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> property is not null, the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> property is then set to a null value.</source>
          <target state="translated">설정 하는 경우 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Connection%2A&gt;</ph> 트랜잭션이 커밋 또는 롤백 후 및 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> 속성이 null이 아니면는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> 속성은 null 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Connection">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommand.Connection">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph> property was changed while a transaction was in progress.</source>
          <target state="translated">트랜잭션을 진행하는 동안 <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph> 속성이 변경되었습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.CreateParameter">
          <source>Creates a new instance of an <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleParameter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleParameter" /&gt;</ph> 개체의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.CreateParameter">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleParameter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleParameter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.CreateParameter">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A&gt;</ph> method is a strongly-typed version of <ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A&gt;</ph> 메서드는 강력한 형식의 버전의 <ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible">
          <source>Gets or sets a value indicating whether the command object should be visible in a customized interface control.</source>
          <target state="translated">명령 개체를 사용자 지정된 인터페이스 컨트롤에서 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the command object should be visible in a control; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">명령 개체를 컨트롤에 표시해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>Executes an SQL statement against the <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph> and returns the number of rows affected.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph>에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>For CREATE TABLE and DROP TABLE statements, the return value is 0.</source>
          <target state="translated">CREATE TABLE 및 DROP TABLE 문의 경우 반환 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">다른 형식의 문의 경우에는 반환 값이 -1입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>You can use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</ph> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, by executing UPDATE, INSERT, or DELETE statements.</source>
          <target state="translated">사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</ph> (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기); 카탈로그 작업을 수행 하거나 사용 하지 않고는 데이터베이스의 데이터를 변경 하려면는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>,으로 UPDATE, INSERT, 실행 또는 삭제 문입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>Although <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</ph> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</ph> 행을 모든 출력 매개 변수가 반환 하지 않거나 반환 값 매개 변수에 매핑된 데이터 채워집니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>For CREATE TABLE and DROP TABLE statements, the return value is 0.</source>
          <target state="translated">CREATE TABLE 및 DROP TABLE 문의 경우 반환 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">다른 형식의 문의 경우에는 반환 값이 -1입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>If a rollback occurs, the return value is also -1.</source>
          <target state="translated">롤백이 발생 하는 경우 반환 값-1 이기도 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> and then executes it by using <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 다음 사용 하 여 실행 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.</source>
          <target state="translated">이 예제에서는 문자열입니다 (예: 업데이트, 삽입 또는 삭제)는 SQL 문 및 데이터베이스에 연결 하는 데 사용할 문자열을 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>The connection does not exist.</source>
          <target state="translated">연결이 존재하지 않습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
          <source>The connection is not open.</source>
          <target state="translated">연결이 열려 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source>A base64 string representation of the actual row ID in the server.</source>
          <target state="translated">서버에 있는 실제 행 ID의 base64 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source>Executes an SQL statement against the <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph> and returns the number of rows affected.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph>에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source>For CREATE TABLE and DROP TABLE statements, the return value is 0.</source>
          <target state="translated">CREATE TABLE 및 DROP TABLE 문의 경우 반환 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">다른 형식의 문의 경우에는 반환 값이 -1입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source>You can use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A&gt;</ph> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, by executing UPDATE, INSERT, or DELETE statements.</source>
          <target state="translated">사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A&gt;</ph> (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기); 카탈로그 작업을 수행 하거나 사용 하지 않고는 데이터베이스의 데이터를 변경 하려면는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>,으로 UPDATE, INSERT, 실행 또는 삭제 문입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A&gt;</ph> differs from <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</ph> in that it returns <ph id="ph3">`rowid`</ph> as an output parameter if you are executing an INSERT, DELETE, or UPDATE statement that affects exactly one row.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A&gt;</ph> 와 다른 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A&gt;</ph> 반환 한다는 점에서 <ph id="ph3">`rowid`</ph> 정확히 하나의 행에 영향을 주는 INSERT, DELETE 또는 UPDATE 문을 실행 하는 경우 출력 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source>This allows you to uniquely identify a row in the Oracle database, which can allow you to increase performance in subsequent, related queries.</source>
          <target state="translated">그러면 후속 관련된 쿼리에에서 성능을 향상 시킬 수 있도록 하는 Oracle 데이터베이스에서 행을 고유 하 게 식별 하는 있습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source>Although <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A&gt;</ph> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A&gt;</ph> 행을 모든 출력 매개 변수가 반환 하지 않거나 반환 값 매개 변수에 매핑된 데이터 채워집니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source>The connection does not exist.</source>
          <target state="translated">연결이 존재하지 않습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
          <source>The connection is not open.</source>
          <target state="translated">연결이 열려 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar">
          <source>Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type.</source>
          <target state="translated">쿼리를 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 Oracle 고유 데이터 형식으로 반환합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar">
          <source>Extra columns or rows are ignored.</source>
          <target state="translated">추가 열이나 행은 무시됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar">
          <source>The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <ph id="ph1">&lt;see langword="REF CURSOR" /&gt;</ph>.</source>
          <target state="translated">Oracle 고유 데이터 형식인 결과 집합의 첫 행의 첫 열 또는 결과가 <ph id="ph1">&lt;see langword="REF CURSOR" /&gt;</ph>인 경우 null 참조입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A&gt;</ph> method to retrieve a single value (for example, an aggregate value) from a database.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A&gt;</ph> 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar">
          <source>This requires less code than using the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> method, and then performing the operations necessary to generate the single value from the data returned by an <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>.</source>
          <target state="translated">사용 하 여 보다 적은 코드가 필요는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> 메서드를 다음에서 반환 된 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행 하는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A&gt;</ph> query can be formatted as in the following C# example:</source>
          <target state="translated">일반적인 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A&gt;</ph> 쿼리 다음 C# 예제와 같이 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleCommand">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph> and builds an <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /&gt;</ph>를 <ph id="ph2">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleDataReader" /&gt;</ph>를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph> and builds an <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /&gt;</ph>를 <ph id="ph2">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleDataReader" /&gt;</ph>를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataReader" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader">
          <source>When the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> 속성이 <ph id="ph2">`StoredProcedure`</ph>, <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader">
          <source>The command then executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">호출할 때 다음이 저장된 프로시저를 실행 명령을 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader">
          <source>More than one <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> can be open at any given time.</source>
          <target state="translated">둘 이상의 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> 어느 시점에서 열 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>, 한 다음 SQL SELECT 문에 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 하 여 실행 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph>, and builds an <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleDataReader" /&gt;</ph> using one of the <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /&gt;</ph>를 <ph id="ph2">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 값 중 하나를 사용하여 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleDataReader" /&gt;</ph>를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleDataReader" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>If you expect your SQL statement to return only a single row, specifying <ph id="ph1">`SingleRow`</ph> as the <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph> value may improve application performance.</source>
          <target state="translated">SQL 문의 단일 행만 반환 될 경우 지정 <ph id="ph1">`SingleRow`</ph> 로 <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph> 값에는 응용 프로그램의 성능을 향상 시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> 속성이 <ph id="ph2">`StoredProcedure`</ph>, <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The command then executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">호출할 때 다음이 저장된 프로시저를 실행 명령을 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> supports a special mode that enables large binary values to be read efficiently.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> 크기가 큰 이진 값를 효율적으로 읽을 수 있는 특별 한 모드를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information, see the <ph id="ph1">`SequentialAccess`</ph> setting for <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph>.</source>
          <target state="translated">자세한 내용은 참조는 <ph id="ph1">`SequentialAccess`</ph> 에 대 한 설정 <ph id="ph2">&lt;xref:System.Data.CommandBehavior&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>More than one <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> can be open at any given time.</source>
          <target state="translated">둘 이상의 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> 어느 시점에서 열 수 있습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph>, 한 다음 SQL SELECT 문에 문자열과 데이터베이스에 연결 하는 데 사용할 문자열을 전달 하 여 실행 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.CommandBehavior&gt;</ph> is then set to <ph id="ph2">&lt;xref:System.Data.CommandBehavior.CloseConnection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.CommandBehavior&gt;</ph> 으로 설정 됩니다 <ph id="ph2">&lt;xref:System.Data.CommandBehavior.CloseConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteScalar">
          <source>Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type.</source>
          <target state="translated">쿼리를 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 .NET Framework 데이터 형식으로 반환합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteScalar">
          <source>Extra columns or rows are ignored.</source>
          <target state="translated">추가 열이나 행은 무시됩니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ExecuteScalar">
          <source>The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <ph id="ph1">&lt;see langword="REF CURSOR" /&gt;</ph>.</source>
          <target state="translated">.NET Framework 데이터 형식인 결과 집합의 첫 행의 첫 열 또는 결과 집합이 비어 있거나 결과가 <ph id="ph1">&lt;see langword="REF CURSOR" /&gt;</ph>인 경우 null 참조입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteScalar">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;</ph> method to retrieve a single value (for example, an aggregate value) from a database.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;</ph> 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteScalar">
          <source>This requires less code than using the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> method, and then performing the operations necessary to generate the single value from the data returned by an <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>.</source>
          <target state="translated">사용 하 여 보다 적은 코드가 필요는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> 메서드를 다음에서 반환 된 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행 하는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteScalar">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;</ph> query can be formatted as in the following C# example:</source>
          <target state="translated">일반적인 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;</ph> 쿼리 다음 C# 예제와 같이 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteScalar">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> and then executes it using <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 를 사용 하 여 빌드한 다음 실행 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ExecuteScalar">
          <source>The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.</source>
          <target state="translated">이 예제에서는 집계 결과 반환 하는 SQL 문으로 문자열과 데이터베이스에 연결 하는 데 사용할 문자열을 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleParameterCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleParameterCollection" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>The parameters of the SQL statement or stored procedure.</source>
          <target state="translated">SQL 문 또는 저장 프로시저의 매개 변수</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>The default is an empty collection.</source>
          <target state="translated">기본값은 빈 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>When the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandType%2A&gt;</ph> 속성이 <ph id="ph2">`StoredProcedure`</ph>, <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.CommandText%2A&gt;</ph> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>The user may be required to use escape character syntax if the stored procedure name contains any special characters.</source>
          <target state="translated">사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>The command executes this stored procedure when you call one of the Execute methods.</source>
          <target state="translated">Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> of <ph id="ph2">`CommandType.Text`</ph>.</source>
          <target state="translated">.NET Framework Data Provider for Oracle에는 SQL 문의 매개 변수 전달에 의해 호출의 물음표 (?) 자리 표시자를 지원 하지 않는 한 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 의 <ph id="ph2">`CommandType.Text`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">이 경우 명명 된 매개 변수를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>When using named parameters in an SQL statement called by an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> of <ph id="ph2">`CommandType.Text`</ph>, you must precede the parameter name with a colon (:).</source>
          <target state="translated">호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 의 <ph id="ph2">`CommandType.Text`</ph>, 콜론 (:) 매개 변수 이름 앞에 야 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleParameter&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt;</ph> property), do not precede the named parameter with a colon (:).</source>
          <target state="translated">그러나 저장된 프로시저 또는 사용자 코드의 다른 위치에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleParameter&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleCommand.Parameters%2A&gt;</ph> 속성), 콜론 (:)으로 명명 된 매개 변수를 붙이지 마십시오.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>The .NET Framework Data Provider for Oracle supplies the colon automatically.</source>
          <target state="translated">.NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> and displays its parameters.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 해당 매개 변수를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Parameters">
          <source>To accomplish this, the method is passed an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph>, a query string that is an SQL SELECT statement, and an array of <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleParameter&gt;</ph> objects.</source>
          <target state="translated">이를 위해 메서드에 전달 됩니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph>, 배열 및 SQL SELECT 문에 있는 쿼리 문자열 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleParameter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.Prepare">
          <source>Creates a prepared (or compiled) version of the command at the data source.</source>
          <target state="translated">데이터 소스에 명령의 준비 버전이나 컴파일 버전을 만듭니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.Prepare">
          <source>Before you call <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Prepare%2A&gt;</ph>, specify the data type of each parameter in the statement to be prepared.</source>
          <target state="translated">호출 하기 전에 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Prepare%2A&gt;</ph>, 준비 된 문에서에서 각 매개 변수의 데이터 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.Prepare">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph> is not set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph>이 설정되지 않은 경우</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.Prepare">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.Prepare">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph> is not <ph id="ph2">&lt;see cref="M:System.Data.OracleClient.OracleConnection.Open" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.Connection" /&gt;</ph>이 <ph id="ph2">&lt;see cref="M:System.Data.OracleClient.OracleConnection.Open" /&gt;</ph>이 아닌 경우</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /&gt;</ph> property to the default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout">
          <source>The default value of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt;</ph> is 30 seconds.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A&gt;</ph> 30 초입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommand.Transaction">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleTransaction" /&gt;</ph> within which the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph> executes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleTransaction" /&gt;</ph>가 실행되는 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleCommand" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Transaction">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleTransaction" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleTransaction" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Transaction">
          <source>The default is a null value.</source>
          <target state="translated">기본값은 null입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Transaction">
          <source>You cannot set the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> property if it is already set to a specific value, and the command is in the process of executing.</source>
          <target state="translated">설정할 수 없습니다.는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleCommand.Transaction%2A&gt;</ph> 특정 값으로 이미 설정 되어 있으며 명령을 실행 중 경우 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.Transaction">
          <source>If you set the transaction property to an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleTransaction&gt;</ph> object that is not connected to the same <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> as the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> object, an exception will be thrown the next time you attempt to execute a statement.</source>
          <target state="translated">트랜잭션 속성을 설정 하는 경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleTransaction&gt;</ph> 동일 하 게 연결 되어 있지 않은 개체 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleConnection&gt;</ph> 로 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand&gt;</ph> 개체 다음에 문을 실행 하려고 하면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource">
          <source>Gets or sets a value that specifies how the <ph id="ph1">&lt;see langword="Update" /&gt;</ph> method should apply command results to the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Update" /&gt;</ph> 메서드가 명령 결과를 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>에 적용하는 방식을 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource">
          <source>The default <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> value is <ph id="ph2">`Both`</ph> unless the command is automatically generated (as in the case of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>), in which case the default is <ph id="ph4">`None`</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> 값은 <ph id="ph2">`Both`</ph> 명령이 자동으로 생성 하지 않는 한 (의 경우로 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommandBuilder&gt;</ph>),이 경우 기본값은 <ph id="ph4">`None`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource">
          <source>For more information about using the <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> property, see <bpt id="p1">[</bpt>DataAdapter Parameters<ept id="p1">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>.</source>
          <target state="translated">사용 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> 속성 참조 <bpt id="p1">[</bpt>DataAdapter 매개 변수<ept id="p1">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource">
          <source>The value entered was not one of the <ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> values.</source>
          <target state="translated">입력한 값이 <ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>