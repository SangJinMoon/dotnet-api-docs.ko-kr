<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OracleBFile.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5459475433844047b61ade7ae3edf80506077e29a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">459475433844047b61ade7ae3edf80506077e29a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Represents a managed <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object designed to work with the Oracle <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> data type.</source>
          <target state="translated">Oracle <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> 데이터 형식으로 작업하도록 설계된 관리되는 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleBFile">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The Oracle <ph id="ph1">`BFILE`</ph> data type is an Oracle <ph id="ph2">`LOB`</ph> data type that contains a reference to binary data with a maximum size of 4 gigabytes.</source>
          <target state="translated">Oracle <ph id="ph1">`BFILE`</ph> 데이터 형식은 Oracle <ph id="ph2">`LOB`</ph> 4gb의 최대 크기를 사용 하 여 이진 데이터에 대 한 참조를 포함 하는 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>An Oracle <ph id="ph1">`BFILE`</ph> differs from other Oracle <ph id="ph2">`LOB`</ph> data types in that its data is stored in a physical file in the operating system instead of on the server.</source>
          <target state="translated">Oracle <ph id="ph1">`BFILE`</ph> 다른 Oracle에서와 다른 <ph id="ph2">`LOB`</ph> 데이터는 서버에서 아닌 운영 체제의 물리적 파일에 저장 된다는 점에서 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Note that the <ph id="ph1">`BFILE`</ph> data type provides read-only access to data.</source>
          <target state="translated"><ph id="ph1">`BFILE`</ph> 데이터 형식은 데이터에 대 한 읽기 전용 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Therefore, write-oriented methods inherited from the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> class are not supported.</source>
          <target state="translated">따라서에서 상속 된 쓰기 관련 메서드는 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 클래스는 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Other characteristics of a <ph id="ph1">`BFILE`</ph> data type that distinguish it from a <ph id="ph2">`LOB`</ph> data type are that it:</source>
          <target state="translated">다른 특성을 한 <ph id="ph1">`BFILE`</ph> 구별 되는 데이터 형식을 <ph id="ph2">`LOB`</ph> 데이터 형식을:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Contains unstructured data.</source>
          <target state="translated">구조화되지 않은 데이터를 포함합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Supports server-side chunking.</source>
          <target state="translated">서버측 청크를 지원합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Uses reference copy semantics.</source>
          <target state="translated">참조 복사 의미를 사용합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>For example, if you perform a copy operation on a <ph id="ph1">`BFILE`</ph>, only the <ph id="ph2">`BFILE`</ph> locator (which is a reference to the file) is copied.</source>
          <target state="translated">예를 들어에서 복사 작업을 수행 하는 경우는 <ph id="ph1">`BFILE`</ph>만 <ph id="ph2">`BFILE`</ph> (즉, 파일에 대 한 참조) 로케이터 복사 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The data in the file is not copied.</source>
          <target state="translated">파일의 데이터는 복사되지 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The <ph id="ph1">`BFILE`</ph> data type should be used for referencing <ph id="ph2">`LOB`</ph>s that are large in size, and therefore, not practical to store in the database.</source>
          <target state="translated"><ph id="ph1">`BFILE`</ph> 참조에 대 한 데이터 형식을 사용 해야 <ph id="ph2">`LOB`</ph>크기가 큰 s 지므로 데이터베이스에 저장 하기에 적합 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>There is client, server, and communication overhead for using a <ph id="ph1">`BFILE`</ph> data type compared to the <ph id="ph2">`LOB`</ph> data type.</source>
          <target state="translated">사용 하기 위한 클라이언트, 서버 및 통신 오버 헤드가 <ph id="ph1">`BFILE`</ph> 데이터 형식에 비해는 <ph id="ph2">`LOB`</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>It is more efficient to access a <ph id="ph1">`BFILE`</ph> if you only need to obtain a small amount of data.</source>
          <target state="translated">이 액세스 하는 것이 효율적는 <ph id="ph1">`BFILE`</ph> 적은 양의 데이터를 가져와야 할 경우.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>It is more efficient to access database-resident <ph id="ph1">`LOB`</ph>s if you need to obtain the entire object.</source>
          <target state="translated">이 액세스 데이터베이스에 상주 하는 것이 효율적 <ph id="ph1">`LOB`</ph>s 전체 개체를 가져와야 하는 경우.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Each non-NULL <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is associated with two entities that define the location of the underlying physical file:</source>
          <target state="translated">NULL이 아닌 각 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체는 기본 물리적 파일의 위치를 정의 하는 엔터티 두 개와 연결:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and</source>
          <target state="translated">파일 시스템의 디렉터리에 대한 데이터베이스 별칭인 Oracle DIRECTORY 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.</source>
          <target state="translated">DIRECTORY 개체와 연관된 디렉터리에 위치하는 원본 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>After a <ph id="ph1">`BFILE`</ph> is created, you can retrieve its locator in the form of an <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;</ph> methods.</source>
          <target state="translated">후는 <ph id="ph1">`BFILE`</ph> 가 만들어지면의 형태로 로케이터를 검색할 수는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 를 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>To obtain an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object, call the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A&gt;</ph> method.</source>
          <target state="translated">가져올 수는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체를 호출 하는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The physical file that an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is associated with does not need to exist until you attempt to access it.</source>
          <target state="translated">되는 실제 파일는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체가 연결 되어 사용 하지 않아도 액세스 해 될 때까지 존재 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>An application can bind an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> to a nonexistent file, create the physical file in the expected location, and then call <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램에 바인딩할 수는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 존재 하지 않는 파일을 예상된 위치에서 물리적 파일을 만들고 다음 호출 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Any attempt to access a closed <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods reopens an <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> stream automatically.</source>
          <target state="translated">닫힌 액세스 하려는 모든 시도 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 를 사용 하는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> 메서드 다시는 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 스트림이 자동으로 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The following C# example demonstrates how you can create a <ph id="ph1">`BFILE`</ph> in an Oracle table, and then retrieve it in the form of an <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.</source>
          <target state="translated">다음 C# 예제를 만드는 방법을 보여 줍니다.는 <ph id="ph1">`BFILE`</ph> 는 Oracle에서 테이블을 선택한 다음 형식으로 검색 한 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph><ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> methods.</source>
          <target state="translated">사용 예제에 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> 개체 및 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>For more information about creating and using an Oracle <ph id="ph1">`BFILE`</ph>, see the appropriate topic in your Oracle documentation.</source>
          <target state="translated">만들기 및 Oracle을 사용 하는 방법에 대 한 자세한 내용은 <ph id="ph1">`BFILE`</ph>, Oracle 설명서에서 해당 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleBFile">
          <source>The <ph id="ph1">`BeginWrite`</ph>, <ph id="ph2">`EndWrite`</ph>, and <ph id="ph3">`WriteByte`</ph> methods, which are inherited from the <ph id="ph4">`System.IO.Stream`</ph> class, are not supported because the <ph id="ph5">`BFILE`</ph> data type is read-only.</source>
          <target state="translated"><ph id="ph1">`BeginWrite`</ph>, <ph id="ph2">`EndWrite`</ph>, 및 <ph id="ph3">`WriteByte`</ph> 에서 상속 되는 메서드는 <ph id="ph4">`System.IO.Stream`</ph> 클래스, 지원 되지 않습니다는 <ph id="ph5">`BFILE`</ph> 데이터 유형은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.CanRead">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> stream can be read.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> 스트림을 읽을 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.CanRead">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if a <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> is closed or disposed; otherwise <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>이 닫혀 있거나 삭제되었으면 <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.CanRead">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph>에 대해 항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.CanSeek">
          <source>Gets a value indicating whether forward-seek and backward-seek operations can be performed.</source>
          <target state="translated">앞으로 검색 및 뒤로 검색 작업이 수행될 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.CanSeek">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if a <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> is closed or disposed; otherwise <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>이 닫혀 있거나 삭제되었으면 <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.CanSeek">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph>에 대해 항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.CanWrite">
          <source>Gets a value indicating whether the object supports writing.</source>
          <target state="translated">개체가 쓰기를 지원하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.CanWrite">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> because the Oracle <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> data type is read-only.</source>
          <target state="translated">Oracle <ph id="ph1">&lt;see langword="false" /&gt;</ph> 데이터 형식이 읽기 전용이기 때문에 항상 <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Clone">
          <source>Creates a copy of this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object associated with the same physical file as the original.</source>
          <target state="translated">원래 개체와 같은 실제 파일과 관련된 이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 개체의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object associated with the same physical file as the original <ph id="ph2">&lt;see langword="OracleBFile" /&gt;</ph> object.</source>
          <target state="translated">원래 <ph id="ph2">&lt;see langword="OracleBFile" /&gt;</ph> 개체와 같은 실제 파일과 관련된 새 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Clone">
          <source>The properties of the new <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object initially have the same values as those of the original object.</source>
          <target state="translated">새 속성 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체는 처음 원래 개체의 하는 것과 동일한 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Clone">
          <source>However, after the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Clone%2A&gt;</ph> is complete, each <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is independent from the other.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Clone%2A&gt;</ph> 완료 되 면 각 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체와는 다른 독립적인 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Clone">
          <source>For example, changing the value of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt;</ph> property on the original <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> does not change the value of <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt;</ph> on the copy.</source>
          <target state="translated">예를 들어, 값을 변경는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt;</ph> 원래 속성 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 의 값을 변경 하지 않는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt;</ph> 복사본에 대해 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Connection">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> used by this instance of the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph>의 이 인스턴스에서 사용되는 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Connection">
          <source>The connection to a data source.</source>
          <target state="translated">데이터 소스와의 연결입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Connection">
          <source>The default is a null value.</source>
          <target state="translated">기본값은 null입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleBFile">
          <source>Copies data from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>에서 대상 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>로 데이터를 복사합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph></source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>Copies the entire contents of this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> to the beginning of a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>의 전체 내용을 대상 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>의 시작으로 복사합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The number of bytes copied.</source>
          <target state="translated">복사한 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The underlying data types of the source <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> and the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must be compatible.</source>
          <target state="translated">원본의 기본 데이터 형식은 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 및 대상 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 호환 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>For example, you cannot copy binary data to a destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that has a character data type.</source>
          <target state="translated">대상 이진 데이터를 복사할 수는 예를 들어 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 문자 데이터 형식을 가진를 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>You must have write access to the destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> for the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> operation to execute correctly.</source>
          <target state="translated">대상에 쓰기 권한이 있어야 합니다. <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> 작업이 올바르게 실행 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The destination <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph> is a null object reference.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>가 null 개체 참조인 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The destination is a null <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>.</source>
          <target state="translated">대상이 null <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The connection with which this <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> is associated is closed.</source>
          <target state="translated">이 <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph>과 관련된 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> object is closed or disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> 개체가 닫히거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The offset to which to copy.</source>
          <target state="translated">복사할 대상 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>Copies the entire contents of this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> at the specified offset.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>의 전체 내용을 지정된 오프셋에서 대상 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>로 복사합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The number of bytes copied.</source>
          <target state="translated">복사한 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The underlying data types of the source <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> and the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must be compatible.</source>
          <target state="translated">원본의 기본 데이터 형식은 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 및 대상 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 호환 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>For example, you cannot copy binary data to a destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that has a character data type.</source>
          <target state="translated">대상 이진 데이터를 복사할 수는 예를 들어 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 문자 데이터 형식을 가진를 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>You must have write access to the destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> for the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> operation to execute correctly.</source>
          <target state="translated">대상에 쓰기 권한이 있어야 합니다. <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> 작업이 올바르게 실행 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph> is a null object reference.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>가 null 개체 참조인 경우</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The destination is a null <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>.</source>
          <target state="translated">대상이 null <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The connection with which this <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> is associated is closed.</source>
          <target state="translated">이 <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph>과 관련된 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> object is closed or disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> 개체가 닫히거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The offset from which to copy.</source>
          <target state="translated">복사할 소스 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The offset to which to copy.</source>
          <target state="translated">복사할 대상 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The quantity of data, in bytes, to copy.</source>
          <target state="translated">복사할 데이터 양(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> with the specified amount of data, the source offset, and the destination offset.</source>
          <target state="translated">지정된 양의 데이터, 소스 오프셋 및 대상 오프셋으로 이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>에서 대상 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>로 복사합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The number of bytes copied.</source>
          <target state="translated">복사한 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The underlying data types of the source <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> and the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must be compatible.</source>
          <target state="translated">원본의 기본 데이터 형식은 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 및 대상 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 호환 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For example, you cannot copy binary data to a destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that has a character data type.</source>
          <target state="translated">대상 이진 데이터를 복사할 수는 예를 들어 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 문자 데이터 형식을 가진를 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>You must have write access to the destination <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> for the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> operation to execute correctly.</source>
          <target state="translated">대상에 쓰기 권한이 있어야 합니다. <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> 작업이 올바르게 실행 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The value of the amount parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated">양 매개 변수의 값이 0보다 작거나 4GB보다 큰 경우</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph> is a null object reference.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>가 null 개체 참조인 경우</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination is a null <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>.</source>
          <target state="translated">대상이 null <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The connection with which this <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> is associated is closed.</source>
          <target state="translated">이 <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph>과 관련된 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> object is closed or disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="OracleBFile" /&gt;</ph> 개체가 닫히거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>Gets the name of the DIRECTORY object, with which an <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object is associated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 개체와 관련된 DIRECTORY 개체의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>The name of the DIRECTORY object.</source>
          <target state="translated">DIRECTORY 개체의 이름입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>Each non-NULL <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is associated with two entities that define the location of underlying physical file:</source>
          <target state="translated">NULL이 아닌 각 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체는 기본 물리적 파일의 위치를 정의 하는 엔터티 두 개와 연결:</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and</source>
          <target state="translated">파일 시스템의 디렉터리에 대한 데이터베이스 별칭인 Oracle DIRECTORY 개체입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.</source>
          <target state="translated">DIRECTORY 개체와 연관된 디렉터리에 위치하는 원본 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> property returns the name of the DIRECTORY object from the Oracle database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> 속성 Oracle 데이터베이스에서 디렉터리 개체의 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>For more information about creating and using an Oracle <ph id="ph1">`BFILE`</ph>, see the appropriate topic in your Oracle documentation.</source>
          <target state="translated">만들기 및 Oracle을 사용 하는 방법에 대 한 자세한 내용은 <ph id="ph1">`BFILE`</ph>, Oracle 설명서에서 해당 항목을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.DirectoryName">
          <source>Attempted to call <ph id="ph1">&lt;see langword="DirectoryName" /&gt;</ph> on a closed or disposed <ph id="ph2">&lt;see langword="OracleBFile" /&gt;</ph> object.</source>
          <target state="translated">닫혀 있거나 삭제된 <ph id="ph1">&lt;see langword="DirectoryName" /&gt;</ph> 개체에서 <ph id="ph2">&lt;see langword="OracleBFile" /&gt;</ph>을 호출하려고 한 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.FileExists">
          <source>Gets a value indicating whether a physical file containing <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> data exists in the operating system.</source>
          <target state="translated">운영 체제에 <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> 데이터를 포함하는 실제 파일이 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.FileExists">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a physical file containing <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph> data exists; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 데이터를 포함하는 실제 파일이 있으면 <ph id="ph2">&lt;see langword="BFILE" /&gt;</ph>이고 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.FileExists">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object is closed or disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 개체가 닫히거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.FileExists">
          <source>The connection with which a <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> is associated is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="BFILE" /&gt;</ph>과 관련된 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.FileName">
          <source>Gets the name of the <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> without the path.</source>
          <target state="translated">경로가 없는 <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.FileName">
          <source>The name of the BFILE.</source>
          <target state="translated">BFILE 이름입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.FileName">
          <source>For <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>, an empty string is returned.</source>
          <target state="translated">에 대 한 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>, 빈 문자열이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.FileName">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object is closed or disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 개체가 닫히거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Flush">
          <source>Not currently supported.</source>
          <target state="translated">현재 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.IsNull">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> is a <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> 스트림인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.IsNull">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> is a <ph id="ph3">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> stream; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> 스트림이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Length">
          <source>Gets a value that returns the length in bytes of the physical file with which the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object is associated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 개체와 관련된 실제 파일의 크기를 바이트 단위로 반환하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Length">
          <source>A long value representing the length of the physical file in bytes.</source>
          <target state="translated">실제 파일의 크기(바이트)를 나타내는 long 값입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Length">
          <source>Methods were called after the stream was closed or disposed.</source>
          <target state="translated">스트림이 닫히거나 삭제된 후에 메서드가 호출된 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="F:System.Data.OracleClient.OracleBFile.Null">
          <source>Represents a null <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object that is not bound to a physical file.</source>
          <target state="translated">실제 파일에 바인딩되지 않는 null <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleBFile.Null">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> can be useful when you want to perform a comparison operation on an <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> to determine nullability.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> 에 비교 연산을 수행 하려는 경우 유용할 수 있습니다는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> null 허용 여부를 확인 하려면.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleBFile.Null">
          <source>Any attempt to perform a read operation on a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> object succeeds, but does not return any data.</source>
          <target state="translated">읽기 작업을 수행 하려는 모든 시도 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> 개체는 성공 하지만 데이터를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleBFile.Null">
          <source>Any attempt to perform a write operation on a <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> object generates an exception.</source>
          <target state="translated">에 대 한 쓰기 작업을 수행 하려는 모든 시도 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> 예외를 생성 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleBFile.Null">
          <source>Selecting a <ph id="ph1">`BFILE`</ph> column that contains a null value returns <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>.</source>
          <target state="translated">선택 하는 <ph id="ph1">`BFILE`</ph> null 값이 포함 된 열을 반환 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>Gets the current read position in the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 스트림에서 현재 읽기 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>The current position within the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 스트림 내의 현재 위치입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>Seeking to any location beyond the length of the stream is not supported.</source>
          <target state="translated">스트림의 길이 초과 하는 위치 찾기가 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>The <ph id="ph1">`Position`</ph> property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</source>
          <target state="translated"><ph id="ph1">`Position`</ph> 속성 않습니다를 추적 하지 소비 된 생략 되었거나 하는 스트림 또는 둘 다에서 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>Attempted to set a position with a negative value or greater than the length of the stream.</source>
          <target state="translated">음수이거나 스트림의 길이보다 큰 수로 위치를 설정하려고 한 경우</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Position">
          <source>Methods were called after the stream was closed or disposed.</source>
          <target state="translated">스트림이 닫히거나 삭제된 후에 메서드가 호출된 경우</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When this method returns, the buffer contains the specified byte array with the values between <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept>) replaced by the bytes read from the current source.</source>
          <target state="translated">이 메서드가 반환될 때 이 메서드가 반환될 때 현재 소스에서 읽은 바이트로 대체되는 (<bpt id="p2">&lt;c&gt;</bpt>오프셋<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>카운트<ept id="p3">&lt;/c&gt;</ept>)과 <bpt id="p1">&lt;c&gt;</bpt>오프셋<ept id="p1">&lt;/c&gt;</ept> 사이의 값을 가진 지정된 바이트 배열을 포함합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from the current stream.</source>
          <target state="translated">현재 스트림에서 읽은 데이터를 저장하기 시작하는 <bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept>의 바이트 오프셋(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to be read from the current stream.</source>
          <target state="translated">현재 스트림에서 읽을 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a sequence of bytes from the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> stream and advances the position within the stream by the number of bytes read.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 스트림에서 바이트의 시퀀스를 읽은 다음 읽은 바이트 수만큼 스트림 내에서 위치를 앞으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">버퍼로 읽어온 총 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.</source>
          <target state="translated">이 바이트 수는 현재 바이트가 충분하지 않은 경우 요청된 바이트 수보다 작을 수 있으며 파일의 끝에 도달하면 0이 됩니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> method read a maximum of <ph id="ph2">`count`</ph> bytes from the current stream and store them in <ph id="ph3">`buffer`</ph> beginning at <ph id="ph4">`offset`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 메서드 읽을 최대 <ph id="ph2">`count`</ph> 바이트 스트림 및에 보관해 두면 <ph id="ph3">`buffer`</ph> 부터 <ph id="ph4">`offset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</source>
          <target state="translated">스트림 내의 현재 위치는; 읽은 바이트 수로 앞에 그러나 예외가 발생할 경우 스트림 내의 현재 위치 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> returns the number of bytes read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 읽은 바이트 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The return value is zero only if the position is currently at the end of the stream.</source>
          <target state="translated">위치가 스트림의 끝에 현재 있는 경우에 반환 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> will block until at least one byte of data can be read, in the event that no data is available.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 데이터가 없는 경우 최소한 1 바이트의 데이터를 읽을 수 있고 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> returns 0 only when the end of the file has been reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 파일의 끝에 도달한 경우에 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 스트림의 끝에 도달 하지 하는 경우에 요청 된 것 보다 적은 바이트를 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Any attempt to access a closed <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods reopens an <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> stream automatically.</source>
          <target state="translated">닫힌 액세스 하려는 모든 시도 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 를 사용 하는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> 메서드 다시는 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 스트림이 자동으로 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following C# example assumes this schema in an Oracle table:</source>
          <target state="translated">다음 C# 예제에서는 Oracle 테이블에이 스키마를 가정합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The example demonstrates using the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods to access an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.</source>
          <target state="translated">예제를 사용 하는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> 에 액세스 하는 메서드는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>의 합계가 버퍼 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>이 null 참조(Visual Basic의 경우 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The connection with which a <ph id="ph1">&lt;see langword="BFILE" /&gt;</ph> is associated is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="BFILE" /&gt;</ph>과 관련된 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Methods were called after the stream was closed or disposed.</source>
          <target state="translated">스트림이 닫히거나 삭제된 후에 메서드가 호출된 경우</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A byte offset relative to origin.</source>
          <target state="translated">원본에 상대적인 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is negative, the new position will precede the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> by the number of bytes specified by <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 음수인 경우 새 위치는 <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>에 의해 지정된 바이트 수만큼 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept>으로 지정된 위치 앞에 옵니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is zero, the new position will be the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 0인 경우 새 위치는 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept>으로 지정된 위치입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is positive, the new position will follow the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> by the number of bytes specified by <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 양수인 경우 새 위치는 <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>에 의해 지정된 바이트 수만큼 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept>으로 지정된 위치 뒤에 옵니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A value of type <ph id="ph1">&lt;see langword="System.IO.SeekOrigin" /&gt;</ph> indicating the reference point used to obtain the new position.</source>
          <target state="translated">새 위치를 가져오는 데 사용되는 참조 위치를 나타내는 <ph id="ph1">&lt;see langword="System.IO.SeekOrigin" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the position on the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> stream.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 스트림에서 위치를 설정합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position within the current stream.</source>
          <target state="translated">현재 스트림 내의 새 위치입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position is required to precede the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`offset`</ph> 가 음수 이면 새 위치 하는 데 필요한 앞에 지정 된 위치 <ph id="ph2">`origin`</ph> 에 지정 된 바이트 수로 <ph id="ph3">`offset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is zero, the new position is required to be the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`offset`</ph> 두 일 수로 지정 된 위치에 새 위치는 <ph id="ph2">`origin`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position is required to follow the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`offset`</ph> 가 새 위치에 지정 된 위치 뒤에 양수 <ph id="ph2">`origin`</ph> 에 지정 된 바이트 수로 <ph id="ph3">`offset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking to any location beyond the length of the stream is not supported.</source>
          <target state="translated">스트림의 길이 초과 하는 위치 찾기가 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Any attempt to access a closed <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods reopens an <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> stream automatically.</source>
          <target state="translated">닫힌 액세스 하려는 모든 시도 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 를 사용 하는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> 메서드 다시는 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 스트림이 자동으로 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The following C# example assumes this schema in an Oracle table:</source>
          <target state="translated">다음 C# 예제에서는 Oracle 테이블에이 스키마를 가정합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The example demonstrates using the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods to access an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.</source>
          <target state="translated">예제를 사용 하는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> 에 액세스 하는 메서드는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Attempted to set a position with a negative value or greater than the length of the stream.</source>
          <target state="translated">음수이거나 스트림의 길이보다 큰 수로 위치를 설정하려고 한 경우</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Methods were called after the stream was closed or disposed.</source>
          <target state="translated">스트림이 닫히거나 삭제된 후에 메서드가 호출된 경우</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The alias of the directory object that contains a physical file.</source>
          <target state="translated">실제 파일을 포함하는 디렉터리 개체의 별칭입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The name of the file in the operating system.</source>
          <target state="translated">운영 체제에 있는 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>Binds the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> object to a different file in the operating system.</source>
          <target state="translated">운영 체제에서 다른 파일에 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> 개체를 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph> operation must be within a transaction to succeed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph> 성공 하려면 트랜잭션 내에서 작업이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>Simply calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph> on a <ph id="ph2">`BFILE`</ph> associates the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object with a different file, but does not update the Oracle table.</source>
          <target state="translated">단순히 호출 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph> 에 <ph id="ph2">`BFILE`</ph> 연결의 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체를 다른 파일로 하지만 Oracle 테이블을 업데이트 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>To update the Oracle table after calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>, you must call the <ph id="ph2">`Update`</ph> method of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> and then commit the transaction.</source>
          <target state="translated">호출한 후 Oracle 테이블을 업데이트 하려면 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>를 호출 해야 합니다는 <ph id="ph2">`Update`</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> 다음 트랜잭션을 커밋합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>Once you retrieve the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt;</ph> property, they are cached in the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object and are unaffected by any cloned <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> objects' calls to <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>, or by any changes to the <ph id="ph6">`BFILE`</ph> in the database.</source>
          <target state="translated">검색 한 후는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt;</ph> 에 캐시 되며 속성을는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체를 복제 된 영향을 받지 않습니다 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 에 대 한 개체의 호출 <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>, 또는에 모든 변경 내용으로는 <ph id="ph6">`BFILE`</ph> 데이터베이스에 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>In other words, they might not represent the actual values of the <ph id="ph1">`BFILE`</ph> object in the server.</source>
          <target state="translated">즉, 이러한 나타나지 않을 수 있습니다의 실제 값은 <ph id="ph1">`BFILE`</ph> 서버에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>Furthermore, retrieving either property (<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt;</ph>) causes both property values to be retrieved from the server and cached in the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.</source>
          <target state="translated">또한 두 속성 중 하나를 검색 (<ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt;</ph>)를 서버에서 검색 하 고 캐시에 두 속성 값은 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The following C# example assumes this schema in an Oracle table:</source>
          <target state="translated">다음 C# 예제에서는 Oracle 테이블에이 스키마를 가정합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The example demonstrates using the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods to access an <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.</source>
          <target state="translated">예제를 사용 하는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> 에 액세스 하는 메서드는 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
          <source>The operation must be within a transaction.</source>
          <target state="translated">작업이 트랜잭션 내부에 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)">
          <source>Not currently supported.</source>
          <target state="translated">현재 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)">
          <source>Not currently supported.</source>
          <target state="translated">현재 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)">
          <source>The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</source>
          <target state="translated">호출한 메서드가 지원되지 않는 경우 또는 호출한 기능을 지원하지 않는 스트림에 대해 읽기, 찾기 또는 쓰기 작업을 수행하려는 경우에 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleBFile.Value">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 데이터를 포함하는 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> 형식의 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Value">
          <source>An <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph> data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 데이터를 포함하는 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> 형식의 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleBFile" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Value">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Value%2A&gt;</ph> property reads the entire <ph id="ph2">`BFILE`</ph> at one time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Value%2A&gt;</ph> 속성 전체를 읽고 <ph id="ph2">`BFILE`</ph> 한 번에 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Value">
          <source>A benefit of using <ph id="ph1">`BFILE`</ph>s is the ability to retrieve large amounts of data in chunks at the client.</source>
          <target state="translated">사용 하는 이점은 <ph id="ph1">`BFILE`</ph>s 많은 양의 데이터를 청크로 클라이언트에서 검색할 수 있다는 점입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleBFile.Value">
          <source>However, when you use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Value%2A&gt;</ph>, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead.</source>
          <target state="translated">그러나 사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile.Value%2A&gt;</ph>, 응용 프로그램 오버 헤드를 크게 높일 수 있는 인접 한 청크 씩 BFILE 열에 대 한 모든 데이터를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Not currently supported.</source>
          <target state="translated">현재 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Not currently supported.</source>
          <target state="translated">현재 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Not currently supported.</source>
          <target state="translated">현재 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Not currently supported.</source>
          <target state="translated">현재 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</source>
          <target state="translated">호출한 메서드가 지원되지 않는 경우 또는 호출한 기능을 지원하지 않는 스트림에 대해 읽기, 찾기 또는 쓰기 작업을 수행하려는 경우에 throw되는 예외입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>