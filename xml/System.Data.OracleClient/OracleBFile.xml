<Type Name="OracleBFile" FullName="System.Data.OracleClient.OracleBFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="475bbf10f41e60d4bec591809354d21c2346bd54" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36684831" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleBFile extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleBFile&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleBFile sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleBFile = class&#xA;    inherit Stream&#xA;    interface ICloneable&#xA;    interface INullable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a managed <see cref="T:System.Data.OracleClient.OracleBFile" /> object designed to work with the Oracle <see langword="BFILE" /> data type. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oracle `BFILE` 데이터 형식은 Oracle `LOB` 4gb의 최대 크기를 사용 하 여 이진 데이터에 대 한 참조를 포함 하는 데이터 형식입니다. Oracle `BFILE` 다른 Oracle에서와 다른 `LOB` 데이터는 서버에서 아닌 운영 체제의 물리적 파일에 저장 된다는 점에서 데이터 형식입니다. `BFILE` 데이터 형식은 데이터에 대 한 읽기 전용 액세스를 제공 합니다. 따라서에서 상속 된 쓰기 관련 메서드는 <xref:System.IO.Stream> 클래스는 지원 되지 않습니다.  
  
 다른 특성을 한 `BFILE` 구별 되는 데이터 형식을 `LOB` 데이터 형식을:  
  
-   구조화되지 않은 데이터를 포함합니다.  
  
-   서버측 청크를 지원합니다.  
  
-   참조 복사 의미를 사용합니다. 예를 들어에서 복사 작업을 수행 하는 경우는 `BFILE`만 `BFILE` (즉, 파일에 대 한 참조) 로케이터 복사 됩니다. 파일의 데이터는 복사되지 않습니다.  
  
 `BFILE` 참조에 대 한 데이터 형식을 사용 해야 `LOB`크기가 큰 s 지므로 데이터베이스에 저장 하기에 적합 하지 않습니다. 사용 하기 위한 클라이언트, 서버 및 통신 오버 헤드가 `BFILE` 데이터 형식에 비해는 `LOB` 데이터 형식입니다. 이 액세스 하는 것이 효율적는 `BFILE` 적은 양의 데이터를 가져와야 할 경우. 이 액세스 데이터베이스에 상주 하는 것이 효율적 `LOB`s 전체 개체를 가져와야 하는 경우.  
  
 NULL이 아닌 각 <xref:System.Data.OracleClient.OracleBFile> 개체는 기본 물리적 파일의 위치를 정의 하는 엔터티 두 개와 연결:  
  
-   파일 시스템의 디렉터리에 대한 데이터베이스 별칭인 Oracle DIRECTORY 개체입니다.  
  
-   DIRECTORY 개체와 연관된 디렉터리에 위치하는 원본 파일 이름입니다.  
  
 후는 `BFILE` 가 만들어지면의 형태로 로케이터를 검색할 수는 <xref:System.Data.OracleClient.OracleBFile> 를 사용 하 여 개체는 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 또는 <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> 메서드.  
  
 가져올 수는 <xref:System.Data.OracleClient.OracleBFile> 개체를 호출 하는 <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> 메서드.  
  
 되는 실제 파일는 <xref:System.Data.OracleClient.OracleBFile> 개체가 연결 되어 사용 하지 않아도 액세스 해 될 때까지 존재 합니다. 응용 프로그램에 바인딩할 수는 <xref:System.Data.OracleClient.OracleBFile> 존재 하지 않는 파일을 예상된 위치에서 물리적 파일을 만들고 다음 호출 <xref:System.Data.OracleClient.OracleBFile.Read%2A>합니다.  
  
 닫힌 액세스 하려는 모든 시도 <xref:System.Data.OracleClient.OracleBFile> 를 사용 하는 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 또는 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 메서드 다시는 <xref:System.Data.OracleClient.OracleBFile> 스트림이 자동으로 합니다.  
  
 다음 C# 예제를 만드는 방법을 보여 줍니다.는 `BFILE` 는 Oracle에서 테이블을 선택한 다음 형식으로 검색 한 <xref:System.Data.OracleClient.OracleBFile> 개체입니다. 사용 예제에 <xref:System.Data.OracleClient.OracleDataReader> 개체 및 <xref:System.Data.OracleClient.OracleBFile> <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 및 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 메서드.  
  
 [!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  
  
 만들기 및 Oracle을 사용 하는 방법에 대 한 자세한 내용은 `BFILE`, Oracle 설명서에서 해당 항목을 참조 하십시오.  
  
> [!NOTE]
>  `BeginWrite`, `EndWrite`, 및 `WriteByte` 에서 상속 되는 메서드는 `System.IO.Stream` 클래스, 지원 되지 않습니다는 `BFILE` 데이터 유형은 읽기 전용입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see langword="BFILE" /> stream can be read.</summary>
        <value>
          <see langword="false" /> 경우는 <see langword="BFILE" /> 닫혀 않으면 또는 삭제 <see langword="true" />합니다. 항상 <see langword="true" /> 에 대 한 <see cref="F:System.Data.OracleClient.OracleBFile.Null" />합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether forward-seek and backward-seek operations can be performed.</summary>
        <value>
          <see langword="false" /> 경우는 <see langword="BFILE" /> 닫혀 않으면 또는 삭제 <see langword="true" />합니다. 항상 <see langword="true" /> 에 대 한 <see cref="F:System.Data.OracleClient.OracleBFile.Null" />합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the object supports writing.</summary>
        <value>항상 반환 <see langword="false" /> 때문에 Oracle <see langword="BFILE" /> 데이터 유형은 읽기 전용입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleBFile.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a copy of this <see cref="T:System.Data.OracleClient.OracleBFile" /> object associated with the same physical file as the original.</summary>
        <returns>A new <see cref="T:System.Data.OracleClient.OracleBFile" /> object associated with the same physical file as the original <see langword="OracleBFile" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 속성 <xref:System.Data.OracleClient.OracleBFile> 개체는 처음 원래 개체의 하는 것과 동일한 값을 포함 합니다. 그러나는 <xref:System.Data.OracleClient.OracleBFile.Clone%2A> 완료 되 면 각 <xref:System.Data.OracleClient.OracleBFile> 개체와는 다른 독립적인 합니다. 예를 들어, 값을 변경는 <xref:System.Data.OracleClient.OracleBFile.Position%2A> 원래 속성 <xref:System.Data.OracleClient.OracleBFile> 의 값을 변경 하지 않는 <xref:System.Data.OracleClient.OracleBFile.Position%2A> 복사본에 대해 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection" Usage="System.Data.OracleClient.OracleBFile.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>데이터 소스와의 연결입니다. 기본값은 null입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Copies data from this <see cref="T:System.Data.OracleClient.OracleBFile" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob -&gt; int64" Usage="oracleBFile.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination">The destination <see cref="T:System.Data.OracleClient.OracleLob" /></param>
        <summary>Copies the entire contents of this <see cref="T:System.Data.OracleClient.OracleBFile" /> to the beginning of a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
        <returns>The number of bytes copied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본의 기본 데이터 형식은 <xref:System.Data.OracleClient.OracleBFile> 및 대상 <xref:System.Data.OracleClient.OracleLob> 호환 되어야 합니다. 대상 이진 데이터를 복사할 수는 예를 들어 <xref:System.Data.OracleClient.OracleLob> 문자 데이터 형식을 가진를 합니다.  
  
 대상에 쓰기 권한이 있어야 합니다. <xref:System.Data.OracleClient.OracleLob> 에 대 한는 <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> 작업이 올바르게 실행 되도록 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The destination <see langword="OracleLob" /> is a null object reference.</exception>
        <exception cref="T:System.InvalidOperationException">The destination is a null <see langword="OracleLob" />.  -or-  The connection with which this <see langword="OracleBFile" /> is associated is closed.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see langword="OracleBFile" /> object is closed or disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob * int64 -&gt; int64" Usage="oracleBFile.CopyTo (destination, destinationOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination">The destination <see cref="T:System.Data.OracleClient.OracleLob" />.</param>
        <param name="destinationOffset">The offset to which to copy.</param>
        <summary>Copies the entire contents of this <see cref="T:System.Data.OracleClient.OracleBFile" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> at the specified offset.</summary>
        <returns>The number of bytes copied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본의 기본 데이터 형식은 <xref:System.Data.OracleClient.OracleBFile> 및 대상 <xref:System.Data.OracleClient.OracleLob> 호환 되어야 합니다. 대상 이진 데이터를 복사할 수는 예를 들어 <xref:System.Data.OracleClient.OracleLob> 문자 데이터 형식을 가진를 합니다.  
  
 대상에 쓰기 권한이 있어야 합니다. <xref:System.Data.OracleClient.OracleLob> 에 대 한는 <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> 작업이 올바르게 실행 되도록 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The destination <see langword="OracleLob" /> is a null object reference.</exception>
        <exception cref="T:System.InvalidOperationException">The destination is a null <see langword="OracleLob" />.  -or-  The connection with which this <see langword="OracleBFile" /> is associated is closed.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see langword="OracleBFile" /> object is closed or disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : int64 * System.Data.OracleClient.OracleLob * int64 * int64 -&gt; int64" Usage="oracleBFile.CopyTo (sourceOffset, destination, destinationOffset, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset">The offset from which to copy.</param>
        <param name="destination">The destination <see cref="T:System.Data.OracleClient.OracleLob" />.</param>
        <param name="destinationOffset">The offset to which to copy.</param>
        <param name="amount">The quantity of data, in bytes, to copy.</param>
        <summary>Copies from this <see cref="T:System.Data.OracleClient.OracleBFile" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data, the source offset, and the destination offset.</summary>
        <returns>The number of bytes copied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본의 기본 데이터 형식은 <xref:System.Data.OracleClient.OracleBFile> 및 대상 <xref:System.Data.OracleClient.OracleLob> 호환 되어야 합니다. 대상 이진 데이터를 복사할 수는 예를 들어 <xref:System.Data.OracleClient.OracleLob> 문자 데이터 형식을 가진를 합니다.  
  
 대상에 쓰기 권한이 있어야 합니다. <xref:System.Data.OracleClient.OracleLob> 에 대 한는 <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> 작업이 올바르게 실행 되도록 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The value of the amount parameter is less than zero or greater than 4 gigabytes.</exception>
        <exception cref="T:System.ArgumentNullException">The destination <see langword="OracleLob" /> is a null object reference.</exception>
        <exception cref="T:System.InvalidOperationException">The destination is a null <see langword="OracleLob" />.  -or-  The connection with which this <see langword="OracleBFile" /> is associated is closed.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see langword="OracleBFile" /> object is closed or disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryName : string" Usage="System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the DIRECTORY object, with which an <see cref="T:System.Data.OracleClient.OracleBFile" /> object is associated.</summary>
        <value>디렉터리 개체의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 NULL이 아닌 각 <xref:System.Data.OracleClient.OracleBFile> 개체는 기본 물리적 파일의 위치를 정의 하는 엔터티 두 개와 연결:  
  
-   파일 시스템의 디렉터리에 대한 데이터베이스 별칭인 Oracle DIRECTORY 개체입니다.  
  
-   DIRECTORY 개체와 연관된 디렉터리에 위치하는 원본 파일 이름입니다.  
  
 <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> 속성 Oracle 데이터베이스에서 디렉터리 개체의 이름을 반환 합니다.  
  
 만들기 및 Oracle을 사용 하는 방법에 대 한 자세한 내용은 `BFILE`, Oracle 설명서에서 해당 항목을 참조 하십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Attempted to call <see langword="DirectoryName" /> on a closed or disposed <see langword="OracleBFile" /> object.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleBFile.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FileExists" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FileExists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExists : bool" Usage="System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether a physical file containing <see langword="BFILE" /> data exists in the operating system.</summary>
        <value>
          <see langword="true" /> 포함 하는 물리적 파일 경우 <see langword="BFILE" /> 데이터가 있는; 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Data.OracleClient.OracleBFile" /> object is closed or disposed.</exception>
        <exception cref="T:System.InvalidOperationException">The connection with which a <see langword="BFILE" /> is associated is closed.</exception>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Data.OracleClient.OracleBFile.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the <see langword="BFILE" /> without the path.</summary>
        <value>B 파일의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 <xref:System.Data.OracleClient.OracleBFile.Null>, 빈 문자열이 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Data.OracleClient.OracleBFile" /> object is closed or disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="oracleBFile.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Not currently supported.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the <see cref="T:System.Data.OracleClient.OracleBFile" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream.</summary>
        <value>
          <see langword="true" /> 경우는 <see cref="T:System.Data.OracleClient.OracleBFile" /> 는 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 스트림; 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.OracleClient.OracleBFile.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that returns the length in bytes of the physical file with which the <see cref="T:System.Data.OracleClient.OracleBFile" /> object is associated.</summary>
        <value>바이트의 물리적 파일의 길이 나타내는 long 값입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed or disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBFile Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleBFile Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBFile.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBFile " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBFile ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleBFile" Usage="System.Data.OracleClient.OracleBFile.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents a null <see cref="T:System.Data.OracleClient.OracleBFile" /> object that is not bound to a physical file.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Null> 에 비교 연산을 수행 하려는 경우 유용할 수 있습니다는 <xref:System.Data.OracleClient.OracleBFile> null 허용 여부를 확인 하려면.  
  
 읽기 작업을 수행 하려는 모든 시도 <xref:System.Data.OracleClient.OracleBFile.Null> 개체는 성공 하지만 데이터를 반환 하지 않습니다. 에 대 한 쓰기 작업을 수행 하려는 모든 시도 <xref:System.Data.OracleClient.OracleBFile.Null> 예외를 생성 하는 개체입니다. 선택 하는 `BFILE` null 값이 포함 된 열을 반환 <xref:System.Data.OracleClient.OracleBFile.Null>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.OracleClient.OracleBFile.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current read position in the <see cref="T:System.Data.OracleClient.OracleBFile" /> stream.</summary>
        <value>내의 현재 위치에서 <see cref="T:System.Data.OracleClient.OracleBFile" /> 스트림 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스트림의 길이 초과 하는 위치 찾기가 지원 되지 않습니다.  
  
 `Position` 속성 않습니다를 추적 하지 소비 된 생략 되었거나 하는 스트림 또는 둘 다에서 바이트 수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Attempted to set a position with a negative value or greater than the length of the stream.</exception>
        <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed or disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="oracleBFile.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <c>offset</c> and (<c>offset</c> + <c>count</c>) replaced by the bytes read from the current source.</param>
        <param name="offset">The zero-based byte offset in <c>buffer</c> at which to begin storing the data read from the current stream.</param>
        <param name="count">The maximum number of bytes to be read from the current stream.</param>
        <summary>Reads a sequence of bytes from the current <see cref="T:System.Data.OracleClient.OracleBFile" /> stream and advances the position within the stream by the number of bytes read.</summary>
        <returns>The total number of bytes read into the buffer. This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 메서드 읽을 최대 `count` 바이트 스트림 및에 보관해 두면 `buffer` 부터 `offset`합니다. 스트림 내의 현재 위치는; 읽은 바이트 수로 앞에 그러나 예외가 발생할 경우 스트림 내의 현재 위치 변경 되지 않습니다. <xref:System.Data.OracleClient.OracleBFile.Read%2A> 읽은 바이트 수를 반환 합니다. 위치가 스트림의 끝에 현재 있는 경우에 반환 값은 0입니다. <xref:System.Data.OracleClient.OracleBFile.Read%2A> 데이터가 없는 경우 최소한 1 바이트의 데이터를 읽을 수 있고 될 때까지 차단 됩니다. <xref:System.Data.OracleClient.OracleBFile.Read%2A> 파일의 끝에 도달한 경우에 0을 반환 합니다. <xref:System.Data.OracleClient.OracleBFile.Read%2A> 스트림의 끝에 도달 하지 하는 경우에 요청 된 것 보다 적은 바이트를 반환할 수 있습니다.  
  
 닫힌 액세스 하려는 모든 시도 <xref:System.Data.OracleClient.OracleBFile> 를 사용 하는 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 또는 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 메서드 다시는 <xref:System.Data.OracleClient.OracleBFile> 스트림이 자동으로 합니다.  
  
 다음 C# 예제에서는 Oracle 테이블에이 스키마를 가정합니다.  
  
```  
(col1 number, col2 BFILE)  
```  
  
 예제를 사용 하는 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 및 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 에 액세스 하는 메서드는 <xref:System.Data.OracleClient.OracleBFile> 개체입니다.  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the buffer length.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> or <paramref name="count" /> is negative.</exception>
        <exception cref="T:System.InvalidOperationException">The connection with which a <see langword="BFILE" /> is associated is closed.</exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed or disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="oracleBFile.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">A byte offset relative to origin. If <c>offset</c> is negative, the new position will precede the position specified by <c>origin</c> by the number of bytes specified by <c>offset</c>. If <c>offset</c> is zero, the new position will be the position specified by <c>origin</c>. If <c>offset</c> is positive, the new position will follow the position specified by <c>origin</c> by the number of bytes specified by <c>offset</c>.</param>
        <param name="origin">A value of type <see langword="System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</param>
        <summary>Sets the position on the current <see cref="T:System.Data.OracleClient.OracleBFile" /> stream.</summary>
        <returns>The new position within the current stream.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 `offset` 가 음수 이면 새 위치 하는 데 필요한 앞에 지정 된 위치 `origin` 에 지정 된 바이트 수로 `offset`합니다. 경우 `offset` 두 일 수로 지정 된 위치에 새 위치는 `origin`합니다. 경우 `offset` 가 새 위치에 지정 된 위치 뒤에 양수 `origin` 에 지정 된 바이트 수로 `offset`합니다.  
  
 스트림의 길이 초과 하는 위치 찾기가 지원 되지 않습니다.  
  
 닫힌 액세스 하려는 모든 시도 <xref:System.Data.OracleClient.OracleBFile> 를 사용 하는 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 또는 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 메서드 다시는 <xref:System.Data.OracleClient.OracleBFile> 스트림이 자동으로 합니다.  
  
 다음 C# 예제에서는 Oracle 테이블에이 스키마를 가정합니다.  
  
```  
(col1 number, col2 BFILE)  
```  
  
 예제를 사용 하는 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 및 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 에 액세스 하는 메서드는 <xref:System.Data.OracleClient.OracleBFile> 개체입니다.  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Attempted to set a position with a negative value or greater than the length of the stream.</exception>
        <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed or disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFileName">
      <MemberSignature Language="C#" Value="public void SetFileName (string directory, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileName(string directory, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileName (directory As String, file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileName(System::String ^ directory, System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.SetFileName : string * string -&gt; unit" Usage="oracleBFile.SetFileName (directory, file)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory">The alias of the directory object that contains a physical file.</param>
        <param name="file">The name of the file in the operating system.</param>
        <summary>Binds the <see cref="T:System.Data.OracleClient.OracleBFile" /> object to a different file in the operating system.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> 성공 하려면 트랜잭션 내에서 작업이 있어야 합니다. 단순히 호출 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> 에 `BFILE` 연결의 <xref:System.Data.OracleClient.OracleBFile> 개체를 다른 파일로 하지만 Oracle 테이블을 업데이트 하지 않습니다. 호출한 후 Oracle 테이블을 업데이트 하려면 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>를 호출 해야 합니다는 `Update` 의 메서드는 <xref:System.Data.OracleClient.OracleDataAdapter> 다음 트랜잭션을 커밋합니다.  
  
 검색 한 후는 <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> 또는 <xref:System.Data.OracleClient.OracleBFile.FileName%2A> 에 캐시 되며 속성을는 <xref:System.Data.OracleClient.OracleBFile> 개체를 복제 된 영향을 받지 않습니다 <xref:System.Data.OracleClient.OracleBFile> 에 대 한 개체의 호출 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, 또는에 모든 변경 내용으로는 `BFILE` 데이터베이스에 있습니다. 즉, 이러한 나타나지 않을 수 있습니다의 실제 값은 `BFILE` 서버에 있는 개체입니다.  
  
 또한 두 속성 중 하나를 검색 (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> 또는 <xref:System.Data.OracleClient.OracleBFile.FileName%2A>)를 서버에서 검색 하 고 캐시에 두 속성 값은 <xref:System.Data.OracleClient.OracleBFile> 개체입니다.  
  
 다음 C# 예제에서는 Oracle 테이블에이 스키마를 가정합니다.  
  
```  
(col1 number, col2 BFILE)  
```  
  
 예제를 사용 하는 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, <xref:System.Data.OracleClient.OracleBFile.Read%2A> 및 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 에 액세스 하는 메서드는 <xref:System.Data.OracleClient.OracleBFile> 개체입니다.  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
        OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
            command.Transaction = connection.BeginTransaction();  
            BFile.SetFileName("TESTDIR", "File1.jpg");  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The operation must be within a transaction.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="oracleBFile.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Not currently supported.</param>
        <summary>Not currently supported.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Data.OracleClient.OracleBFile.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an <see cref="T:System.Array" /> of type <see cref="T:System.Byte" /> that contains the <see cref="T:System.Data.OracleClient.OracleBFile" /> data.</summary>
        <value>
          <see cref="T:System.Array" /> 형식의 <see cref="T:System.Byte" /> 를 포함 하는 <see cref="T:System.Data.OracleClient.OracleBFile" /> 데이터입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Value%2A> 속성 전체를 읽고 `BFILE` 한 번에 있습니다.  
  
> [!NOTE]
>  사용 하는 이점은 `BFILE`s 많은 양의 데이터를 청크로 클라이언트에서 검색할 수 있다는 점입니다. 그러나 사용 하는 경우 <xref:System.Data.OracleClient.OracleBFile.Value%2A>, 응용 프로그램 오버 헤드를 크게 높일 수 있는 인접 한 청크 씩 BFILE 열에 대 한 모든 데이터를 가져올 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="oracleBFile.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Not currently supported.</param>
        <param name="offset">Not currently supported.</param>
        <param name="count">Not currently supported.</param>
        <summary>Not currently supported.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.</exception>
      </Docs>
    </Member>
  </Members>
</Type>