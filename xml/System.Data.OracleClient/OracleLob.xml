<Type Name="OracleLob" FullName="System.Data.OracleClient.OracleLob">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="50450c275873f575e5c59e0fc9ae7e325e7cd529" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52212105" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleLob : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleLob extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleLob" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleLob&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleLob sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleLob = class&#xA;    inherit Stream&#xA;    interface ICloneable&#xA;    interface IDisposable&#xA;    interface INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="93819-101">Oracle 서버에 저장된 <see langword="LOB" />(대형 이진 개체) 데이터 형식을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93819-101">Represents a large object binary (<see langword="LOB" />) data type stored on an Oracle server.</span>
      </span>
      <span data-ttu-id="93819-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93819-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-103"><xref:System.Data.OracleClient.OracleLob> 에서 다른는 <xref:System.Data.OracleClient.OracleBFile> 는 데이터는 운영 체제의 물리적 파일 대신 서버에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-103">An <xref:System.Data.OracleClient.OracleLob> differs from an <xref:System.Data.OracleClient.OracleBFile> in that the data is stored on the server instead of in a physical file in the operating system.</span></span> <span data-ttu-id="93819-104">달리 읽기 / 쓰기 개체 일 수도 있습니다는 <xref:System.Data.OracleClient.OracleBFile>에 항상 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-104">It can also be a read-write object, unlike an <xref:System.Data.OracleClient.OracleBFile>, which is always read-only.</span></span>  
  
 <span data-ttu-id="93819-105"><xref:System.Data.OracleClient.OracleLob> 다음 중 하나일 수 있습니다 <xref:System.Data.OracleClient.OracleType> 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-105">An <xref:System.Data.OracleClient.OracleLob> may be one of these <xref:System.Data.OracleClient.OracleType> data types.</span></span>  
  
|<span data-ttu-id="93819-106">OracleType 데이터 형식</span><span class="sxs-lookup"><span data-stu-id="93819-106">OracleType data type</span></span>|<span data-ttu-id="93819-107">설명</span><span class="sxs-lookup"><span data-stu-id="93819-107">Description</span></span>|  
|--------------------------|-----------------|  
|`Blob`|<span data-ttu-id="93819-108">Oracle `BLOB` 4 기가바이트 (GB)의 최대 크기를 사용 하 여 이진 데이터를 포함 하는 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-108">An Oracle `BLOB` data type that contains binary data with a maximum size of 4 gigabytes (GB).</span></span> <span data-ttu-id="93819-109">이는 <xref:System.Array> 형식의 <xref:System.Byte>에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-109">This maps to an <xref:System.Array> of type <xref:System.Byte>.</span></span>|  
|`Clob`|<span data-ttu-id="93819-110">Oracle `CLOB` 4GB의 최대 크기를 사용 하 여 서버의 기본 문자를 기준으로 문자 데이터를 포함 하는 데이터 형식을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-110">An Oracle `CLOB` data type that contains character data, based on the default character set on the server, with a maximum size of 4 GB.</span></span> <span data-ttu-id="93819-111">이는 <xref:System.String>에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-111">This maps to <xref:System.String>.</span></span>|  
|`NClob`|<span data-ttu-id="93819-112">Oracle `NCLOB` 국가별 문자 4GB의 최대 크기를 사용 하 여 서버의 집합을 기반으로 문자 데이터를 포함 하는 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-112">An Oracle `NCLOB` data type that contains character data, based on the national character set on the server with a maximum size of 4 GB.</span></span> <span data-ttu-id="93819-113">이는 <xref:System.String>에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-113">This maps to <xref:System.String>.</span></span>|  
  
 <span data-ttu-id="93819-114">.NET 응용 프로그램 개발자는 Oracle을 검색할 수 있습니다 `LOB` 와 같은 기본.NET 데이터 형식으로 값 <xref:System.Array> 형식의 <xref:System.Byte> 하 고 <xref:System.String>, 또는 특수화 된 <xref:System.Data.OracleClient.OracleLob> 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-114">A .NET application developer can retrieve the Oracle `LOB` values into basic .NET data types, such as <xref:System.Array> of type <xref:System.Byte> and <xref:System.String>, or the specialized <xref:System.Data.OracleClient.OracleLob> data type.</span></span> <span data-ttu-id="93819-115">합니다 <xref:System.Data.OracleClient.OracleLob> 클래스에서 데이터를 읽고 쓰는 Oracle에서 지 원하는 `LOB` Oracle 데이터베이스에서.</span><span class="sxs-lookup"><span data-stu-id="93819-115">The <xref:System.Data.OracleClient.OracleLob> class supports reading data from and writing to the Oracle `LOB` in the Oracle database.</span></span>  
  
 <span data-ttu-id="93819-116">다음의 주요 특성은는 <xref:System.Data.OracleClient.OracleLob> 기본.NET 데이터 형식에서 구분 하는 데이터 형식:</span><span class="sxs-lookup"><span data-stu-id="93819-116">The following are the main characteristics of an <xref:System.Data.OracleClient.OracleLob> data type that distinguish it from basic .NET data types:</span></span>  
  
-   <span data-ttu-id="93819-117">Oracle을 검색 한 후 `LOB` Oracle 데이터베이스에서 값을 <xref:System.Data.OracleClient.OracleLob> 클래스를 변경할 수 있습니다는 `LOB` 열려 있는 트랜잭션이 및 변경 데이터를 데이터베이스로 직접 반영 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-117">After you retrieve the Oracle `LOB` value from the Oracle database into the <xref:System.Data.OracleClient.OracleLob> class, you can change the `LOB` data in an open transaction and your changes are directly reflected to the database.</span></span> <span data-ttu-id="93819-118">Oracle을 검색 하는 경우 `LOB` 값을 <xref:System.Array> 형식의 <xref:System.Byte> 또는 <xref:System.String> 및이 배열에 업데이트 변경 내용을 데이터베이스에 반영 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-118">If you retrieve the Oracle `LOB` value into an <xref:System.Array> of type <xref:System.Byte> or <xref:System.String> and update these arrays, your changes are not reflected to the database.</span></span>  
  
-   <span data-ttu-id="93819-119">사용 하는 경우는 <xref:System.Data.OracleClient.OracleLob> 청크를 액세스 하는 클래스는 `LOB` 값만 해당 청크는 Oracle 데이터베이스에서 클라이언트에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-119">When you use the <xref:System.Data.OracleClient.OracleLob> class to access a chunk of a `LOB` value, only that chunk is passed from the Oracle database to the client.</span></span> <span data-ttu-id="93819-120">사용 하는 경우는 <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> 청크를 액세스 하는 방법을 `LOB` 값, 값의 전체 내용을 Oracle 데이터베이스에서 클라이언트에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-120">When you use the <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> method to access a chunk of a `LOB` value, the entire contents of the value are passed from the Oracle database to the client.</span></span>  
  
 <span data-ttu-id="93819-121">가져올는 <xref:System.Data.OracleClient.OracleLob> 개체를 호출 합니다 <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="93819-121">To obtain an <xref:System.Data.OracleClient.OracleLob> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A> method.</span></span>  
  
 <span data-ttu-id="93819-122">생성할 수 있습니다는 <xref:System.Data.OracleClient.OracleLob> 이 형식을 사용 하 여 NULL입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-122">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```  
OracleLob myLob = OracleLob.Null;  
```  
  
 <span data-ttu-id="93819-123">이 방법은 테스트 하는 데 주로 사용 됩니다 여부는 `LOB` 이 예제와 같이 null 인 경우 서버에서 반환:</span><span class="sxs-lookup"><span data-stu-id="93819-123">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as this example illustrates:</span></span>  
  
```  
If(myLob == OracleLob.Null)  
```  
  
 <span data-ttu-id="93819-124">NULL `LOB` 는 0 바이트 비슷하게 `LOB` 한다는 점에서 <xref:System.Data.OracleClient.OracleLob.Read%2A> 성공 하 고 항상 0 바이트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-124">A NULL `LOB` behaves similarly to a zero-byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 <span data-ttu-id="93819-125">선택 하는 `LOB` null 값이 포함 된 열을 반환 합니다 <xref:System.Data.OracleClient.OracleLob.Null>합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-125">Selecting a `LOB` column that contains a null value returns <xref:System.Data.OracleClient.OracleLob.Null>.</span></span>  
  
 <span data-ttu-id="93819-126">임시 얻기 전에 트랜잭션을 시작 해야 `LOB`합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-126">You must begin a transaction before obtaining a temporary `LOB`.</span></span> <span data-ttu-id="93819-127">이 고, 그렇지는 <xref:System.Data.OracleClient.OracleDataReader> 이후에 데이터를 얻지 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-127">Otherwise, the <xref:System.Data.OracleClient.OracleDataReader> may fail to obtain data later.</span></span>  
  
 <span data-ttu-id="93819-128">임시 열 수도 있습니다 `LOB` DBMS_LOB를 호출 하 여 Oracle에서. CREATETEMPORARY 시스템 저장 프로시저 및 바인딩은 `LOB` 매개 변수를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-128">You can also open a temporary `LOB` in Oracle by calling the DBMS_LOB.CREATETEMPORARY system stored procedure and binding a `LOB` output parameter.</span></span> <span data-ttu-id="93819-129">클라이언트 쪽에서는 임시 `LOB` 테이블 기반 처럼 `LOB`합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-129">On the client side, a temporary `LOB` behaves like a table-based `LOB`.</span></span> <span data-ttu-id="93819-130">예를 들어 임시 업데이트 `LOB`, 트랜잭션에서 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-130">For example, to update the temporary `LOB`, it must be enclosed in a transaction.</span></span>  
  
 <span data-ttu-id="93819-131">다음 C# 예제에서는 임시를 여는 방법을 보여 줍니다 `LOB`합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-131">The following C# example demonstrates how to open a temporary `LOB`.</span></span>  
  
```  
OracleConnection connection = new OracleConnection("server=MyServer; integrated security=yes;");  
connection.Open();  
OracleTransaction transaction = connection.BeginTransaction();  
OracleCommand command = connection.CreateCommand();  
command.Transaction = transaction;  
command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";  
command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;  
command.ExecuteNonQuery();  
OracleLob tempLob = (OracleLob)command.Parameters[0].Value;  
byte[] tempbuff = new byte[10000];  
tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);  
tempLob.Write(tempbuff,0,tempbuff.Length);  
tempLob.EndBatch();  
command.Parameters.Clear();  
command.CommandText = "MyTable.MyProc";  
command.CommandType = CommandType.StoredProcedure;    
command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;  
command.ExecuteNonQuery();  
transaction.Commit();  
connection.Close  
```  
  
> [!NOTE]
>  <span data-ttu-id="93819-132">상속 된 <xref:System.IO.Stream.WriteByte%2A> 문자 데이터를 사용 하는 경우 메서드가 실패 및 <xref:System.InvalidOperationException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-132">The inherited <xref:System.IO.Stream.WriteByte%2A> method fails if used with character data, and an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="93819-133">대신 <xref:System.Data.OracleClient.OracleLob.Write%2A> 메서드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-133">Use the <xref:System.Data.OracleClient.OracleLob.Write%2A> method instead.</span></span>  
>   
>  <span data-ttu-id="93819-134">임시 `LOB`닫히면 연결이 닫혀만 있지만 풀링을 사용 하며 부하를 임시 `LOB`s를 닫지 마세요.</span><span class="sxs-lookup"><span data-stu-id="93819-134">Temporary `LOB`s are only closed when the connection is closed, but with pooling and under load, temporary `LOB`s do not close.</span></span> <span data-ttu-id="93819-135">임시 삭제 하 여 해결할 수 있습니다 `LOB`를 호출 하 여 `tempLob.Dispose()`입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-135">This can be resolved by disposing the temporary `LOB`, by invoking `tempLob.Dispose()`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Data.OracleClient.OracleLob source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Data.OracleClient.OracleLob source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (source As OracleLob)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Data::OracleClient::OracleLob ^ source);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Data.OracleClient.OracleLob -&gt; unit" Usage="oracleLob.Append source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="93819-136">데이터를 추가할 원본 <see langword="LOB" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-136">The <see langword="LOB" /> from which to append data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93819-137">지정된 <see langword="LOB" />에서 현재 <see langword="LOB" />까지 데이터를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-137">Appends data from the specified <see langword="LOB" /> to the current <see langword="LOB" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-138">쓸 합니다 `LOB`를 검색 해야 합니다는 `LOB` SQL SELECT 문을에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-138">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="93819-139">모든 데이터 원본의 `LOB` 현재 끝에 추가 `LOB`합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-139">All data from the source `LOB` is appended to the end of the current `LOB`.</span></span> <span data-ttu-id="93819-140">둘 다의 위치 `LOB` 평가 하거나이 프로세스 중에 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-140">The position of neither `LOB` is evaluated or changed during this process.</span></span>  
  
 <span data-ttu-id="93819-141">기본 데이터 형식이 항상 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-141">The underlying data types must always be the same.</span></span> <span data-ttu-id="93819-142">예를 들어에서 추가 하는 경우는 <xref:System.Data.OracleClient.OracleType.NClob>, 대상 <xref:System.Data.OracleClient.OracleLob> 수도 있어야는 <xref:System.Data.OracleClient.OracleType.NClob>.</span><span class="sxs-lookup"><span data-stu-id="93819-142">For example, if you are appending from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93819-143">이 릴리스에서 쓰기 작업에는 읽기 전용 `LOB` 성공할 수 있지만 업데이트 하지 않습니다는 `LOB` 서버의 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-143">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="93819-144">그러나이 경우의 로컬 복사본이 `LOB` 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-144">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="93819-145">따라서 나중에 읽기 작업에는 <xref:System.Data.OracleClient.OracleLob> 개체 쓰기 작업의 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-145">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93819-146">소스 <see cref="T:System.Data.OracleClient.OracleLob" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-146">The source <see cref="T:System.Data.OracleClient.OracleLob" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-147">소스 <see cref="T:System.Data.OracleClient.OracleLob" />가 null이거나 연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-147">The source <see cref="T:System.Data.OracleClient.OracleLob" /> is null, or the connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-148">소스 <see cref="T:System.Data.OracleClient.OracleLob" /> 개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-148">The source <see cref="T:System.Data.OracleClient.OracleLob" /> object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-149">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-149">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginBatch">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93819-150">쓰기 작업을 여러 개 수행하는 동안 서버 측 트리거가 발생하는 것을 막습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-150">Prevents server-side triggers from firing while performing multiple write operations.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginBatch">
      <MemberSignature Language="C#" Value="public void BeginBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.BeginBatch" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginBatch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginBatch();" />
      <MemberSignature Language="F#" Value="member this.BeginBatch : unit -&gt; unit" Usage="oracleLob.BeginBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93819-151">읽기 작업을 여러 개 수행하는 동안 서버 측 트리거가 발생하는 것을 막습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-151">Prevents server-side triggers from firing while performing multiple read operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-152">열립니다는 `LOB` 에서 <xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly> 모드 이므로 합니다 `LOB` 읽을 수만 있습니다에서 해당 호출 될 때까지, 기록 되지 <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="93819-152">Opens the `LOB` in <xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly> mode; therefore, the `LOB` can only be read from, not written to, until the corresponding call to <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>.</span></span> <span data-ttu-id="93819-153">쓰기를 일괄 처리를 수행 하는 `LOB`, 호출 <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> 사용 하 여 <xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite>입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-153">To perform batch writes to the `LOB`, call <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> with <xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite>.</span></span>  
  
 <span data-ttu-id="93819-154">호출 <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> Oracle를 throw 하는 한 번 이상 동일한 트랜잭션 내에서 현재 "ORA-22293: 동일한 트랜잭션에서 열려 LOB" 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-154">Calling <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</span></span> <span data-ttu-id="93819-155">또한 가져와야 하는 경우에 `LOB` 다른를 사용 하 여 <xref:System.Data.OracleClient.OracleDataReader>를 원래 호출자가 호출 되지를 <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> 메서드를 같은 오류가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-155">In addition, if you obtain the `LOB` using another <xref:System.Data.OracleClient.OracleDataReader>, and the original caller has not called the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method, the same error is generated.</span></span> <span data-ttu-id="93819-156">따라서 호출 해야 합니다는 <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> 마쳤으면 메서드를 사용 하 여는 <xref:System.Data.OracleClient.OracleLob>합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-156">Therefore, you must call the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method when you are finished using the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-157">연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-157">The connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-158">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-158">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-159">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-159">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBatch">
      <MemberSignature Language="C#" Value="public void BeginBatch (System.Data.OracleClient.OracleLobOpenMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginBatch(valuetype System.Data.OracleClient.OracleLobOpenMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginBatch (mode As OracleLobOpenMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginBatch(System::Data::OracleClient::OracleLobOpenMode mode);" />
      <MemberSignature Language="F#" Value="member this.BeginBatch : System.Data.OracleClient.OracleLobOpenMode -&gt; unit" Usage="oracleLob.BeginBatch mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.OracleClient.OracleLobOpenMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="93819-160">이 <see cref="T:System.Data.OracleClient.OracleLobOpenMode" /> 호출과 해당하는 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /> 호출 사이에서 <see langword="LOB" />에 액세스할 수 있는 모드(<see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /> 값 중 하나)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-160">Mode (one of the <see cref="T:System.Data.OracleClient.OracleLobOpenMode" /> values) in which the <see langword="LOB" /> can be accessed between this <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /> call and the corresponding <see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /> call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93819-161">지정된 액세스 모드에서 읽기 및 쓰기 작업을 여러 개 수행하는 동안 서버 측 트리거가 발생하는 것을 막습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-161">Prevents server-side triggers from firing while performing multiple read and write operations in the specified access mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-162">쓸 합니다 `LOB`를 검색 해야 합니다는 `LOB` SQL SELECT 문을에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-162">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="93819-163">호출 <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> Oracle를 throw 하는 한 번 이상 동일한 트랜잭션 내에서 현재 "ORA-22293: 동일한 트랜잭션에서 열려 LOB" 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-163">Calling <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</span></span> <span data-ttu-id="93819-164">또한 가져와야 하는 경우에 `LOB` 다른를 사용 하 여 <xref:System.Data.OracleClient.OracleDataReader>를 원래 호출자가 호출 되지를 <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> 메서드를 같은 오류가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-164">In addition, if you obtain the `LOB` using another <xref:System.Data.OracleClient.OracleDataReader>, and the original caller has not called the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method, the same error is generated.</span></span> <span data-ttu-id="93819-165">따라서 호출 해야 합니다는 <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> 마쳤으면 메서드를 사용 하 여는 <xref:System.Data.OracleClient.OracleLob>합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-165">Therefore, you must call the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method when you are finished using the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-166">연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-166">The connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-167">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-167">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-168">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-168">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.OracleClient.OracleLob.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-169">
            <see langword="LOB" /> 스트림을 읽을 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-169">Gets a value indicating whether the <see langword="LOB" /> stream can be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-170">
            <see langword="true" /> 스트림이 읽기를 지원하면 <see langword="LOB" />이고, <see langword="false" />가 닫혀 있거나 삭제되었으면 <see langword="LOB" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-170">
              <see langword="true" /> if the <see langword="LOB" /> stream supports reading, otherwise <see langword="false" /> if a <see langword="LOB" /> is closed or disposed.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.OracleClient.OracleLob.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-171">앞으로 및 뒤로 검색 작업이 수행될 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-171">Gets a value indicating whether forward and backward seek operations can be performed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-172">
            <see langword="false" />가 닫혀 있거나 삭제되었으면 <see langword="LOB" />이고, 그렇지 않으면 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-172">
              <see langword="false" /> if a <see langword="LOB" /> is closed or disposed, otherwise <see langword="true" />.</span>
          </span>
          <span data-ttu-id="93819-173">
            <see cref="F:System.Data.OracleClient.OracleLob.Null" />에 대해 항상 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-173">Always <see langword="true" /> for <see cref="F:System.Data.OracleClient.OracleLob.Null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.OracleClient.OracleLob.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-174">
            <see langword="LOB" />가 쓰기를 지원하는지 여부에 관계 없이 항상 true를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-174">Always returns true, regardless of whether the <see langword="LOB" /> supports writing or not.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-175">
            <see langword="true" />가 열려 있거나 삭제되지 않았으면 쓰기를 지원하는지 여부와 관계없이 항상 <see langword="LOB" />이고, <see langword="false" />가 닫혀 있거나 삭제되었으면 <see langword="LOB" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-175">Always returns <see langword="true" />, regardless of whether an opened or undisposed <see langword="LOB" /> supports writing or not, <see langword="false" /> if a <see langword="LOB" /> is closed or disposed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-176">쓸 합니다 `LOB`를 검색 해야 합니다는 `LOB` SQL SELECT 문을에 FOR UPDATE 절을 사용 하 여 시작 해야 합니다는 로컬 트랜잭션을.</span><span class="sxs-lookup"><span data-stu-id="93819-176">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have started a local transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChunkSize">
      <MemberSignature Language="C#" Value="public int ChunkSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChunkSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.ChunkSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChunkSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChunkSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChunkSize : int" Usage="System.Data.OracleClient.OracleLob.ChunkSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-177">읽기/쓰기 작업 중에 서버에서 검색하거나 서버로 보낼 최소 바이트 수를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-177">Gets a value indicating the minimum number of bytes to retrieve from or send to the server during a read/write operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-178">검색하거나 보낼 최소 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-178">The minimum number of bytes to retrieve or send.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-179">반환 된 값을 <xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> 속성은.NET Framework Data Provider for Oracle의 설정이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="93819-179">The value returned by the <xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> property is not a setting of the .NET Framework Data Provider for Oracle.</span></span> <span data-ttu-id="93819-180">대신 호출 인터페이스 OCI (Oracle)에 서버와 통신할 때 사용 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-180">Instead, it is the value that the Oracle Call Interface (OCI) uses when communicating with the server.</span></span> <span data-ttu-id="93819-181">사용 하 여 <xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> 되도록 클라이언트 쪽 청크 크기가 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-181">Use <xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> to ensure that client-side chunks are the same size.</span></span> <span data-ttu-id="93819-182">읽기 또는 쓰기를 더 작은 청크로 데이터를 캐시 하지 않습니다 하 고 전체 패킷 수신 되거나 전송 되지 때문에 서버에 없는 최적화 왕복이 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-182">Reading or writing in smaller chunks does not cache data, and causes a less-optimized round trip to the server, because a full packet is not received or sent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-183">연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-183">The connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-184">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-184">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-185">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-185">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleLob.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93819-186">원래 <see cref="T:System.Data.OracleClient.OracleLob" /> 개체와 같은 Oracle <see langword="LOB" />를 참조하는 새 <see cref="T:System.Data.OracleClient.OracleLob" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-186">Creates a new <see cref="T:System.Data.OracleClient.OracleLob" /> object that references the same Oracle <see langword="LOB" /> as the original <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93819-187">원래 <see cref="T:System.Data.OracleClient.OracleLob" /> 개체와 같은 Oracle <see langword="LOB" />를 참조하는 새 <see cref="T:System.Data.OracleClient.OracleLob" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-187">A new <see cref="T:System.Data.OracleClient.OracleLob" /> object that references the same Oracle <see langword="LOB" /> as the original <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-188">새 속성 <xref:System.Data.OracleClient.OracleLob> 개체는 처음에 원래 개체의 동일한 값을 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-188">The properties of the new <xref:System.Data.OracleClient.OracleLob> object initially have the same values as those of the original object.</span></span> <span data-ttu-id="93819-189">그러나 후 합니다 <xref:System.Data.OracleClient.OracleLob.Clone%2A> 완료 되 면 각 <xref:System.Data.OracleClient.OracleLob> 개체는 다른 별개입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-189">However, after the <xref:System.Data.OracleClient.OracleLob.Clone%2A> is complete, each <xref:System.Data.OracleClient.OracleLob> object is independent from the other.</span></span> <span data-ttu-id="93819-190">예를 들어,의 값을 변경 합니다 <xref:System.Data.OracleClient.OracleLob.Position%2A> 속성을 원래 <xref:System.Data.OracleClient.OracleLob> 의 값을 변경 하지 않습니다 <xref:System.Data.OracleClient.OracleLob.Position%2A> 복사본에서.</span><span class="sxs-lookup"><span data-stu-id="93819-190">For example, changing the value of the <xref:System.Data.OracleClient.OracleLob.Position%2A> property on the original <xref:System.Data.OracleClient.OracleLob> does not change the value of <xref:System.Data.OracleClient.OracleLob.Position%2A> on the copy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-191">연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-191">The connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-192">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-192">The object was closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oracleLob.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection" Usage="System.Data.OracleClient.OracleLob.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-193">
            <see cref="T:System.Data.OracleClient.OracleConnection" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.OracleClient.OracleLob" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-193">Gets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleLob" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-194">데이터 소스와의 연결입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-194">The connection to a data source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-195">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-195">The object was closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93819-196">이 <see cref="T:System.Data.OracleClient.OracleLob" />에서 대상 <see cref="T:System.Data.OracleClient.OracleLob" />로 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-196">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob -&gt; int64" Usage="oracleLob.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="93819-197">대상 <see cref="T:System.Data.OracleClient.OracleLob" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-197">The destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93819-198">이 <see cref="T:System.Data.OracleClient.OracleLob" />에서 대상 <see cref="T:System.Data.OracleClient.OracleLob" />로 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-198">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93819-199">복사한 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-199">The number of bytes copied.</span>
          </span>
          <span data-ttu-id="93819-200">이것은 채워진 모든 바이트를 제외합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-200">This excludes any padded bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-201">기본 데이터 형식이 항상 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-201">The underlying data types must always be the same.</span></span> <span data-ttu-id="93819-202">예를 들어에서 복사 하는 경우는 <xref:System.Data.OracleClient.OracleType.NClob>, 대상 <xref:System.Data.OracleClient.OracleLob> 수도 있어야는 <xref:System.Data.OracleClient.OracleType.NClob>합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-202">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="93819-203">대상 끝을 넘어 대상 오프셋 인지 `LOB`, `LOB` 데이터가 복사 되는 확장 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-203">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="93819-204">끝 사이의 간격을 `LOB` 끝 대상 오프셋에 대 한 0으로 채워서 및 `BLOB` 데이터 형식 및 공간 `CLOB` 및 `NCLOB` 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-204">The space between the end of the `LOB` and the destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="93819-205">쓸 합니다 `LOB`를 검색 해야 합니다는 `LOB` SQL SELECT 문을에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-205">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93819-206">이 릴리스에서 쓰기 작업에는 읽기 전용 `LOB` 성공할 수도 있지만 업데이트할는 `LOB` 서버의 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-206">In this release, a write operation to a read-only `LOB` might succeed, but not update the `LOB` on the server.</span></span> <span data-ttu-id="93819-207">그러나이 경우의 로컬 복사본이 `LOB` 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-207">In this case, however, the local copy of the `LOB` will be updated.</span></span> <span data-ttu-id="93819-208">따라서 나중에 읽기 작업에는 <xref:System.Data.OracleClient.OracleLob> 개체 쓰기 작업의 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-208">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="93819-209">합니다 `CopyTo` 메서드는 대상의 내용을 지우지 않을 `OracleLob` 복사 작업을 수행 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-209">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93819-210">
            <paramref name="destination" /> 매개 변수에 지정된 <see cref="T:System.Data.OracleClient.OracleLob" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-210">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is null.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-211">작업이 트랜잭션에 속하지 않거나, <see cref="T:System.Data.OracleClient.OracleLob" /> 개체가 null이거나, 연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-211">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-212">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-212">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob * int64 -&gt; int64" Usage="oracleLob.CopyTo (destination, destinationOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="93819-213">대상 <see cref="T:System.Data.OracleClient.OracleLob" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-213">The destination <see cref="T:System.Data.OracleClient.OracleLob" /></span>
          </span>
        </param>
        <param name="destinationOffset">
          <span data-ttu-id="93819-214">복사할 대상 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-214">The offset to which to copy.</span>
          </span>
          <span data-ttu-id="93819-215">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식의 경우 짝수 바이트여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-215">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93819-216">지정된 양의 데이터로 이 <see cref="T:System.Data.OracleClient.OracleLob" />에서 대상 <see cref="T:System.Data.OracleClient.OracleLob" />로 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-216">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93819-217">복사한 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-217">The number of bytes copied.</span>
          </span>
          <span data-ttu-id="93819-218">이것은 채워진 모든 바이트를 제외합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-218">This excludes any padded bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-219">기본 데이터 형식이 항상 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-219">The underlying data types must always be the same.</span></span> <span data-ttu-id="93819-220">예를 들어에서 복사 하는 경우는 <xref:System.Data.OracleClient.OracleType.NClob>, 대상 <xref:System.Data.OracleClient.OracleLob> 수도 있어야는 <xref:System.Data.OracleClient.OracleType.NClob>합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-220">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="93819-221">대상 끝을 넘어 대상 오프셋 인지 `LOB`, `LOB` 데이터가 복사 되는 확장 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-221">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="93819-222">끝 사이의 공백을 `LOB` 및 대상 오프셋 끝 다음에 대해 0이 채워집니다 `BLOB` 데이터 형식 및 공간 `CLOB` 및 `NCLOB` 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-222">The space between the end of `LOB` and destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="93819-223">쓸 합니다 `LOB`를 검색 해야 합니다는 `LOB` SQL SELECT 문을에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-223">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93819-224">이 릴리스에서 쓰기 작업에는 읽기 전용 `LOB` 성공할 수 있지만 업데이트 하지 않습니다는 `LOB` 서버의 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-224">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="93819-225">그러나이 경우의 로컬 복사본이 `LOB` 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-225">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="93819-226">따라서 나중에 읽기 작업에는 <xref:System.Data.OracleClient.OracleLob> 개체 쓰기 작업의 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-226">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="93819-227">합니다 `CopyTo` 메서드는 대상의 내용을 지우지 않을 `OracleLob` 복사 작업을 수행 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-227">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93819-228">
            <paramref name="destination" /> 매개 변수에서 지정한 <see cref="T:System.Data.OracleClient.OracleLob" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-228">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is full.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93819-229">
            <paramref name="destinationOffset" /> 매개 변수에 지정된 값이 0보다 작거나 4GB보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-229">A value specified in the <paramref name="destinationOffset" /> parameter is less than zero or greater than 4 gigabytes.</span>
          </span>
          <span data-ttu-id="93819-230">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-230">-or-</span>
          </span>
          <span data-ttu-id="93819-231">
            <see langword="CLOB" /> 또는 <see langword="NCLOB" /> 데이터 형식의 <paramref name="destinationOffset" /> 매개 변수에서 지정된 값이 짝수가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-231">A value specified in the <paramref name="destinationOffset" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span>
          </span>
          <span data-ttu-id="93819-232">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-232">-or-</span>
          </span>
          <span data-ttu-id="93819-233">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식을 짝수 바이트로 지정해야 하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-233">You must specify <see langword="CLOB" /> and <see langword="NCLOB" /> data types as an even number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-234">작업이 트랜잭션에 속하지 않거나, <see cref="T:System.Data.OracleClient.OracleLob" /> 개체가 null이거나, 연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-234">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-235">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-235">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : int64 * System.Data.OracleClient.OracleLob * int64 * int64 -&gt; int64" Usage="oracleLob.CopyTo (sourceOffset, destination, destinationOffset, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset">
          <span data-ttu-id="93819-236">복사할 소스 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-236">The offset from which to copy.</span>
          </span>
          <span data-ttu-id="93819-237">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식의 경우 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-237">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="93819-238">대상 <see langword="OracleLob" /><see cref="N:System.Data.OracleClient" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-238">The destination <see langword="OracleLob" /><see cref="N:System.Data.OracleClient" />.</span>
          </span>
        </param>
        <param name="destinationOffset">
          <span data-ttu-id="93819-239">복사할 대상 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-239">The destination offset to which to copy.</span>
          </span>
          <span data-ttu-id="93819-240">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식의 경우 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-240">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span>
          </span>
        </param>
        <param name="amount">
          <span data-ttu-id="93819-241">복사할 데이터 양(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-241">The quantity of data, in bytes, to copy.</span>
          </span>
          <span data-ttu-id="93819-242">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식의 경우 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-242">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93819-243">지정된 양의 데이터 및 소스 오프셋으로 이 <see cref="T:System.Data.OracleClient.OracleLob" />에서 대상 <see cref="T:System.Data.OracleClient.OracleLob" />로 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-243">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data, and the source offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93819-244">복사한 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-244">The number of bytes copied.</span>
          </span>
          <span data-ttu-id="93819-245">이것은 채워진 모든 바이트를 제외합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-245">This excludes any padded bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-246">기본 데이터 형식이 항상 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-246">The underlying data types must always be the same.</span></span> <span data-ttu-id="93819-247">예를 들어에서 복사 하는 경우는 <xref:System.Data.OracleClient.OracleType.NClob>, 대상 <xref:System.Data.OracleClient.OracleLob> 수도 있어야는 <xref:System.Data.OracleClient.OracleType.NClob>합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-247">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="93819-248">대상 끝을 넘어 대상 오프셋 인지 `LOB`, `LOB` 데이터가 복사 되는 확장 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-248">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="93819-249">끝 사이의 공백을 `LOB` 및 대상 오프셋 끝 다음에 대해 0이 채워집니다 `BLOB` 데이터 형식 및 공간 `CLOB` 및 `NCLOB` 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-249">The space between the end of `LOB` and destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="93819-250">쓸 합니다 `LOB`를 검색 해야 합니다는 `LOB` SQL SELECT 문을에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-250">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93819-251">이 릴리스에서 쓰기 작업에는 읽기 전용 `LOB` 성공할 수 있지만 업데이트 하지 않습니다는 `LOB` 서버의 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-251">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="93819-252">그러나이 경우의 로컬 복사본이 `LOB` 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-252">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="93819-253">따라서 나중에 읽기 작업에는 <xref:System.Data.OracleClient.OracleLob> 개체 쓰기 작업의 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-253">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="93819-254">합니다 `CopyTo` 메서드는 대상의 내용을 지우지 않을 `OracleLob` 복사 작업을 수행 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-254">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93819-255">
            <paramref name="destination" /> 매개 변수에서 지정한 <see cref="T:System.Data.OracleClient.OracleLob" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-255">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is full.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93819-256">
            <paramref name="amount" />, <paramref name="sourceOffset" /> 또는 <paramref name="destinationOffset" /> 매개 변수에 지정된 값이 0보다 작거나 4GB보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-256">A value specified in the <paramref name="amount" />, <paramref name="sourceOffset" />, or <paramref name="destinationOffset" /> parameter is less than zero or greater than 4 gigabytes.</span>
          </span>
          <span data-ttu-id="93819-257">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-257">-or-</span>
          </span>
          <span data-ttu-id="93819-258">
            <see langword="CLOB" /> 또는 <see langword="NCLOB" /> 데이터 형식의 <paramref name="amount" />, <paramref name="sourceOffset" /> 및 <paramref name="destinationOffset" /> 매개 변수에서 지정된 값이 짝수가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-258">A value specified in the <paramref name="amount" />, <paramref name="sourceOffset" />, or <paramref name="destinationOffset" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-259">작업이 트랜잭션에 속하지 않거나, <see cref="T:System.Data.OracleClient.OracleLob" /> 개체가 null이거나, 연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-259">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-260">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-260">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="oracleLob.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleLob.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBatch">
      <MemberSignature Language="C#" Value="public void EndBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.EndBatch" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndBatch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndBatch();" />
      <MemberSignature Language="F#" Value="member this.EndBatch : unit -&gt; unit" Usage="oracleLob.EndBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93819-261">쓰기 작업을 여러 개 수행하는 동안 서버 측 트리거가 다시 발생하게 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-261">Allows server-side triggers to resume firing after performing multiple write operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-262">호출을 <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> 메서드를 시작 하기 전에 쓰기 작업을 <xref:System.Data.OracleClient.OracleLob>입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-262">Call the <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> method before you begin performing write operations on the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-263">연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-263">The connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-264">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-264">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-265">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-265">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Erase">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93819-266">이 <see cref="T:System.Data.OracleClient.OracleLob" />에서 데이터를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-266">Erases data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public long Erase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Erase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Erase" />
      <MemberSignature Language="VB.NET" Value="Public Function Erase () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Erase();" />
      <MemberSignature Language="F#" Value="member this.Erase : unit -&gt; int64" Usage="oracleLob.Erase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93819-267">이 <see cref="T:System.Data.OracleClient.OracleLob" />에서 모든 데이터를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-267">Erases all data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93819-268">지운 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-268">The number of bytes erased.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-269"><xref:System.Data.OracleClient.OracleLob.Erase%2A> 데이터를 잘라내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-269"><xref:System.Data.OracleClient.OracleLob.Erase%2A> does not truncate data.</span></span> <span data-ttu-id="93819-270">합니다 `LOB` 길이 대 한 동일 하 게 유지는 `BLOB` 데이터 형식, 삭제 된 데이터는 0x00 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="93819-270">The `LOB` length remains the same for a `BLOB` data type, and the erased data is replaced by 0x00.</span></span> <span data-ttu-id="93819-271">`CLOB` 및 `NCLOB` 데이터 형식 공백으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="93819-271">`CLOB` and `NCLOB` data types are replaced by spaces.</span></span>  
  
 <span data-ttu-id="93819-272">쓸 합니다 `LOB`를 검색 해야 합니다는 `LOB` SQL SELECT 문을에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-272">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93819-273">이 릴리스에서 쓰기 작업에는 읽기 전용 `LOB` 성공할 수 있지만 업데이트 하지 않습니다는 `LOB` 서버의 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-273">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="93819-274">그러나이 경우의 로컬 복사본이 `LOB` 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-274">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="93819-275">따라서 나중에 읽기 작업에는 <xref:System.Data.OracleClient.OracleLob> 개체 쓰기 작업의 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-275">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-276">작업이 트랜잭션에 속하지 않거나, <see cref="T:System.Data.OracleClient.OracleLob" /> 개체가 null이거나, 연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-276">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-277">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-277">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-278">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-278">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public long Erase (long offset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Erase(int64 offset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Erase (offset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Erase(long offset, long amount);" />
      <MemberSignature Language="F#" Value="member this.Erase : int64 * int64 -&gt; int64" Usage="oracleLob.Erase (offset, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="93819-279">지울 소스 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-279">The offset from which to erase.</span>
          </span>
          <span data-ttu-id="93819-280">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식의 경우 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-280">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span>
          </span>
        </param>
        <param name="amount">
          <span data-ttu-id="93819-281">지울 데이터 양(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-281">The quantity of data, in bytes, to erase.</span>
          </span>
          <span data-ttu-id="93819-282">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식의 경우 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-282">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93819-283">이 <see cref="T:System.Data.OracleClient.OracleLob" />에서 지정된 양의 데이터를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-283">Erases the specified amount of data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93819-284">지운 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-284">The number of bytes erased.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-285">값의 합계를 `offset` 하 고 `amount` 매개 변수 크기 보다 클 수는 <xref:System.Data.OracleClient.OracleLob>.</span><span class="sxs-lookup"><span data-stu-id="93819-285">The sum of the values in the `offset` and `amount` parameters can be greater than that of the size of the <xref:System.Data.OracleClient.OracleLob>.</span></span> <span data-ttu-id="93819-286">그러나 따라서 반환한 보다 큰 값을 지정 합니다 <xref:System.Data.OracleClient.OracleLob.Length%2A> 속성이 성공 하면 <xref:System.Data.OracleClient.OracleLob.Erase%2A> 의 끝에만 삭제는 <xref:System.Data.OracleClient.OracleLob>합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-286">Therefore, specifying a value greater than that returned by the <xref:System.Data.OracleClient.OracleLob.Length%2A> property succeeds; however <xref:System.Data.OracleClient.OracleLob.Erase%2A> only erases to the end of the <xref:System.Data.OracleClient.OracleLob>.</span></span> <span data-ttu-id="93819-287">(음수 값이 전달 하는 경우에 마찬가지로 `offset`, <xref:System.Data.OracleClient.OracleLob.Erase%2A> 는 성공 하지만의 시작 부분부터만 지웁니다는 <xref:System.Data.OracleClient.OracleLob>.) 이 동작은 다릅니다 합니다 <xref:System.Data.OracleClient.OracleLob.Read%2A> 하 고 <xref:System.Data.OracleClient.OracleLob.Write%2A> 메서드 및 제공 하 여 지정 된 값에서 모든 데이터를 지울 수 있다는 장점이 `offset` 실제 크기를 확인 하기 위해 서버를 추가로 왕복 하지 않고 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-287">(Similarly, if a negative value is passed to `offset`, <xref:System.Data.OracleClient.OracleLob.Erase%2A> will succeed, but only erase starting from the beginning of the <xref:System.Data.OracleClient.OracleLob>.) This behavior is different from that of the <xref:System.Data.OracleClient.OracleLob.Read%2A> and <xref:System.Data.OracleClient.OracleLob.Write%2A> methods, and offers the advantage of being able to erase all data from the value specified by `offset` without making an additional roundtrip to the server to verify the actual size.</span></span>  
  
 <span data-ttu-id="93819-288"><xref:System.Data.OracleClient.OracleLob.Erase%2A> 데이터를 잘라내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-288"><xref:System.Data.OracleClient.OracleLob.Erase%2A> does not truncate data.</span></span> <span data-ttu-id="93819-289">합니다 `LOB` 길이 대 한 동일 하 게 유지는 `BLOB` 데이터 형식, 삭제 된 데이터는 0x00 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="93819-289">The `LOB` length remains the same for a `BLOB` data type, and the erased data is replaced by 0x00.</span></span> <span data-ttu-id="93819-290">`CLOB` 및 `NCLOB` 데이터 형식 공백으로 바뀝니다.</span><span class="sxs-lookup"><span data-stu-id="93819-290">`CLOB` and `NCLOB` data types are replaced by spaces.</span></span>  
  
 <span data-ttu-id="93819-291">쓸 합니다 `LOB`를 검색 해야 합니다는 `LOB` SQL SELECT 문을에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-291">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93819-292">이 릴리스에서 쓰기 작업에는 읽기 전용 `LOB` 성공할 수 있지만 업데이트 하지 않습니다는 `LOB` 서버의 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-292">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="93819-293">그러나이 경우의 로컬 복사본이 `LOB` 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-293">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="93819-294">따라서 나중에 읽기 작업에는 <xref:System.Data.OracleClient.OracleLob> 개체 쓰기 작업의 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-294">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-295">작업이 트랜잭션에 속하지 않거나, <see cref="T:System.Data.OracleClient.OracleLob" /> 개체가 null이거나, 연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-295">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-296">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-296">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-297">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-297">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="oracleLob.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93819-298">현재 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-298">Not currently supported.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-299">이 릴리스에서이 메서드가 작동 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-299">In this release, this method is not functional.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBatched">
      <MemberSignature Language="C#" Value="public bool IsBatched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBatched" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsBatched" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBatched As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBatched { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBatched : bool" Usage="System.Data.OracleClient.OracleLob.IsBatched" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-300">응용 프로그램이 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> 메서드를 호출했는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-300">Gets a value indicating whether an application called the <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-301">응용 프로그램에서 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> 메서드를 호출했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-301">
              <see langword="true" /> if application called the <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> method, otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-302">Oracle 8.0.5 Oracle 서버를 사용 하는 경우 "ORA-00600: 내부 오류 코드" 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-302">When using an Oracle 8.0.5 server, an Oracle "ORA-00600: internal error code" exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-303">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-303">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleLob.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-304">
            <see cref="T:System.Data.OracleClient.OracleLob" />가 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 스트림인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-304">Gets a value that indicates whether the <see cref="T:System.Data.OracleClient.OracleLob" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-305">
            <see cref="T:System.Data.OracleClient.OracleLob" />가 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 스트림이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-305">
              <see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleLob" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream, otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporary">
      <MemberSignature Language="C#" Value="public bool IsTemporary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporary" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsTemporary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTemporary : bool" Usage="System.Data.OracleClient.OracleLob.IsTemporary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-306">
            <see cref="T:System.Data.OracleClient.OracleLob" />가 임시 <see langword="LOB" />인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-306">Gets a value indicating whether the <see cref="T:System.Data.OracleClient.OracleLob" /> is a temporary <see langword="LOB" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-307">
            <see cref="T:System.Data.OracleClient.OracleLob" />가 임시 <see langword="true" />이면 <see langword="LOB" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-307">
              <see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleLob" /> is a temporary <see langword="LOB" />, otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-308">다음 예제에서는 임시를 만드는 방법 `LOB`합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-308">The following example demonstrates how to create a temporary `LOB`.</span></span>  
  
```  
OracleConnection connection = new OracleConnection("server=MyServer; integrated security=yes;");  
connection.Open();  
OracleTransaction transaction = connection.BeginTransaction();  
OracleCommand command = connection.CreateCommand();  
command.Transaction = transaction;  
command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";  
command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;  
command.ExecuteNonQuery();  
OracleLob tempLob = (OracleLob)command.Parameters[0].Value;  
tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);  
tempLob.Write(tempbuff,0,tempbuff.Length);  
tempLob.EndBatch();  
command.Parameters.Clear();  
command.CommandText = "MyTable.MyProc";  
command.CommandType = CommandType.StoredProcedure;    
command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;  
command.ExecuteNonQuery();  
transaction.Commit();  
connection.Close  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-309">연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-309">The connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-310">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-310">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-311">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-311">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.OracleClient.OracleLob.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-312">
            <see cref="T:System.Data.OracleClient.OracleLob" />의 크기를 반환하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-312">Gets a value that returns the size of the <see cref="T:System.Data.OracleClient.OracleLob" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-313">
            <see cref="T:System.Data.OracleClient.OracleLob" />의 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-313">The size of the <see cref="T:System.Data.OracleClient.OracleLob" /> in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-314">크기는 <xref:System.Data.OracleClient.OracleLob> 항상 모든 데이터 형식에 대 한 바이트 단위로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-314">The size of the <xref:System.Data.OracleClient.OracleLob> is always returned in bytes for all data types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-315">연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-315">The connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-316">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-316">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-317">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-317">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LobType">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleType LobType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OracleClient.OracleType LobType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.LobType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LobType As OracleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleType LobType { System::Data::OracleClient::OracleType get(); };" />
      <MemberSignature Language="F#" Value="member this.LobType : System.Data.OracleClient.OracleType" Usage="System.Data.OracleClient.OracleLob.LobType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-318">
            <see langword="LOB" /> 데이터 형식을 반환하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-318">Gets a value that returns the <see langword="LOB" /> data type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-319">
            <see cref="T:System.Data.OracleClient.OracleType" />
            <see langword="LOB" /> 데이터 형식 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-319">One of the <see cref="T:System.Data.OracleClient.OracleType" /><see langword="LOB" /> data types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-320"><xref:System.Data.OracleClient.OracleLob> 다음 중 하나일 수 있습니다 <xref:System.Data.OracleClient.OracleType> 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-320">An <xref:System.Data.OracleClient.OracleLob> may be one of the following <xref:System.Data.OracleClient.OracleType> data types.</span></span>  
  
|<span data-ttu-id="93819-321">OracleType 데이터 형식</span><span class="sxs-lookup"><span data-stu-id="93819-321">OracleType data type</span></span>|<span data-ttu-id="93819-322">설명</span><span class="sxs-lookup"><span data-stu-id="93819-322">Description</span></span>|  
|--------------------------|-----------------|  
|`Blob`|<span data-ttu-id="93819-323">이진 데이터를 포함하는 Oracle `BLOB` 데이터 형식으로, 최대 크기는 4GB입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-323">An Oracle `BLOB` data type that contains binary data with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="93819-324">이는 <xref:System.Array> 형식의 <xref:System.Byte>에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-324">This maps to an <xref:System.Array> of type <xref:System.Byte>.</span></span>|  
|`Clob`|<span data-ttu-id="93819-325">문자 데이터를 포함하는 Oracle `CLOB` 데이터 형식으로, 서버의 기본 문자 집합을 기반으로 하며 최대 크기는 4GB입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-325">An Oracle `CLOB` data type that contains character data, based on the default character set on the server, with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="93819-326">이는 <xref:System.String>에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-326">This maps to <xref:System.String>.</span></span>|  
|`NClob`|<span data-ttu-id="93819-327">Oracle `NCLOB` 국가별 문자 4gb의 최대 크기를 사용 하 여 서버의 집합을 기반으로 문자 데이터를 포함 하는 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-327">An Oracle `NCLOB` data type that contains character data, based on the national character set on the server with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="93819-328">이는 <xref:System.String>에 매핑합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-328">This maps to <xref:System.String>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleLob Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleLob Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleLob.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleLob " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleLob ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleLob" Usage="System.Data.OracleClient.OracleLob.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleLob</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-329">null <see cref="T:System.Data.OracleClient.OracleLob" /> 개체를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-329">Represents a null <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-330">생성할 수 있습니다는 <xref:System.Data.OracleClient.OracleLob> 이 형식을 사용 하 여 NULL입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-330">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```  
OracleLob myLob = OracleLOB.Null;  
```  
  
 <span data-ttu-id="93819-331">이 방법은 테스트 하는 데 주로 사용 됩니다 여부는 `LOB` 이 예제와 같이 null 인 경우 서버에서 반환:</span><span class="sxs-lookup"><span data-stu-id="93819-331">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as this example illustrates:</span></span>  
  
```  
If(myLob == OracleLob.Null)  
```  
  
 <span data-ttu-id="93819-332">NULL `LOB` 는 0 바이트 비슷하게 `LOB` 한다는 점에서 <xref:System.Data.OracleClient.OracleLob.Read%2A> 성공 하 고 항상 0 바이트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-332">A NULL `LOB` behaves similarly to a zero byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.OracleClient.OracleLob.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-333">
            <see cref="T:System.Data.OracleClient.OracleLob" /> 스트림에서 현재 읽기 위치를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-333">Gets the current read position in the <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-334">
            <see cref="T:System.Data.OracleClient.OracleLob" /> 스트림 내의 현재 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-334">The current position within the <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-335">스트림이 가져오거나 설정할 위치 검색을 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-335">The stream must support seeking to get or set the position.</span></span> <span data-ttu-id="93819-336">사용 된 <xref:System.Data.OracleClient.OracleLob.CanSeek%2A> 스트림이 검색을 지원 하는지 여부를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-336">Use the <xref:System.Data.OracleClient.OracleLob.CanSeek%2A> property to determine whether the stream supports seeking.</span></span>  
  
 <span data-ttu-id="93819-337">스트림의 길이 초과 하는 위치 검색을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-337">Seeking to any location beyond the length of the stream is supported.</span></span> <span data-ttu-id="93819-338">홀수 바이트 위치에 대 한 하려는 `CLOB` 및 `NCLOB` 데이터 형식 에서도 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-338">Seeking to an odd position for `CLOB` and `NCLOB` data types is also supported.</span></span> <span data-ttu-id="93819-339">자세한 내용은의 설명 섹션을 참조 하십시오.는 <xref:System.Data.OracleClient.OracleLob.Read%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-339">For more information, see the Remarks section of the <xref:System.Data.OracleClient.OracleLob.Read%2A> property.</span></span>  
  
 <span data-ttu-id="93819-340"><xref:System.Data.OracleClient.OracleLob.Position%2A> 속성 않습니다를 추적 하지는 소비 된 생략 되었거나 스트림을 또는 둘 다에서 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-340">The <xref:System.Data.OracleClient.OracleLob.Position%2A> property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-341">연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-341">The connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-342">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-342">The object was closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="oracleLob.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="93819-343">바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-343">An array of bytes.</span>
          </span>
          <span data-ttu-id="93819-344">이 메서드는 지정된 바이트 배열의 값이 <paramref name="offset" />과 (<paramref name="offset" /> + <paramref name="count" />) 사이에서 현재 원본으로부터 읽어온 바이트로 교체된 상태로 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-344">When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" />) replaced by the bytes read from the current source.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="93819-345">현재 스트림에서 읽은 데이터를 저장하기 시작하는 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-345">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</span>
          </span>
          <span data-ttu-id="93819-346">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식의 경우 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-346">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="93819-347">현재 스트림에서 읽을 최대 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-347">The maximum number of bytes to be read from the current stream.</span>
          </span>
          <span data-ttu-id="93819-348">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식의 경우 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-348">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93819-349">현재 <see cref="T:System.Data.OracleClient.OracleLob" /> 스트림에서 바이트의 시퀀스를 읽은 다음 읽은 바이트 수만큼 스트림 내에서 위치를 앞으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-349">Reads a sequence of bytes from the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93819-350">버퍼로 읽어온 총 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-350">The total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="93819-351">이 바이트 수는 현재 바이트가 충분하지 않은 경우 요청된 바이트 수보다 작을 수 있으며 스트림의 끝에 도달하면 0이 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-351">This may be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-352">합니다 <xref:System.Data.OracleClient.OracleLob.Read%2A> 메서드는 최대 읽습니다 `count` 현재에서 바이트 스트리밍하 고 저장 합니다 `buffer` 부터 `offset`합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-352">The <xref:System.Data.OracleClient.OracleLob.Read%2A> method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="93819-353">스트림 내의 현재 위치는; 읽은 바이트 수 만큼 앞 그러나 예외가 발생 하는 경우 스트림 내의 현재 위치 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-353">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="93819-354"><xref:System.Data.OracleClient.OracleLob.Read%2A> 읽은 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-354"><xref:System.Data.OracleClient.OracleLob.Read%2A> returns the number of bytes read.</span></span> <span data-ttu-id="93819-355">위치가 스트림의 맨 끝에 현재 있는 경우에 반환 값은 0으로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-355">The return value is zero only if the position is currently at the end of the stream.</span></span> <span data-ttu-id="93819-356"><xref:System.Data.OracleClient.OracleLob.Read%2A> 데이터가 없는 이벤트 최소한 1 바이트의 데이터를 읽을 수 있을 때까지 차단 됩니다.<xref:System.Data.OracleClient.OracleLob.Read%2A></span><span class="sxs-lookup"><span data-stu-id="93819-356"><xref:System.Data.OracleClient.OracleLob.Read%2A> will block until at least one byte of data can be read, in the event that no data is available.<xref:System.Data.OracleClient.OracleLob.Read%2A></span></span> <span data-ttu-id="93819-357">읽기를 시도 하는 경우 0을 반환 합니다는 `LOB` 끝날 때 현재 위치에 표시 되는 경우 `LOB`합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-357">returns 0 if you attempt to read from a `LOB` when the current position is at the end of `LOB`.</span></span> <span data-ttu-id="93819-358"><xref:System.Data.OracleClient.OracleLob.Read%2A> 요청 된 것 보다 개 이하의 바이트가 스트림의 끝에 도달 하지 않은 경우에 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-358"><xref:System.Data.OracleClient.OracleLob.Read%2A> can return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="93819-359">모든.NET Framework Data Provider for Oracle 처리 `CLOB` 고 `NCLOB` 유니코드 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-359">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="93819-360">따라서에 액세스할 때 `CLOB` 고 `NCLOB` 데이터 형식이 항상 처리 하는 각 문자는 2 바이트는 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-360">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="93819-361">예를 들어 세 개의 문자가 포함 된 텍스트 문자열로로 저장 됩니다는 `NCLOB` 여기서는 문자 집합은 문자당 4 바이트가 고 수행한 Oracle 서버에는 `Read` 작업 이지만 6 바이트로 문자열의 길이 지정 서버에서 12 바이트로 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-361">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `Read` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="93819-362">다음 C# 예제에서는 읽는 방법을 보여 줍니다. <xref:System.Data.OracleClient.OracleLob> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-362">The following C# example demonstrates how to read <xref:System.Data.OracleClient.OracleLob> objects.</span></span>  
  
```  
public static void ReadLobExample(OracleCommand command)  
{  
   int actual = 0;  
  
   //Select some data.  
   // Table Schema:  
   //  "CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)";  
   //  "INSERT INTO TableWithLobs values (1, 'AA', 'AAA', N'AAAA')";  
   command.CommandText = "SELECT * FROM TableWithLobs";  
   OracleDataReader reader = command.ExecuteReader();  
   using(reader)  
   {  
      //Obtain the first row of data.  
      reader.Read();  
      //Obtain the LOBs (all 3 varieties).  
      OracleLob BLOB = reader.GetOracleLob(1);  
      OracleLob CLOB  = reader.GetOracleLob(2);  
      OracleLob NCLOB = reader.GetOracleLob(3);  
  
      //Example - Reading binary data (in chunks).  
      byte[] buffer = new byte[100];  
      while((actual = BLOB.Read(buffer, 0, buffer.Length)) >0)  
         Console.WriteLine(BLOB.LobType + ".Read(" + buffer + ", " + buffer.Length + ") => " + actual);  
  
      //Example - Reading CLOB/NCLOB data (in chunks).  
      //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).  
      //However, because the OracleLob object inherits directly from the.NET stream object,   
      //all the existing classes that manipluate streams can also be used. For example, the   
      //.NET StreamReader makes converting the raw bytes into actual characters easier.  
      StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);  
      char[] cbuffer = new char[100];  
      while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) >0)  
         Console.WriteLine(CLOB.LobType + ".Read(" + new string(cbuffer, 0, actual) + ", " + cbuffer.Length + ") => " + actual);  
  
      //Example - Reading data (all at once).  
      //You could use StreamReader.ReadToEnd to obtain all the string data,or simply  
      //call OracleLob.Value to obtain a contiguous allocation of all the data.  
      Console.WriteLine(NCLOB.LobType + ".Value => " + NCLOB.Value);  
   }  
}  
```  
  
 <span data-ttu-id="93819-363">생성할 수 있습니다는 <xref:System.Data.OracleClient.OracleLob> 이 형식을 사용 하 여 NULL입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-363">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```  
OracleLob myLob = OracleLob.Null;  
```  
  
 <span data-ttu-id="93819-364">이 방법은 테스트 하는 데 주로 사용 됩니다 여부는 `LOB` 다음 예제와 같이 null 인 경우 서버에서 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-364">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as the following example illustrates.</span></span>  
  
```  
If(myLob == OracleLob.Null)  
```  
  
 <span data-ttu-id="93819-365">NULL `LOB` 는 0 바이트 비슷하게 `LOB` 한다는 점에서 <xref:System.Data.OracleClient.OracleLob.Read%2A> 성공 하 고 항상 0 바이트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-365">A NULL `LOB` behaves similarly to a zero byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93819-366">
            <paramref name="buffer" />가 null 참조(Visual Basic에서는 <see langword="Nothing" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-366">The <paramref name="buffer" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93819-367">
            <paramref name="offset" /> 또는 <paramref name="count" /> 매개 변수의 값이 양수가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-367">A value in the <paramref name="offset" /> or <paramref name="count" /> parameter is not positive.</span>
          </span>
          <span data-ttu-id="93819-368">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-368">-or-</span>
          </span>
          <span data-ttu-id="93819-369">오프셋과 카운트 매개 변수의 합계가 버퍼 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-369">The sum of the offset and count parameters is larger than the buffer length.</span>
          </span>
          <span data-ttu-id="93819-370">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-370">-or-</span>
          </span>
          <span data-ttu-id="93819-371">
            <paramref name="amount" /> 또는 <paramref name="offset" /> 매개 변수에 지정된 값이 0보다 작거나 4GB보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-371">A value specified in the <paramref name="amount" /> or <paramref name="offset" /> parameter is less than zero or greater than 4 gigabytes.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-372">작업이 트랜잭션에 속하지 않거나, <see cref="T:System.Data.OracleClient.OracleLob" /> 개체가 null이거나, 연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-372">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-373">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-373">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-374">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-374">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="oracleLob.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="93819-375">원본에 상대적인 바이트 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-375">A byte offset relative to origin.</span>
          </span>
          <span data-ttu-id="93819-376">
            <paramref name="offset" />이 음수인 경우 새 위치는 <paramref name="origin" />으로 지정된 바이트 수만큼 <paramref name="offset" />으로 지정된 위치 앞에 옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-376">If <paramref name="offset" /> is negative, the new position precedes the position specified by <paramref name="origin" /> by the number of bytes specified by <paramref name="offset" />.</span>
          </span>
          <span data-ttu-id="93819-377">
            <paramref name="offset" />이 0인 경우 새 위치는 <paramref name="origin" />으로 지정된 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-377">If <paramref name="offset" /> is zero, the new position is the position specified by <paramref name="origin" />.</span>
          </span>
          <span data-ttu-id="93819-378">
            <paramref name="offset" />이 양수인 경우 새 위치는 <paramref name="origin" />으로 지정된 바이트 수만큼 <paramref name="offset" />으로 지정된 위치 뒤에 옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-378">If <paramref name="offset" /> is positive, the new position follows the position specified by <paramref name="origin" /> by the number of bytes specified by <paramref name="offset" />.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="93819-379">새 위치를 가져오는 데 사용되는 참조 위치를 나타내는 <see cref="T:System.IO.SeekOrigin" /> 형식의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-379">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93819-380">현재 <see cref="T:System.Data.OracleClient.OracleLob" /> 스트림에서 위치를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-380">Sets the position on the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93819-381">현재 스트림 내의 새 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-381">The new position within the current stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-382">경우 `offset` 가 음수인 경우 새 위치 앞에 야 하 여 지정 된 위치 `origin` 으로 지정 된 바이트 수 만큼 `offset`입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-382">If `offset` is negative, the new position must precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="93819-383">하는 경우 `offset` 가 0 이면 새 위치에 지정 된 위치 여야 합니다. `origin`합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-383">If `offset` is zero, the new position must be the position specified by `origin`.</span></span> <span data-ttu-id="93819-384">하는 경우 `offset` 이 양수인 경우 새 위치에 지정 된 위치를 따라야 `origin` 으로 지정 된 바이트 수 만큼 `offset`입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-384">If `offset` is positive, the new position must follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="93819-385">스트림의 길이 초과 하는 위치 검색을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-385">Seeking to any location beyond the length of the stream is supported.</span></span> <span data-ttu-id="93819-386">홀수 바이트 위치에 대 한 하려는 `CLOB` 및 `NCLOB` 데이터 형식 에서도 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-386">Seeking to an odd position for `CLOB` and `NCLOB` data types is also supported.</span></span> <span data-ttu-id="93819-387">자세한 내용은의 설명 섹션을 참조 하십시오.는 <xref:System.Data.OracleClient.OracleLob.Read%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-387">For more information, see the Remarks section of the <xref:System.Data.OracleClient.OracleLob.Read%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="93819-388">
            <paramref name="origin" /> 매개 변수에 유효한 값이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-388">The <paramref name="origin" /> parameter does not contain a valid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93819-389">결과 위치가 값의 길이를 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-389">The resulting position is beyond the length of the value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-390">
            <see cref="T:System.Data.OracleClient.OracleLob" /> 개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-390">The <see cref="T:System.Data.OracleClient.OracleLob" /> object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-391">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-391">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="oracleLob.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93819-392">원하는 현재 <see cref="T:System.Data.OracleClient.OracleLob" /> 스트림의 길이(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-392">The desired length of the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream in bytes.</span>
          </span>
          <span data-ttu-id="93819-393">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식의 경우 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-393">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93819-394">
            <see cref="T:System.Data.OracleClient.OracleLob" /> 스트림의 길이를 현재 길이보다 적은 값으로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-394">Sets the length of the <see cref="T:System.Data.OracleClient.OracleLob" /> stream to a value less than the current length.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-395">길이 높이기 위해는 <xref:System.Data.OracleClient.OracleLob> stream 실패 하 고 반환 "메시지: ORA-22926: trim 길이가 현재 LOB 값의 길이 보다 크면 지정 된" Oracle 서버에서.</span><span class="sxs-lookup"><span data-stu-id="93819-395">An attempt to increase the length of the <xref:System.Data.OracleClient.OracleLob> stream fails, and returns "Message: ORA-22926: specified trim length is greater than current LOB value's length" from the Oracle server.</span></span>  
  
 <span data-ttu-id="93819-396">스트림이 쓰기와 검색을 모두 지원 해야 <xref:System.Data.OracleClient.OracleLob.SetLength%2A> 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-396">A stream must support both writing and seeking for <xref:System.Data.OracleClient.OracleLob.SetLength%2A> to function.</span></span>  
  
 <span data-ttu-id="93819-397">모든.NET Framework Data Provider for Oracle 처리 `CLOB` 고 `NCLOB` 유니코드 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-397">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="93819-398">따라서에 액세스할 때 `CLOB` 고 `NCLOB` 데이터 형식이 항상 처리 하는 각 문자는 2 바이트는 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-398">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="93819-399">예를 들어 세 개의 문자가 포함 된 텍스트 문자열로로 저장 됩니다는 `NCLOB` 여기서는 문자 집합은 문자당 4 바이트가 고 수행한 Oracle 서버에는 `SetLength` 작업 이지만 6 바이트로 문자열의 길이 지정 서버에서 12 바이트로 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-399">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `SetLength` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="93819-400">쓸 합니다 `LOB`를 검색 해야 합니다는 `LOB` SQL SELECT 문을에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-400">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93819-401">한 쓰기 작업에는 읽기 전용 `LOB` 성공할 수 있지만 업데이트 하지 않습니다는 `LOB` 서버의 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-401">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="93819-402">그러나이 경우의 로컬 복사본이 `LOB` 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-402">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="93819-403">따라서 나중에 읽기 작업에는 <xref:System.Data.OracleClient.OracleLob> 개체 쓰기 작업의 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-403">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93819-404">
            <see langword="CLOB" /> 또는 <see langword="NCLOB" /> 데이터 형식의 <paramref name="value" /> 매개 변수에서 지정된 값이 짝수가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-404">A value specified in the <paramref name="value" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span>
          </span>
          <span data-ttu-id="93819-405">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-405">-or-</span>
          </span>
          <span data-ttu-id="93819-406">
            <paramref name="value" /> 매개 변수에 지정된 값이 0보다 작거나 4GB보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-406">A value specified in the <paramref name="value" /> parameter is less than zero or greater than 4 gigabytes.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-407">작업이 트랜잭션에 속하지 않거나, <see cref="T:System.Data.OracleClient.OracleLob" /> 개체가 null이거나, 연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-407">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-408">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-408">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-409">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-409">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Data.OracleClient.OracleLob.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93819-410">기본값에 해당하는 공용 언어 런타임 스트림 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-410">Gets the common language runtime stream value equivalent of the underlying value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93819-411">
            <see cref="F:System.Data.OracleClient.OracleType.Blob" />의 경우 <see langword="Byte[]" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-411">For <see cref="F:System.Data.OracleClient.OracleType.Blob" />, an array of type <see langword="Byte[]" />.</span>
          </span>
          <span data-ttu-id="93819-412">
            <see cref="F:System.Data.OracleClient.OracleType.Clob" /> 및 <see cref="F:System.Data.OracleClient.OracleType.NClob" />의 경우 <see langword="String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-412">For <see cref="F:System.Data.OracleClient.OracleType.Clob" /> and <see cref="F:System.Data.OracleClient.OracleType.NClob" />, a <see langword="String" />.</span>
          </span>
          <span data-ttu-id="93819-413">null 데이터의 경우 <see cref="T:System.DBNull" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-413">For null data, <see cref="T:System.DBNull" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-414">에 대 한 <xref:System.Data.OracleClient.OracleType.Blob> 데이터 형식 <xref:System.Data.OracleClient.OracleLob.Value%2A> 형식의 연속 배열로 전체 기본 데이터를 반환 합니다. `Byte[]`합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-414">For <xref:System.Data.OracleClient.OracleType.Blob> data types, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns the entire underlying data as a contiguous array of type `Byte[]`.</span></span> <span data-ttu-id="93819-415">에 대 한 <xref:System.Data.OracleClient.OracleType.Clob> 하 고 <xref:System.Data.OracleClient.OracleType.NClob> 데이터 형식 <xref:System.Data.OracleClient.OracleLob.Value%2A> 모든 데이터를 반환 합니다는 `String` 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-415">For <xref:System.Data.OracleClient.OracleType.Clob> and <xref:System.Data.OracleClient.OracleType.NClob> data types, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns all the data as a `String` data type.</span></span> <span data-ttu-id="93819-416">Null 데이터용 <xref:System.Data.OracleClient.OracleLob.Value%2A> 반환 <xref:System.DBNull>합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-416">For null data, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns <xref:System.DBNull>.</span></span> <span data-ttu-id="93819-417">반환된 된 값을 비교 하 여 구분할 수 있습니다 빈 데이터 간의 데이터 및 데이터를 null입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-417">By comparing the returned values, you can distinguish among empty data, null data, and data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93819-418">사용 하는 이점은 `LOB` 데이터 형식의 많은 양의 데이터를 청크로 클라이언트에서 검색 하는 기능입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-418">A benefit of using `LOB` data types is the capability to retrieve large amounts of data in chunks at the client.</span></span> <span data-ttu-id="93819-419">그러나 사용 하는 경우 <xref:System.Data.OracleClient.OracleLob.Value%2A>에 대 한 모든 데이터를 가져와야 합니다 `LOB` 를 응용 프로그램의 오버 헤드를 크게 높일 수 있는 하나의 연속적인 청크로 열입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-419">However, when you use <xref:System.Data.OracleClient.OracleLob.Value%2A>, you obtain all the data for the `LOB` column as one contiguous chunk, which can significantly increase application overhead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-420">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-420">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-421">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-421">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="oracleLob.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="93819-422">바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-422">An array of bytes.</span>
          </span>
          <span data-ttu-id="93819-423">이 메서드는 <paramref name="count" />에 지정한 바이트 수를 <paramref name="buffer" />에서 현재 스트림으로 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-423">This method copies the number of bytes specified in <paramref name="count" /> from <paramref name="buffer" /> to the current stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="93819-424">현재 스트림으로 바이트를 복사하기 시작할 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-424">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</span>
          </span>
          <span data-ttu-id="93819-425">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식의 경우 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-425">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="93819-426">현재 스트림에 쓸 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-426">The number of bytes to be written to the current stream.</span>
          </span>
          <span data-ttu-id="93819-427">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식의 경우 짝수여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-427">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93819-428">현재 <see cref="T:System.Data.OracleClient.OracleLob" /> 스트림에 바이트의 시퀀스를 쓰고 이 스트림 내의 현재 위치를 쓰여진 바이트 수만큼 앞으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-428">Writes a sequence of bytes to the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream, and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-429">쓰기 작업이 성공한 경우 스트림 내의 위치 쓴 바이트 수 만큼 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-429">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="93819-430">예외가 발생 하는 스트림 내의 위치에 그대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-430">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 <span data-ttu-id="93819-431">끝을 넘어 작성 `LOB` 수 있으며 확장는 `LOB` 쓴 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-431">Writing beyond the end of `LOB` is allowed and enlarges the `LOB` by the number of bytes written.</span></span>  
  
 <span data-ttu-id="93819-432">모든.NET Framework Data Provider for Oracle 처리 `CLOB` 고 `NCLOB` 유니코드 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-432">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="93819-433">따라서에 액세스할 때 `CLOB` 고 `NCLOB` 데이터 형식이 항상 처리 하는 각 문자는 2 바이트는 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-433">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="93819-434">예를 들어 세 개의 문자가 포함 된 텍스트 문자열로로 저장 됩니다는 `NCLOB` 여기서는 문자 집합은 문자당 4 바이트가 고 수행한 Oracle 서버에는 `Write` 작업 이지만 6 바이트로 문자열의 길이 지정 서버에서 12 바이트로 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-434">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `Write` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="93819-435">쓸 합니다 `LOB`를 검색 해야 합니다는 `LOB` SQL SELECT 문을에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-435">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="93819-436">다음 C# 예제를 작성 하는 방법을 보여 줍니다 <xref:System.Data.OracleClient.OracleLob> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="93819-436">The following C# example demonstrates how to write to <xref:System.Data.OracleClient.OracleLob> objects.</span></span>  
  
```  
public static void WriteLobExample(OracleCommand command)  
{  
   //Note: Updating LOB data requires a transaction.  
   command.Transaction = command.Connection.BeginTransaction();  
   //Select some data.  
   //    Table Schema:  
   //        "CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)";  
   //        "INSERT INTO tablewithlobs values (1, 'AA', 'AAA')";  
   command.CommandText = "SELECT * FROM TableWithLobs FOR UPDATE";  
   OracleDataReader reader = command.ExecuteReader();  
   using(reader)  
   {  
      //Obtain the first row of data.  
      reader.Read();  
      //Obtain both LOBs.  
      OracleLob BLOB1    = reader.GetOracleLob(1);  
      OracleLob BLOB2    = reader.GetOracleLob(2);  
      //Perform any desired operations on the LOB, (read, position, and so on).  
      //...  
      //Example - Writing binary data (directly to the backend).  
      //To write, you can use any of the stream classes, or write raw binary data using   
      //the OracleLob write method. Writing character vs. binary is the same;  
      //however note that character is always in terms of Unicode byte counts  
      //(for example: even number of bytes - 2 bytes for every Unicode character).  
      byte[] buffer = new byte[100];  
      buffer[0] = 0xCC;  
      buffer[1] = 0xDD;  
      BLOB1.Write(buffer, 0, 2);  
      BLOB1.Position = 0;  
      Console.WriteLine(BLOB1.LobType + ".Write(" + buffer + ", 0, 2) => " + BLOB1.Value);  
  
      //Example - Copying data into another LOB.  
      long actual = BLOB1.CopyTo(BLOB2);  
      Console.WriteLine(BLOB1.LobType + ".CopyTo(" + BLOB2.Value + ") => " + actual);  
  
      //Commit the transaction now that everything succeeded.  
      //Note: On error, Transaction.Dispose is called (from the using statement)  
      //and will automatically roll-back the pending transaction.  
      command.Transaction.Commit();  
   }  
}  
```  
  
> [!NOTE]
>  <span data-ttu-id="93819-437">한 쓰기 작업에는 읽기 전용 `LOB` 성공할 수 있지만 업데이트 하지 않습니다는 `LOB` 서버의 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-437">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="93819-438">그러나이 경우의 로컬 복사본이 `LOB` 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-438">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="93819-439">따라서 나중에 읽기 작업에는 <xref:System.Data.OracleClient.OracleLob> 개체 쓰기 작업의 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-439">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="93819-440">
            <paramref name="buffer" /> 매개 변수가 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-440">The <paramref name="buffer" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="93819-441">
            <paramref name="offset" /> 또는 <paramref name="count" /> 매개 변수의 값이 양수가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-441">A value in the <paramref name="offset" /> or <paramref name="count" /> parameter is not positive.</span>
          </span>
          <span data-ttu-id="93819-442">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-442">-or-</span>
          </span>
          <span data-ttu-id="93819-443">
            <paramref name="offset" /> 및 <paramref name="count" /> 매개 변수의 합계가 <paramref name="buffer" /> 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-443">The sum of the <paramref name="offset" /> and <paramref name="count" /> parameters is larger than the <paramref name="buffer" /> length.</span>
          </span>
          <span data-ttu-id="93819-444">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-444">-or-</span>
          </span>
          <span data-ttu-id="93819-445">
            <paramref name="count" /> 또는 <paramref name="offset" /> 매개 변수에 지정된 값이 0보다 작거나 4GB보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-445">A value specified in the <paramref name="count" /> or <paramref name="offset" /> parameter is less than zero or greater than 4 gigabytes.</span>
          </span>
          <span data-ttu-id="93819-446">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-446">-or-</span>
          </span>
          <span data-ttu-id="93819-447">
            <see langword="CLOB" /> 및 <see langword="NCLOB" /> 데이터 형식을 짝수 바이트로 지정해야 하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-447">You must specify <see langword="CLOB" /> and <see langword="NCLOB" /> data types as an even number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93819-448">작업이 트랜잭션에 속하지 않거나, <see cref="T:System.Data.OracleClient.OracleLob" /> 개체가 null이거나, 연결이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-448">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="93819-449">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-449">The object was closed or disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.OracleClient.OracleException">
          <span data-ttu-id="93819-450">Oracle 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-450">An Oracle error has occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="oracleLob.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="93819-451">스트림에 쓸 바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-451">The byte to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93819-452">
            <see cref="T:System.Data.OracleClient.OracleLob" /> 스트림의 현재 위치에 바이트를 쓰고 스트림 내 위치를 1바이트 앞으로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93819-452">Writes a byte to the current position in the <see cref="T:System.Data.OracleClient.OracleLob" /> stream, and advances the position within the stream by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93819-453">쓰기 작업이 성공한 경우 스트림 내의 위치 1 바이트씩 앞으로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-453">If the write operation is successful, the position within the stream advances by one byte.</span></span> <span data-ttu-id="93819-454">예외가 발생 하는 스트림 내의 위치에 그대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-454">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 <span data-ttu-id="93819-455">끝을 넘어 작성 합니다 `LOB` 수 있으며 확장는 `LOB` 1 바이트씩 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-455">Writing beyond the end of the `LOB` is allowed and enlarges the `LOB` by one byte.</span></span>  
  
 <span data-ttu-id="93819-456">쓸 합니다 `LOB`를 검색 해야 합니다는 `LOB` SQL SELECT 문을에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-456">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93819-457">한 쓰기 작업에는 읽기 전용 `LOB` 성공할 수 있지만 업데이트 하지 않습니다는 `LOB` 서버의 합니다.</span><span class="sxs-lookup"><span data-stu-id="93819-457">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="93819-458">그러나이 경우의 로컬 복사본이 `LOB` 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="93819-458">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="93819-459">따라서 나중에 읽기 작업에는 <xref:System.Data.OracleClient.OracleLob> 개체 쓰기 작업의 결과 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93819-459">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>