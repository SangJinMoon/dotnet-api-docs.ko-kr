<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OracleLob.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f752621e9496b0bd55f13fe4c3cb60aecdfbea99.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f752621e9496b0bd55f13fe4c3cb60aecdfbea99</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Represents a large object binary (<ph id="ph1">&lt;see langword="LOB" /&gt;</ph>) data type stored on an Oracle server.</source>
          <target state="translated">Oracle 서버에 저장된 <ph id="ph1">&lt;see langword="LOB" /&gt;</ph>(대형 이진 개체) 데이터 형식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> differs from an <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> in that the data is stored on the server instead of in a physical file in the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 에서 다른는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> 데이터는 운영 체제의 물리적 파일이 아닌 서버에 저장 된다는 점에서 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>It can also be a read-write object, unlike an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>, which is always read-only.</source>
          <target state="translated">와 달리 읽기 / 쓰기 개체 일 수도 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph>는 항상 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> may be one of these <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph> data types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 이 중 하나가 될 수 있습니다 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>OracleType data type</source>
          <target state="translated">OracleType 데이터 형식</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An Oracle <ph id="ph1">`BLOB`</ph> data type that contains binary data with a maximum size of 4 gigabytes (GB).</source>
          <target state="translated">Oracle <ph id="ph1">`BLOB`</ph> 4 기가바이트 (GB)의 최대 크기를 사용 하 여 이진 데이터를 포함 하는 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This maps to an <ph id="ph1">&lt;xref:System.Array&gt;</ph> of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">이는 <ph id="ph1">&lt;xref:System.Array&gt;</ph> 형식의 <ph id="ph2">&lt;xref:System.Byte&gt;</ph>에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An Oracle <ph id="ph1">`CLOB`</ph> data type that contains character data, based on the default character set on the server, with a maximum size of 4 GB.</source>
          <target state="translated">Oracle <ph id="ph1">`CLOB`</ph> 데이터 형식은 기본 문자에 따라 문자 데이터를 포함 하는 최대 크기가 4GB의 서버에 설정 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">이는 <ph id="ph1">&lt;xref:System.String&gt;</ph>에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>An Oracle <ph id="ph1">`NCLOB`</ph> data type that contains character data, based on the national character set on the server with a maximum size of 4 GB.</source>
          <target state="translated">Oracle <ph id="ph1">`NCLOB`</ph> 국가별 문자 집합에 4GB의 최대 크기를 사용 하 여 서버를 기반으로 문자 데이터를 포함 하는 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">이는 <ph id="ph1">&lt;xref:System.String&gt;</ph>에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>A .NET application developer can retrieve the Oracle <ph id="ph1">`LOB`</ph> values into basic .NET data types, such as <ph id="ph2">&lt;xref:System.Array&gt;</ph> of type <ph id="ph3">&lt;xref:System.Byte&gt;</ph> and <ph id="ph4">&lt;xref:System.String&gt;</ph>, or the specialized <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> data type.</source>
          <target state="translated">.NET 응용 프로그램 개발자는 Oracle을 검색할 수 <ph id="ph1">`LOB`</ph> 와 같은 기본.NET 데이터 형식으로 값 <ph id="ph2">&lt;xref:System.Array&gt;</ph> 형식의 <ph id="ph3">&lt;xref:System.Byte&gt;</ph> 및 <ph id="ph4">&lt;xref:System.String&gt;</ph>, 나 특수화 된 <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> class supports reading data from and writing to the Oracle <ph id="ph2">`LOB`</ph> in the Oracle database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 클래스에서 데이터를 읽고 쓰는 Oracle에서 지 원하는 <ph id="ph2">`LOB`</ph> Oracle 데이터베이스에 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The following are the main characteristics of an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> data type that distinguish it from basic .NET data types:</source>
          <target state="translated">주요 특성은 한 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 기본.NET 데이터 형식을 구분 되는 데이터 형식:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>After you retrieve the Oracle <ph id="ph1">`LOB`</ph> value from the Oracle database into the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> class, you can change the <ph id="ph3">`LOB`</ph> data in an open transaction and your changes are directly reflected to the database.</source>
          <target state="translated">Oracle을 검색 한 후 <ph id="ph1">`LOB`</ph> 의 Oracle 데이터베이스에서 값의 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 클래스를 변경할 수 있습니다는 <ph id="ph3">`LOB`</ph> 열려 있는 트랜잭션이 및 변경 내용을 데이터를 데이터베이스에 직접 반영 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>If you retrieve the Oracle <ph id="ph1">`LOB`</ph> value into an <ph id="ph2">&lt;xref:System.Array&gt;</ph> of type <ph id="ph3">&lt;xref:System.Byte&gt;</ph> or <ph id="ph4">&lt;xref:System.String&gt;</ph> and update these arrays, your changes are not reflected to the database.</source>
          <target state="translated">Oracle을 검색 하는 경우 <ph id="ph1">`LOB`</ph> 값에 <ph id="ph2">&lt;xref:System.Array&gt;</ph> 형식의 <ph id="ph3">&lt;xref:System.Byte&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.String&gt;</ph> 이러한 배열을 업데이트 변경 내용을 데이터베이스에 반영 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>When you use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> class to access a chunk of a <ph id="ph2">`LOB`</ph> value, only that chunk is passed from the Oracle database to the client.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 의 청크를 액세스 하는 클래스는 <ph id="ph2">`LOB`</ph> 값을 해당 청크만는 Oracle 데이터베이스에서 클라이언트에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>When you use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt;</ph> method to access a chunk of a <ph id="ph2">`LOB`</ph> value, the entire contents of the value are passed from the Oracle database to the client.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader.GetChars%2A&gt;</ph> 의 청크를 액세스 하는 메서드는 <ph id="ph2">`LOB`</ph> 값을 값의 전체 내용을 Oracle 데이터베이스에서 클라이언트에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>To obtain an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object, call the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt;</ph> method.</source>
          <target state="translated">가져올 수는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체를 호출 하는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>You can construct an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that is NULL using this format:</source>
          <target state="translated">생성할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 이 형식을 사용 하 여 NULL입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This technique is used primarily to test whether a <ph id="ph1">`LOB`</ph> returned from the server is NULL, as this example illustrates:</source>
          <target state="translated">이 방법은 테스트 하는 데 주로 사용 됩니다 여부는 <ph id="ph1">`LOB`</ph> 이 예제와 같이 서버에서 반환이 NULL 이면:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>A NULL <ph id="ph1">`LOB`</ph> behaves similarly to a zero-byte <ph id="ph2">`LOB`</ph> in that <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> succeeds and always returns zero bytes.</source>
          <target state="translated">NULL <ph id="ph1">`LOB`</ph> 0 바이트 비슷하게 <ph id="ph2">`LOB`</ph> 한다는 점에서 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 성공 하 고 항상 0 바이트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Selecting a <ph id="ph1">`LOB`</ph> column that contains a null value returns <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Null&gt;</ph>.</source>
          <target state="translated">선택 하는 <ph id="ph1">`LOB`</ph> null 값이 포함 된 열을 반환 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Null&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>You must begin a transaction before obtaining a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">임시 얻기 전에 트랜잭션을 시작 해야 <ph id="ph1">`LOB`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> may fail to obtain data later.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> 주소를 나중에 데이터를 가져오지 못할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>You can also open a temporary <ph id="ph1">`LOB`</ph> in Oracle by calling the DBMS_LOB.CREATETEMPORARY system stored procedure and binding a <ph id="ph2">`LOB`</ph> output parameter.</source>
          <target state="translated">임시를 열 수도 있습니다 <ph id="ph1">`LOB`</ph> 는 DBMS_LOB를 호출 하 여 Oracle에서 합니다. CREATETEMPORARY 시스템 저장 프로시저 및 바인딩은 <ph id="ph2">`LOB`</ph> 출력 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>On the client side, a temporary <ph id="ph1">`LOB`</ph> behaves like a table-based <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">클라이언트 쪽에서는 임시 <ph id="ph1">`LOB`</ph> 테이블 기반 처럼 동작 <ph id="ph2">`LOB`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>For example, to update the temporary <ph id="ph1">`LOB`</ph>, it must be enclosed in a transaction.</source>
          <target state="translated">예를 들어, 임시 업데이트할 <ph id="ph1">`LOB`</ph>, 트랜잭션에 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The following C# example demonstrates how to open a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">다음 C# 예제에서는 임시를 여는 방법을 보여 줍니다 <ph id="ph1">`LOB`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>The inherited <ph id="ph1">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph> method fails if used with character data, and an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">상속 된 <ph id="ph1">&lt;xref:System.IO.Stream.WriteByte%2A&gt;</ph> 문자 데이터로 사용 되는 경우 메서드는 및 <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph> method instead.</source>
          <target state="translated">대신 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>Temporary <ph id="ph1">`LOB`</ph>s are only closed when the connection is closed, but with pooling and under load, temporary <ph id="ph2">`LOB`</ph>s do not close.</source>
          <target state="translated">임시 <ph id="ph1">`LOB`</ph>연결이 종료 되 면 닫힌 닫히지만 풀링 사용 하며 부하에서는 임시 <ph id="ph2">`LOB`</ph>않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.OracleClient.OracleLob">
          <source>This can be resolved by disposing the temporary <ph id="ph1">`LOB`</ph>, by invoking <ph id="ph2">`tempLob.Dispose()`</ph>.</source>
          <target state="translated">임시 삭제 하 여이 해결할 수 있습니다 <ph id="ph1">`LOB`</ph>를 호출 하 여 <ph id="ph2">`tempLob.Dispose()`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> from which to append data.</source>
          <target state="translated">데이터를 추가할 원본 <ph id="ph1">&lt;see langword="LOB" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>Appends data from the specified <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> to the current <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see langword="LOB" /&gt;</ph>에서 현재 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>까지 데이터를 추가합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">에 쓸 수는 <ph id="ph1">`LOB`</ph>를 검색 해야 합니다는 <ph id="ph2">`LOB`</ph> 에서 SQL SELECT 문에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>All data from the source <ph id="ph1">`LOB`</ph> is appended to the end of the current <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">모든 데이터 소스에서 <ph id="ph1">`LOB`</ph> 현재 끝에 추가 <ph id="ph2">`LOB`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The position of neither <ph id="ph1">`LOB`</ph> is evaluated or changed during this process.</source>
          <target state="translated">둘 다의 위치 <ph id="ph1">`LOB`</ph> 을 평가 하거나이 프로세스 중에 변경 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">기본 데이터 형식이 항상 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>For example, if you are appending from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">예:에서 추가 하는 경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, 대상 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 수도 있어야는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">이 릴리스에 대 한 쓰기 작업에는 읽기 전용 <ph id="ph1">`LOB`</ph> 성공할 수 있지만 업데이트 되지 않는 <ph id="ph2">`LOB`</ph> 서버에 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">그러나이 경우의 로컬 복사본이 <ph id="ph1">`LOB`</ph> 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">따라서 나중에 읽기 작업에는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체 쓰기 작업의 결과 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is null.</source>
          <target state="translated">소스 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is null, or the connection is closed.</source>
          <target state="translated">소스 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>가 null이거나 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object was closed or disposed.</source>
          <target state="translated">소스 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Prevents server-side triggers from firing while performing multiple write operations.</source>
          <target state="translated">쓰기 작업을 여러 개 수행하는 동안 서버 측 트리거가 발생하는 것을 막습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Prevents server-side triggers from firing while performing multiple read operations.</source>
          <target state="translated">읽기 작업을 여러 개 수행하는 동안 서버 측 트리거가 발생하는 것을 막습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Opens the <ph id="ph1">`LOB`</ph> in <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly&gt;</ph> mode; therefore, the <ph id="ph3">`LOB`</ph> can only be read from, not written to, until the corresponding call to <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph>.</source>
          <target state="translated">열립니다는 <ph id="ph1">`LOB`</ph> 에 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly&gt;</ph> 모드 이므로는 <ph id="ph3">`LOB`</ph> 읽을 수만 있고, 해당 호출 될 때까지,에 기록 되지 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>To perform batch writes to the <ph id="ph1">`LOB`</ph>, call <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite&gt;</ph>.</source>
          <target state="translated">일괄 처리에 대 한 쓰기를 수행 하는 <ph id="ph1">`LOB`</ph>, 호출 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> 와 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> 동일한 트랜잭션 내에서 한 번 현재 throw Oracle "또는 22293: 동일한 트랜잭션 내에서 이미 열려 LOB" 오류입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>In addition, if you obtain the <ph id="ph1">`LOB`</ph> using another <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>, and the original caller has not called the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method, the same error is generated.</source>
          <target state="translated">또한 가져와야 하는 경우는 <ph id="ph1">`LOB`</ph> 다른를 사용 하 여 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>, 원래 호출자가 호출 하 고는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> 메서드를 같은 오류가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method when you are finished using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">따라서 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> 했으면 메서드를 사용 하는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>The connection is closed.</source>
          <target state="translated">연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Mode (one of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLobOpenMode" /&gt;</ph> values) in which the <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> can be accessed between this <ph id="ph3">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /&gt;</ph> call and the corresponding <ph id="ph4">&lt;see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /&gt;</ph> call.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLobOpenMode" /&gt;</ph> 호출과 해당하는 <ph id="ph3">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /&gt;</ph> 호출 사이에서 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>에 액세스할 수 있는 모드(<ph id="ph4">&lt;see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /&gt;</ph> 값 중 하나)입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Prevents server-side triggers from firing while performing multiple read and write operations in the specified access mode.</source>
          <target state="translated">지정된 액세스 모드에서 읽기 및 쓰기 작업을 여러 개 수행하는 동안 서버 측 트리거가 발생하는 것을 막습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">에 쓸 수는 <ph id="ph1">`LOB`</ph>를 검색 해야 합니다는 <ph id="ph2">`LOB`</ph> 에서 SQL SELECT 문에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> 동일한 트랜잭션 내에서 한 번 현재 throw Oracle "또는 22293: 동일한 트랜잭션 내에서 이미 열려 LOB" 오류입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>In addition, if you obtain the <ph id="ph1">`LOB`</ph> using another <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>, and the original caller has not called the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method, the same error is generated.</source>
          <target state="translated">또한 가져와야 하는 경우는 <ph id="ph1">`LOB`</ph> 다른를 사용 하 여 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph>, 원래 호출자가 호출 하 고는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> 메서드를 같은 오류가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> method when you are finished using the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">따라서 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.EndBatch%2A&gt;</ph> 했으면 메서드를 사용 하는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>The connection is closed.</source>
          <target state="translated">연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.CanRead">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> stream can be read.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="LOB" /&gt;</ph> 스트림을 읽을 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> stream supports reading, otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph> if a <ph id="ph4">&lt;see langword="LOB" /&gt;</ph> is closed or disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 스트림이 읽기를 지원하면 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>이고, <ph id="ph3">&lt;see langword="false" /&gt;</ph>가 닫혀 있거나 삭제되었으면 <ph id="ph4">&lt;see langword="LOB" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.CanSeek">
          <source>Gets a value indicating whether forward and backward seek operations can be performed.</source>
          <target state="translated">앞으로 및 뒤로 검색 작업이 수행될 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanSeek">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if a <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> is closed or disposed, otherwise <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>가 닫혀 있거나 삭제되었으면 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanSeek">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph> for <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleLob.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleLob.Null" /&gt;</ph>에 대해 항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.CanWrite">
          <source>Always returns true, regardless of whether the <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> supports writing or not.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="LOB" /&gt;</ph>가 쓰기를 지원하는지 여부에 관계 없이 항상 true를 반환합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanWrite">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>, regardless of whether an opened or undisposed <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> supports writing or not, <ph id="ph3">&lt;see langword="false" /&gt;</ph> if a <ph id="ph4">&lt;see langword="LOB" /&gt;</ph> is closed or disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 열려 있거나 삭제되지 않았으면 쓰기를 지원하는지 여부와 관계없이 항상 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>이고, <ph id="ph3">&lt;see langword="false" /&gt;</ph>가 닫혀 있거나 삭제되었으면 <ph id="ph4">&lt;see langword="LOB" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.CanWrite">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have started a local transaction.</source>
          <target state="translated">에 쓸 수는 <ph id="ph1">`LOB`</ph>를 검색 해야 합니다는 <ph id="ph2">`LOB`</ph> 에서 SQL SELECT 문에 FOR UPDATE 절을 사용 하 여 시작 해야 로컬 트랜잭션을 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Gets a value indicating the minimum number of bytes to retrieve from or send to the server during a read/write operation.</source>
          <target state="translated">읽기/쓰기 작업 중에 서버에서 검색하거나 서버로 보낼 최소 바이트 수를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The minimum number of bytes to retrieve or send.</source>
          <target state="translated">검색하거나 보낼 최소 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The value returned by the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph> property is not a setting of the .NET Framework Data Provider for Oracle.</source>
          <target state="translated">반환한 값은 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph> 속성은.NET Framework Data Provider for Oracle의 설정이 아닙니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Instead, it is the value that the Oracle Call Interface (OCI) uses when communicating with the server.</source>
          <target state="translated">대신, 호출 인터페이스 OCI (Oracle) 서버와 통신할 때 사용 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph> to ensure that client-side chunks are the same size.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.ChunkSize%2A&gt;</ph> 클라이언트 쪽 청크 크기가 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>Reading or writing in smaller chunks does not cache data, and causes a less-optimized round trip to the server, because a full packet is not received or sent.</source>
          <target state="translated">읽기 또는 쓰기를 더 작은 청크로 데이터를 캐시 하지 않습니다 및 전체 패킷은 연결이 수신 되거나 전송 되지 때문에 서버에 없는 액세스에 최적화 된 왕복이 발생 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The connection is closed.</source>
          <target state="translated">연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.ChunkSize">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object that references the same Oracle <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> as the original <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object.</source>
          <target state="translated">원래 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체와 같은 Oracle <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>를 참조하는 새 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object that references the same Oracle <ph id="ph2">&lt;see langword="LOB" /&gt;</ph> as the original <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object.</source>
          <target state="translated">원래 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체와 같은 Oracle <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>를 참조하는 새 <ph id="ph3">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>The properties of the new <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object initially have the same values as those of the original object.</source>
          <target state="translated">새 속성 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체는 처음 원래 개체의 하는 것과 동일한 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>However, after the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Clone%2A&gt;</ph> is complete, each <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object is independent from the other.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Clone%2A&gt;</ph> 완료 되 면 각 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체와는 다른 독립적인 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>For example, changing the value of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> property on the original <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> does not change the value of <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> on the copy.</source>
          <target state="translated">예를 들어, 값을 변경는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> 원래 속성 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 의 값을 변경 하지 않는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> 복사본에 대해 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>The connection is closed.</source>
          <target state="translated">연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Clone">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Connection">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph> used by this instance of the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleConnection" /&gt;</ph>의 이 인스턴스에서 사용되는 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Connection">
          <source>The connection to a data source.</source>
          <target state="translated">데이터 소스와의 연결입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Connection">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>에서 대상 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>로 복사합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>에서 대상 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>로 복사합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The number of bytes copied.</source>
          <target state="translated">복사한 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>This excludes any padded bytes.</source>
          <target state="translated">이것은 채워진 모든 바이트를 제외합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">기본 데이터 형식이 항상 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>For example, if you are copying from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">예를 들어에서 복사 하는 경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, 대상 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 수도 있어야는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">대상 오프셋은 대상의 끝을 넘어 <ph id="ph1">`LOB`</ph>, <ph id="ph2">`LOB`</ph> 데이터가 복사 되는 확장 되었습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The space between the end of the <ph id="ph1">`LOB`</ph> and the destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">끝 사이 공백을 <ph id="ph1">`LOB`</ph> 대상 오프셋 끝 다음에 대 한 0으로 채워서 및 <ph id="ph2">`BLOB`</ph> 데이터 형식 및에 대 한 공간 <ph id="ph3">`CLOB`</ph> 및 <ph id="ph4">`NCLOB`</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">에 쓸 수는 <ph id="ph1">`LOB`</ph>를 검색 해야 합니다는 <ph id="ph2">`LOB`</ph> 에서 SQL SELECT 문에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">이 릴리스에 대 한 쓰기 작업에는 읽기 전용 <ph id="ph1">`LOB`</ph> 성공할 수도 있지만 업데이트할는 <ph id="ph2">`LOB`</ph> 서버에 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> will be updated.</source>
          <target state="translated">그러나이 경우의 로컬 복사본이 <ph id="ph1">`LOB`</ph> 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">따라서 나중에 읽기 작업에는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체 쓰기 작업의 결과 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated"><ph id="ph1">`CopyTo`</ph> 메서드는 대상의 내용을 지우지 않습니다 <ph id="ph2">`OracleLob`</ph> 복사 작업을 수행 하기 전에.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> specified in the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> parameter is null.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="destination" /&gt;</ph> 매개 변수에 지정된 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">작업이 트랜잭션에 속하지 않거나, <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체가 null이거나, 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph></source>
          <target state="translated">대상 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The offset to which to copy.</source>
          <target state="translated">복사할 대상 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 경우 짝수 바이트여야 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> with the specified amount of data.</source>
          <target state="translated">지정된 양의 데이터로 이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>에서 대상 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>로 복사합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The number of bytes copied.</source>
          <target state="translated">복사한 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>This excludes any padded bytes.</source>
          <target state="translated">이것은 채워진 모든 바이트를 제외합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">기본 데이터 형식이 항상 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>For example, if you are copying from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">예를 들어에서 복사 하는 경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, 대상 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 수도 있어야는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">대상 오프셋은 대상의 끝을 넘어 <ph id="ph1">`LOB`</ph>, <ph id="ph2">`LOB`</ph> 데이터가 복사 되는 확장 되었습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The space between the end of <ph id="ph1">`LOB`</ph> and destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">끝 사이 공백을 <ph id="ph1">`LOB`</ph> 대상 오프셋 끝 다음에 대 한 0으로 채워서 및 <ph id="ph2">`BLOB`</ph> 데이터 형식 및에 대 한 공간 <ph id="ph3">`CLOB`</ph> 및 <ph id="ph4">`NCLOB`</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">에 쓸 수는 <ph id="ph1">`LOB`</ph>를 검색 해야 합니다는 <ph id="ph2">`LOB`</ph> 에서 SQL SELECT 문에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">이 릴리스에 대 한 쓰기 작업에는 읽기 전용 <ph id="ph1">`LOB`</ph> 성공할 수 있지만 업데이트 되지 않는 <ph id="ph2">`LOB`</ph> 서버에 있습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">그러나이 경우의 로컬 복사본이 <ph id="ph1">`LOB`</ph> 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">따라서 나중에 읽기 작업에는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체 쓰기 작업의 결과 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated"><ph id="ph1">`CopyTo`</ph> 메서드는 대상의 내용을 지우지 않습니다 <ph id="ph2">`OracleLob`</ph> 복사 작업을 수행 하기 전에.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> specified in the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> parameter is full.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="destination" /&gt;</ph> 매개 변수에서 지정한 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="destinationOffset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationOffset" /&gt;</ph> 매개 변수에 지정된 값이 0보다 작거나 4GB보다 큰 경우</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="destinationOffset" /&gt;</ph> parameter for a <ph id="ph2">&lt;see langword="CLOB" /&gt;</ph> or <ph id="ph3">&lt;see langword="NCLOB" /&gt;</ph> data type is not even.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="CLOB" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 <ph id="ph1">&lt;paramref name="destinationOffset" /&gt;</ph> 매개 변수에서 지정된 값이 짝수가 아닌 경우</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>You must specify <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types as an even number of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식을 짝수 바이트로 지정해야 하는 경우</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">작업이 트랜잭션에 속하지 않거나, <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체가 null이거나, 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The offset from which to copy.</source>
          <target state="translated">복사할 소스 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 경우 짝수여야 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph><ph id="ph2">&lt;see cref="N:System.Data.OracleClient" /&gt;</ph>.</source>
          <target state="translated">대상 <ph id="ph1">&lt;see langword="OracleLob" /&gt;</ph><ph id="ph2">&lt;see cref="N:System.Data.OracleClient" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The destination offset to which to copy.</source>
          <target state="translated">복사할 대상 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 경우 짝수여야 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The quantity of data, in bytes, to copy.</source>
          <target state="translated">복사할 데이터 양(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 경우 짝수여야 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>Copies from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> to a destination <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> with the specified amount of data, and the source offset.</source>
          <target state="translated">지정된 양의 데이터 및 소스 오프셋으로 이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>에서 대상 <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>로 복사합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The number of bytes copied.</source>
          <target state="translated">복사한 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>This excludes any padded bytes.</source>
          <target state="translated">이것은 채워진 모든 바이트를 제외합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The underlying data types must always be the same.</source>
          <target state="translated">기본 데이터 형식이 항상 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>For example, if you are copying from an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, the destination <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must also be an <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>.</source>
          <target state="translated">예를 들어에서 복사 하는 경우는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>, 대상 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 수도 있어야는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>If the destination offset is beyond the end of destination <ph id="ph1">`LOB`</ph>, the <ph id="ph2">`LOB`</ph> to which the data is being copied is extended.</source>
          <target state="translated">대상 오프셋은 대상의 끝을 넘어 <ph id="ph1">`LOB`</ph>, <ph id="ph2">`LOB`</ph> 데이터가 복사 되는 확장 되었습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The space between the end of <ph id="ph1">`LOB`</ph> and destination offset beyond the end is padded with zeros for <ph id="ph2">`BLOB`</ph> data types and spaces for <ph id="ph3">`CLOB`</ph> and <ph id="ph4">`NCLOB`</ph> data types.</source>
          <target state="translated">끝 사이 공백을 <ph id="ph1">`LOB`</ph> 대상 오프셋 끝 다음에 대 한 0으로 채워서 및 <ph id="ph2">`BLOB`</ph> 데이터 형식 및에 대 한 공간 <ph id="ph3">`CLOB`</ph> 및 <ph id="ph4">`NCLOB`</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">에 쓸 수는 <ph id="ph1">`LOB`</ph>를 검색 해야 합니다는 <ph id="ph2">`LOB`</ph> 에서 SQL SELECT 문에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">이 릴리스에 대 한 쓰기 작업에는 읽기 전용 <ph id="ph1">`LOB`</ph> 성공할 수 있지만 업데이트 되지 않는 <ph id="ph2">`LOB`</ph> 서버에 있습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">그러나이 경우의 로컬 복사본이 <ph id="ph1">`LOB`</ph> 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">따라서 나중에 읽기 작업에는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체 쓰기 작업의 결과 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The <ph id="ph1">`CopyTo`</ph> method does not clear the contents of the destination <ph id="ph2">`OracleLob`</ph> before performing the copy operation.</source>
          <target state="translated"><ph id="ph1">`CopyTo`</ph> 메서드는 대상의 내용을 지우지 않습니다 <ph id="ph2">`OracleLob`</ph> 복사 작업을 수행 하기 전에.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> specified in the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> parameter is full.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="destination" /&gt;</ph> 매개 변수에서 지정한 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="amount" /&gt;</ph>, <ph id="ph2">&lt;paramref name="sourceOffset" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="destinationOffset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="amount" /&gt;</ph>, <ph id="ph2">&lt;paramref name="sourceOffset" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="destinationOffset" /&gt;</ph> 매개 변수에 지정된 값이 0보다 작거나 4GB보다 큰 경우</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="amount" /&gt;</ph>, <ph id="ph2">&lt;paramref name="sourceOffset" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="destinationOffset" /&gt;</ph> parameter for a <ph id="ph4">&lt;see langword="CLOB" /&gt;</ph> or <ph id="ph5">&lt;see langword="NCLOB" /&gt;</ph> data type is not even.</source>
          <target state="translated"><ph id="ph4">&lt;see langword="CLOB" /&gt;</ph> 또는 <ph id="ph5">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 <ph id="ph1">&lt;paramref name="amount" /&gt;</ph>, <ph id="ph2">&lt;paramref name="sourceOffset" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="destinationOffset" /&gt;</ph> 매개 변수에서 지정된 값이 짝수가 아닌 경우</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">작업이 트랜잭션에 속하지 않거나, <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체가 null이거나, 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>Allows server-side triggers to resume firing after performing multiple write operations.</source>
          <target state="translated">쓰기 작업을 여러 개 수행하는 동안 서버 측 트리거가 다시 발생하게 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>Call the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> method before you begin performing write operations on the <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.BeginBatch%2A&gt;</ph> 메서드를 시작 하기 전에 쓰기 작업에는 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>The connection is closed.</source>
          <target state="translated">연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.EndBatch">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="T:System.Data.OracleClient.OracleLob">
          <source>Erases data from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>에서 데이터를 지웁니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>Erases all data from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>에서 모든 데이터를 지웁니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The number of bytes erased.</source>
          <target state="translated">지운 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> does not truncate data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> 데이터를 잘라내지 않습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The <ph id="ph1">`LOB`</ph> length remains the same for a <ph id="ph2">`BLOB`</ph> data type, and the erased data is replaced by 0x00.</source>
          <target state="translated"><ph id="ph1">`LOB`</ph> 길이 대 한 동일 하 게 유지는 <ph id="ph2">`BLOB`</ph> 데이터 형식, 삭제 된 데이터는 0x00 대체 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source><ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types are replaced by spaces.</source>
          <target state="translated"><ph id="ph1">`CLOB`</ph> 및 <ph id="ph2">`NCLOB`</ph> 데이터 형식은 공백으로 대체 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">에 쓸 수는 <ph id="ph1">`LOB`</ph>를 검색 해야 합니다는 <ph id="ph2">`LOB`</ph> 에서 SQL SELECT 문에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">이 릴리스에 대 한 쓰기 작업에는 읽기 전용 <ph id="ph1">`LOB`</ph> 성공할 수 있지만 업데이트 되지 않는 <ph id="ph2">`LOB`</ph> 서버에 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">그러나이 경우의 로컬 복사본이 <ph id="ph1">`LOB`</ph> 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">따라서 나중에 읽기 작업에는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체 쓰기 작업의 결과 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">작업이 트랜잭션에 속하지 않거나, <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체가 null이거나, 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The offset from which to erase.</source>
          <target state="translated">지울 소스 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 경우 짝수여야 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The quantity of data, in bytes, to erase.</source>
          <target state="translated">지울 데이터 양(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 경우 짝수여야 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>Erases the specified amount of data from this <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>에서 지정된 양의 데이터를 지웁니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The number of bytes erased.</source>
          <target state="translated">지운 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The sum of the values in the <ph id="ph1">`offset`</ph> and <ph id="ph2">`amount`</ph> parameters can be greater than that of the size of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">에 있는 값의 합계는 <ph id="ph1">`offset`</ph> 및 <ph id="ph2">`amount`</ph> 매개 변수 크기 보다 클 수는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>Therefore, specifying a value greater than that returned by the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Length%2A&gt;</ph> property succeeds; however <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> only erases to the end of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.</source>
          <target state="translated">하지만 따라서 반환한 보다 큰 값을 지정 하는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Length%2A&gt;</ph> 속성 성공 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> 의 끝에만 삭제는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>(Similarly, if a negative value is passed to <ph id="ph1">`offset`</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> will succeed, but only erase starting from the beginning of the <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.) This behavior is different from that of the <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph> methods, and offers the advantage of being able to erase all data from the value specified by <ph id="ph6">`offset`</ph> without making an additional roundtrip to the server to verify the actual size.</source>
          <target state="translated">(음수 값이 전달 하는 경우에 이와 비슷하게 <ph id="ph1">`offset`</ph>, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> 성공 하지만의 시작 부분부터만 지웁니다 됩니다는 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph>.) 이 동작은 다른는 <ph id="ph4">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Data.OracleClient.OracleLob.Write%2A&gt;</ph> 메서드 및 지정 된 값에서 모든 데이터를 지울 수 있다는 이점이 제공 <ph id="ph6">`offset`</ph> 실제 크기를 확인 하려면 서버에 추가 왕복을 수행 하지 않고 있습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> does not truncate data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Erase%2A&gt;</ph> 데이터를 잘라내지 않습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The <ph id="ph1">`LOB`</ph> length remains the same for a <ph id="ph2">`BLOB`</ph> data type, and the erased data is replaced by 0x00.</source>
          <target state="translated"><ph id="ph1">`LOB`</ph> 길이 대 한 동일 하 게 유지는 <ph id="ph2">`BLOB`</ph> 데이터 형식, 삭제 된 데이터는 0x00 대체 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source><ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types are replaced by spaces.</source>
          <target state="translated"><ph id="ph1">`CLOB`</ph> 및 <ph id="ph2">`NCLOB`</ph> 데이터 형식은 공백으로 대체 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">에 쓸 수는 <ph id="ph1">`LOB`</ph>를 검색 해야 합니다는 <ph id="ph2">`LOB`</ph> 에서 SQL SELECT 문에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>In this release, a write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">이 릴리스에 대 한 쓰기 작업에는 읽기 전용 <ph id="ph1">`LOB`</ph> 성공할 수 있지만 업데이트 되지 않는 <ph id="ph2">`LOB`</ph> 서버에 있습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">그러나이 경우의 로컬 복사본이 <ph id="ph1">`LOB`</ph> 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">따라서 나중에 읽기 작업에는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체 쓰기 작업의 결과 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">작업이 트랜잭션에 속하지 않거나, <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체가 null이거나, 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Flush">
          <source>Not currently supported.</source>
          <target state="translated">현재 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Flush">
          <source>In this release, this method is not functional.</source>
          <target state="translated">이 릴리스에서이 메서드가 작동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source>Gets a value indicating whether an application called the <ph id="ph1">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /&gt;</ph> method.</source>
          <target state="translated">응용 프로그램이 <ph id="ph1">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /&gt;</ph> 메서드를 호출했는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if application called the <ph id="ph2">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /&gt;</ph> method, otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">응용 프로그램에서 <ph id="ph2">&lt;see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /&gt;</ph> 메서드를 호출했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source>When using an Oracle 8.0.5 server, an Oracle "ORA-00600: internal error code" exception is thrown.</source>
          <target state="translated">Oracle 8.0.5 Oracle 서버를 사용 하는 경우 "또는 00600: 내부 오류 코드" 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsBatched">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsNull">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> 스트림인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsNull">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a <ph id="ph3">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> stream, otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>가 <ph id="ph3">&lt;see cref="F:System.Data.OracleClient.OracleBFile.Null" /&gt;</ph> 스트림이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a temporary <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>가 임시 <ph id="ph2">&lt;see langword="LOB" /&gt;</ph>인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> is a temporary <ph id="ph3">&lt;see langword="LOB" /&gt;</ph>, otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>가 임시 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 <ph id="ph3">&lt;see langword="LOB" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>The following example demonstrates how to create a temporary <ph id="ph1">`LOB`</ph>.</source>
          <target state="translated">다음 예제에서는 임시 하 <ph id="ph1">`LOB`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>The connection is closed.</source>
          <target state="translated">연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.IsTemporary">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>Gets a value that returns the size of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>의 크기를 반환하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The size of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> in bytes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph>의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The size of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> is always returned in bytes for all data types.</source>
          <target state="translated">크기는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 항상 모든 데이터 형식에 대 한 바이트 단위로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The connection is closed.</source>
          <target state="translated">연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Length">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>Gets a value that returns the <ph id="ph1">&lt;see langword="LOB" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="LOB" /&gt;</ph> 데이터 형식을 반환하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleType" /&gt;</ph><ph id="ph2">&lt;see langword="LOB" /&gt;</ph> data types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleType" /&gt;</ph><ph id="ph2">&lt;see langword="LOB" /&gt;</ph> 데이터 형식 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> may be one of the following <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph> data types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 다음 중 하나일 수 있습니다 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType&gt;</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>OracleType data type</source>
          <target state="translated">OracleType 데이터 형식</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An Oracle <ph id="ph1">`BLOB`</ph> data type that contains binary data with a maximum size of 4 gigabytes.</source>
          <target state="translated">이진 데이터를 포함하는 Oracle <ph id="ph1">`BLOB`</ph> 데이터 형식으로, 최대 크기는 4GB입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>This maps to an <ph id="ph1">&lt;xref:System.Array&gt;</ph> of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</source>
          <target state="translated">이는 <ph id="ph1">&lt;xref:System.Array&gt;</ph> 형식의 <ph id="ph2">&lt;xref:System.Byte&gt;</ph>에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An Oracle <ph id="ph1">`CLOB`</ph> data type that contains character data, based on the default character set on the server, with a maximum size of 4 gigabytes.</source>
          <target state="translated">문자 데이터를 포함하는 Oracle <ph id="ph1">`CLOB`</ph> 데이터 형식으로, 서버의 기본 문자 집합을 기반으로 하며 최대 크기는 4GB입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">이는 <ph id="ph1">&lt;xref:System.String&gt;</ph>에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>An Oracle <ph id="ph1">`NCLOB`</ph> data type that contains character data, based on the national character set on the server with a maximum size of 4 gigabytes.</source>
          <target state="translated">Oracle <ph id="ph1">`NCLOB`</ph> 국가별 문자 집합에 4gb의 최대 크기를 사용 하 여 서버를 기반으로 문자 데이터를 포함 하는 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.LobType">
          <source>This maps to <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">이는 <ph id="ph1">&lt;xref:System.String&gt;</ph>에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>Represents a null <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object.</source>
          <target state="translated">null <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>You can construct an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that is NULL using this format:</source>
          <target state="translated">생성할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 이 형식을 사용 하 여 NULL입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>This technique is used primarily to test whether a <ph id="ph1">`LOB`</ph> returned from the server is NULL, as this example illustrates:</source>
          <target state="translated">이 방법은 테스트 하는 데 주로 사용 됩니다 여부는 <ph id="ph1">`LOB`</ph> 이 예제와 같이 서버에서 반환이 NULL 이면:</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.OracleClient.OracleLob.Null">
          <source>A NULL <ph id="ph1">`LOB`</ph> behaves similarly to a zero byte <ph id="ph2">`LOB`</ph> in that <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> succeeds and always returns zero bytes.</source>
          <target state="translated">NULL <ph id="ph1">`LOB`</ph> 0 바이트 비슷하게 <ph id="ph2">`LOB`</ph> 한다는 점에서 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 성공 하 고 항상 0 바이트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Gets the current read position in the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 스트림에서 현재 읽기 위치를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The current position within the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 스트림 내의 현재 위치입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The stream must support seeking to get or set the position.</source>
          <target state="translated">스트림이 가져오거나 위치를 설정 하려면 검색을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt;</ph> property to determine whether the stream supports seeking.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.CanSeek%2A&gt;</ph> 스트림이 검색을 지원 하는지 여부를 결정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">스트림의 길이 초과 하는 위치에 검색을 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>Seeking to an odd position for <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types is also supported.</source>
          <target state="translated">에 대 한 홀수 위치까지 검색할 <ph id="ph1">`CLOB`</ph> 및 <ph id="ph2">`NCLOB`</ph> 데이터 형식이 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Position%2A&gt;</ph> 속성 않습니다를 추적 하지 소비 된 생략 되었거나 하는 스트림 또는 둘 다에서 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The connection is closed.</source>
          <target state="translated">연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Position">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When this method returns, the buffer contains the specified byte array with the values between <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> and (<bpt id="p2">&lt;c&gt;</bpt>offset<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>count<ept id="p3">&lt;/c&gt;</ept>) replaced by the bytes read from the current source.</source>
          <target state="translated">이 메서드가 반환될 때 이 메서드가 반환될 때 현재 소스에서 읽은 바이트로 대체되는 (<bpt id="p2">&lt;c&gt;</bpt>오프셋<ept id="p2">&lt;/c&gt;</ept><ph id="ph1"> + </ph><bpt id="p3">&lt;c&gt;</bpt>카운트<ept id="p3">&lt;/c&gt;</ept>)과 <bpt id="p1">&lt;c&gt;</bpt>오프셋<ept id="p1">&lt;/c&gt;</ept> 사이의 값을 가진 지정된 바이트 배열을 포함합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from the current stream.</source>
          <target state="translated">현재 스트림에서 읽은 데이터를 저장하기 시작하는 <bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept>의 바이트 오프셋(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 경우 짝수여야 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to be read from the current stream.</source>
          <target state="translated">현재 스트림에서 읽을 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 경우 짝수여야 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a sequence of bytes from the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream and advances the position within the stream by the number of bytes read.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 스트림에서 바이트의 시퀀스를 읽은 다음 읽은 바이트 수만큼 스트림 내에서 위치를 앞으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">버퍼로 읽어온 총 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This may be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</source>
          <target state="translated">이 바이트 수는 현재 바이트가 충분하지 않은 경우 요청된 바이트 수보다 작을 수 있으며 스트림의 끝에 도달하면 0이 됩니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> method reads a maximum of <ph id="ph2">`count`</ph> bytes from the current stream and stores them in <ph id="ph3">`buffer`</ph> beginning at <ph id="ph4">`offset`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 메서드 최대 읽습니다 <ph id="ph2">`count`</ph> 바이트 스트림에에 저장 하 고 <ph id="ph3">`buffer`</ph> 에서 시작 <ph id="ph4">`offset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</source>
          <target state="translated">스트림 내의 현재 위치는; 읽은 바이트 수로 앞에 그러나 예외가 발생할 경우 스트림 내의 현재 위치 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> returns the number of bytes read.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 읽은 바이트 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The return value is zero only if the position is currently at the end of the stream.</source>
          <target state="translated">위치가 스트림의 끝에 현재 있는 경우에 반환 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> will block until at least one byte of data can be read, in the event that no data is available.<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 데이터가 없는 경우 최소한 1 바이트의 데이터를 읽을 수 있고 될 때까지 차단 됩니다.<ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>returns 0 if you attempt to read from a <ph id="ph1">`LOB`</ph> when the current position is at the end of <ph id="ph2">`LOB`</ph>.</source>
          <target state="translated">읽을 하려고 하면 0을 반환 합니다.는 <ph id="ph1">`LOB`</ph> 끝날 때 현재 위치가 표시 되는 경우 <ph id="ph2">`LOB`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> can return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 스트림의 끝에 도달 하지 하는 경우에 요청 된 것 보다 적은 바이트를 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">모든.NET Framework Data Provider for Oracle 처리 <ph id="ph1">`CLOB`</ph> 및 <ph id="ph2">`NCLOB`</ph> 유니코드 데이터입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">따라서에 액세스할 때 <ph id="ph1">`CLOB`</ph> 및 <ph id="ph2">`NCLOB`</ph> 데이터 형식, 항상 처리할 각 문자는 2 바이트 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`Read`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">예를 들어 3 개의 문자가 포함 된 텍스트 문자열으로 저장 됩니다는 <ph id="ph1">`NCLOB`</ph> 문자 집합은 4 바이트 문자 당 하 고 사용자가 수행할 수 있는 Oracle 서버에는 <ph id="ph2">`Read`</ph> 작업은 없지만 6 바이트로 문자열의 길이 지정 서버에서 12 바이트로 저장 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following C# example demonstrates how to read <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objects.</source>
          <target state="translated">다음 C# 예제 읽는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>You can construct an <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that is NULL using this format:</source>
          <target state="translated">생성할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 이 형식을 사용 하 여 NULL입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This technique is used primarily to test whether a <ph id="ph1">`LOB`</ph> returned from the server is NULL, as the following example illustrates.</source>
          <target state="translated">이 방법은 테스트 하는 데 주로 사용 됩니다 여부는 <ph id="ph1">`LOB`</ph> 다음 예제와 같이 NULL 이면 서버에서 반환 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A NULL <ph id="ph1">`LOB`</ph> behaves similarly to a zero byte <ph id="ph2">`LOB`</ph> in that <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> succeeds and always returns zero bytes.</source>
          <target state="translated">NULL <ph id="ph1">`LOB`</ph> 0 바이트 비슷하게 <ph id="ph2">`LOB`</ph> 한다는 점에서 <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 성공 하 고 항상 0 바이트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 null 참조(Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A value in the <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameter is not positive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 매개 변수의 값이 양수가 아닌 경우</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The sum of the offset and count parameters is larger than the buffer length.</source>
          <target state="translated">오프셋과 카운트 매개 변수의 합계가 버퍼 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="amount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="amount" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> 매개 변수에 지정된 값이 0보다 작거나 4GB보다 큰 경우</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">작업이 트랜잭션에 속하지 않거나, <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체가 null이거나, 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A byte offset relative to origin.</source>
          <target state="translated">원본에 상대적인 바이트 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is negative, the new position precedes the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> by the number of bytes specified by <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 음수인 경우 새 위치는 <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>에 의해 지정된 바이트 수만큼 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept>으로 지정된 위치 앞에 옵니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is zero, the new position is the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 0인 경우 새 위치는 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept>으로 지정된 위치입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> is positive, the new position follows the position specified by <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept> by the number of bytes specified by <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept>이 양수인 경우 새 위치는 <bpt id="p3">&lt;c&gt;</bpt>offset<ept id="p3">&lt;/c&gt;</ept>에 의해 지정된 바이트 수만큼 <bpt id="p2">&lt;c&gt;</bpt>origin<ept id="p2">&lt;/c&gt;</ept>으로 지정된 위치 뒤에 옵니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> indicating the reference point used to obtain the new position.</source>
          <target state="translated">새 위치를 가져오는 데 사용되는 참조 위치를 나타내는 <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the position on the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 스트림에서 위치를 설정합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position within the current stream.</source>
          <target state="translated">현재 스트림 내의 새 위치입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position must precede the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`offset`</ph> 가 음수 이면 새 위치 앞에 야로 지정 된 위치 <ph id="ph2">`origin`</ph> 에 지정 된 바이트 수로 <ph id="ph3">`offset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is zero, the new position must be the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`offset`</ph> 0 이면 새 위치에 지정 된 위치 해야 합니다. <ph id="ph2">`origin`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position must follow the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`offset`</ph> 가 새 위치에 지정 된 위치 따라야 합니다. 양수 <ph id="ph2">`origin`</ph> 에 지정 된 바이트 수로 <ph id="ph3">`offset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">스트림의 길이 초과 하는 위치에 검색을 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Seeking to an odd position for <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types is also supported.</source>
          <target state="translated">에 대 한 홀수 위치까지 검색할 <ph id="ph1">`CLOB`</ph> 및 <ph id="ph2">`NCLOB`</ph> 데이터 형식이 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> property.</source>
          <target state="translated">자세한 내용은 설명 부분을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Read%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The <ph id="ph1">&lt;paramref name="origin" /&gt;</ph> parameter does not contain a valid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="origin" /&gt;</ph> 매개 변수에 유효한 값이 없는 경우</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The resulting position is beyond the length of the value.</source>
          <target state="translated">결과 위치가 값의 길이를 초과하는 경우</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object was closed or disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The desired length of the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream in bytes.</source>
          <target state="translated">원하는 현재 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 스트림의 길이(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 경우 짝수여야 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>Sets the length of the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream to a value less than the current length.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 스트림의 길이를 현재 길이보다 적은 값으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>An attempt to increase the length of the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> stream fails, and returns "Message: ORA-22926: specified trim length is greater than current LOB value's length" from the Oracle server.</source>
          <target state="translated">길이 높이기 위해는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 스트림 실패 하 고 반환 "메시지: 또는 22926: 트림 길이가 현재 LOB 값의 길이 보다 큽니다. 지정 된" Oracle 서버에서 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A stream must support both writing and seeking for <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.SetLength%2A&gt;</ph> to function.</source>
          <target state="translated">스트림이 쓰기와 검색을 모두 지원 해야 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.SetLength%2A&gt;</ph> 함수입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">모든.NET Framework Data Provider for Oracle 처리 <ph id="ph1">`CLOB`</ph> 및 <ph id="ph2">`NCLOB`</ph> 유니코드 데이터입니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">따라서에 액세스할 때 <ph id="ph1">`CLOB`</ph> 및 <ph id="ph2">`NCLOB`</ph> 데이터 형식, 항상 처리할 각 문자는 2 바이트 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`SetLength`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">예를 들어 3 개의 문자가 포함 된 텍스트 문자열으로 저장 됩니다는 <ph id="ph1">`NCLOB`</ph> 문자 집합은 4 바이트 문자 당 하 고 사용자가 수행할 수 있는 Oracle 서버에는 <ph id="ph2">`SetLength`</ph> 작업은 없지만 6 바이트로 문자열의 길이 지정 서버에서 12 바이트로 저장 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">에 쓸 수는 <ph id="ph1">`LOB`</ph>를 검색 해야 합니다는 <ph id="ph2">`LOB`</ph> 에서 SQL SELECT 문에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">한 쓰기 작업에는 읽기 전용 <ph id="ph1">`LOB`</ph> 성공할 수 있지만 업데이트 되지 않는 <ph id="ph2">`LOB`</ph> 서버에 있습니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">그러나이 경우의 로컬 복사본이 <ph id="ph1">`LOB`</ph> 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">따라서 나중에 읽기 작업에는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체 쓰기 작업의 결과 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter for a <ph id="ph2">&lt;see langword="CLOB" /&gt;</ph> or <ph id="ph3">&lt;see langword="NCLOB" /&gt;</ph> data type is not even.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="CLOB" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수에서 지정된 값이 짝수가 아닌 경우</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 매개 변수에 지정된 값이 0보다 작거나 4GB보다 큰 경우</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">작업이 트랜잭션에 속하지 않거나, <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체가 null이거나, 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>Gets the common language runtime stream value equivalent of the underlying value.</source>
          <target state="translated">기본값에 해당하는 공용 언어 런타임 스트림 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Blob" /&gt;</ph>, an array of type <ph id="ph2">&lt;see langword="Byte[]" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Blob" /&gt;</ph>의 경우 <ph id="ph2">&lt;see langword="Byte[]" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Clob" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleType.NClob" /&gt;</ph>, a <ph id="ph3">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Data.OracleClient.OracleType.Clob" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="F:System.Data.OracleClient.OracleType.NClob" /&gt;</ph>의 경우 <ph id="ph3">&lt;see langword="String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For null data, <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph>.</source>
          <target state="translated">null 데이터의 경우 <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Blob&gt;</ph> data types, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> returns the entire underlying data as a contiguous array of type <ph id="ph3">`Byte[]`</ph>.</source>
          <target state="translated">에 대 한 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Blob&gt;</ph> 데이터 형식, <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> 전체 기본 데이터 형식의 연속 배열로 반환 <ph id="ph3">`Byte[]`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Clob&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph> data types, <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> returns all the data as a <ph id="ph4">`String`</ph> data type.</source>
          <target state="translated">에 대 한 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleType.Clob&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.OracleClient.OracleType.NClob&gt;</ph> 데이터 형식, <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> 모든 데이터 반환을 <ph id="ph4">`String`</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>For null data, <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> returns <ph id="ph2">&lt;xref:System.DBNull&gt;</ph>.</source>
          <target state="translated">Null 데이터에 대 한 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph> 반환 <ph id="ph2">&lt;xref:System.DBNull&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>By comparing the returned values, you can distinguish among empty data, null data, and data.</source>
          <target state="translated">반환 된 값을 비교 하 여 구분할 수 있습니다 빈 데이터 간에 데이터 및 데이터는 null입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>A benefit of using <ph id="ph1">`LOB`</ph> data types is the capability to retrieve large amounts of data in chunks at the client.</source>
          <target state="translated">사용 하는 이점은 <ph id="ph1">`LOB`</ph> 데이터 형식의 많은 양의 데이터를 청크로 클라이언트에서 검색할 수 있는 기능입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>However, when you use <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph>, you obtain all the data for the <ph id="ph2">`LOB`</ph> column as one contiguous chunk, which can significantly increase application overhead.</source>
          <target state="translated">그러나 사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob.Value%2A&gt;</ph>에 대 한 모든 데이터를 가져올는 <ph id="ph2">`LOB`</ph> 열으로 응용 프로그램 오버 헤드를 크게 높일 수 있는 하나의 연속 된 청크입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Data.OracleClient.OracleLob.Value">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This method copies the number of bytes specified in <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> from <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept> to the current stream.</source>
          <target state="translated">이 메서드는 <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept>에 지정한 바이트 수를 <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept>에서 현재 스트림으로 복사합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin copying bytes to the current stream.</source>
          <target state="translated">현재 스트림으로 바이트를 복사하기 시작할 <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>의 바이트 오프셋(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 경우 짝수여야 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to be written to the current stream.</source>
          <target state="translated">현재 스트림에 쓸 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types, this must be an even number.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식의 경우 짝수여야 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a sequence of bytes to the current <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream, and advances the current position within this stream by the number of bytes written.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 스트림에 바이트의 시퀀스를 쓰고 이 스트림 내의 현재 위치를 쓰여진 바이트 수만큼 앞으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If the write operation is successful, the position within the stream advances by the number of bytes written.</source>
          <target state="translated">쓰기 작업을 완료 하는 경우 쓴 바이트 수 만큼 스트림 내 위치 이동 합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If an exception occurs, the position within the stream remains unchanged.</source>
          <target state="translated">예외가 발생 하면 스트림 내의 위치 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writing beyond the end of <ph id="ph1">`LOB`</ph> is allowed and enlarges the <ph id="ph2">`LOB`</ph> by the number of bytes written.</source>
          <target state="translated">끝을 넘어 작성 <ph id="ph1">`LOB`</ph> 있으며 확장에서 <ph id="ph2">`LOB`</ph> 쓴 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The .NET Framework Data Provider for Oracle handles all <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data as Unicode.</source>
          <target state="translated">모든.NET Framework Data Provider for Oracle 처리 <ph id="ph1">`CLOB`</ph> 및 <ph id="ph2">`NCLOB`</ph> 유니코드 데이터입니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Therefore, when accessing <ph id="ph1">`CLOB`</ph> and <ph id="ph2">`NCLOB`</ph> data types, you are always dealing with the number of bytes, where each character is 2 bytes.</source>
          <target state="translated">따라서에 액세스할 때 <ph id="ph1">`CLOB`</ph> 및 <ph id="ph2">`NCLOB`</ph> 데이터 형식, 항상 처리할 각 문자는 2 바이트 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For example, if a string of text containing three characters is saved as an <ph id="ph1">`NCLOB`</ph> on an Oracle server where the character set is 4 bytes per character, and you perform a <ph id="ph2">`Write`</ph> operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</source>
          <target state="translated">예를 들어 3 개의 문자가 포함 된 텍스트 문자열으로 저장 됩니다는 <ph id="ph1">`NCLOB`</ph> 문자 집합은 4 바이트 문자 당 하 고 사용자가 수행할 수 있는 Oracle 서버에는 <ph id="ph2">`Write`</ph> 작업은 없지만 6 바이트로 문자열의 길이 지정 서버에서 12 바이트로 저장 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">에 쓸 수는 <ph id="ph1">`LOB`</ph>를 검색 해야 합니다는 <ph id="ph2">`LOB`</ph> 에서 SQL SELECT 문에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The following C# example demonstrates how to write to <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> objects.</source>
          <target state="translated">다음 C# 예제를 작성 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">한 쓰기 작업에는 읽기 전용 <ph id="ph1">`LOB`</ph> 성공할 수 있지만 업데이트 되지 않는 <ph id="ph2">`LOB`</ph> 서버에 있습니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">그러나이 경우의 로컬 복사본이 <ph id="ph1">`LOB`</ph> 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">따라서 나중에 읽기 작업에는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체 쓰기 작업의 결과 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>매개 변수가 null 참조(Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A value in the <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameter is not positive.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 매개 변수의 값이 양수가 아닌 경우</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The sum of the <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> parameters is larger than the <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 매개 변수의 합계가 <ph id="ph3">&lt;paramref name="buffer" /&gt;</ph> 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>A value specified in the <ph id="ph1">&lt;paramref name="count" /&gt;</ph> or <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero or greater than 4 gigabytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> 매개 변수에 지정된 값이 0보다 작거나 4GB보다 큰 경우</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>You must specify <ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> and <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> data types as an even number of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CLOB" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="NCLOB" /&gt;</ph> 데이터 형식을 짝수 바이트로 지정해야 하는 경우</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The operation is not within a transaction, the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> object is null, or the connection is closed.</source>
          <target state="translated">작업이 트랜잭션에 속하지 않거나, <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 개체가 null이거나, 연결이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The object was closed or disposed.</source>
          <target state="translated">개체가 닫혔거나 삭제된 경우</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An Oracle error has occurred.</source>
          <target state="translated">Oracle 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>The byte to write to the stream.</source>
          <target state="translated">스트림에 쓸 바이트입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>Writes a byte to the current position in the <ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> stream, and advances the position within the stream by one byte.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OracleClient.OracleLob" /&gt;</ph> 스트림의 현재 위치에 바이트를 쓰고 스트림 내 위치를 1바이트 앞으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>If the write operation is successful, the position within the stream advances by one byte.</source>
          <target state="translated">쓰기 작업이 성공적 이면 스트림 내의 위치 1 바이트씩 합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>If an exception occurs, the position within the stream remains unchanged.</source>
          <target state="translated">예외가 발생 하면 스트림 내의 위치 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>Writing beyond the end of the <ph id="ph1">`LOB`</ph> is allowed and enlarges the <ph id="ph2">`LOB`</ph> by one byte.</source>
          <target state="translated">끝을 넘어 쓰기는 <ph id="ph1">`LOB`</ph> 있으며 확장에서 <ph id="ph2">`LOB`</ph> 가 1 바이트입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>To write to the <ph id="ph1">`LOB`</ph>, you must have retrieved the <ph id="ph2">`LOB`</ph> using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</source>
          <target state="translated">에 쓸 수는 <ph id="ph1">`LOB`</ph>를 검색 해야 합니다는 <ph id="ph2">`LOB`</ph> 에서 SQL SELECT 문에 FOR UPDATE 절을 사용 하 여 시작 된 로컬 트랜잭션 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>A write operation to a read-only <ph id="ph1">`LOB`</ph> might succeed, but does not update the <ph id="ph2">`LOB`</ph> on the server.</source>
          <target state="translated">한 쓰기 작업에는 읽기 전용 <ph id="ph1">`LOB`</ph> 성공할 수 있지만 업데이트 되지 않는 <ph id="ph2">`LOB`</ph> 서버에 있습니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>In this case, however, the local copy of the <ph id="ph1">`LOB`</ph> is updated.</source>
          <target state="translated">그러나이 경우의 로컬 복사본이 <ph id="ph1">`LOB`</ph> 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
          <source>Therefore, later read operations on the <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> object might return the results of the write operation.</source>
          <target state="translated">따라서 나중에 읽기 작업에는 <ph id="ph1">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> 개체 쓰기 작업의 결과 반환할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>