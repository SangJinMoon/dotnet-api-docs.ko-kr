<Type Name="OracleTransaction" FullName="System.Data.OracleClient.OracleTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7de33b9036d93d642d5b32779177be6354cf79f6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30388787" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleTransaction : System.Data.Common.DbTransaction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleTransaction extends System.Data.Common.DbTransaction" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleTransaction&#xA;Inherits DbTransaction" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleTransaction sealed : System::Data::Common::DbTransaction" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbTransaction</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>데이터베이스에 만들 트랜잭션을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램을 만듭니다는 <xref:System.Data.OracleClient.OracleTransaction> 호출 하 여 개체 <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> 에 <xref:System.Data.OracleClient.OracleConnection> 개체입니다. 트랜잭션 (예를 들어, 커밋 또는 트랜잭션을 중단)와 관련 된 모든 후속 작업이 수행 되는 <xref:System.Data.OracleClient.OracleTransaction> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleConnection> 및 <xref:System.Data.OracleClient.OracleTransaction>합니다. 사용 하는 방법을 보여 줍니다는 <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, 및 <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> 메서드.  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.OracleClient.OracleDataAdapter" />
    <altmember cref="T:System.Data.OracleClient.OracleConnection" />
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>SQL 데이터베이스 트랜잭션을 커밋합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleConnection> 및 <xref:System.Data.OracleClient.OracleTransaction>합니다. 사용 하는 방법을 보여 줍니다는 <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, 및 <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> 메서드.  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">트랜잭션을 커밋하는 동안 오류가 발생한 경우</exception>
        <exception cref="T:System.InvalidOperationException">트랜잭션이 이미 커밋 또는 롤백된 경우  
  
 또는  
  
 연결이 손상된 경우</exception>
        <altmember cref="M:System.Data.OracleClient.OracleConnection.BeginTransaction" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트랜잭션과 관련된 <see cref="T:System.Data.OracleClient.OracleConnection" /> 개체를 지정합니다.</summary>
        <value>트랜잭션과 연결된 <see cref="T:System.Data.OracleClient.OracleConnection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 단일 응용 프로그램에는 각각 0 개 이상의 트랜잭션을 사용 하 여 여러 데이터 원본 연결을 있을 수 있습니다. 이 속성을 사용 하면 특정 트랜잭션과 연관 된 연결 개체를 확인할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleTransaction.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleTransaction.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public override System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 트랜잭션에 대한 <see cref="T:System.Data.IsolationLevel" />을 지정합니다.</summary>
        <value>이 트랜잭션에 대한 <see cref="T:System.Data.IsolationLevel" />입니다. 기본값은 <see langword="ReadCommitted" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework Data Provider for Oracle 지원 `ReadCommitted` 및 `Serializable` 격리 수준입니다. .NET Data Provider for SQL Server 사용 되는 때의 동작 방식으로 이러한 격리 수준 동작이 일치 하지 않습니다. Oracle 격리 수준을 사용 하는 방법에 대 한 자세한 내용은 Oracle 설명서를 참조 하십시오.  
  
 병렬 트랜잭션은 지원되지 않습니다. 따라서는 <xref:System.Data.IsolationLevel> 전체 트랜잭션에 적용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>보류 상태에서 트랜잭션을 롤백합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트랜잭션을 롤백할 수 보류 중 상태 에서만에서 (후 <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> 호출 하기 전에 <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> 라고).  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleConnection> 및 <xref:System.Data.OracleClient.OracleTransaction>합니다. 사용 하는 방법을 보여 줍니다는 <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, 및 <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> 메서드.  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">트랜잭션을 커밋하는 동안 오류가 발생한 경우</exception>
        <exception cref="T:System.InvalidOperationException">트랜잭션이 이미 커밋 또는 롤백된 경우  
  
 또는  
  
 연결이 손상된 경우</exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleConnection.BeginTransaction" />
      </Docs>
    </Member>
  </Members>
</Type>