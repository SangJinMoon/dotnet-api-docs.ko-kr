<Type Name="OracleParameter" FullName="System.Data.OracleClient.OracleParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f796a4475deaead7a2428664a98e9a3d581ce28a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36683781" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <TypeSignature Language="F#" Value="type OracleParameter = class&#xA;    inherit DbParameter&#xA;    interface ICloneable&#xA;    interface IDbDataParameter&#xA;    interface IDataParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OracleClient.OracleParameter/OracleParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Data.OracleClient.OracleCommand" />에 대한 매개 변수를 나타내고 <see cref="T:System.Data.DataColumn" />에 대한 매개 변수의 매핑을 선택적으로 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수 이름은 대/소문자 구분 하지 않습니다.  
  
 Microsoft OLE DB Provider를 사용 하 여 Oracle MSDAORA () 및 ODBC.NET Framework 데이터 공급자에 대 한 Oracle 데이터베이스를 쿼리할 때 사용 하는 `LIKE` 절 쿼리 고정 길이 필드 값을 일치 하는 모든 필요한 항목을 반환할 수 없습니다. Oracle의 고정 길이 필드 값을 일치 하는 경우는 이유는는 `LIKE` 절 뒤쪽 채움 공백을 포함 하 여 문자열의 전체 길이 일치 합니다. 예를 들어 테이블에 Oracle 데이터베이스 필드가 "Field1"으로 정의 된 `char(3)`, 값을 입력 하 고 다음 코드를 해당 테이블의 행에 "a"는 행을 반환 하지 합니다.  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 Oracle "a"로 서의 열 값을 저장 하기 때문에 이것이 (패딩 "a"와 후행 공백 3의 고정된 필드 길이), Oracle의 경우 "a"의 매개 변수 값에 대 한 일치 하는 항목으로 처리 하지 않습니다는 `LIKE` 고정 길이 필드의 비교 합니다.  
  
 이 문제를 해결 하려면 매개 변수 값에 백분율 ("%") 와일드 카드 문자를 추가 (`"a%"`), 하거나 SQL을 사용 하 여 `=` 비교 대신 합니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 인스턴스의 <xref:System.Data.OracleClient.OracleParameter> 통해는 <xref:System.Data.OracleClient.OracleParameterCollection> 내는 <xref:System.Data.OracleClient.OracleDataAdapter>합니다. 이러한 매개 변수는 데이터를 데이터베이스에서 데이터를 선택 하는 데는 <xref:System.Data.DataSet>합니다. 이 예에서는 가정 하는 <xref:System.Data.DataSet> 및 <xref:System.Data.OracleClient.OracleDataAdapter> 적절 한 스키마, 명령 및 연결을 사용 하 여 이미 만들어져 있습니다.  
  
 [!code-csharp[Classic WebData OracleParameter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.OracleClient.OracleParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.OracleClient.OracleParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * System.Data.OracleClient.OracleType -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, oracleType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="oracleType">
          <see cref="T:System.Data.OracleClient.OracleType" /> 값 중 하나입니다.</param>
        <summary>매개 변수 이름과 데이터 형식을 사용하여 <see cref="T:System.Data.OracleClient.OracleParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="oracleType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * obj -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="value">
          <see cref="T:System.Data.OracleClient.OracleParameter" /> 개체입니다.</param>
        <summary>매개 변수 이름과 <see cref="T:System.Data.OracleClient.OracleParameter" /> 개체를 사용하여 <see cref="T:System.Data.OracleClient.OracleParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 하는 경우는 <xref:System.Object> 에 `value` 매개 변수는 <xref:System.Data.DbType> 의 Microsoft.NET Framework 형식에서 유추는 <xref:System.Object>합니다.  
  
 이 오버 로드를 사용 하는 경우 주의 해야는 <xref:System.Data.OracleClient.OracleParameter> 생성자입니다. 이 오버 로드 때문에 `value` 형식의 <xref:System.Object>, 정수 값을 변환 해야는 <xref:System.Object> 다음 Microsoft Visual C# 예제에서 보여 주듯이 값이 0 인 경우을 입력 합니다.  
  
```  
Parameter = new OracleParameter("pname", Convert.ToInt32(0));  
```  
  
 이 변환을 수행 하지 않는 경우 컴파일러는 호출 하려는 `OracleParameter`(`string`, `OracleType`) 생성자 오버 로드 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * System.Data.OracleClient.OracleType * int -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, oracleType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="oracleType">
          <see cref="T:System.Data.OracleClient.OracleType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <summary>매개 변수 이름, 데이터 형식 및 길이를 사용하여 <see cref="T:System.Data.OracleClient.OracleParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="oracleType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, string srcColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, string srcColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size, System::String ^ srcColumn);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * System.Data.OracleClient.OracleType * int * string -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, oracleType, size, srcColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="srcColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="oracleType">
          <see cref="T:System.Data.OracleClient.OracleType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <param name="srcColumn">소스 열의 이름입니다.</param>
        <summary>매개 변수 이름, 데이터 형식, 길이 및 소스 열 이름을 사용하는 <see cref="T:System.Data.OracleClient.OracleParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter3/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="oracleType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, System.Data.ParameterDirection direction, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, valuetype System.Data.ParameterDirection direction, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size, System::Data::ParameterDirection direction, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * System.Data.OracleClient.OracleType * int * System.Data.ParameterDirection * string * System.Data.DataRowVersion * bool * obj -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, oracleType, size, direction, sourceColumn, sourceVersion, sourceColumnNullMapping, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">매핑할 매개 변수의 이름입니다.</param>
        <param name="oracleType">
          <see cref="T:System.Data.OracleClient.OracleType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <param name="direction">
          <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다.</param>
        <param name="sourceColumn">소스 열의 이름입니다.</param>
        <param name="sourceVersion">
          <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
        <param name="sourceColumnNullMapping">소스 열에서 null을 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="value">
          <see cref="T:System.Object" />의 값인 <see cref="T:System.Data.OracleClient.OracleParameter" />입니다.</param>
        <summary>매개 변수 이름, 데이터 형식, 크기, 방향, 소스 열, 소스 버전 및 기타 속성을 사용하는 <see cref="T:System.Data.OracleClient.OracleParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="oracleType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleParameter (string name, System.Data.OracleClient.OracleType oracleType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OracleClient.OracleType oracleType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleParameter(System::String ^ name, System::Data::OracleClient::OracleType oracleType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ srcColumn, System::Data::DataRowVersion srcVersion, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleParameter : string * System.Data.OracleClient.OracleType * int * System.Data.ParameterDirection * bool * byte * byte * string * System.Data.DataRowVersion * obj -&gt; System.Data.OracleClient.OracleParameter" Usage="new System.Data.OracleClient.OracleParameter (name, oracleType, size, direction, isNullable, precision, scale, srcColumn, srcVersion, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="oracleType" Type="System.Data.OracleClient.OracleType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">매개 변수의 이름입니다.</param>
        <param name="oracleType">
          <see cref="T:System.Data.OracleClient.OracleType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <param name="direction">
          <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다.</param>
        <param name="isNullable">필드 값이 null이 될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="precision">
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" />가 확인되는 소수점 왼쪽과 오른쪽의 총 자릿수입니다.</param>
        <param name="scale">
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" />가 확인되는 소수점 이하 총 자릿수입니다.</param>
        <param name="srcColumn">소스 열의 이름입니다.</param>
        <param name="srcVersion">
          <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
        <param name="value">
          <see cref="T:System.Object" />의 값인 <see cref="T:System.Data.OracleClient.OracleParameter" />입니다.</param>
        <summary>매개 변수 이름, 데이터 형식, 길이, 소스 열 이름, 매개 변수 방향, 전체 자릿수 및 기타 속성을 사용하는 <see cref="T:System.Data.OracleClient.OracleParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleParameter> 표시는 <xref:System.Data.OracleClient.OracleParameter.ParameterName%2A>합니다.  
  
 [!code-csharp[Classic WebData OracleParameter.OracleParameter4#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter4/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.OracleParameter4#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.OracleParameter4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="oracleType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.OracleClient.OracleParameter.DbType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 <see cref="T:System.Data.DbType" />을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.DbType" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Data.DbType.AnsiString" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 및 <xref:System.Data.OracleClient.OracleParameter.DbType%2A> 연결 됩니다. 설정의 <xref:System.Data.OracleClient.OracleParameter.DbType%2A> 변경은 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 을 지 원하는 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>합니다.  
  
 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>, <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>, 및 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 매개 변수 속성을 설정 하 여 유추할 수 <xref:System.Data.OracleClient.OracleParameter.Value%2A>합니다. 따라서는 지정할 필요가 없습니다. 그러나에 노출 되지 않습니다 <xref:System.Data.OracleClient.OracleParameter> 속성 설정 합니다. 예를 들어, 매개 변수의 크기 유추 된 경우 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 문이 실행 된 다음 유추 된 값이 포함 되지 않습니다. 에 대 한 `String` 데이터 형식의 기본값은 <xref:System.Data.DbType.AnsiString>합니다.  
  
 지원 되는 데이터 형식의 목록에 대 한 적절 한 참조 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 멤버입니다. 자세한 내용은 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OracleParameter.DbType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleParameter.DbType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleParameter.DbType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleParameter.DbType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 유효한 <see cref="T:System.Data.DbType" />으로 설정되지 않은 경우</exception>
        <altmember cref="T:System.Data.OracleClient.OracleType" />
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.OracleClient.OracleParameter.Direction" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수가 입력 전용, 출력 전용, 양방향 또는 저장 프로시저 반환 값 매개 변수인지 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다. 기본값은 <see langword="Input" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.ParameterDirection> 출력과 연결 된 실행은 <xref:System.Data.OracleClient.OracleCommand> 는 값을 반환 하지 않습니다는 <xref:System.Data.OracleClient.OracleParameter> null 값을 포함 합니다.  
  
 `Output``InputOut`, 및 `ReturnValue` 매개 변수를 호출 하 여 반환 된 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 호출할 때까지 액세스할 수 없습니다 <xref:System.Data.OracleClient.OracleDataReader.Close%2A> 에 <xref:System.Data.OracleClient.OracleDataReader>합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.OracleClient.OracleParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">속성에 유효한 <see cref="T:System.Data.ParameterDirection" /> 값 중 하나를 설정하지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Data.OracleClient.OracleParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수에 null 값이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>null 값이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Null 값을 사용 하 여 처리 하는 <xref:System.DBNull> 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.OracleClient.OracleParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("DName", OracleType.VarChar, 14)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("DName", OracleType.VarChar, 14);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int with get, set" Usage="System.Data.OracleClient.OracleParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 속성의 오프셋을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" />의 오프셋입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Offset` 속성은 클라이언트 쪽 이진 및 문자열 데이터의 청크를 사용 합니다. 예를 들어 10MB의 텍스트는 서버에 있는 열에 삽입 하기 위해 사용자 실행 될 수 있습니다 1MB 청크를 10 개의 매개 변수가 있는 삽입의 값을 이동 하면서 `Offset` 1MB에서 각 반복에서 합니다.  
  
 `Offset` 문자열의 문자 수와 이진 형식에 대 한 바이트 수를 지정합니다. 문자열에 대 한 개수 종결 문자를 포함 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.OracleClient.OracleParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDName", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.Offset = 3  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDName", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.Offset = 3;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OracleType">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleType OracleType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OracleClient.OracleType OracleType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.OracleType" />
      <MemberSignature Language="VB.NET" Value="Public Property OracleType As OracleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleType OracleType { System::Data::OracleClient::OracleType get(); void set(System::Data::OracleClient::OracleType value); };" />
      <MemberSignature Language="F#" Value="member this.OracleType : System.Data.OracleClient.OracleType with get, set" Usage="System.Data.OracleClient.OracleParameter.OracleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 <see cref="T:System.Data.OracleClient.OracleType" />을 가져오거나 설정합니다.</summary>
        <value>매개 변수의 <see cref="T:System.Data.OracleClient.OracleType" />인 <see cref="T:System.Data.OracleClient.OracleType" /> 값입니다. 기본값은 <see cref="F:System.Data.OracleClient.OracleType.VarChar" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 및 <xref:System.Data.OracleClient.OracleParameter.DbType%2A> 연결 됩니다. 설정의 <xref:System.Data.OracleClient.OracleParameter.DbType%2A> 변경은 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 을 지 원하는 <xref:System.Data.OracleClient.OracleType>합니다.  
  
 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>, <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>, 및 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 매개 변수 속성을 설정 하 여 유추할 수 <xref:System.Data.OracleClient.OracleParameter.Value%2A>합니다. 따라서는 지정할 필요가 없습니다. 그러나에 노출 되지 않습니다 <xref:System.Data.OracleClient.OracleParameter> 속성 설정 합니다. 예를 들어, 매개 변수의 크기 유추 된 경우 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 문이 실행 된 다음 유추 된 값이 포함 되지 않습니다. 에 대 한 `String` 데이터 형식의 기본값은 <xref:System.Data.OracleClient.OracleType.VarChar>합니다.  
  
 지원 되는 데이터 형식의 목록에 대 한 적절 한 참조 <xref:System.Data.OracleClient.OracleType> 멤버입니다. 자세한 내용은 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.OracleClient.OracleParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.OracleClient.OracleParameter" />의 이름을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.OracleClient.OracleParameter" />의 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework Data Provider for Oracle에서 물음표 (?)로 표시 된 위치 매개 변수를 지원 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.OracleClient.OracleParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Precision : byte with get, set" Usage="System.Data.OracleClient.OracleParameter.Precision" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Precision has been deprecated.  Use the Math classes to explicitly set the precision of a decimal.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 속성을 나타내는 데 사용되는 최대 자릿수를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 속성을 나타내는 데 사용되는 최대 자릿수입니다. 기본값은 0으로, 이는 데이터 공급자가 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />에 대한 자릿수를 설정한다는 것을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정의 <xref:System.Data.OracleClient.OracleParameter.Precision%2A> 또는 <xref:System.Data.OracleClient.OracleParameter.Scale%2A> 속성의 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberSignature Language="F#" Value="override this.ResetDbType : unit -&gt; unit" Usage="oracleParameter.ResetDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.OracleClient.OracleParameter" />와 관련된 형식을 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 실행할 때 매개 변수 값을 포함 하는 코드 형식의 매개 변수를 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다. 이 메서드를 호출 하 여 다시 매개 변수에 전달 된 값에서 해당 형식을 유추할 수 있는 매개 변수 다시 설정 합니다. 둘 다이 메서드를 호출 하면는 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 및 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 의 속성은 <xref:System.Data.OracleClient.OracleParameter>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.OracleClient.OracleParameter.ResetOracleType" />
        <altmember cref="P:System.Data.Odbc.OdbcParameter.DbType" />
        <altmember cref="P:System.Data.OracleClient.OracleParameter.OracleType" />
      </Docs>
    </Member>
    <Member MemberName="ResetOracleType">
      <MemberSignature Language="C#" Value="public void ResetOracleType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOracleType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ResetOracleType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetOracleType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetOracleType();" />
      <MemberSignature Language="F#" Value="member this.ResetOracleType : unit -&gt; unit" Usage="oracleParameter.ResetOracleType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.OracleClient.OracleParameter" />와 관련된 형식을 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 실행할 때 매개 변수 값을 포함 하는 코드 형식의 매개 변수를 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다. 이 메서드를 호출 하 여 다시 매개 변수에 전달 된 값에서 해당 형식을 유추할 수 있는 매개 변수 다시 설정 합니다. 둘 다이 메서드를 호출 하면는 <xref:System.Data.Odbc.OdbcParameter.DbType%2A> 및 <xref:System.Data.OracleClient.OracleParameter.OracleType%2A> 의 속성은 <xref:System.Data.OracleClient.OracleParameter>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Odbc.OdbcParameter.ResetDbType" />
        <altmember cref="P:System.Data.Odbc.OdbcParameter.DbType" />
        <altmember cref="P:System.Data.OracleClient.OracleParameter.OracleType" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Scale : byte with get, set" Usage="System.Data.OracleClient.OracleParameter.Scale" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Scale has been deprecated.  Use the Math classes to explicitly set the scale of a decimal.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" />가 확인되는 소수점 이하 자릿수를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Data.OracleClient.OracleParameter.Value" />가 확인되는 소수점 이하 자릿수입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정의 <xref:System.Data.OracleClient.OracleParameter.Precision%2A> 또는 <xref:System.Data.OracleClient.OracleParameter.Scale%2A> 속성의 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Data.OracleClient.OracleParameter.Size" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열에 있는 데이터의 최대 크기(바이트)를 가져오거나 설정합니다.</summary>
        <value>열에 있는 데이터의 최대 크기(바이트)입니다. 기본값은 0입니다. 값에 대한 최대값을 지정하고자 하지 않을 때 사용됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 매개 변수의 입력된 값에만 영향을 줍니다. 반환 값과 출력 매개 변수는이 속성에 의해 영향을 받지 않습니다.  
  
 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 속성 이진 및 문자열 형식에 사용 됩니다.  
  
 문자열이 아닌 데이터 형식 및 ANSI 문자열 데이터에 대 한는 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 속성 바이트 수를 나타냅니다. 유니코드 문자열 데이터에 대 한 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 문자의 수를 나타냅니다. 문자열에 대 한 개수 종결 문자를 포함 하지 않습니다.  
  
 가변 길이 데이터 형식에 대 한 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 서버에 전송할 데이터의 최대 양에 대해 설명 합니다. 유니코드 문자열 값에 대 한 예를 들어 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 하나 백 먼저 자로 서버에 전송 되는 데이터의 양을 제한 하기 위해 사용할 수 있습니다.  
  
 양방향 및 출력 매개 변수 및 반환 값에 대 한 크기의 값을 설정 해야 합니다. 이 입력된 매개 변수에 대 한 명시적으로 설정의 값에서에서 유추 됩니다 지정된 된 매개 변수의 실제 크기 매개 변수가 있는 문을 실행 하 고 있습니다.  
  
 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>, <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>, 및 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 매개 변수 속성을 설정 하 여 유추할 수 <xref:System.Data.OracleClient.OracleParameter.Value%2A>합니다. 따라서는 지정할 필요가 없습니다. 그러나에 노출 되지 않습니다 <xref:System.Data.OracleClient.OracleParameter> 속성 설정 합니다. 예를 들어, 매개 변수의 크기 유추 된 경우 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 문이 실행 된 다음 유추 된 값이 포함 되지 않습니다.  
  
 에 대 한 고정 길이 데이터 형식, 값 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 는 무시 됩니다. 정보 제공 목적으로 검색할 수 있습니다 하 고 공급자 서버에 매개 변수 값을 전송할 때 사용 하는 바이트의 최대 크기를 반환 합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.OracleClient.OracleParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDescription", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.Direction = ParameterDirection.Output  
   parameter.Size = 88  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDescription", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.Direction = ParameterDirection.Output;  
   parameter.Size = 88;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.OracleClient.OracleParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataSet" />으로 매핑되고 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />를 로드하거나 반환하는 데 사용되는 소스 열의 이름을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.DataSet" />으로 매핑된 소스 열의 이름입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값 사이의 링크는 <xref:System.Data.OracleClient.OracleParameter> 및 <xref:System.Data.DataTable> 값에 따라 양방향 될 수 있습니다는 <xref:System.Data.OracleClient.OracleParameter.Direction%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.OracleClient.OracleParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOracleDbParameter()  
   Dim parameter As New OracleParameter()  
   parameter.ParameterName = "pDName"  
   parameter.DbType = DbType.String  
   parameter.Value = "ENGINEERING"  
   parameter.SourceColumn = "DName"  
End Sub  
```  
  
```csharp  
public void CreateOracleDbParameter()   
{  
   OracleParameter parameter = new OracleParameter();  
   parameter.ParameterName = "pDName";  
   parameter.DbType = DbType.String;  
   parameter.Value = "ENGINEERING";  
   parameter.SourceColumn = "DName";  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumnNullMapping : bool with get, set" Usage="System.Data.OracleClient.OracleParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>소스 열에 null이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다. 이를 통해 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" />에서 null 허용 열에 대한 Update 문을 올바르게 생성할 수 있습니다.</summary>
        <value>소스 열에서 null을 허용하면 <see langword="True" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A> 사용 되는 <xref:System.Data.OracleClient.OracleCommandBuilder> null 허용 열을 다룰 때 제대로 업데이트 명령을 생성 합니다. 일반적으로 사용의 <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A> 으로 제한 됩니다 <xref:System.Data.OracleClient.OracleCommandBuilder>합니다.  
  
 <xref:System.Data.Common.DbCommandBuilder> 원본 열이 null을 허용 하 고이 속성을 설정 하는지 여부를 확인 하려면이 속성을 사용 하 여 `true` 은 null을 허용 하는 경우 및 `false` 없는 경우. 때 <xref:System.Data.OracleClient.OracleCommandBuilder> 가 검사 하는 Update 문을 생성는 <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A> 각 매개 변수에 대 한 합니다. 속성이 `true`, <xref:System.Data.OracleClient.OracleCommandBuilder> 다음과 같은 WHERE 절을 생성 (이 쿼리 식은 "FieldName" 나타냅니다 필드의 이름):  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 경우 <xref:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping%2A> false 인 경우이 필드는에 대 한 <xref:System.Data.OracleClient.OracleCommandBuilder> 다음 WHERE 절을 생성 합니다.  
  
```  
FieldName = @OriginalFieldName  
```  
  
 또한 @IsNull_FieldName 원본 필드 및 포함 된 경우 null, 0 그렇지 않은 경우 1을 포함 합니다. 이 메커니즘의 Oracle 서버 성능 최적화 기능을 허용 하 고 여러 공급자 들 간에 작동 하는 일반적인 코드에 대 한 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.OracleClient.OracleParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRowVersion" />를 로드할 때 사용할 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 기본값은 <see langword="Current" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 사용는 <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> 하는 동안는 <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> 하는 매개 변수 값에 대 한 원본 또는 현재 값을 사용 하는지 확인 합니다. 이렇게 하면 기본 키를 업데이트할 수 있습니다. 이 속성의 버전에는 <xref:System.Data.DataRow> 에서 사용 하는 <xref:System.Data.DataRow.Item%2A?displayProperty=nameWithType> 속성 (<xref:System.Data.DataRow> 인덱서), 또는 <xref:System.Data.DataRow.GetChildRows%2A?displayProperty=nameWithType> 의 메서드는 <xref:System.Data.DataRow> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.OracleClient.OracleParameter> 속성 중 일부를 설정 합니다.  
  
```vb  
Public Sub CreateOracleParameter()  
   Dim parameter As New OracleParameter("pDName", OracleType.VarChar)  
   parameter.IsNullable = True  
   parameter.SourceColumn = "Description"  
   parameter.SourceVersion = DataRowVersion.Current  
   parameter.Direction = ParameterDirection.Output  
End Sub  
```  
  
```csharp  
public void CreateOracleParameter()   
{  
   OracleParameter parameter = new OracleParameter("pDName", OracleType.VarChar);  
   parameter.IsNullable = true;  
   parameter.SourceColumn = "Description";  
   parameter.SourceVersion = DataRowVersion.Current;  
   parameter.Direction = ParameterDirection.Output;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하세요.</summary>
        <returns>이 인스턴스의 복사본인 새 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Data.OracleClient.OracleParameter> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="oracleParameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" />이 포함된 문자열을 가져옵니다.</summary>
        <returns>
          <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" />이 포함된 문자열입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.OracleClient.OracleParameter.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 값을 가져오거나 설정합니다.</summary>
        <value>매개 변수의 값인 개체입니다. 기본값은 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 바인딩된 값에 대 한 입력된 매개 변수는 <xref:System.Data.OracleClient.OracleCommand> 서버로 보내집니다. 출력 및 반환 값 매개 변수의 값은이 설정의 완료는 <xref:System.Data.OracleClient.OracleCommand> 후의 <xref:System.Data.OracleClient.OracleDataReader> 닫힙니다.  
  
 입력된 매개 변수에 대해 <xref:System.Data.OracleClient.OracleParameter.Value%2A> 개체에 Oracle 데이터 형식 또는 Microsoft.NET Framework 데이터 형식을 설정할 수 있습니다 (예를 들어 한 <xref:System.Data.OracleClient.OracleNumber> 또는 <xref:System.Data.OracleClient.OracleString>).  
  
 서버에 null 매개 변수 값을 보낼 때 null이 아닌 DBNull을 지정 해야 합니다. 시스템에서 null 값은 값이 없는 빈 개체입니다. DBNull null 값을 나타내는 데 사용 됩니다.  
  
 응용 프로그램 데이터베이스 형식을 지정 하는 경우 바인딩된 값 공급자가 서버에 데이터를 보낼 때 해당 형식으로 변환 됩니다. 공급자가 지 원하는 경우 모든 유형의 값을 변환 하는 <xref:System.IConvertible> 인터페이스입니다. 지정된 된 형식의 값과 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.  
  
 <xref:System.Data.OracleClient.OracleParameter.DbType%2A>, <xref:System.Data.OracleClient.OracleParameter.OracleType%2A>, 및 <xref:System.Data.OracleClient.OracleParameter.Size%2A> 매개 변수의 속성 값을 설정 하 여 유추할 수 있습니다. 따라서는 지정할 필요가 없습니다. 그러나에 노출 되지 않습니다 <xref:System.Data.OracleClient.OracleParameter> 속성 설정 합니다. 예를 들어 매개 변수의 크기 유추 된 경우 문 실행 다음 유추 된 값 크기에 포함 되지 않습니다.  
  
 `InputOutput`, `Output`, 및 `ReturnValue` <xref:System.Data.ParameterDirection> Value 속성에서 사용 되는 값 입력된 값을 Oracle 데이터 형식 아닌 경우 Microsoft.NET Framework 데이터 형식 됩니다 (예를 들어 <xref:System.Data.OracleClient.OracleNumber> 또는 <xref:System.Data.OracleClient.OracleString>). 이 REF CURSOR, BFILE, 적용할 않거나 LOB 데이터 형식입니다.  
  
 <xref:System.Data.OracleClient.OracleParameter.Value%2A> 속성을 덮어씁니다는 **업데이트** 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>