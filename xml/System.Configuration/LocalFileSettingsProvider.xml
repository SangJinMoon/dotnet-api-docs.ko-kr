<Type Name="LocalFileSettingsProvider" FullName="System.Configuration.LocalFileSettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00b14d65fd8d3912b84629b5c369a2933a0eb961" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380057" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalFileSettingsProvider extends System.Configuration.SettingsProvider implements class System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LocalFileSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LocalFileSettingsProvider&#xA;Inherits SettingsProvider&#xA;Implements IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalFileSettingsProvider : System::Configuration::SettingsProvider, System::Configuration::IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.IApplicationSettingsProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>응용 프로그램 설정 클래스를 유지합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 공급자 응용 프로그램 설정 아키텍처에서 사용 되는 구성 데이터를 저장 하기 위한 메커니즘을 정의 합니다. [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 하나의 기본 설정 공급자가 포함 된 <xref:System.Configuration.LocalFileSettingsProvider>, 로컬 파일 시스템에 구성 데이터를 저장 하는 합니다. 단일 응용 프로그램 설정 속성 또는 그룹의 속성을 사용 하 여 특정 설정 공급자에 연결 된는 <xref:System.Configuration.SettingsProviderAttribute>합니다.  
  
 일반적으로 클라이언트 프로그램이이 클래스; 명시적으로 액세스 하지 않습니다. 대신, 응용 프로그램 설정 아키텍처에서 자동으로 호출 적절 한 설정 공급자 서비스는 필요한 경우. 예를 들어 대부분의 멤버가 <xref:System.Configuration.ApplicationSettingsBase> 연결 된 설정 공급자에 작업을 위임 합니다.  
  
 <xref:System.Configuration.LocalFileSettingsProvider> 확장명을 가진 구성 파일에 설정을 계속 되 면 `.config`합니다. 구성 파일의 내용은 XML 문서로 구성 됩니다. 여부 설정의 응용 프로그램 수준 또는 사용자 수준에서 범위가에 따라 구성 데이터 내의 요소로 저장 됩니다는 `<applicationSettings>` 또는 `<userSettings>` 각각 섹션 그룹. 이러한 섹션 그룹 각각 해당으로 나타낸 <xref:System.Configuration.AppSettingsSection> 또는 <xref:System.Configuration.ClientSettingsSection>각각. 각 섹션 개체가 소유 하 고 관리 하는 형식의 개체입니다. 구성 섹션 처리기 <xref:System.Configuration.IConfigurationSectionHandler>합니다.  
  
 응용 프로그램 범위 설정 및 기본 사용자 범위 설정을 라는 파일에 저장 됩니다 `application.exe.config`, 실행 파일과 동일한 디렉터리에 생성 됩니다. 응용 프로그램 구성 설정은 읽기 전용입니다. 특정 사용자 데이터가 라는 파일에 저장 되 `user.config`, 사용자의 홈 디렉터리 아래에 저장 합니다. 로밍 프로필을 사용 하는 경우에 사용자 구성 파일에 두 개 존재할 수 있습니다. 이 경우 로밍 버전의 항목을 로컬 사용자 구성 파일에 중복 된 항목 보다 우선합니다.  
  
 응용 프로그램 설정에 대 한 자세한 내용은 참조 [Windows Forms에 대 한 응용 프로그램 설정](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ClientSettingsSection" />
    <altmember cref="T:System.Configuration.IConfigurationSectionHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalFileSettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalFileSettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Configuration.LocalFileSettingsProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 생성자 집합은 <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> 속성을 <xref:System.String.Empty>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 실행되는 응용 프로그램의 이름을 가져오거나 설정합니다.</summary>
        <value>응용 프로그램의 표시 이름을 포함하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> 및 <xref:System.Configuration.Provider.ProviderBase.Name%2A> 속성 마찬가지로 서로 다른 응용 프로그램에서 속성을 명명 된 설정 명확히 구분 하는 데 도움이 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">응용 프로그램 설정 속성이 사용되는 곳에 대해 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
        <param name="property">값이 반환될 <see cref="T:System.Configuration.SettingsProperty" />입니다.</param>
        <summary>이전 버전의 동일한 응용 프로그램에 대한 명명된 설정 속성의 값을 반환합니다.</summary>
        <returns>응용 프로그램 설정을 나타내는 <see cref="T:System.Configuration.SettingsPropertyValue" />가 있으면 해당 설정 속성 값이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> 함께에서 메서드는 대개는 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> 메서드는 응용 프로그램의 새 버전을 설치 하는 동안 응용 프로그램 설정을 마이그레이션하는 경우. 자세한 내용은 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> 메서드를 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertyValues (context As SettingsContext, properties As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">현재 응용 프로그램의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
        <param name="properties">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
        <summary>지정된 응용 프로그램 인스턴스와 설정 속성 그룹에 대한 설정 속성 값의 컬렉션을 반환합니다.</summary>
        <returns>지정된 설정 속성 그룹에 대한 값을 포함하는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> 메서드는 또한 특별 한 응용 프로그램 설정 유형 관리 <xref:System.Configuration.SpecialSetting.ConnectionString>합니다. 연결 문자열이 요소로 구분 되는 구성 파일의 특정 섹션에 저장 된 `<connectionstrings>`합니다.  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider> 모든 설정을 유지 하기 위해 암호화를 사용 하지 않습니다. 따라서 일반 텍스트 암호 또는 기타 중요 한 정보를 개별적으로 구성 파일 내에서 정보를 암호화 하는 등의 추가 예방 조치를 수행 하지 않고이 공급자를 사용 하 여 저장 하지 마십시오. 자세한 내용은 참조 [암호화 구성 정보를 사용 하 여 보호 되는 구성](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">사용자 범위 설정이 발견되었지만 현재 구성이 응용 프로그램 범위 설정만 지원하는 경우</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
        <altmember cref="P:System.Configuration.SettingsPropertyValue.IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, values As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">공급자의 이름입니다.</param>
        <param name="values">이 공급자에 대한 구성에서 지정된 공급자별 특성을 나타내는 이름/값 쌍의 컬렉션입니다.</param>
        <summary>공급자를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">현재 응용 프로그램의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
        <summary>지정된 응용 프로그램과 연결된 모든 응용 프로그램 설정 속성을 기본값으로 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> 메서드는 저장 된 값의 지정 된 응용 프로그램 설정 그룹을 복원 합니다. 동작 <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> 응용 프로그램 설정 속성의 범위에 따라 달라 집니다.  
  
-   응용 프로그램 범위 설정은 영향을 받지 않습니다.  
  
-   사용자 범위 설정은 응용 프로그램 구성 파일에서 읽기 전용 항목으로 저장 되는 기본 값으로 다시 설정 됩니다 `application.exe.config`합니다. 로밍 프로필을 사용 하는 경우 모든 응용 프로그램 설정 값은 로밍 프로필에 로컬 프로필에 있는 중복 보다 우선 합니다.  
  
 로밍 프로필을 사용 하는 경우 수 있을 두 `user.config` 파일 및 로밍 프로필에 대 한 로컬 설정에 대 한 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">사용자 범위 설정이 발견되었지만 현재 구성이 응용 프로그램 범위 설정만 지원하는 경우</exception>
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="T:System.Configuration.SettingsManageability" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetPropertyValues (context As SettingsContext, values As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="values" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">현재 응용 프로그램의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
        <param name="values">설정할 속성 설정 그룹을 나타내는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</param>
        <summary>지정된 속성 설정 그룹의 값을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 래퍼 클래스에서 파생 된 <xref:System.Configuration.ApplicationSettingsBase>, 포함는 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> 메서드 설정 속성의 모든 값을 유지 하기 위해 호출 됩니다. 이 메서드는 모든 설정을 통해 열거 설정 속성 및 호출와 연결 된 공급자는 <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> 메서드 각각에 대해 <xref:System.Configuration.SettingsProvider> 실제 serialization 작업을 수행 하 합니다.  
  
 <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> 각 응용 프로그램 사용자 범위 설정 속성에서 적절 한 설정 된 해당 응용 프로그램을 개별적으로 또는 그 반대로 serialize `user.config` 구성 파일입니다.  
  
 기본적으로는 <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> 메서드는 다음과 같은 논리 순서를 사용 하 여 serialization 체계 설정 속성의 종류에 따라를 결정 합니다.  
  
1.  형식에 연결 된 <xref:System.ComponentModel.TypeConverter> 와 <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> 이 변환은 메서드 구현이 사용 됩니다.  
  
2.  XML 직렬화에 사용 됩니다.  
  
 그러나 기본 serialization 메커니즘 사용 하 여 지정할 수는 <xref:System.Configuration.SettingsSerializeAsAttribute>합니다. <xref:System.Configuration.LocalFileSettingsProvider> 이진 serialization을 지원 하지 않습니다 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]합니다.  
  
 사용자 범위 설정 속성이 설정 된 경우 다시 기본값으로 명시적으로 로컬 파일 설정 공급자 사용자 구성 파일에서 연결된 된 설정에 대 한 항목을 제거 됩니다. 이 속성에 대 한 다음 읽기 액세스는 기본값을 사용 하면 됩니다.  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider> 모든 설정을 유지 하기 위해 암호화를 사용 하지 않습니다. 따라서 일반 텍스트 암호 또는 기타 중요 한 정보를 개별적으로 구성 파일 내에서 정보를 암호화 하는 등의 추가 예방 조치를 수행 하지 않고이 공급자를 사용 하 여 저장 하지 마십시오. 자세한 내용은 참조 [암호화 구성 정보를 사용 하 여 보호 되는 구성](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">사용자 범위 설정이 발견되었지만 현재 구성이 응용 프로그램 범위 설정만 지원하는 경우  
  
 또는  
  
 구성 파일에 설정을 저장하는 동안 일반 오류가 발생한 경우</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Configuration.SettingsSerializeAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">현재 응용 프로그램의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
        <param name="properties">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
        <summary>이전 버전의 동일한 응용 프로그램에서 이전 사용자 범위 설정을 마이그레이션합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider> 별도 작업에서 로컬 및 로밍 설정을 마이그레이션합니다.  
  
 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> 설정 하는 모든 응용 프로그램에 대 한 표시 되지 않는 메서드는 <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> , 또는에서 파생 된 전체 설정 래퍼 클래스에 적용 <xref:System.Configuration.ApplicationSettingsBase>합니다.  
  
 이 메서드는 이러한 방식으로 업그레이드 되는 응용 프로그램의 유형에 따라 달라 집니다.  
  
-   각 버전의는 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 응용 프로그램 자체 격리 된 설치 디렉터리에 저장 됩니다. 새 버전에 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 응용 프로그램이 설치 되어 있고 내부 논리를 자동으로 호출 되어 새 버전을 처음 실행할 때 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> 새 버전으로 모든 같은 응용 프로그램 설정 마이그레이션. 자세한 내용은 [ClickOnce 및 응용 프로그램 설정](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb)을 참조하세요.  
  
-   표준 Windows Forms 및 콘솔 응용 프로그램 호출 수동으로 해야 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>이러한 응용 프로그램을 처음 실행할 때 결정 하는 일반적으로 자동 방법이 없기 때문에, 합니다. 확인 하이는 지속형된 속성을 사용 하 여 응용 프로그램 자체에서 나 설치 프로그램에서 작업을 수행 하는 두 가지 일반적인 방법은 종종 같은 이름의 `IsFirstRun`합니다.  
  
 Note는 응용 프로그램 설정 마이그레이션 새 버전용 있어야도 로드 하 고 응용 프로그램 설정의 이전 버전을 읽습니다. 따라서, 래퍼 클래스는 응용 프로그램의 신규 및 이전 버전과 호환성을 포함 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">사용자 범위 설정이 발견되었지만 현재 구성이 응용 프로그램 범위 설정만 지원하는 경우  
  
 또는  
  
 이전 버전의 구성 파일에 액세스할 수 없는 경우</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>