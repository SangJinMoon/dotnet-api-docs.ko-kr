<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConfigurationProperty.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae05845526091253dc64187f8e60ac254c814fff23bf0bf30.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6091253dc64187f8e60ac254c814fff23bf0bf30</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.ConfigurationProperty">
          <source>Represents an attribute or a child of a configuration element.</source>
          <target state="translated">특성 또는 구성 요소의 자식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Configuration.ConfigurationProperty">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>In the case of a simple <ph id="ph1">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>, such as the <ph id="ph2">`CustomSection`</ph> shown in the next example, the <ph id="ph3">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> objects represent attributes such as <ph id="ph4">`fileName`</ph>.</source>
          <target state="translated">간단한의 경우 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>와 같은 <ph id="ph2">`CustomSection`</ph> 다음 예에서 같이 <ph id="ph3">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> 개체와 같은 특성을 나타내는 <ph id="ph4">`fileName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>In the case of more complex configuration elements such as a section containing subsections, for instance <ph id="ph1">`authentication`</ph>, the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> objects can represent <ph id="ph3">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> objects as well as attributes.</source>
          <target state="translated">예를 들어 하위 섹션이 포함 된 섹션 등 보다 복잡 한 구성 요소의 경우 <ph id="ph1">`authentication`</ph>, <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> 개체를 나타낼 수 있습니다 <ph id="ph3">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> 개체와 특성.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyCollection&gt;</ph> class represents the collection of the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> objects that can be either attributes or <ph id="ph3">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> objects of a configuration element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyCollection&gt;</ph> 클래스의 컬렉션을 나타냅니다는 <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> 특성 중 하나가 될 수 있는 개체 또는 <ph id="ph3">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> 는 구성 요소 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> class represents an individual configuration setting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> 클래스는 개별 구성 설정을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>This class allows you to get or set the name, type, and default value for a particular configuration entity (attribute or element) and specify whether the attribute is required, is an element key, or represents a default element collection.</source>
          <target state="translated">이 클래스를 사용 하면 하 여 get 또는 이름, 유형 및 특정 구성 엔터티 (특성 또는 요소)에 대 한 기본값 설정 여부를 지정 특성은 필수, 요소 키가 기본 요소 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> when you create a custom section.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> 사용자 지정 섹션을 만들 때.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>The following is an excerpt of the configuration file used by the code in the previous example.</source>
          <target state="translated">다음은 이전 예의에서 코드에서 사용 하는 구성 파일의 일부입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>The following example shows how to create the previous section in code.</source>
          <target state="translated">다음 예제에서는 코드에서 이전 섹션을 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>Every <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> object creates an internal <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationPropertyCollection" /&gt;</ph> collection of <ph id="ph3">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> objects that represents either the element attributes or a collection of child elements.</source>
          <target state="translated">모든 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> 개체를 만들고 내부 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationPropertyCollection" /&gt;</ph> 컬렉션 <ph id="ph3">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 은 요소의 특성 또는 자식 요소 컬렉션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>Non-customizable information and functionality is contained by an <ph id="ph1">&lt;see cref="T:System.Configuration.ElementInformation" /&gt;</ph> object provided by the <ph id="ph2">&lt;see cref="P:System.Configuration.ConfigurationElement.ElementInformation" /&gt;</ph> property.</source>
          <target state="translated">비 지정이 가능한 정보 및 기능에 포함 된 프로그램 <ph id="ph1">&lt;see cref="T:System.Configuration.ElementInformation" /&gt;</ph> 에서 제공 하는 개체는 <ph id="ph2">&lt;see cref="P:System.Configuration.ConfigurationElement.ElementInformation" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>You can use a programmatic or a declarative (attributed) coding model to create a custom configuration element.</source>
          <target state="translated">사용자 지정 구성 요소를 만들 수는 프로그래밍 방식으로 또는 선언적 코딩 (특성 사용된) 모델을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>Programmatic Model.</source>
          <target state="translated">프로그래밍 모델입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>This model requires that you create a property for each element attribute to get and/or set its value and add it to the internal property bag of the underlying <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> base class.</source>
          <target state="translated">이 모델에서는 각 요소 특성을 가져오거나 설정의 값은 기본 내부 속성 모음에 추가 대 한 속성을 만드는 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>Declarative Model.</source>
          <target state="translated">선언적 모델입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>This simpler model, also called attributed model, allows you to define an element attribute by using a property and decorate it with attributes.</source>
          <target state="translated">이 간단한 모델을 라고도 특성이 지정 된 모델을 사용 하면 속성을 사용 하 여 요소 특성을 정의 하 고 특성으로 데코레이팅 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>These attributes instruct the ASP.NET configuration system about the property types and their default values.</source>
          <target state="translated">이러한 특성 속성 형식 및 기본값에 대 한 ASP.NET 구성 시스템을 지시합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationProperty">
          <source>With this information, obtained through reflection, the ASP.NET configuration system creates the element property objects for you and performs the required initialization.</source>
          <target state="translated">ASP.NET 구성 시스템에서는이 정보를 리플렉션을 통해 가져온 요소 속성 개체를 만들고 필요한 초기화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Configuration.ConfigurationProperty">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
          <source>The name of the configuration entity.</source>
          <target state="translated">구성 엔터티의 이름입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
          <source>The type of the configuration entity.</source>
          <target state="translated">구성 엔터티의 형식입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>The name of the configuration entity.</source>
          <target state="translated">구성 엔터티의 이름입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>The type of the configuration entity.</source>
          <target state="translated">구성 엔터티의 형식입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>When you instantiate a <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> object using this constructor, the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty.IsRequired%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph> properties are set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">인스턴스화하는 경우는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> 이 생성자를 사용 하 여 개체는 <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty.IsRequired%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph> 속성으로 설정 됩니다 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>Additionally, an instance made with this constructor will not function as a default collection-key property.</source>
          <target state="translated">또한이 생성자를 사용 하 여 만든 인스턴스를 기본 컬렉션 키 속성으로 작동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph> constructor to instantiate a configuration-property object.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph> 구성 속성 개체를 인스턴스화하는 생성자입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
          <source>The name of the configuration entity.</source>
          <target state="translated">구성 엔터티의 이름입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
          <source>The type of the configuration entity.</source>
          <target state="translated">구성 엔터티의 형식입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
          <source>The following code example shows how to use <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.Configuration.ConfigurationPropertyOptions%29?displayProperty=nameWithType&gt;</ph> constructor to instantiate a configuration-property object.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.Configuration.ConfigurationPropertyOptions%29?displayProperty=nameWithType&gt;</ph> 구성 속성 개체를 인스턴스화하는 생성자입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
          <source>The name of the configuration entity.</source>
          <target state="translated">구성 엔터티의 이름입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
          <source>The type of the configuration entity.</source>
          <target state="translated">구성 엔터티의 형식입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
          <source>The following code example shows the kind of parameters to use when calling the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.ComponentModel.TypeConverter%2CSystem.Configuration.ConfigurationValidatorBase%2CSystem.Configuration.ConfigurationPropertyOptions%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">다음 코드 예제를 호출할 때 사용할 매개 변수를의 종류를 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.ComponentModel.TypeConverter%2CSystem.Configuration.ConfigurationValidatorBase%2CSystem.Configuration.ConfigurationPropertyOptions%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
          <source>The name of the configuration entity.</source>
          <target state="translated">구성 엔터티의 이름입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
          <source>The type of the configuration entity.</source>
          <target state="translated">구성 엔터티의 형식입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
          <source>The description of the configuration entity.</source>
          <target state="translated">구성 엔터티에 대한 설명입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.ComponentModel.TypeConverter%2CSystem.Configuration.ConfigurationValidatorBase%2CSystem.Configuration.ConfigurationPropertyOptions%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> constructor to instantiate a configuration-property object.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.%23ctor%28System.String%2CSystem.Type%2CSystem.Object%2CSystem.ComponentModel.TypeConverter%2CSystem.Configuration.ConfigurationValidatorBase%2CSystem.Configuration.ConfigurationPropertyOptions%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> 구성 속성 개체를 인스턴스화하는 생성자입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Converter">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> used to convert this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> into an XML representation for writing to the configuration file.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>를 구성 파일에 쓰기 위한 XML 표현으로 변환하는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Converter">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> used to convert this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> into an XML representation for writing to the configuration file.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>를 구성 파일에 쓰기 위한 XML 표현으로 변환하는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Converter">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Converter%2A&gt;</ph> property to get the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> for a specified configuration-property object.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Converter%2A&gt;</ph> 가져올 속성의 <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> 구성 속성을 지정 된 개체에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Converter">
          <source>This <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> cannot be converted.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>를 변환할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.DefaultValue">
          <source>Gets the default value for this <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> property.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 속성의 기본값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.DefaultValue">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that can be cast to the type specified by the <ph id="ph2">&lt;see cref="P:System.Configuration.ConfigurationProperty.Type" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 속성에서 지정하는 형식으로 캐스팅될 수 있는 <ph id="ph2">&lt;see cref="P:System.Configuration.ConfigurationProperty.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.DefaultValue">
          <source>The default value of a new <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> object is passed into its constructor.</source>
          <target state="translated">새 기본값 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> 개체의 생성자에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.DefaultValue">
          <source>That same object will be returned by the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.DefaultValue%2A&gt;</ph> property.</source>
          <target state="translated">동일한 개체에서 반환할는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.DefaultValue%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.DefaultValue">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.DefaultValue%2A&gt;</ph> for a specified property.</source>
          <target state="translated">다음 코드 예제에서는 가져오는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.DefaultValue%2A&gt;</ph> 지정된 된 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Description">
          <source>Gets the description associated with the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>와 연결된 설명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Description">
          <source>A <ph id="ph1">&lt;see langword="string" /&gt;</ph> value that describes the property.</source>
          <target state="translated">속성을 설명하는 <ph id="ph1">&lt;see langword="string" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Description">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Description%2A&gt;</ph> for a specified property.</source>
          <target state="translated">다음 코드 예제에서는 가져오는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Description%2A&gt;</ph> 지정된 된 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
          <source>Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">이전 버전의 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>에 대해 serialize된 경우 구성 속성의 어셈블리 이름을 변환해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property requires assembly name transformation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성의 어셈블리 이름을 변환해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
          <source>You use <ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> to set this property when you call a constructor that includes a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> parameter.</source>
          <target state="translated">사용 하면 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> 포함 하는 생성자를 호출 하는 경우이 속성을 설정 하는 <ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
          <source>This value is ignored if the property does not contain an assembly name string.</source>
          <target state="translated">속성에 어셈블리 이름 문자열이 포함 되어 있지 않으면이 값은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
          <source>Gets a value that indicates whether the property is the default collection of an element.</source>
          <target state="translated">속성이 요소의 기본 컬렉션인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is the default collection of an element; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성이 요소의 기본 컬렉션이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
          <source>This value is ignored if the property is not a collection.</source>
          <target state="translated">속성 컬렉션이 아닌 경우이 값이 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source>Gets a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> is the key for the containing <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>가 포함하는 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> 개체의 키인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object is the key for the containing element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 개체가 포함하는 요소의 키이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source>You can define a new <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> object to be the key for the containing element when implementing the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> element.</source>
          <target state="translated">새 정의할 수 있습니다 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> 개체를 구현 하는 경우 포함 하는 요소에 대 한 키 수는 <ph id="ph2">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source>If this flag is not used, the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph> property will return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 플래그를 사용 하지 않는 경우는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph> 속성은 반환 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsKey">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph> property for a specified property.</source>
          <target state="translated">다음 코드 예제에서는 가져오는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsKey%2A&gt;</ph> 지정된 된 속성에 대 한 속성.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsRequired">
          <source>Gets a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> is required.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>가 필요한지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> is required; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>가 필요하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsRequired">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsRequired">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsRequired%2A&gt;</ph> property value for a specified configuration-property object.</source>
          <target state="translated">다음 코드 예제에서는 가져오는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.IsRequired%2A&gt;</ph> 구성 속성을 지정 된 개체에 대 한 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
          <source>Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">이전 버전의 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>에 대해 serialize된 경우 구성 속성의 형식 이름을 변환해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property requires type-name transformation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성의 형식 이름을 변환해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
          <source>You use <ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> to set this property when you call a constructor that includes a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> parameter.</source>
          <target state="translated">사용 하면 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> 포함 하는 생성자를 호출 하는 경우이 속성을 설정 하는 <ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
          <source>This value is ignored if the property does not contain a type-name string.</source>
          <target state="translated">속성 형식 이름 문자열이 포함 되어 있지 않으면이 값은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
          <source>Indicates whether the configuration property's parent configuration section is queried at serialization time to determine whether the configuration property should be serialized into XML.</source>
          <target state="translated">구성 속성을 XML로 serialize해야 하는지 확인하기 위해 serialization 시 구성 속성의 부모 구성 섹션을 쿼리할지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the parent configuration section should be queried; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">부모 구성 섹션을 쿼리해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
          <source>If you are creating a configuration property for the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> or later versions, and if the property value should not be serialized to XML when an earlier version of the framework is targeted, set this property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">에 대 한 구성 속성을 만들려는 경우에 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> 이상 버전에서 이전 버전의 프레임 워크를 대상 하는 경우 XML로 속성 값을 serialize 할 해야, 하는 경우이 속성을 설정 하 고 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
          <source>You use <ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> to set this property when you call a constructor that includes a <ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> parameter.</source>
          <target state="translated">사용 하면 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> 포함 하는 생성자를 호출 하는 경우이 속성을 설정 하는 <ph id="ph2">&lt;xref:System.Configuration.ConfigurationPropertyOptions&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Name">
          <source>Gets the name of this <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Name">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Name">
          <source>If an instance of a <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> is a default collection, its name will be automatically defined to be an empty string.</source>
          <target state="translated">인스턴스는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> 기본 컬렉션은 빈 문자열일 수에 해당 이름을 자동으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Name">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Name%2A&gt;</ph> for a specified property.</source>
          <target state="translated">다음 코드 예제에서는 가져오는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Name%2A&gt;</ph> 지정된 된 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Type">
          <source>Gets the type of this <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 개체의 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Type">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the type of this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 개체의 형식을 나타내는 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Type">
          <source>Use <ph id="ph1">`Type`</ph> to determine the fully qualified namespace and class name for this derived instance of <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>.</source>
          <target state="translated">사용 하 여 <ph id="ph1">`Type`</ph> 의 파생된이 인스턴스에 대 한 정규화 된 네임 스페이스 및 클래스 이름을 확인 하려면 <ph id="ph2">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Type">
          <source>The following example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Type%2A&gt;</ph> property value for a specified configuration-property object.</source>
          <target state="translated">다음 예제에서는 가져오는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Type%2A&gt;</ph> 구성 속성을 지정 된 개체에 대 한 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationProperty.Validator">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorAttribute" /&gt;</ph>, which is used to validate this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorAttribute" /&gt;</ph> 개체의 유효성을 검사하는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Validator">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorBase" /&gt;</ph> validator, which is used to validate this <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationValidatorBase" /&gt;</ph>의 유효성을 검사하는 데 사용되는 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 유효성 검사기입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationProperty.Validator">
          <source>The following code example shows how to get the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Validator%2A&gt;</ph> for a specified property.</source>
          <target state="translated">다음 코드 예제에서는 가져오는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationProperty.Validator%2A&gt;</ph> 지정된 된 속성에 대 한 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>