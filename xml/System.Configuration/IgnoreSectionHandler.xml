<Type Name="IgnoreSectionHandler" FullName="System.Configuration.IgnoreSectionHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d85f6bf5deca24e113296b02ca921e5a28b60c2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30376657" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IgnoreSectionHandler : System.Configuration.IConfigurationSectionHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IgnoreSectionHandler extends System.Object implements class System.Configuration.IConfigurationSectionHandler" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IgnoreSectionHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class IgnoreSectionHandler&#xA;Implements IConfigurationSectionHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class IgnoreSectionHandler : System::Configuration::IConfigurationSectionHandler" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.IConfigurationSectionHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="N:System.Configuration" /> 형식으로 처리되지 않는 구성 섹션에 대한 레거시 섹션 처리기 정의를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구성 시스템에서 완전히 구성 정보를 수집 하도록 구성 파일을 구문 분석 하 고에 해당 하는 항목이 없는 구성 섹션을 발견 하면 예외를 throw는 `configSections` 섹션.  
  
 처리 되지 않는 섹션는 <xref:System.Configuration> 새 래퍼 형식, 형식 <xref:System.Configuration.IgnoreSection> 제공 됩니다. 구성 파일 구문 분석 하는 예외를 방지 하기 위해입니다.  
  
 레거시 용도로 <xref:System.Configuration.IgnoreSectionHandler> 도 제공 됩니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IgnoreSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IgnoreSectionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IgnoreSectionHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IgnoreSectionHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Configuration.IgnoreSectionHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public virtual object Create (object parent, object configContext, System.Xml.XmlNode section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object parent, object configContext, class System.Xml.XmlNode section) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Create (parent As Object, configContext As Object, section As XmlNode) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Create(System::Object ^ parent, System::Object ^ configContext, System::Xml::XmlNode ^ section);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Object" />
        <Parameter Name="configContext" Type="System.Object" />
        <Parameter Name="section" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="parent">해당 상위 구성 섹션의 구성 설정입니다.</param>
        <param name="configContext">구성 섹션 처리기가 해당 구성 값을 계산하는 가상 경로입니다. 보통 이 매개 변수는 예약되며 <see langword="null" />입니다.</param>
        <param name="section">처리할 구성 정보를 포함하는 <see cref="T:System.Xml.XmlNode" />입니다. 구성 섹션의 XML 내용에 직접 액세스할 수 있도록 합니다.</param>
        <summary>새 구성 처리기를 만들고 지정된 구성 개체를 섹션 처리기 컬렉션에 추가합니다.</summary>
        <returns>만들어진 구성 처리기 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>