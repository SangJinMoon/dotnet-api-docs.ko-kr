<Type Name="IdnElement" FullName="System.Configuration.IdnElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f329cfd24dcdeb0004a431219a970a97d70fbeb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IdnElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IdnElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IdnElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IdnElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdnElement sealed : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7f8d2-101">
        <see cref="T:System.Uri" /> 클래스에서 IDN(International Domain Name) 처리에 대한 구성 설정을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7f8d2-101">Provides the configuration setting for International Domain Name (IDN) processing in the <see cref="T:System.Uri" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f8d2-102">기존 <xref:System.Uri?displayProperty=nameWithType> 클래스 RFC 3987을 기반으로 하는 식별자 IRI (International Resource)에 대 한 지원을 제공 하도록 확장 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-102">The existing <xref:System.Uri?displayProperty=nameWithType> class has been extended to provide support for International Resource Identifiers (IRI) based on RFC 3987.</span></span> <span data-ttu-id="7f8d2-103">현재 사용자의 경우 IRI를 사용하도록 설정하지 않는 한 .NET Framework 2.0 동작에서 차이를 느끼지 못할 것입니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-103">Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI.</span></span> <span data-ttu-id="7f8d2-104">이 덕분에 .NET Framework 이전 버전과의 응용 프로그램 호환성이 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-104">This ensures application compatibility with prior versions of the .NET Framework.</span></span>  
  
 <span data-ttu-id="7f8d2-105">에 대 한 구성 설정의 <xref:System.Configuration.IdnElement> 간접적으로 제어 하 여는 <xref:System.Configuration.IriParsingElement> 제어 하에서 IRI 처리는 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-105">The configuration setting for the <xref:System.Configuration.IdnElement> is indirectly controlled by the <xref:System.Configuration.IriParsingElement> configuration setting that controls IRI processing in the <xref:System.Uri?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="7f8d2-106">IDN 처리가 가능하려면 IRI 처리를 사용하도록 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-106">IRI processing must be enabled for IDN processing to be possible.</span></span> <span data-ttu-id="7f8d2-107">IRI 처리가 사용하지 않도록 설정되면 IDN 처리는 .NET Framework 2.0 동작이 호환성에 사용되고 IDN 이름이 사용되지 않는 기본 설정으로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-107">If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.</span></span>  
  
 <span data-ttu-id="7f8d2-108">다국어 도메인 이름 (IDN) 특성 IDN 처리 하는 것을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-108">The Internationalized Domain Name (IDN) attribute only controls IDN processing.</span></span> <span data-ttu-id="7f8d2-109">다른 모든 IRI 처리 (예: 문자 정규화)는 기본적으로 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-109">All other IRI processing (character normalization, for example) is performed by default.</span></span>  
  
 <span data-ttu-id="7f8d2-110">에 대 한 구성 설정을 <xref:System.Configuration.IdnElement> 읽을 한 번 때 첫 번째 <xref:System.Uri?displayProperty=nameWithType> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-110">The configuration setting for the <xref:System.Configuration.IdnElement> will be read once when the first <xref:System.Uri?displayProperty=nameWithType> class is constructed.</span></span> <span data-ttu-id="7f8d2-111">해당 시점 후의 구성 설정 변경 내용은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-111">Changes to configuration settings after that time are ignored.</span></span>  
  
 <span data-ttu-id="7f8d2-112">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-112">For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IriParsingElement" />
    <altmember cref="T:System.Configuration.UriSection" />
    <altmember cref="T:System.Uri" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IdnElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdnElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f8d2-113">
            <see cref="T:System.Configuration.IdnElement" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f8d2-113">Initializes a new instance of the <see cref="T:System.Configuration.IdnElement" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f8d2-114">이 생성자는 <xref:System.Configuration.IdnElement> 인스턴스</span><span class="sxs-lookup"><span data-stu-id="7f8d2-114">This constructor creates a <xref:System.Configuration.IdnElement> instance</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public UriIdnScope Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.UriIdnScope Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IdnElement.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As UriIdnScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property UriIdnScope Enabled { UriIdnScope get(); void set(UriIdnScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsKey | System.Configuration.ConfigurationPropertyOptions.IsRequired)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UriIdnScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f8d2-115">
            <see cref="T:System.Configuration.IdnElement" /> 구성 설정의 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f8d2-115">Gets or sets the value of the <see cref="T:System.Configuration.IdnElement" /> configuration setting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f8d2-116">IDN 처리에 대한 현재 구성 설정을 포함하는 <see cref="T:System.UriIdnScope" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f8d2-116">A <see cref="T:System.UriIdnScope" /> that contains the current configuration setting for IDN processing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f8d2-117">국제 도메인 이름 (IDN) 특성 IDN 처리 하는 것을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-117">The International Domain Name (IDN) attribute only controls IDN processing.</span></span> <span data-ttu-id="7f8d2-118">다른 모든 식별자 IRI (International Resource) 처리 (예: 문자 정규화)는 기본적으로 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-118">All other International Resource Identifiers (IRI)  processing (character normalization, for example) is performed by default.</span></span>  
  
 <span data-ttu-id="7f8d2-119">에 대 한 구성 설정의 <xref:System.Configuration.IdnElement> 간접적으로 제어 하 여는 <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> 제어 하에서 IRI 처리는 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-119">The configuration setting for the <xref:System.Configuration.IdnElement> is indirectly controlled by the <xref:System.Configuration.IriParsingElement?displayProperty=nameWithType> configuration setting that controls IRI processing in the <xref:System.Uri?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="7f8d2-120">IDN 처리가 가능하려면 IRI 처리를 사용하도록 설정해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-120">IRI processing must be enabled for IDN processing to be possible.</span></span> <span data-ttu-id="7f8d2-121">IRI 처리가 사용하지 않도록 설정되면 IDN 처리는 .NET Framework 2.0 동작이 호환성에 사용되고 IDN 이름이 사용되지 않는 기본 설정으로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-121">If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.</span></span>  
  
 <span data-ttu-id="7f8d2-122">에 대 한 구성 설정을 <xref:System.Configuration.IdnElement> 읽을 한 번 때 첫 번째 <xref:System.Uri?displayProperty=nameWithType> 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-122">The configuration setting for the <xref:System.Configuration.IdnElement> will be read once when the first <xref:System.Uri?displayProperty=nameWithType> class is constructed.</span></span> <span data-ttu-id="7f8d2-123">해당 시점 후의 구성 설정 변경 내용은 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-123">Changes to configuration settings after that time are ignored.</span></span>  
  
 <span data-ttu-id="7f8d2-124">IRI 지원에 대 한 자세한 내용은 설명 부분을 참조 하십시오.는 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="7f8d2-124">For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Configuration.UriSection" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IdnElement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IdnElement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IdnElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>