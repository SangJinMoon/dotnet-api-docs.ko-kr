<Type Name="ConfigurationSection" FullName="System.Configuration.ConfigurationSection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="50b032013ee388f601a901827cebfb8bd035f798" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380077" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConfigurationSection : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationSection extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationSection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationSection&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationSection abstract : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>구성 파일 내의 섹션을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Configuration.ConfigurationSection> 클래스 사용자 지정 섹션 유형을 구현 하도록 합니다. 확장 된 <xref:System.Configuration.ConfigurationSection> 클래스 사용자 지정 처리 및 사용자 지정 구성 섹션에 대 한 프로그래밍 방식의 액세스를 제공 합니다. 방법에 대 한 정보에 대 한 사용자 지정 구성 섹션을 사용 하 여, 참조 [하는 방법: 만들 사용자 지정 구성 섹션에서는 사용 하 여 ConfigurationSection](http://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234)합니다.  
  
 섹션에 있는 항목과 처리 형식은 등록 된 `configSections` 요소입니다. 예를 들어 구성 파일에서는 "예" 섹션에 표시 된 것을 참조 하십시오.  
  
> [!NOTE]
>  .NET Framework의 이전 버전에서는 구성 섹션 처리기는 데 사용 된 구성 설정을 변경 하려면 프로그래밍 방식으로 합니다. 모든 기본 구성 섹션을 확장 하는 클래스로 표현 됩니다는 이제는 <xref:System.Configuration.ConfigurationSection> 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 섹션을 프로그래밍 방식으로 구현 하는 방법을 보여 줍니다.  
  
 구현 및 특성 사용된 하는 모델을 사용 하 여 구현 하는 사용자 지정 섹션을 사용 하는 방법을 보여 주는 전체 예제를 참조 하십시오. <xref:System.Configuration.ConfigurationElement>합니다.  
  
 [!code-csharp[System.Configuration.ConfigurationSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#1)]  
  
 다음 예제에서는 구성 파일의 일부는 이전 예제에 적용 됩니다.  
  
 ```xml
<?xml version="1.0" encoding="utf-8"?>
  <configuration>  
    <configSections>
      <section name="CustomSection" type="Samples.AspNet. CustomSection, CustomConfigurationSection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="true" />
    </configSections>  

    <CustomSection fileName="default.txt" maxUsers="1000" maxIdleTime="00:15:00" /> 
 
  </configuration>
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>사용자 지정 구성 섹션을 만들려는 프로그래밍 방식으로 또는 선언적 코딩 (특성 사용된) 모델을 사용할 수 있습니다.  
  
-   프로그래밍 모델입니다. 이 모델에서는 각 섹션 특성에 대 한 get 또는 해당 값을 설정 및 기본의 내부 속성 모음에 추가 하는 속성 만들 <see cref="T:System.Configuration.ConfigurationElement" /> 기본 클래스입니다.  
  
-   선언적 모델입니다. 특성 사용된 모델이 라고도 하는이 간단한 모델을 사용 하면 특성으로 데코레이팅 및 속성을 사용 하 여 섹션 특성을 정의할 수 있습니다. 이러한 특성 속성 형식 및 기본값에 대 한 ASP.NET 구성 시스템을 지시합니다. 리플렉션을 통해 가져온이 정보를 통해 ASP.NET 구성 시스템 섹션 속성 개체를 만들고 필요한 초기화를 수행 합니다.  
  
 <see cref="T:System.Configuration.Configuration" /> 클래스에는 구성 파일 편집에 대 한 프로그래밍 방식으로 액세스할 수 있습니다. 읽기 또는 쓰기를 다음과 같이 이러한 파일에 액세스할 수 있습니다.  
  
-   읽기. 사용 하면 <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> 또는 <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> 구성 정보를 읽습니다. Note 사용자나 읽는 프로세스는 다음 권한이 있어야 합니다.  
  
    -   현재 구성 계층 구조 수준에서 구성 파일에 대 한 권한이 읽기입니다.  
  
    -   에 대해 읽기 권한이 모든 부모 구성 파일입니다.  
  
     경우 응용 프로그램에서 자체 구성에 대 한 읽기 전용 액세스에 필요한 것이 좋습니다 사용 하면는 <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /> 오버 로드 된 메서드가 웹 응용 프로그램의 경우 또는 <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> 클라이언트 응용 프로그램의 경우.  
  
     이러한 메서드에 액세스할 수 있는 보다 더 나은 성능을를 현재 응용 프로그램에 대 한 캐시 된 구성 값으로는 <see cref="T:System.Configuration.Configuration" /> 클래스입니다.  
  
 <block subset="none" type="note"><para>  
 정적을 사용 하는 경우 <see langword="GetSection" /> 를 받는 메서드에 <paramref name="path" /> 매개 변수는 <paramref name="path" /> 매개 변수는 현재 실행 중인에 대 한 구성 정보를 응용 프로그램의 코드가 실행 되 고; 그렇지 않으면 매개 변수는 무시 됩니다 참조 해야 합니다 응용 프로그램에 반환 됩니다.  
  
</para></block>  
  
-   쓰는 중입니다. 하나를 사용 하는 <see cref="Overload:System.Configuration.Configuration.Save" /> 구성 정보를 작성 하는 방법입니다. Note 사용자 또는 프로세스를 기록 하는 다음 권한이 있어야 합니다.  
  
    -   구성 파일 및 현재 구성 계층 구조 수준에서 디렉터리에 대 한 쓰기입니다.  
  
    -   에 대해 읽기 권한이 모든 구성 파일입니다.</para>
    </block>
    <altmember cref="T:System.Configuration.Configuration" />
    <altmember cref="T:System.Configuration.SectionInformation" />
    <altmember cref="T:System.Configuration.ConfigurationElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationSection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Configuration.ConfigurationSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 <xref:System.Configuration.ConfigurationSection.%23ctor%2A> 생성자를 정의 하면 사용자 지정 섹션 형식을 먼저 합니다. 예를 참조 하십시오.는 <xref:System.Configuration.ConfigurationSection> 클래스 개요입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Configuration.ConfigurationSection.%23ctor%2A> 생성자를 사용하는 방법을 보여 줍니다. 이 예에서는 라는 사용자 지정 섹션 클래스 만들었다고 가정 `CustomSection`합니다. 이러한 클래스의 예제를 보려면는 <xref:System.Configuration.ConfigurationSection> 클래스 개요입니다.  
  
 [!code-csharp[System.Configuration.ConfigurationSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#2)]
 [!code-vb[System.Configuration.ConfigurationSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeSection">
      <MemberSignature Language="C#" Value="protected internal virtual void DeserializeSection (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void DeserializeSection(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub DeserializeSection (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void DeserializeSection(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">구성 파일에서 읽는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</param>
        <summary>구성 파일에서 XML을 읽습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deserialization은 구성 파일, 실시간 데이터를 변환 하는 및 개체에서 해당 저장소에서 XML 데이터 읽기를 말합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <paramref name="reader" />가 구성 파일에서 요소를 찾지 못한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeObject">
      <MemberSignature Language="C#" Value="protected internal virtual object GetRuntimeObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object GetRuntimeObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetRuntimeObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ GetRuntimeObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의될 때 사용자 지정 개체를 반환합니다.</summary>
        <returns>섹션을 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때는 <xref:System.Configuration.Configuration.GetSection%2A> 메서드가 런타임에 호출 되 면 구성 시스템의 적절 한 인스턴스를 먼저 만듭니다는 <xref:System.Configuration.ConfigurationSection> 클래스를 다음에서 가져온 개체를 반환 된 <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> 메서드.  
  
 기본적으로 <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> 단순히 나타내는 개체를 반환 된 <xref:System.Configuration.ConfigurationSection> 를 호출한 것입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A> 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Configuration.ConfigurationSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#4)]
 [!code-vb[System.Configuration.ConfigurationSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의할 수 있습니다는 <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> 메서드를 런타임 시 사용자 지정 형식을 반환 합니다.  
  
 예를 들어에 있는 설정의 런타임 수정을 제한 하는 <see cref="T:System.Configuration.ConfigurationSection" /> 재정의할 수 클래스 <see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /> 하 고 있는 경우에 설정을 수정할 수를 제한 하는 사용자 지정 형식을 반환 합니다.  
  
 런타임 개체 내부만 일 경우 반환된 된 개체를 정의 하는 어셈블리 외부에서 사용할 수 없습니다. 파생 되는 개체를 만드는 한 가지 방법은 <see cref="T:System.Configuration.ConfigurationSection" /> 런타임에 어셈블리의 코드에서 액세스할 수 있습니다를 반환 하는 메서드가 있는 내부 런타임 개체를 만드는 것에 <see cref="T:System.Configuration.ConfigurationSection" /> 구현 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="protected internal override bool IsModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.IsModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsModified () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsModified();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 구성 요소가 파생 클래스에서 구현되었을 때 마지막으로 저장되거나 로드된 이후 수정되었는지 여부를 나타냅니다.</summary>
        <returns>
          요소가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetModified">
      <MemberSignature Language="C#" Value="protected internal override void ResetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void ResetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ResetModified" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub ResetModified ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void ResetModified();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 구현되는 경우 <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> 메서드의 값을 <see langword="false" />로 다시 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SectionInformation">
      <MemberSignature Language="C#" Value="public System.Configuration.SectionInformation SectionInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SectionInformation SectionInformation" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ConfigurationSection.SectionInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SectionInformation As SectionInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::SectionInformation ^ SectionInformation { System::Configuration::SectionInformation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SectionInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 지정할 수 없는 <see cref="T:System.Configuration.SectionInformation" /> 개체의 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationSection" /> 개체를 가져옵니다.</summary>
        <value>사용자가 지정할 수 없는 <see cref="T:System.Configuration.SectionInformation" /> 정보와 기능을 포함하는 <see cref="T:System.Configuration.ConfigurationSection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Configuration.ConfigurationSection.SectionInformation%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Configuration.ConfigurationSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/CS/CustomConfigurationSection.cs#3)]
 [!code-vb[System.Configuration.ConfigurationSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationSection/VB/CustomConfigurationSection.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SectionInformation" />
      </Docs>
    </Member>
    <Member MemberName="SerializeSection">
      <MemberSignature Language="C#" Value="protected internal virtual string SerializeSection (System.Configuration.ConfigurationElement parentElement, string name, System.Configuration.ConfigurationSaveMode saveMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string SerializeSection(class System.Configuration.ConfigurationElement parentElement, string name, valuetype System.Configuration.ConfigurationSaveMode saveMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SerializeSection (parentElement As ConfigurationElement, name As String, saveMode As ConfigurationSaveMode) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ SerializeSection(System::Configuration::ConfigurationElement ^ parentElement, System::String ^ name, System::Configuration::ConfigurationSaveMode saveMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" />
      </Parameters>
      <Docs>
        <param name="parentElement">병합 취소를 수행할 때 부모로 사용할 <see cref="T:System.Configuration.ConfigurationElement" /> 인스턴스입니다.</param>
        <param name="name">만들 섹션의 이름입니다.</param>
        <param name="saveMode">문자열에 쓸 때 사용할 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 인스턴스입니다.</param>
        <summary>
          <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 병합되지 않은 뷰가 들어 있는 XML 문자열을 파일에 쓸 단일 섹션으로 만듭니다.</summary>
        <returns>
          <see cref="T:System.Configuration.ConfigurationSection" /> 개체의 병합되지 않은 뷰가 들어 있는 XML 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직렬화를 XML 형식 및 해당 저장소 구성 파일에는 개체에 포함 하는 실시간 데이터의 변환과 가리킵니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeElementInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeElementInTargetVersion (System.Configuration.ConfigurationElement element, string elementName, System.Runtime.Versioning.FrameworkName targetFramework);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeElementInTargetVersion(class System.Configuration.ConfigurationElement element, string elementName, class System.Runtime.Versioning.FrameworkName targetFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeElementInTargetVersion (element As ConfigurationElement, elementName As String, targetFramework As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeElementInTargetVersion(System::Configuration::ConfigurationElement ^ element, System::String ^ elementName, System::Runtime::Versioning::FrameworkName ^ targetFramework);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Configuration.ConfigurationElement" />
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" />
      </Parameters>
      <Docs>
        <param name="element">serialization 후보인 <see cref="T:System.Configuration.ConfigurationElement" /> 개체입니다.</param>
        <param name="elementName">XML에 표시되는 <see cref="T:System.Configuration.ConfigurationElement" /> 개체의 이름입니다.</param>
        <param name="targetFramework">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 대상 버전입니다.</param>
        <summary>지정된 대상 버전의 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]에 대해 구성 개체 계층 구조가 serialize된 경우 지정된 요소를 serialize할지 여부를 나타냅니다.</summary>
        <returns>
          <paramref name="element" />를 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대해 만들어진 각 구성 섹션은 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 명시적으로이 메서드를 재정의 하 고 반환 해야 이상 버전 및 `true`, 지정된 된 요소에 대 한 지정된 된 버전의 유효한 경우에는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다. 이전 버전의에 대해 생성 된 기존 구성 섹션은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 변경 될 필요가 없습니다.  
  
 기본 형식 항상 반환 하는이 메서드의 기본 구현을 포함 `true`합니다. 구성 섹션을 구현 하는 경우이 메서드를 재정의 하지 않으면 기본적으로 모든 프레임 워크 버전의 구성 섹션에 포함 된 모든 구성 요소 직렬화 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePropertyInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializePropertyInTargetVersion (System.Configuration.ConfigurationProperty property, string propertyName, System.Runtime.Versioning.FrameworkName targetFramework, System.Configuration.ConfigurationElement parentConfigurationElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializePropertyInTargetVersion(class System.Configuration.ConfigurationProperty property, string propertyName, class System.Runtime.Versioning.FrameworkName targetFramework, class System.Configuration.ConfigurationElement parentConfigurationElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializePropertyInTargetVersion (property As ConfigurationProperty, propertyName As String, targetFramework As FrameworkName, parentConfigurationElement As ConfigurationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializePropertyInTargetVersion(System::Configuration::ConfigurationProperty ^ property, System::String ^ propertyName, System::Runtime::Versioning::FrameworkName ^ targetFramework, System::Configuration::ConfigurationElement ^ parentConfigurationElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Configuration.ConfigurationProperty" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" />
        <Parameter Name="parentConfigurationElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="property">serialization 후보인 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체입니다.</param>
        <param name="propertyName">XML에 표시되는 <see cref="T:System.Configuration.ConfigurationProperty" /> 개체의 이름입니다.</param>
        <param name="targetFramework">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 대상 버전입니다.</param>
        <param name="parentConfigurationElement">속성의 부모 요소입니다.</param>
        <summary>지정된 대상 버전의 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]에 대해 구성 개체 계층 구조가 serialize된 경우 지정된 속성을 serialize할지 여부를 나타냅니다.</summary>
        <returns>
          <paramref name="property" />를 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대해 만들어진 각 구성 섹션은 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 명시적으로이 메서드를 재정의 하 고 반환 해야 이상 버전 및 `true`, 지정된 된 속성의 지정된 된 버전에 대 한 유효한 경우에는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다. 이전 버전의에 대해 생성 된 기존 구성 섹션은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 변경 될 필요가 없습니다.  
  
 기본 형식 항상 반환 하는이 메서드의 기본 구현을 포함 `true`합니다. 구성 섹션을 구현 하는 경우이 메서드를 재정의 하지 않으면 기본적으로 모든 프레임 워크 버전의 구성 섹션에 포함 된 모든 구성 속성이 직렬화 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSectionInTargetVersion">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeSectionInTargetVersion (System.Runtime.Versioning.FrameworkName targetFramework);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeSectionInTargetVersion(class System.Runtime.Versioning.FrameworkName targetFramework) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeSectionInTargetVersion (targetFramework As FrameworkName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeSectionInTargetVersion(System::Runtime::Versioning::FrameworkName ^ targetFramework);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetFramework" Type="System.Runtime.Versioning.FrameworkName" />
      </Parameters>
      <Docs>
        <param name="targetFramework">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 대상 버전입니다.</param>
        <summary>지정된 대상 버전의 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]에 대해 구성 개체 계층 구조가 serialize된 경우 현재 <see cref="T:System.Configuration.ConfigurationSection" /> 인스턴스를 serialize할지 여부를 나타냅니다.</summary>
        <returns>
          현재 섹션을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대해 만들어진 각 구성 섹션은 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 명시적으로이 메서드를 재정의 하 고 반환 해야 이상 버전 및 `true`, 구성 섹션의 지정된 된 버전에 대 한 유효한 경우에는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다. 이전 버전의에 대해 생성 된 기존 구성 섹션은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 변경 될 필요가 없습니다.  
  
 기본 형식 항상 반환 하는이 메서드의 기본 구현을 포함 `true`합니다. 구성 섹션을 구현 하는 경우이 메서드를 재정의 하지 않으면 기본적으로 모든 프레임 워크 버전의 구성 섹션 직렬화 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>