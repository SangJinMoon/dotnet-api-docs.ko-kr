<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConfigurationSection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac550b032013ee388f601a901827cebfb8bd035f798.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50b032013ee388f601a901827cebfb8bd035f798</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.ConfigurationSection">
          <source>Represents a section within a configuration file.</source>
          <target state="translated">구성 파일 내의 섹션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>You use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class to implement a custom section type.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> 클래스 사용자 지정 섹션 유형을 구현 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Extend the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class to provide custom handling and programmatic access to custom configuration sections.</source>
          <target state="translated">확장 된 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> 클래스 사용자 지정 처리 및 사용자 지정 구성 섹션에 대 한 프로그래밍 방식의 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>For information about how use custom configuration sections, see <bpt id="p1">[</bpt>How to: Create Custom Configuration Sections Using ConfigurationSection<ept id="p1">](http://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234)</ept>.</source>
          <target state="translated">방법에 대 한 정보에 대 한 사용자 지정 구성 섹션을 사용 하 여, 참조 <bpt id="p1">[</bpt>하는 방법: 만들 사용자 지정 구성 섹션에서는 사용 하 여 ConfigurationSection<ept id="p1">](http://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>A section registers its handling type with an entry in the <ph id="ph1">`configSections`</ph> element.</source>
          <target state="translated">섹션에 있는 항목과 처리 형식은 등록 된 <ph id="ph1">`configSections`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>For an example, see the configuration file excerpt shown in the Example section.</source>
          <target state="translated">예를 들어 구성 파일에서는 "예" 섹션에 표시 된 것을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>In previous versions of the .NET Framework, configuration section handlers were used to make changes to configuration settings programmatically.</source>
          <target state="translated">.NET Framework의 이전 버전에서는 구성 섹션 처리기는 데 사용 된 구성 설정을 변경 하려면 프로그래밍 방식으로 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Now, all the default configuration sections are represented by classes that extend the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class.</source>
          <target state="translated">모든 기본 구성 섹션을 확장 하는 클래스로 표현 됩니다는 이제는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>The following example shows how to implement a custom section programmatically.</source>
          <target state="translated">다음 예제에서는 사용자 지정 섹션을 프로그래밍 방식으로 구현 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>For a complete example that shows how to implement and use a custom section implemented using the attributed model, see <ph id="ph1">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>.</source>
          <target state="translated">구현 및 특성 사용된 하는 모델을 사용 하 여 구현 하는 사용자 지정 섹션을 사용 하는 방법을 보여 주는 전체 예제를 참조 하십시오. <ph id="ph1">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>The following example is an excerpt of the configuration file as it applies to the previous example.</source>
          <target state="translated">다음 예제에서는 구성 파일의 일부는 이전 예제에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>You can use a programmatic or a declarative (attributed) coding model to create custom configuration sections:</source>
          <target state="translated">사용자 지정 구성 섹션을 만들려는 프로그래밍 방식으로 또는 선언적 코딩 (특성 사용된) 모델을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Programmatic model.</source>
          <target state="translated">프로그래밍 모델입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>This model requires that for each section attribute you create a property to get or set its value and add it to the internal property bag of the underlying <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> base class.</source>
          <target state="translated">이 모델에서는 각 섹션 특성에 대 한 get 또는 해당 값을 설정 및 기본의 내부 속성 모음에 추가 하는 속성 만들 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Declarative model.</source>
          <target state="translated">선언적 모델입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>This simpler model, also called the attributed model, allows you to define a section attribute by using a property and decorating it with attributes.</source>
          <target state="translated">특성 사용된 모델이 라고도 하는이 간단한 모델을 사용 하면 특성으로 데코레이팅 및 속성을 사용 하 여 섹션 특성을 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>These attributes instruct the ASP.NET configuration system about the property types and their default values.</source>
          <target state="translated">이러한 특성 속성 형식 및 기본값에 대 한 ASP.NET 구성 시스템을 지시합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>With this information, obtained through reflection, the ASP.NET configuration system creates the section property objects and performs the required initialization.</source>
          <target state="translated">리플렉션을 통해 가져온이 정보를 통해 ASP.NET 구성 시스템 섹션 속성 개체를 만들고 필요한 초기화를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.Configuration" /&gt;</ph> class allows programmatic access for editing configuration files.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.Configuration" /&gt;</ph> 클래스에는 구성 파일 편집에 대 한 프로그래밍 방식으로 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>You can access these files for reading or writing as follows:</source>
          <target state="translated">읽기 또는 쓰기를 다음과 같이 이러한 파일에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Reading.</source>
          <target state="translated">읽기.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>You use <ph id="ph1">&lt;see cref="M:System.Configuration.Configuration.GetSection(System.String)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /&gt;</ph> to read configuration information.</source>
          <target state="translated">사용 하면 <ph id="ph1">&lt;see cref="M:System.Configuration.Configuration.GetSection(System.String)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /&gt;</ph> 구성 정보를 읽습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Note that the user or process that reads must have the following permissions:</source>
          <target state="translated">Note 사용자나 읽는 프로세스는 다음 권한이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Read permission on the configuration file at the current configuration hierarchy level.</source>
          <target state="translated">현재 구성 계층 구조 수준에서 구성 파일에 대 한 권한이 읽기입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Read permissions on all the parent configuration files.</source>
          <target state="translated">에 대해 읽기 권한이 모든 부모 구성 파일입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>If your application needs read-only access to its own configuration, it is recommended you use the <ph id="ph1">&lt;see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /&gt;</ph> overloaded methods in the case of Web applications, or the <ph id="ph2">&lt;see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /&gt;</ph> method in the case of client applications.</source>
          <target state="translated">경우 응용 프로그램에서 자체 구성에 대 한 읽기 전용 액세스에 필요한 것이 좋습니다 사용 하면는 <ph id="ph1">&lt;see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /&gt;</ph> 오버 로드 된 메서드가 웹 응용 프로그램의 경우 또는 <ph id="ph2">&lt;see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /&gt;</ph> 클라이언트 응용 프로그램의 경우.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>These methods provide access to the cached configuration values for the current application, which has better performance than the <ph id="ph1">&lt;see cref="T:System.Configuration.Configuration" /&gt;</ph> class.</source>
          <target state="translated">이러한 메서드에 액세스할 수 있는 보다 더 나은 성능을를 현재 응용 프로그램에 대 한 캐시 된 구성 값으로는 <ph id="ph1">&lt;see cref="T:System.Configuration.Configuration" /&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>If you use a static <ph id="ph1">&lt;see langword="GetSection" /&gt;</ph> method that takes a <ph id="ph2">&lt;paramref name="path" /&gt;</ph> parameter, the <ph id="ph3">&lt;paramref name="path" /&gt;</ph> parameter must refer to the application in which the code is running; otherwise, the parameter is ignored and configuration information for the currently-running application is returned.</source>
          <target state="translated">정적을 사용 하는 경우 <ph id="ph1">&lt;see langword="GetSection" /&gt;</ph> 를 받는 메서드에 <ph id="ph2">&lt;paramref name="path" /&gt;</ph> 매개 변수는 <ph id="ph3">&lt;paramref name="path" /&gt;</ph> 매개 변수는 현재 실행 중인에 대 한 구성 정보를 응용 프로그램의 코드가 실행 되 고; 그렇지 않으면 매개 변수는 무시 됩니다 참조 해야 합니다 응용 프로그램에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Writing.</source>
          <target state="translated">쓰는 중입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>You use one of the <ph id="ph1">&lt;see cref="Overload:System.Configuration.Configuration.Save" /&gt;</ph> methods to write configuration information.</source>
          <target state="translated">하나를 사용 하는 <ph id="ph1">&lt;see cref="Overload:System.Configuration.Configuration.Save" /&gt;</ph> 구성 정보를 작성 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Note that the user or process that writes must have the following permissions:</source>
          <target state="translated">Note 사용자 또는 프로세스를 기록 하는 다음 권한이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Write permission on the configuration file and directory at the current configuration hierarchy level.</source>
          <target state="translated">구성 파일 및 현재 구성 계층 구조 수준에서 디렉터리에 대 한 쓰기입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ConfigurationSection">
          <source>Read permissions on all the configuration files.</source>
          <target state="translated">에 대해 읽기 권한이 모든 구성 파일입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>To use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.%23ctor%2A&gt;</ph> constructor, you need to define a custom section type first.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.%23ctor%2A&gt;</ph> 생성자를 정의 하면 사용자 지정 섹션 형식을 먼저 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>For an example see the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class overview.</source>
          <target state="translated">예를 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.%23ctor%2A&gt;</ph> 생성자를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>This example assumes that you have created a custom section class named <ph id="ph1">`CustomSection`</ph>.</source>
          <target state="translated">이 예에서는 라는 사용자 지정 섹션 클래스 만들었다고 가정 <ph id="ph1">`CustomSection`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.#ctor">
          <source>For an example of such a class, see the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class overview.</source>
          <target state="translated">이러한 클래스의 예제를 보려면는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object, which reads from the configuration file.</source>
          <target state="translated">구성 파일에서 읽는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
          <source>Reads XML from the configuration file.</source>
          <target state="translated">구성 파일에서 XML을 읽습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
          <source>Deserialization refers to the reading of XML data from a configuration file, its transformation into real-time data, and its storage in an object.</source>
          <target state="translated">Deserialization은 구성 파일, 실시간 데이터를 변환 하는 및 개체에서 해당 저장소에서 XML 데이터 읽기를 말합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> found no elements in the configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph>가 구성 파일에서 요소를 찾지 못한 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>Returns a custom object when overridden in a derived class.</source>
          <target state="translated">파생 클래스에서 재정의될 때 사용자 지정 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>The object representing the section.</source>
          <target state="translated">섹션을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>When the <ph id="ph1">&lt;xref:System.Configuration.Configuration.GetSection%2A&gt;</ph> method is called at run time, the configuration system first creates an appropriate instance of the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class, and then returns the object it obtains from the <ph id="ph3">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph> method.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Configuration.Configuration.GetSection%2A&gt;</ph> 메서드가 런타임에 호출 되 면 구성 시스템의 적절 한 인스턴스를 먼저 만듭니다는 <ph id="ph2">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> 클래스를 다음에서 가져온 개체를 반환 된 <ph id="ph3">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>By default, <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph> simply returns the object that represents the <ph id="ph2">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> from which it is called.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph> 단순히 나타내는 개체를 반환 된 <ph id="ph2">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> 를 호출한 것입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.GetRuntimeObject%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>You can override the <ph id="ph1">&lt;see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /&gt;</ph> method to return a custom type at run time.</source>
          <target state="translated">재정의할 수 있습니다는 <ph id="ph1">&lt;see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /&gt;</ph> 메서드를 런타임 시 사용자 지정 형식을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>For example, to restrict runtime modification of the settings in the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> class, you can override <ph id="ph2">&lt;see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /&gt;</ph> and return a custom type that enforces restrictions on which settings can be modified, if any.</source>
          <target state="translated">예를 들어에 있는 설정의 런타임 수정을 제한 하는 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> 재정의할 수 클래스 <ph id="ph2">&lt;see cref="M:System.Configuration.ConfigurationSection.GetRuntimeObject" /&gt;</ph> 하 고 있는 경우에 설정을 수정할 수를 제한 하는 사용자 지정 형식을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>If the runtime object is internal only, the returned object cannot be used outside the assembly that defines it.</source>
          <target state="translated">런타임 개체 내부만 일 경우 반환된 된 개체를 정의 하는 어셈블리 외부에서 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <source>One way to create an object that derives from <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> and can only be accessed by code in your assembly at run time is to create an internal runtime object that has a method that returns your <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> implementation.</source>
          <target state="translated">파생 되는 개체를 만드는 한 가지 방법은 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> 런타임에 어셈블리의 코드에서 액세스할 수 있습니다를 반환 하는 메서드가 있는 내부 런타임 개체를 만드는 것에 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.IsModified">
          <source>Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.</source>
          <target state="translated">이 구성 요소가 파생 클래스에서 구현되었을 때 마지막으로 저장되거나 로드된 이후 수정되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.IsModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element has been modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요소가 수정되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ResetModified">
          <source>Resets the value of the <ph id="ph1">&lt;see cref="M:System.Configuration.ConfigurationElement.IsModified" /&gt;</ph> method to <ph id="ph2">&lt;see langword="false" /&gt;</ph> when implemented in a derived class.</source>
          <target state="translated">파생 클래스에서 구현되는 경우 <ph id="ph1">&lt;see cref="M:System.Configuration.ConfigurationElement.IsModified" /&gt;</ph> 메서드의 값을 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Configuration.ConfigurationSection.SectionInformation">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Configuration.SectionInformation" /&gt;</ph> object that contains the non-customizable information and functionality of the <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> object.</source>
          <target state="translated">사용자가 지정할 수 없는 <ph id="ph1">&lt;see cref="T:System.Configuration.SectionInformation" /&gt;</ph> 개체의 정보와 기능을 포함하는 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationSection.SectionInformation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SectionInformation" /&gt;</ph> that contains the non-customizable information and functionality of the <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph>.</source>
          <target state="translated">사용자가 지정할 수 없는 <ph id="ph1">&lt;see cref="T:System.Configuration.SectionInformation" /&gt;</ph> 정보와 기능을 포함하는 <ph id="ph2">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ConfigurationSection.SectionInformation">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.SectionInformation%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection.SectionInformation%2A&gt;</ph> 속성을 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> instance to use as the parent when performing the un-merge.</source>
          <target state="translated">병합 취소를 수행할 때 부모로 사용할 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>The name of the section to create.</source>
          <target state="translated">만들 섹션의 이름입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSaveMode" /&gt;</ph> instance to use when writing to a string.</source>
          <target state="translated">문자열에 쓸 때 사용할 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSaveMode" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>Creates an XML string containing an unmerged view of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> object as a single section to write to a file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> 개체의 병합되지 않은 뷰가 들어 있는 XML 문자열을 파일에 쓸 단일 섹션으로 만듭니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>An XML string containing an unmerged view of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> 개체의 병합되지 않은 뷰가 들어 있는 XML 문자열입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <source>Serialization refers to the transformation of real-time data, contained in an object, to XML format and its storage to a configuration file.</source>
          <target state="translated">직렬화를 XML 형식 및 해당 저장소 구성 파일에는 개체에 포함 하는 실시간 데이터의 변환과 가리킵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> object that is a candidate for serialization.</source>
          <target state="translated">serialization 후보인 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> object as it occurs in XML.</source>
          <target state="translated">XML에 표시되는 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationElement" /&gt;</ph> 개체의 이름입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>The target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 대상 버전입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>Indicates whether the specified element should be serialized when the configuration object hierarchy is serialized for the specified target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">지정된 대상 버전의 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>에 대해 구성 개체 계층 구조가 serialize된 경우 지정된 요소를 serialize할지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="element" /&gt;</ph> should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="element" /&gt;</ph>를 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>Each configuration section that is created for the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> and later versions must explicitly override this method and return <ph id="ph2">`true`</ph>, but only if the specified element is valid for the specified version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">에 대해 만들어진 각 구성 섹션은 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> 명시적으로이 메서드를 재정의 하 고 반환 해야 이상 버전 및 <ph id="ph2">`true`</ph>, 지정된 된 요소에 대 한 지정된 된 버전의 유효한 경우에는 <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>Existing configuration sections that were created for earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> do not have to be changed.</source>
          <target state="translated">이전 버전의에 대해 생성 된 기존 구성 섹션은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 변경 될 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>The base type contains a default implementation of this method that always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">기본 형식 항상 반환 하는이 메서드의 기본 구현을 포함 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <source>If you implement a configuration section and you do not override this method, by default all configuration elements that are contained in the configuration section will be serialized for all framework versions.</source>
          <target state="translated">구성 섹션을 구현 하는 경우이 메서드를 재정의 하지 않으면 기본적으로 모든 프레임 워크 버전의 구성 섹션에 포함 된 모든 구성 요소 직렬화 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object that is a candidate for serialization.</source>
          <target state="translated">serialization 후보인 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> object as it occurs in XML.</source>
          <target state="translated">XML에 표시되는 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationProperty" /&gt;</ph> 개체의 이름입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>The target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 대상 버전입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>The parent element of the property.</source>
          <target state="translated">속성의 부모 요소입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>Indicates whether the specified property should be serialized when the configuration object hierarchy is serialized for the specified target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">지정된 대상 버전의 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>에 대해 구성 개체 계층 구조가 serialize된 경우 지정된 속성을 serialize할지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="property" /&gt;</ph> should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="property" /&gt;</ph>를 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>Each configuration section that is created for the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> and later versions must explicitly override this method and return <ph id="ph2">`true`</ph>, but only if the specified property is valid for the specified version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">에 대해 만들어진 각 구성 섹션은 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> 명시적으로이 메서드를 재정의 하 고 반환 해야 이상 버전 및 <ph id="ph2">`true`</ph>, 지정된 된 속성의 지정된 된 버전에 대 한 유효한 경우에는 <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>Existing configuration sections that were created for earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> do not have to be changed.</source>
          <target state="translated">이전 버전의에 대해 생성 된 기존 구성 섹션은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 변경 될 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>The base type contains a default implementation of this method that always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">기본 형식 항상 반환 하는이 메서드의 기본 구현을 포함 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <source>If you implement a configuration section and you do not override this method, by default all configuration properties that are contained in the configuration section will be serialized for all framework versions.</source>
          <target state="translated">구성 섹션을 구현 하는 경우이 메서드를 재정의 하지 않으면 기본적으로 모든 프레임 워크 버전의 구성 섹션에 포함 된 모든 구성 속성이 직렬화 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>The target version of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>의 대상 버전입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>Indicates whether the current <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">지정된 대상 버전의 <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>에 대해 구성 개체 계층 구조가 serialize된 경우 현재 <ph id="ph1">&lt;see cref="T:System.Configuration.ConfigurationSection" /&gt;</ph> 인스턴스를 serialize할지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current section should be serialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 섹션을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>Each configuration section that is created for the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> and later versions must explicitly override this method and return <ph id="ph2">`true`</ph>, but only if the configuration section is valid for the specified version of the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">에 대해 만들어진 각 구성 섹션은 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> 명시적으로이 메서드를 재정의 하 고 반환 해야 이상 버전 및 <ph id="ph2">`true`</ph>, 구성 섹션의 지정된 된 버전에 대 한 유효한 경우에는 <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>Existing configuration sections that were created for earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> do not have to be changed.</source>
          <target state="translated">이전 버전의에 대해 생성 된 기존 구성 섹션은 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 변경 될 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>The base type contains a default implementation of this method that always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">기본 형식 항상 반환 하는이 메서드의 기본 구현을 포함 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <source>If you implement a configuration section and you do not override this method, by default the configuration section will be serialized for all framework versions.</source>
          <target state="translated">구성 섹션을 구현 하는 경우이 메서드를 재정의 하지 않으면 기본적으로 모든 프레임 워크 버전의 구성 섹션 직렬화 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>