<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a37e8ad9c7d249227aef3e73aa8cdbaee9e7d92" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36696856" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type IApplicationSettingsProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>클라이언트 기반 응용 프로그램 설정 공급자의 확장 기능을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램 설정 아키텍처를 사용 하면 사용자 지정 설정 공급자 클래스를 만들어 응용 프로그램 설정에서 파생 된 사용자 지정 저장소 메커니즘을 제공할 수 <xref:System.Configuration.SettingsProvider>합니다. 이러한 클래스는 저장 하 고 속성을 검색 하기 위한 기본 기능을 포함 합니다. 그러나 표준화 된 기능을 구현 하 여 추가할 수는 <xref:System.Configuration.IApplicationSettingsProvider> 사용자 지정 설정 공급자에 대 한 인터페이스입니다. 이 인터페이스는 주로 보다 체계적 핸들 응용 프로그램 버전을 변경 하는 설정 공급자를 사용할 수 있는 세 가지 메서드를 포함 합니다. 일반적으로 설정 공급자는 다음과 같은 경우 예측을 별도로 응용 프로그램의 다른 버전에 대 한 응용 프로그램 설정을 저장 합니다.  
  
-   응용 프로그램의 다른 버전의 병렬 하 여 실행 합니다.  
  
-   응용 프로그램을 업그레이드 하는 경우 응용 프로그램 설정을 유지 됩니다.  
  
-   응용 프로그램 설정을 현재 사용 되는 버전에 대 한 기본값으로 다시 설정 합니다.  
  
 <xref:System.Configuration.LocalFileSettingsProvider> 클래스는 <xref:System.Configuration.IApplicationSettingsProvider> 인터페이스를 구현합니다. 동일한 집합에 포함 된 메서드의 <xref:System.Configuration.IApplicationSettingsProvider> 발견 된 <xref:System.Configuration.ApplicationSettingsBase> 클래스, 응용 프로그램 설정 래퍼와 해당 설정 공급자 간에 미리 정의 된 통신 채널 설정을 사용 하도록 설정 합니다.  
  
> [!NOTE]
>  이 인터페이스는 선택 사항입니다. 공급자는이 인터페이스를 구현 하지 않으면,이 인터페이스에 정의 된 방법 중 하나에 액세스 하려고 하면 알림 없이 설정 인프라 실패 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="iApplicationSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">현재 응용 프로그램의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
        <param name="property">값이 반환될 <see cref="T:System.Configuration.SettingsProperty" />입니다.</param>
        <summary>이전 버전의 동일한 응용 프로그램에 대한 지정된 설정 속성의 값을 반환합니다.</summary>
        <returns>이전 버전의 응용 프로그램에서 마지막으로 설정된 지정된 속성 설정의 값을 포함하는 <see cref="T:System.Configuration.SettingsPropertyValue" />이거나, 설정을 찾을 수 없으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> 메서드와 함께 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> 중 또는 응용 프로그램의 새 버전의 설치 후 응용 프로그램 설정을 마이그레이션하려면 메서드.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">에 대 한 <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> 권한.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit" Usage="iApplicationSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">현재 응용 프로그램의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
        <summary>지정된 응용 프로그램과 연결된 응용 프로그램 설정을 기본값으로 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> 메서드는 지정 된 응용 프로그램 설정 그룹의 저장 된 값을 다시 초기화 합니다. 반면, <xref:System.Configuration.DefaultSettingValueAttribute> 에 저장 된 값이 없으면 속성 초기화 하는 동안 단일 설정 속성의 기본값을 제공 합니다.  
  
 설정 공급자 응용 프로그램 설정의 지정된 된 그룹에 대 한 적절 한 기본값을 결정 합니다. 구현 예를 들어 <xref:System.Configuration.LocalFileSettingsProvider> 사용자 범위 설정을 공유 값으로 다시 설정의 `application.exe.config` 파일; 반대로 변경 하지 않고 응용 프로그램 범위 설정은 그대로 둡니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">에 대 한 <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> 권한.</permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="iApplicationSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">현재 응용 프로그램의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
        <param name="properties">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
        <summary>응용 프로그램이 업그레이드되었음을 공급자에게 알립니다. 이를 통해 공급자는 저장된 설정을 적절하게 업그레이드할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework는 동일한 응용 프로그램의 서로 다른 버전의 side-by-side-설치 및 실행 수 있습니다. 응용 프로그램 설정 공급자에는 격리를 보장할 수는 개별적으로 응용 프로그램의 각 버전에 대 한 응용 프로그램 설정을 저장 합니다. 그러나 다음 현재 응용 프로그램의 이전 버전에서 설정을 마이그레이션하는 것이 좋습니다. 이 마이그레이션 기능을 제공 하려면 사용 하 여는 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> 에서 파생 된 클래스에서 구현 하는 메서드에서 <xref:System.Configuration.SettingsProvider>합니다.  
  
 사용할 수는 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> 메서드와 함께 <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> 중 또는 응용 프로그램의 새 버전의 설치 후 응용 프로그램 설정을 마이그레이션하려면 메서드.  
  
 이 메서드는 모든 응용 프로그램 설정에 대 한 표시 되지 않아야는 <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> , 또는에서 파생 된 전체 설정 래퍼 클래스에 적용 됩니다 <xref:System.Configuration.ApplicationSettingsBase>합니다.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">에 대 한 <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> 권한.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>