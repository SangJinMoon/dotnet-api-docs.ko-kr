<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IApplicationSettingsProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52e29c40f8cbdc9f6186d829367dc515ce43887ef.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e29c40f8cbdc9f6186d829367dc515ce43887ef</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>Defines extended capabilities for client-based application settings providers.</source>
          <target state="translated">클라이언트 기반 응용 프로그램 설정 공급자의 확장 기능을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>The application settings architecture enables you to provide a custom storage mechanism for application settings by creating a custom settings provider, which is a class derived from <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider&gt;</ph>.</source>
          <target state="translated">응용 프로그램 설정 아키텍처를 사용 하면 사용자 지정 설정 공급자 클래스를 만들어 응용 프로그램 설정에서 파생 된 사용자 지정 저장소 메커니즘을 제공할 수 <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>Such a class contains the basic functionality for storing and retrieving properties.</source>
          <target state="translated">이러한 클래스는 저장 하 고 속성을 검색 하기 위한 기본 기능을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>However, you can add additional standardized functionality by implementing the <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph> interface in the custom settings provider.</source>
          <target state="translated">그러나 표준화 된 기능을 구현 하 여 추가할 수는 <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph> 사용자 지정 설정 공급자에 대 한 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>This interface contains three methods that primarily enable the settings provider to more intelligently handle application version changes.</source>
          <target state="translated">이 인터페이스는 주로 보다 체계적 핸들 응용 프로그램 버전을 변경 하는 설정 공급자를 사용할 수 있는 세 가지 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>Typically, the settings provider will store application settings for different versions of an application separately to anticipate the following circumstances:</source>
          <target state="translated">일반적으로 설정 공급자는 다음과 같은 경우 예측을 별도로 응용 프로그램의 다른 버전에 대 한 응용 프로그램 설정을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>Side-by-side execution of different versions of an application.</source>
          <target state="translated">응용 프로그램의 다른 버전의 병렬 하 여 실행 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>Retaining application settings when upgrading an application.</source>
          <target state="translated">응용 프로그램을 업그레이드 하는 경우 응용 프로그램 설정을 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>Resetting the application settings to their default values for the currently used version.</source>
          <target state="translated">응용 프로그램 설정을 현재 사용 되는 버전에 대 한 기본값으로 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph> 인터페이스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>The same set of methods contained by <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph> is also found in the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class, enabling the establishment of a predefined communication channel between an application settings wrapper and its settings provider.</source>
          <target state="translated">동일한 집합에 포함 된 메서드의 <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph> 발견 된 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 클래스, 응용 프로그램 설정 래퍼와 해당 설정 공급자 간에 미리 정의 된 통신 채널 설정을 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>This interface is optional.</source>
          <target state="translated">이 인터페이스는 선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.IApplicationSettingsProvider">
          <source>If a provider does not implement this interface, the settings infrastructure will fail without notification if it attempts to access any of the methods defined by this interface.</source>
          <target state="translated">공급자는이 인터페이스를 구현 하지 않으면,이 인터페이스에 정의 된 방법 중 하나에 액세스 하려고 하면 알림 없이 설정 인프라 실패 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph> describing the current application usage.</source>
          <target state="translated">현재 응용 프로그램의 용도를 설명하는 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsProperty" /&gt;</ph> whose value is to be returned.</source>
          <target state="translated">값이 반환될 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsProperty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
          <source>Returns the value of the specified settings property for the previous version of the same application.</source>
          <target state="translated">이전 버전의 동일한 응용 프로그램에 대한 지정된 설정 속성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyValue" /&gt;</ph> containing the value of the specified property setting as it was last set in the previous version of the application; or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the setting cannot be found.</source>
          <target state="translated">이전 버전의 응용 프로그램에서 마지막으로 설정된 지정된 속성 설정의 값을 포함하는 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyValue" /&gt;</ph>이거나, 설정을 찾을 수 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A&gt;</ph> method in conjunction with the <ph id="ph2">&lt;xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A&gt;</ph> method to migrate application settings during or after the installation of a new version of an application.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A&gt;</ph> 메서드와 함께 <ph id="ph2">&lt;xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A&gt;</ph> 중 또는 응용 프로그램의 새 버전의 설치 후 응용 프로그램 설정을 마이그레이션하려면 메서드.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
          <source>For <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph> permission.</source>
          <target state="translated">에 대 한 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph> 권한.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph> describing the current application usage.</source>
          <target state="translated">현재 응용 프로그램의 용도를 설명하는 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
          <source>Resets the application settings associated with the specified application to their default values.</source>
          <target state="translated">지정된 응용 프로그램과 연결된 응용 프로그램 설정을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Reset%2A&gt;</ph> method reinitializes the stored values of the specified application settings group.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Reset%2A&gt;</ph> 메서드는 지정 된 응용 프로그램 설정 그룹의 저장 된 값을 다시 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph> supplies a default value for a single settings property during property initialization, if it has no stored value.</source>
          <target state="translated">반면, <ph id="ph1">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph> 에 저장 된 값이 없으면 속성 초기화 하는 동안 단일 설정 속성의 기본값을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
          <source>The settings provider determines what reasonable defaults are for the specified group of application settings.</source>
          <target state="translated">설정 공급자 응용 프로그램 설정의 지정된 된 그룹에 대 한 적절 한 기본값을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
          <source>For example, the implementation in <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> resets user-scoped settings to their shared values in the <ph id="ph2">`application.exe.config`</ph> file; in contrast, it leaves the application-scoped settings unchanged.</source>
          <target state="translated">구현 예를 들어 <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> 사용자 범위 설정을 공유 값으로 다시 설정의 <ph id="ph2">`application.exe.config`</ph> 파일; 반대로 변경 하지 않고 응용 프로그램 범위 설정은 그대로 둡니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
          <source>For <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph> permission.</source>
          <target state="translated">에 대 한 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph> 권한.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph> describing the current application usage.</source>
          <target state="translated">현재 응용 프로그램의 용도를 설명하는 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyCollection" /&gt;</ph> containing the settings property group whose values are to be retrieved.</source>
          <target state="translated">값이 검색될 설정 속성 그룹을 포함하는 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>Indicates to the provider that the application has been upgraded.</source>
          <target state="translated">응용 프로그램이 업그레이드되었음을 공급자에게 알립니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>This offers the provider an opportunity to upgrade its stored settings as appropriate.</source>
          <target state="translated">이를 통해 공급자는 저장된 설정을 적절하게 업그레이드할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>The .NET Framework enables side-by-side installation and execution of different versions of the same application.</source>
          <target state="translated">.NET Framework는 동일한 응용 프로그램의 서로 다른 버전의 side-by-side-설치 및 실행 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>The application settings provider stores the application settings for each version of an application separately to ensure isolation.</source>
          <target state="translated">응용 프로그램 설정 공급자에는 격리를 보장할 수는 개별적으로 응용 프로그램의 각 버전에 대 한 응용 프로그램 설정을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>However, you may want to migrate settings from the previous version of an application to the current one.</source>
          <target state="translated">그러나 다음 현재 응용 프로그램의 이전 버전에서 설정을 마이그레이션하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>To provide this migration functionality, use the <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A&gt;</ph> method, implemented in a class derived from <ph id="ph2">&lt;xref:System.Configuration.SettingsProvider&gt;</ph>.</source>
          <target state="translated">이 마이그레이션 기능을 제공 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A&gt;</ph> 에서 파생 된 클래스에서 구현 하는 메서드에서 <ph id="ph2">&lt;xref:System.Configuration.SettingsProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A&gt;</ph> method in conjunction with the <ph id="ph2">&lt;xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A&gt;</ph> method to migrate application settings during or after the installation of a new version of an application.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A&gt;</ph> 메서드와 함께 <ph id="ph2">&lt;xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A&gt;</ph> 중 또는 응용 프로그램의 새 버전의 설치 후 응용 프로그램 설정을 마이그레이션하려면 메서드.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>This method should be suppressed for every application setting that has the <ph id="ph1">&lt;xref:System.Configuration.NoSettingsVersionUpgradeAttribute&gt;</ph> is applied to it, or to the entire settings wrapper class, derived from <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated">이 메서드는 모든 응용 프로그램 설정에 대 한 표시 되지 않아야는 <ph id="ph1">&lt;xref:System.Configuration.NoSettingsVersionUpgradeAttribute&gt;</ph> , 또는에서 파생 된 전체 설정 래퍼 클래스에 적용 됩니다 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <source>For <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph> permission.</source>
          <target state="translated">에 대 한 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph> 권한.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>