<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ApplicationSettingsBase.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac528fd80da70acde483fb97eb88b3d396c8d4e31ba.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28fd80da70acde483fb97eb88b3d396c8d4e31ba</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</source>
          <target state="translated">Window Forms 응용 프로그램에서 응용 프로그램 설정 기능을 구현하기 위해 구체적인 파생 래퍼 클래스의 기본 클래스 역할을 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> adds the following functionality to the <ph id="ph2">&lt;xref:System.Configuration.SettingsBase&gt;</ph> class, which is used by Web-based applications:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 다음과 같은 기능을 추가 하는 <ph id="ph2">&lt;xref:System.Configuration.SettingsBase&gt;</ph> 웹 기반 응용 프로그램에서 사용 되는 클래스:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>The ability to detect attributes on a derived, settings wrapper class.</source>
          <target state="translated">파생된, 설정 래퍼 클래스에 특성을 검색 하는 기능.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> supports the declarative model used for wrapper class properties, as described later.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 나중에 설명 된 대로 래퍼 클래스 속성에 사용 되는 선언적 모델을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Higher-level <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> methods.</source>
          <target state="translated">상위 수준 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Additional validation events that you can handle to ensure the correctness of individual settings.</source>
          <target state="translated">추가 유효성 검사 이벤트를 개별 설정의 정확성을 유지 하기 위해 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>In the application settings architecture, to access a group of settings properties you need to derive a concrete wrapper class from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated">응용 프로그램 설정 아키텍처에서 설정 속성의 그룹에 액세스 하려면에서 구체적인 래퍼 클래스를 파생 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>The wrapper class customizes <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> in the following ways:</source>
          <target state="translated">래퍼 클래스를 사용자 지정 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 다음과 같은 방법으로:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>For every settings property to be accessed, a corresponding strongly typed public property is added to the wrapper class.</source>
          <target state="translated">액세스할 모든 설정 속성에 대 한 래퍼 클래스에 해당 하는 강력한 형식의 공용 속성 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>This property has <ph id="ph1">`get`</ph> and <ph id="ph2">`set`</ph> accessors for read/write application settings, but only a <ph id="ph3">`get`</ph> accessor for read-only settings.</source>
          <target state="translated">이 속성은 <ph id="ph1">`get`</ph> 및 <ph id="ph2">`set`</ph> 만 읽기/쓰기 응용 프로그램 설정에 대 한 접근자는 <ph id="ph3">`get`</ph> 접근자에 대 한 읽기 전용으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Appropriated attributes must be applied to the wrapper class's public properties to indicate characteristics of the settings property, such as the setting's scope (application or user), whether the setting should support roaming, the default value for the setting, the settings provider to be used, and so on.</source>
          <target state="translated">적절 한 특성을 로밍에 대 한 기본값 설정을 지원 해야 하는지 여부를 설정의 범위 (응용 프로그램 또는 사용자)와 같은 설정 속성의 특징을 나타내는 래퍼 클래스의 공용 속성에 적용 되어야 합니다는 설정을 사용 되 고 등 설정 공급자입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Each property is required to specify its scope, using either <ph id="ph1">&lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.Configuration.UserScopedSettingAttribute&gt;</ph>.</source>
          <target state="translated">각 속성 중 하나를 사용 하 여이 범위를 지정 해야 합니다. <ph id="ph1">&lt;xref:System.Configuration.ApplicationScopedSettingAttribute&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Configuration.UserScopedSettingAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Application-scoped settings are read-only if the default <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> is used.</source>
          <target state="translated">응용 프로그램 범위 설정은 읽기 전용으로 설정 하는 경우 기본 <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class uses reflection to detect these attributes at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 클래스 리플렉션을 사용 하 여 런타임 시 이러한 특성을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Most of this information gets passed to the settings provider layer, which is responsible for storage, persistence format, and so on.</source>
          <target state="translated">대부분의이 정보 저장소, 지 속성 형식 및 등을 담당 하는 설정 공급자 계층에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>When an application has multiple settings wrapper classes, each class defines a <bpt id="p1">*</bpt>settings group<ept id="p1">*</ept>.</source>
          <target state="translated">응용 프로그램 설정 래퍼 클래스가 여러 개, 각 클래스에 하는 경우 정의 <bpt id="p1">*</bpt>설정 그룹<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Each group has the following characteristics:</source>
          <target state="translated">각 그룹에는 다음과 같은 특징이 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>A group can contain any number or type of property settings.</source>
          <target state="translated">그룹 수 또는 속성 설정의 형식을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>If the group name is not explicitly set by the decorating the wrapper class with a <ph id="ph1">&lt;xref:System.Configuration.SettingsGroupNameAttribute&gt;</ph>, then a name is automatically generated.</source>
          <target state="translated">그룹 이름을 사용 하 여 래퍼 클래스를 데코레이팅하는 명시적으로 설정 하지 않으면는 <ph id="ph1">&lt;xref:System.Configuration.SettingsGroupNameAttribute&gt;</ph>, 이름이 자동으로 생성 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>By default, all client-based applications use the <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> to provide storage.</source>
          <target state="translated">기본적으로 모든 클라이언트 기반 응용 프로그램 사용은 <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> 저장소를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>If an alternate settings provider is desired, then the wrapper class or property must be decorated with a corresponding <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>.</source>
          <target state="translated">대체 설정 공급자가 필요한 경우 래퍼 클래스 또는 속성이 해당로 데코 레이트 합니다 <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>For more information about using application settings, see <bpt id="p1">[</bpt>Application Settings for Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)</ept>.</source>
          <target state="translated">응용 프로그램 설정을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Windows Forms에 대 한 응용 프로그램 설정<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text.</source>
          <target state="translated">다음 코드 예제에서는 기본 폼의 특성을 유지 하기 위해 응용 프로그램 설정 사용을 보여 줍니다: 위치, 크기, 배경색 및 제목 표시줄 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>All of these attributes are persisted as single application settings properties in the <ph id="ph1">`FormSettings`</ph> class, named <ph id="ph2">`FormLocation`</ph>, <ph id="ph3">`FormSize`</ph>, <ph id="ph4">`FormBackColor`</ph> and <ph id="ph5">`FormText`</ph>, respectively.</source>
          <target state="translated">이러한 특성을 모두에서 단일 응용 프로그램 설정 속성으로 유지 됩니다는 <ph id="ph1">`FormSettings`</ph> 라는 클래스를 <ph id="ph2">`FormLocation`</ph>, <ph id="ph3">`FormSize`</ph>, <ph id="ph4">`FormBackColor`</ph> 및 <ph id="ph5">`FormText`</ph>각각.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>All except for <ph id="ph1">`FormText`</ph> and <ph id="ph2">`Size`</ph> are data bound to their associated form properties and have a default setting value applied using <ph id="ph3">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph>.</source>
          <target state="translated">제외한 <ph id="ph1">`FormText`</ph> 및 <ph id="ph2">`Size`</ph> 데이터 연결된 된 폼 속성에 바인딩된 및 사용 하 여 적용 하는 값을 설정 하는 기본 <ph id="ph3">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>The form contains four child controls that have the following names and functions:</source>
          <target state="translated">양식에 다음과 같은 이름 및 함수 네 개의 자식 컨트롤이 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>A button named <ph id="ph1">`btnBackColor`</ph> used to display the <bpt id="p1">**</bpt>Color<ept id="p1">**</ept> common dialog box.</source>
          <target state="translated">이라는 단추 <ph id="ph1">`btnBackColor`</ph> 표시 하는 데는 <bpt id="p1">**</bpt>색<ept id="p1">**</ept> 일반 대화 상자.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>A button named <ph id="ph1">`btnReload`</ph> used to <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> the application settings.</source>
          <target state="translated">이라는 단추 <ph id="ph1">`btnReload`</ph> 데 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 응용 프로그램 설정 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>A button named <ph id="ph1">`btnReset`</ph> used to <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> the application settings.</source>
          <target state="translated">이라는 단추 <ph id="ph1">`btnReset`</ph> 데 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> 응용 프로그램 설정 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>A textbox named <ph id="ph1">`tbStatus`</ph> used to display status information about the program.</source>
          <target state="translated">라는 텍스트 상자 <ph id="ph1">`tbStatus`</ph> 프로그램에 대 한 상태 정보를 표시 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Notice that after every execution of the application, an additional period character is appended to the title text of the form.</source>
          <target state="translated">응용 프로그램의 모든 실행 후 다음에 유의 폼의 제목 텍스트에 마침표 문자가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>This code example requires a Form with a <ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph> class named <ph id="ph2">`colorDialog1`</ph>, and a <ph id="ph3">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph> control with a <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripStatusLabel&gt;</ph> named <ph id="ph5">`tbStatus`</ph>.</source>
          <target state="translated">이 코드 예제에서는 포함 하는 폼을 <ph id="ph1">&lt;xref:System.Windows.Forms.ColorDialog&gt;</ph> 라는 클래스 <ph id="ph2">`colorDialog1`</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph> 보호로 <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripStatusLabel&gt;</ph> 라는 <ph id="ph5">`tbStatus`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Additionally, it requires three <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> objects named <ph id="ph2">`btnReload`</ph>, <ph id="ph3">`btnReset`</ph>, and <ph id="ph4">`btnBackColor`</ph>.</source>
          <target state="translated">또한 필요한 세 가지 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 개체의 명명 된 <ph id="ph2">`btnReload`</ph>, <ph id="ph3">`btnReset`</ph>, 및 <ph id="ph4">`btnBackColor`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Configuration.ApplicationSettingsBase">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> 클래스의 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> class to its default state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> 클래스의 인스턴스를 기본 상태로 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>The default constructor was designed to work under the assumption that there is no component associated with the current settings wrapper class, which derives from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated">기본 생성자가 가정에서 파생 되는 현재 설정 래퍼 클래스와 관련 된 구성 요소가 없으면 하에서 작동 하도록 설계 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>When an instance of a wrapper class is created, inherited code will automatically perform the following actions:</source>
          <target state="translated">래퍼 클래스의 인스턴스를 만들 때 상속 된 코드에서는 다음 작업 자동으로 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>Reflect over the class.</source>
          <target state="translated">클래스를 통해 반영 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>For each property on the wrapper marked with either <ph id="ph1">`[UserScopedSettingAttribute]`</ph> or <ph id="ph2">`[ApplicationScopedSettingAttribute]`</ph>, a corresponding <ph id="ph3">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> is created.</source>
          <target state="translated">로 표시 된 각 속성에 래퍼에 대 한 <ph id="ph1">`[UserScopedSettingAttribute]`</ph> 또는 <ph id="ph2">`[ApplicationScopedSettingAttribute]`</ph>, 해당 <ph id="ph3">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> 만들어집니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>Each <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> has some of its properties set based on other attributes that are optionally present on the wrapper's properties, such as the default value or the settings provider.</source>
          <target state="translated">각 <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> 에 선택적으로 기본 값 또는 설정 공급자와 같은 래퍼의 속성에 있는 다른 특성에 따라 해당 속성 집합의 일부입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>All other attributes are simply put into an attribute bag, the <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty.Attributes%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> class.</source>
          <target state="translated">기타 모든 특성은 특성 모음인에 배치 됩니다는 <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty.Attributes%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>All <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> objects are added to a <ph id="ph2">&lt;xref:System.Configuration.SettingsPropertyCollection&gt;</ph> represented by the <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class.</source>
          <target state="translated">모든 <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> 개체에 추가 됩니다 한 <ph id="ph2">&lt;xref:System.Configuration.SettingsPropertyCollection&gt;</ph> 나타내는 <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph> 속성의는 <ph id="ph4">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>This collection is then passed to the <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.Initialize%2A&gt;</ph> method.</source>
          <target state="translated">이 컬렉션에 전달 되는 <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.Initialize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>As implied by step 3 mentioned previously, <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> natively works with several property attributes, specifically the following: <ph id="ph2">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph>, and <ph id="ph4">&lt;xref:System.Configuration.SettingsSerializeAsAttribute&gt;</ph>.</source>
          <target state="translated">앞에서 설명한 3 단계에서 의미 하듯이 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 같은 여러 가지 속성 특성으로 작동 하는 고유 하 게: <ph id="ph2">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.Configuration.DefaultSettingValueAttribute&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Configuration.SettingsSerializeAsAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor">
          <source>All other settings attributes are simply passed through to the appropriate underlying provider.</source>
          <target state="translated">다른 모든 설정을 특성 단순히 적절 한 기본 공급자를 통해 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
          <source>The component that will act as the owner of the application settings object.</source>
          <target state="translated">응용 프로그램 설정 개체의 소유자 역할을 할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> class using the supplied owner component.</source>
          <target state="translated">제공된 소유자 구성 요소를 사용하여 <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> 클래스의 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
          <source>This constructor is exactly equivalent to the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29&gt;</ph> constructor using the invocation:</source>
          <target state="translated">이 생성자는 값과 동일는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29&gt;</ph> 생성자 호출을 사용 하 여:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
          <source>For information about how reflection is used during the instantiation of a wrapper class, see the default <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">래퍼 클래스의 인스턴스화 중 리플렉션을 사용 되는 방법에 대 한 내용은 기본 참조 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
          <source><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owner" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that uniquely identifies separate instances of the wrapper class.</source>
          <target state="translated">래퍼 클래스의 개별 인스턴스를 고유하게 식별하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> class using the supplied settings key.</source>
          <target state="translated">제공된 설정 키를 사용하여 <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> 클래스의 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> property to the value of the <ph id="ph2">`settingsKey`</ph> parameter.</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> 속성의 값으로는 <ph id="ph2">`settingsKey`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
          <source>This property is useful in disambiguating different instances of the settings wrapper class in the same application domain.</source>
          <target state="translated">이 속성은 동일한 응용 프로그램 도메인 설정 래퍼 클래스의 다른 인스턴스를 명확히 구분 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
          <source>For information about how reflection is used during the instantiation of a wrapper class, see the default <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">래퍼 클래스의 인스턴스화 중 리플렉션을 사용 되는 방법에 대 한 내용은 기본 참조 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>The component that will act as the owner of the application settings object.</source>
          <target state="translated">응용 프로그램 설정 개체의 소유자 역할을 할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that uniquely identifies separate instances of the wrapper class.</source>
          <target state="translated">래퍼 클래스의 개별 인스턴스를 고유하게 식별하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> class using the supplied owner component and settings key.</source>
          <target state="translated">제공된 소유자 구성 요소와 설정 키를 사용하여 <ph id="ph1">&lt;see cref="T:System.Configuration.ApplicationSettingsBase" /&gt;</ph> 클래스의 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> object specified by the <ph id="ph2">`owner`</ph> parameter acts as the owner of the current instance of this applications settings class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> 로 지정 된 개체는 <ph id="ph2">`owner`</ph> 이 응용 프로그램 설정 클래스의 현재 인스턴스 소유자 역할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>During the initialization of the settings wrapper class derived from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>, the owner's site is queried for a <ph id="ph2">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph>.</source>
          <target state="translated">설정에서 파생 된 래퍼 클래스를 초기화 하는 동안 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>, 소유자의 사이트에 대 한 쿼리는 <ph id="ph2">&lt;xref:System.Configuration.ISettingsProviderService&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>If one exists, it is used in preference to native settings provider for all the properties of the wrapper class, as specified by the <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>.</source>
          <target state="translated">에 지정 된 대로 래퍼 클래스의 모든 속성에 대 한 기본 설정 공급자 대신 사용 됩니다 있는 경우는 <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> property to the value of the <ph id="ph2">`settingsKey`</ph> parameter.</source>
          <target state="translated">이 생성자는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> 속성의 값으로는 <ph id="ph2">`settingsKey`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>This property is useful in disambiguating different instances of the wrapper class in the same application domain.</source>
          <target state="translated">이 속성은 동일한 응용 프로그램 도메인에서 래퍼 클래스의 다른 인스턴스를 명확히 구분 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source>For information about how reflection is used during the instantiation of a wrapper class, see the default <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">래퍼 클래스의 인스턴스화 중 리플렉션을 사용 되는 방법에 대 한 내용은 기본 참조 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owner" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>Gets the application settings context associated with the settings group.</source>
          <target state="translated">설정 그룹과 연결된 응용 프로그램 설정 컨텍스트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph> associated with the settings group.</source>
          <target state="translated">설정 그룹과 연결된 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>Each settings wrapper class derived from <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> has a context associated with it.</source>
          <target state="translated">각 설정 래퍼 클래스에서 파생 된 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 에 연결 된 컨텍스트가 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>The context is passed to the settings provider for each property to identify how the property is used.</source>
          <target state="translated">컨텍스트는 속성이 사용 되는 방법을 식별 하는 각 속성에 대 한 설정 공급자에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>Context therefore acts as a hint to help the settings provider determine how best to persist the associated application settings values.</source>
          <target state="translated">따라서 컨텍스트 역할을 연결 된 응용 프로그램 설정 값을 유지 하는 방법을 찾습니다 설정 공급자를 돕기 위해 힌트입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Context">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> property enables the settings provider to disambiguate multiple instances of the same wrapper class.</source>
          <target state="translated">반면,는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> 속성을 사용 하면 동일한 래퍼 클래스의 여러 인스턴스를 명확 하 게 설정 공급자입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the settings property whose value is to be returned.</source>
          <target state="translated">값이 반환될 설정 속성의 이름을 포함하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>Returns the value of the named settings property for the previous version of the same application.</source>
          <target state="translated">이전 버전의 동일한 응용 프로그램에 대한 명명된 설정 속성의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> containing the value of the specified <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProperty" /&gt;</ph> if found; otherwise, <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>의 값이 있으면 해당 값을 포함하는 <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProperty" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A&gt;</ph> method is often used in conjunction with the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph> method when migrating application settings during the installation of a new version of an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A&gt;</ph> 함께에서 메서드는 대개는 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph> 메서드는 응용 프로그램의 새 버전을 설치 하는 동안 응용 프로그램 설정을 마이그레이션하는 경우.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>The property does not exist.</source>
          <target state="translated">속성이 없는 경우.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
          <source>The property count is zero or the property cannot be found in the data store.</source>
          <target state="translated">속성 개수가 0이거나 데이터 저장소에서 속성을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the property to access.</source>
          <target state="translated">액세스할 속성의 이름을 포함하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>Gets or sets the value of the specified application settings property.</source>
          <target state="translated">지정된 응용 프로그램 설정 속성의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>If found, the value of the named settings property; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">명명된 설정 속성의 값이 있으면 해당 값이고, 그렇지 않으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> property, also known as the indexer, is routinely used in the settings wrapper class derived from <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> 속성, 인덱서 라고도 설정에서 파생 된 래퍼 클래스에 사용 되는 정기적으로 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> binds the public property of the wrapper class to the corresponding settings property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> 래퍼 클래스의 공용 속성을 해당 설정 속성에 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> raises several events depending on the operation being performed:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> 수행 되는 작업에 따라 여러 가지 이벤트를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>The first time a property is retrieved, the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded&gt;</ph> event is raised.</source>
          <target state="translated">속성을 검색 하 고, 처음으로 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>When a property is set, the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A&gt;</ph> event is raised.</source>
          <target state="translated">속성을 설정할 때의 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>If the handler does not cancel the event, then the property value is set and the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> event is raised.</source>
          <target state="translated">처리기가 이벤트를 취소 하지 경우 속성 값이 설정 및 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>There are no properties associated with the current wrapper or the specified property could not be found.</source>
          <target state="translated">현재 래퍼와 연결된 속성이 없거나 지정된 속성을 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>An attempt was made to set a read-only property.</source>
          <target state="translated">읽기 전용 속성을 설정하려고 한 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>The value supplied is of a type incompatible with the settings property, during a set operation.</source>
          <target state="translated">set 작업 중 제공된 값이 설정 속성과 호환되지 않는 형식인 경우</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
          <source>The configuration file could not be parsed.</source>
          <target state="translated">구성 파일을 구문 분석할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingChangingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingChangingEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsLoadedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsLoadedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>The source of the event.</source>
          <target state="translated">이벤트 소스입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>Gets the collection of settings properties in the wrapper.</source>
          <target state="translated">래퍼에 있는 설정 속성의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyCollection" /&gt;</ph> containing all the <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProperty" /&gt;</ph> objects used in the current wrapper.</source>
          <target state="translated">현재 래퍼에서 사용되는 모든 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyCollection" /&gt;</ph> 개체를 포함하는 <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProperty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>The <ph id="ph1">`get`</ph> accessor of the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph> property reflects over the metadata of the settings wrapper class, which is derived from <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>, to dynamically determine the set of available application settings properties.</source>
          <target state="translated"><ph id="ph1">`get`</ph> 의 접근자는 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph> 속성에서 파생 되는 설정 래퍼 클래스의 메타 데이터를 리플렉션하고 <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>을 동적으로 사용 가능한 응용 프로그램 설정 속성의 집합을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class natively recognizes certain characteristics of an application setting, such as its name, property type, settings provider, default value, read only status, and a serialization preference.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 만 상태 및 기본 serialization 설정 읽기 클래스 응용 프로그램 설정 이름, 속성 형식, 설정 공급자, 기본값 등의 특정 특성을 고유 하 게 인식 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>These characteristics are mirrored as properties in the <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> class.</source>
          <target state="translated">이러한 특징에 속성으로는 <ph id="ph1">&lt;xref:System.Configuration.SettingsProperty&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>All other attributes of the settings property are just passed through to its associated settings provider.</source>
          <target state="translated">설정 속성의 기타 모든 특성은 연결된 설정 공급자를 통해 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Properties">
          <source>The associated settings provider could not be found or its instantiation failed.</source>
          <target state="translated">연결된 설정 공급자를 찾을 수 없거나 인스턴스화하지 못한 경우</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
          <source>Occurs after the value of an application settings property is changed.</source>
          <target state="translated">응용 프로그램 설정 속성의 값이 변경된 후 발생합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> event is raised when a settings property is changed through the <ph id="ph2">`set`</ph> accessor of the <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> method, or for every property that is restored when a call is made to the <ph id="ph4">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> 설정 속성을 통해 변경 되 면 이벤트가 발생는 <ph id="ph2">`set`</ph> 의 접근자는 <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> 메서드, 또는를 호출할 때 복원 된 모든 속성에 대 한는 <ph id="ph4">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 또는 <ph id="ph5">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
          <source>There is no corresponding <ph id="ph1">`PropertyChanging`</ph> event for this class; instead, see the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> event.</source>
          <target state="translated">해당 하는 <ph id="ph1">`PropertyChanging`</ph> 이 이벤트 클래스; 대신 참조는 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
          <source>Gets a collection of property values.</source>
          <target state="translated">속성 값의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyValueCollection" /&gt;</ph> of property values.</source>
          <target state="translated">속성 값의 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsPropertyValueCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.Providers">
          <source>Gets the collection of application settings providers used by the wrapper.</source>
          <target state="translated">래퍼에서 사용하는 응용 프로그램 설정 공급자의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Providers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsProviderCollection" /&gt;</ph> containing all the <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProvider" /&gt;</ph> objects used by the settings properties of the current settings wrapper.</source>
          <target state="translated">현재 설정 래퍼의 설정 속성에서 사용하는 모든 <ph id="ph1">&lt;see cref="T:System.Configuration.SettingsProviderCollection" /&gt;</ph> 개체를 포함하는 <ph id="ph2">&lt;see cref="T:System.Configuration.SettingsProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Providers">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph> determines what setting provider is used by a settings wrapper class or an individual setting property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph> 설정 공급자 설정 래퍼 클래스 또는 개별 설정 속성에서 사용 되는 결정 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.Providers">
          <source>If this attribute is not specified, a client application will use the <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>.</source>
          <target state="translated">클라이언트 응용 프로그램에서는 사용이 특성을 지정 하지 않으면는 <ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>Refreshes the application settings property values from persistent storage.</source>
          <target state="translated">영구 저장소에서 응용 프로그램 설정 속성 값을 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> method clears the currently cached property values, causing a reload of these values from persistent storage when they are subsequently accessed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 메서드 이후에 액세스 될 때 영구 저장소에서 이러한 값에 대 한 다시 로드를 발생 시키는 현재 캐시 된 속성 값을 지웁니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>This method performs the following actions:</source>
          <target state="translated">이 메서드는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>It clears the currently cached properties by clearing the collection represented by the <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.PropertyValues%2A&gt;</ph> property.</source>
          <target state="translated">현재 캐시 된 속성을 나타내는 컬렉션을 선택 취소 하 여 지웁니다는 <ph id="ph1">&lt;xref:System.Configuration.SettingsBase.PropertyValues%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>It raises the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> event for every member of the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph> collection.</source>
          <target state="translated">발생 된 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> 의 모든 멤버에 대 한 이벤트는 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Properties%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> contrasts with <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 와 대조 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> 전자가 로드 저장 된 응용 프로그램 설정 값의 마지막 집합을 로드 하는 저장 된 기본값으로 반면 한다는 점에서 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> method being invoked in the body of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler for a button named <ph id="ph3">`btnReload`</ph>.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 메서드 본문에서 호출 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> 이라는 단추에 대 한 이벤트 처리기 <ph id="ph3">`btnReload`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties.</source>
          <target state="translated">이 호출의 결과로 응용 프로그램 설정에 대 한 현재 저장 된 값은 해당 속성으로 다시 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reload">
          <source>The full code example is listed in the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class overview.</source>
          <target state="translated">전체 코드 예제에 표시 됩니다는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>Restores the persisted application settings values to their corresponding default properties.</source>
          <target state="translated">영구 응용 프로그램 설정 값을 해당 기본 속성으로 복원합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> method overwrites the user-scoped settings properties by restoring the currently persisted value of each application settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> 메서드는 각 응용 프로그램 설정의 현재 지속형된 값을 복원 하 여 사용자 범위 설정 속성을 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>This method performs the following actions:</source>
          <target state="translated">이 메서드는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>It calls the <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType&gt;</ph> method on every settings provider that supports this optional method.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType&gt;</ph> 이 선택적 메서드를 지 원하는 모든 설정 공급자에 대 한 메서드.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>It calls the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> method to force a refresh of the settings property values.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 메서드는 새로 고침 설정 속성 값을 강제 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> contrasts with <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 와 대조 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> 전자가 로드 저장 된 응용 프로그램 설정 값의 마지막 집합을 로드 하는 저장 된 기본값으로 반면 한다는 점에서 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> method being invoked in the body of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> event handler for a button named <ph id="ph3">`btnReset`</ph>.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> 메서드 본문에서 호출 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Click&gt;</ph> 이라는 단추에 대 한 이벤트 처리기 <ph id="ph3">`btnReset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties.</source>
          <target state="translated">이 호출의 결과로 응용 프로그램 설정에 대 한 저장된 된 기본값이 해당 속성으로 다시 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>The full code example is listed in the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class overview.</source>
          <target state="translated">전체 코드 예제에 표시 됩니다는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Reset">
          <source>The configuration file could not be parsed.</source>
          <target state="translated">구성 파일을 구문 분석할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>Stores the current values of the application settings properties.</source>
          <target state="translated">응용 프로그램 설정 속성의 현재 값을 저장합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> method writes the current value of each settings property to its associated data store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> 메서드는 연결 된 데이터 저장소에 각 설정 속성의 현재 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>For each property, this method calls the <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph> method on the associated settings provider.</source>
          <target state="translated">각 속성에 대해이 메서드는 <ph id="ph1">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph> 메서드 연결 된 설정 공급자를 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>This method differs from the base class implementation in that it raises the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph> event before the values are written.</source>
          <target state="translated">이 메서드는 기본 클래스 구현을 점에서 다릅니다 발생는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph> 값을 기록 하기 전에 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>If the only settings defined are application-scoped settings, <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> will have no effect and return no error if called with the default <ph id="ph2">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>.</source>
          <target state="translated">정의 된 유일한 설정이 응용 프로그램 범위 설정은 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> 는 아무런 영향을 미치지 않으며 기본값을 사용 하 여 호출 하는 경우 <ph id="ph2">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source><ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> only saves user-scoped settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> 사용자 범위 설정을 저장합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>There is no corresponding Load method because the values of application settings are automatically loaded during wrapper class initialization.</source>
          <target state="translated">응용 프로그램 설정 값 래퍼 클래스 초기화 시 자동으로 로드 되기 때문에 해당 부하 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>In contrast, these values are not automatically saved when an application ends.</source>
          <target state="translated">반면, 이러한 값은 응용 프로그램이 종료 될 때 자동으로 저장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>Therefore, you must explicitly call the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> method to persist the current values of the application settings.</source>
          <target state="translated">명시적으로 호출 해야 따라서는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> 응용 프로그램 설정의 현재 값을 유지 하는 메서드.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>This is typically performed in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event handler of the primary or containing <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">일반적으로 수행 됩니다이 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 의 주 또는 포함 하는 이벤트 처리기 <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> method being called from the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event handler for the primary form.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> 에서 호출 되는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> 기본 폼에 대 한 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>This method also appends an extra period to the settings property that is associated with the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property.</source>
          <target state="translated">이 메서드는 폼의 연관 된 설정 속성을 추가 하는 동안 추가 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Save">
          <source>The full code example is listed in the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class overview.</source>
          <target state="translated">전체 코드 예제에 표시 됩니다는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>Occurs before the value of an application settings property is changed.</source>
          <target state="translated">응용 프로그램 설정 속성의 값이 변경되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> event occurs before an application setting value property is changed through the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> 이벤트 발생을 통해 응용 프로그램 설정 값 속성이 변경 되기 전에 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>This event is not raised when the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> methods are called.</source>
          <target state="translated">이 이벤트는 없습니다 될 때 발생 하는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> can be canceled through the <ph id="ph2">&lt;xref:System.Configuration.SettingChangingEventArgs&gt;</ph> event data class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> 통해 취소할 수는 <ph id="ph2">&lt;xref:System.Configuration.SettingChangingEventArgs&gt;</ph> 이벤트 데이터 클래스입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>You typically use the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> event to handle immediate validation of an individual settings property.</source>
          <target state="translated">일반적으로 사용 된 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> 개별 설정 속성의 즉시 유효성 검사를 처리할 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>For more information about validation, see <bpt id="p1">[</bpt>How to: Validate Application Settings<ept id="p1">](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md)</ept>.</source>
          <target state="translated">유효성 검사에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 응용 프로그램 설정의 유효성을 검사<ept id="p1">](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>There is no corresponding <ph id="ph1">`SettingChanged`</ph> event for this class; instead, see the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> event.</source>
          <target state="translated">해당 하는 <ph id="ph1">`SettingChanged`</ph> 이 이벤트 클래스; 대신 참조는 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.PropertyChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> event handler for object of type <ph id="ph2">`FormSettings`</ph>, which is a wrapper class derived from <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> 형식의 개체에 대 한 이벤트 처리기 <ph id="ph2">`FormSettings`</ph>, 래퍼 클래스에서 파생 된 <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>The handler displays the event information in a textbox named <ph id="ph1">`tbStatus`</ph>.</source>
          <target state="translated">라는 텍스트 상자에 이벤트 정보를 표시 하는 처리기 <ph id="ph1">`tbStatus`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
          <source>The full code example is listed in the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class overview.</source>
          <target state="translated">전체 코드 예제에 표시 됩니다는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>Gets or sets the settings key for the application settings group.</source>
          <target state="translated">응용 프로그램 설정 그룹의 설정 키를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the settings key for the current settings group.</source>
          <target state="translated">현재 설정 그룹의 설정 키를 포함하는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> property is provided to enable client code, and in particular the settings provider, to disambiguate between multiple instances of the same application settings class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> 속성은 클라이언트 코드를 제공 하며 특히 설정 공급자는 동일한 응용 프로그램 설정 클래스의 여러 인스턴트 사이 명확 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>Unless the settings wrapper class is designed using the singleton pattern, there can be multiple instances of the same application settings class in a single application.</source>
          <target state="translated">설정 래퍼 클래스는 단일 패턴을 사용 하 여을 설계 하는 경우가 아니면 단일 응용 프로그램에서 동일한 응용 프로그램 설정 클래스의 여러 인스턴스가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>The value of <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> should be set according to how the property values are intended to be shared.</source>
          <target state="translated">값 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> 를 공유할 수 속성 값은 사용 하는 방법에 따라 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>If the settings properties of the wrapper are intended to be shared across all instances of the wrapper in the same application, then <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> should have the same value in all of the instances.</source>
          <target state="translated">래퍼 설정 속성은 동일한 응용 프로그램에서 다음 래퍼 함수의 모든 인스턴스의에서 공유할 수 하는 경우 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> 인스턴스를 모두에 동일한 값이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>This is the default behavior of the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class.</source>
          <target state="translated">이 기본적으로는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>If the settings properties of the wrapper are intended to be per instance, then <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> should have a unique value for every instance.</source>
          <target state="translated">다음 인스턴스당 되도록 설정 속성 래퍼는 경우 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> 모든 인스턴스에 대해 고유한 값을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29&gt;</ph> version of the constructor enables you to initialize <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> to a unique string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29&gt;</ph> 는 생성자의 버전을 사용 하면 초기화 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A&gt;</ph> 고유한 문자열에 있습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Context%2A&gt;</ph> property provides hints to the settings provider to enable it to persist values in an efficient and orderly manner.</source>
          <target state="translated">반면,는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Context%2A&gt;</ph> 속성이 효율적이 고 순차적 방식으로 값을 유지할 수 있도록 설정 공급자에 힌트를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingChangingEventArgs&gt;</ph> class contains a similar <ph id="ph2">&lt;xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A&gt;</ph> property that helps identify the source of the <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.SettingChangingEventArgs&gt;</ph> 클래스 포함 비슷한 <ph id="ph2">&lt;xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A&gt;</ph> 속성의 원본을 확인 하는 데 도움이 되는 <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingChanging&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
          <source>Occurs after the application settings are retrieved from storage.</source>
          <target state="translated">응용 프로그램 설정이 저장소에서 검색된 후 발생합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded&gt;</ph> event occurs only after the initial <ph id="ph2">`get`</ph> access of the first configuration property used, typically through the <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded&gt;</ph> 이벤트 발생 후에 <ph id="ph2">`get`</ph> 사용을 통해 일반적으로 첫 번째 구성 속성의 액세스는 <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase.Item%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
          <source>Subsequent accesses use values for the settings property that are cached locally.</source>
          <target state="translated">후속 액세스 로컬로 캐시 된 설정 속성에 대 한 값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> methods will clear all cached values so this event will be raised again upon subsequent property access.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Reset%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Reload%2A&gt;</ph> 메서드 이후 속성 액세스 시이 이벤트가 다시 발생 하므로 모든 캐시 된 값 지워집니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>Occurs before values are saved to the data store.</source>
          <target state="translated">값이 데이터 저장소에 저장되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> method before it stores the application settings properties to their associated data store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph> 이벤트에 의해 발생 되는 <ph id="ph2">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> 메서드는 응용 프로그램 설정 속성을 연결된 된 데이터 저장소에 저장 하기 전에.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>The associated event handler can cancel this event.</source>
          <target state="translated">연결된 된 이벤트 처리기는이 이벤트를 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>The following code example shows the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph> event handler for object of type <ph id="ph2">`FormSettings`</ph>, which is a wrapper class derived from <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.SettingsSaving&gt;</ph> 형식의 개체에 대 한 이벤트 처리기 <ph id="ph2">`FormSettings`</ph>, 래퍼 클래스에서 파생 된 <ph id="ph3">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>The handler queries the user to save the current application settings property values.</source>
          <target state="translated">처리기는 사용자가을 현재 응용 프로그램 설정 속성 값을 저장할를 쿼리 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
          <source>The full code example is listed in the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class overview.</source>
          <target state="translated">전체 코드 예제에 표시 됩니다는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>Updates application settings to reflect a more recent installation of the application.</source>
          <target state="translated">응용 프로그램의 최신 설치를 반영하기 위해 응용 프로그램 설정을 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph> method performs two actions to assure smooth transition to a new version of an application:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph> 메서드는 응용 프로그램의 새 버전으로 원활 하 게 전환 되도록 두 개의 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>It notifies all of the corresponding settings providers of the existence of the upgraded application through a call to their <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType&gt;</ph> method, assuming they have implemented the <ph id="ph2">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph> interface.</source>
          <target state="translated">모든 호출을 통해 업그레이드 된 응용 프로그램의 존재 여부의 해당 설정 공급자에 게 알려 줍니다 자신의 <ph id="ph1">&lt;xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType&gt;</ph> 메서드를 구현 했다고 가정은 <ph id="ph2">&lt;xref:System.Configuration.IApplicationSettingsProvider&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>This action is not performed if the settings wrapper class is marked with <ph id="ph1">&lt;xref:System.Configuration.NoSettingsVersionUpgradeAttribute&gt;</ph>.</source>
          <target state="translated">이 작업은 설정 래퍼 클래스로 표시 되어 있으면 <ph id="ph1">&lt;xref:System.Configuration.NoSettingsVersionUpgradeAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>It reloads the values for all of the application settings.</source>
          <target state="translated">모든 응용 프로그램 설정에 대 한 값을 다시 로드 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>You can override the default behavior of <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph> to implement custom upgrading or merging behavior.</source>
          <target state="translated">기본 동작을 재정의할 수 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A&gt;</ph> 에 사용자 지정 업그레이드 또는 병합 동작을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>Use the <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A&gt;</ph> method to retrieve individual values for a setting for the previous version of the application.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A&gt;</ph> 응용 프로그램의 이전 버전에 대 한 설정에 대 한 개별 값을 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>Examples of custom upgrade behavior include:</source>
          <target state="translated">사용자 지정 업그레이드 동작의 예입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>Using new policy defaults that override one or more of the previous user-specified values or previous defaults.</source>
          <target state="translated">이전 사용자가 지정한 값 중 하나 이상을 재정의 하는 새 정책 기본값 또는 이전 기본값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>Special translation of old values to be compatible with newer ranges, a different settings property group, and so on.</source>
          <target state="translated">이전 값 및와 호환 되도록 최신 범위는 서로 다른 설정 속성 그룹 등의 특수 변환 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Configuration.ApplicationSettingsBase.Upgrade">
          <source>The configuration file could not be parsed.</source>
          <target state="translated">구성 파일을 구문 분석할 수 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>