<Type Name="ApplicationSettingsBase" FullName="System.Configuration.ApplicationSettingsBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28fd80da70acde483fb97eb88b3d396c8d4e31ba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30380547" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ApplicationSettingsBase extends System.Configuration.SettingsBase implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ApplicationSettingsBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ApplicationSettingsBase&#xA;Inherits SettingsBase&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationSettingsBase abstract : System::Configuration::SettingsBase, System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="873c7-101">Window Forms 응용 프로그램에서 응용 프로그램 설정 기능을 구현하기 위해 구체적인 파생 래퍼 클래스의 기본 클래스 역할을 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="873c7-101">Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-102"><xref:System.Configuration.ApplicationSettingsBase> 다음과 같은 기능을 추가 하는 <xref:System.Configuration.SettingsBase> 웹 기반 응용 프로그램에서 사용 되는 클래스:</span><span class="sxs-lookup"><span data-stu-id="873c7-102"><xref:System.Configuration.ApplicationSettingsBase> adds the following functionality to the <xref:System.Configuration.SettingsBase> class, which is used by Web-based applications:</span></span>  
  
-   <span data-ttu-id="873c7-103">파생된, 설정 래퍼 클래스에 특성을 검색 하는 기능.</span><span class="sxs-lookup"><span data-stu-id="873c7-103">The ability to detect attributes on a derived, settings wrapper class.</span></span> <span data-ttu-id="873c7-104"><xref:System.Configuration.ApplicationSettingsBase> 나중에 설명 된 대로 래퍼 클래스 속성에 사용 되는 선언적 모델을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-104"><xref:System.Configuration.ApplicationSettingsBase> supports the declarative model used for wrapper class properties, as described later.</span></span>  
  
-   <span data-ttu-id="873c7-105">상위 수준 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> 및 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="873c7-105">Higher-level <xref:System.Configuration.ApplicationSettingsBase.Save%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="873c7-106">추가 유효성 검사 이벤트를 개별 설정의 정확성을 유지 하기 위해 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-106">Additional validation events that you can handle to ensure the correctness of individual settings.</span></span>  
  
 <span data-ttu-id="873c7-107">응용 프로그램 설정 아키텍처에서 설정 속성의 그룹에 액세스 하려면에서 구체적인 래퍼 클래스를 파생 <xref:System.Configuration.ApplicationSettingsBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-107">In the application settings architecture, to access a group of settings properties you need to derive a concrete wrapper class from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="873c7-108">래퍼 클래스를 사용자 지정 <xref:System.Configuration.ApplicationSettingsBase> 다음과 같은 방법으로:</span><span class="sxs-lookup"><span data-stu-id="873c7-108">The wrapper class customizes <xref:System.Configuration.ApplicationSettingsBase> in the following ways:</span></span>  
  
-   <span data-ttu-id="873c7-109">액세스할 모든 설정 속성에 대 한 래퍼 클래스에 해당 하는 강력한 형식의 공용 속성 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-109">For every settings property to be accessed, a corresponding strongly typed public property is added to the wrapper class.</span></span> <span data-ttu-id="873c7-110">이 속성은 `get` 및 `set` 만 읽기/쓰기 응용 프로그램 설정에 대 한 접근자는 `get` 접근자에 대 한 읽기 전용으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-110">This property has `get` and `set` accessors for read/write application settings, but only a `get` accessor for read-only settings.</span></span>  
  
-   <span data-ttu-id="873c7-111">적절 한 특성을 로밍에 대 한 기본값 설정을 지원 해야 하는지 여부를 설정의 범위 (응용 프로그램 또는 사용자)와 같은 설정 속성의 특징을 나타내는 래퍼 클래스의 공용 속성에 적용 되어야 합니다는 설정을 사용 되 고 등 설정 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-111">Appropriated attributes must be applied to the wrapper class's public properties to indicate characteristics of the settings property, such as the setting's scope (application or user), whether the setting should support roaming, the default value for the setting, the settings provider to be used, and so on.</span></span> <span data-ttu-id="873c7-112">각 속성 중 하나를 사용 하 여이 범위를 지정 해야 합니다. <xref:System.Configuration.ApplicationScopedSettingAttribute> 또는 <xref:System.Configuration.UserScopedSettingAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-112">Each property is required to specify its scope, using either <xref:System.Configuration.ApplicationScopedSettingAttribute> or <xref:System.Configuration.UserScopedSettingAttribute>.</span></span> <span data-ttu-id="873c7-113">응용 프로그램 범위 설정은 읽기 전용으로 설정 하는 경우 기본 <xref:System.Configuration.LocalFileSettingsProvider> 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-113">Application-scoped settings are read-only if the default <xref:System.Configuration.LocalFileSettingsProvider> is used.</span></span>  
  
 <span data-ttu-id="873c7-114"><xref:System.Configuration.ApplicationSettingsBase> 클래스 리플렉션을 사용 하 여 런타임 시 이러한 특성을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-114">The <xref:System.Configuration.ApplicationSettingsBase> class uses reflection to detect these attributes at run time.</span></span> <span data-ttu-id="873c7-115">대부분의이 정보 저장소, 지 속성 형식 및 등을 담당 하는 설정 공급자 계층에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-115">Most of this information gets passed to the settings provider layer, which is responsible for storage, persistence format, and so on.</span></span>  
  
 <span data-ttu-id="873c7-116">응용 프로그램 설정 래퍼 클래스가 여러 개, 각 클래스에 하는 경우 정의 *설정 그룹*합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-116">When an application has multiple settings wrapper classes, each class defines a *settings group*.</span></span> <span data-ttu-id="873c7-117">각 그룹에는 다음과 같은 특징이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-117">Each group has the following characteristics:</span></span>  
  
-   <span data-ttu-id="873c7-118">그룹 수 또는 속성 설정의 형식을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-118">A group can contain any number or type of property settings.</span></span>  
  
-   <span data-ttu-id="873c7-119">그룹 이름을 사용 하 여 래퍼 클래스를 데코레이팅하는 명시적으로 설정 하지 않으면는 <xref:System.Configuration.SettingsGroupNameAttribute>, 이름이 자동으로 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-119">If the group name is not explicitly set by the decorating the wrapper class with a <xref:System.Configuration.SettingsGroupNameAttribute>, then a name is automatically generated.</span></span>  
  
 <span data-ttu-id="873c7-120">기본적으로 모든 클라이언트 기반 응용 프로그램 사용은 <xref:System.Configuration.LocalFileSettingsProvider> 저장소를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-120">By default, all client-based applications use the <xref:System.Configuration.LocalFileSettingsProvider> to provide storage.</span></span> <span data-ttu-id="873c7-121">대체 설정 공급자가 필요한 경우 래퍼 클래스 또는 속성이 해당로 데코 레이트 합니다 <xref:System.Configuration.SettingsProviderAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-121">If an alternate settings provider is desired, then the wrapper class or property must be decorated with a corresponding <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="873c7-122">응용 프로그램 설정을 사용 하는 방법에 대 한 자세한 내용은 참조 [Windows Forms에 대 한 응용 프로그램 설정](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-122">For more information about using application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="873c7-123">다음 코드 예제에서는 기본 폼의 특성을 유지 하기 위해 응용 프로그램 설정 사용을 보여 줍니다: 위치, 크기, 배경색 및 제목 표시줄 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-123">The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text.</span></span> <span data-ttu-id="873c7-124">이러한 특성을 모두에서 단일 응용 프로그램 설정 속성으로 유지 됩니다는 `FormSettings` 라는 클래스를 `FormLocation`, `FormSize`, `FormBackColor` 및 `FormText`각각.</span><span class="sxs-lookup"><span data-stu-id="873c7-124">All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively.</span></span> <span data-ttu-id="873c7-125">제외한 `FormText` 및 `Size` 데이터 연결된 된 폼 속성에 바인딩된 및 사용 하 여 적용 하는 값을 설정 하는 기본 <xref:System.Configuration.DefaultSettingValueAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-125">All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span>  
  
 <span data-ttu-id="873c7-126">양식에 다음과 같은 이름 및 함수 네 개의 자식 컨트롤이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-126">The form contains four child controls that have the following names and functions:</span></span>  
  
-   <span data-ttu-id="873c7-127">이라는 단추 `btnBackColor` 표시 하는 데는 **색** 일반 대화 상자.</span><span class="sxs-lookup"><span data-stu-id="873c7-127">A button named `btnBackColor` used to display the **Color** common dialog box.</span></span>  
  
-   <span data-ttu-id="873c7-128">이라는 단추 `btnReload` 데 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 응용 프로그램 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-128">A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="873c7-129">이라는 단추 `btnReset` 데 <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> 응용 프로그램 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-129">A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.</span></span>  
  
-   <span data-ttu-id="873c7-130">라는 텍스트 상자 `tbStatus` 프로그램에 대 한 상태 정보를 표시 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-130">A textbox named `tbStatus` used to display status information about the program.</span></span>  
  
 <span data-ttu-id="873c7-131">응용 프로그램의 모든 실행 후 다음에 유의 폼의 제목 텍스트에 마침표 문자가 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-131">Notice that after every execution of the application, an additional period character is appended to the title text of the form.</span></span>  
  
 <span data-ttu-id="873c7-132">이 코드 예제에서는 포함 하는 폼을 <xref:System.Windows.Forms.ColorDialog> 라는 클래스 `colorDialog1`, 및 <xref:System.Windows.Forms.StatusStrip> 보호로 <xref:System.Windows.Forms.ToolStripStatusLabel> 라는 `tbStatus`합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-132">This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`.</span></span> <span data-ttu-id="873c7-133">또한 필요한 세 가지 <xref:System.Windows.Forms.Button> 개체의 명명 된 `btnReload`, `btnReset`, 및 `btnBackColor`합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-133">Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.</span></span>  
  
 [!code-cpp[AppSettingsSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#1)]
 [!code-csharp[AppSettingsSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#1)]
 [!code-vb[AppSettingsSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.SettingsGroupNameAttribute" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="873c7-134">
            <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-134">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="873c7-135">
            <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 기본 상태로 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-135">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class to its default state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-136">기본 생성자가 가정에서 파생 되는 현재 설정 래퍼 클래스와 관련 된 구성 요소가 없으면 하에서 작동 하도록 설계 <xref:System.Configuration.ApplicationSettingsBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-136">The default constructor was designed to work under the assumption that there is no component associated with the current settings wrapper class, which derives from <xref:System.Configuration.ApplicationSettingsBase>.</span></span>  
  
 <span data-ttu-id="873c7-137">래퍼 클래스의 인스턴스를 만들 때 상속 된 코드에서는 다음 작업 자동으로 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-137">When an instance of a wrapper class is created, inherited code will automatically perform the following actions:</span></span>  
  
1.  <span data-ttu-id="873c7-138">클래스를 통해 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-138">Reflect over the class.</span></span>  
  
2.  <span data-ttu-id="873c7-139">로 표시 된 각 속성에 래퍼에 대 한 `[UserScopedSettingAttribute]` 또는 `[ApplicationScopedSettingAttribute]`, 해당 <xref:System.Configuration.SettingsProperty> 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-139">For each property on the wrapper marked with either `[UserScopedSettingAttribute]` or `[ApplicationScopedSettingAttribute]`, a corresponding <xref:System.Configuration.SettingsProperty> is created.</span></span>  
  
3.  <span data-ttu-id="873c7-140">각 <xref:System.Configuration.SettingsProperty> 에 선택적으로 기본 값 또는 설정 공급자와 같은 래퍼의 속성에 있는 다른 특성에 따라 해당 속성 집합의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-140">Each <xref:System.Configuration.SettingsProperty> has some of its properties set based on other attributes that are optionally present on the wrapper's properties, such as the default value or the settings provider.</span></span>  
  
4.  <span data-ttu-id="873c7-141">기타 모든 특성은 특성 모음인에 배치 됩니다는 <xref:System.Configuration.SettingsProperty.Attributes%2A> 의 속성은 <xref:System.Configuration.SettingsProperty> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-141">All other attributes are simply put into an attribute bag, the <xref:System.Configuration.SettingsProperty.Attributes%2A> property of the <xref:System.Configuration.SettingsProperty> class.</span></span>  
  
5.  <span data-ttu-id="873c7-142">모든 <xref:System.Configuration.SettingsProperty> 개체에 추가 됩니다 한 <xref:System.Configuration.SettingsPropertyCollection> 나타내는 <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> 속성의는 <xref:System.Configuration.ApplicationSettingsBase> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-142">All <xref:System.Configuration.SettingsProperty> objects are added to a <xref:System.Configuration.SettingsPropertyCollection> represented by the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span> <span data-ttu-id="873c7-143">이 컬렉션에 전달 되는 <xref:System.Configuration.SettingsBase.Initialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="873c7-143">This collection is then passed to the <xref:System.Configuration.SettingsBase.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="873c7-144">앞에서 설명한 3 단계에서 의미 하듯이 <xref:System.Configuration.ApplicationSettingsBase> 같은 여러 가지 속성 특성으로 작동 하는 고유 하 게: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, 및 <xref:System.Configuration.SettingsSerializeAsAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-144">As implied by step 3 mentioned previously, <xref:System.Configuration.ApplicationSettingsBase> natively works with several property attributes, specifically the following: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>, and <xref:System.Configuration.SettingsSerializeAsAttribute>.</span></span> <span data-ttu-id="873c7-145">다른 모든 설정을 특성 단순히 적절 한 기본 공급자를 통해 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-145">All other settings attributes are simply passed through to the appropriate underlying provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="T:System.Configuration.SettingsPropertyCollection" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="873c7-146">응용 프로그램 설정 개체의 소유자 역할을 할 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-146">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="873c7-147">제공된 소유자 구성 요소를 사용하여 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-147">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-148">이 생성자는 값과 동일는 <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> 생성자 호출을 사용 하 여:</span><span class="sxs-lookup"><span data-stu-id="873c7-148">This constructor is exactly equivalent to the <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> constructor using the invocation:</span></span>  
  
 `ApplicationSettingsBase(owner, String.Empty)`  
  
 <span data-ttu-id="873c7-149">래퍼 클래스의 인스턴스화 중 리플렉션을 사용 되는 방법에 대 한 내용은 기본 참조 <xref:System.Configuration.ApplicationSettingsBase.%23ctor> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-149">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="873c7-150">
            <paramref name="owner" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-150">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::String ^ settingsKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="settingsKey">
          <span data-ttu-id="873c7-151">래퍼 클래스의 개별 인스턴스를 고유하게 식별하는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-151">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="873c7-152">제공된 설정 키를 사용하여 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-152">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-153">이 생성자는 <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 속성의 값으로는 `settingsKey` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-153">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="873c7-154">이 속성은 동일한 응용 프로그램 도메인 설정 래퍼 클래스의 다른 인스턴스를 명확히 구분 하는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-154">This property is useful in disambiguating different instances of the settings wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="873c7-155">래퍼 클래스의 인스턴스화 중 리플렉션을 사용 되는 방법에 대 한 내용은 기본 참조 <xref:System.Configuration.ApplicationSettingsBase.%23ctor> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-155">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent owner, string settingsKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IComponent, settingsKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ApplicationSettingsBase(System::ComponentModel::IComponent ^ owner, System::String ^ settingsKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.ComponentModel.IComponent" />
        <Parameter Name="settingsKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="873c7-156">응용 프로그램 설정 개체의 소유자 역할을 할 구성 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-156">The component that will act as the owner of the application settings object.</span>
          </span>
        </param>
        <param name="settingsKey">
          <span data-ttu-id="873c7-157">래퍼 클래스의 개별 인스턴스를 고유하게 식별하는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-157">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="873c7-158">제공된 소유자 구성 요소와 설정 키를 사용하여 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 클래스의 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-158">Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component and settings key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-159"><xref:System.ComponentModel.IComponent> 로 지정 된 개체는 `owner` 이 응용 프로그램 설정 클래스의 현재 인스턴스 소유자 역할 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-159">The <xref:System.ComponentModel.IComponent> object specified by the `owner` parameter acts as the owner of the current instance of this applications settings class.</span></span> <span data-ttu-id="873c7-160">설정에서 파생 된 래퍼 클래스를 초기화 하는 동안 <xref:System.Configuration.ApplicationSettingsBase>, 소유자의 사이트에 대 한 쿼리는 <xref:System.Configuration.ISettingsProviderService>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-160">During the initialization of the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>, the owner's site is queried for a <xref:System.Configuration.ISettingsProviderService>.</span></span> <span data-ttu-id="873c7-161">에 지정 된 대로 래퍼 클래스의 모든 속성에 대 한 기본 설정 공급자 대신 사용 됩니다 있는 경우는 <xref:System.Configuration.SettingsProviderAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-161">If one exists, it is used in preference to native settings provider for all the properties of the wrapper class, as specified by the <xref:System.Configuration.SettingsProviderAttribute>.</span></span>  
  
 <span data-ttu-id="873c7-162">이 생성자는 <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 속성의 값으로는 `settingsKey` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-162">This constructor initializes the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property to the value of the `settingsKey` parameter.</span></span> <span data-ttu-id="873c7-163">이 속성은 동일한 응용 프로그램 도메인에서 래퍼 클래스의 다른 인스턴스를 명확히 구분 하는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-163">This property is useful in disambiguating different instances of the wrapper class in the same application domain.</span></span>  
  
 <span data-ttu-id="873c7-164">래퍼 클래스의 인스턴스화 중 리플렉션을 사용 되는 방법에 대 한 내용은 기본 참조 <xref:System.Configuration.ApplicationSettingsBase.%23ctor> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-164">For information about how reflection is used during the instantiation of a wrapper class, see the default <xref:System.Configuration.ApplicationSettingsBase.%23ctor> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="873c7-165">
            <paramref name="owner" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-165">
              <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Context" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Context As SettingsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsContext ^ Context { System::Configuration::SettingsContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="873c7-166">설정 그룹과 연결된 응용 프로그램 설정 컨텍스트를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-166">Gets the application settings context associated with the settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="873c7-167">설정 그룹과 연결된 <see cref="T:System.Configuration.SettingsContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-167">A <see cref="T:System.Configuration.SettingsContext" /> associated with the settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-168">각 설정 래퍼 클래스에서 파생 된 <xref:System.Configuration.ApplicationSettingsBase> 에 연결 된 컨텍스트가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-168">Each settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase> has a context associated with it.</span></span> <span data-ttu-id="873c7-169">컨텍스트는 속성이 사용 되는 방법을 식별 하는 각 속성에 대 한 설정 공급자에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-169">The context is passed to the settings provider for each property to identify how the property is used.</span></span> <span data-ttu-id="873c7-170">따라서 컨텍스트 역할을 연결 된 응용 프로그램 설정 값을 유지 하는 방법을 찾습니다 설정 공급자를 돕기 위해 힌트입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-170">Context therefore acts as a hint to help the settings provider determine how best to persist the associated application settings values.</span></span>  
  
 <span data-ttu-id="873c7-171">반면,는 <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 속성을 사용 하면 동일한 래퍼 클래스의 여러 인스턴스를 명확 하 게 설정 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-171">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property enables the settings provider to disambiguate multiple instances of the same wrapper class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="T:System.Configuration.SettingsContext" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.ApplicationSettingsGroup" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public object GetPreviousVersion (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPreviousVersion(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPreviousVersion(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="873c7-172">값이 반환될 설정 속성의 이름을 포함하는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-172">A <see cref="T:System.String" /> containing the name of the settings property whose value is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="873c7-173">이전 버전의 동일한 응용 프로그램에 대한 명명된 설정 속성의 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-173">Returns the value of the named settings property for the previous version of the same application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="873c7-174">지정된 <see cref="T:System.Object" />의 값이 있으면 해당 값을 포함하는 <see cref="T:System.Configuration.SettingsProperty" />이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-174">An <see cref="T:System.Object" /> containing the value of the specified <see cref="T:System.Configuration.SettingsProperty" /> if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-175"><xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> 함께에서 메서드는 대개는 <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> 메서드는 응용 프로그램의 새 버전을 설치 하는 동안 응용 프로그램 설정을 마이그레이션하는 경우.</span><span class="sxs-lookup"><span data-stu-id="873c7-175">The <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method when migrating application settings during the installation of a new version of an application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="873c7-176">속성이 없는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-176">The property does not exist.</span>
          </span>
          <span data-ttu-id="873c7-177">속성 개수가 0이거나 데이터 저장소에서 속성을 찾을 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-177">The property count is zero or the property cannot be found in the data store.</span>
          </span>
        </exception>
        <altmember cref="T:System.Configuration.SettingsProperty" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="873c7-178">액세스할 속성의 이름을 포함하는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-178">A <see cref="T:System.String" /> containing the name of the property to access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="873c7-179">지정된 응용 프로그램 설정 속성의 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-179">Gets or sets the value of the specified application settings property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="873c7-180">명명된 설정 속성의 값이 있으면 해당 값이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-180">If found, the value of the named settings property; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-181"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> 속성, 인덱서 라고도 설정에서 파생 된 래퍼 클래스에 사용 되는 정기적으로 <xref:System.Configuration.ApplicationSettingsBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-181">The <xref:System.Configuration.ApplicationSettingsBase.Item%2A> property, also known as the indexer, is routinely used in the settings wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="873c7-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> 래퍼 클래스의 공용 속성을 해당 설정 속성에 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-182"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> binds the public property of the wrapper class to the corresponding settings property.</span></span>  
  
 <span data-ttu-id="873c7-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> 수행 되는 작업에 따라 여러 가지 이벤트를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-183"><xref:System.Configuration.ApplicationSettingsBase.Item%2A> raises several events depending on the operation being performed:</span></span>  
  
-   <span data-ttu-id="873c7-184">속성을 검색 하 고, 처음으로 <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-184">The first time a property is retrieved, the <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event is raised.</span></span>  
  
-   <span data-ttu-id="873c7-185">속성을 설정할 때의 <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-185">When a property is set, the <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> event is raised.</span></span> <span data-ttu-id="873c7-186">처리기가 이벤트를 취소 하지 경우 속성 값이 설정 및 <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-186">If the handler does not cancel the event, then the property value is set and the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
          <span data-ttu-id="873c7-187">현재 래퍼와 연결된 속성이 없거나 지정된 속성을 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-187">There are no properties associated with the current wrapper or the specified property could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">
          <span data-ttu-id="873c7-188">읽기 전용 속성을 설정하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-188">An attempt was made to set a read-only property.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">
          <span data-ttu-id="873c7-189">set 작업 중 제공된 값이 설정 속성과 호환되지 않는 형식인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-189">The value supplied is of a type incompatible with the settings property, during a set operation.</span>
          </span>
        </exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="873c7-190">구성 파일을 구문 분석할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-190">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="P:System.Configuration.SettingsProperty.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(object sender, class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (sender As Object, e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Object ^ sender, System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="873c7-191">이벤트 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-191">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="873c7-192">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-192">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="873c7-193">
            <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-193">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-194">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-194">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="873c7-195">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-195">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="873c7-196">또한 <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-196">The <xref:System.Configuration.ApplicationSettingsBase.OnPropertyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="873c7-197">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-197">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="873c7-198">파생 클래스에서 <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="873c7-198">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingChanging(object sender, class System.Configuration.SettingChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingChanging (sender As Object, e As SettingChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingChanging(System::Object ^ sender, System::Configuration::SettingChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="873c7-199">이벤트 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-199">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="873c7-200">이벤트 데이터를 포함하는 <see cref="T:System.Configuration.SettingChangingEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-200">A <see cref="T:System.Configuration.SettingChangingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="873c7-201">
            <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-201">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-202">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-202">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="873c7-203">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-203">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="873c7-204">또한 <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-204">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="873c7-205">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-205">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="873c7-206">파생 클래스에서 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="873c7-206">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsLoaded(object sender, class System.Configuration.SettingsLoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsLoaded (sender As Object, e As SettingsLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsLoaded(System::Object ^ sender, System::Configuration::SettingsLoadedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Configuration.SettingsLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="873c7-207">이벤트 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-207">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="873c7-208">이벤트 데이터를 포함하는 <see cref="T:System.Configuration.SettingsLoadedEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-208">A <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="873c7-209">
            <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-209">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-210">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-210">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="873c7-211">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-211">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="873c7-212">또한 <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-212">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="873c7-213">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-213">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="873c7-214">파생 클래스에서 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="873c7-214">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSettingsSaving">
      <MemberSignature Language="C#" Value="protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSettingsSaving(object sender, class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSettingsSaving (sender As Object, e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSettingsSaving(System::Object ^ sender, System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="873c7-215">이벤트 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-215">The source of the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="873c7-216">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.CancelEventArgs" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-216">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="873c7-217">
            <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-217">Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-218">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-218">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="873c7-219">자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-219">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="873c7-220">또한 <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-220">The <xref:System.Configuration.ApplicationSettingsBase.OnSettingsSaving%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="873c7-221">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-221">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="873c7-222">파생 클래스에서 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> 메서드를 호출해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="873c7-222">When overriding <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="873c7-223">래퍼에 있는 설정 속성의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-223">Gets the collection of settings properties in the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="873c7-224">현재 래퍼에서 사용되는 모든 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 개체를 포함하는 <see cref="T:System.Configuration.SettingsProperty" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-224">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing all the <see cref="T:System.Configuration.SettingsProperty" /> objects used in the current wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-225">`get` 의 접근자는 <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> 속성에서 파생 되는 설정 래퍼 클래스의 메타 데이터를 리플렉션하고 <xref:System.Configuration.ApplicationSettingsBase>을 동적으로 사용 가능한 응용 프로그램 설정 속성의 집합을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-225">The `get` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> property reflects over the metadata of the settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, to dynamically determine the set of available application settings properties.</span></span>  
  
 <span data-ttu-id="873c7-226"><xref:System.Configuration.ApplicationSettingsBase> 만 상태 및 기본 serialization 설정 읽기 클래스 응용 프로그램 설정 이름, 속성 형식, 설정 공급자, 기본값 등의 특정 특성을 고유 하 게 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-226">The <xref:System.Configuration.ApplicationSettingsBase> class natively recognizes certain characteristics of an application setting, such as its name, property type, settings provider, default value, read only status, and a serialization preference.</span></span> <span data-ttu-id="873c7-227">이러한 특징에 속성으로는 <xref:System.Configuration.SettingsProperty> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-227">These characteristics are mirrored as properties in the <xref:System.Configuration.SettingsProperty> class.</span></span> <span data-ttu-id="873c7-228">설정 속성의 기타 모든 특성은 연결된 설정 공급자를 통해 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-228">All other attributes of the settings property are just passed through to its associated settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="873c7-229">연결된 설정 공급자를 찾을 수 없거나 인스턴스화하지 못한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-229">The associated settings provider could not be found or its instantiation failed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="T:System.Configuration.SettingsProperty" />
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="873c7-230">응용 프로그램 설정 속성의 값이 변경된 후 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-230">Occurs after the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-231"><xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> 설정 속성을 통해 변경 되 면 이벤트가 발생는 `set` 의 접근자는 <xref:System.Configuration.ApplicationSettingsBase.Item%2A> 메서드, 또는를 호출할 때 복원 된 모든 속성에 대 한는 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 또는 <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="873c7-231">The <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event is raised when a settings property is changed through the `set` accessor of the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method, or for every property that is restored when a call is made to the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="873c7-232">해당 하는 `PropertyChanging` 이 이벤트 클래스; 대신 참조는 <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-232">There is no corresponding `PropertyChanging` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <altmember cref="T:System.ComponentModel.PropertyChangedEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="PropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsPropertyValueCollection PropertyValues" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyValues As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsPropertyValueCollection ^ PropertyValues { System::Configuration::SettingsPropertyValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="873c7-233">속성 값의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-233">Gets a collection of property values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="873c7-234">속성 값의 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-234">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> of property values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SettingsProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Providers As SettingsProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Configuration::SettingsProviderCollection ^ Providers { System::Configuration::SettingsProviderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="873c7-235">래퍼에서 사용하는 응용 프로그램 설정 공급자의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-235">Gets the collection of application settings providers used by the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="873c7-236">현재 설정 래퍼의 설정 속성에서 사용하는 모든 <see cref="T:System.Configuration.SettingsProviderCollection" /> 개체를 포함하는 <see cref="T:System.Configuration.SettingsProvider" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-236">A <see cref="T:System.Configuration.SettingsProviderCollection" /> containing all the <see cref="T:System.Configuration.SettingsProvider" /> objects used by the settings properties of the current settings wrapper.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-237"><xref:System.Configuration.SettingsProviderAttribute> 설정 공급자 설정 래퍼 클래스 또는 개별 설정 속성에서 사용 되는 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-237">The <xref:System.Configuration.SettingsProviderAttribute> determines what setting provider is used by a settings wrapper class or an individual setting property.</span></span> <span data-ttu-id="873c7-238">클라이언트 응용 프로그램에서는 사용이 특성을 지정 하지 않으면는 <xref:System.Configuration.LocalFileSettingsProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-238">If this attribute is not specified, a client application will use the <xref:System.Configuration.LocalFileSettingsProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="873c7-239">영구 저장소에서 응용 프로그램 설정 속성 값을 새로 고칩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-239">Refreshes the application settings property values from persistent storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-240"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 메서드 이후에 액세스 될 때 영구 저장소에서 이러한 값에 대 한 다시 로드를 발생 시키는 현재 캐시 된 속성 값을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-240">The <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method clears the currently cached property values, causing a reload of these values from persistent storage when they are subsequently accessed.</span></span> <span data-ttu-id="873c7-241">이 메서드는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-241">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="873c7-242">현재 캐시 된 속성을 나타내는 컬렉션을 선택 취소 하 여 지웁니다는 <xref:System.Configuration.SettingsBase.PropertyValues%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-242">It clears the currently cached properties by clearing the collection represented by the <xref:System.Configuration.SettingsBase.PropertyValues%2A> property.</span></span>  
  
-   <span data-ttu-id="873c7-243">발생 된 <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> 의 모든 멤버에 대 한 이벤트는 <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-243">It raises the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event for every member of the <xref:System.Configuration.ApplicationSettingsBase.Properties%2A> collection.</span></span>  
  
 <span data-ttu-id="873c7-244"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 와 대조 <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> 전자가 로드 저장 된 응용 프로그램 설정 값의 마지막 집합을 로드 하는 저장 된 기본값으로 반면 한다는 점에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-244"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="873c7-245">다음 코드 예제는 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 메서드 본문에서 호출 되는 <xref:System.Windows.Forms.Control.Click> 이라는 단추에 대 한 이벤트 처리기 `btnReload`합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-245">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`.</span></span> <span data-ttu-id="873c7-246">이 호출의 결과로 응용 프로그램 설정에 대 한 현재 저장 된 값은 해당 속성으로 다시 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-246">As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="873c7-247">전체 코드 예제에 표시 됩니다는 <xref:System.Configuration.ApplicationSettingsBase> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-247">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#6)]
 [!code-csharp[AppSettingsSample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#6)]
 [!code-vb[AppSettingsSample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="P:System.Configuration.SettingsBase.PropertyValues" />
        <altmember cref="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Properties" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="873c7-248">영구 응용 프로그램 설정 값을 해당 기본 속성으로 복원합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-248">Restores the persisted application settings values to their corresponding default properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-249"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A> 메서드는 각 응용 프로그램 설정의 현재 지속형된 값을 복원 하 여 사용자 범위 설정 속성을 덮어씁니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-249">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method overwrites the user-scoped settings properties by restoring the currently persisted value of each application settings.</span></span> <span data-ttu-id="873c7-250">이 메서드는 다음 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-250">This method performs the following actions:</span></span>  
  
-   <span data-ttu-id="873c7-251">호출 된 <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> 이 선택적 메서드를 지 원하는 모든 설정 공급자에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="873c7-251">It calls the <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=nameWithType> method on every settings provider that supports this optional method.</span></span>  
  
-   <span data-ttu-id="873c7-252">호출 된 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 메서드는 새로 고침 설정 속성 값을 강제 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-252">It calls the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> method to force a refresh of the settings property values.</span></span>  
  
 <span data-ttu-id="873c7-253"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 와 대조 <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> 전자가 로드 저장 된 응용 프로그램 설정 값의 마지막 집합을 로드 하는 저장 된 기본값으로 반면 한다는 점에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-253"><xref:System.Configuration.ApplicationSettingsBase.Reload%2A> contrasts with <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> in that the former will load the last set of saved application settings values, whereas the latter will load the saved default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="873c7-254">다음 코드 예제는 <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> 메서드 본문에서 호출 되는 <xref:System.Windows.Forms.Control.Click> 이라는 단추에 대 한 이벤트 처리기 `btnReset`합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-254">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`.</span></span> <span data-ttu-id="873c7-255">이 호출의 결과로 응용 프로그램 설정에 대 한 저장된 된 기본값이 해당 속성으로 다시 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-255">As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties.</span></span> <span data-ttu-id="873c7-256">전체 코드 예제에 표시 됩니다는 <xref:System.Configuration.ApplicationSettingsBase> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-256">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#5)]
 [!code-csharp[AppSettingsSample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#5)]
 [!code-vb[AppSettingsSample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="873c7-257">구성 파일을 구문 분석할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-257">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="873c7-258">응용 프로그램 설정 속성의 현재 값을 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-258">Stores the current values of the application settings properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-259"><xref:System.Configuration.ApplicationSettingsBase.Save%2A> 메서드는 연결 된 데이터 저장소에 각 설정 속성의 현재 값을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-259">The <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method writes the current value of each settings property to its associated data store.</span></span> <span data-ttu-id="873c7-260">각 속성에 대해이 메서드는 <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> 메서드 연결 된 설정 공급자를 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-260">For each property, this method calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method on the associated settings provider.</span></span>  
  
 <span data-ttu-id="873c7-261">이 메서드는 기본 클래스 구현을 점에서 다릅니다 발생는 <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> 값을 기록 하기 전에 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-261">This method differs from the base class implementation in that it raises the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event before the values are written.</span></span>  
  
 <span data-ttu-id="873c7-262">정의 된 유일한 설정이 응용 프로그램 범위 설정은 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> 는 아무런 영향을 미치지 않으며 기본값을 사용 하 여 호출 하는 경우 <xref:System.Configuration.LocalFileSettingsProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-262">If the only settings defined are application-scoped settings, <xref:System.Configuration.ApplicationSettingsBase.Save%2A> will have no effect and return no error if called with the default <xref:System.Configuration.LocalFileSettingsProvider>.</span></span> <span data-ttu-id="873c7-263"><xref:System.Configuration.LocalFileSettingsProvider> 사용자 범위 설정을 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-263"><xref:System.Configuration.LocalFileSettingsProvider> only saves user-scoped settings.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="873c7-264">응용 프로그램 설정 값 래퍼 클래스 초기화 시 자동으로 로드 되기 때문에 해당 부하 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-264">There is no corresponding Load method because the values of application settings are automatically loaded during wrapper class initialization.</span></span> <span data-ttu-id="873c7-265">반면, 이러한 값은 응용 프로그램이 종료 될 때 자동으로 저장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-265">In contrast, these values are not automatically saved when an application ends.</span></span> <span data-ttu-id="873c7-266">명시적으로 호출 해야 따라서는 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> 응용 프로그램 설정의 현재 값을 유지 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="873c7-266">Therefore, you must explicitly call the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method to persist the current values of the application settings.</span></span> <span data-ttu-id="873c7-267">일반적으로 수행 됩니다이 <xref:System.Windows.Forms.Form.Closing> 의 주 또는 포함 하는 이벤트 처리기 <xref:System.Windows.Forms.Form>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-267">This is typically performed in the <xref:System.Windows.Forms.Form.Closing> event handler of the primary or containing <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="873c7-268">다음 코드 예제는 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> 에서 호출 되는 메서드는 <xref:System.Windows.Forms.Form.Closing> 기본 폼에 대 한 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-268">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form.</span></span> <span data-ttu-id="873c7-269">이 메서드는 폼의 연관 된 설정 속성을 추가 하는 동안 추가 <xref:System.Windows.Forms.Control.Text%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-269">This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 <span data-ttu-id="873c7-270">전체 코드 예제에 표시 됩니다는 <xref:System.Configuration.ApplicationSettingsBase> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-270">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#3)]
 [!code-csharp[AppSettingsSample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#3)]
 [!code-vb[AppSettingsSample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SettingChanging">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingChangingEventHandler SettingChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingChangingEventHandler SettingChanging" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingChanging As SettingChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingChangingEventHandler ^ SettingChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="873c7-271">응용 프로그램 설정 속성의 값이 변경되기 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-271">Occurs before the value of an application settings property is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-272"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> 이벤트 발생을 통해 응용 프로그램 설정 값 속성이 변경 되기 전에 <xref:System.Configuration.ApplicationSettingsBase.Item%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="873c7-272">The <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event occurs before an application setting value property is changed through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="873c7-273">이 이벤트는 없습니다 될 때 발생 하는 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 또는 <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-273">This event is not raised when the <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> or <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> methods are called.</span></span> <span data-ttu-id="873c7-274"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> 통해 취소할 수는 <xref:System.Configuration.SettingChangingEventArgs> 이벤트 데이터 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-274"><xref:System.Configuration.ApplicationSettingsBase.SettingChanging> can be canceled through the <xref:System.Configuration.SettingChangingEventArgs> event data class.</span></span>  
  
 <span data-ttu-id="873c7-275">일반적으로 사용 된 <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> 개별 설정 속성의 즉시 유효성 검사를 처리할 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-275">You typically use the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event to handle immediate validation of an individual settings property.</span></span> <span data-ttu-id="873c7-276">유효성 검사에 대 한 자세한 내용은 참조 [하는 방법: 응용 프로그램 설정의 유효성을 검사](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-276">For more information about validation, see [How to: Validate Application Settings](~/docs/framework/winforms/advanced/how-to-validate-application-settings.md).</span></span>  
  
 <span data-ttu-id="873c7-277">해당 하는 `SettingChanged` 이 이벤트 클래스; 대신 참조는 <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-277">There is no corresponding `SettingChanged` event for this class; instead, see the <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="873c7-278">다음 코드 예제는 <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> 형식의 개체에 대 한 이벤트 처리기 `FormSettings`, 래퍼 클래스에서 파생 된 <xref:System.Configuration.ApplicationSettingsBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-278">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="873c7-279">라는 텍스트 상자에 이벤트 정보를 표시 하는 처리기 `tbStatus`합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-279">The handler displays the event information in a textbox named `tbStatus`.</span></span> <span data-ttu-id="873c7-280">전체 코드 예제에 표시 됩니다는 <xref:System.Configuration.ApplicationSettingsBase> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-280">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#7)]
 [!code-csharp[AppSettingsSample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#7)]
 [!code-vb[AppSettingsSample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
        <altmember cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="873c7-281">응용 프로그램 설정 그룹의 설정 키를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-281">Gets or sets the settings key for the application settings group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="873c7-282">현재 설정 그룹의 설정 키를 포함하는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-282">A <see cref="T:System.String" /> containing the settings key for the current settings group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-283"><xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 속성은 클라이언트 코드를 제공 하며 특히 설정 공급자는 동일한 응용 프로그램 설정 클래스의 여러 인스턴트 사이 명확 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-283">The <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> property is provided to enable client code, and in particular the settings provider, to disambiguate between multiple instances of the same application settings class.</span></span>  
  
 <span data-ttu-id="873c7-284">설정 래퍼 클래스는 단일 패턴을 사용 하 여을 설계 하는 경우가 아니면 단일 응용 프로그램에서 동일한 응용 프로그램 설정 클래스의 여러 인스턴스가 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-284">Unless the settings wrapper class is designed using the singleton pattern, there can be multiple instances of the same application settings class in a single application.</span></span> <span data-ttu-id="873c7-285">값 <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 를 공유할 수 속성 값은 사용 하는 방법에 따라 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-285">The value of <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should be set according to how the property values are intended to be shared.</span></span>  
  
-   <span data-ttu-id="873c7-286">래퍼 설정 속성은 동일한 응용 프로그램에서 다음 래퍼 함수의 모든 인스턴스의에서 공유할 수 하는 경우 <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 인스턴스를 모두에 동일한 값이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-286">If the settings properties of the wrapper are intended to be shared across all instances of the wrapper in the same application, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have the same value in all of the instances.</span></span> <span data-ttu-id="873c7-287">이 기본적으로는 <xref:System.Configuration.ApplicationSettingsBase> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-287">This is the default behavior of the <xref:System.Configuration.ApplicationSettingsBase> class.</span></span>  
  
-   <span data-ttu-id="873c7-288">다음 인스턴스당 되도록 설정 속성 래퍼는 경우 <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 모든 인스턴스에 대해 고유한 값을 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-288">If the settings properties of the wrapper are intended to be per instance, then <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> should have a unique value for every instance.</span></span> <span data-ttu-id="873c7-289"><xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> 는 생성자의 버전을 사용 하면 초기화 <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 고유한 문자열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-289">The <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29> version of the constructor enables you to initialize <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> to a unique string.</span></span>  
  
 <span data-ttu-id="873c7-290">반면,는 <xref:System.Configuration.ApplicationSettingsBase.Context%2A> 속성이 효율적이 고 순차적 방식으로 값을 유지할 수 있도록 설정 공급자에 힌트를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-290">In contrast, the <xref:System.Configuration.ApplicationSettingsBase.Context%2A> property provides hints to the settings provider to enable it to persist values in an efficient and orderly manner.</span></span>  
  
 <span data-ttu-id="873c7-291"><xref:System.Configuration.SettingChangingEventArgs> 클래스 포함 비슷한 <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> 속성의 원본을 확인 하는 데 도움이 되는 <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-291">The <xref:System.Configuration.SettingChangingEventArgs> class contains a similar <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> property that helps identify the source of the <xref:System.Configuration.ApplicationSettingsBase.SettingChanging> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Context" />
        <altmember cref="T:System.Configuration.SettingChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SettingsLoaded">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsLoadedEventHandler SettingsLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsLoaded As SettingsLoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsLoadedEventHandler ^ SettingsLoaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsLoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="873c7-292">응용 프로그램 설정이 저장소에서 검색된 후 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-292">Occurs after the application settings are retrieved from storage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-293"><xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> 이벤트 발생 후에 `get` 사용을 통해 일반적으로 첫 번째 구성 속성의 액세스는 <xref:System.Configuration.ApplicationSettingsBase.Item%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="873c7-293">The <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded> event occurs only after the initial `get` access of the first configuration property used, typically through the <xref:System.Configuration.ApplicationSettingsBase.Item%2A> method.</span></span> <span data-ttu-id="873c7-294">후속 액세스 로컬로 캐시 된 설정 속성에 대 한 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-294">Subsequent accesses use values for the settings property that are cached locally.</span></span> <span data-ttu-id="873c7-295"><xref:System.Configuration.ApplicationSettingsBase.Reset%2A> 및 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> 메서드 이후 속성 액세스 시이 이벤트가 다시 발생 하므로 모든 캐시 된 값 지워집니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-295">The <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> and <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods will clear all cached values so this event will be raised again upon subsequent property access.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <altmember cref="T:System.Configuration.SettingsLoadedEventArgs" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="SettingsSaving">
      <MemberSignature Language="C#" Value="public event System.Configuration.SettingsSavingEventHandler SettingsSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Configuration.SettingsSavingEventHandler SettingsSaving" />
      <MemberSignature Language="DocId" Value="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SettingsSaving As SettingsSavingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Configuration::SettingsSavingEventHandler ^ SettingsSaving;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsSavingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="873c7-296">값이 데이터 저장소에 저장되기 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-296">Occurs before values are saved to the data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-297"><xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> 이벤트에 의해 발생 되는 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> 메서드는 응용 프로그램 설정 속성을 연결된 된 데이터 저장소에 저장 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="873c7-297">The <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event is raised by the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method before it stores the application settings properties to their associated data store.</span></span> <span data-ttu-id="873c7-298">연결된 된 이벤트 처리기는이 이벤트를 취소할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-298">The associated event handler can cancel this event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="873c7-299">다음 코드 예제는 <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> 형식의 개체에 대 한 이벤트 처리기 `FormSettings`, 래퍼 클래스에서 파생 된 <xref:System.Configuration.ApplicationSettingsBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-299">The following code example shows the <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="873c7-300">처리기는 사용자가을 현재 응용 프로그램 설정 속성 값을 저장할를 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-300">The handler queries the user to save the current application settings property values.</span></span> <span data-ttu-id="873c7-301">전체 코드 예제에 표시 됩니다는 <xref:System.Configuration.ApplicationSettingsBase> 클래스 개요입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-301">The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.</span></span>  
  
 [!code-cpp[AppSettingsSample#8](~/samples/snippets/cpp/VS_Snippets_Winforms/AppSettingsSample/cpp/AppSettingsSample.cpp#8)]
 [!code-csharp[AppSettingsSample#8](~/samples/snippets/csharp/VS_Snippets_Winforms/AppSettingsSample/CS/AppSettingsSample.cs#8)]
 [!code-vb[AppSettingsSample#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AppSettingsSample/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public virtual void Upgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Upgrade ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="873c7-302">응용 프로그램의 최신 설치를 반영하기 위해 응용 프로그램 설정을 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-302">Updates application settings to reflect a more recent installation of the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="873c7-303"><xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> 메서드는 응용 프로그램의 새 버전으로 원활 하 게 전환 되도록 두 개의 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-303">The <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> method performs two actions to assure smooth transition to a new version of an application:</span></span>  
  
-   <span data-ttu-id="873c7-304">모든 호출을 통해 업그레이드 된 응용 프로그램의 존재 여부의 해당 설정 공급자에 게 알려 줍니다 자신의 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> 메서드를 구현 했다고 가정은 <xref:System.Configuration.IApplicationSettingsProvider> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-304">It notifies all of the corresponding settings providers of the existence of the upgraded application through a call to their <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=nameWithType> method, assuming they have implemented the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="873c7-305">이 작업은 설정 래퍼 클래스로 표시 되어 있으면 <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-305">This action is not performed if the settings wrapper class is marked with <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</span></span>  
  
-   <span data-ttu-id="873c7-306">모든 응용 프로그램 설정에 대 한 값을 다시 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-306">It reloads the values for all of the application settings.</span></span>  
  
 <span data-ttu-id="873c7-307">기본 동작을 재정의할 수 <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> 에 사용자 지정 업그레이드 또는 병합 동작을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-307">You can override the default behavior of <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A> to implement custom upgrading or merging behavior.</span></span> <span data-ttu-id="873c7-308">사용 하 여는 <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> 응용 프로그램의 이전 버전에 대 한 설정에 대 한 개별 값을 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-308">Use the <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> method to retrieve individual values for a setting for the previous version of the application.</span></span> <span data-ttu-id="873c7-309">사용자 지정 업그레이드 동작의 예입니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-309">Examples of custom upgrade behavior include:</span></span>  
  
-   <span data-ttu-id="873c7-310">이전 사용자가 지정한 값 중 하나 이상을 재정의 하는 새 정책 기본값 또는 이전 기본값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-310">Using new policy defaults that override one or more of the previous user-specified values or previous defaults.</span></span>  
  
-   <span data-ttu-id="873c7-311">이전 값 및와 호환 되도록 최신 범위는 서로 다른 설정 속성 그룹 등의 특수 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="873c7-311">Special translation of old values to be compatible with newer ranges, a different settings property group, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">
          <span data-ttu-id="873c7-312">구성 파일을 구문 분석할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="873c7-312">The configuration file could not be parsed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </Docs>
    </Member>
  </Members>
</Type>