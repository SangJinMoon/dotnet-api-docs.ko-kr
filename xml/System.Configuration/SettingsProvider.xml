<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2f8ca-101">응용 프로그램 설정 아키텍처에서 사용자 지정 설정 공급자를 파생시키기 위한 기본 클래스 역할을 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-101">Acts as a base class for deriving custom settings providers in the application settings architecture.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8ca-102">설정 공급자 응용 프로그램 설정 아키텍처에서 사용 되는 구성 데이터를 저장 하기 위한 메커니즘을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-102">A settings provider defines the mechanism for storing configuration data used in the application settings architecture.</span></span> <span data-ttu-id="2f8ca-103">단일 기본 설정 공급자를 포함 하는.NET Framework <xref:System.Configuration.LocalFileSettingsProvider>, 로컬 파일 시스템에 구성 데이터를 저장 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-103">The .NET Framework contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system.</span></span> <span data-ttu-id="2f8ca-104">그러나 추상에서 파생 하 여 대체 저장소 메커니즘을 만들 수 있습니다 <xref:System.Configuration.SettingsProvider> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-104">However, you can create alternate storage mechanisms by deriving from the abstract <xref:System.Configuration.SettingsProvider> class.</span></span> <span data-ttu-id="2f8ca-105">래퍼 클래스를 사용 하는 공급자와 래퍼 클래스에 의해 결정 됩니다는 <xref:System.Configuration.SettingsProviderAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-105">The provider that a wrapper class uses is determined by decorating the wrapper class with the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="2f8ca-106">이 특성을 제공 하지 않으면 기본값인 경우 <xref:System.Configuration.LocalFileSettingsProvider>, 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-106">If this attribute is not provided, the default, <xref:System.Configuration.LocalFileSettingsProvider>, is used.</span></span>  
  
 <span data-ttu-id="2f8ca-107">최소한 사용자 지정 설정 공급자를 만들 때이 클래스의 세 가지 방법에 대 한 구현을 제공 해야: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> 및 <xref:System.Configuration.SettingsProvider.ApplicationName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-107">When you create a custom settings provider, at minimum, you must provide implementations for the three methods of this class: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> and <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="2f8ca-108">클라이언트 응용 프로그램에 추가할 수 있습니다 더 표준화 된 기능 사용자 지정 공급자를 구현 하 여는 <xref:System.Configuration.IApplicationSettingsProvider> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-108">For client applications, you can add more standardized functionality to a custom provider by also implementing the <xref:System.Configuration.IApplicationSettingsProvider> interface.</span></span> <span data-ttu-id="2f8ca-109">이 인터페이스의 메서드를 미러링합니다는 <xref:System.Configuration.ApplicationSettingsBase> 주로 버전 관리 지원을 사용 하도록 설정 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-109">This interface mirrors methods found in the <xref:System.Configuration.ApplicationSettingsBase> class, which mainly enables versioning support.</span></span>  
  
 <span data-ttu-id="2f8ca-110">일반적으로 단일 인스턴스가 저장소 리소스 경합 방지 하려면 되도록 설정 공급자를 디자인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-110">Typically, you should design settings providers to be single-instanced to avoid storage resource contention.</span></span> <span data-ttu-id="2f8ca-111">공급자는 단일 응용 프로그램 도메인의 여러 래퍼 인스턴스에 또는 서로 다른 도메인에 여러 응용 프로그램에서 동시에 호출할 수 있습니다 때문에 스레드로부터 안전 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-111">Providers should also be thread-safe because they can be called simultaneously from multiple wrapper instances in a single application domain or from multiple applications in different domains.</span></span>  
  
 <span data-ttu-id="2f8ca-112">설정 공급자에 최소한 특성을 인식 해야-<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, 및 <xref:System.Configuration.DefaultSettingValueAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-112">At minimum, a settings provider must recognize three attributes—<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, and <xref:System.Configuration.DefaultSettingValueAttribute>.</span></span> <span data-ttu-id="2f8ca-113">응용 프로그램 설정에 적용할 수 있는 특성의 전체 목록을 보려면 [응용 프로그램 설정 특성](~/docs/framework/winforms/advanced/application-settings-attributes.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-113">For a full listing of attributes that can be applied to application settings, see [Application Settings Attributes](~/docs/framework/winforms/advanced/application-settings-attributes.md).</span></span> <span data-ttu-id="2f8ca-114">사용자 지정 설정 공급자는 다음과 같이 설정 속성에 적용 된 특성을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-114">A custom setting provider should resolve attributes applied to settings properties in the following manner:</span></span>  
  
1.  <span data-ttu-id="2f8ca-115">공급자는 특성 사용 권한에 포함 된 요청을 수행할 수, 하는 경우 분명을 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-115">If the provider can fulfill the request implied by the attribute, obviously it should do so.</span></span>  
  
2.  <span data-ttu-id="2f8ca-116">공급자는 요청을 수행할 수 없습니다, 자동으로 무시 해야 것입니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-116">If the provider cannot fulfill the request, it should ignore it silently.</span></span>  
  
3.  <span data-ttu-id="2f8ca-117">둘 이상의 속성 충돌; 하는 경우 예를 들어 되 고으로 데코 레이트 된 속성이 <xref:System.Configuration.ApplicationScopedSettingAttribute> 및 <xref:System.Configuration.UserScopedSettingAttribute>; 공급자를 throw 해야는 <xref:System.Configuration.ConfigurationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-117">If two or more properties conflict; for example, a property being decorated with both <xref:System.Configuration.ApplicationScopedSettingAttribute> and <xref:System.Configuration.UserScopedSettingAttribute>; the provider should throw a <xref:System.Configuration.ConfigurationException>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f8ca-118">
          <see cref="T:System.Configuration.SettingsProvider" /> 클래스의 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-118">Initializes an instance of the <see cref="T:System.Configuration.SettingsProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8ca-119">이 추상 클래스에 대 한이 기본 보호 된 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-119">This is this default protected constructor for this abstract class.</span></span> <span data-ttu-id="2f8ca-120">파생 된 사용자 지정 설정 공급자 때문에 명시적 생성자를 제공 하지 않아도 됩니다는 <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> 메서드는 일반적으로 모든 초기화 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-120">Derived custom settings providers are not required to provide an explicit constructor because the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method typically performs all initialization.</span></span>  
  
 <span data-ttu-id="2f8ca-121">클라이언트 코드 일반적으로 직접 인스턴스화하지 않습니다 설정 공급자입니다. 다음 절차를 사용 하 여 특정 설정 속성에 대 한 설정 공급자를 찾을 수는 대신:</span><span class="sxs-lookup"><span data-stu-id="2f8ca-121">Client code typically does not directly instantiate a settings provider; instead, you use the following procedure to find a settings provider for a particular settings property:</span></span>  
  
1.  <span data-ttu-id="2f8ca-122">호출 된 <xref:System.ComponentModel.Component.GetService%2A> 메서드는 현재 상태에서 <xref:System.ComponentModel.Component> 또는 <xref:System.ComponentModel.ISite> 현재에 대 한 참조를 반환할 <xref:System.Configuration.ISettingsProviderService>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-122">Call the <xref:System.ComponentModel.Component.GetService%2A> method on the current <xref:System.ComponentModel.Component> or <xref:System.ComponentModel.ISite> to return a reference to the current <xref:System.Configuration.ISettingsProviderService>.</span></span>  
  
2.  <span data-ttu-id="2f8ca-123">호출 된 <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> 의 메서드는 <xref:System.Configuration.ISettingsProviderService> 설정 공급자를 반환할 첫 번째 단계에서 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-123">Call the <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> method of the <xref:System.Configuration.ISettingsProviderService> retrieved in the first step to return the settings provider.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f8ca-124">현재 실행되는 응용 프로그램의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-124">Gets or sets the name of the currently running application.</span></span></summary>
        <value><span data-ttu-id="2f8ca-125">A <see cref="T:System.String" /> 포함 하지 않는 전체 경로 또는 확장, 예를 들어, 응용 프로그램의 약식된 이름이 포함 된 <c>SimpleAppSettings</c>합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-125">A <see cref="T:System.String" /> that contains the application's shortened name, which does not contain a full path or extension, for example, <c>SimpleAppSettings</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8ca-126"><xref:System.Configuration.SettingsProvider.ApplicationName%2A> 및 <xref:System.Configuration.Provider.ProviderBase.Name%2A> 속성 마찬가지로 서로 다른 응용 프로그램에서 속성을 명명 된 설정 명확히 구분 하는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-126">The <xref:System.Configuration.SettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2f8ca-127">현재 응용 프로그램의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-127">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application use.</span></span></param>
        <param name="collection"><span data-ttu-id="2f8ca-128">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-128">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</span></span></param>
        <summary><span data-ttu-id="2f8ca-129">지정된 응용 프로그램 인스턴스와 설정 속성 그룹에 대한 설정 속성 값의 컬렉션을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-129">Returns the collection of settings property values for the specified application instance and settings property group.</span></span></summary>
        <returns><span data-ttu-id="2f8ca-130">지정된 설정 속성 그룹에 대한 값을 포함하는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-130">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8ca-131"><xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> 특수 설정을 처리를 구현 해야 합니다, 표시 된 <xref:System.Configuration.SpecialSettingAttribute>뿐만 아니라 응용 프로그램 및 사용자 설정 조정 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-131">The <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> method must be implemented to handle special settings, those marked with <xref:System.Configuration.SpecialSettingAttribute>, as well as reconcile application and user settings.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="2f8ca-132">현재 응용 프로그램의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-132">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</span></span></param>
        <param name="collection"><span data-ttu-id="2f8ca-133">설정할 속성 설정 그룹을 나타내는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-133">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</span></span></param>
        <summary><span data-ttu-id="2f8ca-134">지정된 속성 설정 그룹의 값을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-134">Sets the values of the specified group of property settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f8ca-135"><xref:System.Configuration.ApplicationSettingsBase> 포함의 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> 메서드 설정 속성의 모든 값을 유지 하기 위해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-135"><xref:System.Configuration.ApplicationSettingsBase> contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties.</span></span> <span data-ttu-id="2f8ca-136">이 메서드는 모든 설정을 통해 열거 설정 속성 및 호출와 연결 된 공급자는 <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> 메서드 각각에 대해 <xref:System.Configuration.SettingsProvider> 실제 serialization 작업을 수행 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-136">This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.</span></span>  
  
 <span data-ttu-id="2f8ca-137"><xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> 보안을 염두에 메서드를 구현 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-137">The <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method should be implemented with security in mind:</span></span>  
  
-   <span data-ttu-id="2f8ca-138">완전히 신뢰할 수 있는 코드에만 응용 프로그램 설정을 업데이트할 수 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-138">Only fully trusted code should be allowed to update application settings.</span></span> <span data-ttu-id="2f8ca-139">부분적으로 신뢰할 수 있는 코드가 사용자 응용 프로그램 설정에만 업데이트 되도록 허용 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-139">Partially trusted code should be allowed to update only user application settings.</span></span> <span data-ttu-id="2f8ca-140">신뢰할 수 없는 코드는 일반적으로 응용 프로그램 설정을 업데이트할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-140">Untrusted code is not typically allowed to update application settings.</span></span>  
  
-   <span data-ttu-id="2f8ca-141">사용 할당량을 부분적으로 신뢰할 수 있는 응용 프로그램에서 리소스 공격 으로부터 보호 하기 위해 고려해 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f8ca-141">Usage quotas should be considered to guard against resource attacks by partially trusted applications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>