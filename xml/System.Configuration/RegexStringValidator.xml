<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RegexStringValidator.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e5458353105d45285fe71eafb806742357686c8d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5458353105d45285fe71eafb806742357686c8d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Configuration.RegexStringValidator">
          <source>Provides validation of a string based on the rules provided by a regular expression.</source>
          <target state="translated">정규식으로 제공되는 규칙에 따라 문자열의 유효성을 검사합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.RegexStringValidator">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> object contains the rules necessary to validate a string object based on a regular expression.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> 개체는 정규식에 따라 문자열 개체의 유효성을 검사 하는 데 필요한 규칙을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.RegexStringValidator">
          <source>The rules are established when an instance of the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> class is created.</source>
          <target state="translated">규칙 설정의 인스턴스는 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> 클래스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.RegexStringValidator">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator.CanValidate%2A&gt;</ph> method determines whether the object type being validated matches the expected type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator.CanValidate%2A&gt;</ph> 메서드 유효성을 검사할 개체 유형이 예상된 유형과 일치 하는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.RegexStringValidator">
          <source>The object being validated is passed as a parameter of the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator.Validate%2A&gt;</ph> method.</source>
          <target state="translated">유효성 검사 중인 개체의 매개 변수로 전달 되는 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator.Validate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Configuration.RegexStringValidator">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> type.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> 유형입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
          <source>A string that specifies a regular expression.</source>
          <target state="translated">정규식을 지정하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Configuration.RegexStringValidator" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Configuration.RegexStringValidator" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="regex" /&gt;</ph> is null or an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="regex" /&gt;</ph>가 null이거나 빈 문자열("")인 경우</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
          <source>The type of object.</source>
          <target state="translated">개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
          <source>Determines whether the type of the object can be validated.</source>
          <target state="translated">개체 형식의 유효성을 검사할 수 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="type" /&gt;</ph> parameter matches a string; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="type" /&gt;</ph> 매개 변수가 문자열과 일치하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
          <source>An exception is thrown if the validation fails.</source>
          <target state="translated">유효성 검사에 실패 하는 경우 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator.CanValidate%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator.CanValidate%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
          <source>This code example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
          <source>The value of an object.</source>
          <target state="translated">개체의 값입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
          <source>Determines whether the value of an object is valid.</source>
          <target state="translated">개체의 값이 유효한지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> object contains the rules necessary to validate a string object based on a regular expression.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> 개체는 정규식에 따라 문자열 개체의 유효성을 검사 하는 데 필요한 규칙을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
          <source>The rules are established when an instance of the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> class is created.</source>
          <target state="translated">규칙 설정의 인스턴스는 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> 클래스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
          <source>The string object to validate is passed as a parameter of the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator.Validate%2A&gt;</ph> method.</source>
          <target state="translated">유효성을 검사할 문자열 개체의 매개 변수로 전달 되는 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator.Validate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator.Validate%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator.Validate%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Configuration.RegexStringValidator&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not conform to the parameters of the <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.Regex" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Text.RegularExpressions.Regex" /&gt;</ph> 클래스의 매개 변수와 일치하지 않는 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>