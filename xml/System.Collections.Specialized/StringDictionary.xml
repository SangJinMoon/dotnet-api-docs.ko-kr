<Type Name="StringDictionary" FullName="System.Collections.Specialized.StringDictionary">
  <TypeSignature Language="C#" Value="public class StringDictionary : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringDictionary extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.StringDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Class StringDictionary&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringDictionary : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Diagnostics.Design.StringDictionaryCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="746df-101">개체가 아니라 문자열로 강력하게 형식화된 키와 값을 사용하여 해시 테이블을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-101">Implements a hash table with the key and the value strongly typed to be strings rather than objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-102">키 일 수 없습니다 `null`, 값과는 수입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-102">A key cannot be `null`, but a value can.</span></span>  
  
 <span data-ttu-id="746df-103">키를 처리 하는 대/소문자 구분 방식 문자열 사전을 사용 하 여 사용 하기 전에 소문자로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-103">The key is handled in a case-insensitive manner; it is translated to lowercase before it is used with the string dictionary.</span></span>  
  
 <span data-ttu-id="746df-104">.NET Framework 버전 1.0에서이 클래스는 문화권 구분 문자열 비교를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-104">In .NET Framework version 1.0, this class uses culture-sensitive string comparisons.</span></span> <span data-ttu-id="746df-105">.NET Framework 1.1 이상 버전에서는이 클래스가 사용 하는 반면 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 문자열을 비교할 때.</span><span class="sxs-lookup"><span data-stu-id="746df-105">However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> when comparing strings.</span></span> <span data-ttu-id="746df-106">문화권 비교 및 정렬에 미치는 영향에 대 한 자세한 내용은 참조 [문화권을 구분 하지 않는 문자열 작업 수행](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-106">For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-107">다음 코드 예제에서는 여러 속성 및 메서드로 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-107">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/CPP/stringdictionary.cpp#1)]
 [!code-csharp[System.Collection.Specialized.StringDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/CS/stringdictionary.cs#1)]
 [!code-vb[System.Collection.Specialized.StringDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/VB/stringdictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="746df-108">공용 정적 (<see langword="Shared" /> Visual basic에서)이 형식의 멤버는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-108">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="746df-109">인터페이스 멤버는 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-109">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="746df-110">이 구현에서는 동기화 된 제공 하지 않습니다 (스레드로부터 안전함) 래퍼에 대 한는 <see cref="T:System.Collections.Specialized.StringDictionary" />, 파생 된 클래스의 동기화 된 고유 버전을 만들 수 있지만 <see cref="T:System.Collections.Specialized.StringDictionary" /> 를 사용 하는 <see cref="P:System.Collections.Specialized.StringDictionary.SyncRoot" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-110">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.Specialized.StringDictionary" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.Specialized.StringDictionary" /> using the <see cref="P:System.Collections.Specialized.StringDictionary.SyncRoot" /> property.</span></span>  
  
 <span data-ttu-id="746df-111">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-111">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="746df-112">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-112">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="746df-113">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-113">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.Hashtable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringDictionary.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="746df-114"><see cref="T:System.Collections.Specialized.StringDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-114">Initializes a new instance of the <see cref="T:System.Collections.Specialized.StringDictionary" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-115">이 생성자는 o (1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-115">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-116">다음 코드 예제에서는 여러 속성 및 메서드로 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-116">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/CPP/stringdictionary.cpp#1)]
 [!code-csharp[System.Collection.Specialized.StringDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/CS/stringdictionary.cs#1)]
 [!code-vb[System.Collection.Specialized.StringDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/VB/stringdictionary.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringDictionary.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="746df-117">추가할 엔트리의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-117">The key of the entry to add.</span></span></param>
        <param name="value"><span data-ttu-id="746df-118">추가할 엔트리의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-118">The value of the entry to add.</span></span> <span data-ttu-id="746df-119">값은 <see langword="null" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-119">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="746df-120">지정한 키와 값을 가지는 엔트리를 <see cref="T:System.Collections.Specialized.StringDictionary" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-120">Adds an entry with the specified key and value into the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-121">키를 처리 하는 대/소문자 구분 방식 문자열 사전에 추가 하기 전에 소문자로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-121">The key is handled in a case-insensitive manner; it is translated to lowercase before it is added to the string dictionary.</span></span>  
  
 <span data-ttu-id="746df-122">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="746df-122">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-123">다음 코드 예제에는 추가 요소를 제거 하는 방법을 보여 줍니다는 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-123">The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_AddRemove/CPP/stringdictionary_addremove.cpp#1)]
 [!code-csharp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_AddRemove/CS/stringdictionary_addremove.cs#1)]
 [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_AddRemove/VB/stringdictionary_addremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="746df-124"><paramref name="key" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="746df-124"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="746df-125">같은 키를 가지는 엔트리가 이미 <see cref="T:System.Collections.Specialized.StringDictionary" />에 있는 경우</span><span class="sxs-lookup"><span data-stu-id="746df-125">An entry with the same key already exists in the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="746df-126"><see cref="T:System.Collections.Specialized.StringDictionary" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="746df-126">The <see cref="T:System.Collections.Specialized.StringDictionary" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.StringDictionary.Remove(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringDictionary.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="746df-127"><see cref="T:System.Collections.Specialized.StringDictionary" />에서 모든 엔트리를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-127">Removes all entries from the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-128">이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.Specialized.StringDictionary.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-128">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringDictionary.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-129">다음 코드 예제에는 추가 요소를 제거 하는 방법을 보여 줍니다는 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-129">The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_AddRemove/CPP/stringdictionary_addremove.cpp#1)]
 [!code-csharp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_AddRemove/CS/stringdictionary_addremove.cs#1)]
 [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_AddRemove/VB/stringdictionary_addremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="746df-130"><see cref="T:System.Collections.Specialized.StringDictionary" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="746df-130">The <see cref="T:System.Collections.Specialized.StringDictionary" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringDictionary.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="746df-131"><see cref="T:System.Collections.Specialized.StringDictionary" />에서 찾을 수 있는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-131">The key to locate in the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></param>
        <summary><span data-ttu-id="746df-132"><see cref="T:System.Collections.Specialized.StringDictionary" />에 특정 키가 들어 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-132">Determines if the <see cref="T:System.Collections.Specialized.StringDictionary" /> contains a specific key.</span></span></summary>
        <returns>
          <span data-ttu-id="746df-133">지정된 키가 있는 항목이 <see cref="T:System.Collections.Specialized.StringDictionary" />에 포함되어 있으면 <see langword="true" />이고, 포함되어 있지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-133"><see langword="true" /> if the <see cref="T:System.Collections.Specialized.StringDictionary" /> contains an entry with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-134">키를 처리 하는 대/소문자 구분 방식 사용 하기 전에 소문자로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-134">The key is handled in a case-insensitive manner; it is translated to lowercase before it is used.</span></span>  
  
 <span data-ttu-id="746df-135">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="746df-135">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="746df-136">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 에 대 한 메서드 `item` 확인 하려면 여부 `item` 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-136">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists.</span></span> <span data-ttu-id="746df-137">.NET Framework의 이전 버전에서는이 확인 작업을 수행를 사용 하 여는 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-137">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-138">다음 코드 예제에서 요소를 검색 한 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-138">The following code example searches for an element in a <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary_Contains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Contains/CPP/stringdictionary_contains.cpp#1)]
 [!code-csharp[System.Collection.Specialized.StringDictionary_Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Contains/CS/stringdictionary_contains.cs#1)]
 [!code-vb[System.Collection.Specialized.StringDictionary_Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Contains/VB/stringdictionary_contains.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="746df-139">키가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="746df-139">The key is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringDictionary.ContainsValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="746df-140">
          <see cref="T:System.Collections.Specialized.StringDictionary" />에서 찾을 값입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-140">The value to locate in the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span> <span data-ttu-id="746df-141">값은 <see langword="null" />이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-141">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="746df-142"><see cref="T:System.Collections.Specialized.StringDictionary" />에 특정 값이 들어 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-142">Determines if the <see cref="T:System.Collections.Specialized.StringDictionary" /> contains a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="746df-143"><see langword="true" />에 지정한 값이 있는 요소가 포함되어 있으면 <see cref="T:System.Collections.Specialized.StringDictionary" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-143"><see langword="true" /> if the <see cref="T:System.Collections.Specialized.StringDictionary" /> contains an element with the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-144">사용 하 여 지정 된 값에는 StringDictionary 요소 값이 비교 되는 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="746df-144">The values of the elements of the StringDictionary are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="746df-145">이 메서드는 선형 검색; 수행 따라서 평균 실행 시간에 비례 하는 <xref:System.Collections.Specialized.StringDictionary.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-145">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.Specialized.StringDictionary.Count%2A>.</span></span> <span data-ttu-id="746df-146">즉,이 메서드는는 O (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.Specialized.StringDictionary.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-146">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringDictionary.Count%2A>.</span></span>  
  
 <span data-ttu-id="746df-147">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 에 대 한 메서드 `item` 확인 하려면 여부 `item` 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-147">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists.</span></span> <span data-ttu-id="746df-148">.NET Framework의 이전 버전에서는이 확인 작업을 수행를 사용 하 여는 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-148">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-149">다음 코드 예제에서 요소를 검색 한 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-149">The following code example searches for an element in a <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary_Contains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Contains/CPP/stringdictionary_contains.cpp#1)]
 [!code-csharp[System.Collection.Specialized.StringDictionary_Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Contains/CS/stringdictionary_contains.cs#1)]
 [!code-vb[System.Collection.Specialized.StringDictionary_Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Contains/VB/stringdictionary_contains.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="746df-150"><see cref="T:System.Array" />에서 복사된 값의 대상인 1차원 <see cref="T:System.Collections.Specialized.StringDictionary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-150">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></param>
        <param name="index"><span data-ttu-id="746df-151">복사를 시작할 배열의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-151">The index in the array where copying begins.</span></span></param>
        <summary><span data-ttu-id="746df-152">문자열 사전 값을 1차원 <see cref="T:System.Array" /> 인스턴스의 지정한 인덱스에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-152">Copies the string dictionary values to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-153"><xref:System.Collections.Specialized.StringDictionary.CopyTo%2A> 형식으로 캐스팅 될 개체 복사 <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-153"><xref:System.Collections.Specialized.StringDictionary.CopyTo%2A> copies objects that can be typecast to <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType>.</span></span> <span data-ttu-id="746df-154"><xref:System.Collections.DictionaryEntry> 키와 값을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-154"><xref:System.Collections.DictionaryEntry> contains both the key and the value.</span></span>  
  
 <span data-ttu-id="746df-155">에 복사 된 요소는 <xref:System.Array> 열거자가 반복 하는 순서 대로 정렬 되는 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-155">The elements copied to the <xref:System.Array> are sorted in the same order that the enumerator iterates through the <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 <span data-ttu-id="746df-156">이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.Specialized.StringDictionary.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-156">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.StringDictionary.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-157">다음 코드 예제에서는 배열에는 StringDictionary 수 복사 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="746df-157">The following code example shows how a StringDictionary can be copied to an array.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringDictionary.CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringDictionary.CopyTo/CPP/stringdictionary_copyto.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringDictionary.CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringDictionary.CopyTo/CS/stringdictionary_copyto.cs#1)]
 [!code-vb[System.Collections.Specialized.StringDictionary.CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringDictionary.CopyTo/VB/stringdictionary_copyto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="746df-158"><paramref name="array" />가 다차원 배열인 경우</span><span class="sxs-lookup"><span data-stu-id="746df-158"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="746df-159">또는</span><span class="sxs-lookup"><span data-stu-id="746df-159">-or-</span></span>  
  
 <span data-ttu-id="746df-160"><see cref="T:System.Collections.Specialized.StringDictionary" />의 요소 수가 <paramref name="index" />부터 <paramref name="array" /> 끝까지의 사용 가능한 공간보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="746df-160">The number of elements in the <see cref="T:System.Collections.Specialized.StringDictionary" /> is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="746df-161"><paramref name="array" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="746df-161"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="746df-162"><paramref name="index" />가 <paramref name="array" />의 하한값보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-162"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringDictionary.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="746df-163"><see cref="T:System.Collections.Specialized.StringDictionary" />에 있는 키/값 쌍의 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="746df-163">Gets the number of key/value pairs in the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></summary>
        <value><span data-ttu-id="746df-164"><see cref="T:System.Collections.Specialized.StringDictionary" />에 있는 키/값 쌍의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-164">The number of key/value pairs in the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span>  
  
 <span data-ttu-id="746df-165">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-165">Retrieving the value of this property is an O(1) operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="746df-166">요소를 열거 하는 다음 코드 예제는 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-166">The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/CPP/stringdictionary_enumeration.cpp#1)]
 [!code-csharp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/CS/stringdictionary_enumeration.cs#1)]
 [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/VB/stringdictionary_enumeration.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="746df-167">문자열 사전을 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-167">Returns an enumerator that iterates through the string dictionary.</span></span></summary>
        <returns><span data-ttu-id="746df-168">문자열 사전을 반복하는 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-168">An <see cref="T:System.Collections.IEnumerator" /> that iterates through the string dictionary.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-169">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `for each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="746df-169">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="746df-170">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-170">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="746df-171">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-171">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="746df-172">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-172">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="746df-173"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-173"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="746df-174">이 위치에서 <xref:System.Collections.IEnumerator.Current%2A>는 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-174">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="746df-175">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-175">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="746df-176"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-176"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="746df-177"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-177"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="746df-178">경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-178">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="746df-179">열거자가 있는 경우이 위치에 대 한 후속 호출에서 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-179">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="746df-180">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`, <xref:System.Collections.IEnumerator.Current%2A> 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-180">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="746df-181"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-181">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="746df-182">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-182">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="746df-183">컬렉션에 대해 변경 내용을 수행하면(예: 요소 추가, 수정 또는 삭제) 열거자는 복구 불가능하게 무효화되고 해당 동작은 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-183">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="746df-184">열거자는 컬렉션에 배타적으로 액세스하지 못하므로 컬렉션을 열거하는 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="746df-184">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="746df-185">열거 동안 스레드 보안을 보장하려면 전체 열거 동안 컬렉션을 잠그면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-185">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="746df-186">여러 스레드에서 컬렉션에 액세스하여 읽고 쓸 수 있도록 허용하려면 사용자 지정 동기화를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-186">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="746df-187">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="746df-187">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-188">요소를 열거 하는 다음 코드 예제는 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-188">The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/CPP/stringdictionary_enumeration.cpp#1)]
 [!code-csharp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/CS/stringdictionary_enumeration.cs#1)]
 [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/VB/stringdictionary_enumeration.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringDictionary.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="746df-189"><see cref="T:System.Collections.Specialized.StringDictionary" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="746df-189">Gets a value indicating whether access to the <see cref="T:System.Collections.Specialized.StringDictionary" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="746df-190"><see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.Specialized.StringDictionary" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-190"><see langword="true" /> if access to the <see cref="T:System.Collections.Specialized.StringDictionary" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-191">A <xref:System.Collections.Specialized.StringDictionary> 인스턴스 동기화 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-191">A <xref:System.Collections.Specialized.StringDictionary> instance is not synchronized.</span></span> <span data-ttu-id="746df-192">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 <xref:System.Collections.Specialized.StringDictionary> 를 사용 하 여 <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="746df-192">Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.StringDictionary> using the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="746df-193">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-193">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="746df-194">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-194">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="746df-195">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-195">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-196">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> 열거 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-196">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/CPP/source2.cpp#2)]
 [!code-csharp[System.Collection.Specialized.StringDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/CS/source2.cs#2)]
 [!code-vb[System.Collection.Specialized.StringDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/VB/source2.vb#2)]  
  
 <span data-ttu-id="746df-197">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-197">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringDictionary.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="746df-198">가져오거나 설정할 값이 있는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-198">The key whose value to get or set.</span></span></param>
        <summary><span data-ttu-id="746df-199">지정된 키에 연결된 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-199">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="746df-200">지정한 키와 연결된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-200">The value associated with the specified key.</span></span> <span data-ttu-id="746df-201">지정한 키가 없을 때 Get을 사용하면 <see langword="null" />이 반환되고 Set을 사용하면 지정한 키의 새 엔트리가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="746df-201">If the specified key is not found, Get returns <see langword="null" />, and Set creates a new entry with the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-202">키를 처리 하는 대/소문자 구분 방식 사용 하기 전에 소문자로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-202">The key is handled in a case-insensitive manner; it is translated to lowercase before it is used.</span></span>  
  
 <span data-ttu-id="746df-203">키 일 수 없습니다 `null`, 값과는 수입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-203">A key cannot be `null`, but a value can.</span></span> <span data-ttu-id="746df-204">구분 하기 위해 `null` 지정된 된 키를 찾을 수 없으므로 반환 되는 및 `null` 지정된 된 키의 값은 반환 되는 `null`를 사용 하 여는 <xref:System.Collections.Specialized.StringDictionary.ContainsKey%2A> 목록에 키가 있는지 확인 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="746df-204">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Specialized.StringDictionary.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="746df-205">C# 언어의 키워드를 사용 하 여 구현 하는 대신 인덱서를 정의 하는 <xref:System.Collections.Specialized.StringDictionary.Item%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-205">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.StringDictionary.Item%2A> property.</span></span> <span data-ttu-id="746df-206">Visual Basic에서는 동일한 인덱싱 기능을 제공하는 <xref:System.Collections.Specialized.StringDictionary.Item%2A>을 기본 속성으로 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-206">Visual Basic implements <xref:System.Collections.Specialized.StringDictionary.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="746df-207">이 속성의 값을 검색 하 하는 것은 o (1) 연산입니다. o (1) 작업 이기도 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-207">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-208">요소를 열거 하는 다음 코드 예제는 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-208">The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/CPP/stringdictionary_enumeration.cpp#1)]
 [!code-csharp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/CS/stringdictionary_enumeration.cs#1)]
 [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/VB/stringdictionary_enumeration.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="746df-209"><paramref name="key" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="746df-209"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringDictionary.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="746df-210"><see cref="T:System.Collections.Specialized.StringDictionary" />에 있는 키의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="746df-210">Gets a collection of keys in the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></summary>
        <value><span data-ttu-id="746df-211"><see cref="T:System.Collections.ICollection" />의 키를 제공하는 <see cref="T:System.Collections.Specialized.StringDictionary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-211">An <see cref="T:System.Collections.ICollection" /> that provides the keys in the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-212">에 있는 키의 순서는 <xref:System.Collections.ICollection> 지정 되어 있지에 연결 된 값과 순서가 동일 하지만 <xref:System.Collections.ICollection> 에서 반환 되는 <xref:System.Collections.Specialized.StringDictionary.Values%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="746df-212">The order of the keys in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.StringDictionary.Values%2A> method.</span></span>  
  
 <span data-ttu-id="746df-213">반환 된 <xref:System.Collections.ICollection> 정적 복사 하지 않습니다; 대신는 <xref:System.Collections.ICollection> 원래에서 키를 다시 참조할 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-213">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Specialized.StringDictionary>.</span></span> <span data-ttu-id="746df-214">따라서 변경는 <xref:System.Collections.Specialized.StringDictionary> 계속에 반영 됩니다는 <xref:System.Collections.ICollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-214">Therefore, changes to the <xref:System.Collections.Specialized.StringDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="746df-215">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-215">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-216">요소를 열거 하는 다음 코드 예제는 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-216">The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/CPP/stringdictionary_enumeration.cpp#1)]
 [!code-csharp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/CS/stringdictionary_enumeration.cs#1)]
 [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/VB/stringdictionary_enumeration.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringDictionary.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="746df-217">제거할 엔트리의 키입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-217">The key of the entry to remove.</span></span></param>
        <summary><span data-ttu-id="746df-218">문자열 사전에서 지정한 키를 가지는 엔트리를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-218">Removes the entry with the specified key from the string dictionary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-219">경우는 <xref:System.Collections.Specialized.StringDictionary> 지정된 키를 가진 요소가 포함 되지 않습니다는 <xref:System.Collections.Specialized.StringDictionary> 그대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-219">If the <xref:System.Collections.Specialized.StringDictionary> does not contain an element with the specified key, the <xref:System.Collections.Specialized.StringDictionary> remains unchanged.</span></span> <span data-ttu-id="746df-220">예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-220">No exception is thrown.</span></span>  
  
 <span data-ttu-id="746df-221">키를 처리 하는 대/소문자 구분 방식 문자열 사전에서 제거할 항목을 찾을 사용 하기 전에 소문자로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-221">The key is handled in a case-insensitive manner; it is translated to lowercase before it is used to find the entry to remove from the string dictionary.</span></span>  
  
 <span data-ttu-id="746df-222">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="746df-222">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-223">다음 코드 예제에는 추가 요소를 제거 하는 방법을 보여 줍니다는 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-223">The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_AddRemove/CPP/stringdictionary_addremove.cpp#1)]
 [!code-csharp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_AddRemove/CS/stringdictionary_addremove.cs#1)]
 [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_AddRemove/VB/stringdictionary_addremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="746df-224">키가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="746df-224">The key is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="746df-225"><see cref="T:System.Collections.Specialized.StringDictionary" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="746df-225">The <see cref="T:System.Collections.Specialized.StringDictionary" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.StringDictionary.Add(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringDictionary.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="746df-226"><see cref="T:System.Collections.Specialized.StringDictionary" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="746df-226">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></summary>
        <value><span data-ttu-id="746df-227"><see cref="T:System.Object" />에 대한 액세스를 동기화하는 데 사용할 수 있는 <see cref="T:System.Collections.Specialized.StringDictionary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-227">An <see cref="T:System.Object" /> that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-228">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 <xref:System.Collections.Specialized.StringDictionary> 를 사용 하 여 <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="746df-228">Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.StringDictionary> using the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> property.</span></span> <span data-ttu-id="746df-229">동기화 하는 코드에서 작업을 수행 해야는 <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> 의 <xref:System.Collections.Specialized.StringDictionary>에서 직접는 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-229">The synchronizing code must perform operations on the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> of the <xref:System.Collections.Specialized.StringDictionary>, not directly on the <xref:System.Collections.Specialized.StringDictionary>.</span></span> <span data-ttu-id="746df-230">이렇게 하면 다른 개체에서 파생되는 컬렉션에 대해 적절한 작업이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-230">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="746df-231">특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 <xref:System.Collections.Specialized.StringDictionary> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-231">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.StringDictionary> object.</span></span>  
  
 <span data-ttu-id="746df-232">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="746df-232">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="746df-233">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-233">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="746df-234">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="746df-234">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-235">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> 열거 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-235">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/CPP/source2.cpp#2)]
 [!code-csharp[System.Collection.Specialized.StringDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/CS/source2.cs#2)]
 [!code-vb[System.Collection.Specialized.StringDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary/VB/source2.vb#2)]  
  
 <span data-ttu-id="746df-236">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-236">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringDictionary.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="746df-237"><see cref="T:System.Collections.Specialized.StringDictionary" />에 있는 값의 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="746df-237">Gets a collection of values in the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></summary>
        <value><span data-ttu-id="746df-238"><see cref="T:System.Collections.ICollection" />의 값을 제공하는 <see cref="T:System.Collections.Specialized.StringDictionary" />입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-238">An <see cref="T:System.Collections.ICollection" /> that provides the values in the <see cref="T:System.Collections.Specialized.StringDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="746df-239">에 있는 값의 순서는 <xref:System.Collections.ICollection> 지정 되어 있지는 연결 된 키와 순서가 동일 하지만 <xref:System.Collections.ICollection> 에서 반환 되는 <xref:System.Collections.Specialized.StringDictionary.Keys%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="746df-239">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.StringDictionary.Keys%2A> method.</span></span>  
  
 <span data-ttu-id="746df-240">반환 된 <xref:System.Collections.ICollection> 정적 복사 하지 않습니다; 대신는 <xref:System.Collections.ICollection> 원래에서 값을 다시 참조 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-240">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Specialized.StringDictionary>.</span></span> <span data-ttu-id="746df-241">따라서 변경는 <xref:System.Collections.Specialized.StringDictionary> 계속에 반영 됩니다는 <xref:System.Collections.ICollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-241">Therefore, changes to the <xref:System.Collections.Specialized.StringDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="746df-242">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="746df-242">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="746df-243">요소를 열거 하는 다음 코드 예제는 <xref:System.Collections.Specialized.StringDictionary>합니다.</span><span class="sxs-lookup"><span data-stu-id="746df-243">The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.</span></span>  
  
 [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/CPP/values.cpp#2)]
 [!code-csharp[System.Collection.Specialized.StringDictionary_Enumeration#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/CS/values.cs#2)]
 [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collection.Specialized.StringDictionary_Enumeration/VB/values.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>