<Type Name="CollectionsUtil" FullName="System.Collections.Specialized.CollectionsUtil">
  <TypeSignature Language="C#" Value="public class CollectionsUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CollectionsUtil extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.CollectionsUtil" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionsUtil" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionsUtil" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0fd32-101">문자열의 대/소문자를 무시하는 컬렉션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-101">Creates collections that ignore the case in strings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fd32-102">이러한 메서드는 대/소문자 구분 구현의 해시 코드 공급자와 비교자를 사용 하 여 컬렉션의 대/소문자 구분 된 인스턴스를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-102">These methods generate a case-insensitive instance of the collection using case-insensitive implementations of the hash code provider and the comparer.</span></span> <span data-ttu-id="0fd32-103">다르게 작동할 수 있지만 해당 클래스의 다른 인스턴스와 마찬가지로 결과 인스턴스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-103">The resulting instance can be used like any other instances of that class, although it may behave differently.</span></span>  
  
 <span data-ttu-id="0fd32-104">"HELLO"는 해시 테이블에 추가 하 고 예를 들어 "hello" 키를 가진 두 개체를 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-104">For example, suppose two objects with the keys "hello" and "HELLO" are to be added to a hash table.</span></span> <span data-ttu-id="0fd32-105">대/소문자 구분 해시 테이블에 두 개의 다른 항목; 발생 합니다. 반면 두 번째 개체를 추가 하는 경우 대/소문자 구분 해시 테이블에서 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-105">A case-sensitive hash table would create two different entries; whereas, a case-insensitive hash table would throw an exception when adding the second object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fd32-106">다음 예제에서는 해시 테이블 및 정렬된 된 목록에서는 두 개의 컬렉션을 사용 하 여 도시 그룹에 대 한 인구 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-106">The following example uses two collections, a hash table and a sorted list, to hold population values for a group of cities.</span></span> <span data-ttu-id="0fd32-107">값은 도시 이름을 키로 사용 하 여 컬렉션에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-107">The values are retrieved from the collections by using the city names as keys.</span></span> <span data-ttu-id="0fd32-108">도시 이름은 대/소문자 구분 키로 사용을 표시 하려면 대/소문자를 혼합된에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-108">The city names are in mixed case to show their use as case-insensitive keys.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.CollectionsUtil#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.collections.specialized.collectionsutil/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.Specialized.CollectionsUtil#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.specialized.collectionsutil/cs/source.cs#1)]
 [!code-vb[System.Collections.Specialized.CollectionsUtil#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.specialized.collectionsutil/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="0fd32-109">A <see cref="T:System.Collections.Hashtable" /> 동시 지원할 수 있습니다 하나 기록기 및 다중 판독기입니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-109">A <see cref="T:System.Collections.Hashtable" /> can support one writer and multiple readers concurrently.</span></span> <span data-ttu-id="0fd32-110">반환 되는 래퍼를 통해 수행 해야 모든 작업을 지원 하기 위해 여러 작성기는 <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0fd32-110">To support multiple writers, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> method.</span></span>  
  
 <span data-ttu-id="0fd32-111">A <see cref="T:System.Collections.SortedList" /> 수 여러 판독기 동시에 지원할으로 컬렉션은 수정 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-111">A <see cref="T:System.Collections.SortedList" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="0fd32-112">스레드로부터 안전을 보장 하려면는 <see cref="T:System.Collections.SortedList" />에서 반환 되는 래퍼를 통해 모든 작업을 완료 해야 합니다는 <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0fd32-112">To guarantee the thread safety of the <see cref="T:System.Collections.SortedList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> method.</span></span>  
  
 <span data-ttu-id="0fd32-113">컬렉션을 열거 하는 스레드로부터 안전한 프로시저가 아닙니다 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-113">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="0fd32-114">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-114">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="0fd32-115">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-115">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="N:System.Collections" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionsUtil ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.CollectionsUtil.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CollectionsUtil();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0fd32-116"><see cref="T:System.Collections.Specialized.CollectionsUtil" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-116">Initializes a new instance of the <see cref="T:System.Collections.Specialized.CollectionsUtil" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCaseInsensitiveHashtable">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0fd32-117">문자열의 대/소문자를 구분하지 않는 <see cref="T:System.Collections.Hashtable" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-117">Creates a new instance of the <see cref="T:System.Collections.Hashtable" /> class that ignores the case of strings.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCaseInsensitiveHashtable">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable CreateCaseInsensitiveHashtable ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable CreateCaseInsensitiveHashtable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCaseInsensitiveHashtable () As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ CreateCaseInsensitiveHashtable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0fd32-118">기본 초기 용량을 갖는 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-118">Creates a new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class with the default initial capacity.</span></span></summary>
        <returns><span data-ttu-id="0fd32-119">기본 초기 용량을 갖는 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-119">A new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class with the default initial capacity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fd32-120">사용 하는 대신는 <xref:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable%2A> 메서드를 사용 하 여는 <xref:System.Collections.Hashtable.%23ctor%28System.Collections.IEqualityComparer%29?displayProperty=nameWithType> 는 대/소문자 구분을 만드는 데 생성자 <xref:System.Collections.Hashtable> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-120">Instead of using the <xref:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable%2A> method, use the <xref:System.Collections.Hashtable.%23ctor%28System.Collections.IEqualityComparer%29?displayProperty=nameWithType> constructor to create a case-insensitive <xref:System.Collections.Hashtable> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName="CreateCaseInsensitiveHashtable">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable CreateCaseInsensitiveHashtable (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable CreateCaseInsensitiveHashtable(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCaseInsensitiveHashtable (d As IDictionary) As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ CreateCaseInsensitiveHashtable(System::Collections::IDictionary ^ d);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="0fd32-121">대/소문자를 구분하지 않는 새 <see cref="T:System.Collections.IDictionary" />로 복사할 <see cref="T:System.Collections.Hashtable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-121">The <see cref="T:System.Collections.IDictionary" /> to copy to a new case-insensitive <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="0fd32-122">지정된 사전의 항목을 복사된 항목의 수와 초기 용량이 같은 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스로 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-122">Copies the entries from the specified dictionary to a new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class with the same initial capacity as the number of entries copied.</span></span></summary>
        <returns><span data-ttu-id="0fd32-123">지정된 <see cref="T:System.Collections.Hashtable" />의 항목을 포함하는 <see cref="T:System.Collections.IDictionary" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-123">A new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class containing the entries from the specified <see cref="T:System.Collections.IDictionary" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fd32-124">사용 하는 대신는 <xref:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable%2A> 메서드를 사용 하 여는 <xref:System.Collections.Hashtable.%23ctor%28System.Collections.IDictionary%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> 는 대/소문자 구분을 만드는 데 생성자 <xref:System.Collections.Hashtable> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-124">Instead of using the <xref:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable%2A> method, use the <xref:System.Collections.Hashtable.%23ctor%28System.Collections.IDictionary%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> constructor to create a case-insensitive <xref:System.Collections.Hashtable> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0fd32-125"><paramref name="d" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="0fd32-125"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName="CreateCaseInsensitiveHashtable">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable CreateCaseInsensitiveHashtable (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable CreateCaseInsensitiveHashtable(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCaseInsensitiveHashtable (capacity As Integer) As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ CreateCaseInsensitiveHashtable(int capacity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="0fd32-126"><see cref="T:System.Collections.Hashtable" />가 처음에 포함할 수 있는 대략적인 엔트리 수입니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-126">The approximate number of entries that the <see cref="T:System.Collections.Hashtable" /> can initially contain.</span></span></param>
        <summary><span data-ttu-id="0fd32-127">초기 용량이 지정된 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-127">Creates a new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class with the specified initial capacity.</span></span></summary>
        <returns><span data-ttu-id="0fd32-128">초기 용량이 지정된 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-128">A new case-insensitive instance of the <see cref="T:System.Collections.Hashtable" /> class with the specified initial capacity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fd32-129">사용 하는 대신는 <xref:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable%2A> 메서드를 사용 하 여는 <xref:System.Collections.Hashtable.%23ctor%28System.Int32%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> 는 대/소문자 구분을 만드는 데 생성자 <xref:System.Collections.Hashtable> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-129">Instead of using the <xref:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable%2A> method, use the <xref:System.Collections.Hashtable.%23ctor%28System.Int32%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> constructor to create a case-insensitive <xref:System.Collections.Hashtable> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0fd32-130"><paramref name="capacity" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="0fd32-130"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName="CreateCaseInsensitiveSortedList">
      <MemberSignature Language="C#" Value="public static System.Collections.SortedList CreateCaseInsensitiveSortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.SortedList CreateCaseInsensitiveSortedList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCaseInsensitiveSortedList () As SortedList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::SortedList ^ CreateCaseInsensitiveSortedList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.SortedList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0fd32-131">문자열의 대/소문자를 구분하지 않는 <see cref="T:System.Collections.SortedList" /> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-131">Creates a new instance of the <see cref="T:System.Collections.SortedList" /> class that ignores the case of strings.</span></span></summary>
        <returns><span data-ttu-id="0fd32-132">문자열의 대/소문자를 구분하지 않는 <see cref="T:System.Collections.SortedList" /> 클래스의 새 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-132">A new instance of the <see cref="T:System.Collections.SortedList" /> class that ignores the case of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fd32-133">새 <xref:System.Collections.SortedList> 인스턴스에 따라 정렬 되는 <xref:System.Collections.CaseInsensitiveComparer>합니다.</span><span class="sxs-lookup"><span data-stu-id="0fd32-133">The new <xref:System.Collections.SortedList> instance is sorted according to the <xref:System.Collections.CaseInsensitiveComparer>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.SortedList" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
  </Members>
</Type>